
+###io/trino/split/SampledSplitSource
@351
+#<init>(Lio/trino/split/SplitSource;D)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;Lio/trino/execution/Lifespan;I)Lcom/google/common/util/concurrent/ListenableFuture;
+#close()V
+#isFinished()Z
+#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@355
-#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@364
+#getTableExecuteSplitsInfo()Ljava/util/Optional;
@388
+#getNextBatch(I)Lcom/google/common/util/concurrent/ListenableFuture;
-#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;Lio/trino/execution/Lifespan;I)Lcom/google/common/util/concurrent/ListenableFuture;
@392
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/split/EmptySplitHandleResolver
@351
+#<init>()V
+#getTableHandleClass()Ljava/lang/Class;
+#getTableLayoutHandleClass()Ljava/lang/Class;
+#getColumnHandleClass()Ljava/lang/Class;
+#getSplitClass()Ljava/lang/Class;
@369
-#getTableLayoutHandleClass()Ljava/lang/Class;
@370
-###io/trino/split/EmptySplitHandleResolver

+###io/trino/split/PageSinkProvider
@351
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/OutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/InsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
@364
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)Lio/trino/spi/connector/ConnectorPageSink;
@393
+#createMergeSink(Lio/trino/Session;Lio/trino/metadata/MergeHandle;)Lio/trino/spi/connector/ConnectorMergeSink;
@401
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/OutputTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/InsertTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
+#createMergeSink(Lio/trino/Session;Lio/trino/metadata/MergeHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorMergeSink;
-#createPageSink(Lio/trino/Session;Lio/trino/metadata/OutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
-#createPageSink(Lio/trino/Session;Lio/trino/metadata/InsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
-#createPageSink(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)Lio/trino/spi/connector/ConnectorPageSink;
-#createMergeSink(Lio/trino/Session;Lio/trino/metadata/MergeHandle;)Lio/trino/spi/connector/ConnectorMergeSink;

+###io/trino/split/MappedRecordSet
@351
+#<init>(Lio/trino/spi/connector/RecordSet;Ljava/util/List;)V
+#getColumnTypes()Ljava/util/List;
+#cursor()Lio/trino/spi/connector/RecordCursor;

+###io/trino/split/RecordPageSourceProvider
@351
+#<init>(Lio/trino/spi/connector/ConnectorRecordSetProvider;)V
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;
@358
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorPageSource;
-#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;

+###io/trino/split/PageSourceManager
@351
+#<init>()V
+#addConnectorPageSourceProvider(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorPageSourceProvider;)V
+#removeConnectorPageSourceProvider(Lio/trino/connector/CatalogName;)V
+#createPageSource(Lio/trino/Session;Lio/trino/metadata/Split;Lio/trino/metadata/TableHandle;Ljava/util/List;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorPageSource;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#addConnectorPageSourceProvider(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorPageSourceProvider;)V
-#removeConnectorPageSourceProvider(Lio/trino/connector/CatalogName;)V

+###io/trino/split/RemoteSplit
@351
+#<init>(Ljava/net/URI;)V
+#getLocation()Ljava/net/URI;
+#getInfo()Ljava/lang/Object;
+#isRemotelyAccessible()Z
+#getAddresses()Ljava/util/List;
+#toString()Ljava/lang/String;
@366
+#<init>(Lio/trino/execution/TaskId;Ljava/net/URI;)V
+#getTaskId()Lio/trino/execution/TaskId;
-#<init>(Ljava/net/URI;)V
@368
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;)V
+#getLocation()Ljava/lang/String;
+#getRetainedSizeInBytes()J
-#<init>(Lio/trino/execution/TaskId;Ljava/net/URI;)V
-#getLocation()Ljava/net/URI;
@369
+#<init>(Lio/trino/split/RemoteSplit$ExchangeInput;)V
+#getExchangeInput()Lio/trino/split/RemoteSplit$ExchangeInput;
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;)V
-#getTaskId()Lio/trino/execution/TaskId;
-#getLocation()Ljava/lang/String;
@394
+#<init>(Lio/trino/exchange/ExchangeInput;)V
+#getExchangeInput()Lio/trino/exchange/ExchangeInput;
-#<init>(Lio/trino/split/RemoteSplit$ExchangeInput;)V
-#getExchangeInput()Lio/trino/split/RemoteSplit$ExchangeInput;

+###io/trino/split/EmptySplit
@351
+#<init>(Lio/trino/connector/CatalogName;)V
+#isRemotelyAccessible()Z
+#getAddresses()Ljava/util/List;
+#getInfo()Ljava/lang/Object;
+#getCatalogName()Lio/trino/connector/CatalogName;
@368
+#getRetainedSizeInBytes()J
@392
+#<init>(Lio/trino/connector/CatalogHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/split/BufferingSplitSource
@351
+#<init>(Lio/trino/split/SplitSource;I)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;Lio/trino/execution/Lifespan;I)Lcom/google/common/util/concurrent/ListenableFuture;
+#close()V
+#isFinished()Z
+#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@355
-#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@364
+#getTableExecuteSplitsInfo()Ljava/util/Optional;
@388
+#getNextBatch(I)Lcom/google/common/util/concurrent/ListenableFuture;
-#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;Lio/trino/execution/Lifespan;I)Lcom/google/common/util/concurrent/ListenableFuture;
@392
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/split/ConnectorAwareSplitSource
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorSplitSource;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;Lio/trino/execution/Lifespan;I)Lcom/google/common/util/concurrent/ListenableFuture;
+#close()V
+#isFinished()Z
+#getMinScheduleSplitBatchSize()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@355
-#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@364
+#getTableExecuteSplitsInfo()Ljava/util/Optional;
@388
+#getNextBatch(I)Lcom/google/common/util/concurrent/ListenableFuture;
-#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;Lio/trino/execution/Lifespan;I)Lcom/google/common/util/concurrent/ListenableFuture;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorSplitSource;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorSplitSource;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorSplitSource;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorSplitSource;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/split/PageSourceProvider
@351
+#createPageSource(Lio/trino/Session;Lio/trino/metadata/Split;Lio/trino/metadata/TableHandle;Ljava/util/List;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorPageSource;

+###io/trino/split/MappedPageSource
@351
+#<init>(Lio/trino/spi/connector/ConnectorPageSource;Ljava/util/List;)V
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#isFinished()Z
+#getNextPage()Lio/trino/spi/Page;
+#getSystemMemoryUsage()J
+#close()V
@369
+#getMemoryUsage()J
-#getSystemMemoryUsage()J

+###io/trino/split/SplitSource
@351
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;Lio/trino/execution/Lifespan;I)Lcom/google/common/util/concurrent/ListenableFuture;
+#close()V
+#isFinished()Z
+#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@355
-#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@364
+#getTableExecuteSplitsInfo()Ljava/util/Optional;
@388
+#getNextBatch(I)Lcom/google/common/util/concurrent/ListenableFuture;
-#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;Lio/trino/execution/Lifespan;I)Lcom/google/common/util/concurrent/ListenableFuture;
@392
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/split/PageSinkManager
@351
+#<init>()V
+#addConnectorPageSinkProvider(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorPageSinkProvider;)V
+#removeConnectorPageSinkProvider(Lio/trino/connector/CatalogName;)V
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/OutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/InsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
@364
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)Lio/trino/spi/connector/ConnectorPageSink;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#addConnectorPageSinkProvider(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorPageSinkProvider;)V
-#removeConnectorPageSinkProvider(Lio/trino/connector/CatalogName;)V
@393
+#createMergeSink(Lio/trino/Session;Lio/trino/metadata/MergeHandle;)Lio/trino/spi/connector/ConnectorMergeSink;
@401
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/OutputTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/InsertTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
+#createMergeSink(Lio/trino/Session;Lio/trino/metadata/MergeHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorMergeSink;
-#createPageSink(Lio/trino/Session;Lio/trino/metadata/OutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
-#createPageSink(Lio/trino/Session;Lio/trino/metadata/InsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
-#createPageSink(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)Lio/trino/spi/connector/ConnectorPageSink;
-#createMergeSink(Lio/trino/Session;Lio/trino/metadata/MergeHandle;)Lio/trino/spi/connector/ConnectorMergeSink;

+###io/trino/split/SplitManager
@351
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/metadata/Metadata;)V
+#addConnectorSplitManager(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorSplitManager;)V
+#removeConnectorSplitManager(Lio/trino/connector/CatalogName;)V
+#getSplits(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/split/SplitSource;
@365
+#getSplits(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/split/SplitSource;
-#getSplits(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/split/SplitSource;
@369
+#<init>(Lio/trino/execution/QueryManagerConfig;)V
-#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/metadata/Metadata;)V
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;Lio/trino/execution/QueryManagerConfig;)V
+#getSplits(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/split/SplitSource;
-#<init>(Lio/trino/execution/QueryManagerConfig;)V
-#addConnectorSplitManager(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorSplitManager;)V
-#removeConnectorSplitManager(Lio/trino/connector/CatalogName;)V
-#getSplits(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/split/SplitSource;
@409
+#getSplits(Lio/trino/Session;Lio/trino/metadata/TableFunctionHandle;)Lio/trino/split/SplitSource;

+###io/trino/split/SplitSource$SplitBatch
@351
+#<init>(Ljava/util/List;Z)V
+#getSplits()Ljava/util/List;
+#isLastBatch()Z

+###io/trino/ExceededMemoryLimitException
@351
+#exceededGlobalUserLimit(Lio/airlift/units/DataSize;)Lio/trino/ExceededMemoryLimitException;
+#exceededGlobalTotalLimit(Lio/airlift/units/DataSize;)Lio/trino/ExceededMemoryLimitException;
+#exceededLocalUserMemoryLimit(Lio/airlift/units/DataSize;Ljava/lang/String;)Lio/trino/ExceededMemoryLimitException;
+#exceededLocalTotalMemoryLimit(Lio/airlift/units/DataSize;Ljava/lang/String;)Lio/trino/ExceededMemoryLimitException;
@368
+#exceededTaskMemoryLimit(Lio/airlift/units/DataSize;Ljava/lang/String;)Lio/trino/ExceededMemoryLimitException;
@369
-#exceededLocalTotalMemoryLimit(Lio/airlift/units/DataSize;Ljava/lang/String;)Lio/trino/ExceededMemoryLimitException;
@374
-#exceededTaskMemoryLimit(Lio/airlift/units/DataSize;Ljava/lang/String;)Lio/trino/ExceededMemoryLimitException;

+###io/trino/transaction/TransactionInfo
@351
+#<init>(Lio/trino/transaction/TransactionId;Lio/trino/spi/transaction/IsolationLevel;ZZLorg/joda/time/DateTime;Lio/airlift/units/Duration;Ljava/util/List;Ljava/util/Optional;)V
+#getTransactionId()Lio/trino/transaction/TransactionId;
+#getIsolationLevel()Lio/trino/spi/transaction/IsolationLevel;
+#isReadOnly()Z
+#isAutoCommitContext()Z
+#getCreateTime()Lorg/joda/time/DateTime;
+#getIdleTime()Lio/airlift/units/Duration;
+#getCatalogNames()Ljava/util/List;
+#getWrittenConnectorId()Ljava/util/Optional;
@392
+#getWrittenCatalogName()Ljava/util/Optional;
-#getWrittenConnectorId()Ljava/util/Optional;
@408
+#<init>(Lio/trino/transaction/TransactionId;Lio/trino/spi/transaction/IsolationLevel;ZZLorg/joda/time/DateTime;Lio/airlift/units/Duration;Ljava/util/List;Ljava/util/Optional;Ljava/util/Set;)V
+#getActiveCatalogs()Ljava/util/Set;
-#<init>(Lio/trino/transaction/TransactionId;Lio/trino/spi/transaction/IsolationLevel;ZZLorg/joda/time/DateTime;Lio/airlift/units/Duration;Ljava/util/List;Ljava/util/Optional;)V

+###io/trino/transaction/TransactionManagerConfig
@351
+#<init>()V
+#getIdleCheckInterval()Lio/airlift/units/Duration;
+#setIdleCheckInterval(Lio/airlift/units/Duration;)Lio/trino/transaction/TransactionManagerConfig;
+#getIdleTimeout()Lio/airlift/units/Duration;
+#setIdleTimeout(Lio/airlift/units/Duration;)Lio/trino/transaction/TransactionManagerConfig;
+#getMaxFinishingConcurrency()I
+#setMaxFinishingConcurrency(I)Lio/trino/transaction/TransactionManagerConfig;

+###io/trino/transaction/NoOpTransactionManager
@351
+#<init>()V
+#transactionExists(Lio/trino/transaction/TransactionId;)Z
+#getTransactionInfo(Lio/trino/transaction/TransactionId;)Lio/trino/transaction/TransactionInfo;
+#getAllTransactionInfos()Ljava/util/List;
+#beginTransaction(Z)Lio/trino/transaction/TransactionId;
+#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;ZZ)Lio/trino/transaction/TransactionId;
+#getCatalogNames(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
+#getOptionalCatalogMetadata(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#checkAndSetActive(Lio/trino/transaction/TransactionId;)V
+#trySetActive(Lio/trino/transaction/TransactionId;)V
+#trySetInactive(Lio/trino/transaction/TransactionId;)V
+#asyncCommit(Lio/trino/transaction/TransactionId;)Lcom/google/common/util/concurrent/ListenableFuture;
+#asyncAbort(Lio/trino/transaction/TransactionId;)Lcom/google/common/util/concurrent/ListenableFuture;
+#fail(Lio/trino/transaction/TransactionId;)V
@364
+#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
-#getCatalogNames(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
@371
+#getCatalogName(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
@386
+#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/List;
-#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
@389
+#getTransactionInfoIfExist(Lio/trino/transaction/TransactionId;)Ljava/util/Optional;
@392
+#getCatalogHandle(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getCatalogName(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
-#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
-#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
-#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorTransactionHandle;
@393
+#getActiveCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/List;
@405
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
-#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
-#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
@408
+#getTransactionsUsingCatalog(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
+#blockCommit(Lio/trino/transaction/TransactionId;Ljava/lang/String;)V

+###io/trino/transaction/ForTransactionManager
@351

+###io/trino/transaction/TransactionManager
@351
+#transactionExists(Lio/trino/transaction/TransactionId;)Z
+#isAutoCommit(Lio/trino/transaction/TransactionId;)Z
+#getTransactionInfo(Lio/trino/transaction/TransactionId;)Lio/trino/transaction/TransactionInfo;
+#getAllTransactionInfos()Ljava/util/List;
+#beginTransaction(Z)Lio/trino/transaction/TransactionId;
+#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;ZZ)Lio/trino/transaction/TransactionId;
+#getCatalogNames(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
+#getOptionalCatalogMetadata(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#checkAndSetActive(Lio/trino/transaction/TransactionId;)V
+#trySetActive(Lio/trino/transaction/TransactionId;)V
+#trySetInactive(Lio/trino/transaction/TransactionId;)V
+#asyncCommit(Lio/trino/transaction/TransactionId;)Lcom/google/common/util/concurrent/ListenableFuture;
+#asyncAbort(Lio/trino/transaction/TransactionId;)Lcom/google/common/util/concurrent/ListenableFuture;
+#fail(Lio/trino/transaction/TransactionId;)V
+#activateTransaction(Lio/trino/Session;ZLio/trino/security/AccessControl;)V
@364
+#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
-#getCatalogNames(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
@371
+#getCatalogName(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
-#activateTransaction(Lio/trino/Session;ZLio/trino/security/AccessControl;)V
@386
+#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/List;
-#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
@389
+#getTransactionInfoIfExist(Lio/trino/transaction/TransactionId;)Ljava/util/Optional;
-#isAutoCommit(Lio/trino/transaction/TransactionId;)Z
@392
+#getCatalogHandle(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
+#getRequiredCatalogMetadata(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getCatalogName(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
-#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
-#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
-#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorTransactionHandle;
@393
+#getActiveCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/List;
@405
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
-#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
-#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
@408
+#getTransactionsUsingCatalog(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
+#blockCommit(Lio/trino/transaction/TransactionId;Ljava/lang/String;)V

+###io/trino/transaction/InMemoryTransactionManager
@351
+#create(Lio/trino/transaction/TransactionManagerConfig;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/metadata/CatalogManager;Ljava/util/concurrent/Executor;)Lio/trino/transaction/TransactionManager;
+#createTestTransactionManager()Lio/trino/transaction/TransactionManager;
+#createTestTransactionManager(Lio/trino/metadata/CatalogManager;)Lio/trino/transaction/TransactionManager;
+#transactionExists(Lio/trino/transaction/TransactionId;)Z
+#getTransactionInfo(Lio/trino/transaction/TransactionId;)Lio/trino/transaction/TransactionInfo;
+#getAllTransactionInfos()Ljava/util/List;
+#beginTransaction(Z)Lio/trino/transaction/TransactionId;
+#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;ZZ)Lio/trino/transaction/TransactionId;
+#getCatalogNames(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
+#getOptionalCatalogMetadata(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#checkAndSetActive(Lio/trino/transaction/TransactionId;)V
+#trySetActive(Lio/trino/transaction/TransactionId;)V
+#trySetInactive(Lio/trino/transaction/TransactionId;)V
+#asyncCommit(Lio/trino/transaction/TransactionId;)Lcom/google/common/util/concurrent/ListenableFuture;
+#asyncAbort(Lio/trino/transaction/TransactionId;)Lcom/google/common/util/concurrent/ListenableFuture;
+#fail(Lio/trino/transaction/TransactionId;)V
@364
+#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
-#getCatalogNames(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
@371
+#getCatalogName(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
@386
+#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/List;
-#getCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/Map;
@389
+#getTransactionInfoIfExist(Lio/trino/transaction/TransactionId;)Ljava/util/Optional;
@392
+#getCatalogHandle(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getCatalogName(Lio/trino/transaction/TransactionId;Ljava/lang/String;)Ljava/util/Optional;
-#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
-#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/metadata/CatalogMetadata;
-#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorTransactionHandle;
@393
+#getActiveCatalogs(Lio/trino/transaction/TransactionId;)Ljava/util/List;
-#createTestTransactionManager(Lio/trino/metadata/CatalogManager;)Lio/trino/transaction/TransactionManager;
@405
+#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
+#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getCatalogMetadata(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
-#getCatalogMetadataForWrite(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/metadata/CatalogMetadata;
-#getConnectorTransaction(Lio/trino/transaction/TransactionId;Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
@408
+#getTransactionsUsingCatalog(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
+#blockCommit(Lio/trino/transaction/TransactionId;Ljava/lang/String;)V

+###io/trino/transaction/TransactionId
@351
+#create()Lio/trino/transaction/TransactionId;
+#valueOf(Ljava/lang/String;)Lio/trino/transaction/TransactionId;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/transaction/InternalConnector
@351
+#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;Z)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#beginTransaction(Lio/trino/transaction/TransactionId;Lio/trino/spi/transaction/IsolationLevel;Z)Lio/trino/spi/connector/ConnectorTransactionHandle;
@365
+#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;ZZ)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;Z)Lio/trino/spi/connector/ConnectorTransactionHandle;

+###io/trino/transaction/TransactionBuilder
@351
+#transaction(Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;)Lio/trino/transaction/TransactionBuilder;
+#withIsolationLevel(Lio/trino/spi/transaction/IsolationLevel;)Lio/trino/transaction/TransactionBuilder;
+#readUncommitted()Lio/trino/transaction/TransactionBuilder;
+#readCommitted()Lio/trino/transaction/TransactionBuilder;
+#repeatableRead()Lio/trino/transaction/TransactionBuilder;
+#serializable()Lio/trino/transaction/TransactionBuilder;
+#readOnly()Lio/trino/transaction/TransactionBuilder;
+#singleStatement()Lio/trino/transaction/TransactionBuilder;
+#execute(Ljava/util/function/Consumer;)V
+#execute(Ljava/util/function/Function;)Ljava/lang/Object;
+#execute(Lio/trino/Session;Ljava/util/function/Consumer;)V
+#execute(Lio/trino/Session;Ljava/util/function/Function;)Ljava/lang/Object;

+###io/trino/SystemSessionProperties
@351
+#<init>()V
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/DynamicFilterConfig;)V
+#getSessionProperties()Ljava/util/List;
+#getExecutionPolicy(Lio/trino/Session;)Ljava/lang/String;
+#isOptimizeHashGenerationEnabled(Lio/trino/Session;)Z
+#getJoinDistributionType(Lio/trino/Session;)Lio/trino/sql/analyzer/FeaturesConfig$JoinDistributionType;
+#getJoinMaxBroadcastTableSize(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#isDistributedIndexJoinEnabled(Lio/trino/Session;)Z
+#getHashPartitionCount(Lio/trino/Session;)I
+#isGroupedExecutionEnabled(Lio/trino/Session;)Z
+#isDynamicScheduleForGroupedExecution(Lio/trino/Session;)Z
+#preferStreamingOperators(Lio/trino/Session;)Z
+#getTaskWriterCount(Lio/trino/Session;)I
+#isRedistributeWrites(Lio/trino/Session;)Z
+#isUsePreferredWritePartitioning(Lio/trino/Session;)Z
+#isScaleWriters(Lio/trino/Session;)Z
+#getWriterMinSize(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#isPushTableWriteThroughUnion(Lio/trino/Session;)Z
+#getTaskConcurrency(Lio/trino/Session;)I
+#isShareIndexLoading(Lio/trino/Session;)Z
+#isDictionaryAggregationEnabled(Lio/trino/Session;)Z
+#isOptimizeMetadataQueries(Lio/trino/Session;)Z
+#getQueryMaxMemory(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#getQueryMaxTotalMemory(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#getQueryMaxRunTime(Lio/trino/Session;)Lio/airlift/units/Duration;
+#getQueryMaxExecutionTime(Lio/trino/Session;)Lio/airlift/units/Duration;
+#resourceOvercommit(Lio/trino/Session;)Z
+#getQueryMaxStageCount(Lio/trino/Session;)I
+#planWithTableNodePartitioning(Lio/trino/Session;)Z
+#getJoinReorderingStrategy(Lio/trino/Session;)Lio/trino/sql/analyzer/FeaturesConfig$JoinReorderingStrategy;
+#getMaxReorderedJoins(Lio/trino/Session;)I
+#isColocatedJoinEnabled(Lio/trino/Session;)Z
+#isSpatialJoinEnabled(Lio/trino/Session;)Z
+#getSpatialPartitioningTableName(Lio/trino/Session;)Ljava/util/Optional;
+#getConcurrentLifespansPerNode(Lio/trino/Session;)Ljava/util/OptionalInt;
+#getInitialSplitsPerNode(Lio/trino/Session;)I
+#getQueryPriority(Lio/trino/Session;)I
+#getSplitConcurrencyAdjustmentInterval(Lio/trino/Session;)Lio/airlift/units/Duration;
+#getQueryMaxCpuTime(Lio/trino/Session;)Lio/airlift/units/Duration;
+#getQueryMaxScanPhysicalBytes(Lio/trino/Session;)Ljava/util/Optional;
+#isSpillEnabled(Lio/trino/Session;)Z
+#isSpillOrderBy(Lio/trino/Session;)Z
+#isSpillWindowOperator(Lio/trino/Session;)Z
+#getAggregationOperatorUnspillMemoryLimit(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#isOptimizeDistinctAggregationEnabled(Lio/trino/Session;)Z
+#getOptimizerTimeout(Lio/trino/Session;)Lio/airlift/units/Duration;
+#isEnableForcedExchangeBelowGroupId(Lio/trino/Session;)Z
+#isExchangeCompressionEnabled(Lio/trino/Session;)Z
+#isEnableIntermediateAggregations(Lio/trino/Session;)Z
+#isPushAggregationThroughOuterJoin(Lio/trino/Session;)Z
+#isPushPartialAggregationThroughJoin(Lio/trino/Session;)Z
+#isParseDecimalLiteralsAsDouble(Lio/trino/Session;)Z
+#isForceSingleNodeOutput(Lio/trino/Session;)Z
+#getFilterAndProjectMinOutputPageSize(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#getFilterAndProjectMinOutputPageRowCount(Lio/trino/Session;)I
+#useMarkDistinct(Lio/trino/Session;)Z
+#preferPartialAggregation(Lio/trino/Session;)Z
+#isOptimizeTopNRowNumber(Lio/trino/Session;)Z
+#isDistributedSortEnabled(Lio/trino/Session;)Z
+#getMaxRecursionDepth(Lio/trino/Session;)I
+#getMaxGroupingSets(Lio/trino/Session;)I
+#getMaxDriversPerTask(Lio/trino/Session;)Ljava/util/OptionalInt;
+#isStatisticsCpuTimerEnabled(Lio/trino/Session;)Z
+#isEnableStatsCalculator(Lio/trino/Session;)Z
+#isCollectPlanStatisticsForAllQueries(Lio/trino/Session;)Z
+#isIgnoreStatsCalculatorFailures(Lio/trino/Session;)Z
+#isDefaultFilterFactorEnabled(Lio/trino/Session;)Z
+#isUnwrapCasts(Lio/trino/Session;)Z
+#isSkipRedundantSort(Lio/trino/Session;)Z
+#isAllowPushdownIntoConnectors(Lio/trino/Session;)Z
+#isPredicatePushdownUseTableProperties(Lio/trino/Session;)Z
+#isLateMaterializationEnabled(Lio/trino/Session;)Z
+#isEnableDynamicFiltering(Lio/trino/Session;)Z
+#isEnableLargeDynamicFilters(Lio/trino/Session;)Z
+#getQueryMaxMemoryPerNode(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#getQueryMaxTotalMemoryPerNode(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#ignoreDownStreamPreferences(Lio/trino/Session;)Z
+#isIterativeRuleBasedColumnPruning(Lio/trino/Session;)Z
+#isRewriteFilteringSemiJoinToInnerJoin(Lio/trino/Session;)Z
+#getRequiredWorkers(Lio/trino/Session;)I
+#getRequiredWorkersMaxWait(Lio/trino/Session;)Lio/airlift/units/Duration;
+#getCostEstimationWorkerCount(Lio/trino/Session;)Ljava/lang/Integer;
+#isOmitDateTimeTypePrecision(Lio/trino/Session;)Z
@352
+#isOptimizeTopNRanking(Lio/trino/Session;)Z
+#isOptimizeDuplicateInsensitiveJoins(Lio/trino/Session;)Z
+#useLegacyWindowFilterPushdown(Lio/trino/Session;)Z
+#getJoinPushdownMode(Lio/trino/Session;)Lio/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode;
-#isOptimizeTopNRowNumber(Lio/trino/Session;)Z
@353
+#isPlanWithTableNodePartitioning(Lio/trino/Session;)Z
-#planWithTableNodePartitioning(Lio/trino/Session;)Z
-#getJoinPushdownMode(Lio/trino/Session;)Lio/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode;
@354
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/DynamicFilterConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#getPreferredWritePartitioningMinNumberOfPartitions(Lio/trino/Session;)I
+#getMaxUnacknowledgedSplitsPerTask(Lio/trino/Session;)I
-#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/DynamicFilterConfig;)V
@355
+#isUseTableScanNodePartitioning(Lio/trino/Session;)Z
+#getTableScanNodePartitioningMinBucketToTaskRatio(Lio/trino/Session;)D
-#isPlanWithTableNodePartitioning(Lio/trino/Session;)Z
@356
+#getQueryMaxPlanningTime(Lio/trino/Session;)Lio/airlift/units/Duration;
@357
+#isMergeProjectWithValues(Lio/trino/Session;)Z
@358
+#isUsePartialTopN(Lio/trino/Session;)Z
+#isUsePartialDistinctLimit(Lio/trino/Session;)Z
+#isStatisticsPrecalculationForPushdownEnabled(Lio/trino/Session;)Z
@359
+#getTimeZoneId(Lio/trino/Session;)Ljava/util/Optional;
@360
+#isEnableCoordinatorDynamicFiltersDistribution(Lio/trino/Session;)Z
@363
+#isLegacyCatalogRoles(Lio/trino/Session;)Z
@364
-#isUnwrapCasts(Lio/trino/Session;)Z
@365
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/FeaturesConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/DynamicFilterConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#getJoinDistributionType(Lio/trino/Session;)Lio/trino/FeaturesConfig$JoinDistributionType;
+#getJoinReorderingStrategy(Lio/trino/Session;)Lio/trino/FeaturesConfig$JoinReorderingStrategy;
+#isSpillDistinctingAggregationsEnabled(Lio/trino/Session;)Z
+#isSpillOrderingAggregationsEnabled(Lio/trino/Session;)Z
+#isIncrementalHashArrayLoadFactorEnabled(Lio/trino/Session;)Z
+#getMaxPartialTopNMemory(Lio/trino/Session;)Lio/airlift/units/DataSize;
-#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/DynamicFilterConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#getJoinDistributionType(Lio/trino/Session;)Lio/trino/sql/analyzer/FeaturesConfig$JoinDistributionType;
-#getJoinReorderingStrategy(Lio/trino/Session;)Lio/trino/sql/analyzer/FeaturesConfig$JoinReorderingStrategy;
-#isIterativeRuleBasedColumnPruning(Lio/trino/Session;)Z
@366
+#getRetryPolicy(Lio/trino/Session;)Lio/trino/operator/RetryPolicy;
+#getRetryAttempts(Lio/trino/Session;)I
+#getRetryInitialDelay(Lio/trino/Session;)Lio/airlift/units/Duration;
+#getRetryMaxDelay(Lio/trino/Session;)Lio/airlift/units/Duration;
-#isSpillDistinctingAggregationsEnabled(Lio/trino/Session;)Z
-#isSpillOrderingAggregationsEnabled(Lio/trino/Session;)Z
@367
+#isHideInaccesibleColumns(Lio/trino/Session;)Z
@368
+#getQueryMaxTotalMemoryPerTask(Lio/trino/Session;)Ljava/util/Optional;
@369
+#getFaultTolerantExecutionTargetTaskInputSize(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#getFaultTolerantExecutionTargetTaskSplitCount(Lio/trino/Session;)I
-#isSpillOrderBy(Lio/trino/Session;)Z
-#isSpillWindowOperator(Lio/trino/Session;)Z
-#getQueryMaxTotalMemoryPerNode(Lio/trino/Session;)Lio/airlift/units/DataSize;
@371
+#isHideInaccessibleColumns(Lio/trino/Session;)Z
+#getFaultTolerantExecutionMinTaskSplitCount(Lio/trino/Session;)I
+#getFaultTolerantExecutionMaxTaskSplitCount(Lio/trino/Session;)I
-#isHideInaccesibleColumns(Lio/trino/Session;)Z
@372
+#isComplexExpressionPushdown(Lio/trino/Session;)Z
@373
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/FeaturesConfig;Lio/trino/sql/planner/OptimizerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/DynamicFilterConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#getJoinDistributionType(Lio/trino/Session;)Lio/trino/sql/planner/OptimizerConfig$JoinDistributionType;
+#getJoinReorderingStrategy(Lio/trino/Session;)Lio/trino/sql/planner/OptimizerConfig$JoinReorderingStrategy;
-#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/FeaturesConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/DynamicFilterConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#getJoinDistributionType(Lio/trino/Session;)Lio/trino/FeaturesConfig$JoinDistributionType;
-#getJoinReorderingStrategy(Lio/trino/Session;)Lio/trino/FeaturesConfig$JoinReorderingStrategy;
@374
+#getJoinMultiClauseIndependenceFactor(Lio/trino/Session;)D
+#getFilterConjunctionIndependenceFactor(Lio/trino/Session;)D
+#getQueryRetryAttempts(Lio/trino/Session;)I
+#getTaskRetryAttemptsOverall(Lio/trino/Session;)I
+#getTaskRetryAttemptsPerTask(Lio/trino/Session;)I
+#getFaultTolerantExecutionDefaultTaskMemory(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#isAdaptivePartialAggregationEnabled(Lio/trino/Session;)Z
+#getAdaptivePartialAggregationMinRows(Lio/trino/Session;)J
+#getAdaptivePartialAggregationUniqueRowsRatioThreshold(Lio/trino/Session;)D
-#getQueryMaxTotalMemoryPerTask(Lio/trino/Session;)Ljava/util/Optional;
-#getRetryAttempts(Lio/trino/Session;)I
@375
+#isNonEstimatablePredicateApproximationEnabled(Lio/trino/Session;)Z
+#getFaultTolerantExecutionTaskMemoryGrowthFactor(Lio/trino/Session;)D
@377
+#getMaxTasksWaitingForNodePerStage(Lio/trino/Session;)I
+#getFaultTolerantExecutionTaskMemoryEstimationQuantile(Lio/trino/Session;)D
@378
+#getRetryDelayScaleFactor(Lio/trino/Session;)D
@381
+#getFaultTolerantExecutionPartitionCount(Lio/trino/Session;)I
@382
+#getJoinPartitionedBuildMinRowCount(Lio/trino/Session;)J
@385
+#getFaultTolerantPreserveInputPartitionsInWriteStage(Lio/trino/Session;)Z
@388
+#isUseExactPartitioning(Lio/trino/Session;)Z
-#isGroupedExecutionEnabled(Lio/trino/Session;)Z
-#isDynamicScheduleForGroupedExecution(Lio/trino/Session;)Z
-#getConcurrentLifespansPerNode(Lio/trino/Session;)Ljava/util/OptionalInt;
@389
+#isForceSpillingOperator(Lio/trino/Session;)Z
@391
+#isPreAggregateCaseAggregationsEnabled(Lio/trino/Session;)Z
@394
+#getFaultTolerantExecutionDefaultCoordinatorTaskMemory(Lio/trino/Session;)Lio/airlift/units/DataSize;
@395
+#isTaskScaleWritersEnabled(Lio/trino/Session;)Z
+#getTaskScaleWritersMaxWriterCount(Lio/trino/Session;)I
@401
+#getTaskPartitionedWriterCount(Lio/trino/Session;)I
+#isFaultTolerantExecutionEventDriverSchedulerEnabled(Lio/trino/Session;)Z
@405
+#isLegacyUpdateDeleteImplementation(Lio/trino/Session;)Z
+#isFaultTolerantExecutionForcePreferredWritePartitioningEnabled(Lio/trino/Session;)Z
-#getFaultTolerantPreserveInputPartitionsInWriteStage(Lio/trino/Session;)Z
@406
+#getMaxTasksWaitingForExecutionPerQuery(Lio/trino/Session;)I
+#getPagePartitioningBufferPoolSize(Lio/trino/Session;)I
-#isLegacyUpdateDeleteImplementation(Lio/trino/Session;)Z
@407
+#getMaxHashPartitionCount(Lio/trino/Session;)I
+#getMinHashPartitionCount(Lio/trino/Session;)I
+#isRemoteTaskAdaptiveUpdateRequestSizeEnabled(Lio/trino/Session;)Z
+#getMaxRemoteTaskRequestSize(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#getRemoteTaskRequestSizeHeadroom(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#getRemoteTaskGuaranteedSplitsPerRequest(Lio/trino/Session;)I
+#getMinInputSizePerTask(Lio/trino/Session;)Lio/airlift/units/DataSize;
+#getMinInputRowsPerTask(Lio/trino/Session;)J
-#getHashPartitionCount(Lio/trino/Session;)I
-#getTaskRetryAttemptsOverall(Lio/trino/Session;)I
-#getFaultTolerantExecutionMinTaskSplitCount(Lio/trino/Session;)I
-#isFaultTolerantExecutionEventDriverSchedulerEnabled(Lio/trino/Session;)Z
@409
+#markDistinctStrategy(Lio/trino/Session;)Lio/trino/sql/planner/OptimizerConfig$MarkDistinctStrategy;
-#isDistributedIndexJoinEnabled(Lio/trino/Session;)Z
-#useMarkDistinct(Lio/trino/Session;)Z

+###io/trino/GroupByHashPageIndexerFactory
@351
+#<init>(Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#createPageIndexer(Ljava/util/List;)Lio/trino/spi/PageIndexer;
@366
-###io/trino/GroupByHashPageIndexerFactory

+###io/trino/memory/QueryContext
@351
+#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/memory/MemoryPool;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
+#isMemoryLimitsInitialized()Z
+#initializeMemoryLimits(ZJJ)V
+#getMaxUserMemory()J
+#getMaxTotalMemory()J
+#reserveSpill(J)Lcom/google/common/util/concurrent/ListenableFuture;
+#freeSpill(J)V
+#setMemoryPool(Lio/trino/memory/MemoryPool;)V
+#getMemoryPool()Lio/trino/memory/MemoryPool;
+#addTaskContext(Lio/trino/execution/TaskStateMachine;Lio/trino/Session;Ljava/lang/Runnable;ZZLjava/util/OptionalInt;)Lio/trino/operator/TaskContext;
+#accept(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#acceptChildren(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/util/List;
+#getTaskContextByTaskId(Lio/trino/execution/TaskId;)Lio/trino/operator/TaskContext;
@352
+#getQueryId()Lio/trino/spi/QueryId;
@362
+#addTaskContext(Lio/trino/execution/TaskStateMachine;Lio/trino/Session;Ljava/lang/Runnable;ZZ)Lio/trino/operator/TaskContext;
-#addTaskContext(Lio/trino/execution/TaskStateMachine;Lio/trino/Session;Ljava/lang/Runnable;ZZLjava/util/OptionalInt;)Lio/trino/operator/TaskContext;
@368
+#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/memory/MemoryPool;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
+#initializeMemoryLimits(ZJJLjava/util/Optional;)V
-#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/memory/MemoryPool;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
-#initializeMemoryLimits(ZJJ)V
@369
+#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/memory/MemoryPool;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
+#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/memory/MemoryPool;JLio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
+#initializeMemoryLimits(ZJLjava/util/Optional;)V
-#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/memory/MemoryPool;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
-#initializeMemoryLimits(ZJJLjava/util/Optional;)V
-#getMaxTotalMemory()J
@372
-#setMemoryPool(Lio/trino/memory/MemoryPool;)V
@374
+#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Lio/trino/memory/MemoryPool;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
+#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Lio/trino/memory/MemoryPool;JLio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
+#initializeMemoryLimits(ZJ)V
-#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/memory/MemoryPool;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
-#<init>(Lio/trino/spi/QueryId;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/memory/MemoryPool;JLio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillSpaceTracker;)V
-#initializeMemoryLimits(ZJLjava/util/Optional;)V

+###io/trino/memory/QueryContextVisitor
@351
+#visitQueryContext(Lio/trino/memory/QueryContext;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTaskContext(Lio/trino/operator/TaskContext;Ljava/lang/Object;)Ljava/lang/Object;
+#visitPipelineContext(Lio/trino/operator/PipelineContext;Ljava/lang/Object;)Ljava/lang/Object;
+#visitDriverContext(Lio/trino/operator/DriverContext;Ljava/lang/Object;)Ljava/lang/Object;
+#visitOperatorContext(Lio/trino/operator/OperatorContext;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/memory/MemoryPoolListener
@351
+#onMemoryReserved(Lio/trino/memory/MemoryPool;)V
+#onMemoryReserved(Ljava/util/function/Consumer;)Lio/trino/memory/MemoryPoolListener;

+###io/trino/memory/LowMemoryKiller$QueryMemoryInfo
@351
+#<init>(Lio/trino/spi/QueryId;Lio/trino/spi/memory/MemoryPoolId;J)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getMemoryPoolId()Lio/trino/spi/memory/MemoryPoolId;
+#getMemoryReservation()J
+#toString()Ljava/lang/String;
@372
+#<init>(Lio/trino/spi/QueryId;J)V
-#<init>(Lio/trino/spi/QueryId;Lio/trino/spi/memory/MemoryPoolId;J)V
-#getMemoryPoolId()Lio/trino/spi/memory/MemoryPoolId;
@377
+#<init>(Lio/trino/spi/QueryId;JLio/trino/operator/RetryPolicy;)V
+#getRetryPolicy()Lio/trino/operator/RetryPolicy;
-#<init>(Lio/trino/spi/QueryId;J)V
@381
-###io/trino/memory/LowMemoryKiller$QueryMemoryInfo

+###io/trino/memory/VersionedMemoryPoolId
@351
+#<init>(Lio/trino/spi/memory/MemoryPoolId;J)V
+#getId()Lio/trino/spi/memory/MemoryPoolId;
+#getVersion()J
+#toString()Ljava/lang/String;
@372
-###io/trino/memory/VersionedMemoryPoolId

+###io/trino/memory/MemoryManagerConfig
@351
+#<init>()V
+#getLowMemoryKillerPolicy()Lio/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy;
+#setLowMemoryKillerPolicy(Lio/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy;)Lio/trino/memory/MemoryManagerConfig;
+#getKillOnOutOfMemoryDelay()Lio/airlift/units/Duration;
+#setKillOnOutOfMemoryDelay(Lio/airlift/units/Duration;)Lio/trino/memory/MemoryManagerConfig;
+#getMaxQueryMemory()Lio/airlift/units/DataSize;
+#setMaxQueryMemory(Lio/airlift/units/DataSize;)Lio/trino/memory/MemoryManagerConfig;
+#getMaxQueryTotalMemory()Lio/airlift/units/DataSize;
+#setMaxQueryTotalMemory(Lio/airlift/units/DataSize;)Lio/trino/memory/MemoryManagerConfig;
@374
+#getFaultTolerantExecutionTaskMemory()Lio/airlift/units/DataSize;
+#setFaultTolerantExecutionTaskMemory(Lio/airlift/units/DataSize;)Lio/trino/memory/MemoryManagerConfig;
@375
+#getFaultTolerantExecutionTaskMemoryGrowthFactor()D
+#setFaultTolerantExecutionTaskMemoryGrowthFactor(D)Lio/trino/memory/MemoryManagerConfig;
@377
+#getFaultTolerantExecutionTaskRuntimeMemoryEstimationOverhead()Lio/airlift/units/DataSize;
+#setFaultTolerantExecutionTaskRuntimeMemoryEstimationOverhead(Lio/airlift/units/DataSize;)Lio/trino/memory/MemoryManagerConfig;
+#getFaultTolerantExecutionTaskMemoryEstimationQuantile()D
+#setFaultTolerantExecutionTaskMemoryEstimationQuantile(D)Lio/trino/memory/MemoryManagerConfig;
@381
+#getLowMemoryQueryKillerPolicy()Lio/trino/memory/MemoryManagerConfig$LowMemoryQueryKillerPolicy;
+#setLowMemoryQueryKillerPolicy(Lio/trino/memory/MemoryManagerConfig$LowMemoryQueryKillerPolicy;)Lio/trino/memory/MemoryManagerConfig;
+#getLowMemoryTaskKillerPolicy()Lio/trino/memory/MemoryManagerConfig$LowMemoryTaskKillerPolicy;
+#setLowMemoryTaskKillerPolicy(Lio/trino/memory/MemoryManagerConfig$LowMemoryTaskKillerPolicy;)Lio/trino/memory/MemoryManagerConfig;
-#getLowMemoryKillerPolicy()Lio/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy;
-#setLowMemoryKillerPolicy(Lio/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy;)Lio/trino/memory/MemoryManagerConfig;
@394
+#getFaultTolerantExecutionCoordinatorTaskMemory()Lio/airlift/units/DataSize;
+#setFaultTolerantExecutionCoordinatorTaskMemory(Lio/airlift/units/DataSize;)Lio/trino/memory/MemoryManagerConfig;
@403
+#applyFaultTolerantExecutionDefaults()V
@406
+#isFaultTolerantExecutionMemoryRequirementIncreaseOnWorkerCrashEnabled()Z
+#setFaultTolerantExecutionMemoryRequirementIncreaseOnWorkerCrashEnabled(Z)Lio/trino/memory/MemoryManagerConfig;

+###io/trino/memory/ClusterMemoryPool
@351
+#<init>(Lio/trino/spi/memory/MemoryPoolId;)V
+#getInfo()Lio/trino/spi/memory/MemoryPoolInfo;
+#getId()Lio/trino/spi/memory/MemoryPoolId;
+#getTotalDistributedBytes()J
+#getFreeDistributedBytes()J
+#getReservedDistributedBytes()J
+#getReservedRevocableDistributedBytes()J
+#getNodes()I
+#getBlockedNodes()I
+#getAssignedQueries()I
+#getQueryMemoryReservations()Ljava/util/Map;
+#getQueryMemoryRevocableReservations()Ljava/util/Map;
+#update(Ljava/util/List;I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@372
+#<init>()V
-#<init>(Lio/trino/spi/memory/MemoryPoolId;)V
-#getId()Lio/trino/spi/memory/MemoryPoolId;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/trino/memory/MemoryPool
@351
+#<init>(Lio/trino/spi/memory/MemoryPoolId;Lio/airlift/units/DataSize;)V
+#getId()Lio/trino/spi/memory/MemoryPoolId;
+#getInfo()Lio/trino/spi/memory/MemoryPoolInfo;
+#addListener(Lio/trino/memory/MemoryPoolListener;)V
+#removeListener(Lio/trino/memory/MemoryPoolListener;)V
+#reserve(Lio/trino/spi/QueryId;Ljava/lang/String;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#reserveRevocable(Lio/trino/spi/QueryId;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#tryReserve(Lio/trino/spi/QueryId;Ljava/lang/String;J)Z
+#free(Lio/trino/spi/QueryId;Ljava/lang/String;J)V
+#freeRevocable(Lio/trino/spi/QueryId;J)V
+#getFreeBytes()J
+#getMaxBytes()J
+#getReservedBytes()J
+#getReservedRevocableBytes()J
+#toString()Ljava/lang/String;
@372
+#<init>(Lio/airlift/units/DataSize;)V
-#<init>(Lio/trino/spi/memory/MemoryPoolId;Lio/airlift/units/DataSize;)V
-#getId()Lio/trino/spi/memory/MemoryPoolId;
@373
+#getQueryMemoryReservations()Ljava/util/Map;
+#getTaggedMemoryAllocations()Ljava/util/Map;
@377
+#reserve(Lio/trino/execution/TaskId;Ljava/lang/String;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#reserveRevocable(Lio/trino/execution/TaskId;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#tryReserve(Lio/trino/execution/TaskId;Ljava/lang/String;J)Z
+#free(Lio/trino/execution/TaskId;Ljava/lang/String;J)V
+#freeRevocable(Lio/trino/execution/TaskId;J)V
+#getQueryRevocableMemoryReservations()Ljava/util/Map;
+#getTaskMemoryReservations()Ljava/util/Map;
+#getTaskRevocableMemoryReservations()Ljava/util/Map;
-#reserve(Lio/trino/spi/QueryId;Ljava/lang/String;J)Lcom/google/common/util/concurrent/ListenableFuture;
-#reserveRevocable(Lio/trino/spi/QueryId;J)Lcom/google/common/util/concurrent/ListenableFuture;
-#tryReserve(Lio/trino/spi/QueryId;Ljava/lang/String;J)Z
-#free(Lio/trino/spi/QueryId;Ljava/lang/String;J)V
-#freeRevocable(Lio/trino/spi/QueryId;J)V

+###io/trino/memory/LocalMemoryManagerExporter
@351
+#<init>(Lio/trino/memory/LocalMemoryManager;Lorg/weakref/jmx/MBeanExporter;)V
+#destroy()V

+###io/trino/memory/LowMemoryKiller
@351
+#chooseQueryToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;
@381
+#chooseTargetToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;
-#chooseQueryToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;

+###io/trino/memory/LocalMemoryManager
@351
+#<init>(Lio/trino/memory/NodeMemoryConfig;)V
+#getInfo()Lio/trino/memory/MemoryInfo;
+#getPools()Ljava/util/List;
+#getGeneralPool()Lio/trino/memory/MemoryPool;
+#getReservedPool()Ljava/util/Optional;
@372
+#getMemoryPool()Lio/trino/memory/MemoryPool;
-#getPools()Ljava/util/List;
-#getGeneralPool()Lio/trino/memory/MemoryPool;
-#getReservedPool()Ljava/util/Optional;

+###io/trino/memory/VoidTraversingQueryContextVisitor
@351
+#<init>()V

+###io/trino/memory/NoneLowMemoryKiller
@351
+#<init>()V
+#chooseQueryToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;
@381
+#chooseTargetToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;
-#chooseQueryToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;

+###io/trino/memory/MemoryInfo
@351
+#<init>(ILio/airlift/units/DataSize;Ljava/util/Map;)V
+#getAvailableProcessors()I
+#getTotalNodeMemory()Lio/airlift/units/DataSize;
+#getPools()Ljava/util/Map;
+#toString()Ljava/lang/String;
@372
+#<init>(ILio/trino/spi/memory/MemoryPoolInfo;)V
+#getPool()Lio/trino/spi/memory/MemoryPoolInfo;
-#<init>(ILio/airlift/units/DataSize;Ljava/util/Map;)V
-#getTotalNodeMemory()Lio/airlift/units/DataSize;
-#getPools()Ljava/util/Map;
@373
+#<init>(ILio/trino/spi/memory/MemoryPoolInfo;Lcom/google/common/collect/ListMultimap;)V
+#getTasksMemoryInfo()Lcom/google/common/collect/ListMultimap;
+#withTasksMemoryInfo(Lcom/google/common/collect/ListMultimap;)Lio/trino/memory/MemoryInfo;
@377
-#<init>(ILio/trino/spi/memory/MemoryPoolInfo;Lcom/google/common/collect/ListMultimap;)V
-#getTasksMemoryInfo()Lcom/google/common/collect/ListMultimap;
-#withTasksMemoryInfo(Lcom/google/common/collect/ListMultimap;)Lio/trino/memory/MemoryInfo;

+###io/trino/memory/TotalReservationLowMemoryKiller
@351
+#<init>()V
+#chooseQueryToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;
@381
+#chooseTargetToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;
-#chooseQueryToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;

+###io/trino/memory/MemoryPoolAssignment
@351
+#<init>(Lio/trino/spi/QueryId;Lio/trino/spi/memory/MemoryPoolId;)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getPoolId()Lio/trino/spi/memory/MemoryPoolId;
+#toString()Ljava/lang/String;
@372
-###io/trino/memory/MemoryPoolAssignment

+###io/trino/memory/MemoryResource
@351
+#<init>(Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManager;)V
+#getMemoryInfo(Lio/trino/memory/MemoryPoolAssignmentsRequest;)Lio/trino/memory/MemoryInfo;
+#getMemoryInfo(Ljava/lang/String;)Ljavax/ws/rs/core/Response;
@372
+#<init>(Lio/trino/memory/LocalMemoryManager;)V
+#getMemoryInfo()Lio/trino/memory/MemoryInfo;
-#<init>(Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManager;)V
-#getMemoryInfo(Lio/trino/memory/MemoryPoolAssignmentsRequest;)Lio/trino/memory/MemoryInfo;
-#getMemoryInfo(Ljava/lang/String;)Ljavax/ws/rs/core/Response;
@373
+#<init>(Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/SqlTaskManager;)V
-#<init>(Lio/trino/memory/LocalMemoryManager;)V
@406
+#<init>(Lio/trino/memory/LocalMemoryManager;)V
-#<init>(Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/SqlTaskManager;)V

+###io/trino/memory/ClusterMemoryManager
@351
+#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#addChangeListener(Lio/trino/spi/memory/MemoryPoolId;Ljava/util/function/Consumer;)V
+#memoryPoolExists(Lio/trino/spi/memory/MemoryPoolId;)Z
+#process(Ljava/lang/Iterable;Ljava/util/function/Supplier;)V
+#getMemoryPoolInfo()Ljava/util/Map;
+#getWorkerMemoryInfo()Ljava/util/Map;
+#destroy()V
+#getTotalAvailableProcessors()J
+#getNumberOfLeakedQueries()I
+#getClusterUserMemoryReservation()J
+#getClusterTotalMemoryReservation()J
+#getClusterMemoryBytes()J
+#getQueriesKilledDueToOutOfMemory()J
@372
+#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#addChangeListener(Ljava/util/function/Consumer;)V
-#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#addChangeListener(Lio/trino/spi/memory/MemoryPoolId;Ljava/util/function/Consumer;)V
-#memoryPoolExists(Lio/trino/spi/memory/MemoryPoolId;)Z
-#getMemoryPoolInfo()Ljava/util/Map;
@373
+#getTasksKilledDueToOutOfMemory()J
@375
+#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/memory/NodeMemoryConfig;)V
-#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
@381
+#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/memory/NodeMemoryConfig;)V
-#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/memory/NodeMemoryConfig;)V
@396
+#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;)V
-#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;Lio/trino/memory/NodeMemoryConfig;)V
@406
+#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/memory/LowMemoryKiller;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;)V
-#<init>(Lio/airlift/http/client/HttpClient;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/LocationFactory;Lorg/weakref/jmx/MBeanExporter;Lio/airlift/json/JsonCodec;Lio/trino/execution/QueryIdGenerator;Lio/trino/memory/LowMemoryKiller;Lio/trino/memory/LowMemoryKiller;Lio/trino/server/ServerConfig;Lio/trino/memory/MemoryManagerConfig;)V

+###io/trino/memory/TraversingQueryContextVisitor
@351
+#<init>()V
+#visitQueryContext(Lio/trino/memory/QueryContext;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTaskContext(Lio/trino/operator/TaskContext;Ljava/lang/Object;)Ljava/lang/Object;
+#visitPipelineContext(Lio/trino/operator/PipelineContext;Ljava/lang/Object;)Ljava/lang/Object;
+#visitDriverContext(Lio/trino/operator/DriverContext;Ljava/lang/Object;)Ljava/lang/Object;
+#visitOperatorContext(Lio/trino/operator/OperatorContext;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy
@351
+#values()[Lio/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy;
+#valueOf(Ljava/lang/String;)Lio/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy;
+#fromString(Ljava/lang/String;)Lio/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy;
@381
-###io/trino/memory/MemoryManagerConfig$LowMemoryKillerPolicy

+###io/trino/memory/NodeMemoryConfig
@351
+#<init>()V
+#getMaxQueryMemoryPerNode()Lio/airlift/units/DataSize;
+#setMaxQueryMemoryPerNode(Lio/airlift/units/DataSize;)Lio/trino/memory/NodeMemoryConfig;
+#setReservedPoolEnabled(Z)V[deprecated]
+#isReservedPoolDisabled()Z[deprecated]
+#setReservedPoolDisabled(Z)Lio/trino/memory/NodeMemoryConfig;[deprecated]
+#getMaxQueryTotalMemoryPerNode()Lio/airlift/units/DataSize;
+#setMaxQueryTotalMemoryPerNode(Lio/airlift/units/DataSize;)Lio/trino/memory/NodeMemoryConfig;
+#getHeapHeadroom()Lio/airlift/units/DataSize;
+#setHeapHeadroom(Lio/airlift/units/DataSize;)Lio/trino/memory/NodeMemoryConfig;
@368
+#getMaxQueryTotalMemoryPerTask()Ljava/util/Optional;
+#setMaxQueryTotalMemoryPerTask(Lio/airlift/units/DataSize;)Lio/trino/memory/NodeMemoryConfig;
@369
+#getMaxQueryMemoryPerTask()Ljava/util/Optional;
+#setMaxQueryMemoryPerTask(Lio/airlift/units/DataSize;)Lio/trino/memory/NodeMemoryConfig;
-#getMaxQueryTotalMemoryPerTask()Ljava/util/Optional;
-#setMaxQueryTotalMemoryPerTask(Lio/airlift/units/DataSize;)Lio/trino/memory/NodeMemoryConfig;
-#getMaxQueryTotalMemoryPerNode()Lio/airlift/units/DataSize;
-#setMaxQueryTotalMemoryPerNode(Lio/airlift/units/DataSize;)Lio/trino/memory/NodeMemoryConfig;
@372
-#setReservedPoolEnabled(Z)V[deprecated]
-#isReservedPoolDisabled()Z[deprecated]
-#setReservedPoolDisabled(Z)Lio/trino/memory/NodeMemoryConfig;[deprecated]
@374
-#getMaxQueryMemoryPerTask()Ljava/util/Optional;
-#setMaxQueryMemoryPerTask(Lio/airlift/units/DataSize;)Lio/trino/memory/NodeMemoryConfig;

+###io/trino/memory/TotalReservationOnBlockedNodesLowMemoryKiller
@351
+#<init>()V
+#chooseQueryToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;
@381
-###io/trino/memory/TotalReservationOnBlockedNodesLowMemoryKiller

+###io/trino/memory/ForMemoryManager
@351

+###io/trino/memory/MemoryPoolAssignmentsRequest
@351
+#<init>(Ljava/lang/String;JLjava/util/List;)V
+#getCoordinatorId()Ljava/lang/String;
+#getVersion()J
+#getAssignments()Ljava/util/List;
+#toString()Ljava/lang/String;
@372
-###io/trino/memory/MemoryPoolAssignmentsRequest

+###io/trino/memory/RemoteNodeMemory
@351
+#<init>(Lio/trino/metadata/InternalNode;Lio/airlift/http/client/HttpClient;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Ljava/net/URI;)V
+#getCurrentAssignmentVersion()J
+#getInfo()Ljava/util/Optional;
+#getNode()Lio/trino/metadata/InternalNode;
+#asyncRefresh(Lio/trino/memory/MemoryPoolAssignmentsRequest;)V
@372
+#<init>(Lio/trino/metadata/InternalNode;Lio/airlift/http/client/HttpClient;Lio/airlift/json/JsonCodec;Ljava/net/URI;)V
+#asyncRefresh()V
-#<init>(Lio/trino/metadata/InternalNode;Lio/airlift/http/client/HttpClient;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Ljava/net/URI;)V
-#getCurrentAssignmentVersion()J
-#asyncRefresh(Lio/trino/memory/MemoryPoolAssignmentsRequest;)V

+###io/trino/memory/ClusterMemoryLeakDetector
@351
+#<init>()V

+###io/trino/spiller/GenericSpiller
@351
+#<init>(Ljava/util/List;Lio/trino/operator/SpillContext;Lio/trino/memory/context/AggregatedMemoryContext;Lio/trino/spiller/SingleStreamSpillerFactory;)V
+#spill(Ljava/util/Iterator;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getSpills()Ljava/util/List;
+#close()V

+###io/trino/spiller/PartitioningSpiller
@351
+#partitionAndSpill(Lio/trino/spi/Page;Ljava/util/function/IntPredicate;)Lio/trino/spiller/PartitioningSpiller$PartitioningSpillResult;
+#getSpilledPages(I)Ljava/util/Iterator;
+#verifyAllPartitionsRead()V
+#close()V

+###io/trino/spiller/LocalSpillContext
@351
+#<init>(Lio/trino/operator/SpillContext;)V
+#updateBytes(J)V
+#close()V

+###io/trino/spiller/PartitioningSpiller$PartitioningSpillResult
@351
+#<init>(Lcom/google/common/util/concurrent/ListenableFuture;Lio/trino/spi/Page;)V
+#getSpillingFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#getRetained()Lio/trino/spi/Page;

+###io/trino/spiller/FileSingleStreamSpillerFactory
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spiller/SpillerStats;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/spiller/NodeSpillConfig;)V
+#<init>(Lcom/google/common/util/concurrent/ListeningExecutorService;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/spiller/SpillerStats;Ljava/util/List;DZZ)V
+#cleanupOldSpillFiles()V
+#destroy()V
+#create(Ljava/util/List;Lio/trino/operator/SpillContext;Lio/trino/memory/context/LocalMemoryContext;)Lio/trino/spiller/SingleStreamSpiller;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spiller/SpillerStats;Lio/trino/FeaturesConfig;Lio/trino/spiller/NodeSpillConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spiller/SpillerStats;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/spiller/NodeSpillConfig;)V
@367
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/spiller/SpillerStats;Lio/trino/FeaturesConfig;Lio/trino/spiller/NodeSpillConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spiller/SpillerStats;Lio/trino/FeaturesConfig;Lio/trino/spiller/NodeSpillConfig;)V

+###io/trino/spiller/PartitioningSpillerFactory
@351
+#create(Ljava/util/List;Lio/trino/operator/PartitionFunction;Lio/trino/operator/SpillContext;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/spiller/PartitioningSpiller;
+#unsupportedPartitioningSpillerFactory()Lio/trino/spiller/PartitioningSpillerFactory;

+###io/trino/spiller/SpillerStats
@351
+#<init>()V
+#getTotalSpilledBytes()J
+#addToTotalSpilledBytes(J)V

+###io/trino/spiller/FileSingleStreamSpiller
@351
+#<init>(Lio/trino/execution/buffer/PagesSerde;Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/nio/file/Path;Lio/trino/spiller/SpillerStats;Lio/trino/operator/SpillContext;Lio/trino/memory/context/LocalMemoryContext;Ljava/util/Optional;Ljava/lang/Runnable;)V
+#spill(Ljava/util/Iterator;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getSpilledPagesInMemorySize()J
+#getSpilledPages()Ljava/util/Iterator;
+#getAllSpilledPages()Lcom/google/common/util/concurrent/ListenableFuture;
+#close()V
@403
+#<init>(Lio/trino/execution/buffer/PagesSerde;Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/nio/file/Path;Lio/trino/spiller/SpillerStats;Lio/trino/operator/SpillContext;Lio/trino/memory/context/LocalMemoryContext;Ljava/lang/Runnable;)V
-#<init>(Lio/trino/execution/buffer/PagesSerde;Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/nio/file/Path;Lio/trino/spiller/SpillerStats;Lio/trino/operator/SpillContext;Lio/trino/memory/context/LocalMemoryContext;Ljava/util/Optional;Ljava/lang/Runnable;)V
@405
+#<init>(Lio/trino/execution/buffer/PagesSerdeFactory;Ljava/util/Optional;Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/nio/file/Path;Lio/trino/spiller/SpillerStats;Lio/trino/operator/SpillContext;Lio/trino/memory/context/LocalMemoryContext;Ljava/lang/Runnable;)V
-#<init>(Lio/trino/execution/buffer/PagesSerde;Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/nio/file/Path;Lio/trino/spiller/SpillerStats;Lio/trino/operator/SpillContext;Lio/trino/memory/context/LocalMemoryContext;Ljava/lang/Runnable;)V

+###io/trino/spiller/GenericPartitioningSpillerFactory
@351
+#<init>(Lio/trino/spiller/SingleStreamSpillerFactory;)V
+#create(Ljava/util/List;Lio/trino/operator/PartitionFunction;Lio/trino/operator/SpillContext;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/spiller/PartitioningSpiller;

+###io/trino/spiller/SpillCipher
@351
+#encryptedMaxLength(I)I
+#encrypt([BII[BI)I
+#decryptedMaxLength(I)I
+#decrypt([BII[BI)I
+#close()V
@403
-###io/trino/spiller/SpillCipher

+###io/trino/spiller/SpillSpaceTracker
@351
+#<init>(Lio/airlift/units/DataSize;)V
+#reserve(J)Lcom/google/common/util/concurrent/ListenableFuture;
+#free(J)V
+#getCurrentBytes()J
+#getMaxBytes()J
+#toString()Ljava/lang/String;

+###io/trino/spiller/Spiller
@351
+#spill(Ljava/util/Iterator;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getSpills()Ljava/util/List;
+#close()V

+###io/trino/spiller/NodeSpillConfig
@351
+#<init>()V
+#getMaxSpillPerNode()Lio/airlift/units/DataSize;
+#setMaxSpillPerNode(Lio/airlift/units/DataSize;)Lio/trino/spiller/NodeSpillConfig;
+#getQueryMaxSpillPerNode()Lio/airlift/units/DataSize;
+#setQueryMaxSpillPerNode(Lio/airlift/units/DataSize;)Lio/trino/spiller/NodeSpillConfig;
+#isSpillCompressionEnabled()Z
+#setSpillCompressionEnabled(Z)Lio/trino/spiller/NodeSpillConfig;
+#isSpillEncryptionEnabled()Z
+#setSpillEncryptionEnabled(Z)Lio/trino/spiller/NodeSpillConfig;

+###io/trino/spiller/GenericSpillerFactory
@351
+#<init>(Lio/trino/spiller/SingleStreamSpillerFactory;)V
+#create(Ljava/util/List;Lio/trino/operator/SpillContext;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/spiller/Spiller;

+###io/trino/spiller/LocalSpillManager
@351
+#<init>(Lio/trino/spiller/NodeSpillConfig;)V
+#getSpillSpaceTracker()Lio/trino/spiller/SpillSpaceTracker;

+###io/trino/spiller/SingleStreamSpillerFactory
@351
+#create(Ljava/util/List;Lio/trino/operator/SpillContext;Lio/trino/memory/context/LocalMemoryContext;)Lio/trino/spiller/SingleStreamSpiller;
+#unsupportedSingleStreamSpillerFactory()Lio/trino/spiller/SingleStreamSpillerFactory;

+###io/trino/spiller/SpillerFactory
@351
+#create(Ljava/util/List;Lio/trino/operator/SpillContext;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/spiller/Spiller;

+###io/trino/spiller/GenericPartitioningSpiller
@351
+#<init>(Ljava/util/List;Lio/trino/operator/PartitionFunction;Lio/trino/operator/SpillContext;Lio/trino/memory/context/AggregatedMemoryContext;Lio/trino/spiller/SingleStreamSpillerFactory;)V
+#getSpilledPages(I)Ljava/util/Iterator;
+#verifyAllPartitionsRead()V
+#partitionAndSpill(Lio/trino/spi/Page;Ljava/util/function/IntPredicate;)Lio/trino/spiller/PartitioningSpiller$PartitioningSpillResult;
+#close()V

+###io/trino/spiller/SingleStreamSpiller
@351
+#spill(Ljava/util/Iterator;)Lcom/google/common/util/concurrent/ListenableFuture;
+#spill(Lio/trino/spi/Page;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getSpilledPages()Ljava/util/Iterator;
+#getSpilledPagesInMemorySize()J
+#getAllSpilledPages()Lcom/google/common/util/concurrent/ListenableFuture;
+#close()V

+###io/trino/spiller/AesSpillCipher
@351
+#<init>()V
+#encryptedMaxLength(I)I
+#decryptedMaxLength(I)I
+#encrypt([BII[BI)I
+#decrypt([BII[BI)I
+#close()V
+#toString()Ljava/lang/String;
@403
-###io/trino/spiller/AesSpillCipher

+###io/trino/NotInTransactionException
@351
+#<init>()V
+#<init>(Lio/trino/transaction/TransactionId;)V

+###io/trino/SessionRepresentation
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V
+#getQueryId()Ljava/lang/String;
+#getTransactionId()Ljava/util/Optional;
+#isClientTransactionSupport()Z
+#getUser()Ljava/lang/String;
+#getGroups()Ljava/util/Set;
+#getPrincipal()Ljava/util/Optional;
+#getSource()Ljava/util/Optional;
+#getTraceToken()Ljava/util/Optional;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getPath()Lio/trino/sql/SqlPath;
+#getTimeZoneKey()Lio/trino/spi/type/TimeZoneKey;
+#getLocale()Ljava/util/Locale;
+#getRemoteUserAddress()Ljava/util/Optional;
+#getUserAgent()Ljava/util/Optional;
+#getClientInfo()Ljava/util/Optional;
+#getClientTags()Ljava/util/Set;
+#getClientCapabilities()Ljava/util/Set;
+#getStart()Ljava/time/Instant;
+#getResourceEstimates()Lio/trino/spi/session/ResourceEstimates;
+#getSystemProperties()Ljava/util/Map;
+#getCatalogProperties()Ljava/util/Map;
+#getUnprocessedCatalogProperties()Ljava/util/Map;
+#getRoles()Ljava/util/Map;
+#getPreparedStatements()Ljava/util/Map;
+#getProtocolName()Ljava/lang/String;
+#toSession(Lio/trino/metadata/SessionPropertyManager;)Lio/trino/Session;
+#toSession(Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;)Lio/trino/Session;
@357
+#getTimeZone()Ljava/lang/String;
@362
+#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V
+#getEnabledRoles()Ljava/util/Set;
+#getCatalogRoles()Ljava/util/Map;
-#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V
-#getRoles()Ljava/util/Map;
@364
+#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Optional;)V
-#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V
@365
+#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V
+#toIdentity()Lio/trino/spi/security/Identity;
+#toIdentity(Ljava/util/Map;)Lio/trino/spi/security/Identity;
-#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Optional;)V
@371
+#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V
-#getUnprocessedCatalogProperties()Ljava/util/Map;
@403
+#toSession(Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Ljava/util/Optional;)Lio/trino/Session;
-#toSession(Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;)Lio/trino/Session;

+###io/trino/util/JsonUtil
@351
+#createJsonParser(Lcom/fasterxml/jackson/core/JsonFactory;Lio/airlift/slice/Slice;)Lcom/fasterxml/jackson/core/JsonParser;
+#createJsonGenerator(Lcom/fasterxml/jackson/core/JsonFactory;Lio/airlift/slice/SliceOutput;)Lcom/fasterxml/jackson/core/JsonGenerator;
+#truncateIfNecessaryForErrorMessage(Lio/airlift/slice/Slice;)Ljava/lang/String;
+#canCastToJson(Lio/trino/spi/type/Type;)Z
+#canCastFromJson(Lio/trino/spi/type/Type;)Z
+#currentTokenAsVarchar(Lcom/fasterxml/jackson/core/JsonParser;)Lio/airlift/slice/Slice;
+#currentTokenAsBigint(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Long;
+#currentTokenAsInteger(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Long;
+#currentTokenAsSmallint(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Long;
+#currentTokenAsTinyint(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Long;
+#currentTokenAsDouble(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Double;
+#currentTokenAsReal(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Long;
+#currentTokenAsBoolean(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Boolean;
+#currentTokenAsShortDecimal(Lcom/fasterxml/jackson/core/JsonParser;II)Ljava/lang/Long;
+#currentTokenAsLongDecimal(Lcom/fasterxml/jackson/core/JsonParser;II)Lio/airlift/slice/Slice;
+#getFieldNameToIndex(Ljava/util/List;)Ljava/util/Optional;
+#parseJsonToSingleRowBlock(Lcom/fasterxml/jackson/core/JsonParser;Lio/trino/spi/block/SingleRowBlockWriter;[Lio/trino/util/JsonUtil$BlockBuilderAppender;Ljava/util/Optional;)V
@368
+#currentTokenAsLongDecimal(Lcom/fasterxml/jackson/core/JsonParser;II)Lio/trino/spi/type/Int128;
-#currentTokenAsLongDecimal(Lcom/fasterxml/jackson/core/JsonParser;II)Lio/airlift/slice/Slice;

+###io/trino/util/CompilerUtils
@351
+#makeClassName(Ljava/lang/String;Ljava/util/Optional;)Lio/airlift/bytecode/ParameterizedType;
+#makeClassName(Ljava/lang/String;)Lio/airlift/bytecode/ParameterizedType;
+#defineClass(Lio/airlift/bytecode/ClassDefinition;Ljava/lang/Class;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#defineClass(Lio/airlift/bytecode/ClassDefinition;Ljava/lang/Class;Lio/airlift/bytecode/DynamicClassLoader;)Ljava/lang/Class;

+###io/trino/util/Failures
@351
+#toFailure(Ljava/lang/Throwable;)Lio/trino/execution/ExecutionFailureInfo;
+#checkCondition(ZLio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;[Ljava/lang/Object;)V
+#toFailures(Ljava/util/Collection;)Ljava/util/List;
+#internalError(Ljava/lang/Throwable;)Lio/trino/spi/TrinoException;

+###io/trino/util/HashCollisionsEstimator
@351
+#estimateNumberOfHashCollisions(II)D
@405
-###io/trino/util/HashCollisionsEstimator

+###io/trino/util/DateTimeZoneIndex
@351
+#getChronology(Lio/trino/spi/type/TimeZoneKey;)Lorg/joda/time/chrono/ISOChronology;
+#unpackChronology(J)Lorg/joda/time/chrono/ISOChronology;
+#getDateTimeZone(Lio/trino/spi/type/TimeZoneKey;)Lorg/joda/time/DateTimeZone;
+#unpackDateTimeZone(J)Lorg/joda/time/DateTimeZone;
+#packDateTimeWithZone(Lorg/joda/time/DateTime;)J
+#extractZoneOffsetMinutes(J)I
+#extractZoneOffsetMinutes(JS)I

+###io/trino/util/MergeSortedPages$PageWithPosition
@351
+#getPage()Lio/trino/spi/Page;
+#getPosition()I
+#appendTo(Lio/trino/spi/PageBuilder;Ljava/util/List;Ljava/util/List;)V

+###io/trino/util/FinalizerService
@351
+#<init>()V
+#start()V
+#destroy()V
+#addFinalizer(Ljava/lang/Object;Ljava/lang/Runnable;)V

+###io/trino/util/GenerateTimeZoneIndex
@351
+#main([Ljava/lang/String;)V
+#ignoredZone()Lcom/google/common/base/Predicate;

+###io/trino/util/MoreMath
@351
+#nearlyEqual(DDD)Z
+#nearlyEqual(FFF)Z
+#min([D)D
+#max([D)D
+#rangeMin(DD)D
+#rangeMax(DD)D
+#firstNonNaN([D)D
@374
+#averageExcludingNaNs(DD)D
+#minExcludeNaN(DD)D
+#maxExcludeNaN(DD)D

+###io/trino/util/MinMaxCompare
@351
+#getMinMaxCompare(Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;Z)Ljava/lang/invoke/MethodHandle;
+#getMaxCompare(Lio/trino/type/BlockTypeOperators;Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionComparison;
+#min(J)Z
+#max(J)Z
+#maxReal(JJ)Z
+#maxDouble(DD)Z
@364
+#getMinMaxCompareFunctionDependencies(Lio/trino/spi/type/TypeSignature;Z)Lio/trino/metadata/FunctionDependencyDeclaration;
+#getMinMaxCompare(Lio/trino/spi/type/TypeOperators;Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;Z)Ljava/lang/invoke/MethodHandle;
-#getMaxCompare(Lio/trino/type/BlockTypeOperators;Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionComparison;
-#maxReal(JJ)Z
-#maxDouble(DD)Z
@366
+#getMinMaxCompareOperatorType(Z)Lio/trino/spi/function/OperatorType;
+#comparisonToMinMaxResult(ZLjava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;
@395
+#getMinMaxCompareFunctionDependencies(Lio/trino/spi/type/TypeSignature;Z)Lio/trino/spi/function/FunctionDependencyDeclaration;
+#getMinMaxCompare(Lio/trino/spi/function/FunctionDependencies;Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;Z)Ljava/lang/invoke/MethodHandle;
-#getMinMaxCompareFunctionDependencies(Lio/trino/spi/type/TypeSignature;Z)Lio/trino/metadata/FunctionDependencyDeclaration;
-#getMinMaxCompare(Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;Z)Ljava/lang/invoke/MethodHandle;

+###io/trino/util/DateTimeUtils
@351
+#parseDate(Ljava/lang/String;)I
+#printDate(I)Ljava/lang/String;
+#convertToTimestampWithTimeZone(Lio/trino/spi/type/TimeZoneKey;Ljava/lang/String;)J
+#printTimestampWithTimeZone(J)Ljava/lang/String;
+#parseLegacyTime(Lio/trino/spi/type/TimeZoneKey;Ljava/lang/String;)J[deprecated]
+#printTimeWithTimeZone(J)Ljava/lang/String;
+#printTimeWithoutTimeZone(J)Ljava/lang/String;
+#printTimeWithoutTimeZone(Lio/trino/spi/type/TimeZoneKey;J)Ljava/lang/String;[deprecated]
+#parseDayTimeInterval(Ljava/lang/String;Lio/trino/sql/tree/IntervalLiteral$IntervalField;Ljava/util/Optional;)J
+#parsePeriodMillis(Lorg/joda/time/format/PeriodFormatter;Ljava/lang/String;Lio/trino/sql/tree/IntervalLiteral$IntervalField;Lio/trino/sql/tree/IntervalLiteral$IntervalField;)J
+#parseYearMonthInterval(Ljava/lang/String;Lio/trino/sql/tree/IntervalLiteral$IntervalField;Ljava/util/Optional;)J

+###io/trino/util/HeapTraversal
@351
+#<init>()V
+#resetWithPathTo(J)V
+#isTarget()Z
+#nextChild()Lio/trino/util/HeapTraversal$Child;
+#sizeOf()J

+###io/trino/util/HeapTraversal$Child
@351
+#values()[Lio/trino/util/HeapTraversal$Child;
+#valueOf(Ljava/lang/String;)Lio/trino/util/HeapTraversal$Child;

+###io/trino/util/JsonCastException
@351
+#<init>(Ljava/lang/String;)V

+###io/trino/util/MoreMaps
@351
+#mergeMaps(Ljava/util/Map;Ljava/util/Map;Ljava/util/function/BinaryOperator;)Ljava/util/Map;
+#mergeMaps(Ljava/util/stream/Stream;Ljava/util/function/BinaryOperator;)Ljava/util/Map;
@409
+#asMap(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;

+###io/trino/util/FastutilSetHelper
@351
+#toFastutilHashSet(Ljava/util/Set;Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/util/Set;
+#in(ZLit/unimi/dsi/fastutil/booleans/BooleanOpenHashSet;)Z
+#in(DLit/unimi/dsi/fastutil/doubles/DoubleOpenCustomHashSet;)Z
+#in(JLit/unimi/dsi/fastutil/longs/LongOpenCustomHashSet;)Z
+#in(Ljava/lang/Object;Lit/unimi/dsi/fastutil/objects/ObjectOpenCustomHashSet;)Z
@360
-###io/trino/util/FastutilSetHelper

+###io/trino/util/StatementUtils
@351
+#getAllQueryTypes()Ljava/util/Map;
+#getQueryType(Ljava/lang/Class;)Ljava/util/Optional;
+#isTransactionControlStatement(Lio/trino/sql/tree/Statement;)Z
@360
+#getQueryType(Lio/trino/sql/tree/Statement;)Ljava/util/Optional;
+#getNonDataDefinitionStatements()Ljava/util/Set;
+#isDataDefinitionStatement(Ljava/lang/Class;)Z
-#getAllQueryTypes()Ljava/util/Map;
-#getQueryType(Ljava/lang/Class;)Ljava/util/Optional;

+###io/trino/util/MergeSortedPages
@351
+#mergeSortedPages(Ljava/util/List;Lio/trino/operator/PageWithPositionComparator;Ljava/util/List;Lio/trino/memory/context/AggregatedMemoryContext;Lio/trino/operator/DriverYieldSignal;)Lio/trino/operator/WorkProcessor;
+#mergeSortedPages(Ljava/util/List;Lio/trino/operator/PageWithPositionComparator;Ljava/util/List;Ljava/util/List;Ljava/util/function/BiPredicate;ZLio/trino/memory/context/AggregatedMemoryContext;Lio/trino/operator/DriverYieldSignal;)Lio/trino/operator/WorkProcessor;

+###io/trino/util/Long2LongOpenBigHashMap
@351
+#<init>(JF)V
+#<init>(J)V
+#<init>()V
+#<init>(Ljava/util/Map;F)V
+#<init>(Ljava/util/Map;)V
+#<init>(Lit/unimi/dsi/fastutil/longs/Long2LongMap;F)V
+#<init>(Lit/unimi/dsi/fastutil/longs/Long2LongMap;)V
+#sizeOf()J
+#putAll(Ljava/util/Map;)V
+#put(JJ)J
+#addTo(JJ)J
+#remove(J)J
+#get(J)J
+#containsKey(J)Z
+#containsValue(J)Z
+#getOrDefault(JJ)J
+#putIfAbsent(JJ)J
+#remove(JJ)Z
+#replace(JJJ)Z
+#replace(JJ)J
+#computeIfAbsent(JLjava/util/function/LongUnaryOperator;)J
+#computeIfAbsentNullable(JLjava/util/function/LongFunction;)J
+#computeIfPresent(JLjava/util/function/BiFunction;)J
+#compute(JLjava/util/function/BiFunction;)J
+#merge(JJLjava/util/function/BiFunction;)J
+#clear()V
+#size()I
+#isEmpty()Z
+#long2LongEntrySet()Lit/unimi/dsi/fastutil/longs/Long2LongMap$FastEntrySet;
+#keySet()Lit/unimi/dsi/fastutil/longs/LongSet;
+#values()Lit/unimi/dsi/fastutil/longs/LongCollection;
+#trim()Z
+#trim(J)Z
+#long2LongEntrySet()Lit/unimi/dsi/fastutil/objects/ObjectSet;
+#values()Ljava/util/Collection;
+#keySet()Ljava/util/Set;

+###io/trino/util/GraphvizPrinter
@351
+#printLogical(Ljava/util/List;)Ljava/lang/String;
+#printDistributed(Lio/trino/sql/planner/SubPlan;)Ljava/lang/String;
@366
-###io/trino/util/GraphvizPrinter

+###io/trino/util/DisjointSet
@351
+#<init>()V
+#findAndUnion(Ljava/lang/Object;Ljava/lang/Object;)Z
+#find(Ljava/lang/Object;)Ljava/lang/Object;
+#getEquivalentClasses()Ljava/util/Collection;

+###io/trino/util/MoreLists
@351
+#listOfListsCopy(Ljava/util/List;)Ljava/util/List;
+#filteredCopy(Ljava/lang/Iterable;Ljava/util/function/Predicate;)Ljava/util/List;
+#mappedCopy(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/util/List;
+#nElements(ILjava/util/function/IntFunction;)Ljava/util/List;

+###io/trino/util/MorePredicates
@351
+#isInstanceOfAny([Ljava/lang/Class;)Ljava/util/function/Predicate;
@375
-###io/trino/util/MorePredicates

+###io/trino/util/AutoCloseableCloser
@351
+#create()Lio/trino/util/AutoCloseableCloser;
+#register(Ljava/lang/AutoCloseable;)Ljava/lang/AutoCloseable;
+#close()V

+###io/trino/util/Optionals
@351
+#combine(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/function/BinaryOperator;)Ljava/util/Optional;

+###io/trino/util/Reflection
@351
+#field(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
+#method(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#methodHandle(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
+#methodHandle(Lio/trino/spi/StandardErrorCode;Ljava/lang/reflect/Method;)Ljava/lang/invoke/MethodHandle;
+#methodHandle(Ljava/lang/reflect/Method;)Ljava/lang/invoke/MethodHandle;
+#constructorMethodHandle(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
+#constructorMethodHandle(Lio/trino/spi/StandardErrorCode;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
+#constructorMethodHandle(Lio/trino/spi/StandardErrorCode;Ljava/lang/reflect/Constructor;)Ljava/lang/invoke/MethodHandle;

+###io/trino/util/LongLong2LongOpenCustomBigHashMap$HashStrategy
@351
+#hashCode(JJ)J
+#equals(JJJJ)Z

+###io/trino/util/LongBigArrayFIFOQueue
@351
+#<init>(J)V
+#<init>()V
+#sizeOf()J
+#comparator()Lit/unimi/dsi/fastutil/longs/LongComparator;
+#dequeueLong()J
+#dequeueLastLong()J
+#enqueue(J)V
+#enqueueFirst(J)V
+#firstLong()J
+#lastLong()J
+#clear()V
+#trim()V
+#size()I
+#longSize()J
+#isEmpty()Z
+#comparator()Ljava/util/Comparator;

+###io/trino/util/PowerOfTwoValidator
@351
+#<init>()V
+#initialize(Lio/trino/util/PowerOfTwo;)V
+#isValid(Ljava/lang/Integer;Ljavax/validation/ConstraintValidatorContext;)Z
+#isValid(Ljava/lang/Object;Ljavax/validation/ConstraintValidatorContext;)Z
+#initialize(Ljava/lang/annotation/Annotation;)V

+###io/trino/util/JsonUtil$ObjectKeyProvider
@351
+#getObjectKey(Lio/trino/spi/block/Block;I)Ljava/lang/String;
+#createObjectKeyProvider(Lio/trino/spi/type/Type;)Lio/trino/util/JsonUtil$ObjectKeyProvider;

+###io/trino/util/LongLong2LongOpenCustomBigHashMap
@351
+#<init>(JFLio/trino/util/LongLong2LongOpenCustomBigHashMap$HashStrategy;)V
+#<init>(JLio/trino/util/LongLong2LongOpenCustomBigHashMap$HashStrategy;)V
+#<init>(Lio/trino/util/LongLong2LongOpenCustomBigHashMap$HashStrategy;)V
+#defaultReturnValue(J)V
+#defaultReturnValue()J
+#sizeOf()J
+#strategy()Lio/trino/util/LongLong2LongOpenCustomBigHashMap$HashStrategy;
+#put(JJJ)J
+#addTo(JJJ)J
+#remove(JJ)J
+#get(JJ)J
+#containsKey(JJ)Z
+#containsValue(J)Z
+#getOrDefault(JJJ)J
+#putIfAbsent(JJJ)J
+#remove(JJJ)Z
+#replace(JJJJ)Z
+#replace(JJJ)J
+#computeIfAbsent(JJLjava/util/function/LongBinaryOperator;)J
+#merge(JJJLjava/util/function/BiFunction;)J
+#clear()V
+#size()J
+#isEmpty()Z
+#trim()Z
+#trim(J)Z
@352
+#<init>(JFLio/trino/util/LongLong2LongOpenCustomBigHashMap$HashStrategy;JJ)V
+#<init>(JLio/trino/util/LongLong2LongOpenCustomBigHashMap$HashStrategy;JJ)V
+#<init>(Lio/trino/util/LongLong2LongOpenCustomBigHashMap$HashStrategy;JJ)V

+###io/trino/util/JsonUtil$BlockBuilderAppender
@351
+#append(Lcom/fasterxml/jackson/core/JsonParser;Lio/trino/spi/block/BlockBuilder;)V
+#createBlockBuilderAppender(Lio/trino/spi/type/Type;)Lio/trino/util/JsonUtil$BlockBuilderAppender;

+###io/trino/util/Mergeable
@351
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@360
-###io/trino/util/Mergeable

+###io/trino/util/JsonUtil$JsonGeneratorWriter
@351
+#writeJsonValue(Lcom/fasterxml/jackson/core/JsonGenerator;Lio/trino/spi/block/Block;I)V
+#createJsonGeneratorWriter(Lio/trino/spi/type/Type;)Lio/trino/util/JsonUtil$JsonGeneratorWriter;
@357
+#createJsonGeneratorWriter(Lio/trino/spi/type/Type;Z)Lio/trino/util/JsonUtil$JsonGeneratorWriter;
-#createJsonGeneratorWriter(Lio/trino/spi/type/Type;)Lio/trino/util/JsonUtil$JsonGeneratorWriter;
@399
+#createJsonGeneratorWriter(Lio/trino/spi/type/Type;)Lio/trino/util/JsonUtil$JsonGeneratorWriter;
-#createJsonGeneratorWriter(Lio/trino/spi/type/Type;Z)Lio/trino/util/JsonUtil$JsonGeneratorWriter;

+###io/trino/util/SpatialJoinUtils
@351
+#extractSupportedSpatialFunctions(Lio/trino/sql/tree/Expression;)Ljava/util/List;
+#extractSupportedSpatialComparisons(Lio/trino/sql/tree/Expression;)Ljava/util/List;
+#isSpatialJoinFilter(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/tree/Expression;)Z
@369
-#isSpatialJoinFilter(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/tree/Expression;)Z

+###io/trino/util/PowerOfTwo
@351
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###io/trino/Session$SessionBuilder
@351
+#setQueryId(Lio/trino/spi/QueryId;)Lio/trino/Session$SessionBuilder;
+#setTransactionId(Lio/trino/transaction/TransactionId;)Lio/trino/Session$SessionBuilder;
+#setClientTransactionSupport()Lio/trino/Session$SessionBuilder;
+#setCatalog(Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#setLocale(Ljava/util/Locale;)Lio/trino/Session$SessionBuilder;
+#setRemoteUserAddress(Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#setSchema(Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#setPath(Lio/trino/sql/SqlPath;)Lio/trino/Session$SessionBuilder;
+#setSource(Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#setTraceToken(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;
+#setStart(Ljava/time/Instant;)Lio/trino/Session$SessionBuilder;
+#setTimeZoneKey(Lio/trino/spi/type/TimeZoneKey;)Lio/trino/Session$SessionBuilder;
+#setIdentity(Lio/trino/spi/security/Identity;)Lio/trino/Session$SessionBuilder;
+#setUserAgent(Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#setClientInfo(Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#setClientTags(Ljava/util/Set;)Lio/trino/Session$SessionBuilder;
+#setClientCapabilities(Ljava/util/Set;)Lio/trino/Session$SessionBuilder;
+#setResourceEstimates(Lio/trino/spi/session/ResourceEstimates;)Lio/trino/Session$SessionBuilder;
+#setSystemProperty(Ljava/lang/String;Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#setSystemProperties(Ljava/util/Map;)Lio/trino/Session$SessionBuilder;
+#setCatalogSessionProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#addPreparedStatement(Ljava/lang/String;Ljava/lang/String;)Lio/trino/Session$SessionBuilder;
+#setProtocolHeaders(Lio/trino/client/ProtocolHeaders;)Lio/trino/Session$SessionBuilder;
+#build()Lio/trino/Session;
@362
+#setCatalog(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;
+#setRemoteUserAddress(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;
+#setSchema(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;
+#setPath(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;
+#setSource(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;
+#setTimeZoneKey(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;
+#setUserAgent(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;
+#setClientInfo(Ljava/util/Optional;)Lio/trino/Session$SessionBuilder;

+###io/trino/Session
@351
+#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getUser()Ljava/lang/String;
+#getIdentity()Lio/trino/spi/security/Identity;
+#getSource()Ljava/util/Optional;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getPath()Lio/trino/sql/SqlPath;
+#getTimeZoneKey()Lio/trino/spi/type/TimeZoneKey;
+#getLocale()Ljava/util/Locale;
+#getRemoteUserAddress()Ljava/util/Optional;
+#getUserAgent()Ljava/util/Optional;
+#getClientInfo()Ljava/util/Optional;
+#getClientTags()Ljava/util/Set;
+#getClientCapabilities()Ljava/util/Set;
+#getTraceToken()Ljava/util/Optional;
+#getResourceEstimates()Lio/trino/spi/session/ResourceEstimates;
+#getStart()Ljava/time/Instant;
+#getTransactionId()Ljava/util/Optional;
+#getRequiredTransactionId()Lio/trino/transaction/TransactionId;
+#isClientTransactionSupport()Z
+#getSystemProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getConnectorProperties()Ljava/util/Map;
+#getConnectorProperties(Lio/trino/connector/CatalogName;)Ljava/util/Map;
+#getUnprocessedCatalogProperties()Ljava/util/Map;
+#getSystemProperties()Ljava/util/Map;
+#getPreparedStatements()Ljava/util/Map;
+#getPreparedStatementFromExecute(Lio/trino/sql/tree/Execute;)Ljava/lang/String;
+#getPreparedStatement(Ljava/lang/String;)Ljava/lang/String;
+#getProtocolHeaders()Lio/trino/client/ProtocolHeaders;
+#beginTransactionId(Lio/trino/transaction/TransactionId;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;)Lio/trino/Session;
+#withDefaultProperties(Ljava/util/Map;Ljava/util/Map;)Lio/trino/Session;
+#toConnectorSession()Lio/trino/spi/connector/ConnectorSession;
+#toConnectorSession(Ljava/lang/String;)Lio/trino/spi/connector/ConnectorSession;
+#toConnectorSession(Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorSession;
+#toSessionRepresentation()Lio/trino/SessionRepresentation;
+#toString()Ljava/lang/String;
+#builder(Lio/trino/metadata/SessionPropertyManager;)Lio/trino/Session$SessionBuilder;
+#builder(Lio/trino/Session;)Lio/trino/Session$SessionBuilder;
+#toSecurityContext()Lio/trino/security/SecurityContext;
@364
+#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;Ljava/util/Optional;)V
-#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;)V
@365
+#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;)V
+#withDefaultProperties(Ljava/util/Map;Ljava/util/Map;Lio/trino/security/AccessControl;)Lio/trino/Session;
-#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;Ljava/util/Optional;)V
-#withDefaultProperties(Ljava/util/Map;Ljava/util/Map;)Lio/trino/Session;
@371
+#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;)V
+#getCatalogProperties()Ljava/util/Map;
+#getCatalogProperties(Ljava/lang/String;)Ljava/util/Map;
-#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;)V
-#getConnectorProperties()Ljava/util/Map;
-#getConnectorProperties(Lio/trino/connector/CatalogName;)Ljava/util/Map;
-#getUnprocessedCatalogProperties()Ljava/util/Map;
@392
+#toConnectorSession(Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorSession;
-#toConnectorSession(Ljava/lang/String;)Lio/trino/spi/connector/ConnectorSession;
-#toConnectorSession(Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorSession;
@403
+#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;Ljava/util/Optional;)V
+#getExchangeEncryptionKey()Ljava/util/Optional;
+#withExchangeEncryption(Lio/airlift/slice/Slice;)Lio/trino/Session;
-#<init>(Lio/trino/spi/QueryId;Ljava/util/Optional;ZLio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/SqlPath;Ljava/util/Optional;Lio/trino/spi/type/TimeZoneKey;Ljava/util/Locale;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/time/Instant;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/SessionPropertyManager;Ljava/util/Map;Lio/trino/client/ProtocolHeaders;)V
@405
+#toConnectorSession(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorSession;
-#toConnectorSession(Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorSession;

+###io/trino/security/AccessControlUtil
@351
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;Lio/trino/security/AccessControl;)V
+#filterQueries(Lio/trino/spi/security/Identity;Ljava/util/List;Lio/trino/security/AccessControl;)Ljava/util/List;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;Lio/trino/security/AccessControl;)V
@365
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;Lio/trino/security/AccessControl;)V
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;Lio/trino/security/AccessControl;)V
-#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;Lio/trino/security/AccessControl;)V
-#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;Lio/trino/security/AccessControl;)V

+###io/trino/security/SecurityContext
@351
+#of(Lio/trino/Session;)Lio/trino/security/SecurityContext;
+#<init>(Lio/trino/transaction/TransactionId;Lio/trino/spi/security/Identity;Lio/trino/spi/QueryId;)V
+#getTransactionId()Lio/trino/transaction/TransactionId;
+#getIdentity()Lio/trino/spi/security/Identity;
+#getQueryId()Lio/trino/spi/QueryId;
+#toSystemSecurityContext()Lio/trino/spi/security/SystemSecurityContext;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/security/AccessControlConfig
@351
+#<init>()V
+#getAccessControlFiles()Ljava/util/List;
+#setAccessControlFiles(Ljava/lang/String;)Lio/trino/security/AccessControlConfig;
+#setAccessControlFiles(Ljava/util/List;)Lio/trino/security/AccessControlConfig;

+###io/trino/security/AccessControlManager
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/AccessControlConfig;)V
+#addSystemAccessControlFactory(Lio/trino/spi/security/SystemAccessControlFactory;)V
+#addCatalogAccessControl(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorAccessControl;)V
+#removeCatalogAccessControl(Lio/trino/connector/CatalogName;)V
+#loadSystemAccessControl()V
+#addSystemAccessControl(Lio/trino/spi/security/SystemAccessControl;)V
+#setSystemAccessControls(Ljava/util/List;)V
+#checkCanImpersonateUser(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetUser(Ljava/util/Optional;Ljava/lang/String;)V[deprecated]
+#checkCanReadSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanWriteSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanExecuteQuery(Lio/trino/spi/security/Identity;)V
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanDropSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanRenameSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#checkCanSetSchemaAuthorization(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanShowSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#filterSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanShowCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetColumnComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanShowTables(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#filterTables(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#filterColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanInsertIntoTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDeleteFromTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetViewAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDropView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Ljava/lang/String;Lio/trino/spi/security/Identity;Z)V
+#checkCanGrantSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanSetSystemSessionProperty(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetCatalogSessionProperty(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanExecuteProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#getRowFilters(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/List;
+#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
+#getAuthorizationSuccess()Lio/airlift/stats/CounterStat;
+#getAuthorizationFail()Lio/airlift/stats/CounterStat;
@352
+#checkCanUpdateTableColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRefreshMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@362
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/AccessControlConfig;Ljava/lang/String;)V
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanSetCatalogRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/AccessControlConfig;)V
-#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
-#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
@364
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteTableProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
@365
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Collection;)Ljava/util/Collection;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#checkCanTruncateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
-#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
-#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
+#filterCatalogs(Lio/trino/security/SecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@375
+#loadSystemAccessControl(Ljava/lang/String;Ljava/util/Map;)V
@380
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@383
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@388
+#setConnectorAccessControlProvider(Lio/trino/connector/CatalogServiceProvider;)V
-#addCatalogAccessControl(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorAccessControl;)V
-#removeCatalogAccessControl(Lio/trino/connector/CatalogName;)V
@390
+#checkCanSetViewComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@396
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/Identity;Z)V
@405
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;)V
+#checkCanAlterColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
@406
+#getColumnMask(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
-#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@408
+#checkCanCreateCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanDropCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V

+###io/trino/security/DenyAllAccessControl
@351
+#<init>()V
+#checkCanImpersonateUser(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetUser(Ljava/util/Optional;Ljava/lang/String;)V
+#checkCanReadSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanWriteSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanExecuteQuery(Lio/trino/spi/security/Identity;)V
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanDropSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanRenameSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#checkCanShowCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanShowCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetSchemaAuthorization(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetColumnComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanShowTables(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#filterTables(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#filterColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#filterSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanInsertIntoTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDeleteFromTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetViewAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDropView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Ljava/lang/String;Lio/trino/spi/security/Identity;Z)V
+#checkCanGrantSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanSetSystemSessionProperty(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetCatalogSessionProperty(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanExecuteProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
@352
+#checkCanUpdateTableColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRefreshMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@362
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanSetCatalogRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
-#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
-#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
@364
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteTableProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
@365
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Collection;)Ljava/util/Collection;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#checkCanTruncateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
-#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
-#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
+#filterCatalogs(Lio/trino/security/SecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@380
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@383
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@390
+#checkCanSetViewComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@396
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/Identity;Z)V
@405
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;)V
+#checkCanAlterColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
@408
+#checkCanCreateCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanDropCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V

+###io/trino/security/ForwardingAccessControl
@351
+#<init>()V
+#of(Ljava/util/function/Supplier;)Lio/trino/security/ForwardingAccessControl;
+#checkCanImpersonateUser(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanReadSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanWriteSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanSetUser(Ljava/util/Optional;Ljava/lang/String;)V[deprecated]
+#checkCanExecuteQuery(Lio/trino/spi/security/Identity;)V
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanDropSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanRenameSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#checkCanSetSchemaAuthorization(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanShowSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#filterSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanShowCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetColumnComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanShowTables(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#filterTables(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#filterColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanInsertIntoTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDeleteFromTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetViewAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDropView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Ljava/lang/String;Lio/trino/spi/security/Identity;Z)V
+#checkCanGrantSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanSetSystemSessionProperty(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetCatalogSessionProperty(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanExecuteProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#getRowFilters(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/List;
+#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@352
+#checkCanUpdateTableColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRefreshMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@362
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanSetCatalogRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
-#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
-#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
@364
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteTableProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
@365
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Collection;)Ljava/util/Collection;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#checkCanTruncateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
-#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
-#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
+#filterCatalogs(Lio/trino/security/SecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@380
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@383
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@390
+#checkCanSetViewComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@396
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/Identity;Z)V
@405
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;)V
+#checkCanAlterColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
@406
+#getColumnMask(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
-#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@408
+#checkCanCreateCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanDropCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V

+###io/trino/security/ViewAccessControl
@351
+#<init>(Lio/trino/security/AccessControl;Lio/trino/spi/security/Identity;)V
+#checkCanSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Ljava/lang/String;Lio/trino/spi/security/Identity;Z)V
+#getRowFilters(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/List;
+#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@367
+#filterColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
@396
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;)V
@406
+#getColumnMask(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
-#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;

+###io/trino/security/AccessControlModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#createAccessControl(Lio/trino/security/AccessControlManager;)Lio/trino/security/AccessControl;

+###io/trino/security/AllowAllAccessControl
@351
+#<init>()V
+#checkCanImpersonateUser(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetUser(Ljava/util/Optional;Ljava/lang/String;)V
+#checkCanReadSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanWriteSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanExecuteQuery(Lio/trino/spi/security/Identity;)V
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanDropSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanRenameSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#checkCanSetSchemaAuthorization(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanShowSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#filterSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanShowCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetColumnComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanShowTables(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#filterTables(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#filterColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanRenameColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanInsertIntoTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDeleteFromTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetViewAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDropView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Ljava/lang/String;Lio/trino/spi/security/Identity;Z)V
+#checkCanGrantSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanSetSystemSessionProperty(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetCatalogSessionProperty(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanExecuteProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
@352
+#checkCanUpdateTableColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRefreshMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@362
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanSetCatalogRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
-#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
-#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
@364
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteTableProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
@365
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Collection;)Ljava/util/Collection;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#checkCanTruncateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
-#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
-#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
+#filterCatalogs(Lio/trino/security/SecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@380
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@383
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@390
+#checkCanSetViewComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@396
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/Identity;Z)V
@405
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;)V
+#checkCanAlterColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
@408
+#checkCanCreateCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanDropCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V

+###io/trino/security/GroupProviderManager
@351
+#<init>()V
+#addGroupProviderFactory(Lio/trino/spi/security/GroupProviderFactory;)V
+#loadConfiguredGroupProvider()V
+#getGroups(Ljava/lang/String;)Ljava/util/Set;

+###io/trino/security/InjectedConnectorAccessControl
@351
+#<init>(Lio/trino/security/AccessControl;Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanDropSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanRenameSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSetSchemaAuthorization(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanShowSchemas(Lio/trino/spi/connector/ConnectorSecurityContext;)V
+#filterSchemas(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDropTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanRenameTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSetTableComment(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSetColumnComment(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanShowTables(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#filterTables(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#filterColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumn(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDropColumn(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSetTableAuthorization(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanRenameColumn(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSelectFromColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;)V
+#checkCanInsertIntoTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDeleteFromTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanCreateView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSetViewAuthorization(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanRenameView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDropView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;)V
+#checkCanSetCatalogSessionProperty(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanGrantSchemaPrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanCreateRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanGrantRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanRevokeRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanSetRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowCurrentRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleGrants(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanExecuteProcedure(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaRoutineName;)V
+#getRowFilter(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
+#getColumnMask(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
@352
+#checkCanUpdateTableColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanRefreshMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDropMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@362
+#checkCanGrantRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#checkCanSetRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/spi/connector/ConnectorSecurityContext;)V
+#checkCanShowRoles(Lio/trino/spi/connector/ConnectorSecurityContext;)V
+#checkCanShowCurrentRoles(Lio/trino/spi/connector/ConnectorSecurityContext;)V
+#checkCanShowRoleGrants(Lio/trino/spi/connector/ConnectorSecurityContext;)V
-#checkCanGrantRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanRevokeRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanSetRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanShowRoleAuthorizationDescriptors(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
-#checkCanShowRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
-#checkCanShowCurrentRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
-#checkCanShowRoleGrants(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
@364
+#checkCanCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanExecuteTableProcedure(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;)V
@365
+#checkCanTruncateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
+#checkCanCreateMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;Ljava/util/Set;)V
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
-#checkCanCreateMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@376
+#getRowFilters(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/List;
+#getColumnMasks(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
-#getRowFilter(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
-#getColumnMask(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
@380
+#checkCanExecuteFunction(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaRoutineName;)V
@383
+#checkCanExecuteFunction(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/spi/connector/SchemaRoutineName;)V
-#checkCanExecuteFunction(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaRoutineName;)V
@390
+#checkCanSetViewComment(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@400
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/spi/connector/SchemaRoutineName;Lio/trino/spi/security/TrinoPrincipal;Z)V
@405
+#checkCanCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/util/Map;)V
+#checkCanAlterColumn(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@406
+#getColumnMask(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
-#checkCanCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V

+###io/trino/security/AccessControl
@351
+#checkCanSetUser(Ljava/util/Optional;Ljava/lang/String;)V[deprecated]
+#checkCanImpersonateUser(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanReadSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanWriteSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanExecuteQuery(Lio/trino/spi/security/Identity;)V
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanDropSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanRenameSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#checkCanSetSchemaAuthorization(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanShowSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#filterSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanShowCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetColumnComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanShowTables(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#filterTables(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#filterColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanRenameColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanInsertIntoTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDeleteFromTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetViewAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDropView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Ljava/lang/String;Lio/trino/spi/security/Identity;Z)V
+#checkCanGrantSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanSetSystemSessionProperty(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetCatalogSessionProperty(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanExecuteProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#getRowFilters(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/List;
+#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@352
+#checkCanUpdateTableColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRefreshMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@362
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanSetCatalogRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
-#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
-#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanSetRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
-#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
@364
*#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V[deprecated]
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteTableProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
@365
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Collection;)Ljava/util/Collection;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#checkCanTruncateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
-#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
-#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
+#filterCatalogs(Lio/trino/security/SecurityContext;Ljava/util/Set;)Ljava/util/Set;
*#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V[deprecated]
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V[deprecated]
-#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V[deprecated]
@380
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@383
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@390
+#checkCanSetViewComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@396
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/Identity;Z)V
@405
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;)V
+#checkCanAlterColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
@406
+#getColumnMask(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
-#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@408
+#checkCanCreateCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanDropCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V

+###io/trino/ExceededSpillLimitException
@351
+#exceededLocalLimit(Lio/airlift/units/DataSize;)Lio/trino/ExceededSpillLimitException;
+#exceededPerQueryLocalLimit(Lio/airlift/units/DataSize;)Lio/trino/ExceededSpillLimitException;

+###io/trino/dispatcher/DispatchExecutor$DispatchExecutorMBeans
@351
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;)V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#getScheduledExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;

+###io/trino/dispatcher/LocalDispatchQueryFactory
@351
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollectorFactory;Lio/trino/execution/ClusterSizeMonitor;Lio/trino/dispatcher/DispatchExecutor;)V
+#createDispatchQuery(Lio/trino/Session;Ljava/lang/String;Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/server/protocol/Slug;Lio/trino/spi/resourcegroups/ResourceGroupId;)Lio/trino/dispatcher/DispatchQuery;
@371
+#createDispatchQuery(Lio/trino/Session;Ljava/util/Optional;Ljava/lang/String;Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/server/protocol/Slug;Lio/trino/spi/resourcegroups/ResourceGroupId;)Lio/trino/dispatcher/DispatchQuery;
-#createDispatchQuery(Lio/trino/Session;Ljava/lang/String;Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/server/protocol/Slug;Lio/trino/spi/resourcegroups/ResourceGroupId;)Lio/trino/dispatcher/DispatchQuery;
@403
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollectorFactory;Lio/trino/execution/ClusterSizeMonitor;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/FeaturesConfig;)V
-#<init>(Lio/trino/execution/QueryManager;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollectorFactory;Lio/trino/execution/ClusterSizeMonitor;Lio/trino/dispatcher/DispatchExecutor;)V
@405
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollectorFactory;Lio/trino/execution/ClusterSizeMonitor;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/FeaturesConfig;Lio/trino/client/NodeVersion;)V
-#<init>(Lio/trino/execution/QueryManager;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollectorFactory;Lio/trino/execution/ClusterSizeMonitor;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/FeaturesConfig;)V
@408
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/execution/QueryManagerConfig;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollectorFactory;Lio/trino/execution/ClusterSizeMonitor;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/FeaturesConfig;Lio/trino/client/NodeVersion;)V
-#<init>(Lio/trino/execution/QueryManager;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollectorFactory;Lio/trino/execution/ClusterSizeMonitor;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/FeaturesConfig;Lio/trino/client/NodeVersion;)V

+###io/trino/dispatcher/DispatchQueryFactory
@351
+#createDispatchQuery(Lio/trino/Session;Ljava/lang/String;Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/server/protocol/Slug;Lio/trino/spi/resourcegroups/ResourceGroupId;)Lio/trino/dispatcher/DispatchQuery;
@371
+#createDispatchQuery(Lio/trino/Session;Ljava/util/Optional;Ljava/lang/String;Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/server/protocol/Slug;Lio/trino/spi/resourcegroups/ResourceGroupId;)Lio/trino/dispatcher/DispatchQuery;
-#createDispatchQuery(Lio/trino/Session;Ljava/lang/String;Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/server/protocol/Slug;Lio/trino/spi/resourcegroups/ResourceGroupId;)Lio/trino/dispatcher/DispatchQuery;

+###io/trino/dispatcher/FailedDispatchQueryFactory
@351
+#<init>(Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Lio/trino/dispatcher/DispatchExecutor;)V
+#createFailedDispatchQuery(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/lang/Throwable;)Lio/trino/dispatcher/FailedDispatchQuery;
@405
+#<init>(Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/client/NodeVersion;)V
-#<init>(Lio/trino/event/QueryMonitor;Lio/trino/execution/LocationFactory;Lio/trino/dispatcher/DispatchExecutor;)V

+###io/trino/dispatcher/DispatchExecutor
@351
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/version/EmbedVersion;)V
+#getExecutor()Lcom/google/common/util/concurrent/ListeningExecutorService;
+#getScheduledExecutor()Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
+#getMbeans()Lio/trino/dispatcher/DispatchExecutor$DispatchExecutorMBeans;
+#shutdown()V
@357
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/spi/VersionEmbedder;)V
-#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/version/EmbedVersion;)V

+###io/trino/dispatcher/DecoratingListeningExecutorService$TaskDecorator
@351
+#decorate(Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#decorate(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;

+###io/trino/dispatcher/DispatchManager
@351
+#<init>(Lio/trino/execution/QueryIdGenerator;Lio/trino/execution/QueryPreparer;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/dispatcher/DispatchQueryFactory;Lio/trino/dispatcher/FailedDispatchQueryFactory;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/server/SessionSupplier;Lio/trino/server/SessionPropertyDefaults;Lio/trino/execution/QueryManagerConfig;Lio/trino/dispatcher/DispatchExecutor;)V
+#start()V
+#stop()V
+#getStats()Lio/trino/execution/QueryManagerStats;
+#createQueryId()Lio/trino/spi/QueryId;
+#createQuery(Lio/trino/spi/QueryId;Lio/trino/server/protocol/Slug;Lio/trino/server/SessionContext;Ljava/lang/String;)Lcom/google/common/util/concurrent/ListenableFuture;
+#waitForDispatched(Lio/trino/spi/QueryId;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getQueries()Ljava/util/List;
+#getQueuedQueries()J
+#getRunningQueries()J
+#isQueryRegistered(Lio/trino/spi/QueryId;)Z
+#getQuery(Lio/trino/spi/QueryId;)Lio/trino/dispatcher/DispatchQuery;
+#getQueryInfo(Lio/trino/spi/QueryId;)Lio/trino/server/BasicQueryInfo;
+#getFullQueryInfo(Lio/trino/spi/QueryId;)Ljava/util/Optional;
+#getDispatchInfo(Lio/trino/spi/QueryId;)Ljava/util/Optional;
+#cancelQuery(Lio/trino/spi/QueryId;)V
+#failQuery(Lio/trino/spi/QueryId;Ljava/lang/Throwable;)V
@360
+#<init>(Lio/trino/execution/QueryIdGenerator;Lio/trino/execution/QueryPreparer;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/dispatcher/DispatchQueryFactory;Lio/trino/dispatcher/FailedDispatchQueryFactory;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/server/SessionSupplier;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/SessionPropertyManager;Lio/trino/execution/QueryManagerConfig;Lio/trino/dispatcher/DispatchExecutor;)V
-#<init>(Lio/trino/execution/QueryIdGenerator;Lio/trino/execution/QueryPreparer;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/dispatcher/DispatchQueryFactory;Lio/trino/dispatcher/FailedDispatchQueryFactory;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/server/SessionSupplier;Lio/trino/server/SessionPropertyDefaults;Lio/trino/execution/QueryManagerConfig;Lio/trino/dispatcher/DispatchExecutor;)V
@371
+#<init>(Lio/trino/execution/QueryIdGenerator;Lio/trino/execution/QueryPreparer;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/dispatcher/DispatchQueryFactory;Lio/trino/dispatcher/FailedDispatchQueryFactory;Lio/trino/security/AccessControl;Lio/trino/server/SessionSupplier;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/SessionPropertyManager;Lio/trino/execution/QueryManagerConfig;Lio/trino/dispatcher/DispatchExecutor;)V
-#<init>(Lio/trino/execution/QueryIdGenerator;Lio/trino/execution/QueryPreparer;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/dispatcher/DispatchQueryFactory;Lio/trino/dispatcher/FailedDispatchQueryFactory;Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/server/SessionSupplier;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/SessionPropertyManager;Lio/trino/execution/QueryManagerConfig;Lio/trino/dispatcher/DispatchExecutor;)V

+###io/trino/dispatcher/LocalDispatchQuery
@351
+#<init>(Lio/trino/execution/QueryStateMachine;Lcom/google/common/util/concurrent/ListenableFuture;Lio/trino/event/QueryMonitor;Lio/trino/execution/ClusterSizeMonitor;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V
+#startWaitingForResources()V
+#recordHeartbeat()V
+#getLastHeartbeat()Lorg/joda/time/DateTime;
+#getDispatchedFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#getDispatchInfo()Lio/trino/dispatcher/DispatchInfo;
+#getQueryId()Lio/trino/spi/QueryId;
+#isDone()Z
+#getCreateTime()Lorg/joda/time/DateTime;
+#getExecutionStartTime()Ljava/util/Optional;
+#getEndTime()Ljava/util/Optional;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getBasicQueryInfo()Lio/trino/server/BasicQueryInfo;
+#getFullQueryInfo()Lio/trino/execution/QueryInfo;
+#getState()Lio/trino/execution/QueryState;
+#getSession()Lio/trino/Session;
+#fail(Ljava/lang/Throwable;)V
+#cancel()V
+#pruneInfo()V
+#getErrorCode()Ljava/util/Optional;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
@356
+#getPlanningTime()Ljava/util/Optional;

+###io/trino/dispatcher/QueuedStatementResource
@351
+#<init>(Lio/trino/spi/security/GroupProvider;Lio/trino/dispatcher/DispatchManager;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/server/ServerConfig;Lio/trino/server/ProtocolConfig;)V
+#stop()V
+#postStatement(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#getStatus(Lio/trino/spi/QueryId;Ljava/lang/String;JLio/airlift/units/Duration;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
+#cancelQuery(Lio/trino/spi/QueryId;Ljava/lang/String;J)Ljavax/ws/rs/core/Response;
@356
+#<init>(Lio/trino/spi/security/GroupProvider;Lio/trino/dispatcher/DispatchManager;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/trino/server/ServerConfig;Lio/trino/server/ProtocolConfig;)V
-#<init>(Lio/trino/spi/security/GroupProvider;Lio/trino/dispatcher/DispatchManager;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/server/ServerConfig;Lio/trino/server/ProtocolConfig;)V
@362
+#<init>(Lio/trino/server/HttpRequestSessionContextFactory;Lio/trino/dispatcher/DispatchManager;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/trino/server/ServerConfig;Lio/trino/server/ProtocolConfig;)V
-#<init>(Lio/trino/spi/security/GroupProvider;Lio/trino/dispatcher/DispatchManager;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/trino/server/ServerConfig;Lio/trino/server/ProtocolConfig;)V
@365
+#<init>(Lio/trino/server/HttpRequestSessionContextFactory;Lio/trino/dispatcher/DispatchManager;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/trino/server/ServerConfig;Lio/trino/server/ProtocolConfig;Lio/trino/execution/QueryManagerConfig;)V
+#start()V
-#<init>(Lio/trino/server/HttpRequestSessionContextFactory;Lio/trino/dispatcher/DispatchManager;Lio/trino/dispatcher/DispatchExecutor;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/trino/server/ServerConfig;Lio/trino/server/ProtocolConfig;)V

+###io/trino/dispatcher/DecoratingListeningExecutorService
@351
+#<init>(Lcom/google/common/util/concurrent/ListeningExecutorService;Lio/trino/dispatcher/DecoratingListeningExecutorService$TaskDecorator;)V
+#execute(Ljava/lang/Runnable;)V
+#submit(Ljava/util/concurrent/Callable;)Lcom/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;)Lcom/google/common/util/concurrent/ListenableFuture;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Lcom/google/common/util/concurrent/ListenableFuture;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isShutdown()Z
+#isTerminated()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
@406
+#close()V

+###io/trino/dispatcher/FailedDispatchQuery
@351
+#<init>(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/net/URI;Ljava/util/Optional;Ljava/lang/Throwable;Ljava/util/concurrent/Executor;)V
+#getBasicQueryInfo()Lio/trino/server/BasicQueryInfo;
+#getFullQueryInfo()Lio/trino/execution/QueryInfo;
+#getState()Lio/trino/execution/QueryState;
+#getSession()Lio/trino/Session;
+#getDispatchedFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#getDispatchInfo()Lio/trino/dispatcher/DispatchInfo;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#startWaitingForResources()V
+#fail(Ljava/lang/Throwable;)V
+#cancel()V
+#pruneInfo()V
+#getQueryId()Lio/trino/spi/QueryId;
+#isDone()Z
+#getErrorCode()Ljava/util/Optional;
+#recordHeartbeat()V
+#getLastHeartbeat()Lorg/joda/time/DateTime;
+#getCreateTime()Lorg/joda/time/DateTime;
+#getExecutionStartTime()Ljava/util/Optional;
+#getEndTime()Ljava/util/Optional;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
@356
+#getPlanningTime()Ljava/util/Optional;
@405
+#<init>(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/net/URI;Ljava/util/Optional;Ljava/lang/Throwable;Ljava/util/concurrent/Executor;Lio/trino/client/NodeVersion;)V
-#<init>(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/net/URI;Ljava/util/Optional;Ljava/lang/Throwable;Ljava/util/concurrent/Executor;)V

+###io/trino/dispatcher/CoordinatorLocation
@351
+#getUri(Ljavax/ws/rs/core/UriInfo;)Ljava/net/URI;

+###io/trino/dispatcher/LocalCoordinatorLocation
@351
+#<init>()V
+#getUri(Ljavax/ws/rs/core/UriInfo;)Ljava/net/URI;

+###io/trino/dispatcher/DispatchQuery
@351
+#recordHeartbeat()V
+#getDispatchedFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#getDispatchInfo()Lio/trino/dispatcher/DispatchInfo;
+#cancel()V

+###io/trino/dispatcher/DispatchInfo
@351
+#queued(Lio/airlift/units/Duration;Lio/airlift/units/Duration;)Lio/trino/dispatcher/DispatchInfo;
+#dispatched(Lio/trino/dispatcher/CoordinatorLocation;Lio/airlift/units/Duration;Lio/airlift/units/Duration;)Lio/trino/dispatcher/DispatchInfo;
+#failed(Lio/trino/execution/ExecutionFailureInfo;Lio/airlift/units/Duration;Lio/airlift/units/Duration;)Lio/trino/dispatcher/DispatchInfo;
+#getCoordinatorLocation()Ljava/util/Optional;
+#getFailureInfo()Ljava/util/Optional;
+#getElapsedTime()Lio/airlift/units/Duration;
+#getQueuedTime()Lio/airlift/units/Duration;

+###io/trino/cost/ExchangeStatsRule
@351
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/SymbolStatsEstimate$Builder
@351
+#<init>()V
+#setStatisticsRange(Lio/trino/cost/StatisticRange;)Lio/trino/cost/SymbolStatsEstimate$Builder;
+#setLowValue(D)Lio/trino/cost/SymbolStatsEstimate$Builder;
+#setHighValue(D)Lio/trino/cost/SymbolStatsEstimate$Builder;
+#setNullsFraction(D)Lio/trino/cost/SymbolStatsEstimate$Builder;
+#setAverageRowSize(D)Lio/trino/cost/SymbolStatsEstimate$Builder;
+#setDistinctValuesCount(D)Lio/trino/cost/SymbolStatsEstimate$Builder;
+#build()Lio/trino/cost/SymbolStatsEstimate;

+###io/trino/cost/StatsCalculatorModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#createNewStatsCalculator(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/cost/StatsCalculator;
@358
-#createNewStatsCalculator(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/cost/StatsCalculator;

+###io/trino/cost/ProjectStatsRule
@351
+#<init>(Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/ValuesStatsRule
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#calculate(Lio/trino/sql/planner/plan/ValuesNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@391
+#calculate(Lio/trino/sql/planner/plan/ValuesNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/ValuesNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/ScalarStatsCalculator
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
+#calculate(Lio/trino/sql/tree/Expression;Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/SymbolStatsEstimate;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/cost/SortStatsRule
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#calculate(Lio/trino/sql/planner/plan/SortNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@391
+#calculate(Lio/trino/sql/planner/plan/SortNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/SortNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/FilterStatsRule
@351
+#<init>(Lio/trino/cost/StatsNormalizer;Lio/trino/cost/FilterStatsCalculator;)V
+#getPattern()Lio/trino/matching/Pattern;
+#doCalculate(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
+#doCalculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@391
+#doCalculate(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
+#doCalculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#doCalculate(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#doCalculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/PlanNodeStatsEstimate$Builder
@351
+#<init>()V
+#setOutputRowCount(D)Lio/trino/cost/PlanNodeStatsEstimate$Builder;
+#addSymbolStatistics(Lio/trino/sql/planner/Symbol;Lio/trino/cost/SymbolStatsEstimate;)Lio/trino/cost/PlanNodeStatsEstimate$Builder;
+#addSymbolStatistics(Ljava/util/Map;)Lio/trino/cost/PlanNodeStatsEstimate$Builder;
+#removeSymbolStatistics(Lio/trino/sql/planner/Symbol;)Lio/trino/cost/PlanNodeStatsEstimate$Builder;
+#build()Lio/trino/cost/PlanNodeStatsEstimate;

+###io/trino/cost/TableScanStatsRule
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;
@391
+#<init>(Lio/trino/cost/StatsNormalizer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/StatsNormalizer;)V

+###io/trino/cost/CachingCostProvider
@351
+#<init>(Lio/trino/cost/CostCalculator;Lio/trino/cost/StatsProvider;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)V
+#<init>(Lio/trino/cost/CostCalculator;Lio/trino/cost/StatsProvider;Ljava/util/Optional;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)V
+#getCost(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/cost/PlanCostEstimate;

+###io/trino/cost/UnionStatsRule
@351
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/EnforceSingleRowStatsRule
@351
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/AssignUniqueIdStatsRule
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#calculate(Lio/trino/sql/planner/plan/AssignUniqueId;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@391
+#calculate(Lio/trino/sql/planner/plan/AssignUniqueId;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/AssignUniqueId;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/SimpleFilterProjectSemiJoinStatsRule
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/StatsNormalizer;Lio/trino/cost/FilterStatsCalculator;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/ComposableStatsCalculator
@351
+#<init>(Ljava/util/List;)V
+#calculateStats(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanNodeStatsEstimate;
@391
+#calculateStats(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Lio/trino/cost/PlanNodeStatsEstimate;
-#calculateStats(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanNodeStatsEstimate;

+###io/trino/cost/CostCalculatorUsingExchanges
@351
+#<init>(Lio/trino/cost/TaskCountEstimator;)V
+#calculateCost(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/cost/CostProvider;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanCostEstimate;

+###io/trino/cost/StatsProvider
@351
+#getStats(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/cost/PlanNodeStatsEstimate;

+###io/trino/cost/FilterStatsCalculator
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/StatsNormalizer;)V
+#filterStats(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanNodeStatsEstimate;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/StatsNormalizer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/StatsNormalizer;)V

+###io/trino/cost/TopNStatsRule
@351
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/SemiJoinStatsRule
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#calculate(Lio/trino/sql/planner/plan/SemiJoinNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@391
+#calculate(Lio/trino/sql/planner/plan/SemiJoinNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/SemiJoinNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/StatsCalculator
@351
+#calculateStats(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanNodeStatsEstimate;
@358
+#noopStatsCalculator()Lio/trino/cost/StatsCalculator;
@391
+#calculateStats(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Lio/trino/cost/PlanNodeStatsEstimate;
-#calculateStats(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanNodeStatsEstimate;

+###io/trino/cost/SymbolStatsEstimate
@351
+#unknown()Lio/trino/cost/SymbolStatsEstimate;
+#zero()Lio/trino/cost/SymbolStatsEstimate;
+#<init>(DDDDD)V
+#getLowValue()D
+#getHighValue()D
+#getNullsFraction()D
+#statisticRange()Lio/trino/cost/StatisticRange;
+#getValuesFraction()D
+#getAverageRowSize()D
+#getDistinctValuesCount()D
+#mapNullsFraction(Ljava/util/function/Function;)Lio/trino/cost/SymbolStatsEstimate;
+#mapDistinctValuesCount(Ljava/util/function/Function;)Lio/trino/cost/SymbolStatsEstimate;
+#isUnknown()Z
+#isSingleValue()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#builder()Lio/trino/cost/SymbolStatsEstimate$Builder;
+#buildFrom(Lio/trino/cost/SymbolStatsEstimate;)Lio/trino/cost/SymbolStatsEstimate$Builder;

+###io/trino/cost/CachingStatsProvider
@351
+#<init>(Lio/trino/cost/StatsCalculator;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)V
+#<init>(Lio/trino/cost/StatsCalculator;Ljava/util/Optional;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)V
+#getStats(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/cost/PlanNodeStatsEstimate;
@391
+#<init>(Lio/trino/cost/StatsCalculator;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)V
+#<init>(Lio/trino/cost/StatsCalculator;Ljava/util/Optional;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)V
-#<init>(Lio/trino/cost/StatsCalculator;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)V
-#<init>(Lio/trino/cost/StatsCalculator;Ljava/util/Optional;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)V

+###io/trino/cost/ComposableStatsCalculator$Rule
@351
+#getPattern()Lio/trino/matching/Pattern;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@391
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/PlanNodeStatsEstimateMath
@351
+#subtractSubsetStats(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/PlanNodeStatsEstimate;)Lio/trino/cost/PlanNodeStatsEstimate;
+#capStats(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/PlanNodeStatsEstimate;)Lio/trino/cost/PlanNodeStatsEstimate;
+#addStatsAndSumDistinctValues(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/PlanNodeStatsEstimate;)Lio/trino/cost/PlanNodeStatsEstimate;
+#addStatsAndMaxDistinctValues(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/PlanNodeStatsEstimate;)Lio/trino/cost/PlanNodeStatsEstimate;
+#addStatsAndCollapseDistinctValues(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/PlanNodeStatsEstimate;)Lio/trino/cost/PlanNodeStatsEstimate;
@374
+#intersectCorrelatedStats(Ljava/util/List;)Ljava/util/Map;
+#estimateCorrelatedConjunctionRowCount(Lio/trino/cost/PlanNodeStatsEstimate;Ljava/util/List;D)D

+###io/trino/cost/OutputStatsRule
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#calculate(Lio/trino/sql/planner/plan/OutputNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@391
+#calculate(Lio/trino/sql/planner/plan/OutputNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/OutputNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/LimitStatsRule
@351
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/AggregationStatsRule
@351
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#groupBy(Lio/trino/cost/PlanNodeStatsEstimate;Ljava/util/Collection;Ljava/util/Map;)Lio/trino/cost/PlanNodeStatsEstimate;
@354
+#getRowsCount(Lio/trino/cost/PlanNodeStatsEstimate;Ljava/util/Collection;)D

+###io/trino/cost/ComparisonStatsCalculator
@351
+#estimateExpressionToLiteralComparison(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/SymbolStatsEstimate;Ljava/util/Optional;Ljava/util/OptionalDouble;Lio/trino/sql/tree/ComparisonExpression$Operator;)Lio/trino/cost/PlanNodeStatsEstimate;
+#estimateExpressionToExpressionComparison(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/SymbolStatsEstimate;Ljava/util/Optional;Lio/trino/cost/SymbolStatsEstimate;Ljava/util/Optional;Lio/trino/sql/tree/ComparisonExpression$Operator;)Lio/trino/cost/PlanNodeStatsEstimate;

+###io/trino/cost/SpatialJoinStatsRule
@351
+#<init>(Lio/trino/cost/FilterStatsCalculator;Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/PlanNodeStatsAndCostSummary
@351
+#<init>(DDDDD)V
+#getOutputRowCount()D
+#getOutputSizeInBytes()D
+#getCpuCost()D
+#getMemoryCost()D
+#getNetworkCost()D

+###io/trino/cost/LocalCostEstimate
@351
+#unknown()Lio/trino/cost/LocalCostEstimate;
+#zero()Lio/trino/cost/LocalCostEstimate;
+#ofCpu(D)Lio/trino/cost/LocalCostEstimate;
+#ofNetwork(D)Lio/trino/cost/LocalCostEstimate;
+#of(DDD)Lio/trino/cost/LocalCostEstimate;
+#<init>(DDD)V
+#getCpuCost()D
+#getMaxMemory()D
+#getNetworkCost()D
+#toPlanCost()Lio/trino/cost/PlanCostEstimate;[deprecated]
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#addPartialComponents(Lio/trino/cost/LocalCostEstimate;Lio/trino/cost/LocalCostEstimate;[Lio/trino/cost/LocalCostEstimate;)Lio/trino/cost/LocalCostEstimate;

+###io/trino/cost/StatsNormalizer
@351
+#<init>()V
+#normalize(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanNodeStatsEstimate;
+#normalize(Lio/trino/cost/PlanNodeStatsEstimate;Ljava/util/Collection;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanNodeStatsEstimate;

+###io/trino/cost/CostCalculator$EstimatedExchanges
@351

+###io/trino/cost/CostProvider
@351
+#getCost(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/cost/PlanCostEstimate;

+###io/trino/cost/StatisticRange
@351
+#<init>(DDD)V
+#empty()Lio/trino/cost/StatisticRange;
+#from(Lio/trino/cost/SymbolStatsEstimate;)Lio/trino/cost/StatisticRange;
+#getLow()D
+#getHigh()D
+#getDistinctValuesCount()D
+#length()D
+#isEmpty()Z
+#overlapPercentWith(Lio/trino/cost/StatisticRange;)D
+#intersect(Lio/trino/cost/StatisticRange;)Lio/trino/cost/StatisticRange;
+#addAndSumDistinctValues(Lio/trino/cost/StatisticRange;)Lio/trino/cost/StatisticRange;
+#addAndMaxDistinctValues(Lio/trino/cost/StatisticRange;)Lio/trino/cost/StatisticRange;
+#addAndCollapseDistinctValues(Lio/trino/cost/StatisticRange;)Lio/trino/cost/StatisticRange;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/cost/SemiJoinStatsCalculator
@351
+#computeSemiJoin(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;)Lio/trino/cost/PlanNodeStatsEstimate;
+#computeAntiJoin(Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/cost/PlanNodeStatsEstimate;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;)Lio/trino/cost/PlanNodeStatsEstimate;

+###io/trino/cost/JoinStatsRule
@351
+#<init>(Lio/trino/cost/FilterStatsCalculator;Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/CostComparator
@351
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
+#<init>(DDD)V
+#forSession(Lio/trino/Session;)Lcom/google/common/collect/Ordering;
+#compare(Lio/trino/Session;Lio/trino/cost/PlanCostEstimate;Lio/trino/cost/PlanCostEstimate;)I
@365
+#<init>(Lio/trino/FeaturesConfig;)V
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
@373
+#<init>(Lio/trino/sql/planner/OptimizerConfig;)V
-#<init>(Lio/trino/FeaturesConfig;)V

+###io/trino/cost/PlanCostEstimate
@351
+#infinite()Lio/trino/cost/PlanCostEstimate;
+#unknown()Lio/trino/cost/PlanCostEstimate;
+#zero()Lio/trino/cost/PlanCostEstimate;
+#<init>(DDDD)V
+#<init>(DDDDLio/trino/cost/LocalCostEstimate;)V
+#getCpuCost()D
+#getMaxMemory()D
+#getMaxMemoryWhenOutputting()D
+#getNetworkCost()D
+#getRootNodeLocalCostEstimate()Lio/trino/cost/LocalCostEstimate;
+#hasUnknownComponents()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/cost/RowNumberStatsRule
@351
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#doCalculate(Lio/trino/sql/planner/plan/RowNumberNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
+#doCalculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@391
+#doCalculate(Lio/trino/sql/planner/plan/RowNumberNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
+#doCalculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#doCalculate(Lio/trino/sql/planner/plan/RowNumberNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#doCalculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/SimpleStatsRule
@351
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@391
+#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/TableStatsProvider;)Ljava/util/Optional;
-#calculate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/cost/TaskCountEstimator
@351
+#<init>(Lio/trino/execution/scheduler/NodeSchedulerConfig;Lio/trino/metadata/InternalNodeManager;)V
+#<init>(Ljava/util/function/IntSupplier;)V
+#estimateSourceDistributedTaskCount(Lio/trino/Session;)I
+#estimateHashedTaskCount(Lio/trino/Session;)I

+###io/trino/cost/PlanNodeStatsEstimate
@351
+#unknown()Lio/trino/cost/PlanNodeStatsEstimate;
+#<init>(DLjava/util/Map;)V
+#getOutputRowCount()D
+#getOutputSizeInBytes(Ljava/util/Collection;Lio/trino/sql/planner/TypeProvider;)D
+#mapOutputRowCount(Ljava/util/function/Function;)Lio/trino/cost/PlanNodeStatsEstimate;
+#mapSymbolColumnStatistics(Lio/trino/sql/planner/Symbol;Ljava/util/function/Function;)Lio/trino/cost/PlanNodeStatsEstimate;
+#getSymbolStatistics(Lio/trino/sql/planner/Symbol;)Lio/trino/cost/SymbolStatsEstimate;
+#getSymbolStatistics()Ljava/util/Map;
+#getSymbolsWithKnownStatistics()Ljava/util/Set;
+#isOutputRowCountUnknown()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#builder()Lio/trino/cost/PlanNodeStatsEstimate$Builder;
+#buildFrom(Lio/trino/cost/PlanNodeStatsEstimate;)Lio/trino/cost/PlanNodeStatsEstimate$Builder;

+###io/trino/cost/StatsAndCosts
@351
+#empty()Lio/trino/cost/StatsAndCosts;
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#getStats()Ljava/util/Map;
+#getCosts()Ljava/util/Map;
+#getForSubplan(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/cost/StatsAndCosts;
+#create(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/cost/CostProvider;)Lio/trino/cost/StatsAndCosts;
+#create(Lio/trino/execution/StageInfo;)Lio/trino/cost/StatsAndCosts;

+###io/trino/cost/CostCalculatorWithEstimatedExchanges
@351
+#<init>(Lio/trino/cost/CostCalculator;Lio/trino/cost/TaskCountEstimator;)V
+#calculateCost(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/cost/CostProvider;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanCostEstimate;
+#calculateRemoteGatherCost(D)Lio/trino/cost/LocalCostEstimate;
+#calculateRemoteRepartitionCost(D)Lio/trino/cost/LocalCostEstimate;
+#calculateLocalRepartitionCost(D)Lio/trino/cost/LocalCostEstimate;
+#calculateRemoteReplicateCost(DI)Lio/trino/cost/LocalCostEstimate;
+#calculateJoinCostWithoutOutput(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/TypeProvider;ZI)Lio/trino/cost/LocalCostEstimate;
+#calculateJoinInputCost(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/TypeProvider;ZI)Lio/trino/cost/LocalCostEstimate;
@375
+#adjustReplicatedJoinLocalExchangeCost(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/TypeProvider;ZI)Lio/trino/cost/LocalCostEstimate;

+###io/trino/cost/CostCalculator
@351
+#calculateCost(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/cost/StatsProvider;Lio/trino/cost/CostProvider;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;)Lio/trino/cost/PlanCostEstimate;

+###io/trino/annotation/UsedByGeneratedCode
@351

+###io/trino/server/ServerPluginsProvider
@353
+#<init>(Lio/trino/server/ServerPluginsProviderConfig;)V
+#loadPlugins(Lio/trino/server/PluginManager$PluginsProvider$Loader;Lio/trino/server/PluginManager$PluginsProvider$ClassLoaderFactory;)V
@364
+#<init>(Lio/trino/server/ServerPluginsProviderConfig;Ljava/util/concurrent/Executor;)V
-#<init>(Lio/trino/server/ServerPluginsProviderConfig;)V

+###io/trino/server/ui/FormWebUiConfig
@351
+#<init>()V
+#getSharedSecret()Ljava/util/Optional;
+#setSharedSecret(Ljava/lang/String;)Lio/trino/server/ui/FormWebUiConfig;
+#getSessionTimeout()Lio/airlift/units/Duration;
+#setSessionTimeout(Lio/airlift/units/Duration;)Lio/trino/server/ui/FormWebUiConfig;

+###io/trino/server/ui/ClusterResource
@351
+#<init>(Lio/trino/client/NodeVersion;Lio/airlift/node/NodeInfo;)V
+#getInfo()Lio/trino/server/ui/ClusterResource$ClusterInfo;

+###io/trino/server/ui/PasswordManagerFormAuthenticator
@351
+#<init>(Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/SecurityConfig;)V
+#isLoginEnabled(Z)Z
+#isPasswordAllowed(Z)Z
+#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Z
@359
+#<init>(Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/PasswordAuthenticatorConfig;Lio/trino/server/security/SecurityConfig;)V
+#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Optional;
-#<init>(Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/SecurityConfig;)V
-#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Z

+###io/trino/server/ui/InsecureFormAuthenticator
@351
+#<init>(Lio/trino/server/security/SecurityConfig;)V
+#isLoginEnabled(Z)Z
+#isPasswordAllowed(Z)Z
+#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Z
@359
+#<init>(Lio/trino/server/security/InsecureAuthenticatorConfig;Lio/trino/server/security/SecurityConfig;)V
+#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Optional;
-#<init>(Lio/trino/server/security/SecurityConfig;)V
-#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Z

+###io/trino/server/ui/OAuth2WebUiLogoutResource
@351
+#<init>()V
+#logout(Ljavax/ws/rs/core/HttpHeaders;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/core/SecurityContext;)Ljavax/ws/rs/core/Response;

+###io/trino/server/ui/WebUiAuthenticationConfig
@351
+#<init>()V
+#getAuthentication()Ljava/lang/String;
+#setAuthentication(Ljava/lang/String;)Lio/trino/server/ui/WebUiAuthenticationConfig;

+###io/trino/server/ui/ForWebUi
@351

+###io/trino/server/ui/NoWebUiAuthenticationFilter
@351
+#<init>()V
+#filter(Ljavax/ws/rs/container/ContainerRequestContext;)V

+###io/trino/server/ui/WebUiModule
@351
+#<init>()V

+###io/trino/server/ui/WebUiStaticResource
@351
+#<init>()V
+#getRoot()Ljavax/ws/rs/core/Response;
+#getUi()Ljavax/ws/rs/core/Response;
+#postFile(Ljava/lang/String;)Ljavax/ws/rs/core/Response;
+#getAssetsFile(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/ws/rs/core/Response;
+#getVendorFile(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/ws/rs/core/Response;
+#getFile(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/ws/rs/core/Response;

+###io/trino/server/ui/LoginResource
@351
+#<init>(Lio/trino/server/ui/FormWebUiAuthenticationFilter;)V
+#getFile(Ljavax/ws/rs/core/SecurityContext;)Ljavax/ws/rs/core/Response;
+#login(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/ws/rs/core/SecurityContext;)Ljavax/ws/rs/core/Response;
+#logout(Ljavax/ws/rs/core/HttpHeaders;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/core/SecurityContext;)Ljavax/ws/rs/core/Response;

+###io/trino/server/ui/FixedUiAuthenticatorModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/server/ui/FixedUserWebUiAuthenticationFilter
@351
+#<init>(Lio/trino/server/ui/FixedUserWebUiConfig;)V
+#<init>(Lio/trino/spi/security/Identity;)V
+#filter(Ljavax/ws/rs/container/ContainerRequestContext;)V

+###io/trino/server/ui/UiQueryResource
@351
+#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/server/ProtocolConfig;)V
+#getAllQueryInfo(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljava/util/List;
+#getQueryInfo(Lio/trino/spi/QueryId;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
+#killQuery(Lio/trino/spi/QueryId;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
+#preemptQuery(Lio/trino/spi/QueryId;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
@362
+#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/security/AccessControl;Lio/trino/server/HttpRequestSessionContextFactory;Lio/trino/server/ProtocolConfig;)V
-#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/server/ProtocolConfig;)V

+###io/trino/server/ui/DisabledWebUiAuthenticationFilter
@351
+#<init>()V
+#filter(Ljavax/ws/rs/container/ContainerRequestContext;)V

+###io/trino/server/ui/FormWebUiAuthenticationFilter
@351
+#<init>(Lio/trino/server/ui/FormWebUiConfig;Lio/trino/server/ui/FormAuthenticator;Ljava/util/Optional;)V
+#filter(Ljavax/ws/rs/container/ContainerRequestContext;)V
+#redirectFromSuccessfulLoginResponse(Ljava/lang/String;)Ljavax/ws/rs/core/Response$ResponseBuilder;
+#checkLoginCredentials(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Optional;
+#getDeleteCookie(Z)Ljavax/ws/rs/core/NewCookie;
+#isPasswordAllowed(Z)Z
+#redirectAllFormLoginToUi(Ljavax/ws/rs/container/ContainerRequestContext;)Z

+###io/trino/server/ui/OAuth2WebUiModule
@351
+#<init>()V

+###io/trino/server/ui/FixedUserWebUiConfig
@351
+#<init>()V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)Lio/trino/server/ui/FixedUserWebUiConfig;

+###io/trino/server/ui/OAuthWebUiCookie
@351
+#create(Ljava/lang/String;Ljava/time/Instant;Z)Ljavax/ws/rs/core/NewCookie;
+#read(Ljavax/ws/rs/container/ContainerRequestContext;)Ljava/util/Optional;
+#delete(Z)Ljavax/ws/rs/core/NewCookie;
@352
+#create(Ljava/lang/String;Ljava/time/Instant;)Ljavax/ws/rs/core/NewCookie;
+#read(Ljavax/ws/rs/core/Cookie;)Ljava/util/Optional;
+#delete()Ljavax/ws/rs/core/NewCookie;
-#create(Ljava/lang/String;Ljava/time/Instant;Z)Ljavax/ws/rs/core/NewCookie;
-#read(Ljavax/ws/rs/container/ContainerRequestContext;)Ljava/util/Optional;
-#delete(Z)Ljavax/ws/rs/core/NewCookie;

+###io/trino/server/ui/WorkerResource
@351
+#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/metadata/InternalNodeManager;Lio/trino/security/AccessControl;Lio/airlift/http/client/HttpClient;Lio/trino/spi/security/GroupProvider;Lio/trino/server/ProtocolConfig;)V
+#getStatus(Ljava/lang/String;)Ljavax/ws/rs/core/Response;
+#getThreads(Ljava/lang/String;)Ljavax/ws/rs/core/Response;
+#getThreads(Lio/trino/execution/TaskId;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
@362
+#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/metadata/InternalNodeManager;Lio/trino/security/AccessControl;Lio/airlift/http/client/HttpClient;Lio/trino/server/HttpRequestSessionContextFactory;Lio/trino/server/ProtocolConfig;)V
-#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/metadata/InternalNodeManager;Lio/trino/security/AccessControl;Lio/airlift/http/client/HttpClient;Lio/trino/spi/security/GroupProvider;Lio/trino/server/ProtocolConfig;)V
@376
+#getWorkerList()Ljavax/ws/rs/core/Response;

+###io/trino/server/ui/WebUiAuthenticationModule
@351
+#<init>()V
+#webUiAuthenticator(Ljava/lang/String;Lcom/google/inject/Module;)Lcom/google/inject/Module;
+#webUiAuthenticator(Ljava/lang/String;Ljava/lang/Class;Lcom/google/inject/Module;)Lcom/google/inject/Module;

+###io/trino/server/ui/ClusterStatsResource$ClusterStats
@351
+#<init>(JJJJJJJDJJJ)V
+#getRunningQueries()J
+#getBlockedQueries()J
+#getQueuedQueries()J
+#getActiveCoordinators()J
+#getActiveWorkers()J
+#getRunningDrivers()J
+#getTotalAvailableProcessors()J
+#getReservedMemory()D
+#getTotalInputRows()J
+#getTotalInputBytes()J
+#getTotalCpuTimeSecs()J

+###io/trino/server/ui/FormAuthenticator
@351
+#isLoginEnabled(Z)Z
+#isPasswordAllowed(Z)Z
+#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Z
@359
+#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Optional;
-#isValidCredential(Ljava/lang/String;Ljava/lang/String;Z)Z

+###io/trino/server/ui/FormUiAuthenticatorModule
@351
+#<init>(Z)V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/server/ui/OAuth2WebUiInstalled
@352
+#values()[Lio/trino/server/ui/OAuth2WebUiInstalled;
+#valueOf(Ljava/lang/String;)Lio/trino/server/ui/OAuth2WebUiInstalled;

+###io/trino/server/ui/WebUiAuthenticationFilter
@351

+###io/trino/server/ui/WebUiConfig
@351
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)Lio/trino/server/ui/WebUiConfig;

+###io/trino/server/ui/OAuth2WebUiAuthenticationFilter
@351
+#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Lio/trino/server/security/oauth2/OAuth2Config;)V
+#filter(Ljavax/ws/rs/container/ContainerRequestContext;)V
@381
+#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/OAuth2Config;)V
-#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Lio/trino/server/security/oauth2/OAuth2Config;)V
@388
+#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/TokenPairSerializer;Ljava/util/Optional;Lio/trino/server/security/oauth2/OAuth2Config;)V
-#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/OAuth2Config;)V

+###io/trino/server/ui/ClusterResource$ClusterInfo
@351
+#<init>(Lio/trino/client/NodeVersion;Ljava/lang/String;Lio/airlift/units/Duration;)V
+#getNodeVersion()Lio/trino/client/NodeVersion;
+#getEnvironment()Ljava/lang/String;
+#getUptime()Lio/airlift/units/Duration;

+###io/trino/server/ui/ClusterStatsResource
@351
+#<init>(Lio/trino/execution/scheduler/NodeSchedulerConfig;Lio/trino/metadata/InternalNodeManager;Lio/trino/dispatcher/DispatchManager;Lio/trino/memory/ClusterMemoryManager;)V
+#getClusterStats()Lio/trino/server/ui/ClusterStatsResource$ClusterStats;

+###io/trino/server/QueryProgressStats
@351
+#<init>(JJJJJJJJZLjava/util/OptionalDouble;)V
+#createQueryProgressStats(Lio/trino/server/BasicQueryStats;)Lio/trino/server/QueryProgressStats;
+#getElapsedTimeMillis()J
+#getQueuedTimeMillis()J
+#getCpuTimeMillis()J
+#getScheduledTimeMillis()J
+#getCurrentMemoryBytes()J
+#getPeakMemoryBytes()J
+#getInputRows()J
+#getInputBytes()J
+#isBlocked()Z
+#getProgressPercentage()Ljava/util/OptionalDouble;

+###io/trino/server/CoordinatorModule$ExecutorCleanup
@351
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;)V
+#shutdown()V
@386
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;)V
-#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;)V

+###io/trino/server/PluginManager$PluginsProvider
@353
+#loadPlugins(Lio/trino/server/PluginManager$PluginsProvider$Loader;Lio/trino/server/PluginManager$PluginsProvider$ClassLoaderFactory;)V

+###io/trino/server/InternalCommunicationModule
@351
+#<init>()V

+###io/trino/server/PluginManager$PluginsProvider$Loader
@353
+#load(Ljava/lang/String;Ljava/util/function/Supplier;)V

+###io/trino/server/TaskResource
@351
+#<init>(Lio/trino/execution/TaskManager;Lio/trino/metadata/SessionPropertyManager;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;)V
+#getAllTaskInfo(Ljavax/ws/rs/core/UriInfo;)Ljava/util/List;
+#createOrUpdateTask(Lio/trino/execution/TaskId;Lio/trino/server/TaskUpdateRequest;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#getTaskInfo(Lio/trino/execution/TaskId;Ljava/lang/Long;Lio/airlift/units/Duration;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
+#getTaskStatus(Lio/trino/execution/TaskId;Ljava/lang/Long;Lio/airlift/units/Duration;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
+#acknowledgeAndGetNewDynamicFilterDomains(Lio/trino/execution/TaskId;Ljava/lang/Long;Ljavax/ws/rs/core/UriInfo;)Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;
+#deleteTask(Lio/trino/execution/TaskId;ZLjavax/ws/rs/core/UriInfo;)Lio/trino/execution/TaskInfo;
+#getResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;Ljavax/ws/rs/container/AsyncResponse;)V
+#acknowledgeResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abortResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;Ljavax/ws/rs/core/UriInfo;)V
+#getReadFromOutputBufferTime()Lio/airlift/stats/TimeStat;
+#getResultsRequestTime()Lio/airlift/stats/TimeStat;
@366
+#<init>(Lio/trino/execution/TaskManager;Lio/trino/metadata/SessionPropertyManager;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/execution/FailureInjector;)V
+#createOrUpdateTask(Lio/trino/execution/TaskId;Lio/trino/server/TaskUpdateRequest;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
+#acknowledgeAndGetNewDynamicFilterDomains(Lio/trino/execution/TaskId;Ljava/lang/Long;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
+#abortResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
-#<init>(Lio/trino/execution/TaskManager;Lio/trino/metadata/SessionPropertyManager;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;)V
-#createOrUpdateTask(Lio/trino/execution/TaskId;Lio/trino/server/TaskUpdateRequest;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
-#acknowledgeAndGetNewDynamicFilterDomains(Lio/trino/execution/TaskId;Ljava/lang/Long;Ljavax/ws/rs/core/UriInfo;)Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;
-#abortResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;Ljavax/ws/rs/core/UriInfo;)V
@370
+#destroyTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
-#abortResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
@372
+#<init>(Lio/trino/execution/SqlTaskManager;Lio/trino/metadata/SessionPropertyManager;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/execution/FailureInjector;)V
-#<init>(Lio/trino/execution/TaskManager;Lio/trino/metadata/SessionPropertyManager;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/execution/FailureInjector;)V
@373
+#failTask(Lio/trino/execution/TaskId;Lio/trino/server/FailTaskRequest;Ljavax/ws/rs/core/UriInfo;)Lio/trino/execution/TaskInfo;
@398
+#getResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;Ljavax/ws/rs/container/AsyncResponse;)V
+#acknowledgeResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroyTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
-#getResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;Ljavax/ws/rs/container/AsyncResponse;)V
-#acknowledgeResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroyTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
@408
+#pruneCatalogs(Ljava/util/Set;)V

+###io/trino/server/ForWorkerInfo
@351

+###io/trino/server/ForAsyncHttp
@351

+###io/trino/server/ShutdownAction
@351
+#onShutdown()V

+###io/trino/server/PagesResponseWriter
@351
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
+#isWriteable(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)Z
+#getSize(Ljava/util/List;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)J
+#writeTo(Ljava/util/List;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/OutputStream;)V
+#writeTo(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/OutputStream;)V
+#getSize(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)J
@365
+#<init>(Lio/trino/FeaturesConfig;)V
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V

+###io/trino/server/security/jwt/JwkDecoder$Keys
@351
+#<init>(Ljava/util/List;)V
+#getKeys()Ljava/util/List;

+###io/trino/server/security/jwt/JwkDecoder$JwkPublicKey
@351
+#getKeyId()Ljava/lang/String;

+###io/trino/server/security/jwt/JwkDecoder$JwkEcPublicKey
@351
+#<init>(Ljava/lang/String;Ljava/security/spec/ECParameterSpec;Ljava/security/spec/ECPoint;)V
+#getKeyId()Ljava/lang/String;
+#getParams()Ljava/security/spec/ECParameterSpec;
+#getW()Ljava/security/spec/ECPoint;
+#getAlgorithm()Ljava/lang/String;
+#getFormat()Ljava/lang/String;
+#getEncoded()[B

+###io/trino/server/security/jwt/JwkDecoder$JwkRsaPublicKey
@351
+#<init>(Ljava/lang/String;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
+#getKeyId()Ljava/lang/String;
+#getModulus()Ljava/math/BigInteger;
+#getPublicExponent()Ljava/math/BigInteger;
+#getAlgorithm()Ljava/lang/String;
+#getFormat()Ljava/lang/String;
+#getEncoded()[B

+###io/trino/server/security/jwt/JwkDecoder$Key
@352
+#<init>(Ljava/lang/String;Ljava/util/Optional;)V
+#getKty()Ljava/lang/String;
+#getKid()Ljava/util/Optional;
+#getStringProperty(Ljava/lang/String;)Ljava/util/Optional;
+#set(Ljava/lang/String;Ljava/lang/Object;)V

+###io/trino/server/security/jwt/JwkSigningKeyResolver
@351
+#<init>(Lio/trino/server/security/jwt/JwkService;)V
+#resolveSigningKey(Lio/jsonwebtoken/JwsHeader;Lio/jsonwebtoken/Claims;)Ljava/security/Key;
+#resolveSigningKey(Lio/jsonwebtoken/JwsHeader;Ljava/lang/String;)Ljava/security/Key;

+###io/trino/server/security/jwt/JwtAuthenticatorSupportModule
@351
+#<init>()V

+###io/trino/server/security/jwt/FileSigningKeyResolver
@351
+#<init>(Lio/trino/server/security/jwt/JwtAuthenticatorConfig;)V
+#<init>(Ljava/lang/String;)V
+#resolveSigningKey(Lio/jsonwebtoken/JwsHeader;Lio/jsonwebtoken/Claims;)Ljava/security/Key;
+#resolveSigningKey(Lio/jsonwebtoken/JwsHeader;Ljava/lang/String;)Ljava/security/Key;
+#loadKeyFile(Ljava/io/File;)Lio/trino/server/security/jwt/FileSigningKeyResolver$LoadedKey;

+###io/trino/server/security/jwt/JwtAuthenticatorConfig
@351
+#<init>()V
+#getKeyFile()Ljava/lang/String;
+#setKeyFile(Ljava/lang/String;)Lio/trino/server/security/jwt/JwtAuthenticatorConfig;
+#getRequiredIssuer()Ljava/lang/String;
+#setRequiredIssuer(Ljava/lang/String;)Lio/trino/server/security/jwt/JwtAuthenticatorConfig;
+#getRequiredAudience()Ljava/lang/String;
+#setRequiredAudience(Ljava/lang/String;)Lio/trino/server/security/jwt/JwtAuthenticatorConfig;
+#getUserMappingPattern()Ljava/util/Optional;
+#setUserMappingPattern(Ljava/lang/String;)Lio/trino/server/security/jwt/JwtAuthenticatorConfig;
+#getUserMappingFile()Ljava/util/Optional;
+#setUserMappingFile(Ljava/io/File;)Lio/trino/server/security/jwt/JwtAuthenticatorConfig;
@352
+#getPrincipalField()Ljava/lang/String;
+#setPrincipalField(Ljava/lang/String;)Lio/trino/server/security/jwt/JwtAuthenticatorConfig;

+###io/trino/server/security/jwt/ForJwk
@351
@370
-###io/trino/server/security/jwt/ForJwk

+###io/trino/server/security/jwt/JwtAuthenticator
@351
+#<init>(Lio/trino/server/security/jwt/JwtAuthenticatorConfig;Lio/jsonwebtoken/SigningKeyResolver;)V
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;
@352
-#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;

+###io/trino/server/security/jwt/JwkService
@351
+#<init>(Lio/trino/server/security/jwt/JwtAuthenticatorConfig;Lio/airlift/http/client/HttpClient;)V
+#<init>(Ljava/net/URI;Lio/airlift/http/client/HttpClient;Lio/airlift/units/Duration;)V
+#start()V
+#stop()V
+#getKeys()Ljava/util/Map;
+#getKey(Ljava/lang/String;)Ljava/util/Optional;
+#refreshKeys()V
@359
+#<init>(Ljava/net/URI;Lio/airlift/http/client/HttpClient;)V
-#<init>(Lio/trino/server/security/jwt/JwtAuthenticatorConfig;Lio/airlift/http/client/HttpClient;)V

+###io/trino/server/security/jwt/JwkDecoder
@351
+#decodeKeys(Ljava/lang/String;)Ljava/util/Map;
+#tryDecodeJwkKey(Ljava/util/Map;)Ljava/util/Optional;
+#tryDecodeRsaKey(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;
+#tryDecodeEcKey(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;
@352
+#tryDecodeJwkKey(Lio/trino/server/security/jwt/JwkDecoder$Key;)Ljava/util/Optional;
+#tryDecodeRsaKey(Ljava/lang/String;Lio/trino/server/security/jwt/JwkDecoder$Key;)Ljava/util/Optional;
+#tryDecodeEcKey(Ljava/lang/String;Lio/trino/server/security/jwt/JwkDecoder$Key;)Ljava/util/Optional;
-#tryDecodeJwkKey(Ljava/util/Map;)Ljava/util/Optional;
-#tryDecodeRsaKey(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;
-#tryDecodeEcKey(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;

+###io/trino/server/security/UserMapping$Rule
@351
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ZLio/trino/server/security/UserMapping$Case;)V
+#mapUser(Ljava/lang/String;)Ljava/util/Optional;

+###io/trino/server/security/BasicAuthCredentials
@351
+#extractBasicAuthCredentials(Ljavax/ws/rs/container/ContainerRequestContext;)Ljava/util/Optional;
+#extractBasicAuthCredentials(Ljava/lang/String;)Ljava/util/Optional;
+#<init>(Ljava/lang/String;Ljava/util/Optional;)V
+#getUser()Ljava/lang/String;
+#getPassword()Ljava/util/Optional;

+###io/trino/server/security/ResourceAccessTypeLoader
@351
+#getAccessType(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Optional;

+###io/trino/server/security/ServerSecurityModule
@351
+#<init>()V
+#getAuthenticatorList(Lio/trino/server/security/SecurityConfig;Ljava/util/Map;)Ljava/util/List;
+#authenticatorModule(Ljava/lang/String;Ljava/lang/Class;Lcom/google/inject/Module;)Lcom/google/inject/Module;

+###io/trino/server/security/ResourceSecurityBinder
@351
+#resourceSecurityBinder(Lcom/google/inject/Binder;)Lio/trino/server/security/ResourceSecurityBinder;
+#resourceSecurity(Ljava/lang/reflect/AnnotatedElement;Lio/trino/server/security/ResourceSecurity$AccessType;)Lio/trino/server/security/ResourceSecurityBinder;
+#publicResource(Ljava/lang/reflect/AnnotatedElement;)Lio/trino/server/security/ResourceSecurityBinder;
+#anyUserResource(Ljava/lang/reflect/AnnotatedElement;)Lio/trino/server/security/ResourceSecurityBinder;
+#managementReadResource(Ljava/lang/reflect/AnnotatedElement;)Lio/trino/server/security/ResourceSecurityBinder;
+#managementWriteResource(Ljava/lang/reflect/AnnotatedElement;)Lio/trino/server/security/ResourceSecurityBinder;
+#internalOnlyResource(Ljava/lang/reflect/AnnotatedElement;)Lio/trino/server/security/ResourceSecurityBinder;

+###io/trino/server/security/oauth2/ScribeJavaOAuth2Client
@351
+#<init>(Lio/trino/server/security/oauth2/OAuth2Config;)V
+#getAuthorizationUri(Ljava/lang/String;Ljava/net/URI;)Ljava/net/URI;
+#getAccessToken(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$AccessToken;
@352
+#<init>(Lio/trino/server/security/oauth2/OAuth2Config;Lio/airlift/http/client/HttpClient;)V
+#getAuthorizationUri(Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Ljava/net/URI;
-#<init>(Lio/trino/server/security/oauth2/OAuth2Config;)V
-#getAuthorizationUri(Ljava/lang/String;Ljava/net/URI;)Ljava/net/URI;
@361
+#getOAuth2Response(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$OAuth2Response;
-#getAccessToken(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$AccessToken;
@381
-###io/trino/server/security/oauth2/ScribeJavaOAuth2Client

+###io/trino/server/security/oauth2/OAuth2TokenExchange$TokenPoll
@352
+#getToken()Ljava/util/Optional;
+#getError()Ljava/util/Optional;

+###io/trino/server/security/oauth2/OAuth2TokenExchange
@352
+#<init>(Lio/trino/server/security/oauth2/OAuth2Config;)V
+#stop()V
+#setAccessToken(Ljava/util/UUID;Ljava/lang/String;)V
+#setTokenExchangeError(Ljava/util/UUID;Ljava/lang/String;)V
+#getTokenPoll(Ljava/util/UUID;)Lcom/google/common/util/concurrent/ListenableFuture;
+#dropToken(Ljava/util/UUID;)V
@361
+#setAccessToken(Ljava/lang/String;Ljava/lang/String;)V
+#setTokenExchangeError(Ljava/lang/String;Ljava/lang/String;)V
+#hashAuthId(Ljava/util/UUID;)Ljava/lang/String;
-#setAccessToken(Ljava/util/UUID;Ljava/lang/String;)V
-#setTokenExchangeError(Ljava/util/UUID;Ljava/lang/String;)V

+###io/trino/server/security/oauth2/ForOAuth2
@351

+###io/trino/server/security/oauth2/OAuth2Service
@351
+#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/jsonwebtoken/SigningKeyResolver;Lio/trino/server/security/oauth2/OAuth2Config;)V
+#startChallenge(Ljava/net/URI;)Ljava/net/URI;
+#finishChallenge(Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Service$OAuthResult;
+#parseClaimsJws(Ljava/lang/String;)Lio/jsonwebtoken/Jws;
+#getCallbackErrorHtml(Ljava/lang/String;)Ljava/lang/String;
+#getInternalFailureHtml(Ljava/lang/String;)Ljava/lang/String;
@352
+#startWebUiChallenge(Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Service$OAuthChallenge;
+#startRestChallenge(Ljava/net/URI;Ljava/util/UUID;)Ljava/net/URI;
+#finishChallenge(Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Lio/trino/server/security/oauth2/OAuth2Service$OAuthResult;
+#getSuccessHtml()Ljava/lang/String;
-#startChallenge(Ljava/net/URI;)Ljava/net/URI;
-#finishChallenge(Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Service$OAuthResult;
@353
+#finishChallenge(Ljava/util/Optional;Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Lio/trino/server/security/oauth2/OAuth2Service$OAuthResult;
+#getAuthId(Ljava/lang/String;)Ljava/util/Optional;
-#finishChallenge(Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Lio/trino/server/security/oauth2/OAuth2Service$OAuthResult;
@361
+#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/jsonwebtoken/SigningKeyResolver;Lio/airlift/http/client/HttpClient;Lio/trino/server/security/oauth2/OAuth2Config;Lio/trino/server/security/oauth2/OAuth2TokenHandler;Ljava/util/Optional;)V
+#startOAuth2Challenge(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#startOAuth2Challenge(Ljavax/ws/rs/core/UriInfo;Ljava/lang/String;)Ljavax/ws/rs/core/Response;
+#handleOAuth2Error(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/ws/rs/core/Response;
+#finishOAuth2Challenge(Ljava/lang/String;Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Ljavax/ws/rs/core/Response;
+#convertTokenToClaims(Ljava/lang/String;)Ljava/util/Optional;
+#hashNonce(Ljava/lang/String;)Ljava/lang/String;
-#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/jsonwebtoken/SigningKeyResolver;Lio/trino/server/security/oauth2/OAuth2Config;)V
-#startWebUiChallenge(Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Service$OAuthChallenge;
-#startRestChallenge(Ljava/net/URI;Ljava/util/UUID;)Ljava/net/URI;
-#finishChallenge(Ljava/util/Optional;Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Lio/trino/server/security/oauth2/OAuth2Service$OAuthResult;
-#getAuthId(Ljava/lang/String;)Ljava/util/Optional;
-#parseClaimsJws(Ljava/lang/String;)Lio/jsonwebtoken/Jws;
@364
+#startOAuth2Challenge(Ljava/net/URI;Ljava/lang/String;)Ljavax/ws/rs/core/Response;
@371
+#startOAuth2Challenge(Ljava/net/URI;Ljava/util/Optional;)Ljavax/ws/rs/core/Response;
-#startOAuth2Challenge(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
-#startOAuth2Challenge(Ljavax/ws/rs/core/UriInfo;Ljava/lang/String;)Ljavax/ws/rs/core/Response;
-#startOAuth2Challenge(Ljava/net/URI;Ljava/lang/String;)Ljavax/ws/rs/core/Response;
@381
+#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/OAuth2Config;Lio/trino/server/security/oauth2/OAuth2TokenHandler;Ljava/util/Optional;)V
-#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/jsonwebtoken/SigningKeyResolver;Lio/airlift/http/client/HttpClient;Lio/trino/server/security/oauth2/OAuth2Config;Lio/trino/server/security/oauth2/OAuth2TokenHandler;Ljava/util/Optional;)V
-#convertTokenToClaims(Ljava/lang/String;)Ljava/util/Optional;
-#hashNonce(Ljava/lang/String;)Ljava/lang/String;
@388
+#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/OAuth2Config;Lio/trino/server/security/oauth2/OAuth2TokenHandler;Lio/trino/server/security/oauth2/TokenPairSerializer;Ljava/util/Optional;Ljava/util/Optional;)V
-#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/OAuth2Config;Lio/trino/server/security/oauth2/OAuth2TokenHandler;Ljava/util/Optional;)V

+###io/trino/server/security/oauth2/OAuth2Client
@351
+#getAuthorizationUri(Ljava/lang/String;Ljava/net/URI;)Ljava/net/URI;
+#getAccessToken(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$AccessToken;
@352
+#getAuthorizationUri(Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Ljava/net/URI;
-#getAuthorizationUri(Ljava/lang/String;Ljava/net/URI;)Ljava/net/URI;
@361
+#getOAuth2Response(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$OAuth2Response;
-#getAccessToken(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$AccessToken;
@381
+#load()V
+#createAuthorizationRequest(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$Request;
+#getOAuth2Response(Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Lio/trino/server/security/oauth2/OAuth2Client$Response;
+#getClaims(Ljava/lang/String;)Ljava/util/Optional;
-#getAuthorizationUri(Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Ljava/net/URI;
-#getOAuth2Response(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$OAuth2Response;
@388
+#refreshTokens(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Client$Response;

+###io/trino/server/security/oauth2/OAuth2Client$AccessToken
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;)V
+#getAccessToken()Ljava/lang/String;
+#getValidUntil()Ljava/util/Optional;
@352
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#getIdToken()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/util/Optional;)V
@361
-###io/trino/server/security/oauth2/OAuth2Client$AccessToken

+###io/trino/server/security/oauth2/OAuth2Authenticator
@352
+#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Lio/trino/server/security/oauth2/OAuth2Config;)V
@381
+#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/OAuth2Config;)V
-#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Lio/trino/server/security/oauth2/OAuth2Config;)V
@388
+#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/OAuth2Config;Lio/trino/server/security/oauth2/TokenRefresher;Lio/trino/server/security/oauth2/TokenPairSerializer;)V
-#<init>(Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/server/security/oauth2/OAuth2Config;)V

+###io/trino/server/security/oauth2/OAuth2Service$OAuthChallenge
@352
+#<init>(Ljava/net/URI;Ljava/time/Instant;Ljava/util/Optional;)V
+#getRedirectUrl()Ljava/net/URI;
+#getChallengeExpiration()Ljava/time/Instant;
+#getNonce()Ljava/util/Optional;
@361
-###io/trino/server/security/oauth2/OAuth2Service$OAuthChallenge

+###io/trino/server/security/oauth2/OAuth2Config
@351
+#<init>()V
+#getStateKey()Ljava/util/Optional;
+#setStateKey(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getAuthUrl()Ljava/lang/String;
+#setAuthUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getTokenUrl()Ljava/lang/String;
+#setTokenUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getJwksUrl()Ljava/lang/String;
+#setJwksUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getClientId()Ljava/lang/String;
+#setClientId(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getClientSecret()Ljava/lang/String;
+#setClientSecret(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getChallengeTimeout()Lio/airlift/units/Duration;
+#setChallengeTimeout(Lio/airlift/units/Duration;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getUserMappingPattern()Ljava/util/Optional;
+#setUserMappingPattern(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getUserMappingFile()Ljava/util/Optional;
+#setUserMappingFile(Ljava/io/File;)Lio/trino/server/security/oauth2/OAuth2Config;
@352
+#getAudience()Ljava/util/Optional;
+#setAudience(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getScopes()Ljava/util/Set;
+#setScopes(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getPrincipalField()Ljava/lang/String;
+#setPrincipalField(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
@361
+#getIssuer()Ljava/lang/String;
+#setIssuer(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getAccessTokenIssuer()Ljava/util/Optional;
+#setAccessTokenIssuer(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getUserinfoUrl()Ljava/util/Optional;
+#setUserinfoUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
+#getAdditionalAudiences()Ljava/util/List;
+#setAdditionalAudiences(Ljava/util/List;)Lio/trino/server/security/oauth2/OAuth2Config;
-#getAudience()Ljava/util/Optional;
-#setAudience(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
@369
+#getGroupsField()Ljava/util/Optional;
+#setGroupsField(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
@381
+#getMaxClockSkew()Lio/airlift/units/Duration;
+#setMaxClockSkew(Lio/airlift/units/Duration;)Lio/trino/server/security/oauth2/OAuth2Config;
+#isEnableDiscovery()Z
+#setEnableDiscovery(Z)Lio/trino/server/security/oauth2/OAuth2Config;
-#getAccessTokenIssuer()Ljava/util/Optional;
-#setAccessTokenIssuer(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
-#getAuthUrl()Ljava/lang/String;
-#setAuthUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
-#getTokenUrl()Ljava/lang/String;
-#setTokenUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
-#getJwksUrl()Ljava/lang/String;
-#setJwksUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
-#getUserinfoUrl()Ljava/util/Optional;
-#setUserinfoUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Config;
@388
+#isEnableRefreshTokens()Z
+#setEnableRefreshTokens(Z)Lio/trino/server/security/oauth2/OAuth2Config;

+###io/trino/server/security/oauth2/OAuth2Service$OAuthResult
@351
+#<init>(Ljava/lang/String;Ljava/time/Instant;)V
+#getAccessToken()Ljava/lang/String;
+#getTokenExpiration()Ljava/time/Instant;
@352
+#<init>(Ljava/util/Optional;Ljava/lang/String;Ljava/time/Instant;)V
+#getAuthId()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/time/Instant;)V
@361
-###io/trino/server/security/oauth2/OAuth2Service$OAuthResult

+###io/trino/server/security/oauth2/ChallengeFailedException
@351
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/trino/server/security/oauth2/NonceCookie
@352
+#create(Ljava/lang/String;Ljava/time/Instant;)Ljavax/ws/rs/core/NewCookie;
+#read(Ljavax/ws/rs/core/Cookie;)Ljava/util/Optional;
+#delete()Ljavax/ws/rs/core/NewCookie;

+###io/trino/server/security/oauth2/OAuth2ServiceModule
@351
+#<init>()V
+#createSigningKeyResolver(Lio/trino/server/security/oauth2/OAuth2Config;Lio/airlift/http/client/HttpClient;)Lio/jsonwebtoken/SigningKeyResolver;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@359
+#createJwkAddress(Lio/trino/server/security/oauth2/OAuth2Config;)Ljava/net/URI;
-#createSigningKeyResolver(Lio/trino/server/security/oauth2/OAuth2Config;Lio/airlift/http/client/HttpClient;)Lio/jsonwebtoken/SigningKeyResolver;
@370
+#createJwkService(Lio/trino/server/security/oauth2/OAuth2Config;Lio/airlift/http/client/HttpClient;)Lio/trino/server/security/jwt/JwkService;
+#createSigningKeyResolver(Lio/trino/server/security/jwt/JwkService;)Lio/jsonwebtoken/SigningKeyResolver;
-#createJwkAddress(Lio/trino/server/security/oauth2/OAuth2Config;)Ljava/net/URI;
@381
-#createJwkService(Lio/trino/server/security/oauth2/OAuth2Config;Lio/airlift/http/client/HttpClient;)Lio/trino/server/security/jwt/JwkService;
-#createSigningKeyResolver(Lio/trino/server/security/jwt/JwkService;)Lio/jsonwebtoken/SigningKeyResolver;
@388
+#getTokenRefresher(Lio/trino/server/security/oauth2/TokenPairSerializer;Lio/trino/server/security/oauth2/OAuth2TokenHandler;Lio/trino/server/security/oauth2/OAuth2Client;)Lio/trino/server/security/oauth2/TokenRefresher;

+###io/trino/server/security/oauth2/OAuth2TokenExchangeResource
@352
+#<init>(Lio/trino/server/security/oauth2/OAuth2TokenExchange;Lio/trino/dispatcher/DispatchExecutor;)V
+#getAuthenticationToken(Ljava/util/UUID;Ljavax/ws/rs/container/AsyncResponse;Ljavax/servlet/http/HttpServletRequest;)V
+#deleteAuthenticationToken(Ljava/util/UUID;)V
+#getTokenUri(Ljava/util/UUID;)Ljava/lang/String;
@361
+#<init>(Lio/trino/server/security/oauth2/OAuth2TokenExchange;Lio/trino/server/security/oauth2/OAuth2Service;Lio/trino/dispatcher/DispatchExecutor;)V
+#initiateTokenExchange(Ljava/lang/String;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#getInitiateUri(Ljava/util/UUID;)Ljava/lang/String;
-#<init>(Lio/trino/server/security/oauth2/OAuth2TokenExchange;Lio/trino/dispatcher/DispatchExecutor;)V
@370
+#deleteAuthenticationToken(Ljava/util/UUID;)Ljavax/ws/rs/core/Response;
-#deleteAuthenticationToken(Ljava/util/UUID;)V

+###io/trino/server/security/oauth2/OAuth2AuthenticationSupportModule
@352
+#<init>()V

+###io/trino/server/security/oauth2/OAuth2CallbackResource
@351
+#<init>(Lio/trino/server/security/oauth2/OAuth2Service;)V
+#callback(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/core/SecurityContext;)Ljavax/ws/rs/core/Response;
@352
+#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Ljava/util/Optional;Ljava/util/Optional;)V
+#callback(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/ws/rs/core/Cookie;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
-#<init>(Lio/trino/server/security/oauth2/OAuth2Service;)V
-#callback(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/core/SecurityContext;)Ljavax/ws/rs/core/Response;
@361
+#<init>(Lio/trino/server/security/oauth2/OAuth2Service;)V
-#<init>(Lio/trino/server/security/oauth2/OAuth2Service;Ljava/util/Optional;Ljava/util/Optional;)V

+###io/trino/server/security/ResourceAccessType
@351
+#<init>(Lio/trino/server/security/ResourceSecurityBinder$StaticResourceAccessTypeLoader;)V
+#getAccessType(Ljavax/ws/rs/container/ResourceInfo;)Lio/trino/server/security/ResourceSecurity$AccessType;

+###io/trino/server/security/AnnotatedResourceAccessTypeLoader
@351
+#<init>()V
+#getAccessType(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Optional;

+###io/trino/server/security/UserMapping
@351
+#createUserMapping(Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/server/security/UserMapping;
+#mapUser(Ljava/lang/String;)Ljava/lang/String;

+###io/trino/server/security/AbstractBearerAuthenticator
@352
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;
@355
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;Ljava/lang/String;)Lio/trino/spi/security/Identity;
+#extractToken(Ljavax/ws/rs/container/ContainerRequestContext;)Ljava/lang/String;
@369
+#<init>()V

+###io/trino/server/security/KerberosNameType
@351
+#values()[Lio/trino/server/security/KerberosNameType;
+#valueOf(Ljava/lang/String;)Lio/trino/server/security/KerberosNameType;
+#getGSSName(Lorg/ietf/jgss/GSSManager;Ljava/lang/String;Ljava/lang/String;)Lorg/ietf/jgss/GSSName;
+#makeServicePrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###io/trino/server/security/InsecureAuthenticator
@351
+#<init>(Lio/trino/server/security/InsecureAuthenticatorConfig;Lio/trino/server/ProtocolConfig;)V
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;

+###io/trino/server/security/KerberosAuthenticator
@351
+#<init>(Lio/trino/server/security/KerberosConfig;)V
+#shutdown()V
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;

+###io/trino/server/security/InternalPrincipal
@351
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/server/security/Authenticator
@351
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;

+###io/trino/server/security/PasswordAuthenticatorConfig
@351
+#<init>()V
+#getUserMappingPattern()Ljava/util/Optional;
+#setUserMappingPattern(Ljava/lang/String;)Lio/trino/server/security/PasswordAuthenticatorConfig;
+#getUserMappingFile()Ljava/util/Optional;
+#setUserMappingFile(Ljava/io/File;)Lio/trino/server/security/PasswordAuthenticatorConfig;
@355
+#getPasswordAuthenticatorFiles()Ljava/util/List;
+#setPasswordAuthenticatorFiles(Ljava/lang/String;)Lio/trino/server/security/PasswordAuthenticatorConfig;

+###io/trino/server/security/UserMappingException
@351
+#<init>(Ljava/lang/String;)V

+###io/trino/server/security/ResourceSecurity
@351
+#value()Lio/trino/server/security/ResourceSecurity$AccessType;

+###io/trino/server/security/ResourceSecurityBinder$StaticResourceAccessTypeLoader
@351
+#<init>(Ljava/util/Map;)V
+#getAccessType(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Optional;

+###io/trino/server/security/InsecureAuthenticatorConfig
@351
+#<init>()V
+#getUserMappingPattern()Ljava/util/Optional;
+#setUserMappingPattern(Ljava/lang/String;)Lio/trino/server/security/InsecureAuthenticatorConfig;
+#getUserMappingFile()Ljava/util/Optional;
+#setUserMappingFile(Ljava/io/File;)Lio/trino/server/security/InsecureAuthenticatorConfig;

+###io/trino/server/security/SecurityConfig
@351
+#<init>()V
+#isInsecureAuthenticationOverHttpAllowed()Z
+#setInsecureAuthenticationOverHttpAllowed(Z)Lio/trino/server/security/SecurityConfig;
+#getAuthenticationTypes()Ljava/util/List;
+#setAuthenticationTypes(Ljava/util/List;)Lio/trino/server/security/SecurityConfig;
+#setAuthenticationTypes(Ljava/lang/String;)Lio/trino/server/security/SecurityConfig;
+#getFixedManagementUser()Ljava/util/Optional;
+#setFixedManagementUser(Ljava/lang/String;)Lio/trino/server/security/SecurityConfig;
+#isFixedManagementUserForHttps()Z
+#setFixedManagementUserForHttps(Z)Lio/trino/server/security/SecurityConfig;

+###io/trino/server/security/KerberosConfig
@351
+#<init>()V
+#getKerberosConfig()Ljava/io/File;
+#setKerberosConfig(Ljava/io/File;)Lio/trino/server/security/KerberosConfig;
+#getServiceName()Ljava/lang/String;
+#setServiceName(Ljava/lang/String;)Lio/trino/server/security/KerberosConfig;
+#getKeytab()Ljava/io/File;
+#setKeytab(Ljava/io/File;)Lio/trino/server/security/KerberosConfig;
+#getPrincipalHostname()Ljava/lang/String;
+#setPrincipalHostname(Ljava/lang/String;)Lio/trino/server/security/KerberosConfig;
+#getNameType()Lio/trino/server/security/KerberosNameType;
+#setNameType(Lio/trino/server/security/KerberosNameType;)Lio/trino/server/security/KerberosConfig;
+#getUserMappingPattern()Ljava/util/Optional;
+#setUserMappingPattern(Ljava/lang/String;)Lio/trino/server/security/KerberosConfig;
+#getUserMappingFile()Ljava/util/Optional;
+#setUserMappingFile(Ljava/io/File;)Lio/trino/server/security/KerberosConfig;

+###io/trino/server/security/AuthenticationFilter
@351
+#<init>(Ljava/util/List;Lio/trino/server/InternalAuthenticationManager;Lio/trino/server/security/SecurityConfig;Lio/trino/server/security/InsecureAuthenticator;)V
+#filter(Ljavax/ws/rs/container/ContainerRequestContext;)V

+###io/trino/server/security/PasswordAuthenticator
@351
+#<init>(Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/PasswordAuthenticatorConfig;)V
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;
@359
+#<init>(Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/PasswordAuthenticatorConfig;Lio/trino/server/ProtocolConfig;)V
-#<init>(Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/PasswordAuthenticatorConfig;)V

+###io/trino/server/security/CertificateAuthenticatorManager
@351
+#<init>()V
+#setRequired()V
+#addCertificateAuthenticatorFactory(Lio/trino/spi/security/CertificateAuthenticatorFactory;)V
+#loadCertificateAuthenticator()V
+#getAuthenticator()Lio/trino/spi/security/CertificateAuthenticator;
+#useDefaultAuthenticator()V

+###io/trino/server/security/CertificateConfig
@351
+#<init>()V
+#getUserMappingPattern()Ljava/util/Optional;
+#setUserMappingPattern(Ljava/lang/String;)Lio/trino/server/security/CertificateConfig;
+#getUserMappingFile()Ljava/util/Optional;
+#setUserMappingFile(Ljava/io/File;)Lio/trino/server/security/CertificateConfig;

+###io/trino/server/security/ResourceSecurity$AccessType
@351
+#values()[Lio/trino/server/security/ResourceSecurity$AccessType;
+#valueOf(Ljava/lang/String;)Lio/trino/server/security/ResourceSecurity$AccessType;

+###io/trino/server/security/AuthenticationException
@351
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getAuthenticateHeader()Ljava/util/Optional;

+###io/trino/server/security/PasswordAuthenticatorManager
@351
+#<init>()V
+#setRequired()V
+#addPasswordAuthenticatorFactory(Lio/trino/spi/security/PasswordAuthenticatorFactory;)V
+#isLoaded()Z
+#loadPasswordAuthenticator()V
+#getAuthenticator()Lio/trino/spi/security/PasswordAuthenticator;
+#setAuthenticator(Lio/trino/spi/security/PasswordAuthenticator;)V
@355
+#<init>(Lio/trino/server/security/PasswordAuthenticatorConfig;)V
+#getAuthenticators()Ljava/util/List;
+#setAuthenticators([Lio/trino/spi/security/PasswordAuthenticator;)V
-#<init>()V
-#getAuthenticator()Lio/trino/spi/security/PasswordAuthenticator;
-#setAuthenticator(Lio/trino/spi/security/PasswordAuthenticator;)V

+###io/trino/server/security/CertificateAuthenticator
@351
+#<init>(Lio/trino/server/security/CertificateAuthenticatorManager;Lio/trino/server/security/CertificateConfig;)V
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;

+###io/trino/server/security/ResourceSecurityDynamicFeature
@351
+#<init>(Lio/trino/server/security/ResourceAccessType;Lio/trino/server/security/AuthenticationFilter;Lio/trino/server/ui/WebUiAuthenticationFilter;Lio/trino/server/InternalAuthenticationManager;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/server/security/SecurityConfig;Lio/trino/server/ProtocolConfig;)V
+#configure(Ljavax/ws/rs/container/ResourceInfo;Ljavax/ws/rs/core/FeatureContext;)V
@362
+#<init>(Lio/trino/server/security/ResourceAccessType;Lio/trino/server/security/AuthenticationFilter;Lio/trino/server/ui/WebUiAuthenticationFilter;Lio/trino/server/InternalAuthenticationManager;Lio/trino/security/AccessControl;Lio/trino/server/HttpRequestSessionContextFactory;Lio/trino/server/security/SecurityConfig;Lio/trino/server/ProtocolConfig;)V
-#<init>(Lio/trino/server/security/ResourceAccessType;Lio/trino/server/security/AuthenticationFilter;Lio/trino/server/ui/WebUiAuthenticationFilter;Lio/trino/server/InternalAuthenticationManager;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/server/security/SecurityConfig;Lio/trino/server/ProtocolConfig;)V

+###io/trino/server/security/UserMapping$UserMappingRules
@351
+#<init>(Ljava/util/List;)V
+#getRules()Ljava/util/List;

+###io/trino/server/PluginManager$PluginsProvider$ClassLoaderFactory
@353
+#create(Ljava/util/List;)Lio/trino/server/PluginClassLoader;
@370
+#create(Ljava/lang/String;Ljava/util/List;)Lio/trino/server/PluginClassLoader;
-#create(Ljava/util/List;)Lio/trino/server/PluginClassLoader;

+###io/trino/server/BasicQueryStats
@351
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
+#<init>(Lio/trino/execution/QueryStats;)V
+#immediateFailureQueryStats()Lio/trino/server/BasicQueryStats;
+#getCreateTime()Lorg/joda/time/DateTime;
+#getEndTime()Lorg/joda/time/DateTime;
+#getQueuedTime()Lio/airlift/units/Duration;
+#getElapsedTime()Lio/airlift/units/Duration;
+#getExecutionTime()Lio/airlift/units/Duration;
+#getTotalDrivers()I
+#getQueuedDrivers()I
+#getRunningDrivers()I
+#getCompletedDrivers()I
+#getRawInputDataSize()Lio/airlift/units/DataSize;
+#getRawInputPositions()J
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getCumulativeUserMemory()D
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakUserMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalScheduledTime()Lio/airlift/units/Duration;
+#isFullyBlocked()Z
+#getBlockedReasons()Ljava/util/Set;
+#getProgressPercentage()Ljava/util/OptionalDouble;
@360
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
+#getCumulativeSystemMemory()D
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
@369
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
-#getCumulativeSystemMemory()D
@373
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
+#getFailedCumulativeUserMemory()D
+#getFailedCpuTime()Lio/airlift/units/Duration;
+#getFailedScheduledTime()Lio/airlift/units/Duration;
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
@379
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
+#getFailedTasks()I
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIILio/airlift/units/DataSize;JLio/airlift/units/DataSize;DDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V

+###io/trino/server/AsyncHttpExecutionMBean
@351
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;)V
+#getResponseExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#getTimeoutExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;

+###io/trino/server/SessionSupplier
@351
+#createSession(Lio/trino/spi/QueryId;Lio/trino/server/SessionContext;)Lio/trino/Session;

+###io/trino/server/ServerInfoResource
@351
+#<init>(Lio/trino/client/NodeVersion;Lio/airlift/node/NodeInfo;Lio/trino/server/ServerConfig;Lio/trino/server/GracefulShutdownHandler;)V
+#getInfo()Lio/trino/client/ServerInfo;
+#updateState(Lio/trino/metadata/NodeState;)Ljavax/ws/rs/core/Response;
+#getServerState()Lio/trino/metadata/NodeState;
+#getServerCoordinator()Ljavax/ws/rs/core/Response;
+#startupComplete()V
@368
+#<init>(Lio/trino/client/NodeVersion;Lio/airlift/node/NodeInfo;Lio/trino/server/ServerConfig;Lio/trino/server/GracefulShutdownHandler;Lio/trino/server/StartupStatus;)V
-#<init>(Lio/trino/client/NodeVersion;Lio/airlift/node/NodeInfo;Lio/trino/server/ServerConfig;Lio/trino/server/GracefulShutdownHandler;)V
-#startupComplete()V

+###io/trino/server/InternalAuthenticationManager
@351
+#<init>(Lio/trino/server/InternalCommunicationConfig;Lio/airlift/node/NodeInfo;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#isInternalRequest(Ljavax/ws/rs/container/ContainerRequestContext;)Z
+#handleInternalRequest(Ljavax/ws/rs/container/ContainerRequestContext;)V
+#filterRequest(Lio/airlift/http/client/Request;)Lio/airlift/http/client/Request;
@378
+#<init>(Lio/trino/server/InternalCommunicationConfig;Lio/trino/server/security/SecurityConfig;Lio/airlift/node/NodeInfo;)V
-#<init>(Lio/trino/server/InternalCommunicationConfig;Lio/airlift/node/NodeInfo;)V

+###io/trino/server/PrefixObjectNameGeneratorModule$PrefixObjectNameGenerator
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#generatedNameOf(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/String;

+###io/trino/server/QueryExecutionFactoryModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/server/ExchangeExecutionMBean
@351
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;)V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;

+###io/trino/server/ResourceGroupInfo
@351
+#<init>(Lio/trino/spi/resourcegroups/ResourceGroupId;Lio/trino/spi/resourcegroups/ResourceGroupState;Lio/trino/spi/resourcegroups/SchedulingPolicy;ILio/airlift/units/DataSize;IIILio/airlift/units/DataSize;Lio/airlift/units/Duration;IIILjava/util/Optional;Ljava/util/Optional;)V
+#getId()Lio/trino/spi/resourcegroups/ResourceGroupId;
+#getState()Lio/trino/spi/resourcegroups/ResourceGroupState;
+#getSchedulingPolicy()Lio/trino/spi/resourcegroups/SchedulingPolicy;
+#getSchedulingWeight()I
+#getSoftMemoryLimit()Lio/airlift/units/DataSize;
+#getSoftConcurrencyLimit()I
+#getHardConcurrencyLimit()I
+#getMaxQueuedQueries()I
+#getMemoryUsage()Lio/airlift/units/DataSize;
+#getCpuUsage()Lio/airlift/units/Duration;
+#getNumQueuedQueries()I
+#getNumRunningQueries()I
+#getNumEligibleSubGroups()I
+#getSubGroups()Ljava/util/Optional;
+#getRunningQueries()Ljava/util/Optional;

+###io/trino/server/SessionContext
@351
+#getProtocolHeaders()Lio/trino/client/ProtocolHeaders;
+#getAuthenticatedIdentity()Ljava/util/Optional;
+#getIdentity()Lio/trino/spi/security/Identity;
+#getCatalog()Ljava/lang/String;
+#getSchema()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#getSource()Ljava/lang/String;
+#getRemoteUserAddress()Ljava/lang/String;
+#getUserAgent()Ljava/lang/String;
+#getClientInfo()Ljava/lang/String;
+#getClientTags()Ljava/util/Set;
+#getClientCapabilities()Ljava/util/Set;
+#getResourceEstimates()Lio/trino/spi/session/ResourceEstimates;
+#getTimeZoneId()Ljava/lang/String;
+#getLanguage()Ljava/lang/String;
+#getSystemProperties()Ljava/util/Map;
+#getCatalogSessionProperties()Ljava/util/Map;
+#getPreparedStatements()Ljava/util/Map;
+#getTransactionId()Ljava/util/Optional;
+#getTraceToken()Ljava/util/Optional;
+#supportClientTransaction()Z
@362
+#<init>(Lio/trino/client/ProtocolHeaders;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/spi/security/Identity;Lio/trino/spi/security/SelectedRole;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Optional;ZLjava/util/Optional;)V
+#getSelectedRole()Lio/trino/spi/security/SelectedRole;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getPath()Ljava/util/Optional;
+#getSource()Ljava/util/Optional;
+#getRemoteUserAddress()Ljava/util/Optional;
+#getUserAgent()Ljava/util/Optional;
+#getClientInfo()Ljava/util/Optional;
+#getTimeZoneId()Ljava/util/Optional;
+#getLanguage()Ljava/util/Optional;
-#getCatalog()Ljava/lang/String;
-#getSchema()Ljava/lang/String;
-#getPath()Ljava/lang/String;
-#getSource()Ljava/lang/String;
-#getRemoteUserAddress()Ljava/lang/String;
-#getUserAgent()Ljava/lang/String;
-#getClientInfo()Ljava/lang/String;
-#getTimeZoneId()Ljava/lang/String;
-#getLanguage()Ljava/lang/String;

+###io/trino/server/ServerPluginsProviderConfig
@353
+#<init>()V
+#getInstalledPluginsDir()Ljava/io/File;
+#setInstalledPluginsDir(Ljava/io/File;)Lio/trino/server/ServerPluginsProviderConfig;

+###io/trino/server/NoOpSessionSupplier
@351
+#<init>()V
+#createSession(Lio/trino/spi/QueryId;Lio/trino/server/SessionContext;)Lio/trino/Session;

+###io/trino/server/WorkerModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#getResourceGroupManager(Lio/trino/execution/resourcegroups/ResourceGroupManager;)Lio/trino/execution/resourcegroups/ResourceGroupManager;

+###io/trino/server/SliceSerialization
@351

+###io/trino/server/InternalHeaders
@351

+###io/trino/server/StatusResource
@351
+#<init>(Lio/trino/client/NodeVersion;Lio/airlift/node/NodeInfo;Lio/trino/server/ServerConfig;Lio/trino/memory/LocalMemoryManager;)V
+#statusPing()Ljavax/ws/rs/core/Response;
+#getStatus()Lio/trino/server/NodeStatus;

+###io/trino/server/PrefixObjectNameGeneratorModule
@351
+#<init>(Ljava/lang/String;)V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/server/NodeStatus
@351
+#<init>(Ljava/lang/String;Lio/trino/client/NodeVersion;Ljava/lang/String;ZLio/airlift/units/Duration;Ljava/lang/String;Ljava/lang/String;Lio/trino/memory/MemoryInfo;IDDJJJ)V
+#getNodeId()Ljava/lang/String;
+#getNodeVersion()Lio/trino/client/NodeVersion;
+#getEnvironment()Ljava/lang/String;
+#isCoordinator()Z
+#getUptime()Lio/airlift/units/Duration;
+#getExternalAddress()Ljava/lang/String;
+#getInternalAddress()Ljava/lang/String;
+#getMemoryInfo()Lio/trino/memory/MemoryInfo;
+#getProcessors()I
+#getProcessCpuLoad()D
+#getSystemCpuLoad()D
+#getHeapUsed()J
+#getHeapAvailable()J
+#getNonHeapUsed()J

+###io/trino/server/DefaultShutdownAction
@351
+#<init>()V
+#onShutdown()V

+###io/trino/server/Server
@351
+#<init>()V
+#start(Ljava/lang/String;)V
@392
+#addConnectorEventListeners(Lio/trino/metadata/CatalogManager;Lio/trino/connector/ConnectorServicesProvider;Lio/trino/eventlistener/EventListenerManager;)V

+###io/trino/server/SessionPropertyConfigurationManagerContextInstance
@351
+#<init>(Ljava/lang/String;)V
+#getEnvironment()Ljava/lang/String;

+###io/trino/server/QueryStateInfoResource
@351
+#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/server/ProtocolConfig;)V
+#getQueryStateInfos(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljava/util/List;
+#getQueryStateInfo(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Lio/trino/server/QueryStateInfo;
@362
+#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControl;Lio/trino/server/HttpRequestSessionContextFactory;Lio/trino/server/ProtocolConfig;)V
-#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/server/ProtocolConfig;)V

+###io/trino/server/protocol/ExecutingStatementResource
@351
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/ServerConfig;)V
+#stop()V
+#getQueryResults(Lio/trino/spi/QueryId;Ljava/lang/String;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljavax/ws/rs/core/UriInfo;Ljavax/ws/rs/container/AsyncResponse;)V
+#cancelQuery(Lio/trino/spi/QueryId;Ljava/lang/String;J)Ljavax/ws/rs/core/Response;
+#partialCancel(Lio/trino/spi/QueryId;ILjava/lang/String;J)V
@356
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/ServerConfig;)V
-#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/ServerConfig;)V
@369
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/ServerConfig;)V
-#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/ServerConfig;)V
@372
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/protocol/PreparedStatementEncoder;Lio/trino/server/ServerConfig;)V
-#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/ServerConfig;)V
@394
+#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/protocol/PreparedStatementEncoder;Lio/trino/server/ServerConfig;)V
-#<init>(Lio/trino/execution/QueryManager;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/server/protocol/QueryInfoUrlFactory;Lio/airlift/concurrent/BoundedExecutor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/protocol/PreparedStatementEncoder;Lio/trino/server/ServerConfig;)V

+###io/trino/server/protocol/QueryResultRows$Builder
@351
+#<init>(Lio/trino/Session;)V
+#addPage(Lio/trino/spi/Page;)Lio/trino/server/protocol/QueryResultRows$Builder;
+#addPages(Ljava/util/List;)Lio/trino/server/protocol/QueryResultRows$Builder;
+#withColumnsAndTypes(Ljava/util/List;Ljava/util/List;)Lio/trino/server/protocol/QueryResultRows$Builder;
+#withSingleBooleanValue(Lio/trino/client/Column;Z)Lio/trino/server/protocol/QueryResultRows$Builder;
+#withExceptionConsumer(Ljava/util/function/Consumer;)Lio/trino/server/protocol/QueryResultRows$Builder;
+#build()Lio/trino/server/protocol/QueryResultRows;

+###io/trino/server/protocol/QueryResultRows
@351
+#isEmpty()Z
+#getColumns()Ljava/util/Optional;
+#getTotalRowsCount()J
+#getUpdateCount()Ljava/util/Optional;
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;
+#empty(Lio/trino/Session;)Lio/trino/server/protocol/QueryResultRows;
+#queryResultRowsBuilder(Lio/trino/Session;)Lio/trino/server/protocol/QueryResultRows$Builder;

+###io/trino/server/protocol/Slug$Context
@351
+#values()[Lio/trino/server/protocol/Slug$Context;
+#valueOf(Ljava/lang/String;)Lio/trino/server/protocol/Slug$Context;

+###io/trino/server/protocol/Slug
@351
+#createNew()Lio/trino/server/protocol/Slug;
+#makeSlug(Lio/trino/server/protocol/Slug$Context;J)Ljava/lang/String;
+#isValid(Lio/trino/server/protocol/Slug$Context;Ljava/lang/String;J)Z

+###io/trino/server/ExpressionSerialization$ExpressionSerializer
@351
+#<init>()V
+#serialize(Lio/trino/sql/tree/Expression;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V

+###io/trino/server/ServletSecurityUtils
@351
+#sendErrorMessage(Ljavax/ws/rs/container/ContainerRequestContext;Ljavax/ws/rs/core/Response$Status;Ljava/lang/String;)V
+#sendWwwAuthenticate(Ljavax/ws/rs/container/ContainerRequestContext;Ljava/lang/String;Ljava/util/Collection;)V
+#setAuthenticatedIdentity(Ljavax/ws/rs/container/ContainerRequestContext;Ljava/lang/String;)V
+#setAuthenticatedIdentity(Ljavax/ws/rs/container/ContainerRequestContext;Lio/trino/spi/security/Identity;)V

+###io/trino/server/TaskUpdateRequest
@351
+#<init>(Lio/trino/SessionRepresentation;Ljava/util/Map;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;)V
+#getSession()Lio/trino/SessionRepresentation;
+#getExtraCredentials()Ljava/util/Map;
+#getFragment()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#getOutputIds()Lio/trino/execution/buffer/OutputBuffers;
+#getTotalPartitions()Ljava/util/OptionalInt;
+#toString()Ljava/lang/String;
@360
+#<init>(Lio/trino/SessionRepresentation;Ljava/util/Map;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;Ljava/util/Map;)V
+#getDynamicFilterDomains()Ljava/util/Map;
-#<init>(Lio/trino/SessionRepresentation;Ljava/util/Map;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;)V
@362
+#<init>(Lio/trino/SessionRepresentation;Ljava/util/Map;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/Map;)V
-#<init>(Lio/trino/SessionRepresentation;Ljava/util/Map;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;Ljava/util/Map;)V
-#getTotalPartitions()Ljava/util/OptionalInt;
@369
+#getSplitAssignments()Ljava/util/List;
-#getSources()Ljava/util/List;
@403
+#<init>(Lio/trino/SessionRepresentation;Ljava/util/Map;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/Map;Ljava/util/Optional;)V
+#getExchangeEncryptionKey()Ljava/util/Optional;
-#<init>(Lio/trino/SessionRepresentation;Ljava/util/Map;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/Map;)V

+###io/trino/server/StatementHttpExecutionMBean
@351
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;)V
+#getResponseExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#getTimeoutExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;

+###io/trino/server/DynamicFilterService
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/DynamicFilterConfig;)V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Ljava/util/concurrent/ExecutorService;)V
+#stop()V
+#registerQuery(Lio/trino/execution/SqlQueryExecution;Lio/trino/sql/planner/SubPlan;)V
+#registerQuery(Lio/trino/spi/QueryId;Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
+#getDynamicFilteringStats(Lio/trino/spi/QueryId;Lio/trino/Session;)Lio/trino/server/DynamicFilterService$DynamicFiltersStats;
+#removeQuery(Lio/trino/spi/QueryId;)V
+#isCollectingTaskNeeded(Lio/trino/spi/QueryId;Lio/trino/sql/planner/PlanFragment;)Z
+#unblockStageDynamicFilters(Lio/trino/spi/QueryId;Lio/trino/sql/planner/PlanFragment;)V
+#createDynamicFilter(Lio/trino/spi/QueryId;Ljava/util/List;Ljava/util/Map;Lio/trino/sql/planner/TypeProvider;)Lio/trino/spi/connector/DynamicFilter;
+#addTaskDynamicFilters(Lio/trino/execution/TaskId;Ljava/util/Map;)V
+#stageCannotScheduleMoreTasks(Lio/trino/execution/StageId;I)V
@360
+#registerDynamicFilterConsumer(Lio/trino/spi/QueryId;Ljava/util/Set;Ljava/util/function/Consumer;)V
+#getOutboundDynamicFilters(Lio/trino/sql/planner/PlanFragment;)Ljava/util/Set;
@367
+#registerQueryRetry(Lio/trino/spi/QueryId;I)V
+#unblockStageDynamicFilters(Lio/trino/spi/QueryId;ILio/trino/sql/planner/PlanFragment;)V
+#registerDynamicFilterConsumer(Lio/trino/spi/QueryId;ILjava/util/Set;Ljava/util/function/Consumer;)V
+#stageCannotScheduleMoreTasks(Lio/trino/execution/StageId;II)V
-#unblockStageDynamicFilters(Lio/trino/spi/QueryId;Lio/trino/sql/planner/PlanFragment;)V
-#registerDynamicFilterConsumer(Lio/trino/spi/QueryId;Ljava/util/Set;Ljava/util/function/Consumer;)V
-#stageCannotScheduleMoreTasks(Lio/trino/execution/StageId;I)V
@370
+#isStageSchedulingNeededToCollectDynamicFilters(Lio/trino/spi/QueryId;Lio/trino/sql/planner/PlanFragment;)Z
@374
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/DynamicFilterConfig;)V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/spi/type/TypeOperators;Ljava/util/concurrent/ExecutorService;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/DynamicFilterConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Ljava/util/concurrent/ExecutorService;)V
@391
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/spi/type/TypeOperators;Ljava/util/concurrent/ExecutorService;)V
-#stop()V

+###io/trino/server/ResourceGroupStateInfoResource
@351
+#<init>(Lio/trino/execution/resourcegroups/ResourceGroupManager;)V
+#getQueryStateInfos(Ljava/lang/String;)Lio/trino/server/ResourceGroupInfo;

+###io/trino/server/testing/TestingTrinoServer
@351
+#create()Lio/trino/server/testing/TestingTrinoServer;
+#builder()Lio/trino/server/testing/TestingTrinoServer$Builder;
+#close()V
+#installPlugin(Lio/trino/spi/Plugin;)V
+#getDispatchManager()Lio/trino/dispatcher/DispatchManager;
+#getQueryManager()Lio/trino/execution/QueryManager;
+#getQueryPlan(Lio/trino/spi/QueryId;)Lio/trino/sql/planner/Plan;
+#getFullQueryInfo(Lio/trino/spi/QueryId;)Lio/trino/execution/QueryInfo;
+#addFinalQueryInfoListener(Lio/trino/spi/QueryId;Lio/trino/execution/StateMachine$StateChangeListener;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;)Lio/trino/connector/CatalogName;
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogName;
+#getBaseDataDir()Ljava/nio/file/Path;
+#getBaseUrl()Ljava/net/URI;
+#getHttpsBaseUrl()Ljava/net/URI;
+#resolve(Ljava/lang/String;)Ljava/net/URI;
+#getAddress()Lcom/google/common/net/HostAndPort;
+#getHttpsAddress()Lcom/google/common/net/HostAndPort;
+#getCatalogManager()Lio/trino/metadata/CatalogManager;
+#getTransactionManager()Lio/trino/transaction/TransactionManager;
+#getMetadata()Lio/trino/metadata/Metadata;
+#getStatsCalculator()Lio/trino/cost/StatsCalculator;
+#getAccessControl()Lio/trino/testing/TestingAccessControlManager;
+#getGroupProvider()Lio/trino/testing/TestingGroupProvider;
+#getProcedureTester()Lio/trino/testing/ProcedureTester;
+#getSplitManager()Lio/trino/split/SplitManager;
+#getPageSourceManager()Lio/trino/split/PageSourceManager;
+#getResourceGroupManager()Ljava/util/Optional;
+#getSessionPropertyDefaults()Lio/trino/server/SessionPropertyDefaults;
+#getNodePartitioningManager()Lio/trino/sql/planner/NodePartitioningManager;
+#getLocalMemoryManager()Lio/trino/memory/LocalMemoryManager;
+#getClusterMemoryManager()Lio/trino/memory/ClusterMemoryManager;
+#getMbeanServer()Ljavax/management/MBeanServer;
+#getGracefulShutdownHandler()Lio/trino/server/GracefulShutdownHandler;
+#getTaskManager()Lio/trino/execution/TaskManager;
+#getShutdownAction()Lio/trino/server/ShutdownAction;
+#isCoordinator()Z
+#refreshNodes()Lio/trino/metadata/AllNodes;
+#waitForNodeRefresh(Ljava/time/Duration;)V
+#getActiveNodesWithConnector(Lio/trino/connector/CatalogName;)Ljava/util/Set;
+#getInstance(Lcom/google/inject/Key;)Ljava/lang/Object;
@365
+#getAnalyzerFactory()Lio/trino/sql/analyzer/AnalyzerFactory;
@366
+#injectTaskFailure(Ljava/lang/String;IIILio/trino/execution/FailureInjector$InjectedFailureType;Ljava/util/Optional;)V
@367
+#getTypeManager()Lio/trino/spi/type/TypeManager;
+#getQueryExplainer()Lio/trino/sql/analyzer/QueryExplainer;
+#getSessionPropertyManager()Lio/trino/metadata/SessionPropertyManager;
+#getProcedureRegistry()Lio/trino/metadata/ProcedureRegistry;
-#getAnalyzerFactory()Lio/trino/sql/analyzer/AnalyzerFactory;
@371
+#loadExchangeManager(Ljava/lang/String;Ljava/util/Map;)V
@372
+#getTaskManager()Lio/trino/execution/SqlTaskManager;
-#getTaskManager()Lio/trino/execution/TaskManager;
@374
+#getFunctionManager()Lio/trino/metadata/FunctionManager;
+#addFunctions(Lio/trino/metadata/FunctionBundle;)V
@386
-#getCatalogManager()Lio/trino/metadata/CatalogManager;
@392
+#createCatalog(Ljava/lang/String;Ljava/lang/String;)Lio/trino/connector/CatalogHandle;
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogHandle;
+#addConnectorEventListeners()V
+#getActiveNodesWithConnector(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
-#createCatalog(Ljava/lang/String;Ljava/lang/String;)Lio/trino/connector/CatalogName;
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogName;
-#getActiveNodesWithConnector(Lio/trino/connector/CatalogName;)Ljava/util/Set;
@393
+#createCatalog(Ljava/lang/String;Ljava/lang/String;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
-#createCatalog(Ljava/lang/String;Ljava/lang/String;)Lio/trino/connector/CatalogHandle;
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogHandle;
-#getActiveNodesWithConnector(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
@405
+#getExchangeManager()Lio/trino/spi/exchange/ExchangeManager;
@406
+#getGroupProvider()Lio/trino/testing/TestingGroupProviderManager;
-#getGroupProvider()Lio/trino/testing/TestingGroupProvider;

+###io/trino/server/testing/TestingTrinoServer$Builder
@351
+#<init>()V
+#setCoordinator(Z)Lio/trino/server/testing/TestingTrinoServer$Builder;
+#setProperties(Ljava/util/Map;)Lio/trino/server/testing/TestingTrinoServer$Builder;
+#setEnvironment(Ljava/lang/String;)Lio/trino/server/testing/TestingTrinoServer$Builder;
+#setDiscoveryUri(Ljava/net/URI;)Lio/trino/server/testing/TestingTrinoServer$Builder;
+#setAdditionalModule(Lcom/google/inject/Module;)Lio/trino/server/testing/TestingTrinoServer$Builder;
+#setBaseDataDir(Ljava/util/Optional;)Lio/trino/server/testing/TestingTrinoServer$Builder;
+#setSystemAccessControls(Ljava/util/List;)Lio/trino/server/testing/TestingTrinoServer$Builder;
+#build()Lio/trino/server/testing/TestingTrinoServer;
@356
+#setEventListeners(Ljava/util/List;)Lio/trino/server/testing/TestingTrinoServer$Builder;

+###io/trino/server/testing/TestingTrinoServer$TestShutdownAction
@351
+#<init>()V
+#onShutdown()V
+#waitForShutdownComplete(J)V
+#isWorkerShutdown()Z

+###io/trino/server/HttpRequestSessionContext
@351
+#<init>(Ljavax/ws/rs/core/MultivaluedMap;Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Lio/trino/spi/security/GroupProvider;)V
+#extractAuthorizedIdentity(Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;Ljava/util/Optional;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;)Lio/trino/spi/security/Identity;
+#extractAuthorizedIdentity(Ljava/util/Optional;Ljavax/ws/rs/core/MultivaluedMap;Ljava/util/Optional;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;)Lio/trino/spi/security/Identity;
+#getProtocolHeaders()Lio/trino/client/ProtocolHeaders;
+#getAuthenticatedIdentity()Ljava/util/Optional;
+#getIdentity()Lio/trino/spi/security/Identity;
+#getCatalog()Ljava/lang/String;
+#getSchema()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#getSource()Ljava/lang/String;
+#getRemoteUserAddress()Ljava/lang/String;
+#getUserAgent()Ljava/lang/String;
+#getClientInfo()Ljava/lang/String;
+#getClientTags()Ljava/util/Set;
+#getClientCapabilities()Ljava/util/Set;
+#getResourceEstimates()Lio/trino/spi/session/ResourceEstimates;
+#getTimeZoneId()Ljava/lang/String;
+#getLanguage()Ljava/lang/String;
+#getSystemProperties()Ljava/util/Map;
+#getCatalogSessionProperties()Ljava/util/Map;
+#getPreparedStatements()Ljava/util/Map;
+#getTransactionId()Ljava/util/Optional;
+#supportClientTransaction()Z
+#getTraceToken()Ljava/util/Optional;
@362
-###io/trino/server/HttpRequestSessionContext

+###io/trino/server/remotetask/HttpLocationFactory
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/airlift/http/server/HttpServerInfo;Lio/trino/server/InternalCommunicationConfig;)V
+#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/net/URI;)V
+#createQueryLocation(Lio/trino/spi/QueryId;)Ljava/net/URI;
+#createLocalTaskLocation(Lio/trino/execution/TaskId;)Ljava/net/URI;
+#createTaskLocation(Lio/trino/metadata/InternalNode;Lio/trino/execution/TaskId;)Ljava/net/URI;
+#createMemoryInfoLocation(Lio/trino/metadata/InternalNode;)Ljava/net/URI;

+###io/trino/server/remotetask/SimpleHttpResponseHandler
@351
+#<init>(Lio/trino/server/remotetask/SimpleHttpResponseCallback;Ljava/net/URI;Lio/trino/server/remotetask/RemoteTaskStats;)V
+#onSuccess(Lio/airlift/http/client/FullJsonResponseHandler$JsonResponse;)V
+#onFailure(Ljava/lang/Throwable;)V
+#onSuccess(Ljava/lang/Object;)V

+###io/trino/server/remotetask/HttpRemoteTask
@351
+#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;)V
+#getTaskId()Lio/trino/execution/TaskId;
+#getNodeId()Ljava/lang/String;
+#getTaskInfo()Lio/trino/execution/TaskInfo;
+#getTaskStatus()Lio/trino/execution/TaskStatus;
+#start()V
+#addSplits(Lcom/google/common/collect/Multimap;)V
+#noMoreSplits(Lio/trino/sql/planner/plan/PlanNodeId;)V
+#noMoreSplits(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/Lifespan;)V
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#getPartitionedSplitCount()I
+#getQueuedPartitionedSplitCount()I
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addFinalTaskInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#whenSplitQueueHasSpace(I)Lcom/google/common/util/concurrent/ListenableFuture;
+#cancel()V
+#abort()V
+#toString()Ljava/lang/String;
@354
+#getUnacknowledgedPartitionedSplitCount()I
@360
+#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;Ljava/util/Set;)V
-#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;)V
@362
+#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;Ljava/util/Set;)V
-#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;Ljava/util/Set;)V
@364
+#getPartitionedSplitsInfo()Lio/trino/execution/PartitionedSplitsInfo;
+#getUnacknowledgedPartitionedSplitsInfo()Lio/trino/execution/PartitionedSplitsInfo;
+#getQueuedPartitionedSplitsInfo()Lio/trino/execution/PartitionedSplitsInfo;
+#whenSplitQueueHasSpace(J)Lcom/google/common/util/concurrent/ListenableFuture;
-#getPartitionedSplitCount()I
-#getQueuedPartitionedSplitCount()I
-#whenSplitQueueHasSpace(I)Lcom/google/common/util/concurrent/ListenableFuture;
@366
+#fail(Ljava/lang/Throwable;)V
@373
+#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;Ljava/util/Set;)V
+#failRemotely(Ljava/lang/Throwable;)V
-#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;Ljava/util/Set;)V
@379
+#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;Ljava/util/Set;Ljava/util/Optional;)V
-#<init>(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/net/URI;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;Ljava/util/Set;)V
@388
-#noMoreSplits(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/Lifespan;)V
@398
+#retrieveAndDropSpoolingOutputStats()Lio/trino/execution/buffer/SpoolingOutputStats$Snapshot;

+###io/trino/server/remotetask/RemoteTaskStats
@351
+#<init>()V
+#statusRoundTripMillis(J)V
+#infoRoundTripMillis(J)V
+#updateRoundTripMillis(J)V
+#responseSize(J)V
+#updateSuccess()V
+#updateFailure()V
+#updateWithPlanBytes(J)V
+#getResponseSizeBytes()D
+#getStatusRoundTripMillis()D
+#getUpdateRoundTripMillis()D
+#getInfoRoundTripMillis()D
+#getRequestSuccess()J
+#getRequestFailure()J
+#getUpdateWithPlanBytes()Lio/airlift/stats/DistributionStat;
@360
+#updateWithDynamicFilterBytes(J)V
+#getUpdateWithDynamicFilterBytes()Lio/airlift/stats/DistributionStat;

+###io/trino/server/remotetask/Backoff
@351
+#<init>(Lio/airlift/units/Duration;)V
+#<init>(Lio/airlift/units/Duration;Lcom/google/common/base/Ticker;)V
+#<init>(ILio/airlift/units/Duration;Lcom/google/common/base/Ticker;Ljava/util/List;)V
+#getFailureCount()J
+#getFailureDuration()Lio/airlift/units/Duration;
+#getFailureRequestTimeTotal()Lio/airlift/units/Duration;
+#startRequest()V
+#success()V
+#failure()Z
+#getBackoffDelayNanos()J

+###io/trino/server/remotetask/SimpleHttpResponseCallback
@351
+#success(Ljava/lang/Object;)V
+#failed(Ljava/lang/Throwable;)V
+#fatal(Ljava/lang/Throwable;)V

+###io/trino/server/remotetask/TaskInfoFetcher
@351
+#<init>(Ljava/util/function/Consumer;Lio/trino/execution/TaskInfo;Lio/airlift/http/client/HttpClient;Lio/airlift/units/Duration;Lio/airlift/json/JsonCodec;Lio/airlift/units/Duration;ZLjava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/remotetask/RemoteTaskStats;)V
+#getTaskInfo()Lio/trino/execution/TaskInfo;
+#start()V
+#addFinalTaskInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#success(Lio/trino/execution/TaskInfo;)V
+#failed(Ljava/lang/Throwable;)V
+#fatal(Ljava/lang/Throwable;)V
+#success(Ljava/lang/Object;)V
@365
+#<init>(Ljava/util/function/Consumer;Lio/trino/server/remotetask/ContinuousTaskStatusFetcher;Lio/trino/execution/TaskInfo;Lio/airlift/http/client/HttpClient;Lio/airlift/units/Duration;Lio/airlift/json/JsonCodec;Lio/airlift/units/Duration;ZLjava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/remotetask/RemoteTaskStats;)V
-#<init>(Ljava/util/function/Consumer;Lio/trino/execution/TaskInfo;Lio/airlift/http/client/HttpClient;Lio/airlift/units/Duration;Lio/airlift/json/JsonCodec;Lio/airlift/units/Duration;ZLjava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/remotetask/RemoteTaskStats;)V
@372
-#success(Lio/trino/execution/TaskInfo;)V
-#failed(Ljava/lang/Throwable;)V
-#fatal(Ljava/lang/Throwable;)V
-#success(Ljava/lang/Object;)V
@379
+#<init>(Ljava/util/function/Consumer;Lio/trino/server/remotetask/ContinuousTaskStatusFetcher;Lio/trino/execution/TaskInfo;Lio/airlift/http/client/HttpClient;Lio/airlift/units/Duration;Lio/airlift/json/JsonCodec;Lio/airlift/units/Duration;ZLjava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/remotetask/RemoteTaskStats;Ljava/util/Optional;)V
-#<init>(Ljava/util/function/Consumer;Lio/trino/server/remotetask/ContinuousTaskStatusFetcher;Lio/trino/execution/TaskInfo;Lio/airlift/http/client/HttpClient;Lio/airlift/units/Duration;Lio/airlift/json/JsonCodec;Lio/airlift/units/Duration;ZLjava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/server/remotetask/RemoteTaskStats;)V
@398
+#retrieveAndDropSpoolingOutputStats()Lio/trino/execution/buffer/SpoolingOutputStats$Snapshot;

+###io/trino/server/ServerConfig
@351
+#<init>()V
+#isCoordinator()Z
+#setCoordinator(Z)Lio/trino/server/ServerConfig;
+#isIncludeExceptionInResponse()Z
+#setIncludeExceptionInResponse(Z)Lio/trino/server/ServerConfig;
+#getGracePeriod()Lio/airlift/units/Duration;
+#setGracePeriod(Lio/airlift/units/Duration;)Lio/trino/server/ServerConfig;
+#isQueryResultsCompressionEnabled()Z
+#setQueryResultsCompressionEnabled(Z)Lio/trino/server/ServerConfig;
@356
+#getQueryInfoUrlTemplate()Ljava/util/Optional;
+#setQueryInfoUrlTemplate(Ljava/lang/String;)Lio/trino/server/ServerConfig;
@364
+#isConcurrentStartup()Z
+#setConcurrentStartup(Z)Lio/trino/server/ServerConfig;

+###io/trino/server/GenerateTraceTokenRequestFilter
@351
+#<init>()V
+#filterRequest(Lio/airlift/http/client/Request;)Lio/airlift/http/client/Request;

+###io/trino/server/HttpRemoteTaskFactory
@351
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/airlift/http/client/HttpClient;Lio/trino/execution/LocationFactory;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;)V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#stop()V
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Z)Lio/trino/execution/RemoteTask;
@360
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Z)Lio/trino/execution/RemoteTask;
@362
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
@373
+#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/airlift/http/client/HttpClient;Lio/trino/execution/LocationFactory;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;)V
-#<init>(Lio/trino/execution/QueryManagerConfig;Lio/trino/execution/TaskManagerConfig;Lio/airlift/http/client/HttpClient;Lio/trino/execution/LocationFactory;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/server/remotetask/RemoteTaskStats;Lio/trino/server/DynamicFilterService;)V
@379
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Ljava/util/Optional;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;

+###io/trino/server/QueryResource
@351
+#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/server/ProtocolConfig;)V
+#getAllQueryInfo(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljava/util/List;
+#getQueryInfo(Lio/trino/spi/QueryId;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
+#cancelQuery(Lio/trino/spi/QueryId;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)V
+#killQuery(Lio/trino/spi/QueryId;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
+#preemptQuery(Lio/trino/spi/QueryId;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
@362
+#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/security/AccessControl;Lio/trino/server/HttpRequestSessionContextFactory;Lio/trino/server/ProtocolConfig;)V
-#<init>(Lio/trino/dispatcher/DispatchManager;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/server/ProtocolConfig;)V

+###io/trino/server/CoordinatorModule
@351
+#<init>()V
+#getResourceGroupManager(Lio/trino/execution/resourcegroups/ResourceGroupManager;)Lio/trino/execution/resourcegroups/ResourceGroupManager;
+#createQueryPerformanceFetcher(Lio/trino/execution/QueryManager;)Lio/trino/execution/QueryPerformanceFetcher;
+#createStatementResponseCoreExecutor()Ljava/util/concurrent/ExecutorService;
+#createStatementResponseExecutor(Ljava/util/concurrent/ExecutorService;Lio/trino/execution/TaskManagerConfig;)Lio/airlift/concurrent/BoundedExecutor;
+#createStatementTimeoutExecutor(Lio/trino/execution/TaskManagerConfig;)Ljava/util/concurrent/ScheduledExecutorService;
+#createTransactionIdleCheckExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#createTransactionFinishingExecutor()Ljava/util/concurrent/ExecutorService;
+#createTransactionManager(Lio/trino/transaction/TransactionManagerConfig;Lio/trino/metadata/CatalogManager;Lio/trino/version/EmbedVersion;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;)Lio/trino/transaction/TransactionManager;
@357
+#createTransactionManager(Lio/trino/transaction/TransactionManagerConfig;Lio/trino/metadata/CatalogManager;Lio/trino/spi/VersionEmbedder;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;)Lio/trino/transaction/TransactionManager;
-#createTransactionManager(Lio/trino/transaction/TransactionManagerConfig;Lio/trino/metadata/CatalogManager;Lio/trino/version/EmbedVersion;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;)Lio/trino/transaction/TransactionManager;
@386
-#createTransactionIdleCheckExecutor()Ljava/util/concurrent/ScheduledExecutorService;
-#createTransactionFinishingExecutor()Ljava/util/concurrent/ExecutorService;
-#createTransactionManager(Lio/trino/transaction/TransactionManagerConfig;Lio/trino/metadata/CatalogManager;Lio/trino/spi/VersionEmbedder;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;)Lio/trino/transaction/TransactionManager;

+###io/trino/server/BasicQueryInfo
@351
+#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Ljava/util/Optional;Lio/trino/execution/QueryState;Lio/trino/spi/memory/MemoryPoolId;ZLjava/net/URI;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/server/BasicQueryStats;Lio/trino/spi/ErrorType;Lio/trino/spi/ErrorCode;Ljava/util/Optional;)V
+#<init>(Lio/trino/execution/QueryInfo;)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getSession()Lio/trino/SessionRepresentation;
+#getResourceGroupId()Ljava/util/Optional;
+#getState()Lio/trino/execution/QueryState;
+#getMemoryPool()Lio/trino/spi/memory/MemoryPoolId;
+#isScheduled()Z
+#getSelf()Ljava/net/URI;
+#getQuery()Ljava/lang/String;
+#getUpdateType()Ljava/util/Optional;
+#getPreparedQuery()Ljava/util/Optional;
+#getQueryStats()Lio/trino/server/BasicQueryStats;
+#getErrorType()Lio/trino/spi/ErrorType;
+#getErrorCode()Lio/trino/spi/ErrorCode;
+#getQueryType()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@372
+#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Ljava/util/Optional;Lio/trino/execution/QueryState;ZLjava/net/URI;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/server/BasicQueryStats;Lio/trino/spi/ErrorType;Lio/trino/spi/ErrorCode;Ljava/util/Optional;)V
-#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Ljava/util/Optional;Lio/trino/execution/QueryState;Lio/trino/spi/memory/MemoryPoolId;ZLjava/net/URI;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/server/BasicQueryStats;Lio/trino/spi/ErrorType;Lio/trino/spi/ErrorCode;Ljava/util/Optional;)V
-#getMemoryPool()Lio/trino/spi/memory/MemoryPoolId;
@379
+#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Ljava/util/Optional;Lio/trino/execution/QueryState;ZLjava/net/URI;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/server/BasicQueryStats;Lio/trino/spi/ErrorType;Lio/trino/spi/ErrorCode;Ljava/util/Optional;Lio/trino/operator/RetryPolicy;)V
+#getRetryPolicy()Lio/trino/operator/RetryPolicy;
-#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Ljava/util/Optional;Lio/trino/execution/QueryState;ZLjava/net/URI;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/server/BasicQueryStats;Lio/trino/spi/ErrorType;Lio/trino/spi/ErrorCode;Ljava/util/Optional;)V

+###io/trino/server/ThreadResource$StackLine
@351
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
+#getFile()Ljava/lang/String;
+#getLine()I
+#getClassName()Ljava/lang/String;
+#getMethod()Ljava/lang/String;

+###io/trino/server/DynamicFilterService$DynamicFiltersStats
@351
+#<init>(Ljava/util/List;IIII)V
+#getDynamicFilterDomainStats()Ljava/util/List;
+#getLazyDynamicFilters()I
+#getReplicatedDynamicFilters()I
+#getTotalDynamicFilters()I
+#getDynamicFiltersCompleted()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/server/EmbeddedDiscoveryConfig
@351
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)Lio/trino/server/EmbeddedDiscoveryConfig;
@359
*#isEnabled()Z[deprecated]
*#setEnabled(Z)Lio/trino/server/EmbeddedDiscoveryConfig;[deprecated]

+###io/trino/server/DynamicFilterService$DynamicFilterDomainStats
@351
+#<init>(Lio/trino/sql/planner/plan/DynamicFilterId;Ljava/lang/String;IILjava/util/Optional;)V
+#getDynamicFilterId()Lio/trino/sql/planner/plan/DynamicFilterId;
+#getSimplifiedDomain()Ljava/lang/String;
+#getRangeCount()I
+#getDiscreteValuesCount()I
+#getCollectionDuration()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@357
+#<init>(Lio/trino/sql/planner/plan/DynamicFilterId;Ljava/lang/String;Ljava/util/Optional;)V
+#toString()Ljava/lang/String;
-#<init>(Lio/trino/sql/planner/plan/DynamicFilterId;Ljava/lang/String;IILjava/util/Optional;)V
-#getRangeCount()I
-#getDiscreteValuesCount()I

+###io/trino/server/InternalCommunicationConfig
@351
+#<init>()V
+#getSharedSecret()Ljava/util/Optional;
+#setSharedSecret(Ljava/lang/String;)Lio/trino/server/InternalCommunicationConfig;
+#isHttp2Enabled()Z
+#setHttp2Enabled(Z)Lio/trino/server/InternalCommunicationConfig;
+#isHttpsRequired()Z
+#setHttpsRequired(Z)Lio/trino/server/InternalCommunicationConfig;
+#getKeyStorePath()Ljava/lang/String;
+#setKeyStorePath(Ljava/lang/String;)Lio/trino/server/InternalCommunicationConfig;
+#getKeyStorePassword()Ljava/lang/String;
+#setKeyStorePassword(Ljava/lang/String;)Lio/trino/server/InternalCommunicationConfig;
+#getTrustStorePath()Ljava/lang/String;
+#setTrustStorePath(Ljava/lang/String;)Lio/trino/server/InternalCommunicationConfig;
+#getTrustStorePassword()Ljava/lang/String;
+#setTrustStorePassword(Ljava/lang/String;)Lio/trino/server/InternalCommunicationConfig;
+#isRequiredSharedSecretSet()Z
@360
+#isHttpServerHttpsEnabled()Z
+#setHttpServerHttpsEnabled(Z)Lio/trino/server/InternalCommunicationConfig;
+#isHttpsEnabledWhenRequired()Z

+###io/trino/server/QueryStateInfo
@351
+#<init>(Lio/trino/spi/QueryId;Lio/trino/execution/QueryState;Ljava/util/Optional;Ljava/lang/String;Lorg/joda/time/DateTime;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#createQueuedQueryStateInfo(Lio/trino/server/BasicQueryInfo;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/server/QueryStateInfo;
+#createQueryStateInfo(Lio/trino/server/BasicQueryInfo;Ljava/util/Optional;)Lio/trino/server/QueryStateInfo;
+#getQueryId()Lio/trino/spi/QueryId;
+#getQueryState()Lio/trino/execution/QueryState;
+#getResourceGroupId()Ljava/util/Optional;
+#getQuery()Ljava/lang/String;
+#getUser()Ljava/lang/String;
+#getSource()Ljava/util/Optional;
+#getClientInfo()Ljava/util/Optional;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getPathToRoot()Ljava/util/Optional;
+#getCreateTime()Lorg/joda/time/DateTime;
+#getProgress()Ljava/util/Optional;

+###io/trino/server/GracefulShutdownModule
@351
+#<init>()V

+###io/trino/server/ForStatementResource
@351

+###io/trino/server/ThreadResource$Info
@351
+#<init>(JLjava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/util/List;)V
+#getId()J
+#getName()Ljava/lang/String;
+#getState()Ljava/lang/String;
+#getLockOwnerId()Ljava/lang/Long;
+#getStackTrace()Ljava/util/List;
+#byName()Ljava/util/Comparator;

+###io/trino/server/SessionPropertyDefaults
@351
+#<init>(Lio/airlift/node/NodeInfo;)V
+#addConfigurationManagerFactory(Lio/trino/spi/session/SessionPropertyConfigurationManagerFactory;)V
+#loadConfigurationManager()V
+#setConfigurationManager(Ljava/lang/String;Ljava/util/Map;)V
+#newSessionWithDefaultProperties(Lio/trino/Session;Ljava/util/Optional;Lio/trino/spi/resourcegroups/ResourceGroupId;)Lio/trino/Session;
@365
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/security/AccessControl;)V
+#loadConfigurationManager(Ljava/io/File;)V
-#<init>(Lio/airlift/node/NodeInfo;)V

+###io/trino/server/QuerySessionSupplier
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/sql/SqlEnvironmentConfig;)V
+#createSession(Lio/trino/spi/QueryId;Lio/trino/server/SessionContext;)Lio/trino/Session;
@362
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/sql/SqlEnvironmentConfig;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/sql/SqlEnvironmentConfig;)V
@371
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/sql/SqlEnvironmentConfig;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/sql/SqlEnvironmentConfig;)V

+###io/trino/server/SliceSerialization$SliceSerializer
@351
+#<init>()V
+#serialize(Lio/airlift/slice/Slice;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V

+###io/trino/server/ServerMainModule
@351
+#<init>(Ljava/lang/String;)V
+#createTypeOperators(Lio/trino/type/TypeOperatorsCache;)Lio/trino/spi/type/TypeOperators;
+#createExchangeExecutor(Lio/trino/operator/ExchangeClientConfig;)Ljava/util/concurrent/ScheduledExecutorService;
+#createAsyncHttpResponseCoreExecutor()Ljava/util/concurrent/ExecutorService;
+#createAsyncHttpResponseExecutor(Ljava/util/concurrent/ExecutorService;Lio/trino/execution/TaskManagerConfig;)Lio/airlift/concurrent/BoundedExecutor;
+#createAsyncHttpTimeoutExecutor(Lio/trino/execution/TaskManagerConfig;)Ljava/util/concurrent/ScheduledExecutorService;
+#createBlockEncodingSerde(Lio/trino/metadata/Metadata;)Lio/trino/spi/block/BlockEncodingSerde;
@364
+#createStartupExecutor(Lio/trino/server/ServerConfig;)Ljava/util/concurrent/Executor;
@367
-#createBlockEncodingSerde(Lio/trino/metadata/Metadata;)Lio/trino/spi/block/BlockEncodingSerde;
@369
+#createExchangeExecutor(Lio/trino/operator/DirectExchangeClientConfig;)Ljava/util/concurrent/ScheduledExecutorService;
-#createExchangeExecutor(Lio/trino/operator/ExchangeClientConfig;)Ljava/util/concurrent/ScheduledExecutorService;
@374
+#systemFunctionBundle(Lio/trino/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)Lio/trino/metadata/FunctionBundle;
+#literalFunctionBundle(Lio/trino/spi/block/BlockEncodingSerde;)Lio/trino/metadata/FunctionBundle;
@383
+#jsonFunctionBundle(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;)Lio/trino/metadata/FunctionBundle;

+###io/trino/server/ExpressionSerialization
@351

+###io/trino/server/JmxNamingConfig
@351
+#<init>()V
+#getDomainBase()Ljava/lang/String;
+#setDomainBase(Ljava/lang/String;)Lio/trino/server/JmxNamingConfig;

+###io/trino/server/SliceSerialization$SliceDeserializer
@351
+#<init>()V
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lio/airlift/slice/Slice;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###io/trino/server/ProtocolConfig
@351
+#<init>()V
+#getAlternateHeaderName()Ljava/util/Optional;[deprecated]
+#setAlternateHeaderName(Ljava/lang/String;)Lio/trino/server/ProtocolConfig;[deprecated]
@372
+#getPreparedStatementCompressionThreshold()I
+#setPreparedStatementCompressionThreshold(I)Lio/trino/server/ProtocolConfig;
+#getPreparedStatementCompressionMinimalGain()I
+#setPreparedStatementCompressionMinimalGain(I)Lio/trino/server/ProtocolConfig;

+###io/trino/server/NodeResource
@351
+#<init>(Lio/trino/failuredetector/HeartbeatFailureDetector;)V
+#getNodeStats()Ljava/util/Collection;
+#getFailed()Ljava/util/Collection;

+###io/trino/server/ThreadResource
@351
+#<init>()V
+#getThreadInfo()Ljava/util/List;

+###io/trino/server/ServerMainModule$ExecutorCleanup
@351
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;)V
+#shutdown()V

+###io/trino/server/ThrowableMapper
@351
+#<init>(Lio/trino/server/ServerConfig;)V
+#toResponse(Ljava/lang/Throwable;)Ljavax/ws/rs/core/Response;

+###io/trino/server/ExpressionSerialization$ExpressionDeserializer
@351
+#<init>(Lio/trino/sql/parser/SqlParser;)V
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lio/trino/sql/tree/Expression;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###io/trino/server/TaskExecutorResource
@351
+#<init>(Lio/trino/execution/executor/TaskExecutor;)V
+#getMaxActiveSplit()Ljava/lang/String;

+###io/trino/server/GracefulShutdownHandler
@351
+#<init>(Lio/trino/execution/TaskManager;Lio/trino/server/ServerConfig;Lio/trino/server/ShutdownAction;Lio/airlift/bootstrap/LifeCycleManager;)V
+#requestShutdown()V
+#isShutdownRequested()Z
@372
+#<init>(Lio/trino/execution/SqlTaskManager;Lio/trino/server/ServerConfig;Lio/trino/server/ShutdownAction;Lio/airlift/bootstrap/LifeCycleManager;)V
-#<init>(Lio/trino/execution/TaskManager;Lio/trino/server/ServerConfig;Lio/trino/server/ShutdownAction;Lio/airlift/bootstrap/LifeCycleManager;)V

+###io/trino/server/PluginManager
@351
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/server/PluginManagerConfig;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/CertificateAuthenticatorManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;)V
+#loadPlugins()V
+#installPlugin(Lio/trino/spi/Plugin;Ljava/util/function/Supplier;)V
@353
+#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/CertificateAuthenticatorManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;)V
-#<init>(Lio/airlift/node/NodeInfo;Lio/trino/server/PluginManagerConfig;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/CertificateAuthenticatorManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;)V
@355
+#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;)V
-#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Lio/trino/server/security/PasswordAuthenticatorManager;Lio/trino/server/security/CertificateAuthenticatorManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;)V
@363
+#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;)V
-#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;)V
@367
+#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;)V
+#createClassLoader(Ljava/util/List;)Lio/trino/server/PluginClassLoader;
-#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;)V
@369
+#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;)V
@370
+#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;Lio/trino/metadata/HandleResolver;Lio/trino/exchange/ExchangeManagerRegistry;)V
+#installPlugin(Lio/trino/spi/Plugin;Ljava/util/function/Function;)V
+#createClassLoader(Ljava/lang/String;Ljava/util/List;)Lio/trino/server/PluginClassLoader;
-#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#installPlugin(Lio/trino/spi/Plugin;Ljava/util/function/Supplier;)V
-#createClassLoader(Ljava/util/List;)Lio/trino/server/PluginClassLoader;
@374
+#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;Lio/trino/metadata/HandleResolver;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/MetadataManager;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;Lio/trino/metadata/HandleResolver;Lio/trino/exchange/ExchangeManagerRegistry;)V
@392
+#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/CatalogFactory;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;Lio/trino/metadata/HandleResolver;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#<init>(Lio/trino/server/PluginManager$PluginsProvider;Lio/trino/connector/ConnectorManager;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/execution/resourcegroups/ResourceGroupManager;Lio/trino/security/AccessControlManager;Ljava/util/Optional;Lio/trino/server/security/CertificateAuthenticatorManager;Ljava/util/Optional;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/GroupProviderManager;Lio/trino/server/SessionPropertyDefaults;Lio/trino/metadata/TypeRegistry;Lio/trino/metadata/BlockEncodingManager;Lio/trino/metadata/HandleResolver;Lio/trino/exchange/ExchangeManagerRegistry;)V

+###io/trino/PagesIndexPageSorter
@351
+#<init>(Lio/trino/operator/PagesIndex$Factory;)V
+#sort(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)[J
+#decodePageIndex(J)I
+#decodePositionIndex(J)I
@366
-###io/trino/PagesIndexPageSorter

+###io/trino/GroupByHashPageIndexer
@351
+#<init>(Ljava/util/List;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#<init>(Lio/trino/operator/GroupByHash;)V
+#indexPage(Lio/trino/spi/Page;)[I
+#getMaxIndex()I
@366
-###io/trino/GroupByHashPageIndexer

+###io/trino/testing/TestingHandleResolver
@351
+#<init>()V
+#getTableHandleClass()Ljava/lang/Class;
+#getTableLayoutHandleClass()Ljava/lang/Class;
+#getColumnHandleClass()Ljava/lang/Class;
+#getSplitClass()Ljava/lang/Class;
+#getOutputTableHandleClass()Ljava/lang/Class;
+#getInsertTableHandleClass()Ljava/lang/Class;
+#getTransactionHandleClass()Ljava/lang/Class;
@369
-#getTableLayoutHandleClass()Ljava/lang/Class;
@370
-###io/trino/testing/TestingHandleResolver

+###io/trino/testing/TestingAccessControlManager
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;)V
+#loadSystemAccessControl(Ljava/lang/String;Ljava/util/Map;)V
+#privilege(Ljava/lang/String;Lio/trino/testing/TestingAccessControlManager$TestingPrivilegeType;)Lio/trino/testing/TestingAccessControlManager$TestingPrivilege;
+#privilege(Ljava/lang/String;Ljava/lang/String;Lio/trino/testing/TestingAccessControlManager$TestingPrivilegeType;)Lio/trino/testing/TestingAccessControlManager$TestingPrivilege;
+#deny([Lio/trino/testing/TestingAccessControlManager$TestingPrivilege;)V
+#rowFilter(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/security/ViewExpression;)V
+#columnMask(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Ljava/lang/String;Lio/trino/spi/security/ViewExpression;)V
+#reset()V
+#denyCatalogs(Ljava/util/function/Predicate;)V
+#denyTables(Ljava/util/function/Predicate;)V
+#denyIdentityTable(Ljava/util/function/BiPredicate;)V
+#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#filterTables(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanImpersonateUser(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetUser(Ljava/util/Optional;Ljava/lang/String;)V[deprecated]
+#checkCanExecuteQuery(Lio/trino/spi/security/Identity;)V
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanDropSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanRenameSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#checkCanShowCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetColumnComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanAddColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanInsertIntoTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDeleteFromTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetSystemSessionProperty(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Ljava/lang/String;Lio/trino/spi/security/Identity;Z)V
+#checkCanShowColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#filterColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanSetCatalogSessionProperty(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#getRowFilters(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/List;
+#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@352
+#checkCanUpdateTableColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRefreshMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@363
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/security/AccessControlConfig;)V
@364
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
@365
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Collection;)Ljava/util/Collection;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#checkCanTruncateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
-#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
-#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
@369
+#filterCatalogs(Lio/trino/security/SecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@375
-#loadSystemAccessControl(Ljava/lang/String;Ljava/util/Map;)V
@390
+#checkCanSetViewComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@395
+#checkCanExecuteTableProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
@396
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/Identity;Z)V
@399
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;)V
@405
+#denySchemas(Ljava/util/function/Predicate;)V
+#filterSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;)V
+#checkCanAlterColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
@406
+#getColumnMask(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
-#getColumnMasks(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;

+###io/trino/testing/TestingMetadata
@351
+#<init>()V
+#listSchemaNames(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/List;
+#getTableHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/connector/ConnectorTableHandle;
+#getTableHandleForStatisticsCollection(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)Lio/trino/spi/connector/ConnectorTableHandle;
+#getTableMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableMetadata;
+#getColumnHandles(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Map;
+#listTableColumns(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/Map;
+#getColumnMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;)Lio/trino/spi/connector/ColumnMetadata;
+#listTables(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/List;
+#renameTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/SchemaTableName;)V
+#createTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Z)V
+#dropTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)V
+#createView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorViewDefinition;Z)V
+#dropView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)V
+#listViews(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/List;
+#getViews(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/Map;
+#getView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
+#beginCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;)Lio/trino/spi/connector/ConnectorOutputTableHandle;
+#finishCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
+#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorInsertTableHandle;
+#finishInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
+#addColumn(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnMetadata;)V
+#renameColumn(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/lang/String;)V
+#grantTablePrivileges(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeTablePrivileges(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#usesLegacyTableLayouts()Z
+#getTableProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableProperties;
+#clear()V
@355
+#createMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;ZZ)V
+#getMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
@356
+#dropMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)V
@357
+#getMaterializedViewFreshness(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/connector/MaterializedViewFreshness;
+#markMaterializedViewIsFresh(Lio/trino/spi/connector/SchemaTableName;)V
@364
+#renameMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
@369
-#usesLegacyTableLayouts()Z
@381
+#beginCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorOutputTableHandle;
+#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorInsertTableHandle;
-#beginCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;)Lio/trino/spi/connector/ConnectorOutputTableHandle;
-#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorInsertTableHandle;
@386
+#getStatisticsCollectionMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Map;)Lio/trino/spi/connector/ConnectorAnalyzeMetadata;
-#getTableHandleForStatisticsCollection(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)Lio/trino/spi/connector/ConnectorTableHandle;
@405
+#setColumnType(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;Lio/trino/spi/type/Type;)V
-#getTableProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableProperties;

+###io/trino/testing/TestingHandle
@351
+#values()[Lio/trino/testing/TestingHandle;
+#valueOf(Ljava/lang/String;)Lio/trino/testing/TestingHandle;

+###io/trino/testing/TestingSession
@351
+#testSessionBuilder()Lio/trino/Session$SessionBuilder;
+#testSessionBuilder(Lio/trino/metadata/SessionPropertyManager;)Lio/trino/Session$SessionBuilder;
+#createBogusTestingCatalog(Ljava/lang/String;)Lio/trino/metadata/Catalog;
@370
-#createBogusTestingCatalog(Ljava/lang/String;)Lio/trino/metadata/Catalog;

+###io/trino/testing/NullOutputOperator$NullOutputOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/testing/LocalQueryRunner
@351
+#create(Lio/trino/Session;)Lio/trino/testing/LocalQueryRunner;
+#builder(Lio/trino/Session;)Lio/trino/testing/LocalQueryRunner$Builder;
+#close()V
+#loadEventListeners()V
+#getNodeCount()I
+#getTransactionManager()Lio/trino/transaction/TransactionManager;
+#getSqlParser()Lio/trino/sql/parser/SqlParser;
+#getMetadata()Lio/trino/metadata/Metadata;
+#getTypeOperators()Lio/trino/spi/type/TypeOperators;
+#getBlockTypeOperators()Lio/trino/type/BlockTypeOperators;
+#getNodePartitioningManager()Lio/trino/sql/planner/NodePartitioningManager;
+#getPageSourceManager()Lio/trino/split/PageSourceManager;
+#getSplitManager()Lio/trino/split/SplitManager;
+#getStatsCalculator()Lio/trino/cost/StatsCalculator;
+#getCostCalculator()Lio/trino/cost/CostCalculator;
+#getEstimatedExchangesCostCalculator()Lio/trino/cost/CostCalculator;
+#getGroupProvider()Lio/trino/testing/TestingGroupProvider;
+#getAccessControl()Lio/trino/testing/TestingAccessControlManager;
+#getExecutor()Ljava/util/concurrent/ExecutorService;
+#getScheduler()Ljava/util/concurrent/ScheduledExecutorService;
+#getDefaultSession()Lio/trino/Session;
+#getExpressionCompiler()Lio/trino/sql/gen/ExpressionCompiler;
+#createCatalog(Ljava/lang/String;Lio/trino/spi/connector/ConnectorFactory;Ljava/util/Map;)V
+#installPlugin(Lio/trino/spi/Plugin;)V
+#addFunctions(Ljava/util/List;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#printPlan()Lio/trino/testing/LocalQueryRunner;
+#listTables(Lio/trino/Session;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
+#tableExists(Lio/trino/Session;Ljava/lang/String;)Z
+#execute(Ljava/lang/String;)Lio/trino/testing/MaterializedResult;
+#execute(Lio/trino/Session;Ljava/lang/String;)Lio/trino/testing/MaterializedResult;
+#executeWithPlan(Lio/trino/Session;Ljava/lang/String;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/testing/QueryRunner$MaterializedResultWithPlan;
+#inTransaction(Ljava/util/function/Function;)Ljava/lang/Object;
+#inTransaction(Lio/trino/Session;Ljava/util/function/Function;)Ljava/lang/Object;
+#getExclusiveLock()Ljava/util/concurrent/locks/Lock;
+#createDrivers(Ljava/lang/String;Lio/trino/operator/OutputFactory;Lio/trino/operator/TaskContext;)Ljava/util/List;
+#createDrivers(Lio/trino/Session;Ljava/lang/String;Lio/trino/operator/OutputFactory;Lio/trino/operator/TaskContext;)Ljava/util/List;
+#createSubPlans(Lio/trino/Session;Lio/trino/sql/planner/Plan;Z)Lio/trino/sql/planner/SubPlan;
+#createPlan(Lio/trino/Session;Ljava/lang/String;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/Plan;
+#createPlan(Lio/trino/Session;Ljava/lang/String;Lio/trino/sql/planner/LogicalPlanner$Stage;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/Plan;
+#createPlan(Lio/trino/Session;Ljava/lang/String;Lio/trino/sql/planner/LogicalPlanner$Stage;ZLio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/Plan;
+#getPlanOptimizers(Z)Ljava/util/List;
+#createPlan(Lio/trino/Session;Ljava/lang/String;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/Plan;
+#createPlan(Lio/trino/Session;Ljava/lang/String;Ljava/util/List;Lio/trino/sql/planner/LogicalPlanner$Stage;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/Plan;
@355
+#getCatalogManager()Lio/trino/metadata/CatalogManager;
@365
+#getAnalyzerFactory()Lio/trino/sql/analyzer/AnalyzerFactory;
@366
+#injectTaskFailure(Ljava/lang/String;IIILio/trino/execution/FailureInjector$InjectedFailureType;Ljava/util/Optional;)V
@367
+#getPlannerContext()Lio/trino/sql/PlannerContext;
+#getTypeManager()Lio/trino/spi/type/TypeManager;
+#getQueryExplainer()Lio/trino/sql/analyzer/QueryExplainer;
+#getSessionPropertyManager()Lio/trino/metadata/SessionPropertyManager;
-#getAnalyzerFactory()Lio/trino/sql/analyzer/AnalyzerFactory;
@370
+#getTablePropertyManager()Lio/trino/metadata/TablePropertyManager;
+#getColumnPropertyManager()Lio/trino/metadata/ColumnPropertyManager;
+#getMaterializedViewPropertyManager()Lio/trino/metadata/MaterializedViewPropertyManager;
+#getAnalyzePropertyManager()Lio/trino/metadata/AnalyzePropertyManager;
@371
+#loadExchangeManager(Ljava/lang/String;Ljava/util/Map;)V
@374
+#getFunctionManager()Lio/trino/metadata/FunctionManager;
+#addFunctions(Lio/trino/metadata/FunctionBundle;)V
-#addFunctions(Ljava/util/List;)V
@383
+#getTypeRegistry()Lio/trino/metadata/TypeRegistry;
+#getGlobalFunctionCatalog()Lio/trino/metadata/GlobalFunctionCatalog;
@386
-#getCatalogManager()Lio/trino/metadata/CatalogManager;
@392
+#createCatalog(Ljava/lang/String;Lio/trino/spi/connector/ConnectorFactory;Ljava/util/Map;)Lio/trino/connector/CatalogHandle;
-#createCatalog(Ljava/lang/String;Lio/trino/spi/connector/ConnectorFactory;Ljava/util/Map;)V
@393
+#createCatalog(Ljava/lang/String;Lio/trino/spi/connector/ConnectorFactory;Ljava/util/Map;)V
+#getCatalogManager()Lio/trino/metadata/CatalogManager;
-#createCatalog(Ljava/lang/String;Lio/trino/spi/connector/ConnectorFactory;Ljava/util/Map;)Lio/trino/connector/CatalogHandle;
@405
+#getExchangeManager()Lio/trino/spi/exchange/ExchangeManager;
+#getCatalogHandle(Ljava/lang/String;)Lio/trino/spi/connector/CatalogHandle;
+#getTableHandle(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/TableHandle;
@406
+#getGroupProvider()Lio/trino/testing/TestingGroupProviderManager;
-#getGroupProvider()Lio/trino/testing/TestingGroupProvider;
@408
+#registerCatalogFactory(Lio/trino/spi/connector/ConnectorFactory;)V

+###io/trino/testing/TestingSplit
@351
+#createLocalSplit()Lio/trino/testing/TestingSplit;
+#createEmptySplit()Lio/trino/testing/TestingSplit;
+#createRemoteSplit()Lio/trino/testing/TestingSplit;
+#<init>(ZLjava/util/List;)V
+#isRemotelyAccessible()Z
+#getAddresses()Ljava/util/List;
+#getInfo()Ljava/lang/Object;
@368
+#getRetainedSizeInBytes()J

+###io/trino/testing/TestingNodeManager
@351
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lio/trino/spi/Node;)V
+#<init>(Ljava/util/List;)V
+#<init>(Lio/trino/spi/Node;Ljava/util/Collection;)V
+#<init>(Ljava/lang/String;Lio/trino/spi/Node;Ljava/util/Collection;)V
+#addNode(Lio/trino/spi/Node;)V
+#getAllNodes()Ljava/util/Set;
+#getWorkerNodes()Ljava/util/Set;
+#getCurrentNode()Lio/trino/spi/Node;
+#getEnvironment()Ljava/lang/String;

+###io/trino/testing/LocalQueryRunner$Builder
@351
+#withFeaturesConfig(Lio/trino/sql/analyzer/FeaturesConfig;)Lio/trino/testing/LocalQueryRunner$Builder;
+#withNodeSpillConfig(Lio/trino/spiller/NodeSpillConfig;)Lio/trino/testing/LocalQueryRunner$Builder;
+#withInitialTransaction()Lio/trino/testing/LocalQueryRunner$Builder;
+#withAlwaysRevokeMemory()Lio/trino/testing/LocalQueryRunner$Builder;
+#withDefaultSessionProperties(Ljava/util/Map;)Lio/trino/testing/LocalQueryRunner$Builder;
+#withNodeCountForStats(I)Lio/trino/testing/LocalQueryRunner$Builder;
+#build()Lio/trino/testing/LocalQueryRunner;
@357
+#withPlanOptimizersProvider(Lio/trino/testing/LocalQueryRunner$PlanOptimizersProvider;)Lio/trino/testing/LocalQueryRunner$Builder;
@358
+#withOperatorFactories(Lio/trino/operator/OperatorFactories;)Lio/trino/testing/LocalQueryRunner$Builder;
@361
+#withExtraSystemSessionProperties(Ljava/util/Set;)Lio/trino/testing/LocalQueryRunner$Builder;
@365
+#withFeaturesConfig(Lio/trino/FeaturesConfig;)Lio/trino/testing/LocalQueryRunner$Builder;
-#withFeaturesConfig(Lio/trino/sql/analyzer/FeaturesConfig;)Lio/trino/testing/LocalQueryRunner$Builder;
@378
+#withMetadataProvider(Lio/trino/testing/LocalQueryRunner$MetadataProvider;)Lio/trino/testing/LocalQueryRunner$Builder;
@392
-#withPlanOptimizersProvider(Lio/trino/testing/LocalQueryRunner$PlanOptimizersProvider;)Lio/trino/testing/LocalQueryRunner$Builder;

+###io/trino/testing/TestingGroupProvider
@351
+#<init>()V
+#reset()V
+#setUserGroups(Ljava/util/Map;)V
+#getGroups(Ljava/lang/String;)Ljava/util/Set;

+###io/trino/testing/TestingTransactionHandle
@351
+#<init>(Ljava/util/UUID;)V
+#create()Lio/trino/testing/TestingTransactionHandle;
+#getUuid()Ljava/util/UUID;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/testing/DateTimeTestingUtils
@351
+#sqlDateOf(III)Lio/trino/spi/type/SqlDate;
+#sqlDateOf(Ljava/time/LocalDate;)Lio/trino/spi/type/SqlDate;
+#sqlTimeWithTimeZoneOf(IIIIII)Lio/trino/spi/type/SqlTimeWithTimeZone;
+#sqlTimestampWithTimeZoneOf(IIIIIIIILio/trino/spi/type/TimeZoneKey;)Lio/trino/spi/type/SqlTimestampWithTimeZone;
+#sqlTimestampOf(IIIIIIII)Lio/trino/spi/type/SqlTimestamp;
+#sqlTimestampOf(ILjava/time/LocalDateTime;)Lio/trino/spi/type/SqlTimestamp;
+#sqlTimestampOf(ILorg/joda/time/DateTime;)Lio/trino/spi/type/SqlTimestamp;
+#sqlTimestampOf(Lorg/joda/time/DateTime;)Lio/trino/spi/type/SqlTimestamp;[deprecated]
+#sqlTimestampOf(J)Lio/trino/spi/type/SqlTimestamp;[deprecated]
+#sqlTimestampOf(IJ)Lio/trino/spi/type/SqlTimestamp;
+#sqlTimeOf(IIIII)Lio/trino/spi/type/SqlTime;
+#sqlTimeOf(IIII)Lio/trino/spi/type/SqlTime;[deprecated]
+#sqlTimeOf(Ljava/time/LocalTime;)Lio/trino/spi/type/SqlTime;[deprecated]
+#sqlTimeOf(ILjava/time/LocalTime;)Lio/trino/spi/type/SqlTime;

+###io/trino/testing/SqlVarbinaryTestingUtil
@351
+#sqlVarbinaryFromHex(Ljava/lang/String;)Lio/trino/spi/type/SqlVarbinary;
+#sqlVarbinary(Ljava/lang/String;)Lio/trino/spi/type/SqlVarbinary;
+#sqlVarbinaryFromIso(Ljava/lang/String;)Lio/trino/spi/type/SqlVarbinary;
+#sqlVarbinary([I)Lio/trino/spi/type/SqlVarbinary;

+###io/trino/testing/MaterializedResult
@351
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;Ljava/util/OptionalLong;Ljava/util/List;)V
+#getRowCount()I
+#iterator()Ljava/util/Iterator;
+#getMaterializedRows()Ljava/util/List;
+#getTypes()Ljava/util/List;
+#getSetSessionProperties()Ljava/util/Map;
+#getResetSessionProperties()Ljava/util/Set;
+#getUpdateType()Ljava/util/Optional;
+#getUpdateCount()Ljava/util/OptionalLong;
+#getWarnings()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getOnlyColumn()Ljava/util/stream/Stream;
+#getOnlyColumnAsSet()Ljava/util/Set;
+#getOnlyValue()Ljava/lang/Object;
+#toPage()Lio/trino/spi/Page;
+#toTestTypes()Lio/trino/testing/MaterializedResult;
+#materializeSourceDataStream(Lio/trino/Session;Lio/trino/spi/connector/ConnectorPageSource;Ljava/util/List;)Lio/trino/testing/MaterializedResult;
+#materializeSourceDataStream(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPageSource;Ljava/util/List;)Lio/trino/testing/MaterializedResult;
+#resultBuilder(Lio/trino/Session;[Lio/trino/spi/type/Type;)Lio/trino/testing/MaterializedResult$Builder;
+#resultBuilder(Lio/trino/Session;Ljava/lang/Iterable;)Lio/trino/testing/MaterializedResult$Builder;
+#resultBuilder(Lio/trino/spi/connector/ConnectorSession;[Lio/trino/spi/type/Type;)Lio/trino/testing/MaterializedResult$Builder;
+#resultBuilder(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/Iterable;)Lio/trino/testing/MaterializedResult$Builder;
@366
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;Ljava/util/OptionalLong;Ljava/util/List;Ljava/util/Optional;)V
+#getStatementStats()Ljava/util/Optional;
-#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;Ljava/util/OptionalLong;Ljava/util/List;)V
@399
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;Ljava/util/OptionalLong;Ljava/util/List;Ljava/util/Optional;)V
+#getColumnNames()Ljava/util/List;
-#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;Ljava/util/OptionalLong;Ljava/util/List;Ljava/util/Optional;)V

+###io/trino/testing/ProcedureTester
@351
+#<init>()V
+#reset()V
+#recordCalled(Ljava/lang/String;[Ljava/lang/Object;)V
+#recordCalled(Ljava/lang/String;Ljava/util/List;)V
+#wasCalled()Z
+#getCalledName()Ljava/lang/String;
+#getCalledArguments()Ljava/util/List;

+###io/trino/testing/PageConsumerOperator$PageConsumerOutputFactory
@351
+#<init>(Ljava/util/function/Function;)V
+#createOutputOperator(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)Lio/trino/operator/OperatorFactory;

+###io/trino/testing/PageConsumerOperator$PageConsumerOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/function/Consumer;Ljava/util/function/Function;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/testing/TestingPageSinkProvider
@351
+#<init>()V
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
@403
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
-#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
-#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;

+###io/trino/testing/NullOutputOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/testing/TestingWarningCollectorConfig
@351
+#<init>()V
+#setPreloadedWarnings(I)Lio/trino/testing/TestingWarningCollectorConfig;
+#getPreloadedWarnings()I
+#setAddWarnings(Z)Lio/trino/testing/TestingWarningCollectorConfig;
+#getAddWarnings()Z

+###io/trino/testing/TestingTaskContext$Builder
@351
+#setTaskStateMachine(Lio/trino/execution/TaskStateMachine;)Lio/trino/testing/TestingTaskContext$Builder;
+#setQueryMaxMemory(Lio/airlift/units/DataSize;)Lio/trino/testing/TestingTaskContext$Builder;
+#setMemoryPoolSize(Lio/airlift/units/DataSize;)Lio/trino/testing/TestingTaskContext$Builder;
+#setMaxSpillSize(Lio/airlift/units/DataSize;)Lio/trino/testing/TestingTaskContext$Builder;
+#setQueryMaxSpillSize(Lio/airlift/units/DataSize;)Lio/trino/testing/TestingTaskContext$Builder;
+#setQueryId(Lio/trino/spi/QueryId;)Lio/trino/testing/TestingTaskContext$Builder;
+#build()Lio/trino/operator/TaskContext;

+###io/trino/testing/assertions/Assert
@351
+#assertEquals(Ljava/lang/Iterable;Ljava/lang/Iterable;)V
+#assertEquals(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/String;)V
+#assertEventually(Lio/airlift/units/Duration;Ljava/lang/Runnable;)V
@352
+#assertEventually(Ljava/lang/Runnable;)V
@359
+#assertEventually(Lio/airlift/units/Duration;Lio/airlift/units/Duration;Ljava/lang/Runnable;)V
@374
+#assertEventually(Lio/trino/testing/assertions/Assert$CheckedRunnable;)V
+#assertEventually(Lio/airlift/units/Duration;Lio/trino/testing/assertions/Assert$CheckedRunnable;)V
+#assertEventually(Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/trino/testing/assertions/Assert$CheckedRunnable;)V
-#assertEventually(Ljava/lang/Runnable;)V
-#assertEventually(Lio/airlift/units/Duration;Ljava/lang/Runnable;)V
-#assertEventually(Lio/airlift/units/Duration;Lio/airlift/units/Duration;Ljava/lang/Runnable;)V
@409
-#assertEquals(Ljava/lang/Iterable;Ljava/lang/Iterable;)V
-#assertEquals(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/String;)V

+###io/trino/testing/assertions/TrinoExceptionAssert
@351
+#assertTrinoExceptionThrownBy(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Lio/trino/testing/assertions/TrinoExceptionAssert;
+#hasErrorCode(Lio/trino/spi/ErrorCodeSupplier;)Lio/trino/testing/assertions/TrinoExceptionAssert;
+#hasLocation(II)Lio/trino/testing/assertions/TrinoExceptionAssert;
@399
+#hasErrorCode([Lio/trino/spi/ErrorCodeSupplier;)Lio/trino/testing/assertions/TrinoExceptionAssert;
-#hasErrorCode(Lio/trino/spi/ErrorCodeSupplier;)Lio/trino/testing/assertions/TrinoExceptionAssert;

+###io/trino/testing/MaterializedResult$Builder
@351
+#rows(Ljava/util/List;)Lio/trino/testing/MaterializedResult$Builder;
+#row([Ljava/lang/Object;)Lio/trino/testing/MaterializedResult$Builder;
+#rows([[Ljava/lang/Object;)Lio/trino/testing/MaterializedResult$Builder;
+#pages(Ljava/lang/Iterable;)Lio/trino/testing/MaterializedResult$Builder;
+#page(Lio/trino/spi/Page;)Lio/trino/testing/MaterializedResult$Builder;
+#build()Lio/trino/testing/MaterializedResult;

+###io/trino/testing/QueryRunner
@351
+#close()V
+#getNodeCount()I
+#getDefaultSession()Lio/trino/Session;
+#getTransactionManager()Lio/trino/transaction/TransactionManager;
+#getMetadata()Lio/trino/metadata/Metadata;
+#getSplitManager()Lio/trino/split/SplitManager;
+#getPageSourceManager()Lio/trino/split/PageSourceManager;
+#getNodePartitioningManager()Lio/trino/sql/planner/NodePartitioningManager;
+#getStatsCalculator()Lio/trino/cost/StatsCalculator;
+#getGroupProvider()Lio/trino/testing/TestingGroupProvider;
+#getAccessControl()Lio/trino/testing/TestingAccessControlManager;
+#execute(Ljava/lang/String;)Lio/trino/testing/MaterializedResult;
+#execute(Lio/trino/Session;Ljava/lang/String;)Lio/trino/testing/MaterializedResult;
+#executeWithPlan(Lio/trino/Session;Ljava/lang/String;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/testing/QueryRunner$MaterializedResultWithPlan;
+#createPlan(Lio/trino/Session;Ljava/lang/String;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/Plan;
+#listTables(Lio/trino/Session;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
+#tableExists(Lio/trino/Session;Ljava/lang/String;)Z
+#installPlugin(Lio/trino/spi/Plugin;)V
+#addFunctions(Ljava/util/List;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#getExclusiveLock()Ljava/util/concurrent/locks/Lock;
@365
+#getAnalyzerFactory()Lio/trino/sql/analyzer/AnalyzerFactory;
@366
+#injectTaskFailure(Ljava/lang/String;IIILio/trino/execution/FailureInjector$InjectedFailureType;Ljava/util/Optional;)V
@367
+#getTypeManager()Lio/trino/spi/type/TypeManager;
+#getQueryExplainer()Lio/trino/sql/analyzer/QueryExplainer;
+#getSessionPropertyManager()Lio/trino/metadata/SessionPropertyManager;
-#getAnalyzerFactory()Lio/trino/sql/analyzer/AnalyzerFactory;
@371
+#loadExchangeManager(Ljava/lang/String;Ljava/util/Map;)V
@374
+#getFunctionManager()Lio/trino/metadata/FunctionManager;
+#addFunctions(Lio/trino/metadata/FunctionBundle;)V
-#addFunctions(Ljava/util/List;)V
@405
+#getExchangeManager()Lio/trino/spi/exchange/ExchangeManager;
@406
+#getGroupProvider()Lio/trino/testing/TestingGroupProviderManager;
-#getGroupProvider()Lio/trino/testing/TestingGroupProvider;

+###io/trino/testing/TestingConnectorContext
@351
+#<init>()V
+#getNodeManager()Lio/trino/spi/NodeManager;
+#getVersionEmbedder()Lio/trino/spi/VersionEmbedder;
+#getTypeManager()Lio/trino/spi/type/TypeManager;
+#getPageSorter()Lio/trino/spi/PageSorter;
+#getPageIndexerFactory()Lio/trino/spi/PageIndexerFactory;
+#duplicatePluginClassLoader()Ljava/lang/ClassLoader;
@366
+#getMetadataProvider()Lio/trino/spi/connector/MetadataProvider;

+###io/trino/testing/TestingAccessControlManager$TestingPrivilege
@351
+#matches(Ljava/util/Optional;Ljava/lang/String;Lio/trino/testing/TestingAccessControlManager$TestingPrivilegeType;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@367
+#<init>(Ljava/util/Optional;Ljava/lang/String;Lio/trino/testing/TestingAccessControlManager$TestingPrivilegeType;)V
+#<init>(Ljava/util/Optional;Ljava/util/function/Predicate;Lio/trino/testing/TestingAccessControlManager$TestingPrivilegeType;)V

+###io/trino/testing/NullOutputOperator$NullOutputFactory
@351
+#<init>()V
+#createOutputOperator(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)Lio/trino/operator/OperatorFactory;

+###io/trino/testing/TestingMetadata$TestingTableHandle
@351
+#<init>()V
+#<init>(Lio/trino/spi/connector/SchemaTableName;)V
+#getTableName()Lio/trino/spi/connector/SchemaTableName;

+###io/trino/testing/TestingWarningCollector
@351
+#<init>(Lio/trino/execution/warnings/WarningCollectorConfig;Lio/trino/testing/TestingWarningCollectorConfig;)V
+#add(Lio/trino/spi/TrinoWarning;)V
+#getWarnings()Ljava/util/List;
+#createTestWarning(I)Lio/trino/spi/TrinoWarning;

+###io/trino/testing/DataProviders
@351
+#toDataProvider()Ljava/util/stream/Collector;
+#trueFalse()[[Ljava/lang/Object;
@365
+#cartesianProduct([[[Ljava/lang/Object;)[[Ljava/lang/Object;
+#concat([[[Ljava/lang/Object;)[[Ljava/lang/Object;
@401
-###io/trino/testing/DataProviders

+###io/trino/testing/MaterializedRow
@351
+#<init>(I[Ljava/lang/Object;)V
+#<init>(Ljava/util/List;)V
+#<init>(ILjava/util/List;)V
+#getPrecision()I
+#getFieldCount()I
+#getFields()Ljava/util/List;
+#getField(I)Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/testing/TestingEventListenerManager
@351
+#emptyEventListenerManager()Lio/trino/testing/TestingEventListenerManager;
+#<init>(Lio/trino/eventlistener/EventListenerConfig;)V
+#addEventListenerFactory(Lio/trino/spi/eventlistener/EventListenerFactory;)V
+#addEventListener(Lio/trino/spi/eventlistener/EventListener;)V
+#queryCompleted(Lio/trino/spi/eventlistener/QueryCompletedEvent;)V
+#queryCreated(Lio/trino/spi/eventlistener/QueryCreatedEvent;)V
+#splitCompleted(Lio/trino/spi/eventlistener/SplitCompletedEvent;)V
+#getConfiguredEventListeners()Ljava/util/Set;
@394
+#queryCompleted(Lcom/google/common/base/Function;)V
-#queryCompleted(Lio/trino/spi/eventlistener/QueryCompletedEvent;)V

+###io/trino/testing/TestingMetadata$TestingColumnHandle
@351
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;ILio/trino/spi/type/Type;)V
+#<init>(Ljava/lang/String;Ljava/util/OptionalInt;Ljava/util/Optional;)V
+#getName()Ljava/lang/String;
+#getOrdinalPosition()I
+#getType()Lio/trino/spi/type/Type;
+#getJsonOrdinalPosition()Ljava/util/OptionalInt;
+#getJsonType()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@364
+#toString()Ljava/lang/String;

+###io/trino/testing/TestingAccessControlManager$TestingPrivilegeType
@351
+#values()[Lio/trino/testing/TestingAccessControlManager$TestingPrivilegeType;
+#valueOf(Ljava/lang/String;)Lio/trino/testing/TestingAccessControlManager$TestingPrivilegeType;

+###io/trino/testing/TestingConnectorSession
@351
+#getQueryId()Ljava/lang/String;
+#getSource()Ljava/util/Optional;
+#getIdentity()Lio/trino/spi/security/ConnectorIdentity;
+#getTimeZoneKey()Lio/trino/spi/type/TimeZoneKey;
+#getLocale()Ljava/util/Locale;
+#getStart()Ljava/time/Instant;
+#getTraceToken()Ljava/util/Optional;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#builder()Lio/trino/testing/TestingConnectorSession$Builder;
@364
+#isAutoCommitContext()Z
@365
-#isAutoCommitContext()Z

+###io/trino/testing/PageConsumerOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/function/Consumer;Ljava/util/function/Function;)V
+#isClosed()Z
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V

+###io/trino/testing/QueryRunner$MaterializedResultWithPlan
@351
+#<init>(Lio/trino/testing/MaterializedResult;Lio/trino/sql/planner/Plan;)V
+#getMaterializedResult()Lio/trino/testing/MaterializedResult;
+#getQueryPlan()Lio/trino/sql/planner/Plan;

+###io/trino/testing/TestingSplitManager
@351
+#<init>(Ljava/util/List;)V
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;
@365
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;
@388
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;

+###io/trino/testing/TestingHandles
@351
@392
+#createTestCatalogHandle(Ljava/lang/String;)Lio/trino/connector/CatalogHandle;
@405
+#createTestCatalogHandle(Ljava/lang/String;)Lio/trino/spi/connector/CatalogHandle;
-#createTestCatalogHandle(Ljava/lang/String;)Lio/trino/connector/CatalogHandle;

+###io/trino/testing/TestingTaskContext
@351
+#createTaskContext(Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;)Lio/trino/operator/TaskContext;
+#createTaskContext(Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/airlift/units/DataSize;)Lio/trino/operator/TaskContext;
+#createTaskContext(Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/trino/execution/TaskStateMachine;)Lio/trino/operator/TaskContext;
+#createTaskContext(Lio/trino/memory/QueryContext;Ljava/util/concurrent/Executor;Lio/trino/Session;)Lio/trino/operator/TaskContext;
+#builder(Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;)Lio/trino/testing/TestingTaskContext$Builder;

+###io/trino/testing/TestingWarningCollectorFactory
@351
+#<init>(Lio/trino/execution/warnings/WarningCollectorConfig;Lio/trino/testing/TestingWarningCollectorConfig;)V
+#create()Lio/trino/execution/warnings/WarningCollector;
@396
-###io/trino/testing/TestingWarningCollectorFactory

+###io/trino/testing/TestingConnectorSession$Builder
@351
+#<init>()V
+#setIdentity(Lio/trino/spi/security/ConnectorIdentity;)Lio/trino/testing/TestingConnectorSession$Builder;
+#setTimeZoneKey(Lio/trino/spi/type/TimeZoneKey;)Lio/trino/testing/TestingConnectorSession$Builder;
+#setStart(Ljava/time/Instant;)Lio/trino/testing/TestingConnectorSession$Builder;
+#setPropertyMetadata(Ljava/util/List;)Lio/trino/testing/TestingConnectorSession$Builder;
+#setPropertyValues(Ljava/util/Map;)Lio/trino/testing/TestingConnectorSession$Builder;
+#build()Lio/trino/testing/TestingConnectorSession;
@405
+#setSource(Ljava/lang/String;)Lio/trino/testing/TestingConnectorSession$Builder;
+#setTraceToken(Ljava/lang/String;)Lio/trino/testing/TestingConnectorSession$Builder;

+###io/trino/testing/TestingWarningCollectorModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#createWarningCollectorFactory(Lio/trino/execution/warnings/WarningCollectorConfig;Lio/trino/testing/TestingWarningCollectorConfig;)Lio/trino/execution/warnings/WarningCollectorFactory;

+###io/trino/ExceededCpuLimitException
@351
+#<init>(Lio/airlift/units/Duration;)V

+###io/trino/type/TypeOperatorsCache
@351
+#<init>()V
+#apply(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
+#cacheSize()J
+#getCacheHitRate()Ljava/lang/Double;
+#getCacheMissRate()Ljava/lang/Double;
+#getCacheRequestCount()J
+#cacheReset()V
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/type/IpAddressType
@351
+#getFixedSize()I
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;

+###io/trino/type/IntervalDayTimeType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/type/IpAddressOperators
@351
+#castFromVarcharToIpAddress(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromIpAddressToVarchar(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromVarbinaryToIpAddress(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromIpAddressToVarbinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/type/QuantileDigestOperators
@351
+#castToBinaryDouble(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castToBinaryBigint(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castToBinaryReal(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromVarbinaryDouble(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromVarbinaryBigint(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromVarbinaryReal(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/type/DateTimeOperators
@351
+#datePlusIntervalDayToSecond(JJ)J
+#intervalDayToSecondPlusDate(JJ)J
+#datePlusIntervalYearToMonth(JJ)J
+#intervalYearToMonthPlusDate(JJ)J
+#dateMinusIntervalDayToSecond(JJ)J
+#dateMinusIntervalYearToMonth(JJ)J

+###io/trino/type/JoniRegexp
@351
+#<init>(Lio/airlift/slice/Slice;Lio/airlift/joni/Regex;)V
+#pattern()Lio/airlift/slice/Slice;
+#regex()Lio/airlift/joni/Regex;
+#matcher([B)Lio/airlift/joni/Matcher;
+#toString()Ljava/lang/String;

+###io/trino/type/BigintOperators
@351
+#add(JJ)J
+#subtract(JJ)J
+#multiply(JJ)J
+#divide(JJ)J
+#modulus(JJ)J
+#negate(J)J
+#castToBoolean(J)Z
+#castToInteger(J)J
+#saturatedFloorCastToInteger(J)J
+#saturatedFloorCastToSmallint(J)J
+#saturatedFloorCastToTinyint(J)J
+#castToSmallint(J)J
+#castToTinyint(J)J
+#castToDouble(J)D
+#castToReal(J)J
+#castToVarchar(J)Lio/airlift/slice/Slice;
@365
+#castToVarchar(JJ)Lio/airlift/slice/Slice;
-#castToVarchar(J)Lio/airlift/slice/Slice;

+###io/trino/type/JoniRegexpType
@351
+#<init>()V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V

+###io/trino/type/TypeUtils
@351
+#expectedValueSize(Lio/trino/spi/type/Type;I)I
+#checkElementNotNull(ZLjava/lang/String;)V
+#getDisplayLabel(Lio/trino/spi/type/Type;Z)Ljava/lang/String;

+###io/trino/type/BlockTypeOperators$BlockPositionXxHash64
@351
+#xxHash64(Lio/trino/spi/block/Block;I)J

+###io/trino/type/ArrayParametricType
@351
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/type/UuidType
@351
+#getFixedSize()I
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
@360
-###io/trino/type/UuidType

+###io/trino/type/RealOperators
@351
+#add(JJ)J
+#subtract(JJ)J
+#multiply(JJ)J
+#divide(JJ)J
+#modulus(JJ)J
+#negate(J)J
+#castToVarchar(J)Lio/airlift/slice/Slice;
+#castToLong(J)J
+#castToInteger(J)J
+#castToSmallint(J)J
+#castToTinyint(J)J
+#castToDouble(J)D
+#castToBoolean(J)Z
+#saturatedFloorCastToSmallint(J)J
+#saturatedFloorCastToTinyint(J)J
@366
+#castToVarchar(JJ)Lio/airlift/slice/Slice;
-#castToVarchar(J)Lio/airlift/slice/Slice;

+###io/trino/type/BlockTypeOperators$BlockPositionLessThan
@351
+#lessThan(Lio/trino/spi/block/Block;ILio/trino/spi/block/Block;I)Z

+###io/trino/type/RowParametricType
@351
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/type/TypeSignatureKeyDeserializer
@351
+#<init>()V
+#deserializeKey(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###io/trino/type/ColorType
@351
+#isOrderable()Z
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/type/Constraints
@351
+#value()[Lio/trino/type/Constraint;

+###io/trino/type/MapParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/type/FunctionType
@351
+#<init>(Ljava/util/List;Lio/trino/spi/type/Type;)V
+#getReturnType()Lio/trino/spi/type/Type;
+#getArgumentTypes()Ljava/util/List;
+#getTypeParameters()Ljava/util/List;
+#getTypeSignature()Lio/trino/spi/type/TypeSignature;
+#getDisplayName()Ljava/lang/String;
+#getJavaType()Ljava/lang/Class;
+#isComparable()Z
+#isOrderable()Z
+#getBoolean(Lio/trino/spi/block/Block;I)Z
+#writeBoolean(Lio/trino/spi/block/BlockBuilder;Z)V
+#getLong(Lio/trino/spi/block/Block;I)J
+#writeLong(Lio/trino/spi/block/BlockBuilder;J)V
+#getDouble(Lio/trino/spi/block/Block;I)D
+#writeDouble(Lio/trino/spi/block/BlockBuilder;D)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;

+###io/trino/type/TypeCoercion
@351
+#<init>(Ljava/util/function/Function;)V
+#isTypeOnlyCoercion(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Z
+#getCommonSuperType(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Ljava/util/Optional;
+#isCompatible(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Z
+#canCoerce(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Z
+#coerceTypeBase(Lio/trino/spi/type/Type;Ljava/lang/String;)Ljava/util/Optional;
+#isCovariantTypeBase(Ljava/lang/String;)Z
@360
+#isInjectiveCoercion(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Z

+###io/trino/type/IntervalDayTimeOperators
@351
+#add(JJ)J
+#subtract(JJ)J
+#multiplyByBigint(JJ)J
+#multiplyByDouble(JD)J
+#bigintMultiply(JJ)J
+#doubleMultiply(DJ)J
+#divideByDouble(JD)J
+#negate(J)J
+#castToSlice(J)Lio/airlift/slice/Slice;
@388
+#castToVarchar(J)Lio/airlift/slice/Slice;
-#castToSlice(J)Lio/airlift/slice/Slice;

+###io/trino/type/VarcharOperators
@351
+#castToBoolean(Lio/airlift/slice/Slice;)Z
+#castToDouble(Lio/airlift/slice/Slice;)D
+#castToFloat(Lio/airlift/slice/Slice;)J
+#castToBigint(Lio/airlift/slice/Slice;)J
+#castToInteger(Lio/airlift/slice/Slice;)J
+#castToSmallint(Lio/airlift/slice/Slice;)J
+#castToTinyint(Lio/airlift/slice/Slice;)J
+#castToBinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/type/CharParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/type/FunctionParametricType
@351
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/type/CodePointsType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V

+###io/trino/type/InternalTypeManager
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
+#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
+#fromSqlType(Ljava/lang/String;)Lio/trino/spi/type/Type;
+#getType(Lio/trino/spi/type/TypeId;)Lio/trino/spi/type/Type;
+#getTypeOperators()Lio/trino/spi/type/TypeOperators;
@367
+#<init>(Lio/trino/metadata/TypeRegistry;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V

+###io/trino/type/DecimalSaturatedFloorCasts
@351
+#shortDecimalToShortDecimal(JIIII)J
+#shortDecimalToLongDecimal(JIIII)Lio/airlift/slice/Slice;
+#longDecimalToShortDecimal(Lio/airlift/slice/Slice;IIII)J
+#longDecimalToLongDecimal(Lio/airlift/slice/Slice;IIII)Lio/airlift/slice/Slice;
+#shortDecimalToGenericIntegerType(JIJJ)J
+#longDecimalToGenericIntegerType(Lio/airlift/slice/Slice;IJJ)J
+#genericIntegerTypeToShortDecimal(JII)J
+#genericIntegerTypeToLongDecimal(JII)Lio/airlift/slice/Slice;
@368
+#shortDecimalToLongDecimal(JIIII)Lio/trino/spi/type/Int128;
+#longDecimalToShortDecimal(Lio/trino/spi/type/Int128;IIII)J
+#longDecimalToLongDecimal(Lio/trino/spi/type/Int128;IIII)Lio/trino/spi/type/Int128;
+#longDecimalToGenericIntegerType(Lio/trino/spi/type/Int128;IJJ)J
+#genericIntegerTypeToLongDecimal(JII)Lio/trino/spi/type/Int128;
-#shortDecimalToLongDecimal(JIIII)Lio/airlift/slice/Slice;
-#longDecimalToShortDecimal(Lio/airlift/slice/Slice;IIII)J
-#longDecimalToLongDecimal(Lio/airlift/slice/Slice;IIII)Lio/airlift/slice/Slice;
-#longDecimalToGenericIntegerType(Lio/airlift/slice/Slice;IJJ)J
-#genericIntegerTypeToLongDecimal(JII)Lio/airlift/slice/Slice;

+###io/trino/type/BooleanOperators
@351
+#castToDouble(Z)D
+#castToReal(Z)J
+#castToBigint(Z)J
+#castToInteger(Z)J
+#castToSmallint(Z)J
+#castToTinyint(Z)J
+#castToVarchar(Z)Lio/airlift/slice/Slice;
+#not(Z)Z

+###io/trino/type/SmallintOperators
@351
+#add(JJ)J
+#subtract(JJ)J
+#multiply(JJ)J
+#divide(JJ)J
+#modulus(JJ)J
+#negate(J)J
+#castToBigint(J)J
+#castToInteger(J)J
+#castToTinyint(J)J
+#castToBoolean(J)Z
+#castToDouble(J)D
+#castToReal(J)J
+#castToVarchar(J)Lio/airlift/slice/Slice;
+#saturatedFloorCastToTinyint(J)J
@366
+#castToVarchar(JJ)Lio/airlift/slice/Slice;
-#castToVarchar(J)Lio/airlift/slice/Slice;

+###io/trino/type/TypeSignatureDeserializer
@351
+#<init>()V

+###io/trino/type/UuidOperators
@351
+#uuid()Lio/airlift/slice/Slice;
+#castFromVarcharToUuid(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromUuidToVarchar(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromVarbinaryToUuid(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromUuidToVarbinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/type/BlockTypeOperators$BlockPositionOrdering
@351
+#order(Lio/trino/spi/block/Block;ILio/trino/spi/block/Block;I)I

+###io/trino/type/SqlIntervalYearMonth
@351
+#<init>(I)V
+#<init>(II)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getMonths()I

+###io/trino/type/BlockTypeOperators$BlockPositionComparison
@351
+#compare(Lio/trino/spi/block/Block;ILio/trino/spi/block/Block;I)J
+#reversed()Lio/trino/type/BlockTypeOperators$BlockPositionComparison;
@364
-#reversed()Lio/trino/type/BlockTypeOperators$BlockPositionComparison;

+###io/trino/type/TypeDeserializer
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#<init>(Ljava/util/function/Function;)V
@367
+#<init>(Lio/trino/spi/type/TypeManager;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/type/BlockTypeOperators$BlockPositionEqual
@351
+#equal(Lio/trino/spi/block/Block;ILio/trino/spi/block/Block;I)Ljava/lang/Boolean;
+#equalNullSafe(Lio/trino/spi/block/Block;ILio/trino/spi/block/Block;I)Z

+###io/trino/type/DecimalOperators$Negation
@351
+#<init>()V
+#negate(J)J
+#negate(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@368
+#negate(Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
-#negate(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/type/DateTimes
@351
+#scaleEpochMicrosToMillis(J)J
+#epochMicrosToMillisWithRounding(J)J
+#scaleEpochMillisToSeconds(J)J
+#scaleEpochMicrosToSeconds(J)J
+#scaleEpochMillisToMicros(J)J
+#epochSecondToMicrosWithRounding(JJ)J
+#getMicrosOfSecond(J)I
+#getMillisOfSecond(J)I
+#getMicrosOfMilli(J)I
+#toEpochMicros(JI)J
+#round(JI)J
+#roundToNearest(JJ)J
+#scaleFactor(II)J
+#rescale(JII)J
+#rescaleWithRounding(JII)J
+#timestampHasTimeZone(Ljava/lang/String;)Z
+#extractTimestampPrecision(Ljava/lang/String;)I
+#toLocalDateTime(Lio/trino/spi/type/TimestampType;Lio/trino/spi/block/Block;I)Ljava/time/LocalDateTime;
+#toZonedDateTime(Lio/trino/spi/type/TimestampWithTimeZoneType;Lio/trino/spi/block/Block;I)Ljava/time/ZonedDateTime;
+#formatTimestamp(IJILjava/time/ZoneId;)Ljava/lang/String;
+#formatTimestamp(IJILjava/time/ZoneId;Ljava/time/format/DateTimeFormatter;)Ljava/lang/String;
+#formatTimestampWithTimeZone(IJILjava/time/ZoneId;)Ljava/lang/String;
+#formatTimestamp(ILjava/time/LocalDateTime;JLjava/time/format/DateTimeFormatter;Ljava/util/function/Consumer;)Ljava/lang/String;
+#parseTimestamp(ILjava/lang/String;)Ljava/lang/Object;
+#parseTimestampWithTimeZone(ILjava/lang/String;)Ljava/lang/Object;
+#timeHasTimeZone(Ljava/lang/String;)Z
+#extractTimePrecision(Ljava/lang/String;)I
+#parseTime(Ljava/lang/String;)J
+#parseTimeWithTimeZone(ILjava/lang/String;)Ljava/lang/Object;
+#parseShortTimeWithTimeZone(Ljava/lang/String;)J
+#parseLongTimeWithTimeZone(Ljava/lang/String;)Lio/trino/spi/type/LongTimeWithTimeZone;
+#longTimestamp(JLjava/time/Instant;)Lio/trino/spi/type/LongTimestamp;
+#longTimestamp(JJ)Lio/trino/spi/type/LongTimestamp;
+#longTimestampWithTimeZone(JLjava/time/Instant;Lio/trino/spi/type/TimeZoneKey;)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#longTimestampWithTimeZone(JJLjava/time/ZoneId;)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#roundToEpochMillis(Lio/trino/spi/type/LongTimestampWithTimeZone;)J
+#calculateOffsetMinutes(III)I
+#getOffsetMinutes(Ljava/time/Instant;Lio/trino/spi/type/TimeZoneKey;)I
+#isValidOffset(II)Z

+###io/trino/type/DecimalCasts
@351
+#shortDecimalToBoolean(JJJJ)Z
+#longDecimalToBoolean(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Z
+#booleanToShortDecimal(ZJJJ)J
+#booleanToLongDecimal(ZJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#shortDecimalToBigint(JJJJ)J
+#longDecimalToBigint(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
+#bigintToShortDecimal(JJJJ)J
+#bigintToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#shortDecimalToInteger(JJJJ)J
+#longDecimalToInteger(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
+#integerToShortDecimal(JJJJ)J
+#integerToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#shortDecimalToSmallint(JJJJ)J
+#longDecimalToSmallint(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
+#smallintToShortDecimal(JJJJ)J
+#smallintToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#shortDecimalToTinyint(JJJJ)J
+#longDecimalToTinyint(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
+#tinyintToShortDecimal(JJJJ)J
+#tinyintToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#shortDecimalToDouble(JJJJ)D
+#longDecimalToDouble(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)D
+#shortDecimalToReal(JJJJ)J
+#longDecimalToReal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
+#doubleToShortDecimal(DJJJ)J
+#doubleToLongDecimal(DJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#realToShortDecimal(JJJJ)J
+#realToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#shortDecimalToVarchar(JJJJ)Lio/airlift/slice/Slice;
+#longDecimalToVarchar(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#varcharToShortDecimal(Lio/airlift/slice/Slice;JJJ)J
+#varcharToLongDecimal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#shortDecimalToJson(JJJJ)Lio/airlift/slice/Slice;
+#longDecimalToJson(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#jsonToLongDecimal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#jsonToShortDecimal(Lio/airlift/slice/Slice;JJJ)Ljava/lang/Long;
@366
+#shortDecimalToVarchar(JJJ)Lio/airlift/slice/Slice;
+#longDecimalToVarchar(Lio/airlift/slice/Slice;JJ)Lio/airlift/slice/Slice;
-#shortDecimalToVarchar(JJJJ)Lio/airlift/slice/Slice;
-#longDecimalToVarchar(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
@368
+#longDecimalToBoolean(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)Z
+#booleanToLongDecimal(ZJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#longDecimalToBigint(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
+#bigintToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#longDecimalToInteger(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
+#integerToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#longDecimalToSmallint(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
+#smallintToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#longDecimalToTinyint(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
+#tinyintToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#longDecimalToDouble(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)D
+#longDecimalToReal(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
+#doubleToLongDecimal(DJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#realToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#longDecimalToVarchar(Lio/trino/spi/type/Int128;JJ)Lio/airlift/slice/Slice;
+#varcharToLongDecimal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#longDecimalToJson(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
+#jsonToLongDecimal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#longDecimalToBoolean(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Z
-#booleanToLongDecimal(ZJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#longDecimalToBigint(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
-#bigintToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#longDecimalToInteger(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
-#integerToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#longDecimalToSmallint(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
-#smallintToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#longDecimalToTinyint(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
-#tinyintToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#longDecimalToDouble(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)D
-#longDecimalToReal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)J
-#doubleToLongDecimal(DJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#realToLongDecimal(JJJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#longDecimalToVarchar(Lio/airlift/slice/Slice;JJ)Lio/airlift/slice/Slice;
-#varcharToLongDecimal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#longDecimalToJson(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#jsonToLongDecimal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
@370
+#longDecimalToBoolean(Lio/trino/spi/type/Int128;JJLio/trino/spi/type/Int128;)Z
+#booleanToLongDecimal(ZJJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#longDecimalToBigint(Lio/trino/spi/type/Int128;JJLio/trino/spi/type/Int128;)J
+#bigintToLongDecimal(JJJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#longDecimalToInteger(Lio/trino/spi/type/Int128;JJLio/trino/spi/type/Int128;)J
+#integerToLongDecimal(JJJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#longDecimalToSmallint(Lio/trino/spi/type/Int128;JJLio/trino/spi/type/Int128;)J
+#smallintToLongDecimal(JJJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#longDecimalToTinyint(Lio/trino/spi/type/Int128;JJLio/trino/spi/type/Int128;)J
+#tinyintToLongDecimal(JJJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#longDecimalToDouble(Lio/trino/spi/type/Int128;JJLio/trino/spi/type/Int128;)D
+#longDecimalToReal(Lio/trino/spi/type/Int128;JJLio/trino/spi/type/Int128;)J
+#doubleToLongDecimal(DJJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#realToLongDecimal(JJJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#varcharToLongDecimal(Lio/airlift/slice/Slice;JJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#longDecimalToJson(Lio/trino/spi/type/Int128;JJLio/trino/spi/type/Int128;)Lio/airlift/slice/Slice;
+#jsonToLongDecimal(Lio/airlift/slice/Slice;JJLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
-#longDecimalToBoolean(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)Z
-#booleanToLongDecimal(ZJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#longDecimalToBigint(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
-#bigintToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#longDecimalToInteger(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
-#integerToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#longDecimalToSmallint(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
-#smallintToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#longDecimalToTinyint(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
-#tinyintToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#longDecimalToDouble(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)D
-#longDecimalToReal(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)J
-#doubleToLongDecimal(DJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#realToLongDecimal(JJJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#varcharToLongDecimal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;
-#longDecimalToJson(Lio/trino/spi/type/Int128;JJLjava/math/BigInteger;)Lio/airlift/slice/Slice;
-#jsonToLongDecimal(Lio/airlift/slice/Slice;JJLjava/math/BigInteger;)Lio/trino/spi/type/Int128;

+###io/trino/type/TinyintOperators
@351
+#add(JJ)J
+#subtract(JJ)J
+#multiply(JJ)J
+#divide(JJ)J
+#modulus(JJ)J
+#negate(J)J
+#castToBigint(J)J
+#castToInteger(J)J
+#castToSmallint(J)J
+#castToBoolean(J)Z
+#castToDouble(J)D
+#castToReal(J)J
+#castToVarchar(J)Lio/airlift/slice/Slice;
@366
+#castToVarchar(JJ)Lio/airlift/slice/Slice;
-#castToVarchar(J)Lio/airlift/slice/Slice;

+###io/trino/type/TypeCoercion$TypeCompatibility
@351
+#isCompatible()Z
+#getCommonSuperType()Lio/trino/spi/type/Type;
+#isCoercible()Z

+###io/trino/type/JsonPathType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V

+###io/trino/type/DecimalToDecimalCasts
@351

+###io/trino/type/BlockTypeOperators
@351
+#<init>()V
+#<init>(Lio/trino/spi/type/TypeOperators;)V
+#getEqualOperator(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionEqual;
+#getHashCodeOperator(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;
+#getXxHash64Operator(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionXxHash64;
+#getDistinctFromOperator(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;
+#getComparisonOperator(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionComparison;
+#generateBlockPositionOrdering(Lio/trino/spi/type/Type;Lio/trino/spi/connector/SortOrder;)Lio/trino/type/BlockTypeOperators$BlockPositionOrdering;
+#generateBlockPositionLessThan(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionLessThan;
+#cacheSize()J
+#getCacheHitRate()Ljava/lang/Double;
+#getCacheMissRate()Ljava/lang/Double;
+#getCacheRequestCount()J
+#cacheReset()V
@364
+#getComparisonUnorderedLastOperator(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionComparison;
+#getComparisonUnorderedFirstOperator(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionComparison;
-#getComparisonOperator(Lio/trino/spi/type/Type;)Lio/trino/type/BlockTypeOperators$BlockPositionComparison;

+###io/trino/type/DecimalParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/type/Re2JRegexp
@351
+#<init>(IILio/airlift/slice/Slice;)V
+#pattern()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#matches(Lio/airlift/slice/Slice;)Z
+#matcher(Lio/airlift/slice/Slice;)Lcom/google/re2j/Matcher;
+#replace(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#extractAll(Lio/airlift/slice/Slice;J)Lio/trino/spi/block/Block;
+#extract(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#split(Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;

+###io/trino/type/Re2JRegexpType
@351
+#<init>(II)V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V

+###io/trino/type/DecimalOperators
@351
+#addShortShortShort(JJJJ)J
+#addShortShortLong(JJIZ)Lio/airlift/slice/Slice;
+#addLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;IZ)Lio/airlift/slice/Slice;
+#addShortLongLong(JLio/airlift/slice/Slice;IZ)Lio/airlift/slice/Slice;
+#addLongShortLong(Lio/airlift/slice/Slice;JIZ)Lio/airlift/slice/Slice;
+#subtractShortShortShort(JJJJ)J
+#subtractShortShortLong(JJIZ)Lio/airlift/slice/Slice;
+#subtractLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;IZ)Lio/airlift/slice/Slice;
+#subtractShortLongLong(JLio/airlift/slice/Slice;IZ)Lio/airlift/slice/Slice;
+#subtractLongShortLong(Lio/airlift/slice/Slice;JIZ)Lio/airlift/slice/Slice;
+#multiplyShortShortShort(JJ)J
+#multiplyShortShortLong(JJ)Lio/airlift/slice/Slice;
+#multiplyLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#multiplyShortLongLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#multiplyLongShortLong(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#divideShortShortShort(JJI)J
+#divideShortLongShort(JLio/airlift/slice/Slice;I)J
+#divideLongShortShort(Lio/airlift/slice/Slice;JI)J
+#divideShortShortLong(JJI)Lio/airlift/slice/Slice;
+#divideLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#divideShortLongLong(JLio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#divideLongShortLong(Lio/airlift/slice/Slice;JI)Lio/airlift/slice/Slice;
+#modulusScalarFunction(Lio/trino/metadata/Signature;)Lio/trino/metadata/SqlScalarFunction;
+#modulusSignatureBuilder()Lio/trino/metadata/SignatureBuilder;
+#modulusShortShortShort(JJII)J
+#modulusShortLongShort(JLio/airlift/slice/Slice;II)J
+#modulusLongShortShort(Lio/airlift/slice/Slice;JII)J
+#modulusShortLongLong(JLio/airlift/slice/Slice;II)Lio/airlift/slice/Slice;
+#modulusLongShortLong(Lio/airlift/slice/Slice;JII)Lio/airlift/slice/Slice;
+#modulusLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;II)Lio/airlift/slice/Slice;
@368
+#addShortShortLong(JJIZ)Lio/trino/spi/type/Int128;
+#addLongLongLong(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;IZ)Lio/trino/spi/type/Int128;
+#addShortLongLong(JLio/trino/spi/type/Int128;IZ)Lio/trino/spi/type/Int128;
+#addLongShortLong(Lio/trino/spi/type/Int128;JIZ)Lio/trino/spi/type/Int128;
+#subtractShortShortLong(JJIZ)Lio/trino/spi/type/Int128;
+#subtractLongLongLong(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;IZ)Lio/trino/spi/type/Int128;
+#subtractShortLongLong(JLio/trino/spi/type/Int128;IZ)Lio/trino/spi/type/Int128;
+#subtractLongShortLong(Lio/trino/spi/type/Int128;JIZ)Lio/trino/spi/type/Int128;
+#multiplyShortShortLong(JJ)Lio/trino/spi/type/Int128;
+#multiplyLongLongLong(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#multiplyShortLongLong(JLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#multiplyLongShortLong(Lio/trino/spi/type/Int128;J)Lio/trino/spi/type/Int128;
+#divideShortLongShort(JLio/trino/spi/type/Int128;I)J
+#divideLongShortShort(Lio/trino/spi/type/Int128;JI)J
+#divideShortShortLong(JJI)Lio/trino/spi/type/Int128;
+#divideLongLongLong(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;I)Lio/trino/spi/type/Int128;
+#divideShortLongLong(JLio/trino/spi/type/Int128;I)Lio/trino/spi/type/Int128;
+#divideLongShortLong(Lio/trino/spi/type/Int128;JI)Lio/trino/spi/type/Int128;
+#modulusShortLongShort(JLio/trino/spi/type/Int128;II)J
+#modulusLongShortShort(Lio/trino/spi/type/Int128;JII)J
+#modulusShortLongLong(JLio/trino/spi/type/Int128;II)Lio/trino/spi/type/Int128;
+#modulusLongShortLong(Lio/trino/spi/type/Int128;JII)Lio/trino/spi/type/Int128;
+#modulusLongLongLong(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;II)Lio/trino/spi/type/Int128;
-#addShortShortLong(JJIZ)Lio/airlift/slice/Slice;
-#addLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;IZ)Lio/airlift/slice/Slice;
-#addShortLongLong(JLio/airlift/slice/Slice;IZ)Lio/airlift/slice/Slice;
-#addLongShortLong(Lio/airlift/slice/Slice;JIZ)Lio/airlift/slice/Slice;
-#subtractShortShortLong(JJIZ)Lio/airlift/slice/Slice;
-#subtractLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;IZ)Lio/airlift/slice/Slice;
-#subtractShortLongLong(JLio/airlift/slice/Slice;IZ)Lio/airlift/slice/Slice;
-#subtractLongShortLong(Lio/airlift/slice/Slice;JIZ)Lio/airlift/slice/Slice;
-#multiplyShortShortLong(JJ)Lio/airlift/slice/Slice;
-#multiplyLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
-#multiplyShortLongLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
-#multiplyLongShortLong(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
-#divideShortLongShort(JLio/airlift/slice/Slice;I)J
-#divideLongShortShort(Lio/airlift/slice/Slice;JI)J
-#divideShortShortLong(JJI)Lio/airlift/slice/Slice;
-#divideLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
-#divideShortLongLong(JLio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
-#divideLongShortLong(Lio/airlift/slice/Slice;JI)Lio/airlift/slice/Slice;
-#modulusShortLongShort(JLio/airlift/slice/Slice;II)J
-#modulusLongShortShort(Lio/airlift/slice/Slice;JII)J
-#modulusShortLongLong(JLio/airlift/slice/Slice;II)Lio/airlift/slice/Slice;
-#modulusLongShortLong(Lio/airlift/slice/Slice;JII)Lio/airlift/slice/Slice;
-#modulusLongLongLong(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;II)Lio/airlift/slice/Slice;
@379
+#modulusSignatureBuilder()Lio/trino/metadata/Signature$Builder;
-#modulusSignatureBuilder()Lio/trino/metadata/SignatureBuilder;
@395
+#modulusScalarFunction(Lio/trino/spi/function/Signature;)Lio/trino/metadata/SqlScalarFunction;
+#modulusSignatureBuilder()Lio/trino/spi/function/Signature$Builder;
-#modulusScalarFunction(Lio/trino/metadata/Signature;)Lio/trino/metadata/SqlScalarFunction;
-#modulusSignatureBuilder()Lio/trino/metadata/Signature$Builder;

+###io/trino/type/TDigestType
@351
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;

+###io/trino/type/IntervalYearMonthType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom
@351
+#isDistinctFrom(Lio/trino/spi/block/Block;ILio/trino/spi/block/Block;I)Z

+###io/trino/type/HyperLogLogOperators
@351
+#castToBinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromVarbinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castToP4Hll(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromP4Hll(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/type/TDigestOperators
@351
+#castToBinary(Lio/airlift/stats/TDigest;)Lio/airlift/slice/Slice;
+#castFromVarbinary(Lio/airlift/slice/Slice;)Lio/airlift/stats/TDigest;

+###io/trino/type/UnknownType
@351
+#getFixedSize()I
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getBoolean(Lio/trino/spi/block/Block;I)Z
+#writeBoolean(Lio/trino/spi/block/BlockBuilder;Z)V[deprecated]

+###io/trino/type/VarcharParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/type/BlockTypeOperators$BlockPositionHashCode
@351
+#hashCode(Lio/trino/spi/block/Block;I)J
+#hashCodeNullSafe(Lio/trino/spi/block/Block;I)J

+###io/trino/type/LikeFunctions
@351
+#likeChar(Ljava/lang/Long;Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Z
+#likeVarchar(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Z
+#likePattern(Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
+#likePattern(Ljava/lang/Long;Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
+#compileLikePattern(Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
+#likePattern(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
+#isLikePattern(Lio/airlift/slice/Slice;Ljava/util/Optional;)Z
+#patternConstantPrefixBytes(Lio/airlift/slice/Slice;Ljava/util/Optional;)I
+#unescapeLiteralLikePattern(Lio/airlift/slice/Slice;Ljava/util/Optional;)Lio/airlift/slice/Slice;
@359
-#likePattern(Ljava/lang/Long;Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
@394
+#likeChar(Ljava/lang/Long;Lio/airlift/slice/Slice;Lio/trino/likematcher/LikeMatcher;)Z
+#likeVarchar(Lio/airlift/slice/Slice;Lio/trino/likematcher/LikeMatcher;)Z
+#likePattern(Lio/airlift/slice/Slice;)Lio/trino/likematcher/LikeMatcher;
+#likePattern(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/trino/likematcher/LikeMatcher;
-#likeChar(Ljava/lang/Long;Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Z
-#likeVarchar(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Z
-#likePattern(Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
-#compileLikePattern(Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
-#likePattern(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;

+###io/trino/type/Constraint
@351
+#variable()Ljava/lang/String;
+#expression()Ljava/lang/String;

+###io/trino/type/LikePatternType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V

+###io/trino/type/setdigest/SetDigestState
@351
+#getDigest()Lio/trino/type/setdigest/SetDigest;
+#setDigest(Lio/trino/type/setdigest/SetDigest;)V

+###io/trino/type/setdigest/SetDigestOperators
@351
+#castToBinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromBinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castToHyperLogLog(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/type/setdigest/BuildSetDigestAggregation
@351
+#input(Lio/trino/type/setdigest/SetDigestState;J)V
+#combine(Lio/trino/type/setdigest/SetDigestState;Lio/trino/type/setdigest/SetDigestState;)V
+#output(Lio/trino/type/setdigest/SetDigestState;Lio/trino/spi/block/BlockBuilder;)V
@359
+#input(Lio/trino/type/setdigest/SetDigestState;Lio/airlift/slice/Slice;)V

+###io/trino/type/setdigest/SetDigestType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V

+###io/trino/type/setdigest/SetDigestStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/type/setdigest/SetDigestState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/type/setdigest/SetDigestState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/type/setdigest/SetDigestStateFactory$GroupedSetDigestState
@351
+#<init>()V
+#setGroupId(J)V
+#ensureCapacity(J)V
+#getDigest()Lio/trino/type/setdigest/SetDigest;
+#setDigest(Lio/trino/type/setdigest/SetDigest;)V
+#getEstimatedSize()J

+###io/trino/type/setdigest/SetDigest
@351
+#<init>()V
+#<init>(II)V
+#<init>(ILio/airlift/stats/cardinality/HyperLogLog;Lit/unimi/dsi/fastutil/longs/Long2ShortSortedMap;)V
+#newInstance(Lio/airlift/slice/Slice;)Lio/trino/type/setdigest/SetDigest;
+#serialize()Lio/airlift/slice/Slice;
+#getHll()Lio/airlift/stats/cardinality/HyperLogLog;
+#estimatedInMemorySize()I
+#estimatedSerializedSize()I
+#isExact()Z
+#cardinality()J
+#exactIntersectionCardinality(Lio/trino/type/setdigest/SetDigest;Lio/trino/type/setdigest/SetDigest;)J
+#jaccardIndex(Lio/trino/type/setdigest/SetDigest;Lio/trino/type/setdigest/SetDigest;)D
+#add(J)V
+#add(Lio/airlift/slice/Slice;)V
+#mergeWith(Lio/trino/type/setdigest/SetDigest;)V
+#getHashCounts()Ljava/util/Map;

+###io/trino/type/setdigest/SetDigestFunctions
@351
+#cardinality(Lio/airlift/slice/Slice;)J
+#intersectionCardinality(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)J
+#jaccardIndex(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)D
+#hashCounts(Lio/trino/spi/type/Type;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;
+#hashCounts(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@359
-#hashCounts(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/type/setdigest/SetDigestStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/type/setdigest/SetDigestState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/type/setdigest/SetDigestState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/type/setdigest/SetDigestStateFactory$SingleSetDigestState
@351
+#<init>()V
+#getDigest()Lio/trino/type/setdigest/SetDigest;
+#setDigest(Lio/trino/type/setdigest/SetDigest;)V
+#getEstimatedSize()J

+###io/trino/type/setdigest/MergeSetDigestAggregation
@351
+#input(Lio/trino/type/setdigest/SetDigestState;Lio/airlift/slice/Slice;)V
+#combine(Lio/trino/type/setdigest/SetDigestState;Lio/trino/type/setdigest/SetDigestState;)V
+#output(Lio/trino/type/setdigest/SetDigestState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/type/JsonType
@351
+#<init>()V
+#isComparable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeString(Lio/trino/spi/block/BlockBuilder;Ljava/lang/String;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
@377
-#<init>()V

+###io/trino/type/IntervalYearMonthOperators
@351
+#add(JJ)J
+#subtract(JJ)J
+#multiplyByBigint(JJ)J
+#multiplyByDouble(JD)J
+#bigintMultiply(JJ)J
+#doubleMultiply(DJ)J
+#divideByDouble(JD)J
+#negate(J)J
+#castToSlice(J)Lio/airlift/slice/Slice;
@388
+#castToVarchar(J)Lio/airlift/slice/Slice;
-#castToSlice(J)Lio/airlift/slice/Slice;

+###io/trino/type/IntegerOperators
@351
+#add(JJ)J
+#subtract(JJ)J
+#multiply(JJ)J
+#divide(JJ)J
+#modulus(JJ)J
+#negate(J)J
+#castToBigint(J)J
+#castToSmallint(J)J
+#castToTinyint(J)J
+#castToBoolean(J)Z
+#castToDouble(J)D
+#castToReal(J)J
+#castToVarchar(J)Lio/airlift/slice/Slice;
+#saturatedFloorCastToSmallint(J)J
+#saturatedFloorCastToTinyint(J)J
@366
+#castToVarchar(JJ)Lio/airlift/slice/Slice;
-#castToVarchar(J)Lio/airlift/slice/Slice;

+###io/trino/type/SqlIntervalDayTime
@351
+#<init>(J)V
+#<init>(IIIII)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getMillis()J

+###io/trino/type/DoubleOperators
@351
+#add(DD)D
+#subtract(DD)D
+#multiply(DD)D
+#divide(DD)D
+#modulus(DD)D
+#negate(D)D
+#castToBoolean(D)Z
+#castToInteger(D)J
+#castToSmallint(D)J
+#castToTinyint(D)J
+#castToLong(D)J
+#castToReal(D)J
+#castToVarchar(D)Lio/airlift/slice/Slice;
+#saturatedFloorCastToFloat(D)J
+#saturatedFloorCastToInteger(D)J
+#saturatedFloorCastToSmallint(D)J
+#saturatedFloorCastToTinyint(D)J
@366
+#castToVarchar(JD)Lio/airlift/slice/Slice;
-#castToVarchar(D)Lio/airlift/slice/Slice;

+###io/trino/type/DateOperators
@351
+#castToSlice(J)Lio/airlift/slice/Slice;
+#castFromSlice(Lio/airlift/slice/Slice;)J
@369
+#castToSlice(JJ)Lio/airlift/slice/Slice;
-#castToSlice(J)Lio/airlift/slice/Slice;
@388
+#castToVarchar(JJ)Lio/airlift/slice/Slice;
+#castFromVarchar(Lio/airlift/slice/Slice;)J
-#castToSlice(JJ)Lio/airlift/slice/Slice;
-#castFromSlice(Lio/airlift/slice/Slice;)J

+###io/trino/FullConnectorSession
@351
+#<init>(Lio/trino/Session;Lio/trino/spi/security/ConnectorIdentity;)V
+#<init>(Lio/trino/Session;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V
+#getSession()Lio/trino/Session;
+#getQueryId()Ljava/lang/String;
+#getSource()Ljava/util/Optional;
+#getIdentity()Lio/trino/spi/security/ConnectorIdentity;
+#getTimeZoneKey()Lio/trino/spi/type/TimeZoneKey;
+#getLocale()Ljava/util/Locale;
+#getStart()Ljava/time/Instant;
+#getTraceToken()Ljava/util/Optional;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@364
+#<init>(Lio/trino/Session;Ljava/util/Optional;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V
+#isAutoCommitContext()Z
-#<init>(Lio/trino/Session;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V
@365
+#<init>(Lio/trino/Session;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V
-#<init>(Lio/trino/Session;Ljava/util/Optional;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V
-#isAutoCommitContext()Z
@392
+#<init>(Lio/trino/Session;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V
-#<init>(Lio/trino/Session;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V
@405
+#<init>(Lio/trino/Session;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V
-#<init>(Lio/trino/Session;Lio/trino/spi/security/ConnectorIdentity;Ljava/util/Map;Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/metadata/SessionPropertyManager;)V

+###io/trino/version/EmbedVersion
@351
+#<init>(Lio/trino/client/NodeVersion;)V
+#<init>(Ljava/lang/String;)V
+#embedVersion(Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#embedVersion(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#testingVersionEmbedder()Lio/trino/version/EmbedVersion;

+###io/trino/execution/ParameterExtractor
@351
+#getParameterCount(Lio/trino/sql/tree/Statement;)I
+#getParameters(Lio/trino/sql/tree/Statement;)Ljava/util/List;
@403
+#extractParameters(Lio/trino/sql/tree/Statement;)Ljava/util/List;
+#bindParameters(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/util/Map;
-#getParameters(Lio/trino/sql/tree/Statement;)Ljava/util/List;

+###io/trino/execution/Failure
@351
+#getType()Ljava/lang/String;
+#getErrorCode()Lio/trino/spi/ErrorCode;
+#toString()Ljava/lang/String;

+###io/trino/execution/DataDefinitionExecution
@351
+#getSlug()Lio/trino/server/protocol/Slug;
+#getMemoryPool()Lio/trino/memory/VersionedMemoryPoolId;
+#setMemoryPool(Lio/trino/memory/VersionedMemoryPoolId;)V
+#getSession()Lio/trino/Session;
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getCreateTime()Lorg/joda/time/DateTime;
+#getExecutionStartTime()Ljava/util/Optional;
+#getLastHeartbeat()Lorg/joda/time/DateTime;
+#getEndTime()Ljava/util/Optional;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getBasicQueryInfo()Lio/trino/server/BasicQueryInfo;
+#start()V
+#addOutputInfoListener(Ljava/util/function/Consumer;)V
+#getStateChange(Lio/trino/execution/QueryState;)Lcom/google/common/util/concurrent/ListenableFuture;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addFinalQueryInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#fail(Ljava/lang/Throwable;)V
+#isDone()Z
+#cancelQuery()V
+#cancelStage(Lio/trino/execution/StageId;)V
+#recordHeartbeat()V
+#shouldWaitForMinWorkers()Z
+#pruneInfo()V
+#getQueryId()Lio/trino/spi/QueryId;
+#getQueryInfo()Lio/trino/execution/QueryInfo;
+#getQueryPlan()Lio/trino/sql/planner/Plan;
+#getState()Lio/trino/execution/QueryState;
+#getParameters()Ljava/util/List;
@356
+#getPlanningTime()Ljava/util/Optional;
@366
+#outputTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@372
-#getMemoryPool()Lio/trino/memory/VersionedMemoryPoolId;
-#setMemoryPool(Lio/trino/memory/VersionedMemoryPoolId;)V
@373
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Exception;)V
@391
+#resultsConsumed()V
@396
+#setOutputInfoListener(Ljava/util/function/Consumer;)V
-#addOutputInfoListener(Ljava/util/function/Consumer;)V

+###io/trino/execution/RollbackTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Rollback;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Rollback;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Rollback;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/transaction/TransactionManager;)V
+#execute(Lio/trino/sql/tree/Rollback;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/Rollback;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/QueryManagerConfig
@351
+#<init>()V
+#getScheduleSplitBatchSize()I
+#setScheduleSplitBatchSize(I)Lio/trino/execution/QueryManagerConfig;
+#getMinScheduleSplitBatchSize()I
+#setMinScheduleSplitBatchSize(I)Lio/trino/execution/QueryManagerConfig;
+#getMaxConcurrentQueries()I[deprecated]
+#setMaxConcurrentQueries(I)Lio/trino/execution/QueryManagerConfig;[deprecated]
+#getMaxQueuedQueries()I[deprecated]
+#setMaxQueuedQueries(I)Lio/trino/execution/QueryManagerConfig;[deprecated]
+#getInitialHashPartitions()I
+#setInitialHashPartitions(I)Lio/trino/execution/QueryManagerConfig;
+#getMinQueryExpireAge()Lio/airlift/units/Duration;
+#setMinQueryExpireAge(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
+#getMaxQueryHistory()I
+#setMaxQueryHistory(I)Lio/trino/execution/QueryManagerConfig;
+#getMaxQueryLength()I
+#setMaxQueryLength(I)Lio/trino/execution/QueryManagerConfig;
+#getMaxStageCount()I
+#setMaxStageCount(I)Lio/trino/execution/QueryManagerConfig;
+#getStageCountWarningThreshold()I
+#setStageCountWarningThreshold(I)Lio/trino/execution/QueryManagerConfig;
+#getClientTimeout()Lio/airlift/units/Duration;
+#setClientTimeout(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
+#getQueryManagerExecutorPoolSize()I
+#setQueryManagerExecutorPoolSize(I)Lio/trino/execution/QueryManagerConfig;
+#getRemoteTaskMinErrorDuration()Lio/airlift/units/Duration;[deprecated]
+#setRemoteTaskMinErrorDuration(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;[deprecated]
+#getRemoteTaskMaxErrorDuration()Lio/airlift/units/Duration;
+#setRemoteTaskMaxErrorDuration(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
+#getQueryMaxRunTime()Lio/airlift/units/Duration;
+#setQueryMaxRunTime(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
+#getQueryMaxExecutionTime()Lio/airlift/units/Duration;
+#setQueryMaxExecutionTime(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
+#getQueryMaxCpuTime()Lio/airlift/units/Duration;
+#setQueryMaxCpuTime(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
+#getQueryMaxScanPhysicalBytes()Ljava/util/Optional;
+#setQueryMaxScanPhysicalBytes(Lio/airlift/units/DataSize;)Lio/trino/execution/QueryManagerConfig;
+#getRemoteTaskMaxCallbackThreads()I
+#setRemoteTaskMaxCallbackThreads(I)Lio/trino/execution/QueryManagerConfig;
+#getQueryExecutionPolicy()Ljava/lang/String;
+#setQueryExecutionPolicy(Ljava/lang/String;)Lio/trino/execution/QueryManagerConfig;
+#getRequiredWorkers()I
+#setRequiredWorkers(I)Lio/trino/execution/QueryManagerConfig;
+#getRequiredWorkersMaxWait()Lio/airlift/units/Duration;
+#setRequiredWorkersMaxWait(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
@356
+#getQueryMaxPlanningTime()Lio/airlift/units/Duration;
+#setQueryMaxPlanningTime(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
@367
+#getRetryPolicy()Lio/trino/operator/RetryPolicy;
+#setRetryPolicy(Lio/trino/operator/RetryPolicy;)Lio/trino/execution/QueryManagerConfig;
+#getRetryAttempts()I
+#setRetryAttempts(I)Lio/trino/execution/QueryManagerConfig;
+#getRetryInitialDelay()Lio/airlift/units/Duration;
+#setRetryInitialDelay(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
+#getRetryMaxDelay()Lio/airlift/units/Duration;
+#setRetryMaxDelay(Lio/airlift/units/Duration;)Lio/trino/execution/QueryManagerConfig;
@369
+#getFaultTolerantExecutionTargetTaskInputSize()Lio/airlift/units/DataSize;
+#setFaultTolerantExecutionTargetTaskInputSize(Lio/airlift/units/DataSize;)Lio/trino/execution/QueryManagerConfig;
+#getFaultTolerantExecutionTargetTaskSplitCount()I
+#setFaultTolerantExecutionTargetTaskSplitCount(I)Lio/trino/execution/QueryManagerConfig;
@371
+#getFaultTolerantExecutionMinTaskSplitCount()I
+#setFaultTolerantExecutionMinTaskSplitCount(I)Lio/trino/execution/QueryManagerConfig;
+#getFaultTolerantExecutionMaxTaskSplitCount()I
+#setFaultTolerantExecutionMaxTaskSplitCount(I)Lio/trino/execution/QueryManagerConfig;
+#getFaultTolerantExecutionTaskDescriptorStorageMaxMemory()Lio/airlift/units/DataSize;
+#setFaultTolerantExecutionTaskDescriptorStorageMaxMemory(Lio/airlift/units/DataSize;)Lio/trino/execution/QueryManagerConfig;
@372
+#getHashPartitionCount()I
+#setHashPartitionCount(I)Lio/trino/execution/QueryManagerConfig;
-#getInitialHashPartitions()I
-#setInitialHashPartitions(I)Lio/trino/execution/QueryManagerConfig;
@374
+#getQueryRetryAttempts()I
+#setQueryRetryAttempts(I)Lio/trino/execution/QueryManagerConfig;
+#getTaskRetryAttemptsOverall()I
+#setTaskRetryAttemptsOverall(I)Lio/trino/execution/QueryManagerConfig;
+#getTaskRetryAttemptsPerTask()I
+#setTaskRetryAttemptsPerTask(I)Lio/trino/execution/QueryManagerConfig;
-#getRetryAttempts()I
-#setRetryAttempts(I)Lio/trino/execution/QueryManagerConfig;
@377
+#getMaxTasksWaitingForNodePerStage()I
+#setMaxTasksWaitingForNodePerStage(I)Lio/trino/execution/QueryManagerConfig;
@378
+#getRetryDelayScaleFactor()D
+#setRetryDelayScaleFactor(D)Lio/trino/execution/QueryManagerConfig;
@381
+#getFaultTolerantExecutionPartitionCount()I
+#setFaultTolerantExecutionPartitionCount(I)Lio/trino/execution/QueryManagerConfig;
@385
+#getFaultTolerantPreserveInputPartitionsInWriteStage()Z
+#setFaultTolerantPreserveInputPartitionsInWriteStage(Z)Lio/trino/execution/QueryManagerConfig;
@398
+#getQueryExecutorPoolSize()I
+#setQueryExecutorPoolSize(I)Lio/trino/execution/QueryManagerConfig;
@401
+#isFaultTolerantExecutionEventDrivenSchedulerEnabled()Z
+#setFaultTolerantExecutionEventDrivenSchedulerEnabled(Z)Lio/trino/execution/QueryManagerConfig;
@403
+#applyFaultTolerantExecutionDefaults()V
@405
+#isFaultTolerantExecutionForcePreferredWritePartitioningEnabled()Z
+#setFaultTolerantExecutionForcePreferredWritePartitioningEnabled(Z)Lio/trino/execution/QueryManagerConfig;
-#getFaultTolerantPreserveInputPartitionsInWriteStage()Z
-#setFaultTolerantPreserveInputPartitionsInWriteStage(Z)Lio/trino/execution/QueryManagerConfig;
@406
+#getMaxTasksWaitingForExecutionPerQuery()I
+#setMaxTasksWaitingForExecutionPerQuery(I)Lio/trino/execution/QueryManagerConfig;
@407
+#getMaxHashPartitionCount()I
+#setMaxHashPartitionCount(I)Lio/trino/execution/QueryManagerConfig;
+#getMinHashPartitionCount()I
+#setMinHashPartitionCount(I)Lio/trino/execution/QueryManagerConfig;
+#isEnabledAdaptiveTaskRequestSize()Z
+#setEnabledAdaptiveTaskRequestSize(Z)Lio/trino/execution/QueryManagerConfig;
+#getMaxRemoteTaskRequestSize()Lio/airlift/units/DataSize;
+#setMaxRemoteTaskRequestSize(Lio/airlift/units/DataSize;)Lio/trino/execution/QueryManagerConfig;
+#getRemoteTaskRequestSizeHeadroom()Lio/airlift/units/DataSize;
+#setRemoteTaskRequestSizeHeadroom(Lio/airlift/units/DataSize;)Lio/trino/execution/QueryManagerConfig;
+#getRemoteTaskGuaranteedSplitPerTask()I
+#setRemoteTaskGuaranteedSplitPerTask(I)Lio/trino/execution/QueryManagerConfig;
-#getHashPartitionCount()I
-#setHashPartitionCount(I)Lio/trino/execution/QueryManagerConfig;
-#getTaskRetryAttemptsOverall()I
-#setTaskRetryAttemptsOverall(I)Lio/trino/execution/QueryManagerConfig;
-#getFaultTolerantExecutionMinTaskSplitCount()I
-#setFaultTolerantExecutionMinTaskSplitCount(I)Lio/trino/execution/QueryManagerConfig;
-#isFaultTolerantExecutionEventDrivenSchedulerEnabled()Z
-#setFaultTolerantExecutionEventDrivenSchedulerEnabled(Z)Lio/trino/execution/QueryManagerConfig;
@408
+#getMaxStateMachineCallbackThreads()I
+#setMaxStateMachineCallbackThreads(I)Lio/trino/execution/QueryManagerConfig;

+###io/trino/execution/CallTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Call;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Call;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Call;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/Call;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/Call;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/ProcedureRegistry;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V

+###io/trino/execution/CreateMaterializedViewTask
@351
+#<init>(Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/cost/StatsCalculator;)V
+#getName()Ljava/lang/String;
+#explain(Lio/trino/sql/tree/CreateMaterializedView;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/CreateMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/CreateMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/CreateMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;)V
+#execute(Lio/trino/sql/tree/CreateMaterializedView;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>(Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/cost/StatsCalculator;)V
-#explain(Lio/trino/sql/tree/CreateMaterializedView;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/CreateMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/metadata/MaterializedViewPropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;)V
@369
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/FeaturesConfig;)V
-#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/metadata/MaterializedViewPropertyManager;)V
@378
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/metadata/MaterializedViewPropertyManager;)V
-#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/FeaturesConfig;)V

+###io/trino/execution/SetSessionTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetSession;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/SetSession;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/SetSession;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/SetSession;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/SetSession;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V

+###io/trino/execution/StageStats
@351
+#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
+#getSchedulingComplete()Lorg/joda/time/DateTime;
+#getGetSplitDistribution()Lio/airlift/stats/Distribution$DistributionSnapshot;
+#getTotalTasks()I
+#getRunningTasks()I
+#getCompletedTasks()I
+#getTotalDrivers()I
+#getQueuedDrivers()I
+#getRunningDrivers()I
+#getBlockedDrivers()I
+#getCompletedDrivers()I
+#getCumulativeUserMemory()D
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakUserMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalScheduledTime()Lio/airlift/units/Duration;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalBlockedTime()Lio/airlift/units/Duration;
+#isFullyBlocked()Z
+#getBlockedReasons()Ljava/util/Set;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getPhysicalInputReadTime()Lio/airlift/units/Duration;
+#getInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getInternalNetworkInputPositions()J
+#getRawInputDataSize()Lio/airlift/units/DataSize;
+#getRawInputPositions()J
+#getProcessedInputDataSize()Lio/airlift/units/DataSize;
+#getProcessedInputPositions()J
+#getBufferedDataSize()Lio/airlift/units/DataSize;
+#getOutputDataSize()Lio/airlift/units/DataSize;
+#getOutputPositions()J
+#getPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
+#getGcInfo()Lio/trino/spi/eventlistener/StageGcStatistics;
+#getOperatorSummaries()Ljava/util/List;
+#toBasicStageStats(Lio/trino/execution/StageState;)Lio/trino/execution/BasicStageStats;
@360
+#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
+#getCumulativeSystemMemory()D
-#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
@366
+#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
+#getFailedTasks()I
-#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
@369
+#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
-#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
-#getCumulativeSystemMemory()D
@373
+#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
+#getFailedCumulativeUserMemory()D
+#getFailedScheduledTime()Lio/airlift/units/Duration;
+#getFailedCpuTime()Lio/airlift/units/Duration;
+#getFailedPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getFailedPhysicalInputPositions()J
+#getFailedPhysicalInputReadTime()Lio/airlift/units/Duration;
+#getFailedInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getFailedInternalNetworkInputPositions()J
+#getFailedRawInputDataSize()Lio/airlift/units/DataSize;
+#getFailedRawInputPositions()J
+#getFailedProcessedInputDataSize()Lio/airlift/units/DataSize;
+#getFailedProcessedInputPositions()J
+#getFailedOutputDataSize()Lio/airlift/units/DataSize;
+#getFailedOutputPositions()J
+#getFailedPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
-#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
@376
+#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
+#getInputBlockedTime()Lio/airlift/units/Duration;
+#getFailedInputBlockedTime()Lio/airlift/units/Duration;
+#getOutputBlockedTime()Lio/airlift/units/Duration;
+#getFailedOutputBlockedTime()Lio/airlift/units/Duration;
-#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
@395
+#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
+#getOutputBufferUtilization()Ljava/util/Optional;
-#<init>(Lorg/joda/time/DateTime;Lio/airlift/stats/Distribution$DistributionSnapshot;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/spi/eventlistener/StageGcStatistics;Ljava/util/List;)V
@401
+#createInitial()Lio/trino/execution/StageStats;

+###io/trino/execution/QueryTracker
@351
+#<init>(Lio/trino/execution/QueryManagerConfig;Ljava/util/concurrent/ScheduledExecutorService;)V
+#start()V
+#stop()V
+#getAllQueries()Ljava/util/Collection;
+#getQuery(Lio/trino/spi/QueryId;)Lio/trino/execution/QueryTracker$TrackedQuery;
+#tryGetQuery(Lio/trino/spi/QueryId;)Ljava/util/Optional;
+#addQuery(Lio/trino/execution/QueryTracker$TrackedQuery;)Z
+#expireQuery(Lio/trino/spi/QueryId;)V

+###io/trino/execution/QueryTracker$TrackedQuery
@351
+#getQueryId()Lio/trino/spi/QueryId;
+#isDone()Z
+#getSession()Lio/trino/Session;
+#getCreateTime()Lorg/joda/time/DateTime;
+#getExecutionStartTime()Ljava/util/Optional;
+#getLastHeartbeat()Lorg/joda/time/DateTime;
+#getEndTime()Ljava/util/Optional;
+#fail(Ljava/lang/Throwable;)V
+#pruneInfo()V
@356
+#getPlanningTime()Ljava/util/Optional;

+###io/trino/execution/SqlStageExecution
@351
+#createSqlStageExecution(Lio/trino/execution/StageId;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lio/trino/execution/RemoteTaskFactory;Lio/trino/Session;ZLio/trino/execution/NodeTaskMap;Ljava/util/concurrent/ExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/server/DynamicFilterService;Lio/trino/execution/scheduler/SplitSchedulerStats;)Lio/trino/execution/SqlStageExecution;
+#getStageId()Lio/trino/execution/StageId;
+#getState()Lio/trino/execution/StageState;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addFinalStageInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addCompletedDriverGroupsChangedListener(Ljava/util/function/Consumer;)V
+#getFragment()Lio/trino/sql/planner/PlanFragment;
+#getOutputBuffers()Lio/trino/execution/buffer/OutputBuffers;
+#beginScheduling()V
+#transitionToSchedulingSplits()V
+#schedulingComplete()V
+#schedulingComplete(Lio/trino/sql/planner/plan/PlanNodeId;)V
+#cancel()V
+#abort()V
+#getUserMemoryReservation()J
+#getTotalMemoryReservation()J
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getBasicStageStats()Lio/trino/execution/BasicStageStats;
+#getStageInfo()Lio/trino/execution/StageInfo;
+#addExchangeLocations(Lio/trino/sql/planner/plan/PlanFragmentId;Ljava/util/Set;Z)V
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#hasTasks()Z
+#getAllTasks()Ljava/util/List;
+#scheduleTask(Lio/trino/metadata/InternalNode;ILjava/util/OptionalInt;)Ljava/util/Optional;
+#scheduleSplits(Lio/trino/metadata/InternalNode;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;)Ljava/util/Set;
+#getScheduledNodes()Ljava/util/Set;
+#recordGetSplitTime(J)V
+#getTaskStatuses()Ljava/util/List;
+#isAnyTaskBlocked()Z
+#toString()Ljava/lang/String;
@362
+#scheduleTask(Lio/trino/metadata/InternalNode;I)Ljava/util/Optional;
-#scheduleTask(Lio/trino/metadata/InternalNode;ILjava/util/OptionalInt;)Ljava/util/Optional;
@365
+#createSqlStageExecution(Lio/trino/execution/StageId;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lio/trino/execution/RemoteTaskFactory;Lio/trino/Session;ZLio/trino/execution/NodeTaskMap;Ljava/util/concurrent/Executor;Lio/trino/failuredetector/FailureDetector;Lio/trino/server/DynamicFilterService;Lio/trino/execution/scheduler/SplitSchedulerStats;)Lio/trino/execution/SqlStageExecution;
-#createSqlStageExecution(Lio/trino/execution/StageId;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lio/trino/execution/RemoteTaskFactory;Lio/trino/Session;ZLio/trino/execution/NodeTaskMap;Ljava/util/concurrent/ExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/server/DynamicFilterService;Lio/trino/execution/scheduler/SplitSchedulerStats;)Lio/trino/execution/SqlStageExecution;
@366
-###io/trino/execution/SqlStageExecution

+###io/trino/execution/StageInfo
@351
+#<init>(Lio/trino/execution/StageId;Lio/trino/execution/StageState;Lio/trino/sql/planner/PlanFragment;Ljava/util/List;Lio/trino/execution/StageStats;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/ExecutionFailureInfo;)V
+#getStageId()Lio/trino/execution/StageId;
+#getState()Lio/trino/execution/StageState;
+#getPlan()Lio/trino/sql/planner/PlanFragment;
+#getTypes()Ljava/util/List;
+#getStageStats()Lio/trino/execution/StageStats;
+#getTasks()Ljava/util/List;
+#getSubStages()Ljava/util/List;
+#getTables()Ljava/util/Map;
+#getFailureCause()Lio/trino/execution/ExecutionFailureInfo;
+#isFinalStageInfo()Z
+#toString()Ljava/lang/String;
+#getAllStages(Ljava/util/Optional;)Ljava/util/List;
+#isCompleteInfo()Z
@366
+#<init>(Lio/trino/execution/StageId;Lio/trino/execution/StageState;Lio/trino/sql/planner/PlanFragment;ZLjava/util/List;Lio/trino/execution/StageStats;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/ExecutionFailureInfo;)V
+#isCoordinatorOnly()Z
-#<init>(Lio/trino/execution/StageId;Lio/trino/execution/StageState;Lio/trino/sql/planner/PlanFragment;Ljava/util/List;Lio/trino/execution/StageStats;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/ExecutionFailureInfo;)V
@379
-#isCompleteInfo()Z
@401
+#withSubStages(Ljava/util/List;)Lio/trino/execution/StageInfo;
+#createInitial(Lio/trino/spi/QueryId;Lio/trino/execution/StageState;Lio/trino/sql/planner/PlanFragment;)Lio/trino/execution/StageInfo;

+###io/trino/execution/ForQueryExecution
@351

+###io/trino/execution/QueryInfo
@351
+#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;Lio/trino/spi/memory/MemoryPoolId;ZLjava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getSession()Lio/trino/SessionRepresentation;
+#getState()Lio/trino/execution/QueryState;
+#getMemoryPool()Lio/trino/spi/memory/MemoryPoolId;
+#isScheduled()Z
+#getSelf()Ljava/net/URI;
+#getFieldNames()Ljava/util/List;
+#getQuery()Ljava/lang/String;
+#getPreparedQuery()Ljava/util/Optional;
+#getQueryStats()Lio/trino/execution/QueryStats;
+#getSetCatalog()Ljava/util/Optional;
+#getSetSchema()Ljava/util/Optional;
+#getSetPath()Ljava/util/Optional;
+#getSetSessionProperties()Ljava/util/Map;
+#getResetSessionProperties()Ljava/util/Set;
+#getSetRoles()Ljava/util/Map;
+#getAddedPreparedStatements()Ljava/util/Map;
+#getDeallocatedPreparedStatements()Ljava/util/Set;
+#getStartedTransactionId()Ljava/util/Optional;
+#isClearTransactionId()Z
+#getUpdateType()Ljava/lang/String;
+#getOutputStage()Ljava/util/Optional;
+#getFailureInfo()Lio/trino/execution/ExecutionFailureInfo;
+#getErrorType()Lio/trino/spi/ErrorType;
+#getErrorCode()Lio/trino/spi/ErrorCode;
+#getWarnings()Ljava/util/List;
+#isFinalQueryInfo()Z
+#getInputs()Ljava/util/Set;
+#getOutput()Ljava/util/Optional;
+#getReferencedTables()Ljava/util/List;
+#getRoutines()Ljava/util/List;
+#getResourceGroupId()Ljava/util/Optional;
+#getQueryType()Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#isCompleteInfo()Z
@372
+#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;ZLjava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;)V
-#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;Lio/trino/spi/memory/MemoryPoolId;ZLjava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;)V
-#getMemoryPool()Lio/trino/spi/memory/MemoryPoolId;
@379
+#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;Ljava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;Lio/trino/operator/RetryPolicy;)V
+#getRetryPolicy()Lio/trino/operator/RetryPolicy;
-#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;ZLjava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;)V
-#isCompleteInfo()Z
@403
+#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;Ljava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;Lio/trino/operator/RetryPolicy;Z)V
+#isPruned()Z
-#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;Ljava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;Lio/trino/operator/RetryPolicy;)V
@405
+#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;Ljava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;Lio/trino/operator/RetryPolicy;ZLio/trino/client/NodeVersion;)V
+#getVersion()Lio/trino/client/NodeVersion;
-#<init>(Lio/trino/spi/QueryId;Lio/trino/SessionRepresentation;Lio/trino/execution/QueryState;Ljava/net/URI;Ljava/util/List;Ljava/lang/String;Ljava/util/Optional;Lio/trino/execution/QueryStats;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Optional;ZLjava/lang/String;Ljava/util/Optional;Lio/trino/execution/ExecutionFailureInfo;Lio/trino/spi/ErrorCode;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;Lio/trino/operator/RetryPolicy;Z)V

+###io/trino/execution/QueryExecutionMBean
@351
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;

+###io/trino/execution/QueryIdGenerator
@351
+#<init>()V
+#getCoordinatorId()Ljava/lang/String;
+#createNextQueryId()Lio/trino/spi/QueryId;

+###io/trino/execution/ExplainAnalyzeContext
@351
+#<init>(Lio/trino/execution/QueryPerformanceFetcher;)V
+#getQueryPerformanceFetcher()Lio/trino/execution/QueryPerformanceFetcher;

+###io/trino/execution/StateMachine$StateChangeListener
@351
+#stateChanged(Ljava/lang/Object;)V

+###io/trino/execution/CommentTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Comment;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Comment;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Comment;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/Comment;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/Comment;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/SqlQueryExecution
@351
+#getSlug()Lio/trino/server/protocol/Slug;
+#getMemoryPool()Lio/trino/memory/VersionedMemoryPoolId;
+#setMemoryPool(Lio/trino/memory/VersionedMemoryPoolId;)V
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getCreateTime()Lorg/joda/time/DateTime;
+#getExecutionStartTime()Ljava/util/Optional;
+#getLastHeartbeat()Lorg/joda/time/DateTime;
+#getEndTime()Ljava/util/Optional;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getBasicQueryInfo()Lio/trino/server/BasicQueryInfo;
+#start()V
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getSession()Lio/trino/Session;
+#addFinalQueryInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#cancelQuery()V
+#cancelStage(Lio/trino/execution/StageId;)V
+#fail(Ljava/lang/Throwable;)V
+#isDone()Z
+#addOutputInfoListener(Ljava/util/function/Consumer;)V
+#getStateChange(Lio/trino/execution/QueryState;)Lcom/google/common/util/concurrent/ListenableFuture;
+#recordHeartbeat()V
+#pruneInfo()V
+#getQueryId()Lio/trino/spi/QueryId;
+#getQueryInfo()Lio/trino/execution/QueryInfo;
+#getState()Lio/trino/execution/QueryState;
+#getQueryPlan()Lio/trino/sql/planner/Plan;
+#shouldWaitForMinWorkers()Z
@356
+#getPlanningTime()Ljava/util/Optional;
@366
+#outputTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@372
-#getMemoryPool()Lio/trino/memory/VersionedMemoryPoolId;
-#setMemoryPool(Lio/trino/memory/VersionedMemoryPoolId;)V
@373
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Exception;)V
@391
+#resultsConsumed()V
@396
+#setOutputInfoListener(Ljava/util/function/Consumer;)V
-#addOutputInfoListener(Ljava/util/function/Consumer;)V

+###io/trino/execution/DropViewTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/DropView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/DropView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/DropView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/DropView;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/DropView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/StateMachine
@351
+#<init>(Ljava/lang/String;Ljava/util/concurrent/Executor;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/util/concurrent/Executor;Ljava/lang/Object;Ljava/lang/Iterable;)V
+#get()Ljava/lang/Object;
+#set(Ljava/lang/Object;)Ljava/lang/Object;
+#trySet(Ljava/lang/Object;)Ljava/lang/Object;
+#setIf(Ljava/lang/Object;Ljava/util/function/Predicate;)Z
+#compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Z
+#getStateChange(Ljava/lang/Object;)Lcom/google/common/util/concurrent/ListenableFuture;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#toString()Ljava/lang/String;

+###io/trino/execution/StageStateMachine
@351
+#<init>(Lio/trino/execution/StageId;Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Ljava/util/concurrent/ExecutorService;Lio/trino/execution/scheduler/SplitSchedulerStats;)V
+#getStageId()Lio/trino/execution/StageId;
+#getSession()Lio/trino/Session;
+#getState()Lio/trino/execution/StageState;
+#getFragment()Lio/trino/sql/planner/PlanFragment;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#transitionToScheduling()Z
+#transitionToSchedulingSplits()Z
+#transitionToScheduled()Z
+#transitionToRunning()Z
+#transitionToFlushing()Z
+#transitionToFinished()Z
+#transitionToCanceled()Z
+#transitionToAborted()Z
+#transitionToFailed(Ljava/lang/Throwable;)Z
+#addFinalStageInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#setAllTasksFinal(Ljava/lang/Iterable;)V
+#getUserMemoryReservation()J
+#getTotalMemoryReservation()J
+#updateMemoryUsage(JJJ)V
+#getBasicStageStats(Ljava/util/function/Supplier;)Lio/trino/execution/BasicStageStats;
+#getStageInfo(Ljava/util/function/Supplier;)Lio/trino/execution/StageInfo;
+#recordGetSplitTime(J)V
+#toString()Ljava/lang/String;
@365
+#<init>(Lio/trino/execution/StageId;Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Ljava/util/concurrent/Executor;Lio/trino/execution/scheduler/SplitSchedulerStats;)V
-#<init>(Lio/trino/execution/StageId;Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Ljava/util/concurrent/ExecutorService;Lio/trino/execution/scheduler/SplitSchedulerStats;)V
@366
+#<init>(Lio/trino/execution/StageId;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Ljava/util/concurrent/Executor;Lio/trino/execution/scheduler/SplitSchedulerStats;)V
+#transitionToPending()Z
-#<init>(Lio/trino/execution/StageId;Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Ljava/util/concurrent/Executor;Lio/trino/execution/scheduler/SplitSchedulerStats;)V
-#getSession()Lio/trino/Session;
-#transitionToSchedulingSplits()Z
-#transitionToScheduled()Z
-#transitionToFlushing()Z
-#transitionToCanceled()Z

+###io/trino/execution/LocationFactory
@351
+#createQueryLocation(Lio/trino/spi/QueryId;)Ljava/net/URI;
+#createLocalTaskLocation(Lio/trino/execution/TaskId;)Ljava/net/URI;
+#createTaskLocation(Lio/trino/metadata/InternalNode;Lio/trino/execution/TaskId;)Ljava/net/URI;
+#createMemoryInfoLocation(Lio/trino/metadata/InternalNode;)Ljava/net/URI;

+###io/trino/execution/TaskState
@351
+#values()[Lio/trino/execution/TaskState;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/TaskState;
+#isDone()Z

+###io/trino/execution/BasicStageStats
@351
+#<init>(ZIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
+#isScheduled()Z
+#getTotalDrivers()I
+#getQueuedDrivers()I
+#getRunningDrivers()I
+#getCompletedDrivers()I
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getInternalNetworkInputPositions()J
+#getRawInputDataSize()Lio/airlift/units/DataSize;
+#getRawInputPositions()J
+#getPhysicalInputReadTime()Lio/airlift/units/Duration;
+#getCumulativeUserMemory()J
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalScheduledTime()Lio/airlift/units/Duration;
+#isFullyBlocked()Z
+#getBlockedReasons()Ljava/util/Set;
+#getProgressPercentage()Ljava/util/OptionalDouble;
+#aggregateBasicStageStats(Ljava/lang/Iterable;)Lio/trino/execution/BasicStageStats;
@360
+#<init>(ZIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
+#getCumulativeSystemMemory()J
-#<init>(ZIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
@369
+#<init>(ZIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
-#<init>(ZIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
-#getCumulativeSystemMemory()J
@373
+#<init>(ZIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
+#getFailedCumulativeUserMemory()J
+#getFailedCpuTime()Lio/airlift/units/Duration;
+#getFailedScheduledTime()Lio/airlift/units/Duration;
-#<init>(ZIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
@379
+#<init>(ZIIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V
+#getFailedTasks()I
-#<init>(ZIIIILio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JJJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Ljava/util/OptionalDouble;)V

+###io/trino/execution/ManagedQueryExecution
@351
+#startWaitingForResources()V
+#fail(Ljava/lang/Throwable;)V
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getSession()Lio/trino/Session;
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getBasicQueryInfo()Lio/trino/server/BasicQueryInfo;
+#getFullQueryInfo()Lio/trino/execution/QueryInfo;
+#getState()Lio/trino/execution/QueryState;
+#isDone()Z
+#getErrorCode()Ljava/util/Optional;

+###io/trino/execution/QueryPreparer
@351
+#<init>(Lio/trino/sql/parser/SqlParser;)V
+#prepareQuery(Lio/trino/Session;Ljava/lang/String;)Lio/trino/execution/QueryPreparer$PreparedQuery;
+#prepareQuery(Lio/trino/Session;Lio/trino/sql/tree/Statement;)Lio/trino/execution/QueryPreparer$PreparedQuery;

+###io/trino/execution/QueryManagerStats
@351
+#<init>()V
+#trackQueryStats(Lio/trino/dispatcher/DispatchQuery;)V
+#trackQueryStats(Lio/trino/execution/QueryExecution;)V
+#getStartedQueries()Lio/airlift/stats/CounterStat;
+#getSubmittedQueries()Lio/airlift/stats/CounterStat;
+#getCompletedQueries()Lio/airlift/stats/CounterStat;
+#getFailedQueries()Lio/airlift/stats/CounterStat;
+#getConsumedInputRows()Lio/airlift/stats/CounterStat;
+#getConsumedInputBytes()Lio/airlift/stats/CounterStat;
+#getConsumedCpuTimeSecs()Lio/airlift/stats/CounterStat;
+#getExecutionTime()Lio/airlift/stats/TimeStat;
+#getQueuedTime()Lio/airlift/stats/TimeStat;
+#getUserErrorFailures()Lio/airlift/stats/CounterStat;
+#getInternalFailures()Lio/airlift/stats/CounterStat;
+#getAbandonedQueries()Lio/airlift/stats/CounterStat;
+#getCanceledQueries()Lio/airlift/stats/CounterStat;
+#getExternalFailures()Lio/airlift/stats/CounterStat;
+#getInsufficientResourcesFailures()Lio/airlift/stats/CounterStat;
+#getWallInputBytesRate()Lio/airlift/stats/DistributionStat;
+#getCpuInputByteRate()Lio/airlift/stats/DistributionStat;

+###io/trino/execution/DropSchemaTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#explain(Lio/trino/sql/tree/DropSchema;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/DropSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/DropSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/DropSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/DropSchema;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#explain(Lio/trino/sql/tree/DropSchema;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/DropSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/TaskId
@351
+#valueOf(Ljava/lang/String;)Lio/trino/execution/TaskId;
+#<init>(Ljava/lang/String;II)V
+#<init>(Lio/trino/execution/StageId;I)V
+#<init>(Ljava/lang/String;)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getStageId()Lio/trino/execution/StageId;
+#getId()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@366
+#<init>(Lio/trino/execution/StageId;II)V
+#getPartitionId()I
+#getAttemptId()I
-#<init>(Ljava/lang/String;II)V
-#<init>(Lio/trino/execution/StageId;I)V
-#<init>(Ljava/lang/String;)V
-#getId()I
@368
+#getRetainedSizeInBytes()J

+###io/trino/execution/CreateTableTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#explain(Lio/trino/sql/tree/CreateTable;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/CreateTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/CreateTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/CreateTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@364
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
-#<init>()V
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/FeaturesConfig;)V
+#execute(Lio/trino/sql/tree/CreateTable;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
-#explain(Lio/trino/sql/tree/CreateTable;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/CreateTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/FeaturesConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/FeaturesConfig;)V
@371
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;)V
-#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/FeaturesConfig;)V

+###io/trino/execution/DropColumnTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/DropColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/DropColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/DropColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/DropColumn;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/DropColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/CreateRoleTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/CreateRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/CreateRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/CreateRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@362
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
-#<init>()V
@363
+#<init>()V
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/CreateRole;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/CreateRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/RenameTableTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/RenameTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/RenameTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/RenameTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/RenameTable;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/RenameTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/NodeTaskMap$PartitionedSplitCountTracker
@351
+#<init>(Ljava/util/function/IntConsumer;)V
+#setPartitionedSplitCount(I)V
+#toString()Ljava/lang/String;
@364
+#<init>(Ljava/util/function/Consumer;)V
+#setPartitionedSplits(Lio/trino/execution/PartitionedSplitsInfo;)V
-#<init>(Ljava/util/function/IntConsumer;)V
-#setPartitionedSplitCount(I)V

+###io/trino/execution/GrantTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Grant;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Grant;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Grant;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/Grant;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/Grant;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/StageId
@351
+#valueOf(Ljava/lang/String;)Lio/trino/execution/StageId;
+#valueOf(Ljava/util/List;)Lio/trino/execution/StageId;
+#<init>(Ljava/lang/String;I)V
+#<init>(Lio/trino/spi/QueryId;I)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getId()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@401
+#create(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanFragmentId;)Lio/trino/execution/StageId;

+###io/trino/execution/SetPathTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetPath;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/SetPath;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/SetPath;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;)V
+#execute(Lio/trino/sql/tree/SetPath;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/SetPath;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/ExecutionFailureInfo
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Lio/trino/execution/ExecutionFailureInfo;Ljava/util/List;Ljava/util/List;Lio/trino/client/ErrorLocation;Lio/trino/spi/ErrorCode;Lio/trino/spi/HostAddress;)V
+#getType()Ljava/lang/String;
+#getMessage()Ljava/lang/String;
+#getCause()Lio/trino/execution/ExecutionFailureInfo;
+#getSuppressed()Ljava/util/List;
+#getStack()Ljava/util/List;
+#getErrorLocation()Lio/trino/client/ErrorLocation;
+#getErrorCode()Lio/trino/spi/ErrorCode;
+#getRemoteHost()Lio/trino/spi/HostAddress;
+#toFailureInfo()Lio/trino/client/FailureInfo;
+#toException()Ljava/lang/RuntimeException;
+#toStackTraceElement(Ljava/lang/String;)Ljava/lang/StackTraceElement;

+###io/trino/execution/CreateSchemaTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#explain(Lio/trino/sql/tree/CreateSchema;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/CreateSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/CreateSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/CreateSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/CreateSchema;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#explain(Lio/trino/sql/tree/CreateSchema;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/CreateSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/SchemaPropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V

+###io/trino/execution/QueryExecution$QueryExecutionFactory
@351
+#createQueryExecution(Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/execution/QueryStateMachine;Lio/trino/server/protocol/Slug;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/execution/QueryExecution;

+###io/trino/execution/DropRoleTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/DropRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/DropRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/DropRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@362
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
-#<init>()V
@363
+#<init>()V
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/DropRole;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/DropRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/DynamicFiltersCollector
@351
+#<init>(Ljava/lang/Runnable;)V
+#updateDomains(Ljava/util/Map;)V
+#getDynamicFiltersVersion()J
+#acknowledgeAndGetNewDomains(J)Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;
@360
+#acknowledge(J)V
@392
+#getCurrentDynamicFilterDomains()Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;

+###io/trino/execution/CreateViewTask
@351
+#<init>(Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/cost/StatsCalculator;)V
+#getName()Ljava/lang/String;
+#explain(Lio/trino/sql/tree/CreateView;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/CreateView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/CreateView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/CreateView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;)V
+#execute(Lio/trino/sql/tree/CreateView;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>(Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/cost/StatsCalculator;)V
-#explain(Lio/trino/sql/tree/CreateView;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/CreateView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/RenameViewTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/RenameView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/RenameView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/RenameView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/RenameView;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/RenameView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/QueryStateMachine$QueryOutputManager
@351
+#<init>(Ljava/util/concurrent/Executor;)V
+#addOutputInfoListener(Ljava/util/function/Consumer;)V
+#setColumns(Ljava/util/List;Ljava/util/List;)V
+#updateOutputLocations(Ljava/util/Set;Z)V
@366
+#updateOutputLocations(Ljava/util/Map;Z)V
+#addOutputTaskFailureListener(Lio/trino/execution/TaskFailureListener;)V
+#outputTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
-#updateOutputLocations(Ljava/util/Set;Z)V
@394
+#updateInputsForQueryResults(Ljava/util/List;Z)V
-#updateOutputLocations(Ljava/util/Map;Z)V
@396
+#setOutputInfoListener(Ljava/util/function/Consumer;)V
+#setQueryCompleted()V
-#addOutputInfoListener(Ljava/util/function/Consumer;)V

+###io/trino/execution/scheduler/FixedSourcePartitionedScheduler
@351
+#<init>(Lio/trino/execution/SqlStageExecution;Ljava/util/Map;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILjava/util/OptionalInt;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/server/DynamicFilterService;)V
+#schedule()Lio/trino/execution/scheduler/ScheduleResult;
+#close()V
@364
+#<init>(Lio/trino/execution/SqlStageExecution;Ljava/util/Map;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILjava/util/OptionalInt;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)V
-#<init>(Lio/trino/execution/SqlStageExecution;Ljava/util/Map;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILjava/util/OptionalInt;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/server/DynamicFilterService;)V
@366
+#<init>(Lio/trino/execution/scheduler/PipelinedStageExecution;Ljava/util/Map;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILjava/util/OptionalInt;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)V
-#<init>(Lio/trino/execution/SqlStageExecution;Ljava/util/Map;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILjava/util/OptionalInt;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)V
@368
+#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/Map;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILjava/util/OptionalInt;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)V
-#<init>(Lio/trino/execution/scheduler/PipelinedStageExecution;Ljava/util/Map;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILjava/util/OptionalInt;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)V
@388
+#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILio/trino/execution/scheduler/NodeSelector;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)V
-#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/Map;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;ILjava/util/OptionalInt;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)V

+###io/trino/execution/scheduler/SplitSchedulerStats
@351
+#<init>()V
+#getSleepTime()Lio/airlift/stats/TimeStat;
+#getGetSplitTime()Lio/airlift/stats/TimeStat;
+#getSplitsScheduledPerIteration()Lio/airlift/stats/DistributionStat;
+#getWaitingForSource()Lio/airlift/stats/CounterStat;
+#getSplitQueuesFull()Lio/airlift/stats/CounterStat;

+###io/trino/execution/scheduler/UniformNodeSelectorFactory
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;Lio/trino/execution/NodeTaskMap;)V
+#createNodeSelector(Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
@354
+#createNodeSelector(Lio/trino/Session;Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
-#createNodeSelector(Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;

+###io/trino/execution/scheduler/ScaledOutputBufferManager
@351
+#<init>(Ljava/util/function/Consumer;)V
+#addOutputBuffers(Ljava/util/List;Z)V
@366
+#<init>()V
+#addOutputBuffer(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#noMoreBuffers()V
+#getOutputBuffers()Lio/trino/execution/buffer/OutputBuffers;
-#<init>(Ljava/util/function/Consumer;)V
-#addOutputBuffers(Ljava/util/List;Z)V
@398
-###io/trino/execution/scheduler/ScaledOutputBufferManager

+###io/trino/execution/scheduler/NodeMap
@351
+#<init>(Lcom/google/common/collect/SetMultimap;Lcom/google/common/collect/SetMultimap;Lcom/google/common/collect/SetMultimap;Ljava/util/Set;)V
+#getNodesByHostAndPort()Lcom/google/common/collect/SetMultimap;
+#getNodesByHost()Lcom/google/common/collect/SetMultimap;
+#getWorkersByNetworkPath()Lcom/google/common/collect/SetMultimap;
+#getCoordinatorNodeIds()Ljava/util/Set;

+###io/trino/execution/scheduler/PhasedExecutionSchedule
@351
+#<init>(Ljava/util/Collection;)V
+#getStagesToSchedule()Ljava/util/Set;
+#isFinished()Z
@368
-###io/trino/execution/scheduler/PhasedExecutionSchedule

+###io/trino/execution/scheduler/BucketNodeMap
@351
+#<init>(Ljava/util/function/ToIntFunction;)V
+#getBucketCount()I
+#getAssignedNode(I)Ljava/util/Optional;
+#assignBucketToNode(ILio/trino/metadata/InternalNode;)V
+#isDynamic()Z
+#getAssignedNode(Lio/trino/metadata/Split;)Ljava/util/Optional;
@369
+#getNodeCount()I
+#getBucket(Lio/trino/metadata/Split;)I
@391
+#getAssignedNode(I)Lio/trino/metadata/InternalNode;
+#getAssignedNode(Lio/trino/metadata/Split;)Lio/trino/metadata/InternalNode;
-#<init>(Ljava/util/function/ToIntFunction;)V
-#getNodeCount()I
-#getAssignedNode(I)Ljava/util/Optional;
-#assignBucketToNode(ILio/trino/metadata/InternalNode;)V
-#getAssignedNode(Lio/trino/metadata/Split;)Ljava/util/Optional;
@393
+#<init>(Ljava/util/function/ToIntFunction;Ljava/util/List;)V
-#isDynamic()Z
@397
+#getSplitToBucketFunction()Ljava/util/function/ToIntFunction;

+###io/trino/execution/scheduler/PhasedExecutionPolicy
@351
+#<init>()V
+#createExecutionSchedule(Ljava/util/Collection;)Lio/trino/execution/scheduler/ExecutionSchedule;
@368
-###io/trino/execution/scheduler/PhasedExecutionPolicy

+###io/trino/execution/scheduler/ScheduleResult$BlockedReason
@351
+#values()[Lio/trino/execution/scheduler/ScheduleResult$BlockedReason;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/ScheduleResult$BlockedReason;
+#combineWith(Lio/trino/execution/scheduler/ScheduleResult$BlockedReason;)Lio/trino/execution/scheduler/ScheduleResult$BlockedReason;
@393
-#combineWith(Lio/trino/execution/scheduler/ScheduleResult$BlockedReason;)Lio/trino/execution/scheduler/ScheduleResult$BlockedReason;

+###io/trino/execution/scheduler/TopologyAwareNodeSelectorModule
@351
+#<init>()V

+###io/trino/execution/scheduler/FileBasedNetworkTopology
@351
+#<init>(Lio/trino/execution/scheduler/TopologyFileConfig;)V
+#refreshTopology()V
+#locate(Lio/trino/spi/HostAddress;)Lio/trino/execution/scheduler/NetworkLocation;

+###io/trino/execution/scheduler/FlatNetworkTopology
@351
+#<init>()V
+#locate(Lio/trino/spi/HostAddress;)Lio/trino/execution/scheduler/NetworkLocation;

+###io/trino/execution/scheduler/group/FixedLifespanScheduler
@351
+#<init>(Lio/trino/execution/scheduler/BucketNodeMap;Ljava/util/List;Ljava/util/OptionalInt;)V
+#scheduleInitial(Lio/trino/execution/scheduler/SourceScheduler;)V
+#onLifespanFinished(Ljava/lang/Iterable;)V
+#schedule(Lio/trino/execution/scheduler/SourceScheduler;)Lcom/google/common/util/concurrent/SettableFuture;
@388
-###io/trino/execution/scheduler/group/FixedLifespanScheduler

+###io/trino/execution/scheduler/group/DynamicLifespanScheduler
@351
+#<init>(Lio/trino/execution/scheduler/BucketNodeMap;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;)V
+#scheduleInitial(Lio/trino/execution/scheduler/SourceScheduler;)V
+#onLifespanFinished(Ljava/lang/Iterable;)V
+#schedule(Lio/trino/execution/scheduler/SourceScheduler;)Lcom/google/common/util/concurrent/SettableFuture;
@388
-###io/trino/execution/scheduler/group/DynamicLifespanScheduler

+###io/trino/execution/scheduler/group/DynamicBucketNodeMap
@351
+#<init>(Ljava/util/function/ToIntFunction;I)V
+#getAssignedNode(I)Ljava/util/Optional;
+#getBucketCount()I
+#assignBucketToNode(ILio/trino/metadata/InternalNode;)V
+#isDynamic()Z
@369
+#getNodeCount()I
@391
+#getAssignedNode(I)Lio/trino/metadata/InternalNode;
-#getAssignedNode(I)Ljava/util/Optional;
-#getNodeCount()I
-#assignBucketToNode(ILio/trino/metadata/InternalNode;)V
@393
-###io/trino/execution/scheduler/group/DynamicBucketNodeMap

+###io/trino/execution/scheduler/group/LifespanScheduler
@351
+#scheduleInitial(Lio/trino/execution/scheduler/SourceScheduler;)V
+#onLifespanFinished(Ljava/lang/Iterable;)V
+#schedule(Lio/trino/execution/scheduler/SourceScheduler;)Lcom/google/common/util/concurrent/SettableFuture;
@388
-###io/trino/execution/scheduler/group/LifespanScheduler

+###io/trino/execution/scheduler/TopologyAwareNodeSelectorFactory
@351
+#<init>(Lio/trino/execution/scheduler/NetworkTopology;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/TopologyAwareNodeSelectorConfig;)V
+#getPlacementCountersByName()Ljava/util/Map;
+#createNodeSelector(Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
@354
+#createNodeSelector(Lio/trino/Session;Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
-#createNodeSelector(Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;

+###io/trino/execution/scheduler/SourcePartitionedScheduler
@351
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#newSourcePartitionedSchedulerAsStageScheduler(Lio/trino/execution/SqlStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;ILio/trino/server/DynamicFilterService;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/StageScheduler;
+#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/SqlStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;IZLio/trino/server/DynamicFilterService;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/SourceScheduler;
+#startLifespan(Lio/trino/execution/Lifespan;Lio/trino/spi/connector/ConnectorPartitionHandle;)V
+#noMoreLifespans()V
+#schedule()Lio/trino/execution/scheduler/ScheduleResult;
+#close()V
+#drainCompletedLifespans()Ljava/util/List;
@364
+#newSourcePartitionedSchedulerAsStageScheduler(Lio/trino/execution/SqlStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;ILio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/StageScheduler;
+#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/SqlStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;IZLio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/SourceScheduler;
-#newSourcePartitionedSchedulerAsStageScheduler(Lio/trino/execution/SqlStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;ILio/trino/server/DynamicFilterService;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/StageScheduler;
-#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/SqlStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;IZLio/trino/server/DynamicFilterService;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/SourceScheduler;
@366
+#newSourcePartitionedSchedulerAsStageScheduler(Lio/trino/execution/scheduler/PipelinedStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;ILio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/StageScheduler;
+#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/scheduler/PipelinedStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;IZLio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;Lio/trino/execution/scheduler/PartitionIdAllocator;Ljava/util/Map;)Lio/trino/execution/scheduler/SourceScheduler;
-#newSourcePartitionedSchedulerAsStageScheduler(Lio/trino/execution/SqlStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;ILio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/StageScheduler;
-#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/SqlStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;IZLio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/SourceScheduler;
@368
+#newSourcePartitionedSchedulerAsStageScheduler(Lio/trino/execution/scheduler/StageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;ILio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/StageScheduler;
+#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/scheduler/StageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;IZLio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;Lio/trino/execution/scheduler/PartitionIdAllocator;Ljava/util/Map;)Lio/trino/execution/scheduler/SourceScheduler;
-#newSourcePartitionedSchedulerAsStageScheduler(Lio/trino/execution/scheduler/PipelinedStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;ILio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;)Lio/trino/execution/scheduler/StageScheduler;
-#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/scheduler/PipelinedStageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;IZLio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;Lio/trino/execution/scheduler/PartitionIdAllocator;Ljava/util/Map;)Lio/trino/execution/scheduler/SourceScheduler;
@370
+#start()V
@388
+#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/scheduler/StageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;ILio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;Lio/trino/execution/scheduler/PartitionIdAllocator;Ljava/util/Map;)Lio/trino/execution/scheduler/SourceScheduler;
-#newSourcePartitionedSchedulerAsSourceScheduler(Lio/trino/execution/scheduler/StageExecution;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/SplitSource;Lio/trino/execution/scheduler/SplitPlacementPolicy;IZLio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Ljava/util/function/BooleanSupplier;Lio/trino/execution/scheduler/PartitionIdAllocator;Ljava/util/Map;)Lio/trino/execution/scheduler/SourceScheduler;
-#startLifespan(Lio/trino/execution/Lifespan;Lio/trino/spi/connector/ConnectorPartitionHandle;)V
-#noMoreLifespans()V
-#drainCompletedLifespans()Ljava/util/List;

+###io/trino/execution/scheduler/NodeSchedulerExporter
@351
+#<init>(Lio/trino/execution/scheduler/TopologyAwareNodeSelectorFactory;Lorg/weakref/jmx/MBeanExporter;)V
+#destroy()V

+###io/trino/execution/scheduler/TopologyAwareNodeSelectorConfig$TopologyType
@351
+#values()[Lio/trino/execution/scheduler/TopologyAwareNodeSelectorConfig$TopologyType;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/TopologyAwareNodeSelectorConfig$TopologyType;

+###io/trino/execution/scheduler/FixedSourcePartitionedScheduler$BucketedSplitPlacementPolicy
@351
+#<init>(Lio/trino/execution/scheduler/NodeSelector;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;Ljava/util/function/Supplier;)V
+#computeAssignments(Ljava/util/Set;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#lockDownNodes()V
+#allNodes()Ljava/util/List;
+#getNodeForBucket(I)Lio/trino/metadata/InternalNode;
@388
-#getNodeForBucket(I)Lio/trino/metadata/InternalNode;

+###io/trino/execution/scheduler/StageScheduler
@351
+#schedule()Lio/trino/execution/scheduler/ScheduleResult;
+#close()V
@370
+#start()V

+###io/trino/execution/scheduler/ResettableRandomizedIterator
@351
+#<init>(Ljava/util/Collection;)V
+#reset()V
+#hasNext()Z
+#next()Ljava/lang/Object;

+###io/trino/execution/scheduler/AllAtOnceExecutionSchedule
@351
+#<init>(Ljava/util/Collection;)V
+#getStagesToSchedule()Ljava/util/Set;
+#isFinished()Z
@368
-###io/trino/execution/scheduler/AllAtOnceExecutionSchedule

+###io/trino/execution/scheduler/FixedBucketNodeMap
@351
+#<init>(Ljava/util/function/ToIntFunction;Ljava/util/List;)V
+#getAssignedNode(I)Ljava/util/Optional;
+#getBucketCount()I
+#assignBucketToNode(ILio/trino/metadata/InternalNode;)V
+#isDynamic()Z
@369
+#getNodeCount()I
@391
+#getAssignedNode(I)Lio/trino/metadata/InternalNode;
-#getAssignedNode(I)Ljava/util/Optional;
-#getNodeCount()I
-#assignBucketToNode(ILio/trino/metadata/InternalNode;)V
@393
-###io/trino/execution/scheduler/FixedBucketNodeMap

+###io/trino/execution/scheduler/SubnetBasedTopology
@351
+#<init>(Lio/trino/execution/scheduler/SubnetTopologyConfig;)V
+#<init>(Ljava/util/List;Lio/trino/execution/scheduler/SubnetBasedTopology$AddressProtocol;)V
+#locate(Lio/trino/spi/HostAddress;)Lio/trino/execution/scheduler/NetworkLocation;

+###io/trino/execution/scheduler/ExecutionPolicy
@351
+#createExecutionSchedule(Ljava/util/Collection;)Lio/trino/execution/scheduler/ExecutionSchedule;
@368
-###io/trino/execution/scheduler/ExecutionPolicy

+###io/trino/execution/scheduler/NodeSchedulerConfig
@351
+#<init>()V
+#getNodeSchedulerPolicy()Lio/trino/execution/scheduler/NodeSchedulerConfig$NodeSchedulerPolicy;
+#setNodeSchedulerPolicy(Ljava/lang/String;)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#getMinCandidates()I
+#setMinCandidates(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#isIncludeCoordinator()Z
+#setIncludeCoordinator(Z)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#setMaxPendingSplitsPerTask(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#getMaxPendingSplitsPerTask()I
+#getMaxSplitsPerNode()I
+#setMaxSplitsPerNode(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#getOptimizedLocalScheduling()Z
+#setOptimizedLocalScheduling(Z)Lio/trino/execution/scheduler/NodeSchedulerConfig;
@354
+#getMaxUnacknowledgedSplitsPerTask()I
+#setMaxUnacknowledgedSplitsPerTask(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
@369
+#getSplitsBalancingPolicy()Lio/trino/execution/scheduler/NodeSchedulerConfig$SplitsBalancingPolicy;
+#setSplitsBalancingPolicy(Lio/trino/execution/scheduler/NodeSchedulerConfig$SplitsBalancingPolicy;)Lio/trino/execution/scheduler/NodeSchedulerConfig;
@374
+#setMaxAbsoluteFullNodesPerQuery(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#getMaxAbsoluteFullNodesPerQuery()I
+#setMaxFractionFullNodesPerQuery(D)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#getMaxFractionFullNodesPerQuery()D
+#getNodeAllocatorType()Lio/trino/execution/scheduler/NodeSchedulerConfig$NodeAllocatorType;
+#setNodeAllocatorType(Ljava/lang/String;)Lio/trino/execution/scheduler/NodeSchedulerConfig;
@380
+#setAllowedNoMatchingNodePeriod(Lio/airlift/units/Duration;)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#getAllowedNoMatchingNodePeriod()Lio/airlift/units/Duration;
-#setMaxAbsoluteFullNodesPerQuery(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
-#getMaxAbsoluteFullNodesPerQuery()I
-#setMaxFractionFullNodesPerQuery(D)Lio/trino/execution/scheduler/NodeSchedulerConfig;
-#getMaxFractionFullNodesPerQuery()D
@405
+#setMinPendingSplitsPerTask(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#getMinPendingSplitsPerTask()I
+#setMaxAdjustedPendingSplitsWeightPerTask(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
+#getMaxAdjustedPendingSplitsWeightPerTask()I
-#setMaxPendingSplitsPerTask(I)Lio/trino/execution/scheduler/NodeSchedulerConfig;
-#getMaxPendingSplitsPerTask()I

+###io/trino/execution/scheduler/TopologyFileConfig
@351
+#<init>()V
+#getNetworkTopologyFile()Ljava/io/File;
+#setNetworkTopologyFile(Ljava/io/File;)Lio/trino/execution/scheduler/TopologyFileConfig;
+#getRefreshPeriod()Lio/airlift/units/Duration;
+#setRefreshPeriod(Lio/airlift/units/Duration;)Lio/trino/execution/scheduler/TopologyFileConfig;

+###io/trino/execution/scheduler/NodeSelectorFactory
@351
+#createNodeSelector(Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
@354
+#createNodeSelector(Lio/trino/Session;Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
-#createNodeSelector(Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;

+###io/trino/execution/scheduler/NetworkTopology
@351
+#locate(Lio/trino/spi/HostAddress;)Lio/trino/execution/scheduler/NetworkLocation;

+###io/trino/execution/scheduler/TopologyAwareNodeSelectorConfig
@351
+#<init>()V
+#getType()Lio/trino/execution/scheduler/TopologyAwareNodeSelectorConfig$TopologyType;
+#setType(Lio/trino/execution/scheduler/TopologyAwareNodeSelectorConfig$TopologyType;)Lio/trino/execution/scheduler/TopologyAwareNodeSelectorConfig;
+#getLocationSegmentNames()Ljava/util/List;
+#setLocationSegmentNames(Ljava/util/List;)Lio/trino/execution/scheduler/TopologyAwareNodeSelectorConfig;
+#setLocationSegmentNames(Ljava/lang/String;)Lio/trino/execution/scheduler/TopologyAwareNodeSelectorConfig;

+###io/trino/execution/scheduler/SubnetTopologyConfig
@351
+#<init>()V
+#getCidrPrefixLengths()Ljava/util/List;
+#setCidrPrefixLengths(Ljava/lang/String;)Lio/trino/execution/scheduler/SubnetTopologyConfig;
+#getAddressProtocol()Lio/trino/execution/scheduler/SubnetBasedTopology$AddressProtocol;
+#setAddressProtocol(Lio/trino/execution/scheduler/SubnetBasedTopology$AddressProtocol;)Lio/trino/execution/scheduler/SubnetTopologyConfig;

+###io/trino/execution/scheduler/UniformNodeSelector
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IIIZ)V
+#lockDownNodes()V
+#allNodes()Ljava/util/List;
+#selectCurrentNode()Lio/trino/metadata/InternalNode;
+#selectRandomNodes(ILjava/util/Set;)Ljava/util/List;
+#computeAssignments(Ljava/util/Set;Ljava/util/List;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#computeAssignments(Ljava/util/Set;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#redistributeSplit(Lcom/google/common/collect/Multimap;Lio/trino/metadata/InternalNode;Lio/trino/metadata/InternalNode;Lcom/google/common/collect/SetMultimap;)V
@354
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IIIIZ)V
-#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IIIZ)V
@364
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IJJIZ)V
+#redistributeSplit(Lcom/google/common/collect/Multimap;Lio/trino/metadata/InternalNode;Lio/trino/metadata/InternalNode;Lcom/google/common/collect/SetMultimap;)Lio/trino/metadata/Split;
-#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IIIIZ)V
-#redistributeSplit(Lcom/google/common/collect/Multimap;Lio/trino/metadata/InternalNode;Lio/trino/metadata/InternalNode;Lcom/google/common/collect/SetMultimap;)V
@369
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IJJILio/trino/execution/scheduler/NodeSchedulerConfig$SplitsBalancingPolicy;Z)V
-#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IJJIZ)V
@405
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IJJJILio/trino/execution/scheduler/NodeSchedulerConfig$SplitsBalancingPolicy;Z)V
-#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IJJILio/trino/execution/scheduler/NodeSchedulerConfig$SplitsBalancingPolicy;Z)V

+###io/trino/execution/scheduler/ScheduleResult
@351
+#<init>(ZLjava/lang/Iterable;I)V
+#<init>(ZLjava/lang/Iterable;Lcom/google/common/util/concurrent/ListenableFuture;Lio/trino/execution/scheduler/ScheduleResult$BlockedReason;I)V
+#isFinished()Z
+#getNewTasks()Ljava/util/Set;
+#getBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#getSplitsScheduled()I
+#getBlockedReason()Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###io/trino/execution/scheduler/NodeSchedulerConfig$NodeSchedulerPolicy
@351
+#values()[Lio/trino/execution/scheduler/NodeSchedulerConfig$NodeSchedulerPolicy;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/NodeSchedulerConfig$NodeSchedulerPolicy;

+###io/trino/execution/scheduler/SourceScheduler
@351
+#schedule()Lio/trino/execution/scheduler/ScheduleResult;
+#close()V
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#startLifespan(Lio/trino/execution/Lifespan;Lio/trino/spi/connector/ConnectorPartitionHandle;)V
+#noMoreLifespans()V
+#drainCompletedLifespans()Ljava/util/List;
@370
+#start()V
@388
-#startLifespan(Lio/trino/execution/Lifespan;Lio/trino/spi/connector/ConnectorPartitionHandle;)V
-#noMoreLifespans()V
-#drainCompletedLifespans()Ljava/util/List;

+###io/trino/execution/scheduler/NodeScheduler
@351
+#<init>(Lio/trino/execution/scheduler/NodeSelectorFactory;)V
+#createNodeSelector(Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
+#getAllNodes(Lio/trino/execution/scheduler/NodeMap;Z)Ljava/util/List;
+#selectNodes(ILjava/util/Iterator;)Ljava/util/List;
+#randomizedNodes(Lio/trino/execution/scheduler/NodeMap;ZLjava/util/Set;)Lio/trino/execution/scheduler/ResettableRandomizedIterator;
+#selectExactNodes(Lio/trino/execution/scheduler/NodeMap;Ljava/util/List;Z)Ljava/util/List;
+#selectDistributionNodes(Lio/trino/execution/scheduler/NodeMap;Lio/trino/execution/NodeTaskMap;IILjava/util/Set;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#calculateLowWatermark(I)I
+#toWhenHasSplitQueueSpaceFuture(Ljava/util/Set;Ljava/util/List;I)Lcom/google/common/util/concurrent/ListenableFuture;
+#toWhenHasSplitQueueSpaceFuture(Ljava/util/List;I)Lcom/google/common/util/concurrent/ListenableFuture;
@354
+#createNodeSelector(Lio/trino/Session;Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
+#selectDistributionNodes(Lio/trino/execution/scheduler/NodeMap;Lio/trino/execution/NodeTaskMap;IIILjava/util/Set;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;)Lio/trino/execution/scheduler/SplitPlacementResult;
-#createNodeSelector(Ljava/util/Optional;)Lio/trino/execution/scheduler/NodeSelector;
-#selectDistributionNodes(Lio/trino/execution/scheduler/NodeMap;Lio/trino/execution/NodeTaskMap;IILjava/util/Set;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;)Lio/trino/execution/scheduler/SplitPlacementResult;
@364
+#selectDistributionNodes(Lio/trino/execution/scheduler/NodeMap;Lio/trino/execution/NodeTaskMap;JJILjava/util/Set;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#canAssignSplitBasedOnWeight(JJLio/trino/spi/SplitWeight;)Z
+#calculateLowWatermark(J)J
+#toWhenHasSplitQueueSpaceFuture(Ljava/util/Set;Ljava/util/List;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#toWhenHasSplitQueueSpaceFuture(Ljava/util/List;J)Lcom/google/common/util/concurrent/ListenableFuture;
-#selectDistributionNodes(Lio/trino/execution/scheduler/NodeMap;Lio/trino/execution/NodeTaskMap;IIILjava/util/Set;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;)Lio/trino/execution/scheduler/SplitPlacementResult;
-#calculateLowWatermark(I)I
-#toWhenHasSplitQueueSpaceFuture(Ljava/util/Set;Ljava/util/List;I)Lcom/google/common/util/concurrent/ListenableFuture;
-#toWhenHasSplitQueueSpaceFuture(Ljava/util/List;I)Lcom/google/common/util/concurrent/ListenableFuture;
@405
+#filterNodes(Lio/trino/execution/scheduler/NodeMap;ZLjava/util/Set;)Ljava/util/List;

+###io/trino/execution/scheduler/ScaledWriterScheduler
@351
+#<init>(Lio/trino/execution/SqlStageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;)V
+#finish()V
+#schedule()Lio/trino/execution/scheduler/ScheduleResult;
@366
+#<init>(Lio/trino/execution/scheduler/PipelinedStageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;)V
-#<init>(Lio/trino/execution/SqlStageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;)V
@368
+#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;)V
-#<init>(Lio/trino/execution/scheduler/PipelinedStageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;)V
@395
+#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;I)V
-#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;)V
@406
+#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;)V
-#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/execution/scheduler/NodeSelector;Ljava/util/concurrent/ScheduledExecutorService;Lio/airlift/units/DataSize;I)V

+###io/trino/execution/scheduler/PartitionedOutputBufferManager
@351
+#<init>(Lio/trino/sql/planner/PartitioningHandle;ILjava/util/function/Consumer;)V
+#addOutputBuffers(Ljava/util/List;Z)V
@366
+#<init>(Lio/trino/sql/planner/PartitioningHandle;I)V
+#addOutputBuffer(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#noMoreBuffers()V
+#getOutputBuffers()Lio/trino/execution/buffer/OutputBuffers;
-#<init>(Lio/trino/sql/planner/PartitioningHandle;ILjava/util/function/Consumer;)V
-#addOutputBuffers(Ljava/util/List;Z)V
@398
-###io/trino/execution/scheduler/PartitionedOutputBufferManager

+###io/trino/execution/scheduler/NodeSelector
@351
+#lockDownNodes()V
+#allNodes()Ljava/util/List;
+#selectCurrentNode()Lio/trino/metadata/InternalNode;
+#selectRandomNodes(I)Ljava/util/List;
+#selectRandomNodes(ILjava/util/Set;)Ljava/util/List;
+#computeAssignments(Ljava/util/Set;Ljava/util/List;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#computeAssignments(Ljava/util/Set;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;)Lio/trino/execution/scheduler/SplitPlacementResult;

+###io/trino/execution/scheduler/FixedCountScheduler
@351
+#<init>(Lio/trino/execution/SqlStageExecution;Ljava/util/List;)V
+#<init>(Lio/trino/execution/scheduler/FixedCountScheduler$TaskScheduler;Ljava/util/List;)V
+#schedule()Lio/trino/execution/scheduler/ScheduleResult;
@366
+#<init>(Lio/trino/execution/scheduler/PipelinedStageExecution;Ljava/util/List;)V
-#<init>(Lio/trino/execution/SqlStageExecution;Ljava/util/List;)V
@368
+#<init>(Lio/trino/execution/scheduler/StageExecution;Ljava/util/List;)V
-#<init>(Lio/trino/execution/scheduler/PipelinedStageExecution;Ljava/util/List;)V

+###io/trino/execution/scheduler/NodeAssignmentStats
@351
+#<init>(Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/NodeMap;Ljava/util/List;)V
+#getTotalSplitCount(Lio/trino/metadata/InternalNode;)I
+#getQueuedSplitCountForStage(Lio/trino/metadata/InternalNode;)I
+#addAssignedSplit(Lio/trino/metadata/InternalNode;)V
+#removeAssignedSplit(Lio/trino/metadata/InternalNode;)V
@354
+#getUnacknowledgedSplitCountForStage(Lio/trino/metadata/InternalNode;)I
@364
+#getTotalSplitsWeight(Lio/trino/metadata/InternalNode;)J
+#getQueuedSplitsWeightForStage(Lio/trino/metadata/InternalNode;)J
+#addAssignedSplit(Lio/trino/metadata/InternalNode;Lio/trino/spi/SplitWeight;)V
+#removeAssignedSplit(Lio/trino/metadata/InternalNode;Lio/trino/spi/SplitWeight;)V
-#getTotalSplitCount(Lio/trino/metadata/InternalNode;)I
-#getQueuedSplitCountForStage(Lio/trino/metadata/InternalNode;)I
-#addAssignedSplit(Lio/trino/metadata/InternalNode;)V
-#removeAssignedSplit(Lio/trino/metadata/InternalNode;)V
@405
+#getQueuedSplitsWeightForStage(Ljava/lang/String;)J

+###io/trino/execution/scheduler/TopologyAwareNodeSelector
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IIILjava/util/List;Lio/trino/execution/scheduler/NetworkTopology;)V
+#lockDownNodes()V
+#allNodes()Ljava/util/List;
+#selectCurrentNode()Lio/trino/metadata/InternalNode;
+#selectRandomNodes(ILjava/util/Set;)Ljava/util/List;
+#computeAssignments(Ljava/util/Set;Ljava/util/List;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#computeAssignments(Ljava/util/Set;Ljava/util/List;Lio/trino/execution/scheduler/BucketNodeMap;)Lio/trino/execution/scheduler/SplitPlacementResult;
@354
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IIIILjava/util/List;Lio/trino/execution/scheduler/NetworkTopology;)V
-#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IIILjava/util/List;Lio/trino/execution/scheduler/NetworkTopology;)V
@364
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IJJILjava/util/List;Lio/trino/execution/scheduler/NetworkTopology;)V
-#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/NodeTaskMap;ZLjava/util/function/Supplier;IIIILjava/util/List;Lio/trino/execution/scheduler/NetworkTopology;)V

+###io/trino/execution/scheduler/DynamicSplitPlacementPolicy
@351
+#<init>(Lio/trino/execution/scheduler/NodeSelector;Ljava/util/function/Supplier;)V
+#computeAssignments(Ljava/util/Set;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#lockDownNodes()V
+#allNodes()Ljava/util/List;

+###io/trino/execution/scheduler/NetworkLocation
@351
+#<init>([Ljava/lang/String;)V
+#<init>(Ljava/util/Collection;)V
+#subLocation(II)Lio/trino/execution/scheduler/NetworkLocation;
+#getSegments()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/execution/scheduler/AllAtOnceExecutionPolicy
@351
+#<init>()V
+#createExecutionSchedule(Ljava/util/Collection;)Lio/trino/execution/scheduler/ExecutionSchedule;
@368
-###io/trino/execution/scheduler/AllAtOnceExecutionPolicy

+###io/trino/execution/scheduler/ExecutionSchedule
@351
+#getStagesToSchedule()Ljava/util/Set;
+#isFinished()Z
@368
-###io/trino/execution/scheduler/ExecutionSchedule

+###io/trino/execution/scheduler/SubnetBasedTopology$AddressProtocol
@351
+#values()[Lio/trino/execution/scheduler/SubnetBasedTopology$AddressProtocol;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/SubnetBasedTopology$AddressProtocol;

+###io/trino/execution/scheduler/FixedCountScheduler$TaskScheduler
@351
+#scheduleTask(Lio/trino/metadata/InternalNode;ILjava/util/OptionalInt;)Ljava/util/Optional;
@362
+#scheduleTask(Lio/trino/metadata/InternalNode;I)Ljava/util/Optional;
-#scheduleTask(Lio/trino/metadata/InternalNode;ILjava/util/OptionalInt;)Ljava/util/Optional;

+###io/trino/execution/scheduler/SplitPlacementPolicy
@351
+#computeAssignments(Ljava/util/Set;)Lio/trino/execution/scheduler/SplitPlacementResult;
+#lockDownNodes()V
+#allNodes()Ljava/util/List;

+###io/trino/execution/scheduler/SqlQueryScheduler
@351
+#createSqlQueryScheduler(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/StageExecutionPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;Lio/trino/Session;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;)Lio/trino/execution/scheduler/SqlQueryScheduler;
+#getBasicStageStats()Lio/trino/execution/BasicStageStats;
+#getStageInfo()Lio/trino/execution/StageInfo;
+#getUserMemoryReservation()J
+#getTotalMemoryReservation()J
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#start()V
+#cancelStage(Lio/trino/execution/StageId;)V
+#abort()V
@364
+#createSqlQueryScheduler(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/StageExecutionPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;Lio/trino/Session;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)Lio/trino/execution/scheduler/SqlQueryScheduler;
-#createSqlQueryScheduler(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/StageExecutionPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;Lio/trino/Session;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;)Lio/trino/execution/scheduler/SqlQueryScheduler;
@366
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TaskManager;)V
-#createSqlQueryScheduler(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/StageExecutionPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;Lio/trino/Session;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;)Lio/trino/execution/scheduler/SqlQueryScheduler;
@368
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TaskManager;)V
-#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TaskManager;)V
@369
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;)V
-#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TaskManager;)V
@371
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
-#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;)V
@372
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/SqlTaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
-#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
@373
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@374
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/scheduler/NodeAllocatorService;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/SqlTaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
-#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/SqlTaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
@377
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/scheduler/NodeAllocatorService;Lio/trino/execution/scheduler/PartitionMemoryEstimatorFactory;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/SqlTaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
-#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/scheduler/NodeAllocatorService;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/SqlTaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
@379
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/scheduler/NodeAllocatorService;Lio/trino/execution/scheduler/PartitionMemoryEstimatorFactory;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/SqlTaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
-#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/scheduler/NodeAllocatorService;Lio/trino/execution/scheduler/PartitionMemoryEstimatorFactory;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/SqlTaskManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;)V
@393
-#abort()V
@394
-###io/trino/execution/scheduler/SqlQueryScheduler

+###io/trino/execution/scheduler/SplitPlacementResult
@351
+#<init>(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/collect/Multimap;)V
+#getBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#getAssignments()Lcom/google/common/collect/Multimap;

+###io/trino/execution/scheduler/UniformNodeSelectorModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/execution/resourcegroups/InternalResourceGroupManager
@351
+#<init>(Lio/trino/execution/resourcegroups/LegacyResourceGroupConfigurationManager;Lio/trino/spi/memory/ClusterMemoryPoolManager;Lio/airlift/node/NodeInfo;Lorg/weakref/jmx/MBeanExporter;)V
+#tryGetResourceGroupInfo(Lio/trino/spi/resourcegroups/ResourceGroupId;)Ljava/util/Optional;
+#tryGetPathToRoot(Lio/trino/spi/resourcegroups/ResourceGroupId;)Ljava/util/Optional;
+#submit(Lio/trino/execution/ManagedQueryExecution;Lio/trino/spi/resourcegroups/SelectionContext;Ljava/util/concurrent/Executor;)V
+#selectGroup(Lio/trino/spi/resourcegroups/SelectionCriteria;)Lio/trino/spi/resourcegroups/SelectionContext;
+#addConfigurationManagerFactory(Lio/trino/spi/resourcegroups/ResourceGroupConfigurationManagerFactory;)V
+#loadConfigurationManager()V
+#setConfigurationManager(Ljava/lang/String;Ljava/util/Map;)V
+#getConfigurationManager()Lio/trino/spi/resourcegroups/ResourceGroupConfigurationManager;
+#destroy()V
+#start()V
+#getQueriesQueuedOnInternal()I

+###io/trino/execution/resourcegroups/IndexedPriorityQueue
@351
+#<init>()V
+#addOrUpdate(Ljava/lang/Object;J)Z
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;

+###io/trino/execution/resourcegroups/LegacyResourceGroupConfigurationManager
@351
+#<init>(Lio/trino/execution/QueryManagerConfig;)V
+#configure(Lio/trino/spi/resourcegroups/ResourceGroup;Lio/trino/spi/resourcegroups/SelectionContext;)V
+#match(Lio/trino/spi/resourcegroups/SelectionCriteria;)Ljava/util/Optional;
+#parentGroupContext(Lio/trino/spi/resourcegroups/SelectionContext;)Lio/trino/spi/resourcegroups/SelectionContext;

+###io/trino/execution/resourcegroups/ResourceGroupManager
@351
+#submit(Lio/trino/execution/ManagedQueryExecution;Lio/trino/spi/resourcegroups/SelectionContext;Ljava/util/concurrent/Executor;)V
+#selectGroup(Lio/trino/spi/resourcegroups/SelectionCriteria;)Lio/trino/spi/resourcegroups/SelectionContext;
+#tryGetResourceGroupInfo(Lio/trino/spi/resourcegroups/ResourceGroupId;)Ljava/util/Optional;
+#tryGetPathToRoot(Lio/trino/spi/resourcegroups/ResourceGroupId;)Ljava/util/Optional;
+#addConfigurationManagerFactory(Lio/trino/spi/resourcegroups/ResourceGroupConfigurationManagerFactory;)V
+#loadConfigurationManager()V

+###io/trino/execution/resourcegroups/WeightedFairQueue$Usage
@351
+#<init>(II)V
+#getShare()I
+#getUtilization()I
+#toString()Ljava/lang/String;

+###io/trino/execution/resourcegroups/ResourceGroupConfigurationManagerContextInstance
@351
+#<init>(Lio/trino/spi/memory/ClusterMemoryPoolManager;Ljava/lang/String;)V
+#getMemoryPoolManager()Lio/trino/spi/memory/ClusterMemoryPoolManager;
+#getEnvironment()Ljava/lang/String;

+###io/trino/execution/resourcegroups/InternalResourceGroup
@351
+#<init>(Ljava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)V
+#getFullInfo()Lio/trino/server/ResourceGroupInfo;
+#getInfo()Lio/trino/server/ResourceGroupInfo;
+#getPathToRoot()Ljava/util/List;
+#getId()Lio/trino/spi/resourcegroups/ResourceGroupId;
+#getRunningQueries()I
+#getQueuedQueries()I
+#getWaitingQueuedQueries()I
+#getSoftMemoryLimitBytes()J
+#setSoftMemoryLimitBytes(J)V
+#getSoftCpuLimit()Ljava/time/Duration;
+#setSoftCpuLimit(Ljava/time/Duration;)V
+#getHardCpuLimit()Ljava/time/Duration;
+#setHardCpuLimit(Ljava/time/Duration;)V
+#getCpuQuotaGenerationMillisPerSecond()J
+#setCpuQuotaGenerationMillisPerSecond(J)V
+#getSoftConcurrencyLimit()I
+#setSoftConcurrencyLimit(I)V
+#getHardConcurrencyLimit()I
+#setHardConcurrencyLimit(I)V
+#getMaxQueuedQueries()I
+#setMaxQueuedQueries(I)V
+#getTimeBetweenStartsSec()Lio/airlift/stats/CounterStat;
+#getSchedulingWeight()I
+#setSchedulingWeight(I)V
+#getSchedulingPolicy()Lio/trino/spi/resourcegroups/SchedulingPolicy;
+#setSchedulingPolicy(Lio/trino/spi/resourcegroups/SchedulingPolicy;)V
+#getJmxExport()Z
+#setJmxExport(Z)V
+#getOrCreateSubGroup(Ljava/lang/String;)Lio/trino/execution/resourcegroups/InternalResourceGroup;
+#run(Lio/trino/execution/ManagedQueryExecution;)V
+#updateGroupsAndProcessQueuedQueries()V
+#generateCpuQuota(J)V
+#triggerProcessQueuedQueries()V
+#subGroups()Ljava/util/Collection;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/execution/resourcegroups/QueryQueueFullException
@351
+#<init>(Lio/trino/spi/resourcegroups/ResourceGroupId;)V
+#getResourceGroup()Lio/trino/spi/resourcegroups/ResourceGroupId;

+###io/trino/execution/resourcegroups/NoOpResourceGroupManager
@351
+#<init>()V
+#submit(Lio/trino/execution/ManagedQueryExecution;Lio/trino/spi/resourcegroups/SelectionContext;Ljava/util/concurrent/Executor;)V
+#tryGetResourceGroupInfo(Lio/trino/spi/resourcegroups/ResourceGroupId;)Ljava/util/Optional;
+#tryGetPathToRoot(Lio/trino/spi/resourcegroups/ResourceGroupId;)Ljava/util/Optional;
+#addConfigurationManagerFactory(Lio/trino/spi/resourcegroups/ResourceGroupConfigurationManagerFactory;)V
+#loadConfigurationManager()V
+#selectGroup(Lio/trino/spi/resourcegroups/SelectionCriteria;)Lio/trino/spi/resourcegroups/SelectionContext;

+###io/trino/execution/SqlTask
@351
+#createSqlTask(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;Lio/trino/memory/QueryContext;Lio/trino/execution/SqlTaskExecutionFactory;Ljava/util/concurrent/ExecutorService;Ljava/util/function/Function;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/CounterStat;)Lio/trino/execution/SqlTask;
+#isOutputBufferOverutilized()Z
+#getIoStats()Lio/trino/execution/SqlTaskIoStats;
+#getTaskId()Lio/trino/execution/TaskId;
+#getTaskInstanceId()Ljava/lang/String;
+#recordHeartbeat()V
+#getTaskInfo()Lio/trino/execution/TaskInfo;
+#getTaskStatus()Lio/trino/execution/TaskStatus;
+#acknowledgeAndGetNewDynamicFilterDomains(J)Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;
+#getTaskStatus(J)Lcom/google/common/util/concurrent/ListenableFuture;
+#getTaskInfo(J)Lcom/google/common/util/concurrent/ListenableFuture;
+#updateTask(Lio/trino/Session;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;)Lio/trino/execution/TaskInfo;
+#getTaskResults(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledgeTaskResults(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abortTaskResults(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
+#failed(Ljava/lang/Throwable;)V
+#cancel()Lio/trino/execution/TaskInfo;
+#abort()Lio/trino/execution/TaskInfo;
+#toString()Ljava/lang/String;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getQueryContext()Lio/trino/memory/QueryContext;
@352
+#getTaskState()Lio/trino/execution/TaskState;
+#getTaskCreatedTime()Lorg/joda/time/DateTime;
+#getTaskContext()Ljava/util/Optional;
@353
+#createSqlTask(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;Lio/trino/memory/QueryContext;Lio/trino/execution/SqlTaskExecutionFactory;Ljava/util/concurrent/ExecutorService;Ljava/util/function/Consumer;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/CounterStat;)Lio/trino/execution/SqlTask;
-#createSqlTask(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;Lio/trino/memory/QueryContext;Lio/trino/execution/SqlTaskExecutionFactory;Ljava/util/concurrent/ExecutorService;Ljava/util/function/Function;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/CounterStat;)Lio/trino/execution/SqlTask;
@360
+#updateTask(Lio/trino/Session;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
-#updateTask(Lio/trino/Session;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;)Lio/trino/execution/TaskInfo;
@362
+#updateTask(Lio/trino/Session;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
-#updateTask(Lio/trino/Session;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
@366
+#failed(Ljava/lang/Throwable;)Lio/trino/execution/TaskInfo;
+#addSourceTaskFailureListener(Lio/trino/execution/TaskFailureListener;)V
+#getTraceToken()Ljava/util/Optional;
-#failed(Ljava/lang/Throwable;)V
@369
+#createSqlTask(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;Lio/trino/memory/QueryContext;Lio/trino/execution/SqlTaskExecutionFactory;Ljava/util/concurrent/ExecutorService;Ljava/util/function/Consumer;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/exchange/ExchangeManagerRegistry;Lio/airlift/stats/CounterStat;)Lio/trino/execution/SqlTask;
-#createSqlTask(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;Lio/trino/memory/QueryContext;Lio/trino/execution/SqlTaskExecutionFactory;Ljava/util/concurrent/ExecutorService;Ljava/util/function/Consumer;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/CounterStat;)Lio/trino/execution/SqlTask;
@370
+#destroyTaskResults(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
-#abortTaskResults(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
@396
-#isOutputBufferOverutilized()Z
@398
+#getTaskResults(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledgeTaskResults(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroyTaskResults(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
-#getTaskResults(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
-#acknowledgeTaskResults(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroyTaskResults(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
@408
+#getCatalogs()Ljava/util/Optional;
+#setCatalogs(Ljava/util/Set;)Z

+###io/trino/execution/DropTableTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/DropTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/DropTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/DropTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/DropTable;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/DropTable;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/QueryPreparer$PreparedQuery
@351
+#<init>(Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Optional;)V
+#getStatement()Lio/trino/sql/tree/Statement;
+#getParameters()Ljava/util/List;
+#getPrepareSql()Ljava/util/Optional;

+###io/trino/execution/TaskSource
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/Set;Ljava/util/Set;Z)V
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/Set;Z)V
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getSplits()Ljava/util/Set;
+#getNoMoreSplitsForLifespan()Ljava/util/Set;
+#isNoMoreSplits()Z
+#update(Lio/trino/execution/TaskSource;)Lio/trino/execution/TaskSource;
+#toString()Ljava/lang/String;
@369
-###io/trino/execution/TaskSource

+###io/trino/execution/QueryStats
@351
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V
+#getCreateTime()Lorg/joda/time/DateTime;
+#getExecutionStartTime()Lorg/joda/time/DateTime;
+#getLastHeartbeat()Lorg/joda/time/DateTime;
+#getEndTime()Lorg/joda/time/DateTime;
+#getElapsedTime()Lio/airlift/units/Duration;
+#getResourceWaitingTime()Lio/airlift/units/Duration;
+#getDispatchingTime()Lio/airlift/units/Duration;
+#getQueuedTime()Lio/airlift/units/Duration;
+#getExecutionTime()Lio/airlift/units/Duration;
+#getAnalysisTime()Lio/airlift/units/Duration;
+#getPlanningTime()Lio/airlift/units/Duration;
+#getFinishingTime()Lio/airlift/units/Duration;
+#getTotalTasks()I
+#getRunningTasks()I
+#getCompletedTasks()I
+#getTotalDrivers()I
+#getQueuedDrivers()I
+#getRunningDrivers()I
+#getBlockedDrivers()I
+#getCompletedDrivers()I
+#getCumulativeUserMemory()D
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakUserMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakNonRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakTaskUserMemory()Lio/airlift/units/DataSize;
+#getPeakTaskRevocableMemory()Lio/airlift/units/DataSize;
+#getPeakTaskTotalMemory()Lio/airlift/units/DataSize;
+#isScheduled()Z
+#getTotalScheduledTime()Lio/airlift/units/Duration;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalBlockedTime()Lio/airlift/units/Duration;
+#isFullyBlocked()Z
+#getBlockedReasons()Ljava/util/Set;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getPhysicalInputReadTime()Lio/airlift/units/Duration;
+#getInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getInternalNetworkInputPositions()J
+#getRawInputDataSize()Lio/airlift/units/DataSize;
+#getRawInputPositions()J
+#getProcessedInputDataSize()Lio/airlift/units/DataSize;
+#getProcessedInputPositions()J
+#getOutputDataSize()Lio/airlift/units/DataSize;
+#getOutputPositions()J
+#getPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
+#getWrittenPositions()J
+#getLogicalWrittenDataSize()Lio/airlift/units/DataSize;
+#getStageGcStatistics()Ljava/util/List;
+#getDynamicFiltersStats()Lio/trino/server/DynamicFilterService$DynamicFiltersStats;
+#getOperatorSummaries()Ljava/util/List;
+#getProgressPercentage()Ljava/util/OptionalDouble;
+#getSpilledDataSize()Lio/airlift/units/DataSize;
@360
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V
+#getCumulativeSystemMemory()D
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V
@369
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V
-#getCumulativeSystemMemory()D
-#getPeakNonRevocableMemoryReservation()Lio/airlift/units/DataSize;
@373
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V
+#getFailedTasks()I
+#getFailedCumulativeUserMemory()D
+#getFailedScheduledTime()Lio/airlift/units/Duration;
+#getFailedCpuTime()Lio/airlift/units/Duration;
+#getFailedPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getFailedPhysicalInputPositions()J
+#getFailedPhysicalInputReadTime()Lio/airlift/units/Duration;
+#getFailedInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getFailedInternalNetworkInputPositions()J
+#getFailedRawInputDataSize()Lio/airlift/units/DataSize;
+#getFailedRawInputPositions()J
+#getFailedProcessedInputDataSize()Lio/airlift/units/DataSize;
+#getFailedProcessedInputPositions()J
+#getFailedOutputDataSize()Lio/airlift/units/DataSize;
+#getFailedOutputPositions()J
+#getFailedPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V
@376
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V
+#getInputBlockedTime()Lio/airlift/units/Duration;
+#getFailedInputBlockedTime()Lio/airlift/units/Duration;
+#getOutputBlockedTime()Lio/airlift/units/Duration;
+#getFailedOutputBlockedTime()Lio/airlift/units/Duration;
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/List;Lio/trino/server/DynamicFilterService$DynamicFiltersStats;Ljava/util/List;)V

+###io/trino/execution/Lifespan
@351
+#taskWide()Lio/trino/execution/Lifespan;
+#driverGroup(I)Lio/trino/execution/Lifespan;
+#isTaskWide()Z
+#getId()I
+#jsonCreator(Ljava/lang/String;)Lio/trino/execution/Lifespan;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@371
+#getRetainedSizeInBytes()J
@388
-###io/trino/execution/Lifespan

+###io/trino/execution/FutureStateChange
@351
+#<init>()V
+#createNewListener()Lcom/google/common/util/concurrent/ListenableFuture;
+#complete(Ljava/lang/Object;)V
+#complete(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V

+###io/trino/execution/ResetSessionTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/ResetSession;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/ResetSession;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/ResetSession;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;)V
+#execute(Lio/trino/sql/tree/ResetSession;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/ResetSession;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/SessionPropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/execution/SqlTaskIoStats
@351
+#<init>()V
+#<init>(Lio/airlift/stats/CounterStat;Lio/airlift/stats/CounterStat;Lio/airlift/stats/CounterStat;Lio/airlift/stats/CounterStat;)V
+#getInputDataSize()Lio/airlift/stats/CounterStat;
+#getInputPositions()Lio/airlift/stats/CounterStat;
+#getOutputDataSize()Lio/airlift/stats/CounterStat;
+#getOutputPositions()Lio/airlift/stats/CounterStat;
+#merge(Lio/trino/execution/SqlTaskIoStats;)V
+#resetTo(Lio/trino/execution/SqlTaskIoStats;)V

+###io/trino/execution/NodeTaskMap
@351
+#<init>(Lio/trino/util/FinalizerService;)V
+#addTask(Lio/trino/metadata/InternalNode;Lio/trino/execution/RemoteTask;)V
+#getPartitionedSplitsOnNode(Lio/trino/metadata/InternalNode;)I
+#createPartitionedSplitCountTracker(Lio/trino/metadata/InternalNode;Lio/trino/execution/TaskId;)Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;
@364
+#getPartitionedSplitsOnNode(Lio/trino/metadata/InternalNode;)Lio/trino/execution/PartitionedSplitsInfo;
-#getPartitionedSplitsOnNode(Lio/trino/metadata/InternalNode;)I

+###io/trino/execution/TaskManagementExecutor
@351
+#<init>()V
+#close()V
+#getExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#getTaskManagementExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;

+###io/trino/execution/PrepareTask
@351
+#<init>(Lio/trino/sql/parser/SqlParser;)V
+#getName()Ljava/lang/String;
+#explain(Lio/trino/sql/tree/Prepare;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Prepare;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Prepare;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Prepare;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#execute(Lio/trino/sql/tree/Prepare;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#explain(Lio/trino/sql/tree/Prepare;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/Prepare;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/QueryManager
@351
+#getQueries()Ljava/util/List;
+#addOutputInfoListener(Lio/trino/spi/QueryId;Ljava/util/function/Consumer;)V
+#addStateChangeListener(Lio/trino/spi/QueryId;Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getStateChange(Lio/trino/spi/QueryId;Lio/trino/execution/QueryState;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getQueryInfo(Lio/trino/spi/QueryId;)Lio/trino/server/BasicQueryInfo;
+#getFullQueryInfo(Lio/trino/spi/QueryId;)Lio/trino/execution/QueryInfo;
+#getQuerySession(Lio/trino/spi/QueryId;)Lio/trino/Session;
+#getQuerySlug(Lio/trino/spi/QueryId;)Lio/trino/server/protocol/Slug;
+#getQueryState(Lio/trino/spi/QueryId;)Lio/trino/execution/QueryState;
+#recordHeartbeat(Lio/trino/spi/QueryId;)V
+#createQuery(Lio/trino/execution/QueryExecution;)V
+#failQuery(Lio/trino/spi/QueryId;Ljava/lang/Throwable;)V
+#cancelQuery(Lio/trino/spi/QueryId;)V
+#cancelStage(Lio/trino/execution/StageId;)V
@366
+#outputTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@391
+#resultsConsumed(Lio/trino/spi/QueryId;)V
@396
+#setOutputInfoListener(Lio/trino/spi/QueryId;Ljava/util/function/Consumer;)V
-#addOutputInfoListener(Lio/trino/spi/QueryId;Ljava/util/function/Consumer;)V

+###io/trino/execution/SetRoleTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/SetRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/SetRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@362
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
-#<init>()V
@363
+#<init>()V
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/SetRole;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/SetRole;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/Input
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/List;Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/sql/planner/plan/PlanNodeId;)V
+#getCatalogName()Ljava/lang/String;
+#getSchema()Ljava/lang/String;
+#getTable()Ljava/lang/String;
+#getConnectorInfo()Ljava/util/Optional;
+#getColumns()Ljava/util/List;
+#getFragmentId()Lio/trino/sql/planner/plan/PlanFragmentId;
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/execution/SqlTaskExecutionFactory
@351
+#<init>(Ljava/util/concurrent/Executor;Lio/trino/execution/executor/TaskExecutor;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/event/SplitMonitor;Lio/trino/execution/TaskManagerConfig;)V
+#create(Lio/trino/Session;Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/sql/planner/PlanFragment;Ljava/util/List;Ljava/lang/Runnable;Ljava/util/OptionalInt;)Lio/trino/execution/SqlTaskExecution;
@362
+#create(Lio/trino/Session;Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/sql/planner/PlanFragment;Ljava/util/List;Ljava/lang/Runnable;)Lio/trino/execution/SqlTaskExecution;
-#create(Lio/trino/Session;Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/sql/planner/PlanFragment;Ljava/util/List;Ljava/lang/Runnable;Ljava/util/OptionalInt;)Lio/trino/execution/SqlTaskExecution;
@365
+#create(Lio/trino/Session;Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/sql/planner/PlanFragment;Ljava/lang/Runnable;)Lio/trino/execution/SqlTaskExecution;
-#create(Lio/trino/Session;Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/sql/planner/PlanFragment;Ljava/util/List;Ljava/lang/Runnable;)Lio/trino/execution/SqlTaskExecution;

+###io/trino/execution/QueryExecution
@351
+#getState()Lio/trino/execution/QueryState;
+#getStateChange(Lio/trino/execution/QueryState;)Lcom/google/common/util/concurrent/ListenableFuture;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addOutputInfoListener(Ljava/util/function/Consumer;)V
+#getQueryPlan()Lio/trino/sql/planner/Plan;
+#getBasicQueryInfo()Lio/trino/server/BasicQueryInfo;
+#getQueryInfo()Lio/trino/execution/QueryInfo;
+#getSlug()Lio/trino/server/protocol/Slug;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getMemoryPool()Lio/trino/memory/VersionedMemoryPoolId;
+#setMemoryPool(Lio/trino/memory/VersionedMemoryPoolId;)V
+#start()V
+#cancelQuery()V
+#cancelStage(Lio/trino/execution/StageId;)V
+#recordHeartbeat()V
+#shouldWaitForMinWorkers()Z
+#addFinalQueryInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
@366
+#outputTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@372
-#getMemoryPool()Lio/trino/memory/VersionedMemoryPoolId;
-#setMemoryPool(Lio/trino/memory/VersionedMemoryPoolId;)V
@373
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Exception;)V
@391
+#resultsConsumed()V
@396
+#setOutputInfoListener(Ljava/util/function/Consumer;)V
-#addOutputInfoListener(Ljava/util/function/Consumer;)V

+###io/trino/execution/Column
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/execution/RenameColumnTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/RenameColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/RenameColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/RenameColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/RenameColumn;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/RenameColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/RenameSchemaTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/RenameSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/RenameSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/RenameSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/RenameSchema;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/RenameSchema;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/ClusterSizeMonitor
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#<init>(Lio/trino/metadata/InternalNodeManager;Z)V
+#start()V
+#stop()V
+#waitForMinimumWorkers(ILio/airlift/units/Duration;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getRequiredWorkers()I

+###io/trino/execution/TaskManager
@351
+#getAllTaskInfo()Ljava/util/List;
+#getTaskInfo(Lio/trino/execution/TaskId;)Lio/trino/execution/TaskInfo;
+#getTaskStatus(Lio/trino/execution/TaskId;)Lio/trino/execution/TaskStatus;
+#getTaskInfo(Lio/trino/execution/TaskId;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#getTaskInstanceId(Lio/trino/execution/TaskId;)Ljava/lang/String;
+#getTaskStatus(Lio/trino/execution/TaskId;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledgeAndGetNewDynamicFilterDomains(Lio/trino/execution/TaskId;J)Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;
+#updateMemoryPoolAssignments(Lio/trino/memory/MemoryPoolAssignmentsRequest;)V
+#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;)Lio/trino/execution/TaskInfo;
+#cancelTask(Lio/trino/execution/TaskId;)Lio/trino/execution/TaskInfo;
+#abortTask(Lio/trino/execution/TaskId;)Lio/trino/execution/TaskInfo;
+#getTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledgeTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abortTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
+#addStateChangeListener(Lio/trino/execution/TaskId;Lio/trino/execution/StateMachine$StateChangeListener;)V
@360
+#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
-#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;)Lio/trino/execution/TaskInfo;
@362
+#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
-#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
@366
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)Lio/trino/execution/TaskInfo;
+#addSourceTaskFailureListener(Lio/trino/execution/TaskId;Lio/trino/execution/TaskFailureListener;)V
+#getTraceToken(Lio/trino/execution/TaskId;)Ljava/util/Optional;
@370
+#destroyTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
-#abortTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
@372
-###io/trino/execution/TaskManager

+###io/trino/execution/StartTransactionTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/StartTransaction;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/StartTransaction;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/StartTransaction;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/transaction/TransactionManager;)V
+#execute(Lio/trino/sql/tree/StartTransaction;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/StartTransaction;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/RevokeTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Revoke;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Revoke;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Revoke;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/Revoke;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/Revoke;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/AddColumnTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/AddColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/AddColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/AddColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/AddColumn;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/AddColumn;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/ColumnPropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V

+###io/trino/execution/TaskStatus
@351
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;J)V
+#getTaskId()Lio/trino/execution/TaskId;
+#getTaskInstanceId()Ljava/lang/String;
+#getVersion()J
+#getState()Lio/trino/execution/TaskState;
+#getSelf()Ljava/net/URI;
+#getNodeId()Ljava/lang/String;
+#getCompletedDriverGroups()Ljava/util/Set;
+#getFailures()Ljava/util/List;
+#getQueuedPartitionedDrivers()I
+#getRunningPartitionedDrivers()I
+#getPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
+#isOutputBufferOverutilized()Z
+#getMemoryReservation()Lio/airlift/units/DataSize;
+#getSystemMemoryReservation()Lio/airlift/units/DataSize;
+#getRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getFullGcCount()J
+#getFullGcTime()Lio/airlift/units/Duration;
+#getDynamicFiltersVersion()J
+#toString()Ljava/lang/String;
+#initialTaskStatus(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;)Lio/trino/execution/TaskStatus;
+#failWith(Lio/trino/execution/TaskStatus;Lio/trino/execution/TaskState;Ljava/util/List;)Lio/trino/execution/TaskStatus;
@364
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
+#getQueuedPartitionedSplitsWeight()J
+#getRunningPartitionedSplitsWeight()J
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;J)V
@369
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
-#getSystemMemoryReservation()Lio/airlift/units/DataSize;
@375
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
+#getPeakMemoryReservation()Lio/airlift/units/DataSize;
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
@388
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
-#getCompletedDriverGroups()Ljava/util/Set;
@396
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;IILio/trino/execution/buffer/OutputBufferStatus;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
+#getOutputBufferStatus()Lio/trino/execution/buffer/OutputBufferStatus;
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;IIZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
-#isOutputBufferOverutilized()Z
@405
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;IILio/trino/execution/buffer/OutputBufferStatus;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
+#getOutputDataSize()Lio/airlift/units/DataSize;
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;IILio/trino/execution/buffer/OutputBufferStatus;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
@406
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;IILio/trino/execution/buffer/OutputBufferStatus;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V
+#getMaxWriterCount()Ljava/util/Optional;
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;JLio/trino/execution/TaskState;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;IILio/trino/execution/buffer/OutputBufferStatus;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;JJJ)V

+###io/trino/execution/DataDefinitionTask
@351
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
@353
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;

+###io/trino/execution/SplitConcurrencyController
@351
+#<init>(ILio/airlift/units/Duration;)V
+#update(JDI)V
+#getTargetConcurrency()I
+#splitFinished(JDI)V

+###io/trino/execution/StageState
@351
+#values()[Lio/trino/execution/StageState;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/StageState;
+#isDone()Z
+#isFailure()Z
+#canScheduleMoreTasks()Z
@366
-#canScheduleMoreTasks()Z

+###io/trino/execution/GrantRolesTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/GrantRoles;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/GrantRoles;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/GrantRoles;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@362
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
-#<init>()V
@363
+#<init>()V
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/GrantRoles;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/GrantRoles;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/CommitTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Commit;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Commit;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Commit;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/transaction/TransactionManager;)V
+#execute(Lio/trino/sql/tree/Commit;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/Commit;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/SqlTaskExecution
@351
+#getTaskId()Lio/trino/execution/TaskId;
+#getTaskContext()Lio/trino/operator/TaskContext;
+#addSources(Ljava/util/List;)V
+#getNoMoreSplits()Ljava/util/Set;
+#toString()Ljava/lang/String;
@369
+#addSplitAssignments(Ljava/util/List;)V
-#addSources(Ljava/util/List;)V
@395
+#<init>(Lio/trino/execution/TaskStateMachine;Lio/trino/operator/TaskContext;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/sql/planner/LocalExecutionPlanner$LocalExecutionPlan;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Ljava/util/concurrent/Executor;)V
+#start()V

+###io/trino/execution/RevokeRolesTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/RevokeRoles;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/RevokeRoles;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/RevokeRoles;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@362
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
-#<init>()V
@363
+#<init>()V
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;)V
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/RevokeRoles;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/RevokeRoles;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/SetSchemaAuthorizationTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetSchemaAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/SetSchemaAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/SetSchemaAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/SetSchemaAuthorization;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/SetSchemaAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/QueryPerformanceFetcher
@351
+#getQueryInfo(Lio/trino/spi/QueryId;)Lio/trino/execution/QueryInfo;

+###io/trino/execution/SqlQueryManager
@351
+#<init>(Lio/trino/memory/ClusterMemoryManager;Lio/trino/execution/QueryManagerConfig;)V
+#start()V
+#stop()V
+#getQueries()Ljava/util/List;
+#addOutputInfoListener(Lio/trino/spi/QueryId;Ljava/util/function/Consumer;)V
+#addStateChangeListener(Lio/trino/spi/QueryId;Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getStateChange(Lio/trino/spi/QueryId;Lio/trino/execution/QueryState;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getQueryInfo(Lio/trino/spi/QueryId;)Lio/trino/server/BasicQueryInfo;
+#getFullQueryInfo(Lio/trino/spi/QueryId;)Lio/trino/execution/QueryInfo;
+#getQuerySession(Lio/trino/spi/QueryId;)Lio/trino/Session;
+#getQuerySlug(Lio/trino/spi/QueryId;)Lio/trino/server/protocol/Slug;
+#getQueryPlan(Lio/trino/spi/QueryId;)Lio/trino/sql/planner/Plan;
+#addFinalQueryInfoListener(Lio/trino/spi/QueryId;Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getQueryState(Lio/trino/spi/QueryId;)Lio/trino/execution/QueryState;
+#recordHeartbeat(Lio/trino/spi/QueryId;)V
+#createQuery(Lio/trino/execution/QueryExecution;)V
+#failQuery(Lio/trino/spi/QueryId;Ljava/lang/Throwable;)V
+#cancelQuery(Lio/trino/spi/QueryId;)V
+#cancelStage(Lio/trino/execution/StageId;)V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#getManagementExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
@366
+#outputTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@391
+#resultsConsumed(Lio/trino/spi/QueryId;)V
@396
+#setOutputInfoListener(Lio/trino/spi/QueryId;Ljava/util/function/Consumer;)V
-#addOutputInfoListener(Lio/trino/spi/QueryId;Ljava/util/function/Consumer;)V

+###io/trino/execution/executor/MultilevelSplitQueue
@351
+#<init>(Lio/trino/execution/TaskManagerConfig;)V
+#<init>(D)V
+#offer(Lio/trino/execution/executor/PrioritizedSplitRunner;)V
+#take()Lio/trino/execution/executor/PrioritizedSplitRunner;
+#updatePriority(Lio/trino/execution/executor/Priority;JJ)Lio/trino/execution/executor/Priority;
+#remove(Lio/trino/execution/executor/PrioritizedSplitRunner;)V
+#removeAll(Ljava/util/Collection;)V
+#getLevelMinPriority(IJ)J
+#size()I
+#computeLevel(J)I
+#getLevel0Time()J
+#getLevel1Time()J
+#getLevel2Time()J
+#getLevel3Time()J
+#getLevel4Time()J
+#getSelectedCountLevel0()Lio/airlift/stats/CounterStat;
+#getSelectedCountLevel1()Lio/airlift/stats/CounterStat;
+#getSelectedCountLevel2()Lio/airlift/stats/CounterStat;
+#getSelectedCountLevel3()Lio/airlift/stats/CounterStat;
+#getSelectedCountLevel4()Lio/airlift/stats/CounterStat;

+###io/trino/execution/executor/TaskExecutor
@351
+#<init>(Lio/trino/execution/TaskManagerConfig;Lio/trino/version/EmbedVersion;Lio/trino/execution/executor/MultilevelSplitQueue;)V
+#<init>(IIIILcom/google/common/base/Ticker;)V
+#<init>(IIIILio/trino/execution/executor/MultilevelSplitQueue;Lcom/google/common/base/Ticker;)V
+#<init>(IIIILio/trino/version/EmbedVersion;Lio/trino/execution/executor/MultilevelSplitQueue;Lcom/google/common/base/Ticker;)V
+#start()V
+#stop()V
+#toString()Ljava/lang/String;
+#addTask(Lio/trino/execution/TaskId;Ljava/util/function/DoubleSupplier;ILio/airlift/units/Duration;Ljava/util/OptionalInt;)Lio/trino/execution/executor/TaskHandle;
+#removeTask(Lio/trino/execution/executor/TaskHandle;)V
+#enqueueSplits(Lio/trino/execution/executor/TaskHandle;ZLjava/util/List;)Ljava/util/List;
+#getTasks()I
+#getRunnerThreads()I
+#getMinimumNumberOfDrivers()I
+#getTotalSplits()I
+#getIntermediateSplits()I
+#getWaitingSplits()I
+#getRunningSplits()I
+#getBlockedSplits()I
+#getCompletedTasksLevel0()J
+#getCompletedTasksLevel1()J
+#getCompletedTasksLevel2()J
+#getCompletedTasksLevel3()J
+#getCompletedTasksLevel4()J
+#getCompletedSplitsLevel0()J
+#getCompletedSplitsLevel1()J
+#getCompletedSplitsLevel2()J
+#getCompletedSplitsLevel3()J
+#getCompletedSplitsLevel4()J
+#getRunningTasksLevel0()J
+#getRunningTasksLevel1()J
+#getRunningTasksLevel2()J
+#getRunningTasksLevel3()J
+#getRunningTasksLevel4()J
+#getSplitQueuedTime()Lio/airlift/stats/TimeStat;
+#getSplitWallTime()Lio/airlift/stats/TimeStat;
+#getBlockedQuantaWallTime()Lio/airlift/stats/TimeStat;
+#getUnblockedQuantaWallTime()Lio/airlift/stats/TimeStat;
+#getLeafSplitScheduledTime()Lio/airlift/stats/TimeDistribution;
+#getIntermediateSplitScheduledTime()Lio/airlift/stats/TimeDistribution;
+#getLeafSplitWallTime()Lio/airlift/stats/TimeDistribution;
+#getIntermediateSplitWallTime()Lio/airlift/stats/TimeDistribution;
+#getLeafSplitWaitTime()Lio/airlift/stats/TimeDistribution;
+#getIntermediateSplitWaitTime()Lio/airlift/stats/TimeDistribution;
+#getLeafSplitCpuTime()Lio/airlift/stats/TimeDistribution;
+#getIntermediateSplitCpuTime()Lio/airlift/stats/TimeDistribution;
+#getGlobalScheduledTimeMicros()Lio/airlift/stats/CounterStat;
+#getGlobalCpuTimeMicros()Lio/airlift/stats/CounterStat;
+#getMaxActiveSplitsInfo()Ljava/lang/String;
+#getRunAwaySplitCount()J
+#getProcessorExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
@357
+#<init>(Lio/trino/execution/TaskManagerConfig;Lio/trino/spi/VersionEmbedder;Lio/trino/execution/executor/MultilevelSplitQueue;)V
+#<init>(IIIILio/trino/spi/VersionEmbedder;Lio/trino/execution/executor/MultilevelSplitQueue;Lcom/google/common/base/Ticker;)V
-#<init>(Lio/trino/execution/TaskManagerConfig;Lio/trino/version/EmbedVersion;Lio/trino/execution/executor/MultilevelSplitQueue;)V
-#<init>(IIIILio/trino/version/EmbedVersion;Lio/trino/execution/executor/MultilevelSplitQueue;Lcom/google/common/base/Ticker;)V
@391
+#<init>(IIIILio/airlift/units/Duration;Lio/trino/spi/VersionEmbedder;Lio/trino/execution/executor/MultilevelSplitQueue;Lcom/google/common/base/Ticker;)V
+#getStuckSplitTaskIds(Lio/airlift/units/Duration;Ljava/util/function/Predicate;)Ljava/util/Set;
-#<init>(IIIILio/trino/spi/VersionEmbedder;Lio/trino/execution/executor/MultilevelSplitQueue;Lcom/google/common/base/Ticker;)V
@394
+#getLeafSplitsSize()Lio/airlift/stats/DistributionStat;

+###io/trino/execution/executor/Priority
@351
+#<init>(IJ)V
+#getLevel()I
+#getLevelPriority()J
+#toString()Ljava/lang/String;

+###io/trino/execution/executor/PrioritizedSplitRunner
@351
+#getTaskHandle()Lio/trino/execution/executor/TaskHandle;
+#getFinishedFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#isDestroyed()Z
+#destroy()V
+#getCreatedNanos()J
+#isFinished()Z
+#getScheduledNanos()J
+#getCpuTimeNanos()J
+#getWaitNanos()J
+#process()Lcom/google/common/util/concurrent/ListenableFuture;
+#setReady()V
+#updateLevelPriority()Z
+#resetLevelPriority()V
+#compareTo(Lio/trino/execution/executor/PrioritizedSplitRunner;)I
+#getSplitId()I
+#getPriority()Lio/trino/execution/executor/Priority;
+#getInfo()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###io/trino/execution/executor/TaskHandle
@351
+#<init>(Lio/trino/execution/TaskId;Lio/trino/execution/executor/MultilevelSplitQueue;Ljava/util/function/DoubleSupplier;ILio/airlift/units/Duration;Ljava/util/OptionalInt;)V
+#addScheduledNanos(J)Lio/trino/execution/executor/Priority;
+#resetLevelPriority()Lio/trino/execution/executor/Priority;
+#isDestroyed()Z
+#getPriority()Lio/trino/execution/executor/Priority;
+#getTaskId()Lio/trino/execution/TaskId;
+#getMaxDriversPerTask()Ljava/util/OptionalInt;
+#destroy()Ljava/util/List;
+#enqueueSplit(Lio/trino/execution/executor/PrioritizedSplitRunner;)V
+#recordIntermediateSplit(Lio/trino/execution/executor/PrioritizedSplitRunner;)V
+#getScheduledNanos()J
+#pollNextSplit()Lio/trino/execution/executor/PrioritizedSplitRunner;
+#splitComplete(Lio/trino/execution/executor/PrioritizedSplitRunner;)V
+#getNextSplitId()I
+#toString()Ljava/lang/String;
@406
+#enqueueSplit(Lio/trino/execution/executor/PrioritizedSplitRunner;)Z
+#recordIntermediateSplit(Lio/trino/execution/executor/PrioritizedSplitRunner;)Z
-#enqueueSplit(Lio/trino/execution/executor/PrioritizedSplitRunner;)V
-#recordIntermediateSplit(Lio/trino/execution/executor/PrioritizedSplitRunner;)V

+###io/trino/execution/SetTableAuthorizationTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetTableAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/SetTableAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/SetTableAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/SetTableAuthorization;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/SetTableAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/QueryState
@351
+#values()[Lio/trino/execution/QueryState;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/QueryState;
+#isDone()Z

+###io/trino/execution/TableInfo
@351
+#<init>(Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/predicate/TupleDomain;)V
+#getTableName()Lio/trino/metadata/QualifiedObjectName;
+#getPredicate()Lio/trino/spi/predicate/TupleDomain;
@394
+#<init>(Ljava/util/Optional;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/predicate/TupleDomain;)V
+#getConnectorName()Ljava/util/Optional;
-#<init>(Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/predicate/TupleDomain;)V
@401
+#extract(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/PlanFragment;)Ljava/util/Map;

+###io/trino/execution/DataDefinitionExecution$DataDefinitionExecutionFactory
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;)V
+#createQueryExecution(Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/execution/QueryStateMachine;Lio/trino/server/protocol/Slug;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/execution/DataDefinitionExecution;
+#createQueryExecution(Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/execution/QueryStateMachine;Lio/trino/server/protocol/Slug;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/execution/QueryExecution;
@365
+#<init>(Ljava/util/Map;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;)V

+###io/trino/execution/TaskStateMachine
@351
+#<init>(Lio/trino/execution/TaskId;Ljava/util/concurrent/Executor;)V
+#getCreatedTime()Lorg/joda/time/DateTime;
+#getTaskId()Lio/trino/execution/TaskId;
+#getState()Lio/trino/execution/TaskState;
+#getStateChange(Lio/trino/execution/TaskState;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getFailureCauses()Ljava/util/concurrent/LinkedBlockingQueue;
+#transitionToFlushing()V
+#finished()V
+#cancel()V
+#abort()V
+#failed(Ljava/lang/Throwable;)V
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#toString()Ljava/lang/String;
@366
+#addSourceTaskFailureListener(Lio/trino/execution/TaskFailureListener;)V
+#sourceTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V

+###io/trino/execution/DropMaterializedViewTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/DropMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/DropMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/DropMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/DropMaterializedView;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/DropMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/SplitRunner
@351
+#isFinished()Z
+#processFor(Lio/airlift/units/Duration;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getInfo()Ljava/lang/String;
+#close()V

+###io/trino/execution/MemoryRevokingScheduler
@351
+#<init>(Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/SqlTaskManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/sql/analyzer/FeaturesConfig;)V
+#start()V
+#stop()V
@365
+#<init>(Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/SqlTaskManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/FeaturesConfig;)V
-#<init>(Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/SqlTaskManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/sql/analyzer/FeaturesConfig;)V

+###io/trino/execution/RemoteTask
@351
+#getTaskId()Lio/trino/execution/TaskId;
+#getNodeId()Ljava/lang/String;
+#getTaskInfo()Lio/trino/execution/TaskInfo;
+#getTaskStatus()Lio/trino/execution/TaskStatus;
+#start()V
+#addSplits(Lcom/google/common/collect/Multimap;)V
+#noMoreSplits(Lio/trino/sql/planner/plan/PlanNodeId;)V
+#noMoreSplits(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/Lifespan;)V
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addFinalTaskInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#whenSplitQueueHasSpace(I)Lcom/google/common/util/concurrent/ListenableFuture;
+#cancel()V
+#abort()V
+#getPartitionedSplitCount()I
+#getQueuedPartitionedSplitCount()I
@354
+#getUnacknowledgedPartitionedSplitCount()I
@364
+#whenSplitQueueHasSpace(J)Lcom/google/common/util/concurrent/ListenableFuture;
+#getPartitionedSplitsInfo()Lio/trino/execution/PartitionedSplitsInfo;
+#getQueuedPartitionedSplitsInfo()Lio/trino/execution/PartitionedSplitsInfo;
-#whenSplitQueueHasSpace(I)Lcom/google/common/util/concurrent/ListenableFuture;
-#getPartitionedSplitCount()I
-#getQueuedPartitionedSplitCount()I
@366
+#fail(Ljava/lang/Throwable;)V
@373
+#failRemotely(Ljava/lang/Throwable;)V
@388
-#noMoreSplits(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/Lifespan;)V
@398
+#retrieveAndDropSpoolingOutputStats()Lio/trino/execution/buffer/SpoolingOutputStats$Snapshot;

+###io/trino/execution/UseTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Use;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Use;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Use;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;)V
+#execute(Lio/trino/sql/tree/Use;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/Use;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@405
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/execution/SqlTaskManager
@351
+#<init>(Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;)V
+#updateMemoryPoolAssignments(Lio/trino/memory/MemoryPoolAssignmentsRequest;)V
+#start()V
+#close()V
+#getIoStats()Lio/trino/execution/SqlTaskIoStats;
+#getTaskNotificationExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#getFailedTasks()Lio/airlift/stats/CounterStat;
+#getAllTasks()Ljava/util/List;
+#getAllTaskInfo()Ljava/util/List;
+#getTaskInfo(Lio/trino/execution/TaskId;)Lio/trino/execution/TaskInfo;
+#getTaskStatus(Lio/trino/execution/TaskId;)Lio/trino/execution/TaskStatus;
+#getTaskInfo(Lio/trino/execution/TaskId;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#getTaskInstanceId(Lio/trino/execution/TaskId;)Ljava/lang/String;
+#getTaskStatus(Lio/trino/execution/TaskId;J)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledgeAndGetNewDynamicFilterDomains(Lio/trino/execution/TaskId;J)Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;
+#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;)Lio/trino/execution/TaskInfo;
+#getTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledgeTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abortTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
+#cancelTask(Lio/trino/execution/TaskId;)Lio/trino/execution/TaskInfo;
+#abortTask(Lio/trino/execution/TaskId;)Lio/trino/execution/TaskInfo;
+#removeOldTasks()V
+#failAbandonedTasks()V
+#addStateChangeListener(Lio/trino/execution/TaskId;Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getQueryContext(Lio/trino/spi/QueryId;)Lio/trino/memory/QueryContext;
@352
+#<init>(Lio/trino/version/EmbedVersion;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;)V
-#<init>(Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;)V
@357
+#<init>(Lio/trino/spi/VersionEmbedder;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;)V
-#<init>(Lio/trino/version/EmbedVersion;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;)V
@360
+#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
-#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;)Lio/trino/execution/TaskInfo;
@362
+#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
-#updateTask(Lio/trino/Session;Lio/trino/execution/TaskId;Ljava/util/Optional;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffers;Ljava/util/OptionalInt;Ljava/util/Map;)Lio/trino/execution/TaskInfo;
@366
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)Lio/trino/execution/TaskInfo;
+#addSourceTaskFailureListener(Lio/trino/execution/TaskId;Lio/trino/execution/TaskFailureListener;)V
+#getTraceToken(Lio/trino/execution/TaskId;)Ljava/util/Optional;
@369
+#<init>(Lio/trino/spi/VersionEmbedder;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#<init>(Lio/trino/spi/VersionEmbedder;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;)V
-#removeOldTasks()V
@370
+#destroyTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
-#abortTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
@372
-#updateMemoryPoolAssignments(Lio/trino/memory/MemoryPoolAssignmentsRequest;)V
-#failAbandonedTasks()V
@391
+#<init>(Lio/trino/spi/VersionEmbedder;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;Lio/trino/exchange/ExchangeManagerRegistry;Ljava/util/function/Predicate;)V
+#failStuckSplitTasks()V
@393
+#<init>(Lio/trino/spi/VersionEmbedder;Lio/trino/connector/ConnectorServicesProvider;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;Lio/trino/exchange/ExchangeManagerRegistry;)V
+#<init>(Lio/trino/spi/VersionEmbedder;Lio/trino/connector/ConnectorServicesProvider;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;Lio/trino/exchange/ExchangeManagerRegistry;Ljava/util/function/Predicate;)V
-#<init>(Lio/trino/spi/VersionEmbedder;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#<init>(Lio/trino/spi/VersionEmbedder;Lio/trino/sql/planner/LocalExecutionPlanner;Lio/trino/execution/LocationFactory;Lio/trino/execution/executor/TaskExecutor;Lio/trino/event/SplitMonitor;Lio/airlift/node/NodeInfo;Lio/trino/memory/LocalMemoryManager;Lio/trino/execution/TaskManagementExecutor;Lio/trino/execution/TaskManagerConfig;Lio/trino/memory/NodeMemoryConfig;Lio/trino/spiller/LocalSpillManager;Lio/trino/spiller/NodeSpillConfig;Lio/airlift/stats/GcMonitor;Lio/trino/exchange/ExchangeManagerRegistry;Ljava/util/function/Predicate;)V
@398
+#getTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledgeTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroyTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
-#getTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
-#acknowledgeTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroyTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)Lio/trino/execution/TaskInfo;
@407
+#getTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lio/trino/execution/SqlTaskManager$SqlTaskWithResults;
-#getTaskInstanceId(Lio/trino/execution/TaskId;)Ljava/lang/String;
-#getTaskResults(Lio/trino/execution/TaskId;Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
@408
+#pruneCatalogs(Ljava/util/Set;)V

+###io/trino/execution/MemoryTrackingRemoteTaskFactory
@351
+#<init>(Lio/trino/execution/RemoteTaskFactory;Lio/trino/execution/QueryStateMachine;)V
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Z)Lio/trino/execution/RemoteTask;
@360
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Z)Lio/trino/execution/RemoteTask;
@362
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
@379
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Ljava/util/Optional;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;

+###io/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains
@351
+#<init>(JLjava/util/Map;)V
+#getVersion()J
+#getDynamicFilterDomains()Ljava/util/Map;

+###io/trino/execution/RemoteTaskFactory
@351
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Z)Lio/trino/execution/RemoteTask;
@360
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Z)Lio/trino/execution/RemoteTask;
@362
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;
@379
+#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Ljava/util/Optional;Z)Lio/trino/execution/RemoteTask;
-#createRemoteTask(Lio/trino/Session;Lio/trino/execution/TaskId;Lio/trino/metadata/InternalNode;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/execution/NodeTaskMap$PartitionedSplitCountTracker;Ljava/util/Set;Z)Lio/trino/execution/RemoteTask;

+###io/trino/execution/TaskInfo
@351
+#<init>(Lio/trino/execution/TaskStatus;Lorg/joda/time/DateTime;Lio/trino/execution/buffer/OutputBufferInfo;Ljava/util/Set;Lio/trino/operator/TaskStats;Z)V
+#getTaskStatus()Lio/trino/execution/TaskStatus;
+#getLastHeartbeat()Lorg/joda/time/DateTime;
+#getOutputBuffers()Lio/trino/execution/buffer/OutputBufferInfo;
+#getNoMoreSplits()Ljava/util/Set;
+#getStats()Lio/trino/operator/TaskStats;
+#isNeedsPlan()Z
+#summarize()Lio/trino/execution/TaskInfo;
+#toString()Ljava/lang/String;
+#createInitialTask(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;Lio/trino/operator/TaskStats;)Lio/trino/execution/TaskInfo;
+#withTaskStatus(Lio/trino/execution/TaskStatus;)Lio/trino/execution/TaskInfo;
@379
+#<init>(Lio/trino/execution/TaskStatus;Lorg/joda/time/DateTime;Lio/trino/execution/buffer/OutputBufferInfo;Ljava/util/Set;Lio/trino/operator/TaskStats;Ljava/util/Optional;Z)V
+#getEstimatedMemory()Ljava/util/Optional;
+#withEstimatedMemory(Lio/airlift/units/DataSize;)Lio/trino/execution/TaskInfo;
-#<init>(Lio/trino/execution/TaskStatus;Lorg/joda/time/DateTime;Lio/trino/execution/buffer/OutputBufferInfo;Ljava/util/Set;Lio/trino/operator/TaskStats;Z)V
@398
+#pruneSpoolingOutputStats()Lio/trino/execution/TaskInfo;
+#createInitialTask(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;Ljava/util/Optional;Lio/trino/operator/TaskStats;)Lio/trino/execution/TaskInfo;
-#createInitialTask(Lio/trino/execution/TaskId;Ljava/net/URI;Ljava/lang/String;Ljava/util/List;Lio/trino/operator/TaskStats;)Lio/trino/execution/TaskInfo;

+###io/trino/execution/SqlQueryExecution$SqlQueryExecutionFactory
@351
+#createQueryExecution(Lio/trino/execution/QueryPreparer$PreparedQuery;Lio/trino/execution/QueryStateMachine;Lio/trino/server/protocol/Slug;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/execution/QueryExecution;

+###io/trino/execution/QueryStateMachine
@351
+#begin(Ljava/lang/String;Ljava/util/Optional;Lio/trino/Session;Ljava/net/URI;Lio/trino/spi/resourcegroups/ResourceGroupId;ZLio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Ljava/util/concurrent/Executor;Lio/trino/metadata/Metadata;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Optional;)Lio/trino/execution/QueryStateMachine;
+#getQueryId()Lio/trino/spi/QueryId;
+#getSession()Lio/trino/Session;
+#getPeakUserMemoryInBytes()J
+#getPeakRevocableMemoryInBytes()J
+#getPeakNonRevocableMemoryInBytes()J
+#getPeakTotalMemoryInBytes()J
+#getPeakTaskUserMemory()J
+#getPeakTaskRevocableMemory()J
+#getPeakTaskTotalMemory()J
+#getWarningCollector()Lio/trino/execution/warnings/WarningCollector;
+#updateMemoryUsage(JJJJJJ)V
+#getBasicQueryInfo(Ljava/util/Optional;)Lio/trino/server/BasicQueryInfo;
+#getMemoryPool()Lio/trino/memory/VersionedMemoryPoolId;
+#setMemoryPool(Lio/trino/memory/VersionedMemoryPoolId;)V
+#addOutputInfoListener(Ljava/util/function/Consumer;)V
+#setColumns(Ljava/util/List;Ljava/util/List;)V
+#updateOutputLocations(Ljava/util/Set;Z)V
+#setInputs(Ljava/util/List;)V
+#setOutput(Ljava/util/Optional;)V
+#setReferencedTables(Ljava/util/List;)V
+#setRoutines(Ljava/util/List;)V
+#setDynamicFiltersStatsSupplier(Ljava/util/function/Supplier;)V
+#getSetSessionProperties()Ljava/util/Map;
+#setSetCatalog(Ljava/lang/String;)V
+#setSetSchema(Ljava/lang/String;)V
+#setSetPath(Ljava/lang/String;)V
+#getSetPath()Ljava/lang/String;
+#addSetSessionProperties(Ljava/lang/String;Ljava/lang/String;)V
+#addSetRole(Ljava/lang/String;Lio/trino/spi/security/SelectedRole;)V
+#getResetSessionProperties()Ljava/util/Set;
+#addResetSessionProperties(Ljava/lang/String;)V
+#getAddedPreparedStatements()Ljava/util/Map;
+#getDeallocatedPreparedStatements()Ljava/util/Set;
+#addPreparedStatement(Ljava/lang/String;Ljava/lang/String;)V
+#removePreparedStatement(Ljava/lang/String;)V
+#setStartedTransactionId(Lio/trino/transaction/TransactionId;)V
+#clearTransactionId()V
+#setUpdateType(Ljava/lang/String;)V
+#getQueryState()Lio/trino/execution/QueryState;
+#isDone()Z
+#transitionToWaitingForResources()Z
+#transitionToDispatching()Z
+#transitionToPlanning()Z
+#transitionToStarting()Z
+#transitionToRunning()Z
+#transitionToFinishing()Z
+#transitionToFailed(Ljava/lang/Throwable;)Z
+#transitionToCanceled()Z
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addQueryInfoStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getStateChange(Lio/trino/execution/QueryState;)Lcom/google/common/util/concurrent/ListenableFuture;
+#recordHeartbeat()V
+#beginAnalysis()V
+#endAnalysis()V
+#getCreateTime()Lorg/joda/time/DateTime;
+#getExecutionStartTime()Ljava/util/Optional;
+#getLastHeartbeat()Lorg/joda/time/DateTime;
+#getEndTime()Ljava/util/Optional;
+#getFailureInfo()Ljava/util/Optional;
+#getFinalQueryInfo()Ljava/util/Optional;
+#updateQueryInfo(Ljava/util/Optional;)Lio/trino/execution/QueryInfo;
+#pruneQueryInfo()V
@356
+#getPlanningTime()Ljava/util/Optional;
@366
+#addOutputTaskFailureListener(Lio/trino/execution/TaskFailureListener;)V
+#outputTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#updateOutputLocations(Ljava/util/Map;Z)V
-#updateOutputLocations(Ljava/util/Set;Z)V
@369
-#getPeakNonRevocableMemoryInBytes()J
@371
+#begin(Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Lio/trino/Session;Ljava/net/URI;Lio/trino/spi/resourcegroups/ResourceGroupId;ZLio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Ljava/util/concurrent/Executor;Lio/trino/metadata/Metadata;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Optional;)Lio/trino/execution/QueryStateMachine;
-#begin(Ljava/lang/String;Ljava/util/Optional;Lio/trino/Session;Ljava/net/URI;Lio/trino/spi/resourcegroups/ResourceGroupId;ZLio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Ljava/util/concurrent/Executor;Lio/trino/metadata/Metadata;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Optional;)Lio/trino/execution/QueryStateMachine;
@372
-#getMemoryPool()Lio/trino/memory/VersionedMemoryPoolId;
-#setMemoryPool(Lio/trino/memory/VersionedMemoryPoolId;)V
@391
+#resultsConsumed()V
@394
+#updateInputsForQueryResults(Ljava/util/List;Z)V
-#updateOutputLocations(Ljava/util/Map;Z)V
@396
+#setOutputInfoListener(Ljava/util/function/Consumer;)V
-#addOutputInfoListener(Ljava/util/function/Consumer;)V
@403
+#begin(Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Lio/trino/Session;Ljava/net/URI;Lio/trino/spi/resourcegroups/ResourceGroupId;ZLio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Ljava/util/concurrent/Executor;Lio/trino/metadata/Metadata;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Optional;Z)Lio/trino/execution/QueryStateMachine;
-#begin(Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Lio/trino/Session;Ljava/net/URI;Lio/trino/spi/resourcegroups/ResourceGroupId;ZLio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Ljava/util/concurrent/Executor;Lio/trino/metadata/Metadata;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Optional;)Lio/trino/execution/QueryStateMachine;
@405
+#begin(Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Lio/trino/Session;Ljava/net/URI;Lio/trino/spi/resourcegroups/ResourceGroupId;ZLio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Ljava/util/concurrent/Executor;Lio/trino/metadata/Metadata;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Optional;ZLio/trino/client/NodeVersion;)Lio/trino/execution/QueryStateMachine;
-#begin(Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Lio/trino/Session;Ljava/net/URI;Lio/trino/spi/resourcegroups/ResourceGroupId;ZLio/trino/transaction/TransactionManager;Lio/trino/security/AccessControl;Ljava/util/concurrent/Executor;Lio/trino/metadata/Metadata;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Optional;Z)Lio/trino/execution/QueryStateMachine;
@408
+#getStateMachineExecutor()Ljava/util/concurrent/Executor;

+###io/trino/execution/ScheduledSplit
@351
+#<init>(JLio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/Split;)V
+#getSequenceId()J
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getSplit()Lio/trino/metadata/Split;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/execution/SetViewAuthorizationTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetViewAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/SetViewAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/SetViewAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/SetViewAuthorization;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/SetViewAuthorization;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/FeaturesConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V

+###io/trino/execution/DynamicFilterConfig
@351
+#<init>()V
+#isEnableDynamicFiltering()Z
+#setEnableDynamicFiltering(Z)Lio/trino/execution/DynamicFilterConfig;
+#isEnableLargeDynamicFilters()Z
+#setEnableLargeDynamicFilters(Z)Lio/trino/execution/DynamicFilterConfig;
+#getServiceThreadCount()I
+#setServiceThreadCount(I)Lio/trino/execution/DynamicFilterConfig;
+#getSmallBroadcastMaxDistinctValuesPerDriver()I
+#setSmallBroadcastMaxDistinctValuesPerDriver(I)Lio/trino/execution/DynamicFilterConfig;
+#getSmallBroadcastMaxSizePerDriver()Lio/airlift/units/DataSize;
+#setSmallBroadcastMaxSizePerDriver(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
+#getSmallBroadcastRangeRowLimitPerDriver()I
+#setSmallBroadcastRangeRowLimitPerDriver(I)Lio/trino/execution/DynamicFilterConfig;
+#getSmallPartitionedMaxDistinctValuesPerDriver()I
+#setSmallPartitionedMaxDistinctValuesPerDriver(I)Lio/trino/execution/DynamicFilterConfig;
+#getSmallPartitionedMaxSizePerDriver()Lio/airlift/units/DataSize;
+#setSmallPartitionedMaxSizePerDriver(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
+#getSmallPartitionedRangeRowLimitPerDriver()I
+#setSmallPartitionedRangeRowLimitPerDriver(I)Lio/trino/execution/DynamicFilterConfig;
+#getLargeBroadcastMaxDistinctValuesPerDriver()I
+#setLargeBroadcastMaxDistinctValuesPerDriver(I)Lio/trino/execution/DynamicFilterConfig;
+#getLargeBroadcastMaxSizePerDriver()Lio/airlift/units/DataSize;
+#setLargeBroadcastMaxSizePerDriver(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
+#getLargeBroadcastRangeRowLimitPerDriver()I
+#setLargeBroadcastRangeRowLimitPerDriver(I)Lio/trino/execution/DynamicFilterConfig;
+#getLargePartitionedMaxDistinctValuesPerDriver()I
+#setLargePartitionedMaxDistinctValuesPerDriver(I)Lio/trino/execution/DynamicFilterConfig;
+#getLargePartitionedMaxSizePerDriver()Lio/airlift/units/DataSize;
+#setLargePartitionedMaxSizePerDriver(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
+#getLargePartitionedRangeRowLimitPerDriver()I
+#setLargePartitionedRangeRowLimitPerDriver(I)Lio/trino/execution/DynamicFilterConfig;
@360
+#isEnableCoordinatorDynamicFiltersDistribution()Z
+#setEnableCoordinatorDynamicFiltersDistribution(Z)Lio/trino/execution/DynamicFilterConfig;
@388
+#getSmallBroadcastMaxSizePerOperator()Lio/airlift/units/DataSize;
+#setSmallBroadcastMaxSizePerOperator(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
+#getSmallPartitionedMaxSizePerOperator()Lio/airlift/units/DataSize;
+#setSmallPartitionedMaxSizePerOperator(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
+#getLargeBroadcastMaxSizePerOperator()Lio/airlift/units/DataSize;
+#setLargeBroadcastMaxSizePerOperator(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
+#getLargePartitionedMaxSizePerOperator()Lio/airlift/units/DataSize;
+#setLargePartitionedMaxSizePerOperator(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
@391
+#getSmallMaxSizePerFilter()Lio/airlift/units/DataSize;
+#setSmallMaxSizePerFilter(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
+#getLargeMaxSizePerFilter()Lio/airlift/units/DataSize;
+#setLargeMaxSizePerFilter(Lio/airlift/units/DataSize;)Lio/trino/execution/DynamicFilterConfig;
-#getServiceThreadCount()I
-#setServiceThreadCount(I)Lio/trino/execution/DynamicFilterConfig;

+###io/trino/execution/QueryExecution$QueryOutputInfo
@351
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Set;Z)V
+#getColumnNames()Ljava/util/List;
+#getColumnTypes()Ljava/util/List;
+#getBufferLocations()Ljava/util/Set;
+#isNoMoreBufferLocations()Z
@366
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;Z)V
+#getBufferLocations()Ljava/util/Map;
-#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Set;Z)V
-#getBufferLocations()Ljava/util/Set;
@394
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Z)V
+#getInputs()Ljava/util/List;
+#isNoMoreInputs()Z
-#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Map;Z)V
-#getBufferLocations()Ljava/util/Map;
-#isNoMoreBufferLocations()Z
@396
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/Queue;Z)V
+#drainInputs(Ljava/util/function/Consumer;)V
-#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Z)V
-#getInputs()Ljava/util/List;

+###io/trino/execution/warnings/DefaultWarningCollector
@351
+#<init>(Lio/trino/execution/warnings/WarningCollectorConfig;)V
+#add(Lio/trino/spi/TrinoWarning;)V
+#getWarnings()Ljava/util/List;

+###io/trino/execution/warnings/WarningCollectorModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#createWarningCollectorFactory(Lio/trino/execution/warnings/WarningCollectorConfig;)Lio/trino/execution/warnings/WarningCollectorFactory;

+###io/trino/execution/warnings/WarningCollectorConfig
@351
+#<init>()V
+#setMaxWarnings(I)Lio/trino/execution/warnings/WarningCollectorConfig;
+#getMaxWarnings()I

+###io/trino/execution/warnings/WarningCollectorFactory
@351
+#create()Lio/trino/execution/warnings/WarningCollector;

+###io/trino/execution/warnings/WarningCollector
@351
+#add(Lio/trino/spi/TrinoWarning;)V
+#getWarnings()Ljava/util/List;

+###io/trino/execution/buffer/PagesSerde
@351
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#newContext()Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;
+#serialize(Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;Lio/trino/spi/Page;)Lio/trino/execution/buffer/SerializedPage;
+#deserialize(Lio/trino/execution/buffer/SerializedPage;)Lio/trino/spi/Page;
+#deserialize(Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;Lio/trino/execution/buffer/SerializedPage;)Lio/trino/spi/Page;
@368
+#serialize(Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;Lio/trino/spi/Page;)Lio/airlift/slice/Slice;
+#getSerializedPagePositionCount(Lio/airlift/slice/Slice;)I
+#isSerializedPageEncrypted(Lio/airlift/slice/Slice;)Z
+#isSerializedPageCompressed(Lio/airlift/slice/Slice;)Z
+#deserialize(Lio/airlift/slice/Slice;)Lio/trino/spi/Page;
+#deserialize(Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;Lio/airlift/slice/Slice;)Lio/trino/spi/Page;
+#readSerializedPage(Lio/airlift/slice/SliceInput;)Lio/airlift/slice/Slice;
-#serialize(Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;Lio/trino/spi/Page;)Lio/trino/execution/buffer/SerializedPage;
-#deserialize(Lio/trino/execution/buffer/SerializedPage;)Lio/trino/spi/Page;
-#deserialize(Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;Lio/trino/execution/buffer/SerializedPage;)Lio/trino/spi/Page;
@374
+#readSerializedPage(Lio/airlift/slice/Slice;Ljava/io/InputStream;)Lio/airlift/slice/Slice;
-#readSerializedPage(Lio/airlift/slice/SliceInput;)Lio/airlift/slice/Slice;
@401
+#getSerializedPageUncompressedSizeInBytes(Lio/airlift/slice/Slice;)I
@403
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;ZLjava/util/Optional;)V
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;ZLjava/util/Optional;I)V
+#serialize(Lio/trino/spi/Page;)Lio/airlift/slice/Slice;
-#<init>(Lio/trino/spi/block/BlockEncodingSerde;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
-#newContext()Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;
-#serialize(Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;Lio/trino/spi/Page;)Lio/airlift/slice/Slice;
-#deserialize(Lio/trino/execution/buffer/PagesSerde$PagesSerdeContext;Lio/airlift/slice/Slice;)Lio/trino/spi/Page;
@405
-###io/trino/execution/buffer/PagesSerde

+###io/trino/execution/buffer/OutputBuffers
@351
+#createInitialEmptyOutputBuffers(Lio/trino/execution/buffer/OutputBuffers$BufferType;)Lio/trino/execution/buffer/OutputBuffers;
+#createInitialEmptyOutputBuffers(Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/execution/buffer/OutputBuffers;
+#<init>(Lio/trino/execution/buffer/OutputBuffers$BufferType;JZLjava/util/Map;)V
+#getType()Lio/trino/execution/buffer/OutputBuffers$BufferType;
+#getVersion()J
+#isNoMoreBufferIds()Z
+#getBuffers()Ljava/util/Map;
+#checkValidTransition(Lio/trino/execution/buffer/OutputBuffers;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#withBuffer(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;I)Lio/trino/execution/buffer/OutputBuffers;
+#withBuffers(Ljava/util/Map;)Lio/trino/execution/buffer/OutputBuffers;
+#withNoMoreBufferIds()Lio/trino/execution/buffer/OutputBuffers;
@369
+#createSpoolingExchangeOutputBuffers(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)Lio/trino/execution/buffer/OutputBuffers;
+#<init>(Lio/trino/execution/buffer/OutputBuffers$BufferType;JZLjava/util/Map;Ljava/util/Optional;)V
+#getExchangeSinkInstanceHandle()Ljava/util/Optional;
-#<init>(Lio/trino/execution/buffer/OutputBuffers$BufferType;JZLjava/util/Map;)V
@398
-#createInitialEmptyOutputBuffers(Lio/trino/execution/buffer/OutputBuffers$BufferType;)Lio/trino/execution/buffer/OutputBuffers;
-#createInitialEmptyOutputBuffers(Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/execution/buffer/OutputBuffers;
-#createSpoolingExchangeOutputBuffers(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)Lio/trino/execution/buffer/OutputBuffers;
-#<init>(Lio/trino/execution/buffer/OutputBuffers$BufferType;JZLjava/util/Map;Ljava/util/Optional;)V
-#getType()Lio/trino/execution/buffer/OutputBuffers$BufferType;
-#isNoMoreBufferIds()Z
-#getBuffers()Ljava/util/Map;
-#getExchangeSinkInstanceHandle()Ljava/util/Optional;
-#hashCode()I
-#equals(Ljava/lang/Object;)Z
-#toString()Ljava/lang/String;
-#withBuffer(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;I)Lio/trino/execution/buffer/OutputBuffers;
-#withBuffers(Ljava/util/Map;)Lio/trino/execution/buffer/OutputBuffers;
-#withNoMoreBufferIds()Lio/trino/execution/buffer/OutputBuffers;

+###io/trino/execution/buffer/BufferResult
@351
+#emptyResults(Ljava/lang/String;JZ)Lio/trino/execution/buffer/BufferResult;
+#<init>(Ljava/lang/String;JJZLjava/util/List;)V
+#getToken()J
+#getNextToken()J
+#isBufferComplete()Z
+#getSerializedPages()Ljava/util/List;
+#size()I
+#isEmpty()Z
+#getTaskInstanceId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/execution/buffer/PagesSerde$PagesSerdeContext
@351
+#<init>()V
+#close()V
@403
-###io/trino/execution/buffer/PagesSerde$PagesSerdeContext

+###io/trino/execution/buffer/PageCodecMarker$MarkerSet
@351
+#add(Lio/trino/execution/buffer/PageCodecMarker;)V
+#contains(Lio/trino/execution/buffer/PageCodecMarker;)Z
+#remove(Lio/trino/execution/buffer/PageCodecMarker;)V
+#byteValue()B
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#of(Lio/trino/execution/buffer/PageCodecMarker;)Lio/trino/execution/buffer/PageCodecMarker$MarkerSet;
+#fromByteValue(B)Lio/trino/execution/buffer/PageCodecMarker$MarkerSet;
+#empty()Lio/trino/execution/buffer/PageCodecMarker$MarkerSet;

+###io/trino/execution/buffer/BroadcastOutputBuffer
@351
+#<init>(Ljava/lang/String;Lio/trino/execution/StateMachine;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#isFinished()Z
+#getUtilization()D
+#isOverutilized()Z
+#getInfo()Lio/trino/execution/buffer/OutputBufferInfo;
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
+#enqueue(Ljava/util/List;)V
+#enqueue(ILjava/util/List;)V
+#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#setNoMorePages()V
+#destroy()V
+#fail()V
+#getPeakMemoryUsage()J
@370
+#<init>(Ljava/lang/String;Lio/trino/execution/buffer/OutputBufferStateMachine;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
+#getState()Lio/trino/execution/buffer/BufferState;
+#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#abort()V
+#getFailureCause()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Lio/trino/execution/StateMachine;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V
-#isFinished()Z
-#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
-#fail()V
@396
+#getStatus()Lio/trino/execution/buffer/OutputBufferStatus;
-#isOverutilized()Z
@398
+#get(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroy(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)V
-#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
-#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V

+###io/trino/execution/buffer/PagesSerdeUtil
@351
+#writeSerializedPage(Lio/airlift/slice/SliceOutput;Lio/trino/execution/buffer/SerializedPage;)V
+#writeSerializedPages(Lio/airlift/slice/SliceOutput;Ljava/lang/Iterable;)J
+#calculateChecksum(Ljava/util/List;)J
+#writePages(Lio/trino/execution/buffer/PagesSerde;Lio/airlift/slice/SliceOutput;[Lio/trino/spi/Page;)J
+#writePages(Lio/trino/execution/buffer/PagesSerde;Lio/airlift/slice/SliceOutput;Ljava/util/Iterator;)J
+#readPages(Lio/trino/execution/buffer/PagesSerde;Lio/airlift/slice/SliceInput;)Ljava/util/Iterator;
+#readSerializedPages(Lio/airlift/slice/SliceInput;)Ljava/util/Iterator;
@368
-#writeSerializedPage(Lio/airlift/slice/SliceOutput;Lio/trino/execution/buffer/SerializedPage;)V
-#writeSerializedPages(Lio/airlift/slice/SliceOutput;Ljava/lang/Iterable;)J
@374
+#readPages(Lio/trino/execution/buffer/PagesSerde;Ljava/io/InputStream;)Ljava/util/Iterator;
+#readSerializedPages(Ljava/io/InputStream;)Ljava/util/Iterator;
-#readPages(Lio/trino/execution/buffer/PagesSerde;Lio/airlift/slice/SliceInput;)Ljava/util/Iterator;
-#readSerializedPages(Lio/airlift/slice/SliceInput;)Ljava/util/Iterator;
@405
+#writePages(Lio/trino/execution/buffer/PageSerializer;Lio/airlift/slice/SliceOutput;[Lio/trino/spi/Page;)J
+#writePages(Lio/trino/execution/buffer/PageSerializer;Lio/airlift/slice/SliceOutput;Ljava/util/Iterator;)J
+#readPages(Lio/trino/execution/buffer/PageDeserializer;Ljava/io/InputStream;)Ljava/util/Iterator;
+#getSerializedPagePositionCount(Lio/airlift/slice/Slice;)I
+#isSerializedPageEncrypted(Lio/airlift/slice/Slice;)Z
+#isSerializedPageCompressed(Lio/airlift/slice/Slice;)Z
+#readSerializedPage(Lio/airlift/slice/Slice;Ljava/io/InputStream;)Lio/airlift/slice/Slice;
-#writePages(Lio/trino/execution/buffer/PagesSerde;Lio/airlift/slice/SliceOutput;[Lio/trino/spi/Page;)J
-#writePages(Lio/trino/execution/buffer/PagesSerde;Lio/airlift/slice/SliceOutput;Ljava/util/Iterator;)J
-#readPages(Lio/trino/execution/buffer/PagesSerde;Ljava/io/InputStream;)Ljava/util/Iterator;

+###io/trino/execution/buffer/BufferState
@351
+#values()[Lio/trino/execution/buffer/BufferState;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/buffer/BufferState;
+#canAddPages()Z
+#canAddBuffers()Z
+#isTerminal()Z

+###io/trino/execution/buffer/OutputBufferInfo
@351
+#<init>(Ljava/lang/String;Lio/trino/execution/buffer/BufferState;ZZJJJJLjava/util/List;)V
+#getType()Ljava/lang/String;
+#getState()Lio/trino/execution/buffer/BufferState;
+#getBuffers()Ljava/util/List;
+#isCanAddBuffers()Z
+#isCanAddPages()Z
+#getTotalBufferedBytes()J
+#getTotalBufferedPages()J
+#getTotalRowsSent()J
+#getTotalPagesSent()J
+#summarize()Lio/trino/execution/buffer/OutputBufferInfo;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
+#<init>(Ljava/lang/String;Lio/trino/execution/buffer/BufferState;ZZJJJJLjava/util/List;Ljava/util/Optional;)V
+#getUtilization()Ljava/util/Optional;
+#summarizeFinal()Lio/trino/execution/buffer/OutputBufferInfo;
-#<init>(Ljava/lang/String;Lio/trino/execution/buffer/BufferState;ZZJJJJLjava/util/List;)V
@398
+#<init>(Ljava/lang/String;Lio/trino/execution/buffer/BufferState;ZZJJJJLjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getPipelinedBufferStates()Ljava/util/Optional;
+#getSpoolingOutputStats()Ljava/util/Optional;
+#pruneSpoolingOutputStats()Lio/trino/execution/buffer/OutputBufferInfo;
-#<init>(Ljava/lang/String;Lio/trino/execution/buffer/BufferState;ZZJJJJLjava/util/List;Ljava/util/Optional;)V
-#getBuffers()Ljava/util/List;

+###io/trino/execution/buffer/SerializedPage
@351
+#<init>(Lio/airlift/slice/Slice;Lio/trino/execution/buffer/PageCodecMarker$MarkerSet;II)V
+#getSizeInBytes()I
+#getUncompressedSizeInBytes()I
+#getRetainedSizeInBytes()J
+#getPositionCount()I
+#getSlice()Lio/airlift/slice/Slice;
+#getPageCodecMarkers()B
+#isCompressed()Z
+#isEncrypted()Z
+#toString()Ljava/lang/String;
@368
-###io/trino/execution/buffer/SerializedPage

+###io/trino/execution/buffer/PageSplitterUtil
@351
+#splitPage(Lio/trino/spi/Page;J)Ljava/util/List;

+###io/trino/execution/buffer/OutputBuffers$OutputBufferId
@351
+#fromString(Ljava/lang/String;)Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;
+#<init>(I)V
+#equals(Ljava/lang/Object;)Z
+#getId()I
+#hashCode()I
+#toString()Ljava/lang/String;
@398
-###io/trino/execution/buffer/OutputBuffers$OutputBufferId

+###io/trino/execution/buffer/LazyOutputBuffer
@351
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/lang/Runnable;)V
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#isFinished()Z
+#getUtilization()D
+#isOverutilized()Z
+#getInfo()Lio/trino/execution/buffer/OutputBufferInfo;
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
+#enqueue(Ljava/util/List;)V
+#enqueue(ILjava/util/List;)V
+#setNoMorePages()V
+#destroy()V
+#fail()V
+#getPeakMemoryUsage()J
@369
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/lang/Runnable;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/lang/Runnable;)V
@370
+#getState()Lio/trino/execution/buffer/BufferState;
+#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#abort()V
+#getFailureCause()Ljava/util/Optional;
-#isFinished()Z
-#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
-#fail()V
@396
+#getStatus()Lio/trino/execution/buffer/OutputBufferStatus;
-#isOverutilized()Z
@398
+#get(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroy(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)V
-#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
-#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V

+###io/trino/execution/buffer/BufferInfo
@351
+#<init>(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;ZIJLio/trino/execution/buffer/PageBufferInfo;)V
+#getBufferId()Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;
+#isFinished()Z
+#getBufferedPages()I
+#getPagesSent()J
+#getPageBufferInfo()Lio/trino/execution/buffer/PageBufferInfo;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@398
-###io/trino/execution/buffer/BufferInfo

+###io/trino/execution/buffer/PartitionedOutputBuffer
@351
+#<init>(Ljava/lang/String;Lio/trino/execution/StateMachine;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)V
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#isFinished()Z
+#getUtilization()D
+#isOverutilized()Z
+#getInfo()Lio/trino/execution/buffer/OutputBufferInfo;
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
+#enqueue(Ljava/util/List;)V
+#enqueue(ILjava/util/List;)V
+#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#setNoMorePages()V
+#destroy()V
+#fail()V
+#getPeakMemoryUsage()J
@370
+#<init>(Ljava/lang/String;Lio/trino/execution/buffer/OutputBufferStateMachine;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)V
+#getState()Lio/trino/execution/buffer/BufferState;
+#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#abort()V
+#getFailureCause()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Lio/trino/execution/StateMachine;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)V
-#isFinished()Z
-#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
-#fail()V
@396
+#getStatus()Lio/trino/execution/buffer/OutputBufferStatus;
-#isOverutilized()Z
@398
+#<init>(Ljava/lang/String;Lio/trino/execution/buffer/OutputBufferStateMachine;Lio/trino/execution/buffer/PipelinedOutputBuffers;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)V
+#get(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroy(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)V
-#<init>(Ljava/lang/String;Lio/trino/execution/buffer/OutputBufferStateMachine;Lio/trino/execution/buffer/OutputBuffers;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)V
-#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
-#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V

+###io/trino/execution/buffer/ClientBuffer$PagesSupplier
@351
+#getPages(Lio/airlift/units/DataSize;)Ljava/util/List;
+#mayHaveMorePages()Z

+###io/trino/execution/buffer/PagesSerdeFactory
@351
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;Z)V
+#createPagesSerde()Lio/trino/execution/buffer/PagesSerde;
+#createPagesSerdeForSpill(Ljava/util/Optional;)Lio/trino/execution/buffer/PagesSerde;
@403
+#createPagesSerde(Ljava/util/Optional;)Lio/trino/execution/buffer/PagesSerde;
-#createPagesSerde()Lio/trino/execution/buffer/PagesSerde;
-#createPagesSerdeForSpill(Ljava/util/Optional;)Lio/trino/execution/buffer/PagesSerde;
@405
+#createSerializer(Ljava/util/Optional;)Lio/trino/execution/buffer/PageSerializer;
+#createDeserializer(Ljava/util/Optional;)Lio/trino/execution/buffer/PageDeserializer;
-#createPagesSerde(Ljava/util/Optional;)Lio/trino/execution/buffer/PagesSerde;

+###io/trino/execution/buffer/PageCodecMarker
@351
+#values()[Lio/trino/execution/buffer/PageCodecMarker;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/buffer/PageCodecMarker;
+#isSet(B)Z
+#set(B)B
+#unset(B)B
+#none()B
+#toSummaryString(B)Ljava/lang/String;
@368
-###io/trino/execution/buffer/PageCodecMarker

+###io/trino/execution/buffer/OutputBuffers$BufferType
@351
+#values()[Lio/trino/execution/buffer/OutputBuffers$BufferType;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/buffer/OutputBuffers$BufferType;
@398
-###io/trino/execution/buffer/OutputBuffers$BufferType

+###io/trino/execution/buffer/ArbitraryOutputBuffer
@351
+#<init>(Ljava/lang/String;Lio/trino/execution/StateMachine;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)V
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#isFinished()Z
+#getUtilization()D
+#isOverutilized()Z
+#getInfo()Lio/trino/execution/buffer/OutputBufferInfo;
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
+#enqueue(Ljava/util/List;)V
+#enqueue(ILjava/util/List;)V
+#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#setNoMorePages()V
+#destroy()V
+#fail()V
+#getPeakMemoryUsage()J
@370
+#<init>(Ljava/lang/String;Lio/trino/execution/buffer/OutputBufferStateMachine;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)V
+#getState()Lio/trino/execution/buffer/BufferState;
+#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#abort()V
+#getFailureCause()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Lio/trino/execution/StateMachine;Lio/airlift/units/DataSize;Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)V
-#isFinished()Z
-#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
-#fail()V
@396
+#getStatus()Lio/trino/execution/buffer/OutputBufferStatus;
-#isOverutilized()Z
@398
+#get(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroy(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)V
-#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
-#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V

+###io/trino/execution/buffer/OutputBuffer
@351
+#getInfo()Lio/trino/execution/buffer/OutputBufferInfo;
+#isFinished()Z
+#getUtilization()D
+#isOverutilized()Z
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
+#enqueue(Ljava/util/List;)V
+#enqueue(ILjava/util/List;)V
+#setNoMorePages()V
+#destroy()V
+#fail()V
+#getPeakMemoryUsage()J
@370
+#getState()Lio/trino/execution/buffer/BufferState;
+#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#abort()V
+#getFailureCause()Ljava/util/Optional;
-#isFinished()Z
-#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
-#fail()V
@396
+#getStatus()Lio/trino/execution/buffer/OutputBufferStatus;
-#isOverutilized()Z
@398
+#get(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroy(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)V
-#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
-#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V

+###io/trino/execution/buffer/PageBufferInfo
@351
+#<init>(IJJJJ)V
+#getPartition()I
+#getBufferedPages()J
+#getBufferedBytes()J
+#getRowsAdded()J
+#getPagesAdded()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#empty()Lio/trino/execution/buffer/PageBufferInfo;
@398
-###io/trino/execution/buffer/PageBufferInfo

+###io/trino/execution/TaskManagerConfig
@351
+#<init>()V
+#getStatusRefreshMaxWait()Lio/airlift/units/Duration;
+#setStatusRefreshMaxWait(Lio/airlift/units/Duration;)Lio/trino/execution/TaskManagerConfig;
+#getInfoUpdateInterval()Lio/airlift/units/Duration;
+#setInfoUpdateInterval(Lio/airlift/units/Duration;)Lio/trino/execution/TaskManagerConfig;
+#isPerOperatorCpuTimerEnabled()Z
+#setPerOperatorCpuTimerEnabled(Z)Lio/trino/execution/TaskManagerConfig;
+#isTaskCpuTimerEnabled()Z
+#setTaskCpuTimerEnabled(Z)Lio/trino/execution/TaskManagerConfig;
+#isStatisticsCpuTimerEnabled()Z
+#setStatisticsCpuTimerEnabled(Z)Lio/trino/execution/TaskManagerConfig;
+#getMaxPartialAggregationMemoryUsage()Lio/airlift/units/DataSize;
+#setMaxPartialAggregationMemoryUsage(Lio/airlift/units/DataSize;)Lio/trino/execution/TaskManagerConfig;
+#getMaxLocalExchangeBufferSize()Lio/airlift/units/DataSize;
+#setMaxLocalExchangeBufferSize(Lio/airlift/units/DataSize;)Lio/trino/execution/TaskManagerConfig;
+#getMaxIndexMemoryUsage()Lio/airlift/units/DataSize;
+#setMaxIndexMemoryUsage(Lio/airlift/units/DataSize;)Lio/trino/execution/TaskManagerConfig;
+#isShareIndexLoading()Z
+#setShareIndexLoading(Z)Lio/trino/execution/TaskManagerConfig;
+#getLevelTimeMultiplier()Ljava/math/BigDecimal;
+#setLevelTimeMultiplier(Ljava/math/BigDecimal;)Lio/trino/execution/TaskManagerConfig;
+#getMaxWorkerThreads()I
+#setMaxWorkerThreads(I)Lio/trino/execution/TaskManagerConfig;
+#getInitialSplitsPerNode()I
+#setInitialSplitsPerNode(I)Lio/trino/execution/TaskManagerConfig;
+#getSplitConcurrencyAdjustmentInterval()Lio/airlift/units/Duration;
+#setSplitConcurrencyAdjustmentInterval(Lio/airlift/units/Duration;)Lio/trino/execution/TaskManagerConfig;
+#getMinDrivers()I
+#setMinDrivers(I)Lio/trino/execution/TaskManagerConfig;
+#getMaxDriversPerTask()I
+#setMaxDriversPerTask(I)Lio/trino/execution/TaskManagerConfig;
+#getMinDriversPerTask()I
+#setMinDriversPerTask(I)Lio/trino/execution/TaskManagerConfig;
+#getSinkMaxBufferSize()Lio/airlift/units/DataSize;
+#setSinkMaxBufferSize(Lio/airlift/units/DataSize;)Lio/trino/execution/TaskManagerConfig;
+#getSinkMaxBroadcastBufferSize()Lio/airlift/units/DataSize;
+#setSinkMaxBroadcastBufferSize(Lio/airlift/units/DataSize;)Lio/trino/execution/TaskManagerConfig;
+#getMaxPagePartitioningBufferSize()Lio/airlift/units/DataSize;
+#setMaxPagePartitioningBufferSize(Lio/airlift/units/DataSize;)Lio/trino/execution/TaskManagerConfig;
+#getClientTimeout()Lio/airlift/units/Duration;
+#setClientTimeout(Lio/airlift/units/Duration;)Lio/trino/execution/TaskManagerConfig;
+#getInfoMaxAge()Lio/airlift/units/Duration;
+#setInfoMaxAge(Lio/airlift/units/Duration;)Lio/trino/execution/TaskManagerConfig;
+#getWriterCount()I
+#setWriterCount(I)Lio/trino/execution/TaskManagerConfig;
+#getTaskConcurrency()I
+#setTaskConcurrency(I)Lio/trino/execution/TaskManagerConfig;
+#getHttpResponseThreads()I
+#setHttpResponseThreads(I)Lio/trino/execution/TaskManagerConfig;
+#getHttpTimeoutThreads()I
+#setHttpTimeoutThreads(I)Lio/trino/execution/TaskManagerConfig;
+#getTaskNotificationThreads()I
+#setTaskNotificationThreads(I)Lio/trino/execution/TaskManagerConfig;
+#getTaskYieldThreads()I
+#setTaskYieldThreads(I)Lio/trino/execution/TaskManagerConfig;
@365
+#getMaxPartialTopNMemory()Lio/airlift/units/DataSize;
+#setMaxPartialTopNMemory(Lio/airlift/units/DataSize;)Lio/trino/execution/TaskManagerConfig;
@391
+#isInterruptStuckSplitTasksEnabled()Z
+#setInterruptStuckSplitTasksEnabled(Z)Lio/trino/execution/TaskManagerConfig;
+#getInterruptStuckSplitTasksWarningThreshold()Lio/airlift/units/Duration;
+#setInterruptStuckSplitTasksWarningThreshold(Lio/airlift/units/Duration;)Lio/trino/execution/TaskManagerConfig;
+#getInterruptStuckSplitTasksTimeout()Lio/airlift/units/Duration;
+#setInterruptStuckSplitTasksTimeout(Lio/airlift/units/Duration;)Lio/trino/execution/TaskManagerConfig;
+#getInterruptStuckSplitTasksDetectionInterval()Lio/airlift/units/Duration;
+#setInterruptStuckSplitTasksDetectionInterval(Lio/airlift/units/Duration;)Lio/trino/execution/TaskManagerConfig;
@395
+#isScaleWritersEnabled()Z
+#setScaleWritersEnabled(Z)Lio/trino/execution/TaskManagerConfig;
+#getScaleWritersMaxWriterCount()I
+#setScaleWritersMaxWriterCount(I)Lio/trino/execution/TaskManagerConfig;
@401
+#getPartitionedWriterCount()I
+#setPartitionedWriterCount(I)Lio/trino/execution/TaskManagerConfig;
@403
+#applyFaultTolerantExecutionDefaults()V
@406
+#getPagePartitioningBufferPoolSize()I
+#setPagePartitioningBufferPoolSize(I)Lio/trino/execution/TaskManagerConfig;

+###io/trino/execution/DeallocateTask
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Deallocate;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@353
+#execute(Lio/trino/sql/tree/Deallocate;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Deallocate;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#execute(Lio/trino/sql/tree/Deallocate;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Deallocate;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/connector/informationschema/InformationSchemaSplitManager
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;)V
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;
@387
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;
@388
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;

+###io/trino/connector/informationschema/InformationSchemaMetadata
@351
+#<init>(Ljava/lang/String;Lio/trino/metadata/Metadata;)V
+#listSchemaNames(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/List;
+#getTableHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/connector/ConnectorTableHandle;
+#getTableMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableMetadata;
+#listTables(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/List;
+#getColumnMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;)Lio/trino/spi/connector/ColumnMetadata;
+#getColumnHandles(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Map;
+#listTableColumns(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/Map;
+#usesLegacyTableLayouts()Z
+#getTableProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableProperties;
+#applyLimit(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;J)Ljava/util/Optional;
+#applyFilter(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/Constraint;)Ljava/util/Optional;
+#defaultPrefixes(Ljava/lang/String;)Ljava/util/Set;
+#isTablesEnumeratingTable(Lio/trino/connector/informationschema/InformationSchemaTable;)Z
@369
-#usesLegacyTableLayouts()Z

+###io/trino/connector/informationschema/InformationSchemaColumnHandle
@351
+#<init>(Ljava/lang/String;)V
+#getColumnName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/connector/informationschema/InformationSchemaConnector
@351
+#<init>(Ljava/lang/String;Lio/trino/metadata/InternalNodeManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#beginTransaction(Lio/trino/transaction/TransactionId;Lio/trino/spi/transaction/IsolationLevel;Z)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getMetadata(Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;
+#getSplitManager()Lio/trino/spi/connector/ConnectorSplitManager;
+#getPageSourceProvider()Lio/trino/spi/connector/ConnectorPageSourceProvider;
@371
+#getMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;
-#getMetadata(Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;

+###io/trino/connector/informationschema/InformationSchemaSplit
@351
+#<init>(Ljava/util/List;)V
+#isRemotelyAccessible()Z
+#getAddresses()Ljava/util/List;
+#getInfo()Ljava/lang/Object;
@368
+#getRetainedSizeInBytes()J

+###io/trino/connector/informationschema/InformationSchemaTable
@351
+#values()[Lio/trino/connector/informationschema/InformationSchemaTable;
+#valueOf(Ljava/lang/String;)Lio/trino/connector/informationschema/InformationSchemaTable;
+#of(Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#fromStringValue(Ljava/lang/String;)Lio/trino/connector/informationschema/InformationSchemaTable;
+#toStringValue()Ljava/lang/String;

+###io/trino/connector/informationschema/InformationSchemaPageSourceProvider
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;
@358
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorPageSource;
-#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;

+###io/trino/connector/informationschema/InformationSchemaTransactionHandle
@351
+#<init>(Lio/trino/transaction/TransactionId;)V
+#getTransactionId()Lio/trino/transaction/TransactionId;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/connector/informationschema/InformationSchemaTableHandle
@351
+#<init>(Ljava/lang/String;Lio/trino/connector/informationschema/InformationSchemaTable;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)V
+#getCatalogName()Ljava/lang/String;
+#getTable()Lio/trino/connector/informationschema/InformationSchemaTable;
+#getRoles()Ljava/util/Optional;
+#getGrantees()Ljava/util/Optional;
+#getPrefixes()Ljava/util/Set;
+#getLimit()Ljava/util/OptionalLong;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@395
+#<init>(Ljava/lang/String;Lio/trino/connector/informationschema/InformationSchemaTable;Ljava/util/Set;Ljava/util/OptionalLong;)V
-#<init>(Ljava/lang/String;Lio/trino/connector/informationschema/InformationSchemaTable;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)V
-#getRoles()Ljava/util/Optional;
-#getGrantees()Ljava/util/Optional;

+###io/trino/connector/informationschema/InformationSchemaHandleResolver
@351
+#<init>()V
+#getTableHandleClass()Ljava/lang/Class;
+#getColumnHandleClass()Ljava/lang/Class;
+#getSplitClass()Ljava/lang/Class;
+#getTransactionHandleClass()Ljava/lang/Class;
@370
-###io/trino/connector/informationschema/InformationSchemaHandleResolver

+###io/trino/connector/informationschema/InformationSchemaPageSource
@351
+#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/connector/informationschema/InformationSchemaTableHandle;Ljava/util/List;)V
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#isFinished()Z
+#getNextPage()Lio/trino/spi/Page;
+#getSystemMemoryUsage()J
+#close()V
@369
+#getMemoryUsage()J
-#getSystemMemoryUsage()J

+###io/trino/connector/ConnectorAwareNodeManager
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/lang/String;Lio/trino/connector/CatalogName;)V
+#getAllNodes()Ljava/util/Set;
+#getWorkerNodes()Ljava/util/Set;
+#getCurrentNode()Lio/trino/spi/Node;
+#getEnvironment()Ljava/lang/String;
@353
+#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/lang/String;Lio/trino/connector/CatalogName;Z)V
-#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/lang/String;Lio/trino/connector/CatalogName;)V
@392
+#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/lang/String;Lio/trino/connector/CatalogHandle;Z)V
-#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/lang/String;Lio/trino/connector/CatalogName;Z)V
@405
+#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Z)V
-#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/lang/String;Lio/trino/connector/CatalogHandle;Z)V

+###io/trino/connector/CatalogName
@351
+#<init>(Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#isInternalSystemConnector(Lio/trino/connector/CatalogName;)Z
+#createInformationSchemaCatalogName(Lio/trino/connector/CatalogName;)Lio/trino/connector/CatalogName;
+#createSystemTablesCatalogName(Lio/trino/connector/CatalogName;)Lio/trino/connector/CatalogName;
@368
+#getRetainedSizeInBytes()J
@386
+#getActualName()Lio/trino/connector/CatalogName;
-#createInformationSchemaCatalogName(Lio/trino/connector/CatalogName;)Lio/trino/connector/CatalogName;
-#createSystemTablesCatalogName(Lio/trino/connector/CatalogName;)Lio/trino/connector/CatalogName;
@392
-#getRetainedSizeInBytes()J
-#isInternalSystemConnector(Lio/trino/connector/CatalogName;)Z

+###io/trino/connector/ConnectorManager
@351
+#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/version/EmbedVersion;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeOperators;)V
+#stop()V
+#addConnectorFactory(Lio/trino/spi/connector/ConnectorFactory;Ljava/util/function/Supplier;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogName;
+#dropConnection(Ljava/lang/String;)V
@353
+#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/version/EmbedVersion;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/version/EmbedVersion;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeOperators;)V
@357
+#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/version/EmbedVersion;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
@367
+#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeManager;Lio/trino/metadata/ProcedureRegistry;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
@370
+#addConnectorFactory(Lio/trino/spi/connector/ConnectorFactory;Ljava/util/function/Function;)V
-#addConnectorFactory(Lio/trino/spi/connector/ConnectorFactory;Ljava/util/function/Supplier;)V
@378
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeManager;Lio/trino/metadata/ProcedureRegistry;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeManager;Lio/trino/metadata/ProcedureRegistry;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
@381
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeManager;Lio/trino/metadata/ProcedureRegistry;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/TableFunctionRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeManager;Lio/trino/metadata/ProcedureRegistry;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
@386
-#dropConnection(Ljava/lang/String;)V
@388
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControl;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#getConnectorServices(Lio/trino/connector/CatalogName;)Lio/trino/connector/ConnectorManager$ConnectorServices;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControlManager;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeManager;Lio/trino/metadata/ProcedureRegistry;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/TableFunctionRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
@392
+#<init>(Lio/trino/connector/CatalogFactory;Lio/trino/metadata/CatalogManager;)V
+#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogHandle;
+#createCatalog(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControl;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/trino/transaction/TransactionManager;Lio/trino/eventlistener/EventListenerManager;Lio/trino/spi/type/TypeManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
-#addConnectorFactory(Lio/trino/spi/connector/ConnectorFactory;Ljava/util/function/Function;)V
-#getConnectorServices(Lio/trino/connector/CatalogName;)Lio/trino/connector/ConnectorManager$ConnectorServices;
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogName;
@393
-###io/trino/connector/ConnectorManager

+###io/trino/connector/system/SystemColumnHandle
@351
+#<init>(Ljava/lang/String;)V
+#getColumnName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toSystemColumnHandles(Lio/trino/spi/connector/ConnectorTableMetadata;)Ljava/util/Map;
@368
+#getRetainedSizeInBytes()J

+###io/trino/connector/system/SchemaPropertiesSystemTable
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@367
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/SchemaPropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@405
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/SchemaPropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/SchemaPropertyManager;)V

+###io/trino/connector/system/TaskSystemTable
@351
+#<init>(Lio/trino/execution/TaskManager;Lio/airlift/node/NodeInfo;)V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;
@372
+#<init>(Lio/trino/execution/SqlTaskManager;Lio/airlift/node/NodeInfo;)V
-#<init>(Lio/trino/execution/TaskManager;Lio/airlift/node/NodeInfo;)V

+###io/trino/connector/system/SystemTablesMetadata
@351
+#<init>(Lio/trino/connector/system/SystemTablesProvider;)V
+#listSchemaNames(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/List;
+#getTableHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/connector/ConnectorTableHandle;
+#getTableMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableMetadata;
+#listTables(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/List;
+#getColumnMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;)Lio/trino/spi/connector/ColumnMetadata;
+#getColumnHandles(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Map;
+#listTableColumns(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/Map;
+#usesLegacyTableLayouts()Z
+#getTableProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableProperties;
+#applyFilter(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/Constraint;)Ljava/util/Optional;
@369
-#usesLegacyTableLayouts()Z
@405
-#getTableProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableProperties;

+###io/trino/connector/system/SystemConnectorModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#getKillQueryProcedure(Lio/trino/connector/system/KillQueryProcedure;)Lio/trino/spi/procedure/Procedure;

+###io/trino/connector/system/SystemSplitManager
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/connector/system/SystemTablesProvider;)V
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;
@387
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;
@388
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;

+###io/trino/connector/system/TablePropertiesSystemTable
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@367
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/TablePropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@405
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/TablePropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/TablePropertyManager;)V

+###io/trino/connector/system/SystemSplit
@351
+#<init>(Lio/trino/spi/HostAddress;Lio/trino/spi/predicate/TupleDomain;)V
+#<init>(Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)V
+#isRemotelyAccessible()Z
+#getAddresses()Ljava/util/List;
+#getConstraint()Lio/trino/spi/predicate/TupleDomain;
+#getInfo()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@368
+#getRetainedSizeInBytes()J

+###io/trino/connector/system/CoordinatorSystemTablesProvider
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Ljava/lang/String;Lio/trino/connector/system/StaticSystemTablesProvider;)V
+#listSystemTables(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/Set;
+#getSystemTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;

+###io/trino/connector/system/SystemTablesProvider
@351
+#listSystemTables(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/Set;
+#getSystemTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;

+###io/trino/connector/system/QuerySystemTable
@351
+#<init>(Ljava/util/Optional;Lio/trino/security/AccessControl;)V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/SuperTypeJdbcTable
@351
+#<init>()V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/PseudoColumnJdbcTable
@351
+#<init>()V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/ProcedureJdbcTable
@351
+#<init>()V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/TypesJdbcTable
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;
@367
+#<init>(Lio/trino/metadata/TypeRegistry;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/connector/system/jdbc/ProcedureColumnJdbcTable
@351
+#<init>()V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/SuperTableJdbcTable
@351
+#<init>()V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/TableTypeJdbcTable
@351
+#<init>()V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/TableJdbcTable
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/ColumnJdbcTable
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#applyFilter(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/predicate/TupleDomain;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/UdtJdbcTable
@351
+#<init>()V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/AttributeJdbcTable
@351
+#<init>()V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/CatalogJdbcTable
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/JdbcTable
@351
+#<init>()V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#applyFilter(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/predicate/TupleDomain;

+###io/trino/connector/system/jdbc/SchemaJdbcTable
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/jdbc/FilterUtil
@351
+#tryGetSingleVarcharValue(Lio/trino/spi/predicate/TupleDomain;Ljava/lang/Object;)Ljava/util/Optional;
+#tablePrefix(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/metadata/QualifiedTablePrefix;
+#emptyOrEquals(Ljava/util/Optional;Ljava/lang/Object;)Z

+###io/trino/connector/system/GlobalSystemHandleResolver
@351
+#<init>()V
+#getTransactionHandleClass()Ljava/lang/Class;
@370
-###io/trino/connector/system/GlobalSystemHandleResolver

+###io/trino/connector/system/SystemPageSourceProvider
@351
+#<init>(Lio/trino/connector/system/SystemTablesProvider;)V
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;
@358
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorPageSource;
-#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;

+###io/trino/connector/system/AnalyzePropertiesSystemTable
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@367
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/AnalyzePropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@405
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/AnalyzePropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/AnalyzePropertyManager;)V

+###io/trino/connector/system/CatalogSystemTable
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/SystemConnector
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;Ljava/util/Set;Ljava/util/function/Function;)V
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/connector/system/SystemTablesProvider;Ljava/util/function/Function;)V
+#beginTransaction(Lio/trino/transaction/TransactionId;Lio/trino/spi/transaction/IsolationLevel;Z)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getMetadata(Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;
+#getSplitManager()Lio/trino/spi/connector/ConnectorSplitManager;
+#getPageSourceProvider()Lio/trino/spi/connector/ConnectorPageSourceProvider;
@371
+#getMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;
-#getMetadata(Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;

+###io/trino/connector/system/TableCommentSystemTable
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/system/StaticSystemTablesProvider
@351
+#<init>(Ljava/util/Set;)V
+#listSystemTables(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/Set;
+#getSystemTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;

+###io/trino/connector/system/SystemTableHandle
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Lio/trino/spi/predicate/TupleDomain;)V
+#fromSchemaTableName(Lio/trino/spi/connector/SchemaTableName;)Lio/trino/connector/system/SystemTableHandle;
+#getSchemaName()Ljava/lang/String;
+#getTableName()Ljava/lang/String;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#getConstraint()Lio/trino/spi/predicate/TupleDomain;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/connector/system/SystemTransactionHandle
@351
+#<init>(Lio/trino/transaction/TransactionId;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getTransactionId()Lio/trino/transaction/TransactionId;
+#getConnectorTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/connector/system/GlobalSystemTransactionHandle
@351
+#<init>(Lio/trino/transaction/TransactionId;)V
+#getTransactionId()Lio/trino/transaction/TransactionId;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/connector/system/TransactionsSystemTable
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/transaction/TransactionManager;)V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;
@367
+#<init>(Lio/trino/spi/type/TypeManager;Lio/trino/transaction/TransactionManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/transaction/TransactionManager;)V

+###io/trino/connector/system/SystemHandleResolver
@351
+#<init>()V
+#getTableHandleClass()Ljava/lang/Class;
+#getColumnHandleClass()Ljava/lang/Class;
+#getSplitClass()Ljava/lang/Class;
+#getTransactionHandleClass()Ljava/lang/Class;
@370
-###io/trino/connector/system/SystemHandleResolver

+###io/trino/connector/system/RuleStatsSystemTable
@351
+#<init>(Ljava/util/Optional;Lio/trino/metadata/Metadata;)V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#pageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;
@367
+#<init>(Ljava/util/Optional;Lio/trino/spi/type/TypeManager;)V
-#<init>(Ljava/util/Optional;Lio/trino/metadata/Metadata;)V

+###io/trino/connector/system/KillQueryProcedure
@351
+#<init>(Ljava/util/Optional;Lio/trino/security/AccessControl;)V
+#killQuery(Ljava/lang/String;Ljava/lang/String;Lio/trino/spi/connector/ConnectorSession;)V
+#getProcedure()Lio/trino/spi/procedure/Procedure;
+#createKillQueryException(Ljava/lang/String;)Lio/trino/spi/TrinoException;
+#createPreemptQueryException(Ljava/lang/String;)Lio/trino/spi/TrinoException;

+###io/trino/connector/system/ColumnPropertiesSystemTable
@351
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@367
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/ColumnPropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@405
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/ColumnPropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/ColumnPropertyManager;)V

+###io/trino/connector/system/GlobalSystemConnector
@351
+#<init>(Ljava/util/Set;Ljava/util/Set;)V
+#beginTransaction(Lio/trino/transaction/TransactionId;Lio/trino/spi/transaction/IsolationLevel;Z)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getMetadata(Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;
+#getSystemTables()Ljava/util/Set;
+#getProcedures()Ljava/util/Set;
@371
+#getMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;
-#getMetadata(Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;

+###io/trino/connector/system/GlobalSystemConnectorFactory
@351
+#<init>(Ljava/util/Set;Ljava/util/Set;)V
+#getName()Ljava/lang/String;
+#getHandleResolver()Lio/trino/spi/connector/ConnectorHandleResolver;
+#create(Ljava/lang/String;Ljava/util/Map;Lio/trino/spi/connector/ConnectorContext;)Lio/trino/spi/connector/Connector;
@370
-#getHandleResolver()Lio/trino/spi/connector/ConnectorHandleResolver;
@392
-###io/trino/connector/system/GlobalSystemConnectorFactory

+###io/trino/connector/system/NodeSystemTable
@351
+#<init>(Lio/trino/metadata/InternalNodeManager;)V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/connector/ConnectorContextInstance
@351
+#<init>(Lio/trino/spi/NodeManager;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/type/TypeManager;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Ljava/util/function/Supplier;)V
+#getNodeManager()Lio/trino/spi/NodeManager;
+#getVersionEmbedder()Lio/trino/spi/VersionEmbedder;
+#getTypeManager()Lio/trino/spi/type/TypeManager;
+#getPageSorter()Lio/trino/spi/PageSorter;
+#getPageIndexerFactory()Lio/trino/spi/PageIndexerFactory;
+#duplicatePluginClassLoader()Ljava/lang/ClassLoader;
@366
+#<init>(Lio/trino/spi/NodeManager;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/type/TypeManager;Lio/trino/spi/connector/MetadataProvider;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Ljava/util/function/Supplier;)V
+#getMetadataProvider()Lio/trino/spi/connector/MetadataProvider;
-#<init>(Lio/trino/spi/NodeManager;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/type/TypeManager;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Ljava/util/function/Supplier;)V
@406
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/NodeManager;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/type/TypeManager;Lio/trino/spi/connector/MetadataProvider;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Ljava/util/function/Supplier;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/spi/NodeManager;Lio/trino/spi/VersionEmbedder;Lio/trino/spi/type/TypeManager;Lio/trino/spi/connector/MetadataProvider;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Ljava/util/function/Supplier;)V

+###io/trino/index/IndexManager
@351
+#<init>()V
+#addIndexProvider(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorIndexProvider;)V
+#removeIndexProvider(Lio/trino/connector/CatalogName;)V
+#getIndex(Lio/trino/Session;Lio/trino/metadata/IndexHandle;Ljava/util/List;Ljava/util/List;)Lio/trino/spi/connector/ConnectorIndex;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#addIndexProvider(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorIndexProvider;)V
-#removeIndexProvider(Lio/trino/connector/CatalogName;)V

+###io/trino/ExceededScanLimitException
@351
+#<init>(Lio/airlift/units/DataSize;)V

+###io/trino/event/QueryMonitor
@351
+#<init>(Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/eventlistener/EventListenerManager;Lio/airlift/node/NodeInfo;Lio/trino/client/NodeVersion;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitorConfig;)V
+#queryCreatedEvent(Lio/trino/server/BasicQueryInfo;)V
+#queryImmediateFailureEvent(Lio/trino/server/BasicQueryInfo;Lio/trino/execution/ExecutionFailureInfo;)V
+#queryCompletedEvent(Lio/trino/execution/QueryInfo;)V
@374
+#<init>(Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/eventlistener/EventListenerManager;Lio/airlift/node/NodeInfo;Lio/trino/client/NodeVersion;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/event/QueryMonitorConfig;)V
-#<init>(Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/airlift/json/JsonCodec;Lio/trino/eventlistener/EventListenerManager;Lio/airlift/node/NodeInfo;Lio/trino/client/NodeVersion;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/Metadata;Lio/trino/event/QueryMonitorConfig;)V

+###io/trino/event/SplitMonitor
@351
+#<init>(Lio/trino/eventlistener/EventListenerManager;Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#splitCompletedEvent(Lio/trino/execution/TaskId;Lio/trino/operator/DriverStats;)V
+#splitFailedEvent(Lio/trino/execution/TaskId;Lio/trino/operator/DriverStats;Ljava/lang/Throwable;)V

+###io/trino/event/QueryMonitorConfig
@351
+#<init>()V
+#getMaxOutputStageJsonSize()Lio/airlift/units/DataSize;
+#setMaxOutputStageJsonSize(Lio/airlift/units/DataSize;)Lio/trino/event/QueryMonitorConfig;

+###io/trino/TrinoMediaTypes
@351

+###io/trino/metadata/HandleJsonModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#tableHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#tableLayoutHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#columnHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#splitModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#outputTableHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#insertTableHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#indexHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#transactionHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#partitioningHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
@364
+#tableExecuteHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
@369
+#exchangeSinkInstanceHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#exchangeSourceHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
-#tableLayoutHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
@370
+#exchangeSinkInstanceHandleModule(Lio/trino/metadata/ExchangeHandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#exchangeSourceHandleModule(Lio/trino/metadata/ExchangeHandleResolver;)Lcom/fasterxml/jackson/databind/Module;
-#exchangeSinkInstanceHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
-#exchangeSourceHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
@393
+#mergeTableHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
@403
+#exchangeSinkInstanceHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
+#exchangeSourceHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;
-#exchangeSinkInstanceHandleModule(Lio/trino/metadata/ExchangeHandleResolver;)Lcom/fasterxml/jackson/databind/Module;
-#exchangeSourceHandleModule(Lio/trino/metadata/ExchangeHandleResolver;)Lcom/fasterxml/jackson/databind/Module;
@409
+#tableFunctionHandleModule(Lio/trino/metadata/HandleResolver;)Lcom/fasterxml/jackson/databind/Module;

+###io/trino/metadata/MetadataUtil$TableMetadataBuilder
@351
+#tableMetadataBuilder(Lio/trino/spi/connector/SchemaTableName;)Lio/trino/metadata/MetadataUtil$TableMetadataBuilder;
+#column(Ljava/lang/String;Lio/trino/spi/type/Type;)Lio/trino/metadata/MetadataUtil$TableMetadataBuilder;
+#hiddenColumn(Ljava/lang/String;Lio/trino/spi/type/Type;)Lio/trino/metadata/MetadataUtil$TableMetadataBuilder;
+#property(Ljava/lang/String;Ljava/lang/Object;)Lio/trino/metadata/MetadataUtil$TableMetadataBuilder;
+#build()Lio/trino/spi/connector/ConnectorTableMetadata;

+###io/trino/metadata/RemoteTransactionHandle
@351
+#values()[Lio/trino/metadata/RemoteTransactionHandle;
+#valueOf(Ljava/lang/String;)Lio/trino/metadata/RemoteTransactionHandle;

+###io/trino/metadata/AggregationFunctionMetadata
@351
+#<init>(ZLjava/util/Optional;)V
+#isOrderSensitive()Z
+#getIntermediateType()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@364
+#<init>(Z[Lio/trino/spi/type/TypeSignature;)V
+#isDecomposable()Z
@366
+#<init>(ZLjava/util/List;)V
+#getIntermediateTypes()Ljava/util/List;
-#<init>(ZLjava/util/Optional;)V
-#getIntermediateType()Ljava/util/Optional;
@379
+#builder()Lio/trino/metadata/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder;
-#<init>(Z[Lio/trino/spi/type/TypeSignature;)V
-#<init>(ZLjava/util/List;)V
@395
-###io/trino/metadata/AggregationFunctionMetadata

+###io/trino/metadata/IndexHandle
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorIndexHandle;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorHandle()Lio/trino/spi/connector/ConnectorIndexHandle;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorIndexHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorIndexHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorIndexHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorIndexHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/StaticCatalogStore
@351
+#<init>(Lio/trino/connector/ConnectorManager;Lio/trino/metadata/StaticCatalogStoreConfig;)V
+#<init>(Lio/trino/connector/ConnectorManager;Ljava/io/File;Ljava/util/List;)V
+#loadCatalogs()V
@393
-###io/trino/metadata/StaticCatalogStore

+###io/trino/metadata/SignatureBinder$RelationshipType
@351
+#values()[Lio/trino/metadata/SignatureBinder$RelationshipType;
+#valueOf(Ljava/lang/String;)Lio/trino/metadata/SignatureBinder$RelationshipType;

+###io/trino/metadata/QualifiedTablePrefix
@351
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#getCatalogName()Ljava/lang/String;
+#getSchemaName()Ljava/util/Optional;
+#getTableName()Ljava/util/Optional;
+#hasSchemaName()Z
+#hasTableName()Z
+#asSchemaTablePrefix()Lio/trino/spi/connector/SchemaTablePrefix;
+#asQualifiedObjectName()Ljava/util/Optional;
+#matches(Lio/trino/metadata/QualifiedObjectName;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/metadata/FunctionExtractor
@351
+#extractFunctions(Ljava/util/Collection;)Ljava/util/List;
+#extractFunctions(Ljava/lang/Class;)Ljava/util/List;
@374
-###io/trino/metadata/FunctionExtractor

+###io/trino/metadata/Metadata
@351
+#getConnectorCapabilities(Lio/trino/Session;Lio/trino/connector/CatalogName;)Ljava/util/Set;
+#catalogExists(Lio/trino/Session;Ljava/lang/String;)Z
+#schemaExists(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)Z
+#listSchemaNames(Lio/trino/Session;Ljava/lang/String;)Ljava/util/List;
+#getTableHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/Optional;
+#getSystemTable(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/Optional;
+#getTableHandleForStatisticsCollection(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)Ljava/util/Optional;
+#getLayout(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;Ljava/util/Optional;)Ljava/util/Optional;[deprecated]
+#getTableProperties(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableProperties;
+#makeCompatiblePartitioning(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/metadata/TableHandle;
+#getCommonPartitioning(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;Lio/trino/sql/planner/PartitioningHandle;)Ljava/util/Optional;
+#getInfo(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#getTableMetadata(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableMetadata;
+#getTableStatistics(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/statistics/TableStatistics;
+#listTables(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
+#getColumnHandles(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Map;
+#getColumnMetadata(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;)Lio/trino/spi/connector/ColumnMetadata;
+#listTableColumns(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
+#createSchema(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;Lio/trino/spi/security/TrinoPrincipal;)V
+#dropSchema(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)V
+#renameSchema(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#setSchemaAuthorization(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#createTable(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;Z)V
+#renameTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/metadata/QualifiedObjectName;)V
+#setTableComment(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Optional;)V
+#setColumnComment(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/util/Optional;)V
+#renameColumn(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/lang/String;)V
+#addColumn(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnMetadata;)V
+#setTableAuthorization(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#dropColumn(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;)V
+#dropTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
+#getNewTableLayout(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Ljava/util/Optional;
+#beginCreateTable(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;)Lio/trino/metadata/OutputTableHandle;
+#finishCreateTable(Lio/trino/Session;Lio/trino/metadata/OutputTableHandle;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
+#getInsertLayout(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
+#getStatisticsCollectionMetadata(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
+#beginStatisticsCollection(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/AnalyzeTableHandle;
+#finishStatisticsCollection(Lio/trino/Session;Lio/trino/metadata/AnalyzeTableHandle;Ljava/util/Collection;)V
+#cleanupQuery(Lio/trino/Session;)V
+#beginInsert(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/metadata/InsertTableHandle;
+#supportsMissingColumnsOnInsert(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
+#finishInsert(Lio/trino/Session;Lio/trino/metadata/InsertTableHandle;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
+#beginRefreshMaterializedView(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/metadata/InsertTableHandle;
+#finishRefreshMaterializedView(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/metadata/InsertTableHandle;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/List;)Ljava/util/Optional;
+#getUpdateRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#supportsMetadataDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
+#applyDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#executeDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/OptionalLong;
+#beginDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableHandle;
+#finishDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Collection;)V
+#getCatalogHandle(Lio/trino/Session;Ljava/lang/String;)Ljava/util/Optional;
+#getCatalogNames(Lio/trino/Session;)Ljava/util/Map;
+#listViews(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
+#getViews(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
+#getView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/Optional;
+#getSchemaProperties(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)Ljava/util/Map;
+#getSchemaOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)Ljava/util/Optional;
+#createView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorViewDefinition;Z)V
+#renameView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#setViewAuthorization(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#dropView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)V
+#resolveIndex(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/predicate/TupleDomain;)Ljava/util/Optional;
+#usesLegacyTableLayouts(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z[deprecated]
+#applyLimit(Lio/trino/Session;Lio/trino/metadata/TableHandle;J)Ljava/util/Optional;
+#applyFilter(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;)Ljava/util/Optional;
+#applyProjection(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;)Ljava/util/Optional;
+#applySample(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/SampleType;D)Ljava/util/Optional;
+#applyAggregation(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
+#applyTopN(Lio/trino/Session;Lio/trino/metadata/TableHandle;JLjava/util/List;Ljava/util/Map;)Ljava/util/Optional;
+#validateScan(Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
+#createRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
+#dropRole(Lio/trino/Session;Ljava/lang/String;Ljava/lang/String;)V
+#listRoles(Lio/trino/Session;Ljava/lang/String;)Ljava/util/Set;
+#listAllRoleGrants(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
+#listRoleGrants(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#grantRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#revokeRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#listApplicableRoles(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;Ljava/lang/String;)Ljava/util/Set;
+#listEnabledRoles(Lio/trino/Session;Ljava/lang/String;)Ljava/util/Set;
+#grantSchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeSchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#grantTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#listTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
+#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
+#fromSqlType(Ljava/lang/String;)Lio/trino/spi/type/Type;
+#getType(Lio/trino/spi/type/TypeId;)Lio/trino/spi/type/Type;
+#getParameterizedType(Ljava/lang/String;Ljava/util/List;)Lio/trino/spi/type/Type;
+#getTypes()Ljava/util/Collection;
+#getParametricTypes()Ljava/util/Collection;
+#verifyTypes()V
+#addFunctions(Ljava/util/List;)V
+#listFunctions()Ljava/util/List;
+#decodeFunction(Lio/trino/sql/tree/QualifiedName;)Lio/trino/metadata/ResolvedFunction;
+#resolveFunction(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
+#resolveOperator(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/spi/function/OperatorType;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/sql/tree/QualifiedName;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#isAggregationFunction(Lio/trino/sql/tree/QualifiedName;)Z
+#getFunctionMetadata(Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/AggregationFunctionMetadata;
+#getWindowFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/window/WindowFunctionSupplier;
+#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#getScalarFunctionInvoker(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getProcedureRegistry()Lio/trino/metadata/ProcedureRegistry;
+#getBlockEncodingSerde()Lio/trino/spi/block/BlockEncodingSerde;
+#getSessionPropertyManager()Lio/trino/metadata/SessionPropertyManager;
+#getSchemaPropertyManager()Lio/trino/metadata/SchemaPropertyManager;
+#getTablePropertyManager()Lio/trino/metadata/TablePropertyManager;
+#getColumnPropertyManager()Lio/trino/metadata/ColumnPropertyManager;
+#getAnalyzePropertyManager()Lio/trino/metadata/AnalyzePropertyManager;
+#createMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;ZZ)V
+#dropMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)V
+#getMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/Optional;
+#getMaterializedViewFreshness(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/spi/connector/MaterializedViewFreshness;
+#applyTableScanRedirect(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
@352
+#getDeleteRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#getUpdateRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/spi/connector/ColumnHandle;
+#beginUpdate(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/metadata/TableHandle;
+#finishUpdate(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Collection;)V
+#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Optional;
-#getUpdateRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
@353
+#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;
-#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Optional;
@355
+#getTableSchema(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableSchema;
@356
+#getMaterializedViewPropertyManager()Lio/trino/metadata/MaterializedViewPropertyManager;
@358
+#getRedirectionAwareTableHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/metadata/RedirectionAwareTableHandle;
@359
+#delegateMaterializedViewRefreshToConnector(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Z
+#refreshMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lcom/google/common/util/concurrent/ListenableFuture;
+#listMaterializedViews(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
+#getMaterializedViews(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
@362
+#isCatalogManagedSecurity(Lio/trino/Session;Ljava/lang/String;)Z
+#roleExists(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;)Z
+#createRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#dropRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;)V
+#listRoles(Lio/trino/Session;Ljava/util/Optional;)Ljava/util/Set;
+#listAllRoleGrants(Lio/trino/Session;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
+#listRoleGrants(Lio/trino/Session;Ljava/util/Optional;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#grantRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#revokeRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#listApplicableRoles(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;Ljava/util/Optional;)Ljava/util/Set;
+#listEnabledRoles(Lio/trino/spi/security/Identity;)Ljava/util/Set;
-#createRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
-#dropRole(Lio/trino/Session;Ljava/lang/String;Ljava/lang/String;)V
-#listRoles(Lio/trino/Session;Ljava/lang/String;)Ljava/util/Set;
-#listAllRoleGrants(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
-#listRoleGrants(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
-#grantRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#revokeRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#listApplicableRoles(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;Ljava/lang/String;)Ljava/util/Set;
@364
+#getTableHandleForExecute(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;
+#getLayoutForTableExecute(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)Ljava/util/Optional;
+#beginTableExecute(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/BeginTableExecuteResult;
+#finishTableExecute(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;Ljava/util/Collection;Ljava/util/List;)V
+#setTableProperties(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Map;)V
+#getCatalogs(Lio/trino/Session;)Ljava/util/Map;
+#resolveFunction(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
+#resolveOperator(Lio/trino/Session;Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/Session;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/Session;Lio/trino/spi/function/OperatorType;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#getTableProcedureRegistry()Lio/trino/metadata/TableProceduresRegistry;
+#getTableProceduresPropertyManager()Lio/trino/metadata/TableProceduresPropertyManager;
+#renameMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
-#getCatalogNames(Lio/trino/Session;)Ljava/util/Map;
-#resolveFunction(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
-#resolveOperator(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
-#getCoercion(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
-#getCoercion(Lio/trino/spi/function/OperatorType;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
-#getCoercion(Lio/trino/sql/tree/QualifiedName;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
@365
+#truncateTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
+#isView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Z
+#createView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/ViewDefinition;Z)V
+#createMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/MaterializedViewDefinition;ZZ)V
+#isMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Z
+#getRedirectionAwareTableHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/metadata/RedirectionAwareTableHandle;
+#isValidTableVersion(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableVersion;)Z
+#getTableHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;Ljava/util/Optional;)Ljava/util/Optional;
-#createView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorViewDefinition;Z)V
-#createMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;ZZ)V
@366
+#denySchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
+#denyTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
@367
+#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
-#fromSqlType(Ljava/lang/String;)Lio/trino/spi/type/Type;
-#getType(Lio/trino/spi/type/TypeId;)Lio/trino/spi/type/Type;
-#getParameterizedType(Ljava/lang/String;Ljava/util/List;)Lio/trino/spi/type/Type;
-#getTypes()Ljava/util/Collection;
-#getParametricTypes()Ljava/util/Collection;
-#verifyTypes()V
-#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/InternalAggregationFunction;
-#getProcedureRegistry()Lio/trino/metadata/ProcedureRegistry;
-#getTableProcedureRegistry()Lio/trino/metadata/TableProceduresRegistry;
-#getBlockEncodingSerde()Lio/trino/spi/block/BlockEncodingSerde;
-#getSessionPropertyManager()Lio/trino/metadata/SessionPropertyManager;
-#getSchemaPropertyManager()Lio/trino/metadata/SchemaPropertyManager;
-#getTablePropertyManager()Lio/trino/metadata/TablePropertyManager;
-#getMaterializedViewPropertyManager()Lio/trino/metadata/MaterializedViewPropertyManager;
-#getColumnPropertyManager()Lio/trino/metadata/ColumnPropertyManager;
-#getAnalyzePropertyManager()Lio/trino/metadata/AnalyzePropertyManager;
-#getTableProceduresPropertyManager()Lio/trino/metadata/TableProceduresPropertyManager;
@369
+#setMaterializedViewProperties(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#getLayout(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;Ljava/util/Optional;)Ljava/util/Optional;[deprecated]
-#supportsMetadataDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
-#usesLegacyTableLayouts(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z[deprecated]
@370
+#setMaterializedViewProperties(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#setMaterializedViewProperties(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
+#listTableColumns(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
-#listTableColumns(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
@374
+#listFunctions()Ljava/util/Collection;
-#addFunctions(Ljava/util/List;)V
-#listFunctions()Ljava/util/List;
-#getWindowFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/window/WindowFunctionSupplier;
-#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getScalarFunctionInvoker(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@376
+#executeTableExecute(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)V
@378
+#getTableStatistics(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/statistics/TableStatistics;
-#getTableStatistics(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/statistics/TableStatistics;
@379
+#listFunctions(Lio/trino/Session;)Ljava/util/Collection;
+#isAggregationFunction(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;)Z
+#getFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/AggregationFunctionMetadata;
-#listFunctions()Ljava/util/Collection;
-#isAggregationFunction(Lio/trino/sql/tree/QualifiedName;)Z
-#getFunctionMetadata(Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/FunctionMetadata;
-#getAggregationFunctionMetadata(Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/AggregationFunctionMetadata;
@380
+#supportsReportingWrittenBytes(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
+#supportsReportingWrittenBytes(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)Z
@381
+#applyTableFunction(Lio/trino/Session;Lio/trino/metadata/TableFunctionHandle;)Ljava/util/Optional;
@386
+#getStatisticsCollectionMetadata(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Map;)Lio/trino/metadata/AnalyzeMetadata;
+#listCatalogs(Lio/trino/Session;)Ljava/util/List;
-#getTableHandleForStatisticsCollection(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)Ljava/util/Optional;
-#getStatisticsCollectionMetadata(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
-#getCatalogs(Lio/trino/Session;)Ljava/util/Map;
-#isValidTableVersion(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableVersion;)Z
@390
+#setViewComment(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;)V
@392
+#getConnectorCapabilities(Lio/trino/Session;Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
+#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
-#getConnectorCapabilities(Lio/trino/Session;Lio/trino/connector/CatalogName;)Ljava/util/Set;
-#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
@393
+#getRowChangeParadigm(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/RowChangeParadigm;
+#getMergeRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#getUpdateLayout(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#beginMerge(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/MergeHandle;
+#finishMerge(Lio/trino/Session;Lio/trino/metadata/MergeHandle;Ljava/util/Collection;Ljava/util/Collection;)V
@395
+#getFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/spi/function/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/spi/function/AggregationFunctionMetadata;
-#listAllRoleGrants(Lio/trino/Session;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
-#getFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/FunctionMetadata;
-#getAggregationFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/AggregationFunctionMetadata;
@396
+#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;
-#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;
@402
+#setViewColumnComment(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Ljava/util/Optional;)V
@405
+#getConnectorCapabilities(Lio/trino/Session;Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
+#setColumnType(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;Lio/trino/spi/type/Type;)V
+#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
-#getConnectorCapabilities(Lio/trino/Session;Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
-#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
@406
+#renameTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/metadata/QualifiedObjectName;)V
+#dropTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/CatalogSchemaTableName;)V
-#renameTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/metadata/QualifiedObjectName;)V
-#dropTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
-#getDeleteRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
-#getUpdateRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/spi/connector/ColumnHandle;
-#beginDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableHandle;
-#finishDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Collection;)V
-#beginUpdate(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/metadata/TableHandle;
-#finishUpdate(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Collection;)V
@409
+#dropField(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/util/List;)V

+###io/trino/metadata/SqlFunction
@351
+#getFunctionMetadata()Lio/trino/metadata/FunctionMetadata;
+#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
@366
+#getFunctionDependencies(Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
@395
+#getFunctionMetadata()Lio/trino/spi/function/FunctionMetadata;
+#getFunctionDependencies(Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration;
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
-#getFunctionMetadata()Lio/trino/metadata/FunctionMetadata;
-#getFunctionDependencies(Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;

+###io/trino/metadata/InternalTable
@351
+#<init>(Ljava/util/Map;Ljava/lang/Iterable;)V
+#getColumnIndex(Ljava/lang/String;)I
+#getPages()Ljava/util/List;
+#builder([Lio/trino/spi/connector/ColumnMetadata;)Lio/trino/metadata/InternalTable$Builder;
+#builder(Ljava/util/List;)Lio/trino/metadata/InternalTable$Builder;

+###io/trino/metadata/ForNodeManager
@351

+###io/trino/metadata/FunctionDependencies
@351
+#<init>(Lio/trino/metadata/Metadata;Ljava/util/Map;Ljava/util/Collection;)V
+#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
+#getFunctionMetadata(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/FunctionMetadata;
+#getOperatorMetadata(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/FunctionMetadata;
+#getCastMetadata(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/FunctionMetadata;
+#getFunctionInvoker(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getFunctionSignatureInvoker(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getOperatorInvoker(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getOperatorSignatureInvoker(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getCastInvoker(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getCastSignatureInvoker(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@366
+#getFunctionNullability(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/FunctionNullability;
+#getOperatorNullability(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/FunctionNullability;
+#getCastNullability(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/FunctionNullability;
-#getFunctionMetadata(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/FunctionMetadata;
-#getOperatorMetadata(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/FunctionMetadata;
-#getCastMetadata(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/FunctionMetadata;
@374
+#<init>(Ljava/util/function/BiFunction;Ljava/util/Map;Ljava/util/Collection;)V
-#<init>(Lio/trino/metadata/Metadata;Ljava/util/Map;Ljava/util/Collection;)V
@395
-###io/trino/metadata/FunctionDependencies

+###io/trino/metadata/SessionPropertyManager$SessionPropertyValue
@351
+#getFullyQualifiedName()Ljava/lang/String;
+#getCatalogName()Ljava/util/Optional;
+#getPropertyName()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#getDefaultValue()Ljava/lang/String;
+#isHidden()Z

+###io/trino/metadata/FunctionDependencyDeclaration$OperatorDependency
@351
+#getOperatorType()Lio/trino/spi/function/OperatorType;
+#getArgumentTypes()Ljava/util/List;
+#isOptional()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
-###io/trino/metadata/FunctionDependencyDeclaration$OperatorDependency

+###io/trino/metadata/AnalyzeTableHandle
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableHandle;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getConnectorHandle()Lio/trino/spi/connector/ConnectorTableHandle;
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/AnalyzePropertyManager
@351
+#<init>()V
+#getAllProperties()Ljava/util/Map;
@364
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#removeProperties(Lio/trino/connector/CatalogName;)V
+#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@367
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@369
+#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@370
+#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
+#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties()Ljava/util/Map;
-#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#removeProperties(Lio/trino/connector/CatalogName;)V
-#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@392
+#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
-#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@405
+#getAllProperties(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
-#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;

+###io/trino/metadata/ResolvedIndex
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorResolvedIndex;)V
+#getIndexHandle()Lio/trino/metadata/IndexHandle;
+#getUnresolvedTupleDomain()Lio/trino/spi/predicate/TupleDomain;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorResolvedIndex;)V
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorResolvedIndex;)V
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorResolvedIndex;)V
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorResolvedIndex;)V

+###io/trino/metadata/TableMetadata
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTableMetadata;)V
+#getQualifiedName()Lio/trino/metadata/QualifiedObjectName;
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#getTable()Lio/trino/spi/connector/SchemaTableName;
+#getColumns()Ljava/util/List;
+#getColumn(Ljava/lang/String;)Lio/trino/spi/connector/ColumnMetadata;
@392
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)V
+#getCatalogName()Ljava/lang/String;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTableMetadata;)V
-#getCatalogName()Lio/trino/connector/CatalogName;

+###io/trino/metadata/ResolvedFunction$ResolvedFunctionDecoder
@351
+#<init>(Ljava/util/function/Function;)V
+#fromQualifiedName(Lio/trino/sql/tree/QualifiedName;)Ljava/util/Optional;
@377
+#toQualifiedName(Lio/trino/metadata/ResolvedFunction;)Lio/trino/sql/tree/QualifiedName;

+###io/trino/metadata/InMemoryNodeManager
@351
+#<init>()V
+#<init>(Ljava/net/URI;)V
+#addCurrentNodeConnector(Lio/trino/connector/CatalogName;)V
+#addNode(Lio/trino/connector/CatalogName;[Lio/trino/metadata/InternalNode;)V
+#addNode(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;)V
+#getNodes(Lio/trino/metadata/NodeState;)Ljava/util/Set;
+#getActiveConnectorNodes(Lio/trino/connector/CatalogName;)Ljava/util/Set;
+#getAllNodes()Lio/trino/metadata/AllNodes;
+#getCurrentNode()Lio/trino/metadata/InternalNode;
+#getCoordinators()Ljava/util/Set;
+#refreshNodes()V
+#addNodeChangeListener(Ljava/util/function/Consumer;)V
+#removeNodeChangeListener(Ljava/util/function/Consumer;)V
@374
+#removeNode(Lio/trino/metadata/InternalNode;)V
+#removeNode(Lio/trino/connector/CatalogName;Lio/trino/metadata/InternalNode;)V
@375
+#getActiveNodesSnapshot()Lio/trino/metadata/InternalNodeManager$NodesSnapshot;
@392
+#addCurrentNodeCatalog(Lio/trino/connector/CatalogHandle;)V
+#addNode(Lio/trino/connector/CatalogHandle;[Lio/trino/metadata/InternalNode;)V
+#addNode(Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;)V
+#removeNode(Lio/trino/connector/CatalogHandle;Lio/trino/metadata/InternalNode;)V
+#getActiveCatalogNodes(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
-#addCurrentNodeConnector(Lio/trino/connector/CatalogName;)V
-#addNode(Lio/trino/connector/CatalogName;[Lio/trino/metadata/InternalNode;)V
-#addNode(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;)V
-#removeNode(Lio/trino/connector/CatalogName;Lio/trino/metadata/InternalNode;)V
-#getActiveConnectorNodes(Lio/trino/connector/CatalogName;)Ljava/util/Set;
@393
+#<init>([Lio/trino/metadata/InternalNode;)V
+#<init>(Ljava/util/Set;)V
+#addNodes([Lio/trino/metadata/InternalNode;)V
-#<init>()V
-#<init>(Ljava/net/URI;)V
-#addCurrentNodeCatalog(Lio/trino/connector/CatalogHandle;)V
-#addNode(Lio/trino/connector/CatalogHandle;[Lio/trino/metadata/InternalNode;)V
-#addNode(Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;)V
-#removeNode(Lio/trino/connector/CatalogHandle;Lio/trino/metadata/InternalNode;)V
@405
+#getActiveCatalogNodes(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
-#getActiveCatalogNodes(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;

+###io/trino/metadata/TableProperties$TablePartitioning
@351
+#<init>(Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;)V
+#getPartitioningHandle()Lio/trino/sql/planner/PartitioningHandle;
+#getPartitioningColumns()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/metadata/PolymorphicScalarFunctionBuilder$ChoiceBuilder
@351
+#implementation(Ljava/util/function/Function;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder$ChoiceBuilder;
+#returnConvention(Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder$ChoiceBuilder;
+#argumentProperties([Lio/trino/spi/function/InvocationConvention$InvocationArgumentConvention;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder$ChoiceBuilder;
+#build()Lio/trino/metadata/PolymorphicScalarFunction$PolymorphicScalarFunctionChoice;

+###io/trino/metadata/InternalNodeManager
@351
+#getNodes(Lio/trino/metadata/NodeState;)Ljava/util/Set;
+#getActiveConnectorNodes(Lio/trino/connector/CatalogName;)Ljava/util/Set;
+#getCurrentNode()Lio/trino/metadata/InternalNode;
+#getCoordinators()Ljava/util/Set;
+#getAllNodes()Lio/trino/metadata/AllNodes;
+#refreshNodes()V
+#addNodeChangeListener(Ljava/util/function/Consumer;)V
+#removeNodeChangeListener(Ljava/util/function/Consumer;)V
@375
+#getActiveNodesSnapshot()Lio/trino/metadata/InternalNodeManager$NodesSnapshot;
@392
+#getActiveCatalogNodes(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
-#getActiveConnectorNodes(Lio/trino/connector/CatalogName;)Ljava/util/Set;
@405
+#getActiveCatalogNodes(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
-#getActiveCatalogNodes(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;

+###io/trino/metadata/FunctionMetadata
@351
+#<init>(Lio/trino/metadata/Signature;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;)V
+#<init>(Lio/trino/metadata/Signature;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
+#<init>(Lio/trino/metadata/FunctionId;Lio/trino/metadata/Signature;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
+#getFunctionId()Lio/trino/metadata/FunctionId;
+#getSignature()Lio/trino/metadata/Signature;
+#isNullable()Z
+#getArgumentDefinitions()Ljava/util/List;
+#isHidden()Z
+#isDeterministic()Z
+#getDescription()Ljava/lang/String;
+#getKind()Lio/trino/metadata/FunctionKind;
+#isDeprecated()Z
+#toString()Ljava/lang/String;
@353
+#<init>(Lio/trino/metadata/Signature;Ljava/lang/String;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
+#<init>(Lio/trino/metadata/FunctionId;Lio/trino/metadata/Signature;Ljava/lang/String;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
+#getActualName()Ljava/lang/String;
-#<init>(Lio/trino/metadata/Signature;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
-#<init>(Lio/trino/metadata/FunctionId;Lio/trino/metadata/Signature;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
@364
+#getCanonicalName()Ljava/lang/String;
-#getActualName()Ljava/lang/String;
@366
+#<init>(Lio/trino/metadata/Signature;Lio/trino/metadata/FunctionNullability;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;)V
+#<init>(Lio/trino/metadata/Signature;Ljava/lang/String;Lio/trino/metadata/FunctionNullability;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
+#<init>(Lio/trino/metadata/FunctionId;Lio/trino/metadata/Signature;Ljava/lang/String;Lio/trino/metadata/FunctionNullability;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
+#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
-#<init>(Lio/trino/metadata/Signature;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;)V
-#<init>(Lio/trino/metadata/Signature;Ljava/lang/String;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
-#<init>(Lio/trino/metadata/FunctionId;Lio/trino/metadata/Signature;Ljava/lang/String;ZLjava/util/List;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
-#isNullable()Z
-#getArgumentDefinitions()Ljava/util/List;
@379
+#scalarBuilder()Lio/trino/metadata/FunctionMetadata$Builder;
+#aggregateBuilder()Lio/trino/metadata/FunctionMetadata$Builder;
+#windowBuilder()Lio/trino/metadata/FunctionMetadata$Builder;
+#builder(Lio/trino/metadata/FunctionKind;)Lio/trino/metadata/FunctionMetadata$Builder;
-#<init>(Lio/trino/metadata/Signature;Lio/trino/metadata/FunctionNullability;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;)V
-#<init>(Lio/trino/metadata/Signature;Ljava/lang/String;Lio/trino/metadata/FunctionNullability;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
-#<init>(Lio/trino/metadata/FunctionId;Lio/trino/metadata/Signature;Ljava/lang/String;Lio/trino/metadata/FunctionNullability;ZZLjava/lang/String;Lio/trino/metadata/FunctionKind;Z)V
@383
+#getKind()Lio/trino/spi/function/FunctionKind;
+#builder(Lio/trino/spi/function/FunctionKind;)Lio/trino/metadata/FunctionMetadata$Builder;
-#getKind()Lio/trino/metadata/FunctionKind;
-#builder(Lio/trino/metadata/FunctionKind;)Lio/trino/metadata/FunctionMetadata$Builder;
@395
-###io/trino/metadata/FunctionMetadata

+###io/trino/metadata/FunctionInvoker
@351
+#<init>(Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#<init>(Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/util/List;)V
+#getMethodHandle()Ljava/lang/invoke/MethodHandle;
+#getInstanceFactory()Ljava/util/Optional;
+#getLambdaInterfaces()Ljava/util/List;
@395
-###io/trino/metadata/FunctionInvoker

+###io/trino/metadata/TablePropertyManager
@351
+#<init>()V
+#getAllProperties()Ljava/util/Map;
@364
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#removeProperties(Lio/trino/connector/CatalogName;)V
+#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@367
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@369
+#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@370
+#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
+#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties()Ljava/util/Map;
-#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#removeProperties(Lio/trino/connector/CatalogName;)V
-#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@392
+#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
-#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@405
+#getAllProperties(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
-#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;

+###io/trino/metadata/MetadataListing
@351
+#listCatalogs(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)Ljava/util/SortedMap;
+#listCatalogs(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Optional;)Ljava/util/SortedMap;
+#listSchemas(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/lang/String;)Ljava/util/SortedSet;
+#listSchemas(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/lang/String;Ljava/util/Optional;)Ljava/util/SortedSet;
+#listTables(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Set;
+#listViews(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Set;
+#getViews(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
+#listTablePrivileges(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Set;
+#listTableColumns(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
@359
+#listMaterializedViews(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Set;
+#getMaterializedViews(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
@364
+#getCatalogs(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)Ljava/util/SortedMap;
@386
+#listCatalogNames(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)Ljava/util/SortedSet;
+#listCatalogNames(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Optional;)Ljava/util/SortedSet;
+#listCatalogs(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)Ljava/util/List;
-#listCatalogs(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)Ljava/util/SortedMap;
-#listCatalogs(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Optional;)Ljava/util/SortedMap;
-#getCatalogs(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)Ljava/util/SortedMap;

+###io/trino/metadata/NodeState
@351
+#values()[Lio/trino/metadata/NodeState;
+#valueOf(Ljava/lang/String;)Lio/trino/metadata/NodeState;

+###io/trino/metadata/SchemaPropertyManager
@351
+#<init>()V
+#getAllProperties()Ljava/util/Map;
@364
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#removeProperties(Lio/trino/connector/CatalogName;)V
+#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@367
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@369
+#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@370
+#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
+#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties()Ljava/util/Map;
-#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#removeProperties(Lio/trino/connector/CatalogName;)V
-#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@392
+#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
-#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@405
+#getAllProperties(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
-#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;

+###io/trino/metadata/CatalogMetadata
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Ljava/util/Set;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getMetadata()Lio/trino/spi/connector/ConnectorMetadata;
+#getMetadataFor(Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorMetadata;
+#getTransactionHandleFor(Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorId(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/connector/CatalogName;
+#listConnectorIds()Ljava/util/List;
+#getConnectorCapabilities()Ljava/util/Set;
+#toString()Ljava/lang/String;
@360
+#getConnectorIdForSchema(Lio/trino/spi/connector/CatalogSchemaName;)Lio/trino/connector/CatalogName;
@362
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/metadata/Catalog$SecurityManagement;Ljava/util/Set;)V
+#getSecurityManagement()Lio/trino/metadata/Catalog$SecurityManagement;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Ljava/util/Set;)V
@371
+#<init>(Lio/trino/connector/CatalogName;Ljava/util/function/Function;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Ljava/util/function/Function;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Ljava/util/function/Function;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/metadata/Catalog$SecurityManagement;Ljava/util/Set;)V
+#getMetadata(Lio/trino/Session;)Lio/trino/spi/connector/ConnectorMetadata;
+#getMetadataFor(Lio/trino/Session;Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorMetadata;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorMetadata;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/metadata/Catalog$SecurityManagement;Ljava/util/Set;)V
-#getMetadata()Lio/trino/spi/connector/ConnectorMetadata;
-#getMetadataFor(Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorMetadata;
@386
+#<init>(Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogMetadata$SecurityManagement;Ljava/util/Set;)V
+#isSingleStatementWritesOnly()Z
+#commit()V
+#abort()V
+#getSecurityManagement()Lio/trino/metadata/CatalogMetadata$SecurityManagement;
-#<init>(Lio/trino/connector/CatalogName;Ljava/util/function/Function;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Ljava/util/function/Function;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/connector/CatalogName;Ljava/util/function/Function;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/metadata/Catalog$SecurityManagement;Ljava/util/Set;)V
-#getSecurityManagement()Lio/trino/metadata/Catalog$SecurityManagement;
@392
+#<init>(Ljava/lang/String;Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogMetadata$SecurityManagement;Ljava/util/Set;)V
+#getCatalogName()Ljava/lang/String;
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
+#getMetadataFor(Lio/trino/Session;Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorMetadata;
+#getTransactionHandleFor(Lio/trino/connector/CatalogHandle$CatalogHandleType;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getTransactionHandleFor(Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorHandleForSchema(Lio/trino/spi/connector/CatalogSchemaName;)Lio/trino/connector/CatalogHandle;
+#getCatalogHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/connector/CatalogHandle;
+#listCatalogHandles()Ljava/util/List;
-#<init>(Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogTransaction;Lio/trino/metadata/CatalogMetadata$SecurityManagement;Ljava/util/Set;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
-#getMetadataFor(Lio/trino/Session;Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorMetadata;
-#getTransactionHandleFor(Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getConnectorIdForSchema(Lio/trino/spi/connector/CatalogSchemaName;)Lio/trino/connector/CatalogName;
-#getConnectorId(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/connector/CatalogName;
-#listConnectorIds()Ljava/util/List;
@405
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
+#getMetadataFor(Lio/trino/Session;Lio/trino/spi/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorMetadata;
+#getTransactionHandleFor(Lio/trino/spi/connector/CatalogHandle$CatalogHandleType;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getTransactionHandleFor(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorHandleForSchema(Lio/trino/spi/connector/CatalogSchemaName;)Lio/trino/spi/connector/CatalogHandle;
+#getCatalogHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/spi/connector/CatalogHandle;
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#getMetadataFor(Lio/trino/Session;Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorMetadata;
-#getTransactionHandleFor(Lio/trino/connector/CatalogHandle$CatalogHandleType;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getTransactionHandleFor(Lio/trino/connector/CatalogHandle;)Lio/trino/spi/connector/ConnectorTransactionHandle;
-#getConnectorHandleForSchema(Lio/trino/spi/connector/CatalogSchemaName;)Lio/trino/connector/CatalogHandle;
-#getCatalogHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/SqlScalarFunction
@351
+#getFunctionMetadata()Lio/trino/metadata/FunctionMetadata;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionMetadata()Lio/trino/spi/function/FunctionMetadata;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionMetadata()Lio/trino/metadata/FunctionMetadata;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/metadata/FunctionRegistry
@351
+#<init>(Ljava/util/function/Supplier;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
+#addFunctions(Ljava/util/List;)V
+#list()Ljava/util/List;
+#get(Lio/trino/sql/tree/QualifiedName;)Ljava/util/Collection;
+#get(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/AggregationFunctionMetadata;
+#getWindowFunctionImplementation(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
+#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#getScalarFunctionInvoker(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@352
+#<init>(Ljava/util/function/Supplier;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Ljava/lang/String;)V
-#<init>(Ljava/util/function/Supplier;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
@364
+#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/AggregationFunctionMetadata;
-#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/AggregationFunctionMetadata;
@365
+#<init>(Ljava/util/function/Supplier;Lio/trino/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Ljava/lang/String;)V
-#<init>(Ljava/util/function/Supplier;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Ljava/lang/String;)V
@366
+#getWindowFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
+#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#getScalarFunctionInvoker(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
-#getWindowFunctionImplementation(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
-#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
-#getScalarFunctionInvoker(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@367
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Ljava/lang/String;)V
+#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#<init>(Ljava/util/function/Supplier;Lio/trino/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Ljava/lang/String;)V
-#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@374
-###io/trino/metadata/FunctionRegistry

+###io/trino/metadata/StaticCatalogStoreConfig
@351
+#<init>()V
+#getCatalogConfigurationDir()Ljava/io/File;
+#setCatalogConfigurationDir(Ljava/io/File;)Lio/trino/metadata/StaticCatalogStoreConfig;
+#getDisabledCatalogs()Ljava/util/List;
+#setDisabledCatalogs(Ljava/lang/String;)Lio/trino/metadata/StaticCatalogStoreConfig;
+#setDisabledCatalogs(Ljava/util/List;)Lio/trino/metadata/StaticCatalogStoreConfig;
@393
-###io/trino/metadata/StaticCatalogStoreConfig

+###io/trino/metadata/Split
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/execution/Lifespan;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getConnectorSplit()Lio/trino/spi/connector/ConnectorSplit;
+#getLifespan()Lio/trino/execution/Lifespan;
+#getInfo()Ljava/lang/Object;
+#getAddresses()Ljava/util/List;
+#isRemotelyAccessible()Z
+#toString()Ljava/lang/String;
@364
+#getSplitWeight()Lio/trino/spi/SplitWeight;
@371
+#getRetainedSizeInBytes()J
@388
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorSplit;)V
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/execution/Lifespan;)V
-#getLifespan()Lio/trino/execution/Lifespan;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorSplit;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorSplit;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorSplit;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorSplit;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/ColumnPropertyManager
@351
+#<init>()V
+#getAllProperties()Ljava/util/Map;
@364
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#removeProperties(Lio/trino/connector/CatalogName;)V
+#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@367
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@369
+#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@370
+#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
+#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties()Ljava/util/Map;
-#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#removeProperties(Lio/trino/connector/CatalogName;)V
-#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@392
+#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
-#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@405
+#getAllProperties(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
-#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;

+###io/trino/metadata/TypeVariableConstraint
@351
+#<init>(Ljava/lang/String;ZZLjava/lang/String;Ljava/util/Set;Ljava/util/Set;)V
+#getName()Ljava/lang/String;
+#isComparableRequired()Z
+#isOrderableRequired()Z
+#getVariadicBound()Ljava/lang/String;
+#getCastableTo()Ljava/util/Set;
+#getCastableFrom()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@379
+#getVariadicBound()Ljava/util/Optional;
+#typeVariable(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
+#builder(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#fromJson(Ljava/lang/String;ZZLjava/util/Optional;Ljava/util/Set;Ljava/util/Set;)Lio/trino/metadata/TypeVariableConstraint;[deprecated]
-#<init>(Ljava/lang/String;ZZLjava/lang/String;Ljava/util/Set;Ljava/util/Set;)V
-#getVariadicBound()Ljava/lang/String;
@395
-###io/trino/metadata/TypeVariableConstraint

+###io/trino/metadata/InternalTable$Builder
@351
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#add([Ljava/lang/Object;)Lio/trino/metadata/InternalTable$Builder;
+#atLimit(Ljava/util/OptionalLong;)Z
+#build()Lio/trino/metadata/InternalTable;

+###io/trino/metadata/HandleResolver
@351
+#<init>()V
+#addCatalogHandleResolver(Ljava/lang/String;Lio/trino/spi/connector/ConnectorHandleResolver;)V
+#removeCatalogHandleResolver(Ljava/lang/String;)V
+#getId(Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/lang/String;
+#getId(Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Ljava/lang/String;
+#getId(Lio/trino/spi/connector/ColumnHandle;)Ljava/lang/String;
+#getId(Lio/trino/spi/connector/ConnectorSplit;)Ljava/lang/String;
+#getId(Lio/trino/spi/connector/ConnectorIndexHandle;)Ljava/lang/String;
+#getId(Lio/trino/spi/connector/ConnectorOutputTableHandle;)Ljava/lang/String;
+#getId(Lio/trino/spi/connector/ConnectorInsertTableHandle;)Ljava/lang/String;
+#getId(Lio/trino/spi/connector/ConnectorPartitioningHandle;)Ljava/lang/String;
+#getId(Lio/trino/spi/connector/ConnectorTransactionHandle;)Ljava/lang/String;
+#getTableHandleClass(Ljava/lang/String;)Ljava/lang/Class;
+#getTableLayoutHandleClass(Ljava/lang/String;)Ljava/lang/Class;
+#getColumnHandleClass(Ljava/lang/String;)Ljava/lang/Class;
+#getSplitClass(Ljava/lang/String;)Ljava/lang/Class;
+#getIndexHandleClass(Ljava/lang/String;)Ljava/lang/Class;
+#getOutputTableHandleClass(Ljava/lang/String;)Ljava/lang/Class;
+#getInsertTableHandleClass(Ljava/lang/String;)Ljava/lang/Class;
+#getPartitioningHandleClass(Ljava/lang/String;)Ljava/lang/Class;
+#getTransactionHandleClass(Ljava/lang/String;)Ljava/lang/Class;
@364
+#getId(Lio/trino/spi/connector/ConnectorTableExecuteHandle;)Ljava/lang/String;
+#getTableExecuteHandleClass(Ljava/lang/String;)Ljava/lang/Class;
@369
+#setExchangeManagerHandleResolver(Lio/trino/spi/exchange/ExchangeManagerHandleResolver;)V
+#getExchangeSinkInstanceHandleClass()Ljava/lang/Class;
+#getExchangeSourceHandleHandleClass()Ljava/lang/Class;
-#getId(Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Ljava/lang/String;
-#getTableLayoutHandleClass(Ljava/lang/String;)Ljava/lang/Class;
@370
+#registerClassLoader(Lio/trino/server/PluginClassLoader;)V
+#unregisterClassLoader(Lio/trino/server/PluginClassLoader;)V
+#getId(Ljava/lang/Object;)Ljava/lang/String;
+#getHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#addCatalogHandleResolver(Ljava/lang/String;Lio/trino/spi/connector/ConnectorHandleResolver;)V
-#setExchangeManagerHandleResolver(Lio/trino/spi/exchange/ExchangeManagerHandleResolver;)V
-#removeCatalogHandleResolver(Ljava/lang/String;)V
-#getId(Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/lang/String;
-#getId(Lio/trino/spi/connector/ColumnHandle;)Ljava/lang/String;
-#getId(Lio/trino/spi/connector/ConnectorSplit;)Ljava/lang/String;
-#getId(Lio/trino/spi/connector/ConnectorIndexHandle;)Ljava/lang/String;
-#getId(Lio/trino/spi/connector/ConnectorOutputTableHandle;)Ljava/lang/String;
-#getId(Lio/trino/spi/connector/ConnectorInsertTableHandle;)Ljava/lang/String;
-#getId(Lio/trino/spi/connector/ConnectorTableExecuteHandle;)Ljava/lang/String;
-#getId(Lio/trino/spi/connector/ConnectorPartitioningHandle;)Ljava/lang/String;
-#getId(Lio/trino/spi/connector/ConnectorTransactionHandle;)Ljava/lang/String;
-#getTableHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#getColumnHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#getSplitClass(Ljava/lang/String;)Ljava/lang/Class;
-#getIndexHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#getOutputTableHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#getInsertTableHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#getTableExecuteHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#getPartitioningHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#getTransactionHandleClass(Ljava/lang/String;)Ljava/lang/Class;
-#getExchangeSinkInstanceHandleClass()Ljava/lang/Class;
-#getExchangeSourceHandleHandleClass()Ljava/lang/Class;

+###io/trino/metadata/PolymorphicScalarFunctionBuilder$SpecializeContext
@351
+#getType(Ljava/lang/String;)Lio/trino/spi/type/Type;
+#getLiteral(Ljava/lang/String;)Ljava/lang/Long;
+#getParameterTypes()Ljava/util/List;
+#getReturnType()Lio/trino/spi/type/Type;

+###io/trino/metadata/Signature
@351
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/TypeSignature;Ljava/util/List;Z)V
+#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;[Lio/trino/spi/type/TypeSignature;)V
+#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;Ljava/util/List;)V
+#isOperatorName(Ljava/lang/String;)Z
+#mangleOperatorName(Lio/trino/spi/function/OperatorType;)Ljava/lang/String;
+#unmangleOperator(Ljava/lang/String;)Lio/trino/spi/function/OperatorType;
+#getName()Ljava/lang/String;
+#getReturnType()Lio/trino/spi/type/TypeSignature;
+#getArgumentTypes()Ljava/util/List;
+#isVariableArity()Z
+#getTypeVariableConstraints()Ljava/util/List;
+#getLongVariableConstraints()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#withVariadicBound(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
+#comparableWithVariadicBound(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
+#typeVariable(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
+#comparableTypeParameter(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
+#orderableWithVariadicBound(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
+#orderableTypeParameter(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
+#castableToTypeParameter(Ljava/lang/String;[Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/TypeVariableConstraint;
+#castableToTypeParameter(Ljava/lang/String;Ljava/util/Set;)Lio/trino/metadata/TypeVariableConstraint;
+#castableFromTypeParameter(Ljava/lang/String;[Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/TypeVariableConstraint;
+#castableFromTypeParameter(Ljava/lang/String;Ljava/util/Set;)Lio/trino/metadata/TypeVariableConstraint;
+#longVariableExpression(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/LongVariableConstraint;
+#builder()Lio/trino/metadata/SignatureBuilder;
@379
+#withName(Ljava/lang/String;)Lio/trino/metadata/Signature;
+#builder()Lio/trino/metadata/Signature$Builder;
+#fromJson(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/TypeSignature;Ljava/util/List;Z)Lio/trino/metadata/Signature;[deprecated]
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/TypeSignature;Ljava/util/List;Z)V
-#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;[Lio/trino/spi/type/TypeSignature;)V
-#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;Ljava/util/List;)V
-#withVariadicBound(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
-#comparableWithVariadicBound(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
-#typeVariable(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
-#comparableTypeParameter(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
-#orderableWithVariadicBound(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
-#orderableTypeParameter(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint;
-#castableToTypeParameter(Ljava/lang/String;[Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/TypeVariableConstraint;
-#castableToTypeParameter(Ljava/lang/String;Ljava/util/Set;)Lio/trino/metadata/TypeVariableConstraint;
-#castableFromTypeParameter(Ljava/lang/String;[Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/TypeVariableConstraint;
-#castableFromTypeParameter(Ljava/lang/String;Ljava/util/Set;)Lio/trino/metadata/TypeVariableConstraint;
-#longVariableExpression(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/LongVariableConstraint;
-#builder()Lio/trino/metadata/SignatureBuilder;
@395
-###io/trino/metadata/Signature

+###io/trino/metadata/FunctionDependencyDeclaration$FunctionDependency
@351
+#getName()Lio/trino/sql/tree/QualifiedName;
+#getArgumentTypes()Ljava/util/List;
+#isOptional()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
-###io/trino/metadata/FunctionDependencyDeclaration$FunctionDependency

+###io/trino/metadata/FunctionResolver
@351
+#<init>(Lio/trino/metadata/Metadata;)V
@367
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@381
+#toPath(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;)Ljava/util/List;
@395
+#toPath(Lio/trino/Session;Lio/trino/spi/function/QualifiedFunctionName;)Ljava/util/List;
-#toPath(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;)Ljava/util/List;

+###io/trino/metadata/OperatorNotFoundException
@351
+#<init>(Lio/trino/spi/function/OperatorType;Ljava/util/List;)V
+#<init>(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/type/TypeSignature;)V
+#getOperatorType()Lio/trino/spi/function/OperatorType;
+#getReturnType()Lio/trino/spi/type/TypeSignature;
+#getArgumentTypes()Ljava/util/List;
@352
+#<init>(Lio/trino/spi/function/OperatorType;Ljava/util/List;Ljava/lang/Throwable;)V
+#<init>(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/type/TypeSignature;Ljava/lang/Throwable;)V
-#<init>(Lio/trino/spi/function/OperatorType;Ljava/util/List;)V
-#<init>(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/type/TypeSignature;)V

+###io/trino/metadata/OutputTableHandle
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorOutputTableHandle;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorHandle()Lio/trino/spi/connector/ConnectorOutputTableHandle;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@387
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorOutputTableHandle;)V
+#getTableName()Lio/trino/spi/connector/SchemaTableName;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorOutputTableHandle;)V
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorOutputTableHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorOutputTableHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorOutputTableHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorOutputTableHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/SqlAggregationFunction
@351
+#createFunctionByAnnotations(Ljava/lang/Class;)Ljava/util/List;
+#createFunctionsByAnnotations(Ljava/lang/Class;)Ljava/util/List;
+#getFunctionMetadata()Lio/trino/metadata/FunctionMetadata;
+#getAggregationMetadata(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/AggregationFunctionMetadata;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@364
+#<init>(Lio/trino/metadata/FunctionMetadata;Lio/trino/metadata/AggregationFunctionMetadata;)V
+#getAggregationMetadata()Lio/trino/metadata/AggregationFunctionMetadata;
-#createFunctionByAnnotations(Ljava/lang/Class;)Ljava/util/List;
-#getAggregationMetadata(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/AggregationFunctionMetadata;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@395
+#<init>(Lio/trino/spi/function/FunctionMetadata;Lio/trino/spi/function/AggregationFunctionMetadata;)V
+#getFunctionMetadata()Lio/trino/spi/function/FunctionMetadata;
+#getAggregationMetadata()Lio/trino/spi/function/AggregationFunctionMetadata;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/AggregationImplementation;
-#<init>(Lio/trino/metadata/FunctionMetadata;Lio/trino/metadata/AggregationFunctionMetadata;)V
-#getFunctionMetadata()Lio/trino/metadata/FunctionMetadata;
-#getAggregationMetadata()Lio/trino/metadata/AggregationFunctionMetadata;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/metadata/PolymorphicScalarFunctionBuilder$MethodsGroupBuilder
@351
+#methods([Ljava/lang/String;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder$MethodsGroupBuilder;
+#methods(Ljava/util/List;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder$MethodsGroupBuilder;
+#withExtraParameters(Ljava/util/function/Function;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder$MethodsGroupBuilder;
+#methodWithExplicitJavaTypes(Ljava/lang/String;Ljava/util/List;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder$MethodsGroupBuilder;
+#build()Lio/trino/metadata/PolymorphicScalarFunctionBuilder$MethodsGroup;

+###io/trino/metadata/CatalogManager
@351
+#<init>()V
+#registerCatalog(Lio/trino/metadata/Catalog;)V
+#removeCatalog(Ljava/lang/String;)Ljava/util/Optional;
+#getCatalogs()Ljava/util/List;
+#getCatalog(Ljava/lang/String;)Ljava/util/Optional;
@386
+#getCatalogNames()Ljava/util/Set;
-#getCatalogs()Ljava/util/List;
@393
+#getCatalogProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Optional;
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
-#<init>()V
-#registerCatalog(Lio/trino/metadata/Catalog;)V
-#removeCatalog(Ljava/lang/String;)Ljava/util/Optional;
@405
+#getCatalogProperties(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Optional;
-#getCatalogProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Optional;
@408
+#createCatalog(Ljava/lang/String;Lio/trino/connector/ConnectorName;Ljava/util/Map;Z)V
+#dropCatalog(Ljava/lang/String;Z)V
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V

+###io/trino/metadata/InternalNode
@351
+#<init>(Ljava/lang/String;Ljava/net/URI;Lio/trino/client/NodeVersion;Z)V
+#getNodeIdentifier()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#getHttpUri()Ljava/net/URI;[deprecated]
+#getInternalUri()Ljava/net/URI;
+#getHostAndPort()Lio/trino/spi/HostAddress;
+#getVersion()Ljava/lang/String;
+#isCoordinator()Z
+#getNodeVersion()Lio/trino/client/NodeVersion;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@365
+#getInternalAddress()Ljava/net/InetAddress;

+###io/trino/metadata/MetadataUtil
@351
+#checkTableName(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#checkCatalogName(Ljava/lang/String;)Ljava/lang/String;
+#checkSchemaName(Ljava/lang/String;)Ljava/lang/String;
+#checkTableName(Ljava/lang/String;)Ljava/lang/String;
+#checkObjectName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#checkLowerCase(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#findColumnMetadata(Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/lang/String;)Lio/trino/spi/connector/ColumnMetadata;
+#getSessionCatalog(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;)Ljava/lang/String;
+#createCatalogSchemaName(Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/util/Optional;)Lio/trino/spi/connector/CatalogSchemaName;
+#createQualifiedObjectName(Lio/trino/Session;Lio/trino/sql/tree/Node;Lio/trino/sql/tree/QualifiedName;)Lio/trino/metadata/QualifiedObjectName;
+#createPrincipal(Lio/trino/Session;Lio/trino/sql/tree/GrantorSpecification;)Lio/trino/spi/security/TrinoPrincipal;
+#createPrincipal(Lio/trino/sql/tree/PrincipalSpecification;)Lio/trino/spi/security/TrinoPrincipal;
+#createPrincipal(Lio/trino/spi/security/TrinoPrincipal;)Lio/trino/sql/tree/PrincipalSpecification;
+#tableExists(Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/lang/String;)Z
@362
+#getRequiredCatalogHandle(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/lang/String;)Lio/trino/connector/CatalogName;
+#checkRoleExists(Lio/trino/Session;Lio/trino/sql/tree/Node;Lio/trino/metadata/Metadata;Lio/trino/spi/security/TrinoPrincipal;Ljava/util/Optional;)V
+#checkRoleExists(Lio/trino/Session;Lio/trino/sql/tree/Node;Lio/trino/metadata/Metadata;Ljava/lang/String;Ljava/util/Optional;)V
+#processRoleCommandCatalog(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/util/Optional;Z)Ljava/util/Optional;
-#getSessionCatalog(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;)Ljava/lang/String;
@363
+#processRoleCommandCatalog(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/util/Optional;)Ljava/util/Optional;
-#processRoleCommandCatalog(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/util/Optional;Z)Ljava/util/Optional;
@392
+#getRequiredCatalogHandle(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/lang/String;)Lio/trino/connector/CatalogHandle;
-#getRequiredCatalogHandle(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/lang/String;)Lio/trino/connector/CatalogName;
@405
+#getRequiredCatalogHandle(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/lang/String;)Lio/trino/spi/connector/CatalogHandle;
-#getRequiredCatalogHandle(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/tree/Node;Ljava/lang/String;)Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/SqlOperator
@351
@379
-###io/trino/metadata/SqlOperator

+###io/trino/metadata/InsertTableHandle
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorInsertTableHandle;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorHandle()Lio/trino/spi/connector/ConnectorInsertTableHandle;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorInsertTableHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorInsertTableHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorInsertTableHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorInsertTableHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/PolymorphicScalarFunctionBuilder
@351
+#<init>(Ljava/lang/Class;)V
+#signature(Lio/trino/metadata/Signature;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
+#nullableResult(Z)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
+#argumentDefinitions([Lio/trino/metadata/FunctionArgumentDefinition;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
+#description(Ljava/lang/String;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
+#hidden(Z)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
+#deterministic(Z)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
+#choice(Ljava/util/function/Function;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
+#build()Lio/trino/metadata/SqlScalarFunction;
+#concat([Ljava/util/function/Function;)Ljava/util/function/Function;
+#constant(Ljava/lang/Object;)Ljava/util/function/Function;
@366
+#argumentNullability([Z)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
-#argumentDefinitions([Lio/trino/metadata/FunctionArgumentDefinition;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
@395
+#signature(Lio/trino/spi/function/Signature;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;
-#signature(Lio/trino/metadata/Signature;)Lio/trino/metadata/PolymorphicScalarFunctionBuilder;

+###io/trino/metadata/RemoteHandleResolver
@351
+#<init>()V
+#getTableHandleClass()Ljava/lang/Class;
+#getTableLayoutHandleClass()Ljava/lang/Class;
+#getColumnHandleClass()Ljava/lang/Class;
+#getSplitClass()Ljava/lang/Class;
+#getTransactionHandleClass()Ljava/lang/Class;
+#getPartitioningHandleClass()Ljava/lang/Class;
@369
-#getTableLayoutHandleClass()Ljava/lang/Class;
@370
-###io/trino/metadata/RemoteHandleResolver

+###io/trino/metadata/AnalyzeMetadata
@351
+#<init>(Lio/trino/spi/statistics/TableStatisticsMetadata;Lio/trino/metadata/TableHandle;)V
+#getStatisticsMetadata()Lio/trino/spi/statistics/TableStatisticsMetadata;
+#getTableHandle()Lio/trino/metadata/TableHandle;

+###io/trino/metadata/RemoteNodeState
@351
+#<init>(Lio/airlift/http/client/HttpClient;Ljava/net/URI;)V
+#getNodeState()Ljava/util/Optional;
+#asyncRefresh()V

+###io/trino/metadata/AllNodes
@351
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
+#getActiveNodes()Ljava/util/Set;
+#getInactiveNodes()Ljava/util/Set;
+#getShuttingDownNodes()Ljava/util/Set;
+#getActiveCoordinators()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/metadata/TableHandle
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Ljava/util/Optional;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getConnectorHandle()Lio/trino/spi/connector/ConnectorTableHandle;
+#getLayout()Ljava/util/Optional;
+#getTransaction()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@364
+#withConnectorHandle(Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/metadata/TableHandle;
@369
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Ljava/util/Optional;)V
-#getLayout()Ljava/util/Optional;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/LongVariableConstraint
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getExpression()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@379
+#fromJson(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/LongVariableConstraint;[deprecated]
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
@395
-###io/trino/metadata/LongVariableConstraint

+###io/trino/metadata/FunctionDependencies$FunctionKey
@351
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
-###io/trino/metadata/FunctionDependencies$FunctionKey

+###io/trino/metadata/MetadataManager
@351
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
+#createTestMetadataManager()Lio/trino/metadata/MetadataManager;
+#createTestMetadataManager(Lio/trino/sql/analyzer/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
+#createTestMetadataManager(Lio/trino/metadata/CatalogManager;)Lio/trino/metadata/MetadataManager;
+#createTestMetadataManager(Lio/trino/metadata/CatalogManager;Lio/trino/sql/analyzer/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
+#createTestMetadataManager(Lio/trino/transaction/TransactionManager;Lio/trino/sql/analyzer/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
+#getConnectorCapabilities(Lio/trino/Session;Lio/trino/connector/CatalogName;)Ljava/util/Set;
+#catalogExists(Lio/trino/Session;Ljava/lang/String;)Z
+#schemaExists(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)Z
+#listSchemaNames(Lio/trino/Session;Ljava/lang/String;)Ljava/util/List;
+#getTableHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/Optional;
+#getTableHandleForStatisticsCollection(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)Ljava/util/Optional;
+#getSystemTable(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/Optional;
+#getLayout(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;Ljava/util/Optional;)Ljava/util/Optional;
+#getTableProperties(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableProperties;
+#makeCompatiblePartitioning(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/metadata/TableHandle;
+#getCommonPartitioning(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;Lio/trino/sql/planner/PartitioningHandle;)Ljava/util/Optional;
+#getInfo(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#getTableMetadata(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableMetadata;
+#getTableStatistics(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/statistics/TableStatistics;
+#getColumnHandles(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Map;
+#getColumnMetadata(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;)Lio/trino/spi/connector/ColumnMetadata;
+#listTables(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
+#listTableColumns(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
+#createSchema(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;Lio/trino/spi/security/TrinoPrincipal;)V
+#dropSchema(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)V
+#renameSchema(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#setSchemaAuthorization(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#createTable(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;Z)V
+#renameTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/metadata/QualifiedObjectName;)V
+#setTableComment(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Optional;)V
+#setColumnComment(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/util/Optional;)V
+#renameColumn(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/lang/String;)V
+#addColumn(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnMetadata;)V
+#dropColumn(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;)V
+#setTableAuthorization(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#dropTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
+#getInsertLayout(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
+#getStatisticsCollectionMetadata(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
+#beginStatisticsCollection(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/AnalyzeTableHandle;
+#finishStatisticsCollection(Lio/trino/Session;Lio/trino/metadata/AnalyzeTableHandle;Ljava/util/Collection;)V
+#getNewTableLayout(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Ljava/util/Optional;
+#cleanupQuery(Lio/trino/Session;)V
+#beginCreateTable(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;)Lio/trino/metadata/OutputTableHandle;
+#finishCreateTable(Lio/trino/Session;Lio/trino/metadata/OutputTableHandle;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
+#beginInsert(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/metadata/InsertTableHandle;
+#supportsMissingColumnsOnInsert(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
+#finishInsert(Lio/trino/Session;Lio/trino/metadata/InsertTableHandle;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
+#beginRefreshMaterializedView(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/metadata/InsertTableHandle;
+#finishRefreshMaterializedView(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/metadata/InsertTableHandle;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/List;)Ljava/util/Optional;
+#getUpdateRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#supportsMetadataDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
+#applyDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#executeDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/OptionalLong;
+#beginDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableHandle;
+#finishDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Collection;)V
+#getCatalogHandle(Lio/trino/Session;Ljava/lang/String;)Ljava/util/Optional;
+#getCatalogNames(Lio/trino/Session;)Ljava/util/Map;
+#listViews(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
+#getViews(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
+#getSchemaProperties(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)Ljava/util/Map;
+#getSchemaOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)Ljava/util/Optional;
+#getView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/Optional;
+#createView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorViewDefinition;Z)V
+#renameView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#setViewAuthorization(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#dropView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)V
+#createMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;ZZ)V
+#dropMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)V
+#getMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Ljava/util/Optional;
+#getMaterializedViewFreshness(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/spi/connector/MaterializedViewFreshness;
+#applyTableScanRedirect(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#resolveIndex(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/predicate/TupleDomain;)Ljava/util/Optional;
+#usesLegacyTableLayouts(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
+#applyLimit(Lio/trino/Session;Lio/trino/metadata/TableHandle;J)Ljava/util/Optional;
+#applySample(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/SampleType;D)Ljava/util/Optional;
+#applyAggregation(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
+#applyTopN(Lio/trino/Session;Lio/trino/metadata/TableHandle;JLjava/util/List;Ljava/util/Map;)Ljava/util/Optional;
+#validateScan(Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
+#applyFilter(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;)Ljava/util/Optional;
+#applyProjection(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;)Ljava/util/Optional;
+#createRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
+#dropRole(Lio/trino/Session;Ljava/lang/String;Ljava/lang/String;)V
+#listRoles(Lio/trino/Session;Ljava/lang/String;)Ljava/util/Set;
+#listAllRoleGrants(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
+#listRoleGrants(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#grantRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#revokeRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#listApplicableRoles(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;Ljava/lang/String;)Ljava/util/Set;
+#listEnabledRoles(Lio/trino/Session;Ljava/lang/String;)Ljava/util/Set;
+#grantTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#grantSchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeSchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#listTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
+#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
+#fromSqlType(Ljava/lang/String;)Lio/trino/spi/type/Type;
+#getType(Lio/trino/spi/type/TypeId;)Lio/trino/spi/type/Type;
+#getTypes()Ljava/util/Collection;
+#getParametricTypes()Ljava/util/Collection;
+#addType(Lio/trino/spi/type/Type;)V
+#addParametricType(Lio/trino/spi/type/ParametricType;)V
+#verifyTypes()V
+#addFunctions(Ljava/util/List;)V
+#listFunctions()Ljava/util/List;
+#decodeFunction(Lio/trino/sql/tree/QualifiedName;)Lio/trino/metadata/ResolvedFunction;
+#resolveFunction(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
+#resolveOperator(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/spi/function/OperatorType;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/sql/tree/QualifiedName;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
+#isAggregationFunction(Lio/trino/sql/tree/QualifiedName;)Z
+#getFunctionMetadata(Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/AggregationFunctionMetadata;
+#getWindowFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/window/WindowFunctionSupplier;
+#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#getScalarFunctionInvoker(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#toFunctionBinding(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/Signature;)Lio/trino/metadata/FunctionBinding;
+#getProcedureRegistry()Lio/trino/metadata/ProcedureRegistry;
+#getBlockEncodingSerde()Lio/trino/spi/block/BlockEncodingSerde;
+#addBlockEncoding(Lio/trino/spi/block/BlockEncoding;)V
+#getSessionPropertyManager()Lio/trino/metadata/SessionPropertyManager;
+#getSchemaPropertyManager()Lio/trino/metadata/SchemaPropertyManager;
+#getTablePropertyManager()Lio/trino/metadata/TablePropertyManager;
+#getColumnPropertyManager()Lio/trino/metadata/ColumnPropertyManager;
+#getAnalyzePropertyManager()Lio/trino/metadata/AnalyzePropertyManager;
+#getActiveQueryIds()Ljava/util/Set;
@352
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
+#getDeleteRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#getUpdateRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/spi/connector/ColumnHandle;
+#beginUpdate(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/metadata/TableHandle;
+#finishUpdate(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Collection;)V
+#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Optional;
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
-#getUpdateRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
@353
+#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;
-#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Optional;
@355
+#getTableSchema(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableSchema;
@356
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
+#getMaterializedViewPropertyManager()Lio/trino/metadata/MaterializedViewPropertyManager;
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
@358
+#getRedirectionAwareTableHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lio/trino/metadata/RedirectionAwareTableHandle;
@359
+#delegateMaterializedViewRefreshToConnector(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Z
+#refreshMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Lcom/google/common/util/concurrent/ListenableFuture;
+#listMaterializedViews(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
+#getMaterializedViews(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
@362
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
+#isCatalogManagedSecurity(Lio/trino/Session;Ljava/lang/String;)Z
+#roleExists(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;)Z
+#createRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#dropRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;)V
+#listRoles(Lio/trino/Session;Ljava/util/Optional;)Ljava/util/Set;
+#listAllRoleGrants(Lio/trino/Session;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
+#listRoleGrants(Lio/trino/Session;Ljava/util/Optional;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#grantRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#revokeRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#listApplicableRoles(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;Ljava/util/Optional;)Ljava/util/Set;
+#listEnabledRoles(Lio/trino/spi/security/Identity;)Ljava/util/Set;
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
-#createRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
-#dropRole(Lio/trino/Session;Ljava/lang/String;Ljava/lang/String;)V
-#listRoles(Lio/trino/Session;Ljava/lang/String;)Ljava/util/Set;
-#listAllRoleGrants(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
-#listRoleGrants(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
-#grantRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#revokeRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#listApplicableRoles(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;Ljava/lang/String;)Ljava/util/Set;
@364
+#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
+#getTableHandleForExecute(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;
+#getLayoutForTableExecute(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)Ljava/util/Optional;
+#beginTableExecute(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/BeginTableExecuteResult;
+#finishTableExecute(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;Ljava/util/Collection;Ljava/util/List;)V
+#setTableProperties(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Map;)V
+#getCatalogs(Lio/trino/Session;)Ljava/util/Map;
+#renameMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#resolveFunction(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
+#resolveOperator(Lio/trino/Session;Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/Session;Lio/trino/spi/function/OperatorType;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#getCoercion(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#resolve(Lio/trino/Session;Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
+#getTableProcedureRegistry()Lio/trino/metadata/TableProceduresRegistry;
+#getTableProceduresPropertyManager()Lio/trino/metadata/TableProceduresPropertyManager;
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
-#getCatalogNames(Lio/trino/Session;)Ljava/util/Map;
-#resolveFunction(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
-#resolveOperator(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/ResolvedFunction;
-#getCoercion(Lio/trino/spi/function/OperatorType;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
-#getCoercion(Lio/trino/sql/tree/QualifiedName;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
-#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
@365
+#<init>(Lio/trino/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
+#createTestMetadataManager(Lio/trino/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
+#createTestMetadataManager(Lio/trino/metadata/CatalogManager;Lio/trino/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
+#createTestMetadataManager(Lio/trino/transaction/TransactionManager;Lio/trino/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
+#getTableHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;Ljava/util/Optional;)Ljava/util/Optional;
+#truncateTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
+#isView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Z
+#createView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/ViewDefinition;Z)V
+#createMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/MaterializedViewDefinition;ZZ)V
+#isMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;)Z
+#getRedirectionAwareTableHandle(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/metadata/RedirectionAwareTableHandle;
+#isValidTableVersion(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableVersion;)Z
-#<init>(Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
-#createTestMetadataManager(Lio/trino/sql/analyzer/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
-#createTestMetadataManager(Lio/trino/metadata/CatalogManager;Lio/trino/sql/analyzer/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
-#createTestMetadataManager(Lio/trino/transaction/TransactionManager;Lio/trino/sql/analyzer/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
-#createView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorViewDefinition;Z)V
-#createMaterializedView(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;ZZ)V
@366
+#denyTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
+#denySchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
+#resolve(Lio/trino/Session;Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionMetadata;Lio/trino/metadata/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
-#resolve(Lio/trino/Session;Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
@367
+#<init>(Lio/trino/FeaturesConfig;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/spi/type/TypeManager;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/client/NodeVersion;)V
+#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/AggregationMetadata;
-#<init>(Lio/trino/FeaturesConfig;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)V
-#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
-#fromSqlType(Ljava/lang/String;)Lio/trino/spi/type/Type;
-#getType(Lio/trino/spi/type/TypeId;)Lio/trino/spi/type/Type;
-#getTypes()Ljava/util/Collection;
-#getParametricTypes()Ljava/util/Collection;
-#addType(Lio/trino/spi/type/Type;)V
-#addParametricType(Lio/trino/spi/type/ParametricType;)V
-#verifyTypes()V
-#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/InternalAggregationFunction;
-#getProcedureRegistry()Lio/trino/metadata/ProcedureRegistry;
-#getTableProcedureRegistry()Lio/trino/metadata/TableProceduresRegistry;
-#getBlockEncodingSerde()Lio/trino/spi/block/BlockEncodingSerde;
-#addBlockEncoding(Lio/trino/spi/block/BlockEncoding;)V
-#getSessionPropertyManager()Lio/trino/metadata/SessionPropertyManager;
-#getSchemaPropertyManager()Lio/trino/metadata/SchemaPropertyManager;
-#getTablePropertyManager()Lio/trino/metadata/TablePropertyManager;
-#getMaterializedViewPropertyManager()Lio/trino/metadata/MaterializedViewPropertyManager;
-#getColumnPropertyManager()Lio/trino/metadata/ColumnPropertyManager;
-#getAnalyzePropertyManager()Lio/trino/metadata/AnalyzePropertyManager;
-#getTableProceduresPropertyManager()Lio/trino/metadata/TableProceduresPropertyManager;
@369
+#setMaterializedViewProperties(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#getLayout(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;Ljava/util/Optional;)Ljava/util/Optional;
-#supportsMetadataDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
-#usesLegacyTableLayouts(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
@370
+#setMaterializedViewProperties(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#setMaterializedViewProperties(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
+#listTableColumns(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/List;
-#listTableColumns(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Map;
@374
+#<init>(Lio/trino/FeaturesConfig;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/spi/type/TypeManager;)V
+#listFunctions()Ljava/util/Collection;
+#testMetadataManagerBuilder()Lio/trino/metadata/MetadataManager$TestMetadataManagerBuilder;
-#<init>(Lio/trino/FeaturesConfig;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/spi/type/TypeManager;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/client/NodeVersion;)V
-#createTestMetadataManager(Lio/trino/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
-#createTestMetadataManager(Lio/trino/metadata/CatalogManager;)Lio/trino/metadata/MetadataManager;
-#createTestMetadataManager(Lio/trino/metadata/CatalogManager;Lio/trino/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
-#createTestMetadataManager(Lio/trino/transaction/TransactionManager;Lio/trino/FeaturesConfig;)Lio/trino/metadata/MetadataManager;
-#addFunctions(Ljava/util/List;)V
-#listFunctions()Ljava/util/List;
-#getWindowFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/window/WindowFunctionSupplier;
-#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getScalarFunctionInvoker(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@376
+#executeTableExecute(Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)V
@378
+#getTableStatistics(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/statistics/TableStatistics;
-#getTableStatistics(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/statistics/TableStatistics;
@379
+#listFunctions(Lio/trino/Session;)Ljava/util/Collection;
+#isAggregationFunction(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;)Z
+#getFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/AggregationFunctionMetadata;
-#listFunctions()Ljava/util/Collection;
-#isAggregationFunction(Lio/trino/sql/tree/QualifiedName;)Z
-#getFunctionMetadata(Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/FunctionMetadata;
-#getAggregationFunctionMetadata(Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/AggregationFunctionMetadata;
@380
+#supportsReportingWrittenBytes(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)Z
+#supportsReportingWrittenBytes(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Z
@381
+#applyTableFunction(Lio/trino/Session;Lio/trino/metadata/TableFunctionHandle;)Ljava/util/Optional;
@385
+#<init>(Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/spi/type/TypeManager;)V
-#<init>(Lio/trino/FeaturesConfig;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/spi/type/TypeManager;)V
@386
+#getStatisticsCollectionMetadata(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Map;)Lio/trino/metadata/AnalyzeMetadata;
+#listCatalogs(Lio/trino/Session;)Ljava/util/List;
-#getTableHandleForStatisticsCollection(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)Ljava/util/Optional;
-#getStatisticsCollectionMetadata(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
-#getCatalogs(Lio/trino/Session;)Ljava/util/Map;
-#isValidTableVersion(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableVersion;)Z
@390
+#setViewComment(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;)V
@392
+#getConnectorCapabilities(Lio/trino/Session;Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
+#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
-#getConnectorCapabilities(Lio/trino/Session;Lio/trino/connector/CatalogName;)Ljava/util/Set;
-#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
@393
+#getMergeRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#getUpdateLayout(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Ljava/util/Optional;
+#getRowChangeParadigm(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/RowChangeParadigm;
+#beginMerge(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/MergeHandle;
+#finishMerge(Lio/trino/Session;Lio/trino/metadata/MergeHandle;Ljava/util/Collection;Ljava/util/Collection;)V
@395
+#toQualifiedFunctionName(Lio/trino/sql/tree/QualifiedName;)Lio/trino/spi/function/QualifiedFunctionName;
+#resolve(Lio/trino/Session;Lio/trino/connector/CatalogHandle;Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionMetadata;Lio/trino/spi/function/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
+#getFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/spi/function/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/spi/function/AggregationFunctionMetadata;
+#toFunctionBinding(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/Signature;)Lio/trino/metadata/FunctionBinding;
-#listAllRoleGrants(Lio/trino/Session;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
-#resolve(Lio/trino/Session;Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionMetadata;Lio/trino/metadata/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
-#getFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/FunctionMetadata;
-#getAggregationFunctionMetadata(Lio/trino/Session;Lio/trino/metadata/ResolvedFunction;)Lio/trino/metadata/AggregationFunctionMetadata;
-#toFunctionBinding(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/Signature;)Lio/trino/metadata/FunctionBinding;
@396
+#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;
-#applyJoin(Lio/trino/Session;Lio/trino/spi/connector/JoinType;Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;
@402
+#setViewColumnComment(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Ljava/util/Optional;)V
@405
+#getConnectorCapabilities(Lio/trino/Session;Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
+#setColumnType(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;Lio/trino/spi/type/Type;)V
+#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
+#resolve(Lio/trino/Session;Lio/trino/spi/connector/CatalogHandle;Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionMetadata;Lio/trino/spi/function/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
-#getConnectorCapabilities(Lio/trino/Session;Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
-#getStatisticsCollectionMetadataForWrite(Lio/trino/Session;Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
-#resolve(Lio/trino/Session;Lio/trino/connector/CatalogHandle;Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionMetadata;Lio/trino/spi/function/FunctionDependencyDeclaration;)Lio/trino/metadata/ResolvedFunction;
@406
+#renameTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/metadata/QualifiedObjectName;)V
+#dropTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/CatalogSchemaTableName;)V
-#renameTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/metadata/QualifiedObjectName;)V
-#dropTable(Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
-#getDeleteRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/spi/connector/ColumnHandle;
-#getUpdateRowIdColumnHandle(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/spi/connector/ColumnHandle;
-#beginDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/TableHandle;
-#finishDelete(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Collection;)V
-#beginUpdate(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/List;)Lio/trino/metadata/TableHandle;
-#finishUpdate(Lio/trino/Session;Lio/trino/metadata/TableHandle;Ljava/util/Collection;)V
@409
+#dropField(Lio/trino/Session;Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/util/List;)V

+###io/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder
@351
+#addType(Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addFunction(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addFunctionSignature(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalFunction(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalFunctionSignature(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOperator(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOperatorSignature(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalOperator(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalOperatorSignature(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addCast(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addCastSignature(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalCast(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalCastSignature(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#build()Lio/trino/metadata/FunctionDependencyDeclaration;
@395
-###io/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder

+###io/trino/metadata/SessionPropertyManager
@351
+#<init>()V
+#<init>(Lio/trino/SystemSessionProperties;)V
+#<init>(Ljava/util/List;)V
+#addSystemSessionProperties(Ljava/util/List;)V
+#addSystemSessionProperty(Lio/trino/spi/session/PropertyMetadata;)V
+#addConnectorSessionProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
+#removeConnectorSessionProperties(Lio/trino/connector/CatalogName;)V
+#getSystemSessionPropertyMetadata(Ljava/lang/String;)Ljava/util/Optional;
+#getConnectorSessionPropertyMetadata(Lio/trino/connector/CatalogName;Ljava/lang/String;)Ljava/util/Optional;
+#getAllSessionProperties(Lio/trino/Session;Ljava/util/Map;)Ljava/util/List;
+#decodeSystemPropertyValue(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#decodeCatalogPropertyValue(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#validateSystemSessionProperty(Ljava/lang/String;Ljava/lang/String;)V
+#validateCatalogSessionProperty(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#evaluatePropertyValue(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/lang/Object;
+#serializeSessionProperty(Lio/trino/spi/type/Type;Ljava/lang/Object;)Ljava/lang/String;
@360
+#<init>(Lio/trino/SystemSessionPropertiesProvider;)V
+#<init>(Ljava/util/Set;)V
-#<init>(Lio/trino/SystemSessionProperties;)V
@365
+#validateCatalogSessionProperty(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;)V
-#validateCatalogSessionProperty(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@367
+#evaluatePropertyValue(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/lang/Object;
-#evaluatePropertyValue(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/lang/Object;
@386
+#getAllSessionProperties(Lio/trino/Session;Ljava/util/List;)Ljava/util/List;
-#getAllSessionProperties(Lio/trino/Session;Ljava/util/Map;)Ljava/util/List;
@388
+#<init>(Ljava/util/Set;Lio/trino/connector/CatalogServiceProvider;)V
-#<init>(Ljava/util/Set;)V
-#<init>(Ljava/util/List;)V
-#addConnectorSessionProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
-#removeConnectorSessionProperties(Lio/trino/connector/CatalogName;)V
@392
+#getConnectorSessionPropertyMetadata(Lio/trino/connector/CatalogHandle;Ljava/lang/String;)Ljava/util/Optional;
+#decodeCatalogPropertyValue(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#validateCatalogSessionProperty(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/lang/String;)V
-#getConnectorSessionPropertyMetadata(Lio/trino/connector/CatalogName;Ljava/lang/String;)Ljava/util/Optional;
-#decodeCatalogPropertyValue(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
-#validateCatalogSessionProperty(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;)V
@405
+#getConnectorSessionPropertyMetadata(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;)Ljava/util/Optional;
+#decodeCatalogPropertyValue(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#validateCatalogSessionProperty(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Ljava/lang/String;)V
-#getConnectorSessionPropertyMetadata(Lio/trino/connector/CatalogHandle;Ljava/lang/String;)Ljava/util/Optional;
-#decodeCatalogPropertyValue(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
-#validateCatalogSessionProperty(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/lang/String;)V

+###io/trino/metadata/ResolvedFunction
@351
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionId;Ljava/util/Map;Ljava/util/Set;)V
+#getSignature()Lio/trino/metadata/BoundSignature;
+#getFunctionId()Lio/trino/metadata/FunctionId;
+#getTypeDependencies()Ljava/util/Map;
+#getFunctionDependencies()Ljava/util/Set;
+#isResolved(Lio/trino/sql/tree/QualifiedName;)Z
+#toQualifiedName()Lio/trino/sql/tree/QualifiedName;
+#extractFunctionName(Lio/trino/sql/tree/QualifiedName;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@366
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionId;Lio/trino/metadata/FunctionKind;ZLio/trino/metadata/FunctionNullability;Ljava/util/Map;Ljava/util/Set;)V
+#getFunctionKind()Lio/trino/metadata/FunctionKind;
+#isDeterministic()Z
+#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
-#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionId;Ljava/util/Map;Ljava/util/Set;)V
@383
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionId;Lio/trino/spi/function/FunctionKind;ZLio/trino/metadata/FunctionNullability;Ljava/util/Map;Ljava/util/Set;)V
+#getFunctionKind()Lio/trino/spi/function/FunctionKind;
-#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionId;Lio/trino/metadata/FunctionKind;ZLio/trino/metadata/FunctionNullability;Ljava/util/Map;Ljava/util/Set;)V
-#getFunctionKind()Lio/trino/metadata/FunctionKind;
@395
+#<init>(Lio/trino/spi/function/BoundSignature;Lio/trino/connector/CatalogHandle;Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/FunctionKind;ZLio/trino/spi/function/FunctionNullability;Ljava/util/Map;Ljava/util/Set;)V
+#getSignature()Lio/trino/spi/function/BoundSignature;
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
+#getFunctionId()Lio/trino/spi/function/FunctionId;
+#getFunctionNullability()Lio/trino/spi/function/FunctionNullability;
-#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionId;Lio/trino/spi/function/FunctionKind;ZLio/trino/metadata/FunctionNullability;Ljava/util/Map;Ljava/util/Set;)V
-#getSignature()Lio/trino/metadata/BoundSignature;
-#getFunctionId()Lio/trino/metadata/FunctionId;
-#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
@405
+#<init>(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/FunctionKind;ZLio/trino/spi/function/FunctionNullability;Ljava/util/Map;Ljava/util/Set;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/spi/function/BoundSignature;Lio/trino/connector/CatalogHandle;Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/FunctionKind;ZLio/trino/spi/function/FunctionNullability;Ljava/util/Map;Ljava/util/Set;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/Catalog
@351
+#<init>(Ljava/lang/String;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;)V
+#getCatalogName()Ljava/lang/String;
+#getConnectorCatalogName()Lio/trino/connector/CatalogName;
+#getInformationSchemaId()Lio/trino/connector/CatalogName;
+#getSystemTablesId()Lio/trino/connector/CatalogName;
+#getConnector(Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/Connector;
+#toString()Ljava/lang/String;
@362
+#<init>(Ljava/lang/String;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/metadata/Catalog$SecurityManagement;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;)V
+#getSecurityManagement()Lio/trino/metadata/Catalog$SecurityManagement;
-#<init>(Ljava/lang/String;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;)V
@364
+#<init>(Ljava/lang/String;Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/spi/connector/Connector;Lio/trino/metadata/Catalog$SecurityManagement;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;)V
+#getConnectorName()Ljava/lang/String;
-#<init>(Ljava/lang/String;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/metadata/Catalog$SecurityManagement;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;)V
@386
+#<init>(Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/connector/ConnectorManager$MaterializedConnector;Lio/trino/connector/CatalogName;Lio/trino/connector/ConnectorManager$MaterializedConnector;Lio/trino/connector/CatalogName;Lio/trino/connector/ConnectorManager$MaterializedConnector;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#beginTransaction(Lio/trino/transaction/TransactionId;Lio/trino/spi/transaction/IsolationLevel;ZZ)Lio/trino/metadata/CatalogMetadata;
-#<init>(Ljava/lang/String;Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/spi/connector/Connector;Lio/trino/metadata/Catalog$SecurityManagement;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;)V
-#getCatalogName()Ljava/lang/String;
-#getConnectorCatalogName()Lio/trino/connector/CatalogName;
-#getSecurityManagement()Lio/trino/metadata/Catalog$SecurityManagement;
-#getInformationSchemaId()Lio/trino/connector/CatalogName;
-#getSystemTablesId()Lio/trino/connector/CatalogName;
-#getConnector(Lio/trino/connector/CatalogName;)Lio/trino/spi/connector/Connector;
@388
+#<init>(Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/connector/ConnectorManager$ConnectorServices;Lio/trino/connector/CatalogName;Lio/trino/connector/ConnectorManager$ConnectorServices;Lio/trino/connector/CatalogName;Lio/trino/connector/ConnectorManager$ConnectorServices;)V
-#<init>(Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/connector/ConnectorManager$MaterializedConnector;Lio/trino/connector/CatalogName;Lio/trino/connector/ConnectorManager$MaterializedConnector;Lio/trino/connector/CatalogName;Lio/trino/connector/ConnectorManager$MaterializedConnector;)V
@392
+#<init>(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;)V
+#getCatalogName()Ljava/lang/String;
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Ljava/lang/String;Lio/trino/connector/ConnectorManager$ConnectorServices;Lio/trino/connector/CatalogName;Lio/trino/connector/ConnectorManager$ConnectorServices;Lio/trino/connector/CatalogName;Lio/trino/connector/ConnectorManager$ConnectorServices;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;
@408
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Lio/trino/connector/ConnectorName;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;)V
+#failedCatalog(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Lio/trino/connector/ConnectorName;)Lio/trino/metadata/Catalog;
+#getConnectorName()Lio/trino/connector/ConnectorName;
+#isFailed()Z
+#verify()V
-#<init>(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;)V
-#getConnectorName()Ljava/lang/String;

+###io/trino/metadata/ProcedureRegistry
@351
+#<init>()V
+#addProcedures(Lio/trino/connector/CatalogName;Ljava/util/Collection;)V
+#removeProcedures(Lio/trino/connector/CatalogName;)V
+#resolve(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/procedure/Procedure;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#addProcedures(Lio/trino/connector/CatalogName;Ljava/util/Collection;)V
-#removeProcedures(Lio/trino/connector/CatalogName;)V
@392
+#resolve(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/procedure/Procedure;
-#resolve(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/procedure/Procedure;
@405
+#resolve(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/procedure/Procedure;
-#resolve(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/procedure/Procedure;

+###io/trino/metadata/LiteralFunction
@351
+#<init>(Ljava/util/function/Supplier;)V
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#typeForMagicLiteral(Lio/trino/spi/type/Type;)Lio/trino/spi/type/Type;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@367
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;)V
-#<init>(Ljava/util/function/Supplier;)V
@395
+#specialize(Lio/trino/spi/function/BoundSignature;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/metadata/FunctionId
@351
+#<init>(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toFunctionId(Lio/trino/metadata/Signature;)Lio/trino/metadata/FunctionId;
@395
-###io/trino/metadata/FunctionId

+###io/trino/metadata/TableProperties
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableProperties;)V
+#getPredicate()Lio/trino/spi/predicate/TupleDomain;
+#getLocalProperties()Ljava/util/List;
+#getTablePartitioning()Ljava/util/Optional;
+#getStreamPartitioningColumns()Ljava/util/Optional;
+#getDiscretePredicates()Ljava/util/Optional;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableProperties;)V
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableProperties;)V
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableProperties;)V
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableProperties;)V

+###io/trino/metadata/FunctionDependencies$OperatorKey
@351
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
-###io/trino/metadata/FunctionDependencies$OperatorKey

+###io/trino/metadata/FunctionDependencyDeclaration
@351
+#builder()Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#getTypeDependencies()Ljava/util/Set;
+#getFunctionDependencies()Ljava/util/Set;
+#getOperatorDependencies()Ljava/util/Set;
+#getCastDependencies()Ljava/util/Set;
@395
-###io/trino/metadata/FunctionDependencyDeclaration

+###io/trino/metadata/AbstractTypedJacksonModule
@351

+###io/trino/metadata/UndeclaredDependencyException
@351
+#<init>(Ljava/lang/String;)V

+###io/trino/metadata/BoundSignature
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getReturnType()Lio/trino/spi/type/Type;
+#getArgumentTypes()Ljava/util/List;
+#toSignature()Lio/trino/metadata/Signature;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@366
+#getArity()I
+#getArgumentType(I)Lio/trino/spi/type/Type;
@395
-###io/trino/metadata/BoundSignature

+###io/trino/metadata/FunctionBinding
@351
+#<init>(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Ljava/util/Map;Ljava/util/Map;)V
+#getFunctionId()Lio/trino/metadata/FunctionId;
+#getBoundSignature()Lio/trino/metadata/BoundSignature;
+#getArity()I
+#getTypeVariable(Ljava/lang/String;)Lio/trino/spi/type/Type;
+#containsTypeVariable(Ljava/lang/String;)Z
+#getLongVariable(Ljava/lang/String;)Ljava/lang/Long;
+#containsLongVariable(Ljava/lang/String;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@395
+#<init>(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Ljava/util/Map;Ljava/util/Map;)V
+#getFunctionId()Lio/trino/spi/function/FunctionId;
+#getBoundSignature()Lio/trino/spi/function/BoundSignature;
-#<init>(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Ljava/util/Map;Ljava/util/Map;)V
-#getFunctionId()Lio/trino/metadata/FunctionId;
-#getBoundSignature()Lio/trino/metadata/BoundSignature;

+###io/trino/metadata/FunctionListBuilder
@351
+#<init>()V
+#window(Ljava/lang/Class;)Lio/trino/metadata/FunctionListBuilder;
+#aggregate(Ljava/lang/Class;)Lio/trino/metadata/FunctionListBuilder;
+#aggregates(Ljava/lang/Class;)Lio/trino/metadata/FunctionListBuilder;
+#scalar(Ljava/lang/Class;)Lio/trino/metadata/FunctionListBuilder;
+#scalars(Ljava/lang/Class;)Lio/trino/metadata/FunctionListBuilder;
+#functions([Lio/trino/metadata/SqlFunction;)Lio/trino/metadata/FunctionListBuilder;
+#function(Lio/trino/metadata/SqlFunction;)Lio/trino/metadata/FunctionListBuilder;
+#getFunctions()Ljava/util/List;
@364
-#aggregate(Ljava/lang/Class;)Lio/trino/metadata/FunctionListBuilder;
@374
-###io/trino/metadata/FunctionListBuilder

+###io/trino/metadata/SignatureBinder
@351
+#bind(Ljava/util/List;)Ljava/util/Optional;
+#bind(Ljava/util/List;Lio/trino/spi/type/Type;)Ljava/util/Optional;
+#canBind(Ljava/util/List;)Z
+#canBind(Ljava/util/List;Lio/trino/spi/type/TypeSignature;)Z
+#applyBoundVariables(Lio/trino/metadata/Signature;Lio/trino/metadata/FunctionBinding;I)Lio/trino/metadata/Signature;
+#applyBoundVariables(Ljava/util/List;Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#applyBoundVariables(Lio/trino/spi/type/TypeSignature;Lio/trino/metadata/FunctionBinding;)Lio/trino/spi/type/TypeSignature;
+#bindFunction(Lio/trino/metadata/FunctionId;Lio/trino/metadata/Signature;Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionBinding;
@395
+#applyBoundVariables(Lio/trino/spi/function/Signature;Lio/trino/metadata/FunctionBinding;I)Lio/trino/spi/function/Signature;
+#bindFunction(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/Signature;Lio/trino/spi/function/BoundSignature;)Lio/trino/metadata/FunctionBinding;
-#applyBoundVariables(Lio/trino/metadata/Signature;Lio/trino/metadata/FunctionBinding;I)Lio/trino/metadata/Signature;
-#bindFunction(Lio/trino/metadata/FunctionId;Lio/trino/metadata/Signature;Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionBinding;

+###io/trino/metadata/QualifiedObjectName
@351
+#valueOf(Ljava/lang/String;)Lio/trino/metadata/QualifiedObjectName;
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#getSchemaName()Ljava/lang/String;
+#getObjectName()Ljava/lang/String;
+#asSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#asCatalogSchemaTableName()Lio/trino/spi/connector/CatalogSchemaTableName;
+#asSchemaRoutineName()Lio/trino/spi/connector/SchemaRoutineName;
+#asCatalogSchemaRoutineName()Lio/trino/spi/connector/CatalogSchemaRoutineName;
+#asQualifiedTablePrefix()Lio/trino/metadata/QualifiedTablePrefix;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#convertFromSchemaTableName(Ljava/lang/String;)Ljava/util/function/Function;

+###io/trino/metadata/FunctionDependencyDeclaration$CastDependency
@351
+#getFromType()Lio/trino/spi/type/TypeSignature;
+#getToType()Lio/trino/spi/type/TypeSignature;
+#isOptional()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
-###io/trino/metadata/FunctionDependencyDeclaration$CastDependency

+###io/trino/metadata/TableLayoutResult
@351
+#<init>(Lio/trino/metadata/TableHandle;Lio/trino/metadata/TableProperties;Lio/trino/spi/predicate/TupleDomain;)V
+#getNewTableHandle()Lio/trino/metadata/TableHandle;
+#getTableProperties()Lio/trino/metadata/TableProperties;
+#getUnenforcedConstraint()Lio/trino/spi/predicate/TupleDomain;
+#computeEnforced(Lio/trino/spi/predicate/TupleDomain;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/predicate/TupleDomain;
@369
-###io/trino/metadata/TableLayoutResult

+###io/trino/metadata/SignatureBuilder
@351
+#<init>()V
+#name(Ljava/lang/String;)Lio/trino/metadata/SignatureBuilder;
+#operatorType(Lio/trino/spi/function/OperatorType;)Lio/trino/metadata/SignatureBuilder;
+#typeVariableConstraints([Lio/trino/metadata/TypeVariableConstraint;)Lio/trino/metadata/SignatureBuilder;
+#typeVariableConstraints(Ljava/util/List;)Lio/trino/metadata/SignatureBuilder;
+#returnType(Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/SignatureBuilder;
+#longVariableConstraints([Lio/trino/metadata/LongVariableConstraint;)Lio/trino/metadata/SignatureBuilder;
+#longVariableConstraints(Ljava/util/List;)Lio/trino/metadata/SignatureBuilder;
+#argumentTypes([Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/SignatureBuilder;
+#argumentTypes(Ljava/util/List;)Lio/trino/metadata/SignatureBuilder;
+#setVariableArity(Z)Lio/trino/metadata/SignatureBuilder;
+#build()Lio/trino/metadata/Signature;
@379
-###io/trino/metadata/SignatureBuilder

+###io/trino/metadata/DiscoveryNodeManager
@351
+#<init>(Lio/airlift/discovery/client/ServiceSelector;Lio/airlift/node/NodeInfo;Lio/trino/failuredetector/FailureDetector;Lio/trino/client/NodeVersion;Lio/airlift/http/client/HttpClient;Lio/trino/server/InternalCommunicationConfig;)V
+#startPollingNodeStates()V
+#stop()V
+#refreshNodes()V
+#getAllNodes()Lio/trino/metadata/AllNodes;
+#getActiveNodeCount()I
+#getInactiveNodeCount()I
+#getShuttingDownNodeCount()I
+#getNodes(Lio/trino/metadata/NodeState;)Ljava/util/Set;
+#getActiveConnectorNodes(Lio/trino/connector/CatalogName;)Ljava/util/Set;
+#getCurrentNode()Lio/trino/metadata/InternalNode;
+#getCoordinators()Ljava/util/Set;
+#addNodeChangeListener(Ljava/util/function/Consumer;)V
+#removeNodeChangeListener(Ljava/util/function/Consumer;)V
@374
+#destroy()V
@375
+#getActiveNodesSnapshot()Lio/trino/metadata/InternalNodeManager$NodesSnapshot;
@392
+#getActiveCatalogNodes(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
-#getActiveConnectorNodes(Lio/trino/connector/CatalogName;)Ljava/util/Set;
@393
+#<init>(Lio/airlift/discovery/client/ServiceSelector;Lio/airlift/node/NodeInfo;Lio/trino/failuredetector/FailureDetector;Lio/trino/client/NodeVersion;Lio/airlift/http/client/HttpClient;Lio/trino/server/InternalCommunicationConfig;Lio/trino/connector/CatalogManagerConfig;)V
-#<init>(Lio/airlift/discovery/client/ServiceSelector;Lio/airlift/node/NodeInfo;Lio/trino/failuredetector/FailureDetector;Lio/trino/client/NodeVersion;Lio/airlift/http/client/HttpClient;Lio/trino/server/InternalCommunicationConfig;)V
@405
+#getActiveCatalogNodes(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
-#getActiveCatalogNodes(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;

+###io/trino/metadata/NewTableLayout
@351
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorNewTableLayout;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getLayout()Lio/trino/spi/connector/ConnectorNewTableLayout;
+#getPartitioning()Ljava/util/Optional;
+#getPartitionColumns()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@370
-###io/trino/metadata/NewTableLayout

+###io/trino/metadata/FunctionKind
@351
+#values()[Lio/trino/metadata/FunctionKind;
+#valueOf(Ljava/lang/String;)Lio/trino/metadata/FunctionKind;
@383
-###io/trino/metadata/FunctionKind

+###io/trino/metadata/FunctionArgumentDefinition
@351
+#<init>(Z)V
+#isNullable()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/operator/OperatorInfo
@351
+#isFinal()Z

+###io/trino/operator/DriverYieldSignal
@351
+#<init>()V
+#setWithDelay(JLjava/util/concurrent/ScheduledExecutorService;)V
+#reset()V
+#isSet()Z
+#toString()Ljava/lang/String;
+#forceYieldForTesting()V
+#resetYieldForTesting()V

+###io/trino/operator/NestedLoopBuildOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/NestedLoopJoinBridge;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
@358
-###io/trino/operator/NestedLoopBuildOperator

+###io/trino/operator/MergeOperator$MergeOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/trino/sql/gen/OrderingCompiler;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SourceOperator;
+#noMoreOperators()V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
@369
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/trino/sql/gen/OrderingCompiler;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/trino/sql/gen/OrderingCompiler;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V

+###io/trino/operator/SimplePageWithPositionEqualsAndHash
@352
+#<init>(Ljava/util/List;Ljava/util/List;Lio/trino/type/BlockTypeOperators;)V
+#equals(Lio/trino/spi/Page;ILio/trino/spi/Page;I)Z
+#hashCode(Lio/trino/spi/Page;I)J

+###io/trino/operator/PartitionedLookupSourceFactory
@351
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLio/trino/type/BlockTypeOperators;)V
+#getTypes()Ljava/util/List;
+#getOutputTypes()Ljava/util/List;
+#partitions()I
+#createLookupSourceProvider()Lcom/google/common/util/concurrent/ListenableFuture;
+#whenBuildFinishes()Lcom/google/common/util/concurrent/ListenableFuture;
+#lendPartitionLookupSource(ILjava/util/function/Supplier;)Lcom/google/common/util/concurrent/ListenableFuture;
+#setPartitionSpilledLookupSourceHandle(ILio/trino/operator/SpilledLookupSourceHandle;)V
+#finishProbeOperator(Ljava/util/OptionalInt;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getOuterPositionIterator()Lio/trino/operator/OuterPositionIterator;
+#destroy()V
+#isDestroyed()Lcom/google/common/util/concurrent/ListenableFuture;
@358
-###io/trino/operator/PartitionedLookupSourceFactory

+###io/trino/operator/PageTransportErrorException
@351
+#<init>(Lio/trino/spi/HostAddress;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/HostAddress;Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/trino/operator/SimplePageWithPositionComparator
@351
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/TypeOperators;)V
+#compareTo(Lio/trino/spi/Page;ILio/trino/spi/Page;I)I

+###io/trino/operator/NestedLoopJoinPagesSupplier
@351
+#<init>()V
+#getPagesFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#setPages(Lio/trino/operator/NestedLoopJoinPages;)Lcom/google/common/util/concurrent/ListenableFuture;
+#destroy()V
@358
-###io/trino/operator/NestedLoopJoinPagesSupplier

+###io/trino/operator/HttpPageBufferClient$PageResponseHandler
@351
+#handleException(Lio/airlift/http/client/Request;Ljava/lang/Exception;)Lio/trino/operator/HttpPageBufferClient$PagesResponse;
+#handle(Lio/airlift/http/client/Request;Lio/airlift/http/client/Response;)Lio/trino/operator/HttpPageBufferClient$PagesResponse;
+#handle(Lio/airlift/http/client/Request;Lio/airlift/http/client/Response;)Ljava/lang/Object;
+#handleException(Lio/airlift/http/client/Request;Ljava/lang/Exception;)Ljava/lang/Object;

+###io/trino/operator/JoinProbe
@351
+#getOutputChannels()[I
+#advanceNextPosition()Z
+#isFinished()Z
+#getCurrentJoinPosition(Lio/trino/operator/LookupSource;)J
+#getPosition()I
+#getPage()Lio/trino/spi/Page;
@358
-###io/trino/operator/JoinProbe

+###io/trino/operator/HttpPageBufferClient$PagesResponse
@351
+#createPagesResponse(Ljava/lang/String;JJLjava/lang/Iterable;Z)Lio/trino/operator/HttpPageBufferClient$PagesResponse;
+#createEmptyPagesResponse(Ljava/lang/String;JJZ)Lio/trino/operator/HttpPageBufferClient$PagesResponse;
+#getToken()J
+#getNextToken()J
+#getPages()Ljava/util/List;
+#isClientComplete()Z
+#getTaskInstanceId()Ljava/lang/String;
+#toString()Ljava/lang/String;
@366
+#createPagesResponse(Ljava/lang/String;JJLjava/lang/Iterable;ZZ)Lio/trino/operator/HttpPageBufferClient$PagesResponse;
+#createEmptyPagesResponse(Ljava/lang/String;JJZZ)Lio/trino/operator/HttpPageBufferClient$PagesResponse;
+#isTaskFailed()Z
-#createPagesResponse(Ljava/lang/String;JJLjava/lang/Iterable;Z)Lio/trino/operator/HttpPageBufferClient$PagesResponse;
-#createEmptyPagesResponse(Ljava/lang/String;JJZ)Lio/trino/operator/HttpPageBufferClient$PagesResponse;

+###io/trino/operator/aggregation/DoubleCorrelationAggregation
@351
+#input(Lio/trino/operator/aggregation/state/CorrelationState;DD)V
+#combine(Lio/trino/operator/aggregation/state/CorrelationState;Lio/trino/operator/aggregation/state/CorrelationState;)V
+#corr(Lio/trino/operator/aggregation/state/CorrelationState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/DoubleRegressionAggregation
@351
+#input(Lio/trino/operator/aggregation/state/RegressionState;DD)V
+#combine(Lio/trino/operator/aggregation/state/RegressionState;Lio/trino/operator/aggregation/state/RegressionState;)V
+#regrSlope(Lio/trino/operator/aggregation/state/RegressionState;Lio/trino/spi/block/BlockBuilder;)V
+#regrIntercept(Lio/trino/operator/aggregation/state/RegressionState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/MapAggregationFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/KeyValuePairsState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/KeyValuePairsState;Lio/trino/operator/aggregation/state/KeyValuePairsState;)V
+#output(Lio/trino/operator/aggregation/state/KeyValuePairsState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
-#<init>(Lio/trino/type/BlockTypeOperators;)V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/operator/aggregation/Accumulator
@351
+#getEstimatedSize()J
+#getFinalType()Lio/trino/spi/type/Type;
+#getIntermediateType()Lio/trino/spi/type/Type;
+#addInput(Lio/trino/spi/Page;)V
+#addInput(Lio/trino/spi/function/WindowIndex;Ljava/util/List;II)V
+#removeInput(Lio/trino/spi/function/WindowIndex;Ljava/util/List;II)V
+#addIntermediate(Lio/trino/spi/block/Block;)V
+#evaluateIntermediate(Lio/trino/spi/block/BlockBuilder;)V
+#evaluateFinal(Lio/trino/spi/block/BlockBuilder;)V
@365
+#copy()Lio/trino/operator/aggregation/Accumulator;
@367
+#addInput(Lio/trino/spi/Page;Ljava/util/Optional;)V
-#getFinalType()Lio/trino/spi/type/Type;
-#getIntermediateType()Lio/trino/spi/type/Type;
-#addInput(Lio/trino/spi/Page;)V
-#addInput(Lio/trino/spi/function/WindowIndex;Ljava/util/List;II)V
-#removeInput(Lio/trino/spi/function/WindowIndex;Ljava/util/List;II)V

+###io/trino/operator/aggregation/AccumulatorCompiler
@351
+#generateAccumulatorFactoryBinder(Lio/trino/operator/aggregation/AggregationMetadata;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/operator/aggregation/GenericAccumulatorFactoryBinder;
@366
+#generateAccumulatorFactoryBinder(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;)Lio/trino/operator/aggregation/GenericAccumulatorFactoryBinder;
-#generateAccumulatorFactoryBinder(Lio/trino/operator/aggregation/AggregationMetadata;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/operator/aggregation/GenericAccumulatorFactoryBinder;
@367
+#generateAccumulatorFactory(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;Ljava/util/List;)Lio/trino/operator/aggregation/AccumulatorFactory;
+#generateWindowAccumulatorClass(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;)Ljava/lang/reflect/Constructor;
-#generateAccumulatorFactoryBinder(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;)Lio/trino/operator/aggregation/GenericAccumulatorFactoryBinder;
@374
+#generateAccumulatorFactory(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#generateAccumulatorFactory(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;Ljava/util/List;)Lio/trino/operator/aggregation/AccumulatorFactory;
@395
+#generateAccumulatorFactory(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/AggregationImplementation;Lio/trino/spi/function/FunctionNullability;)Lio/trino/operator/aggregation/AccumulatorFactory;
+#generateWindowAccumulatorClass(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/AggregationImplementation;Lio/trino/spi/function/FunctionNullability;)Ljava/lang/reflect/Constructor;
-#generateAccumulatorFactory(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#generateWindowAccumulatorClass(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;)Ljava/lang/reflect/Constructor;

+###io/trino/operator/aggregation/TypedKeyValueHeap
@351
+#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;I)V
+#getSerializedType(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/spi/type/Type;
+#getCapacity()I
+#getEstimatedSize()J
+#isEmpty()Z
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionComparison;)Lio/trino/operator/aggregation/TypedKeyValueHeap;
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#pop(Lio/trino/spi/block/BlockBuilder;)V
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#addAll(Lio/trino/operator/aggregation/TypedKeyValueHeap;)V
+#addAll(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)V
@364
+#<init>(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;I)V
+#deserialize(Lio/trino/spi/block/Block;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;)Lio/trino/operator/aggregation/TypedKeyValueHeap;
-#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;I)V
-#deserialize(Lio/trino/spi/block/Block;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionComparison;)Lio/trino/operator/aggregation/TypedKeyValueHeap;
@365
+#copy()Lio/trino/operator/aggregation/TypedKeyValueHeap;
@383
-###io/trino/operator/aggregation/TypedKeyValueHeap

+###io/trino/operator/aggregation/RealAverageAggregation
@351
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/operator/aggregation/state/LongState;Lio/trino/operator/aggregation/state/DoubleState;J)V
+#removeInput(Lio/trino/operator/aggregation/state/LongState;Lio/trino/operator/aggregation/state/DoubleState;J)V
+#combine(Lio/trino/operator/aggregation/state/LongState;Lio/trino/operator/aggregation/state/DoubleState;Lio/trino/operator/aggregation/state/LongState;Lio/trino/operator/aggregation/state/DoubleState;)V
+#output(Lio/trino/operator/aggregation/state/LongState;Lio/trino/operator/aggregation/state/DoubleState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/operator/aggregation/minmaxby/LongLongState
@351
+#getFirst()J
+#setFirst(J)V
+#getSecond()J
+#setSecond(J)V
@366
-###io/trino/operator/aggregation/minmaxby/LongLongState

+###io/trino/operator/aggregation/minmaxby/DoubleDoubleState
@351
+#getFirst()D
+#setFirst(D)V
+#getSecond()D
+#setSecond(D)V
@366
-###io/trino/operator/aggregation/minmaxby/DoubleDoubleState

+###io/trino/operator/aggregation/minmaxby/DoubleBooleanState
@351
+#getFirst()D
+#setFirst(D)V
+#getSecond()Z
+#setSecond(Z)V
@366
-###io/trino/operator/aggregation/minmaxby/DoubleBooleanState

+###io/trino/operator/aggregation/minmaxby/MaxByAggregationFunction
@351
+#<init>()V
@383
-###io/trino/operator/aggregation/minmaxby/MaxByAggregationFunction

+###io/trino/operator/aggregation/minmaxby/LongAndBlockPositionValueState
@351
+#getFirst()J
+#setFirst(J)V
@366
-###io/trino/operator/aggregation/minmaxby/LongAndBlockPositionValueState

+###io/trino/operator/aggregation/minmaxby/ObjectDoubleState
@351
+#getFirst()Ljava/lang/Object;
+#setFirst(Ljava/lang/Object;)V
+#getSecond()D
+#setSecond(D)V
@366
-###io/trino/operator/aggregation/minmaxby/ObjectDoubleState

+###io/trino/operator/aggregation/minmaxby/MinMaxByNStateSerializer
@351
+#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/minmaxby/MinMaxByNState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@364
+#<init>(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
-#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/aggregation/minmaxby/MinMaxByNStateSerializer

+###io/trino/operator/aggregation/minmaxby/AbstractMinMaxBy
@351
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
-###io/trino/operator/aggregation/minmaxby/AbstractMinMaxBy

+###io/trino/operator/aggregation/minmaxby/MinMaxByNStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;
@383
-###io/trino/operator/aggregation/minmaxby/MinMaxByNStateFactory

+###io/trino/operator/aggregation/minmaxby/KeyAndBlockPositionValueStateSerializer
@351
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/minmaxby/KeyAndBlockPositionValueState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/minmaxby/KeyAndBlockPositionValueState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
-###io/trino/operator/aggregation/minmaxby/KeyAndBlockPositionValueStateSerializer

+###io/trino/operator/aggregation/minmaxby/KeyAndBlockPositionValueState
@351
+#getSecondBlock()Lio/trino/spi/block/Block;
+#setSecondBlock(Lio/trino/spi/block/Block;)V
+#getSecondPosition()I
+#setSecondPosition(I)V
@366
-###io/trino/operator/aggregation/minmaxby/KeyAndBlockPositionValueState

+###io/trino/operator/aggregation/minmaxby/BooleanDoubleState
@351
+#getFirst()Z
+#setFirst(Z)V
+#getSecond()D
+#setSecond(D)V
@366
-###io/trino/operator/aggregation/minmaxby/BooleanDoubleState

+###io/trino/operator/aggregation/minmaxby/LongBooleanState
@351
+#getFirst()J
+#setFirst(J)V
+#getSecond()Z
+#setSecond(Z)V
@366
-###io/trino/operator/aggregation/minmaxby/LongBooleanState

+###io/trino/operator/aggregation/minmaxby/BooleanBooleanState
@351
+#getFirst()Z
+#setFirst(Z)V
+#getSecond()Z
+#setSecond(Z)V
@366
-###io/trino/operator/aggregation/minmaxby/BooleanBooleanState

+###io/trino/operator/aggregation/minmaxby/ObjectAndBlockPositionValueState
@351
+#getFirst()Ljava/lang/Object;
+#setFirst(Ljava/lang/Object;)V
@366
-###io/trino/operator/aggregation/minmaxby/ObjectAndBlockPositionValueState

+###io/trino/operator/aggregation/minmaxby/DoubleAndBlockPositionValueState
@351
+#getFirst()D
+#setFirst(D)V
@366
-###io/trino/operator/aggregation/minmaxby/DoubleAndBlockPositionValueState

+###io/trino/operator/aggregation/minmaxby/BooleanLongState
@351
+#getFirst()Z
+#setFirst(Z)V
+#getSecond()J
+#setSecond(J)V
@366
-###io/trino/operator/aggregation/minmaxby/BooleanLongState

+###io/trino/operator/aggregation/minmaxby/MinMaxByNStateFactory$SingleMinMaxByNState
@351
+#<init>()V
+#getEstimatedSize()J
+#getTypedKeyValueHeap()Lio/trino/operator/aggregation/TypedKeyValueHeap;
+#setTypedKeyValueHeap(Lio/trino/operator/aggregation/TypedKeyValueHeap;)V
+#addMemoryUsage(J)V
@365
+#copy()Lio/trino/spi/function/AccumulatorState;
@383
-###io/trino/operator/aggregation/minmaxby/MinMaxByNStateFactory$SingleMinMaxByNState

+###io/trino/operator/aggregation/minmaxby/MinByNAggregationFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
@383
-###io/trino/operator/aggregation/minmaxby/MinByNAggregationFunction

+###io/trino/operator/aggregation/minmaxby/ObjectBooleanState
@351
+#getFirst()Ljava/lang/Object;
+#setFirst(Ljava/lang/Object;)V
+#getSecond()Z
+#setSecond(Z)V
@366
-###io/trino/operator/aggregation/minmaxby/ObjectBooleanState

+###io/trino/operator/aggregation/minmaxby/TwoNullableValueState
@351
+#isFirstNull()Z
+#setFirstNull(Z)V
+#isSecondNull()Z
+#setSecondNull(Z)V
@366
-###io/trino/operator/aggregation/minmaxby/TwoNullableValueState

+###io/trino/operator/aggregation/minmaxby/MinMaxByNStateFactory$GroupedMinMaxByNState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getEstimatedSize()J
+#getTypedKeyValueHeap()Lio/trino/operator/aggregation/TypedKeyValueHeap;
+#setTypedKeyValueHeap(Lio/trino/operator/aggregation/TypedKeyValueHeap;)V
+#addMemoryUsage(J)V
@383
-###io/trino/operator/aggregation/minmaxby/MinMaxByNStateFactory$GroupedMinMaxByNState

+###io/trino/operator/aggregation/minmaxby/MaxByNAggregationFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
@383
-###io/trino/operator/aggregation/minmaxby/MaxByNAggregationFunction

+###io/trino/operator/aggregation/minmaxby/AbstractMinMaxByNAggregationFunction
@351
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;IJ)V
+#combine(Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;)V
+#output(Lio/trino/spi/type/ArrayType;Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;Lio/trino/spi/block/BlockBuilder;)V
@364
+#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;IJ)V
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
-#input(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;IJ)V
@366
+#getFunctionDependencies(Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@367
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;JI)V
-#input(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/minmaxby/MinMaxByNState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;IJ)V
@383
-###io/trino/operator/aggregation/minmaxby/AbstractMinMaxByNAggregationFunction

+###io/trino/operator/aggregation/minmaxby/TwoNullableValueStateMapping
@351
+#getStateClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#getStateSerializer(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/spi/function/AccumulatorStateSerializer;
@366
-###io/trino/operator/aggregation/minmaxby/TwoNullableValueStateMapping

+###io/trino/operator/aggregation/minmaxby/DoubleLongState
@351
+#getFirst()D
+#setFirst(D)V
+#getSecond()J
+#setSecond(J)V
@366
-###io/trino/operator/aggregation/minmaxby/DoubleLongState

+###io/trino/operator/aggregation/minmaxby/BooleanAndBlockPositionValueState
@351
+#getFirst()Z
+#setFirst(Z)V
@366
-###io/trino/operator/aggregation/minmaxby/BooleanAndBlockPositionValueState

+###io/trino/operator/aggregation/minmaxby/ObjectLongState
@351
+#getFirst()Ljava/lang/Object;
+#setFirst(Ljava/lang/Object;)V
+#getSecond()J
+#setSecond(J)V
@366
-###io/trino/operator/aggregation/minmaxby/ObjectLongState

+###io/trino/operator/aggregation/minmaxby/MinByAggregationFunction
@351
+#<init>()V
@383
-###io/trino/operator/aggregation/minmaxby/MinByAggregationFunction

+###io/trino/operator/aggregation/minmaxby/MinMaxByNState
@351
+#getTypedKeyValueHeap()Lio/trino/operator/aggregation/TypedKeyValueHeap;
+#setTypedKeyValueHeap(Lio/trino/operator/aggregation/TypedKeyValueHeap;)V
+#addMemoryUsage(J)V
@383
-###io/trino/operator/aggregation/minmaxby/MinMaxByNState

+###io/trino/operator/aggregation/minmaxby/LongDoubleState
@351
+#getFirst()J
+#setFirst(J)V
+#getSecond()D
+#setSecond(D)V
@366
-###io/trino/operator/aggregation/minmaxby/LongDoubleState

+###io/trino/operator/aggregation/TypedHeap
@351
+#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;I)V
+#getCapacity()I
+#getEstimatedSize()J
+#isEmpty()Z
+#writeAll(Lio/trino/spi/block/BlockBuilder;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#pop(Lio/trino/spi/block/BlockBuilder;)V
+#add(Lio/trino/spi/block/Block;I)V
+#addAll(Lio/trino/operator/aggregation/TypedHeap;)V
+#addAll(Lio/trino/spi/block/Block;)V
@364
+#<init>(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;I)V
-#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;I)V
@365
+#copy()Lio/trino/operator/aggregation/TypedHeap;
@383
-###io/trino/operator/aggregation/TypedHeap

+###io/trino/operator/aggregation/VarcharApproximateMostFrequent$State
@351
+#get()Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;
+#set(Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V

+###io/trino/operator/aggregation/MaxAggregationFunction
@351
+#<init>()V
@383
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/InOut;Lio/trino/spi/block/Block;I)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;)V
+#output(Lio/trino/spi/function/InOut;Lio/trino/spi/block/BlockBuilder;)V
-#<init>()V

+###io/trino/operator/aggregation/AggregationImplementation$AggregateNativeContainerType
@351
+#<init>(Ljava/lang/Class;Z)V
+#getJavaType()Ljava/lang/Class;
+#isBlockPosition()Z
@395
-###io/trino/operator/aggregation/AggregationImplementation$AggregateNativeContainerType

+###io/trino/operator/aggregation/GenericAccumulatorFactoryBinder
@351
+#<init>(Ljava/util/List;Ljava/lang/Class;ZLjava/lang/Class;)V
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
+#getStateDescriptors()Ljava/util/List;
@365
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;ZLio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
@366
+#<init>(Ljava/lang/Class;ZLjava/lang/Class;)V
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#<init>(Ljava/util/List;Ljava/lang/Class;ZLjava/lang/Class;)V
-#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;ZLio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#getStateDescriptors()Ljava/util/List;
@367
-###io/trino/operator/aggregation/GenericAccumulatorFactoryBinder

+###io/trino/operator/aggregation/ApproximateMostFrequentBucketSerializer
@351
+#serialize(Ljava/lang/Object;JLio/airlift/slice/DynamicSliceOutput;)V

+###io/trino/operator/aggregation/ApproximateCountDistinctAggregation
@351
+#input(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/Block;ID)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;JD)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;DD)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;Ljava/lang/Object;D)V
+#input(Lio/trino/operator/aggregation/state/BooleanDistinctState;ZD)V
+#combineState(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/operator/aggregation/state/HyperLogLogState;)V
+#combineState(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/operator/aggregation/state/BooleanDistinctState;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/BlockBuilder;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#input(Lio/trino/operator/aggregation/state/BooleanDistinctState;ZD)V
-#combineState(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/operator/aggregation/state/BooleanDistinctState;)V
-#evaluateFinal(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/NullablePosition
@351

+###io/trino/operator/aggregation/MergeQuantileDigestFunction
@351
+#<init>()V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/operator/aggregation/state/QuantileDigestState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestStateSerializer;Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
+#output(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V
-#<init>()V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#output(Lio/trino/operator/aggregation/state/QuantileDigestStateSerializer;Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/DoubleHistogramAggregation
@351
+#add(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;JDD)V
+#add(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;JD)V
+#merge(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;)V
+#output(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/ApproximateMostFrequentBucketDeserializer
@351
+#deserialize(Lio/airlift/slice/SliceInput;Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V

+###io/trino/operator/aggregation/DoubleHistogramAggregation$State
@351
+#get()Lio/trino/operator/aggregation/NumericHistogram;
+#set(Lio/trino/operator/aggregation/NumericHistogram;)V

+###io/trino/operator/aggregation/KeyValuePairs
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/Type;)V
+#<init>(Lio/trino/spi/block/Block;Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/Type;)V
+#getKeys()Lio/trino/spi/block/Block;
+#getValues()Lio/trino/spi/block/Block;
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#estimatedInMemorySize()J
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;II)V
@365
+#copy()Lio/trino/operator/aggregation/KeyValuePairs;

+###io/trino/operator/aggregation/BooleanOrAggregation
@351
+#booleanOr(Lio/trino/operator/aggregation/state/TriStateBooleanState;Z)V
+#combine(Lio/trino/operator/aggregation/state/TriStateBooleanState;Lio/trino/operator/aggregation/state/TriStateBooleanState;)V
+#output(Lio/trino/operator/aggregation/state/TriStateBooleanState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/LongApproximateMostFrequentStateFactory$GroupedLongApproximateMostFrequentState
@351
+#<init>()V
+#get()Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;
+#set(Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V
+#ensureCapacity(J)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/StringApproximateMostFrequentStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/VarcharApproximateMostFrequent$State;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/VarcharApproximateMostFrequent$State;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/RealHistogramAggregation
@351
+#add(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;JJD)V
+#add(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;JJ)V
+#merge(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;)V
+#output(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/AbstractMinMaxNAggregationFunction
@351
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/MinMaxNState;Lio/trino/spi/block/Block;JI)V
+#combine(Lio/trino/operator/aggregation/state/MinMaxNState;Lio/trino/operator/aggregation/state/MinMaxNState;)V
+#output(Lio/trino/spi/type/ArrayType;Lio/trino/operator/aggregation/state/MinMaxNState;Lio/trino/spi/block/BlockBuilder;)V
@364
+#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/MinMaxNState;Lio/trino/spi/block/Block;JI)V
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
-#input(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/MinMaxNState;Lio/trino/spi/block/Block;JI)V
@366
+#getFunctionDependencies(Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
-###io/trino/operator/aggregation/AbstractMinMaxNAggregationFunction

+###io/trino/operator/aggregation/ApproximateLongPercentileArrayAggregations
@351
+#input(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;JLio/trino/spi/block/Block;)V
+#weightedInput(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;JDLio/trino/spi/block/Block;)V
+#combine(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;)V
+#output(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/LongApproximateMostFrequentStateSerializer
@351
+#<init>()V
+#serializeBucket(JJLio/airlift/slice/DynamicSliceOutput;)V
+#deserializeBucket(Lio/airlift/slice/SliceInput;Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/BigintApproximateMostFrequent$State;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/BigintApproximateMostFrequent$State;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/BooleanAndAggregation
@351
+#booleanAnd(Lio/trino/operator/aggregation/state/TriStateBooleanState;Z)V
+#combine(Lio/trino/operator/aggregation/state/TriStateBooleanState;Lio/trino/operator/aggregation/state/TriStateBooleanState;)V
+#output(Lio/trino/operator/aggregation/state/TriStateBooleanState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/ApproximateRealPercentileAggregations
@351
+#input(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;JD)V
+#weightedInput(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;JDD)V
+#combine(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;Lio/trino/operator/aggregation/state/TDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V
+#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;JDDD)V[deprecated]
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;JDDD)V[deprecated]
-#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
-#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/AggregationUtils
@351
+#updateVarianceState(Lio/trino/operator/aggregation/state/VarianceState;D)V
+#updateCentralMomentsState(Lio/trino/operator/aggregation/state/CentralMomentsState;D)V
+#updateCovarianceState(Lio/trino/operator/aggregation/state/CovarianceState;DD)V
+#getCovarianceSample(Lio/trino/operator/aggregation/state/CovarianceState;)D
+#getCovariancePopulation(Lio/trino/operator/aggregation/state/CovarianceState;)D
+#updateCorrelationState(Lio/trino/operator/aggregation/state/CorrelationState;DD)V
+#getCorrelation(Lio/trino/operator/aggregation/state/CorrelationState;)D
+#updateRegressionState(Lio/trino/operator/aggregation/state/RegressionState;DD)V
+#getRegressionSlope(Lio/trino/operator/aggregation/state/RegressionState;)D
+#getRegressionIntercept(Lio/trino/operator/aggregation/state/RegressionState;)D
+#mergeVarianceState(Lio/trino/operator/aggregation/state/VarianceState;Lio/trino/operator/aggregation/state/VarianceState;)V
+#mergeCentralMomentsState(Lio/trino/operator/aggregation/state/CentralMomentsState;Lio/trino/operator/aggregation/state/CentralMomentsState;)V
+#mergeCovarianceState(Lio/trino/operator/aggregation/state/CovarianceState;Lio/trino/operator/aggregation/state/CovarianceState;)V
+#mergeCorrelationState(Lio/trino/operator/aggregation/state/CorrelationState;Lio/trino/operator/aggregation/state/CorrelationState;)V
+#mergeRegressionState(Lio/trino/operator/aggregation/state/RegressionState;Lio/trino/operator/aggregation/state/RegressionState;)V
+#generateAggregationName(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;Ljava/util/List;)Ljava/lang/String;
+#pageBlockGetter(Lio/trino/spi/Page;)Ljava/util/function/Function;
@362
+#extractMaskBlock(ILio/trino/spi/Page;)Lio/trino/spi/block/Block;
+#maskGuaranteedToFilterAllRows(ILio/trino/spi/block/Block;)Z
-#pageBlockGetter(Lio/trino/spi/Page;)Ljava/util/function/Function;
@366
-#generateAggregationName(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;Ljava/util/List;)Ljava/lang/String;
@367
-#updateVarianceState(Lio/trino/operator/aggregation/state/VarianceState;D)V
-#updateCentralMomentsState(Lio/trino/operator/aggregation/state/CentralMomentsState;D)V
-#updateCovarianceState(Lio/trino/operator/aggregation/state/CovarianceState;DD)V
-#getCovarianceSample(Lio/trino/operator/aggregation/state/CovarianceState;)D
-#getCovariancePopulation(Lio/trino/operator/aggregation/state/CovarianceState;)D
-#updateCorrelationState(Lio/trino/operator/aggregation/state/CorrelationState;DD)V
-#getCorrelation(Lio/trino/operator/aggregation/state/CorrelationState;)D
-#updateRegressionState(Lio/trino/operator/aggregation/state/RegressionState;DD)V
-#getRegressionSlope(Lio/trino/operator/aggregation/state/RegressionState;)D
-#getRegressionIntercept(Lio/trino/operator/aggregation/state/RegressionState;)D
-#mergeVarianceState(Lio/trino/operator/aggregation/state/VarianceState;Lio/trino/operator/aggregation/state/VarianceState;)V
-#mergeCentralMomentsState(Lio/trino/operator/aggregation/state/CentralMomentsState;Lio/trino/operator/aggregation/state/CentralMomentsState;)V
-#mergeCovarianceState(Lio/trino/operator/aggregation/state/CovarianceState;Lio/trino/operator/aggregation/state/CovarianceState;)V
-#mergeCorrelationState(Lio/trino/operator/aggregation/state/CorrelationState;Lio/trino/operator/aggregation/state/CorrelationState;)V
-#mergeRegressionState(Lio/trino/operator/aggregation/state/RegressionState;Lio/trino/operator/aggregation/state/RegressionState;)V

+###io/trino/operator/aggregation/ApproximateRealPercentileArrayAggregations
@351
+#input(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;JLio/trino/spi/block/Block;)V
+#weightedInput(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;JDLio/trino/spi/block/Block;)V
+#combine(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;)V
+#output(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/StringApproximateMostFrequentStateFactory$SingleLongApproximateMostFrequentState
@351
+#<init>()V
+#get()Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;
+#set(Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/DecimalAverageAggregation
@351
+#<init>()V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#inputShortDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/Block;I)V
+#inputLongDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;)V
+#outputShortDecimal(Lio/trino/spi/type/DecimalType;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/BlockBuilder;)V
+#outputLongDecimal(Lio/trino/spi/type/DecimalType;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/BlockBuilder;)V
+#average(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/type/DecimalType;)Ljava/math/BigDecimal;
@361
+#inputShortDecimal(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/Block;I)V
+#inputLongDecimal(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/Block;I)V
-#inputShortDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/Block;I)V
-#inputLongDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/Block;I)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@365
+#average(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/type/DecimalType;)Lio/airlift/slice/Slice;
-#average(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/type/DecimalType;)Ljava/math/BigDecimal;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@368
+#average(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/type/DecimalType;)Lio/trino/spi/type/Int128;
-#average(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/type/DecimalType;)Lio/airlift/slice/Slice;
@383
+#outputShortDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/BlockBuilder;)V
-#<init>()V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#outputShortDecimal(Lio/trino/spi/type/DecimalType;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/BlockBuilder;)V
-#outputLongDecimal(Lio/trino/spi/type/DecimalType;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/DoubleCovarianceAggregation
@351
+#input(Lio/trino/operator/aggregation/state/CovarianceState;DD)V
+#combine(Lio/trino/operator/aggregation/state/CovarianceState;Lio/trino/operator/aggregation/state/CovarianceState;)V
+#covarSamp(Lio/trino/operator/aggregation/state/CovarianceState;Lio/trino/spi/block/BlockBuilder;)V
+#covarPop(Lio/trino/operator/aggregation/state/CovarianceState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/VarianceAggregation
@351
+#doubleInput(Lio/trino/operator/aggregation/state/VarianceState;D)V
+#bigintInput(Lio/trino/operator/aggregation/state/VarianceState;J)V
+#combine(Lio/trino/operator/aggregation/state/VarianceState;Lio/trino/operator/aggregation/state/VarianceState;)V
+#variance(Lio/trino/operator/aggregation/state/VarianceState;Lio/trino/spi/block/BlockBuilder;)V
+#variancePop(Lio/trino/operator/aggregation/state/VarianceState;Lio/trino/spi/block/BlockBuilder;)V
+#stddev(Lio/trino/operator/aggregation/state/VarianceState;Lio/trino/spi/block/BlockBuilder;)V
+#stddevPop(Lio/trino/operator/aggregation/state/VarianceState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/AccumulatorFactory
@351
+#getInputChannels()Ljava/util/List;
+#hasRemoveInput()Z
+#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
+#hasOrderBy()Z
+#hasDistinct()Z
@365
-#hasOrderBy()Z
-#hasDistinct()Z
@366
+#hasOrderBy()Z
+#hasDistinct()Z
@367
-#getInputChannels()Ljava/util/List;
-#hasRemoveInput()Z
-#hasOrderBy()Z
-#hasDistinct()Z
@374
+#getLambdaInterfaces()Ljava/util/List;
+#createAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/GroupedAccumulator;
-#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
-#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
-#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
-#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;

+###io/trino/operator/aggregation/RealSumAggregation
@351
+#sum(Lio/trino/operator/aggregation/state/NullableDoubleState;J)V
+#combine(Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/operator/aggregation/state/NullableDoubleState;)V
+#output(Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/RealGeometricMeanAggregations
@351
+#input(Lio/trino/operator/aggregation/state/LongAndDoubleState;J)V
+#combine(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/operator/aggregation/state/LongAndDoubleState;)V
+#output(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/CentralMomentsAggregation
@351
+#doubleInput(Lio/trino/operator/aggregation/state/CentralMomentsState;D)V
+#bigintInput(Lio/trino/operator/aggregation/state/CentralMomentsState;J)V
+#combine(Lio/trino/operator/aggregation/state/CentralMomentsState;Lio/trino/operator/aggregation/state/CentralMomentsState;)V
+#skewness(Lio/trino/operator/aggregation/state/CentralMomentsState;Lio/trino/spi/block/BlockBuilder;)V
+#kurtosis(Lio/trino/operator/aggregation/state/CentralMomentsState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/BitwiseAndAggregation
@351
+#bitAnd(Lio/trino/operator/aggregation/state/NullableLongState;J)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#output(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/StringApproximateMostFrequentStateSerializer
@351
+#<init>()V
+#serializeBucket(Lio/airlift/slice/Slice;Ljava/lang/Long;Lio/airlift/slice/DynamicSliceOutput;)V
+#deserializeBucket(Lio/airlift/slice/SliceInput;Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/VarcharApproximateMostFrequent$State;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/VarcharApproximateMostFrequent$State;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/BigintApproximateMostFrequent$State
@351
+#get()Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;
+#set(Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V

+###io/trino/operator/aggregation/LambdaProvider
@351
+#getLambda()Ljava/lang/Object;
@374
-###io/trino/operator/aggregation/LambdaProvider

+###io/trino/operator/aggregation/GenericAccumulatorFactory
@351
+#<init>(Ljava/util/List;Ljava/lang/reflect/Constructor;ZLjava/lang/reflect/Constructor;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/Session;Z)V
+#getInputChannels()Ljava/util/List;
+#hasRemoveInput()Z
+#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
+#hasOrderBy()Z
+#hasDistinct()Z
@365
+#<init>(Ljava/util/List;Ljava/lang/reflect/Constructor;ZLjava/lang/reflect/Constructor;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/Session;ZZ)V
-#<init>(Ljava/util/List;Ljava/lang/reflect/Constructor;ZLjava/lang/reflect/Constructor;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/Session;Z)V
-#hasOrderBy()Z
-#hasDistinct()Z
@366
+#<init>(Ljava/lang/reflect/Constructor;ZLjava/lang/reflect/Constructor;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/Session;Z)V
+#hasOrderBy()Z
+#hasDistinct()Z
-#<init>(Ljava/util/List;Ljava/lang/reflect/Constructor;ZLjava/lang/reflect/Constructor;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/Session;ZZ)V
@367
-###io/trino/operator/aggregation/GenericAccumulatorFactory

+###io/trino/operator/aggregation/NumericHistogramStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/TDigestAggregationFunction
@351
+#input(Lio/trino/operator/aggregation/state/TDigestState;D)V
+#weightedInput(Lio/trino/operator/aggregation/state/TDigestState;DD)V
+#combine(Lio/trino/operator/aggregation/state/TDigestState;Lio/trino/operator/aggregation/state/TDigestState;)V
+#output(Lio/trino/operator/aggregation/state/TDigestState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/LongApproximateMostFrequentStateFactory$SingleLongApproximateMostFrequentState
@351
+#<init>()V
+#get()Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;
+#set(Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/AccumulatorFactoryBinder
@351
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
@365
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;ZLio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
@366
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;ZLio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
@367
-###io/trino/operator/aggregation/AccumulatorFactoryBinder

+###io/trino/operator/aggregation/AggregationMetadata$AccumulatorStateDescriptor
@351
+#<init>(Ljava/lang/Class;Lio/trino/spi/function/AccumulatorStateSerializer;Lio/trino/spi/function/AccumulatorStateFactory;)V
+#getStateInterface()Ljava/lang/Class;
+#getSerializer()Lio/trino/spi/function/AccumulatorStateSerializer;
+#getFactory()Lio/trino/spi/function/AccumulatorStateFactory;
@395
-###io/trino/operator/aggregation/AggregationMetadata$AccumulatorStateDescriptor

+###io/trino/operator/aggregation/AggregationHeader
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;ZZZ)V
+#getName()Ljava/lang/String;
+#getDescription()Ljava/util/Optional;
+#isDecomposable()Z
+#isOrderSensitive()Z
+#isHidden()Z
@353
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;ZZZ)V
+#getCanonicalName()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/util/Optional;ZZZ)V
@364
+#<init>(Ljava/lang/String;Ljava/util/Optional;ZZZZ)V
+#isDeprecated()Z
+#toString()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;ZZZ)V
-#getCanonicalName()Ljava/lang/String;

+###io/trino/operator/aggregation/CountIfAggregation
@351
+#input(Lio/trino/operator/aggregation/state/LongState;Z)V
+#removeInput(Lio/trino/operator/aggregation/state/LongState;Z)V
+#combine(Lio/trino/operator/aggregation/state/LongState;Lio/trino/operator/aggregation/state/LongState;)V
+#output(Lio/trino/operator/aggregation/state/LongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/NullableBooleanState
@351
+#getBoolean()Z
+#setBoolean(Z)V
+#isNull()Z
+#setNull(Z)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#getValue()Z
+#setValue(Z)V
+#set(Lio/trino/operator/aggregation/state/NullableBooleanState;)V
-#getBoolean()Z
-#setBoolean(Z)V

+###io/trino/operator/aggregation/state/NullableLongState
@351
+#getLong()J
+#setLong(J)V
+#isNull()Z
+#setNull(Z)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#getValue()J
+#setValue(J)V
+#set(Lio/trino/operator/aggregation/state/NullableLongState;)V
-#getLong()J
-#setLong(J)V

+###io/trino/operator/aggregation/state/KeyValuePairsState
@351
+#get()Lio/trino/operator/aggregation/KeyValuePairs;
+#set(Lio/trino/operator/aggregation/KeyValuePairs;)V
+#addMemoryUsage(J)V
+#getKeyType()Lio/trino/spi/type/Type;
+#getValueType()Lio/trino/spi/type/Type;

+###io/trino/operator/aggregation/state/KeyValuePairStateSerializer
@351
+#<init>(Lio/trino/spi/type/MapType;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/KeyValuePairsState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/KeyValuePairsState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@383
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;)V
-#<init>(Lio/trino/spi/type/MapType;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;)V

+###io/trino/operator/aggregation/state/AbstractGroupedAccumulatorState
@351
+#<init>()V
+#setGroupId(J)V

+###io/trino/operator/aggregation/state/RegressionState
@351
+#getM2X()D
+#setM2X(D)V
@367
+#update(DD)V
+#getRegressionSlope()D
+#merge(Lio/trino/operator/aggregation/state/RegressionState;)V
+#getRegressionIntercept()D

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowStateFactory$GroupedLongDecimalWithOverflowState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getLongDecimal()Lio/airlift/slice/Slice;
+#setLongDecimal(Lio/airlift/slice/Slice;)V
+#getOverflow()J
+#setOverflow(J)V
+#getEstimatedSize()J
@352
+#addOverflow(J)V
@364
+#isNotNull()Z
+#setNotNull()V
+#getDecimalArray()[J
+#getDecimalArrayOffset()I
-#getLongDecimal()Lio/airlift/slice/Slice;
-#setLongDecimal(Lio/airlift/slice/Slice;)V

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/InitialBooleanValue
@351
+#value()Z

+###io/trino/operator/aggregation/state/TDigestStateFactory$GroupedTDigestState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getTDigest()Lio/airlift/stats/TDigest;
+#setTDigest(Lio/airlift/stats/TDigest;)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState
@351
+#getLong()J
+#setLong(J)V
@352
+#addLong(J)V

+###io/trino/operator/aggregation/state/QuantileDigestState
@351
+#getQuantileDigest()Lio/airlift/stats/QuantileDigest;
+#setQuantileDigest(Lio/airlift/stats/QuantileDigest;)V
+#addMemoryUsage(I)V

+###io/trino/operator/aggregation/state/CentralMomentsState
@351
+#getCount()J
+#setCount(J)V
+#getM1()D
+#setM1(D)V
+#getM2()D
+#setM2(D)V
+#getM3()D
+#setM3(D)V
+#getM4()D
+#setM4(D)V
@367
+#update(D)V
+#merge(Lio/trino/operator/aggregation/state/CentralMomentsState;)V

+###io/trino/operator/aggregation/state/TDigestAndPercentileArrayStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/TDigestAndPercentileArrayStateFactory$GroupedTDigestAndPercentileArrayState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getDigest()Lio/airlift/stats/TDigest;
+#setDigest(Lio/airlift/stats/TDigest;)V
+#getPercentiles()Ljava/util/List;
+#setPercentiles(Ljava/util/List;)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/LongAndDoubleState
@351
+#getLong()J
+#setLong(J)V
+#getDouble()D
+#setDouble(D)V

+###io/trino/operator/aggregation/state/HyperLogLogState
@351
+#getHyperLogLog()Lio/airlift/stats/cardinality/HyperLogLog;
+#setHyperLogLog(Lio/airlift/stats/cardinality/HyperLogLog;)V
+#addMemoryUsage(I)V

+###io/trino/operator/aggregation/state/CorrelationState
@351
+#getM2X()D
+#setM2X(D)V
+#getM2Y()D
+#setM2Y(D)V
@367
+#update(DD)V
+#merge(Lio/trino/operator/aggregation/state/CorrelationState;)V
+#getCorrelation()D

+###io/trino/operator/aggregation/state/QuantileDigestAndPercentileStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/TriStateBooleanState
@351
+#getByte()B
+#setByte(B)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/TriStateBooleanState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#getValue()B
+#setValue(B)V
-#getByte()B
-#setByte(B)V

+###io/trino/operator/aggregation/state/InitialLongValue
@351
+#value()J

+###io/trino/operator/aggregation/state/CovarianceState
@351
+#getCount()J
+#setCount(J)V
+#getMeanX()D
+#setMeanX(D)V
+#getMeanY()D
+#setMeanY(D)V
+#getC2()D
+#setC2(D)V
@367
+#update(DD)V
+#merge(Lio/trino/operator/aggregation/state/CovarianceState;)V
+#getCovarianceSample()D
+#getCovariancePopulation()D

+###io/trino/operator/aggregation/state/KeyValuePairsStateFactory$SingleState
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#get()Lio/trino/operator/aggregation/KeyValuePairs;
+#set(Lio/trino/operator/aggregation/KeyValuePairs;)V
+#addMemoryUsage(J)V
+#getKeyType()Lio/trino/spi/type/Type;
+#getValueType()Lio/trino/spi/type/Type;
+#getEstimatedSize()J
@365
+#copy()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/state/HyperLogLogStateFactory$SingleHyperLogLogState
@351
+#<init>()V
+#getHyperLogLog()Lio/airlift/stats/cardinality/HyperLogLog;
+#setHyperLogLog(Lio/airlift/stats/cardinality/HyperLogLog;)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/QuantileDigestAndPercentileStateFactory$SingleQuantileDigestAndPercentileState
@351
+#<init>()V
+#getDigest()Lio/airlift/stats/QuantileDigest;
+#setDigest(Lio/airlift/stats/QuantileDigest;)V
+#getPercentile()D
+#setPercentile(D)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/DoubleState
@351
+#getDouble()D
+#setDouble(D)V
@366
+#getValue()D
+#setValue(D)V
-#getDouble()D
-#setDouble(D)V

+###io/trino/operator/aggregation/state/TDigestStateFactory$SingleTDigestState
@351
+#<init>()V
+#getTDigest()Lio/airlift/stats/TDigest;
+#setTDigest(Lio/airlift/stats/TDigest;)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongStateFactory$SingleLongDecimalWithOverflowAndLongState
@351
+#<init>()V
+#getLong()J
+#setLong(J)V
+#getEstimatedSize()J
@352
+#addLong(J)V
@365
+#copy()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/state/MinMaxNStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/MinMaxNState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/MinMaxNState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;
@383
-###io/trino/operator/aggregation/state/MinMaxNStateFactory

+###io/trino/operator/aggregation/state/HyperLogLogStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/HyperLogLogState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/HyperLogLogState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/TDigestAndPercentileArrayStateFactory$SingleTDigestAndPercentileArrayState
@351
+#<init>()V
+#getDigest()Lio/airlift/stats/TDigest;
+#setDigest(Lio/airlift/stats/TDigest;)V
+#getPercentiles()Ljava/util/List;
+#setPercentiles(Ljava/util/List;)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowStateFactory$SingleLongDecimalWithOverflowState
@351
+#<init>()V
+#getLongDecimal()Lio/airlift/slice/Slice;
+#setLongDecimal(Lio/airlift/slice/Slice;)V
+#getOverflow()J
+#setOverflow(J)V
+#getEstimatedSize()J
@352
+#addOverflow(J)V
@364
+#isNotNull()Z
+#setNotNull()V
+#getDecimalArray()[J
+#getDecimalArrayOffset()I
-#getLongDecimal()Lio/airlift/slice/Slice;
-#setLongDecimal(Lio/airlift/slice/Slice;)V
@365
+#copy()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/state/QuantileDigestAndPercentileStateFactory$GroupedQuantileDigestAndPercentileState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getDigest()Lio/airlift/stats/QuantileDigest;
+#setDigest(Lio/airlift/stats/QuantileDigest;)V
+#getPercentile()D
+#setPercentile(D)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/TDigestAndPercentileState
@351
+#getDigest()Lio/airlift/stats/TDigest;
+#setDigest(Lio/airlift/stats/TDigest;)V
+#getPercentile()D
+#setPercentile(D)V
+#addMemoryUsage(I)V

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongStateFactory$GroupedLongDecimalWithOverflowAndLongState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getLong()J
+#setLong(J)V
+#getEstimatedSize()J
@352
+#addLong(J)V

+###io/trino/operator/aggregation/state/TDigestAndPercentileArrayStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/BlockPositionStateSerializer
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/BlockPositionState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/BlockPositionState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/MinMaxNState
@351
+#getTypedHeap()Lio/trino/operator/aggregation/TypedHeap;
+#setTypedHeap(Lio/trino/operator/aggregation/TypedHeap;)V
+#addMemoryUsage(J)V
@383
-###io/trino/operator/aggregation/state/MinMaxNState

+###io/trino/operator/aggregation/state/QuantileDigestStateSerializer
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/QuantileDigestState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@383
+#<init>()V
-#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/state/TDigestAndPercentileStateFactory$GroupedTDigestAndPercentileState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getDigest()Lio/airlift/stats/TDigest;
+#setDigest(Lio/airlift/stats/TDigest;)V
+#getPercentile()D
+#setPercentile(D)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/TriStateBooleanStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/TriStateBooleanState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/TriStateBooleanState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/VarianceState
@351
+#getCount()J
+#setCount(J)V
+#getMean()D
+#setMean(D)V
+#getM2()D
+#setM2(D)V
@367
+#update(D)V
+#merge(Lio/trino/operator/aggregation/state/VarianceState;)V

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/LongDecimalWithOverflowState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/TDigestStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/TDigestState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/TDigestState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/QuantileDigestStateFactory$GroupedQuantileDigestState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getQuantileDigest()Lio/airlift/stats/QuantileDigest;
+#setQuantileDigest(Lio/airlift/stats/QuantileDigest;)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/BlockStateSerializer
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/BlockState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/BlockState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
-###io/trino/operator/aggregation/state/BlockStateSerializer

+###io/trino/operator/aggregation/state/TDigestAndPercentileStateFactory$SingleTDigestAndPercentileState
@351
+#<init>()V
+#getDigest()Lio/airlift/stats/TDigest;
+#setDigest(Lio/airlift/stats/TDigest;)V
+#getPercentile()D
+#setPercentile(D)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/HyperLogLogStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/HyperLogLogState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/StateCompiler
@351
+#getSerializedType(Ljava/lang/Class;)Lio/trino/spi/type/Type;
+#getSerializedType(Ljava/lang/Class;Ljava/util/Map;)Lio/trino/spi/type/Type;
+#generateStateSerializer(Ljava/lang/Class;)Lio/trino/spi/function/AccumulatorStateSerializer;
+#generateStateSerializer(Ljava/lang/Class;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/spi/function/AccumulatorStateSerializer;
+#generateStateSerializer(Ljava/lang/Class;Ljava/util/Map;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/spi/function/AccumulatorStateSerializer;
+#generateStateFactory(Ljava/lang/Class;)Lio/trino/spi/function/AccumulatorStateFactory;
+#generateStateFactory(Ljava/lang/Class;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/spi/function/AccumulatorStateFactory;
+#generateStateFactory(Ljava/lang/Class;Ljava/util/Map;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/spi/function/AccumulatorStateFactory;
@366
+#generateStateSerializer(Ljava/lang/Class;Ljava/util/Map;)Lio/trino/spi/function/AccumulatorStateSerializer;
+#generateStateFactory(Ljava/lang/Class;Ljava/util/Map;)Lio/trino/spi/function/AccumulatorStateFactory;
-#generateStateSerializer(Ljava/lang/Class;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/spi/function/AccumulatorStateSerializer;
-#generateStateSerializer(Ljava/lang/Class;Ljava/util/Map;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/spi/function/AccumulatorStateSerializer;
-#generateStateFactory(Ljava/lang/Class;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/spi/function/AccumulatorStateFactory;
-#generateStateFactory(Ljava/lang/Class;Ljava/util/Map;Lio/airlift/bytecode/DynamicClassLoader;)Lio/trino/spi/function/AccumulatorStateFactory;
@383
+#getMetadataAnnotation(Ljava/lang/Class;)Lio/trino/spi/function/AccumulatorStateMetadata;
+#generateInOutStateFactory(Lio/trino/spi/type/Type;)Lio/trino/spi/function/AccumulatorStateFactory;
-#getSerializedType(Ljava/lang/Class;)Lio/trino/spi/type/Type;
-#getSerializedType(Ljava/lang/Class;Ljava/util/Map;)Lio/trino/spi/type/Type;
-#generateStateSerializer(Ljava/lang/Class;Ljava/util/Map;)Lio/trino/spi/function/AccumulatorStateSerializer;
-#generateStateFactory(Ljava/lang/Class;Ljava/util/Map;)Lio/trino/spi/function/AccumulatorStateFactory;

+###io/trino/operator/aggregation/state/BlockPositionState
@351
+#getBlock()Lio/trino/spi/block/Block;
+#getPosition()I
+#setBlock(Lio/trino/spi/block/Block;)V
+#setPosition(I)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/BlockPositionState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#isNull()Z
+#set(Lio/trino/operator/aggregation/state/BlockPositionState;)V

+###io/trino/operator/aggregation/state/MinMaxNStateSerializer
@351
+#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/MinMaxNState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/MinMaxNState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@364
+#<init>(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;)V
-#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/aggregation/state/MinMaxNStateSerializer

+###io/trino/operator/aggregation/state/HyperLogLogStateFactory$GroupedHyperLogLogState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getHyperLogLog()Lio/airlift/stats/cardinality/HyperLogLog;
+#setHyperLogLog(Lio/airlift/stats/cardinality/HyperLogLog;)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/LongDecimalWithOverflowAndLongState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/LongState
@351
+#getLong()J
+#setLong(J)V
@366
+#getValue()J
+#setValue(J)V
-#getLong()J
-#setLong(J)V

+###io/trino/operator/aggregation/state/NullableBooleanStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/NullableBooleanState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@369
+#<init>(Lio/trino/spi/type/Type;)V
@383
-#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/state/BlockState
@351
+#getBlock()Lio/trino/spi/block/Block;
+#setBlock(Lio/trino/spi/block/Block;)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/BlockState;Lio/trino/spi/block/BlockBuilder;)V
@366
-###io/trino/operator/aggregation/state/BlockState

+###io/trino/operator/aggregation/state/MinMaxNStateFactory$GroupedMinMaxNState
@351
+#<init>()V
+#ensureCapacity(J)V
+#getEstimatedSize()J
+#getTypedHeap()Lio/trino/operator/aggregation/TypedHeap;
+#setTypedHeap(Lio/trino/operator/aggregation/TypedHeap;)V
+#addMemoryUsage(J)V
@383
-###io/trino/operator/aggregation/state/MinMaxNStateFactory$GroupedMinMaxNState

+###io/trino/operator/aggregation/state/NullableLongStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/NullableLongState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@369
+#<init>(Lio/trino/spi/type/Type;)V
@383
-#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowState
@351
+#getLongDecimal()Lio/airlift/slice/Slice;
+#setLongDecimal(Lio/airlift/slice/Slice;)V
+#getOverflow()J
+#setOverflow(J)V
@352
+#addOverflow(J)V
@364
+#isNotNull()Z
+#setNotNull()V
+#getDecimalArray()[J
+#getDecimalArrayOffset()I
-#getLongDecimal()Lio/airlift/slice/Slice;
-#setLongDecimal(Lio/airlift/slice/Slice;)V

+###io/trino/operator/aggregation/state/DoubleHistogramStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/DoubleHistogramAggregation$State;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/DoubleHistogramAggregation$State;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/TDigestAndPercentileStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/TDigestAndPercentileState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/TDigestAndPercentileState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/TDigestStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/TDigestState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/TDigestState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/TDigestAndPercentileArrayState
@351
+#getDigest()Lio/airlift/stats/TDigest;
+#setDigest(Lio/airlift/stats/TDigest;)V
+#setPercentiles(Ljava/util/List;)V
+#getPercentiles()Ljava/util/List;
+#addMemoryUsage(I)V

+###io/trino/operator/aggregation/state/InitialDoubleValue
@351
+#value()D

+###io/trino/operator/aggregation/state/NullableDoubleStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/NullableDoubleState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@369
+#<init>(Lio/trino/spi/type/Type;)V
@383
-#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/state/QuantileDigestAndPercentileState
@351
+#getDigest()Lio/airlift/stats/QuantileDigest;
+#setDigest(Lio/airlift/stats/QuantileDigest;)V
+#getPercentile()D
+#setPercentile(D)V
+#addMemoryUsage(I)V

+###io/trino/operator/aggregation/state/QuantileDigestAndPercentileStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/TDigestAndPercentileStateSerializer
@351
+#<init>()V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/TDigestAndPercentileState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/KeyValuePairsStateFactory
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#createSingleState()Lio/trino/operator/aggregation/state/KeyValuePairsState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/KeyValuePairsState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/QuantileDigestStateFactory$SingleQuantileDigestState
@351
+#<init>()V
+#getQuantileDigest()Lio/airlift/stats/QuantileDigest;
+#setQuantileDigest(Lio/airlift/stats/QuantileDigest;)V
+#addMemoryUsage(I)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/KeyValuePairsStateFactory$GroupedState
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#ensureCapacity(J)V
+#get()Lio/trino/operator/aggregation/KeyValuePairs;
+#set(Lio/trino/operator/aggregation/KeyValuePairs;)V
+#addMemoryUsage(J)V
+#getKeyType()Lio/trino/spi/type/Type;
+#getValueType()Lio/trino/spi/type/Type;
+#getEstimatedSize()J

+###io/trino/operator/aggregation/state/LongDecimalWithOverflowStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/MinMaxNStateFactory$SingleMinMaxNState
@351
+#<init>()V
+#getEstimatedSize()J
+#getTypedHeap()Lio/trino/operator/aggregation/TypedHeap;
+#setTypedHeap(Lio/trino/operator/aggregation/TypedHeap;)V
+#addMemoryUsage(J)V
@365
+#copy()Lio/trino/spi/function/AccumulatorState;
@383
-###io/trino/operator/aggregation/state/MinMaxNStateFactory$SingleMinMaxNState

+###io/trino/operator/aggregation/state/QuantileDigestStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/state/QuantileDigestState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/state/QuantileDigestState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/state/BooleanDistinctState
@351
+#getByte()B
+#setByte(B)V

+###io/trino/operator/aggregation/state/TDigestState
@351
+#getTDigest()Lio/airlift/stats/TDigest;
+#setTDigest(Lio/airlift/stats/TDigest;)V
+#addMemoryUsage(I)V

+###io/trino/operator/aggregation/state/SliceState
@351
+#getSlice()Lio/airlift/slice/Slice;
+#setSlice(Lio/airlift/slice/Slice;)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/SliceState;Lio/trino/spi/block/BlockBuilder;)V
@366
-###io/trino/operator/aggregation/state/SliceState

+###io/trino/operator/aggregation/state/NullableDoubleState
@351
+#getDouble()D
+#setDouble(D)V
+#isNull()Z
+#setNull(Z)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#getValue()D
+#setValue(D)V
+#set(Lio/trino/operator/aggregation/state/NullableDoubleState;)V
-#getDouble()D
-#setDouble(D)V

+###io/trino/operator/aggregation/MinNAggregationFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
@383
-###io/trino/operator/aggregation/MinNAggregationFunction

+###io/trino/operator/aggregation/SumDataSizeForStats
@351
+#input(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#output(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/MapUnionAggregation
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/KeyValuePairsState;Lio/trino/spi/block/Block;)V
+#combine(Lio/trino/operator/aggregation/state/KeyValuePairsState;Lio/trino/operator/aggregation/state/KeyValuePairsState;)V
+#output(Lio/trino/operator/aggregation/state/KeyValuePairsState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
-#<init>(Lio/trino/type/BlockTypeOperators;)V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/operator/aggregation/ArbitraryAggregationFunction
@351
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/spi/block/Block;I)V
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/Block;I)V
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/spi/block/Block;I)V
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/BlockPositionState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#combine(Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/operator/aggregation/state/NullableDoubleState;)V
+#combine(Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/operator/aggregation/state/NullableBooleanState;)V
+#combine(Lio/trino/operator/aggregation/state/BlockPositionState;Lio/trino/operator/aggregation/state/BlockPositionState;)V
@364
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/spi/block/Block;I)V
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/spi/block/Block;I)V
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/operator/aggregation/state/GenericLongState;)V
+#combine(Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/operator/aggregation/state/GenericDoubleState;)V
+#combine(Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/operator/aggregation/state/GenericBooleanState;)V
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/spi/block/Block;I)V
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/Block;I)V
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/spi/block/Block;I)V
-#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
-#combine(Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/operator/aggregation/state/NullableDoubleState;)V
-#combine(Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/operator/aggregation/state/NullableBooleanState;)V
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
+#input(Lio/trino/spi/function/InOut;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;)V
+#output(Lio/trino/spi/function/InOut;Lio/trino/spi/block/BlockBuilder;)V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/spi/block/Block;I)V
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/spi/block/Block;I)V
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/spi/block/Block;I)V
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/BlockPositionState;Lio/trino/spi/block/Block;I)V
-#combine(Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/operator/aggregation/state/GenericLongState;)V
-#combine(Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/operator/aggregation/state/GenericDoubleState;)V
-#combine(Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/operator/aggregation/state/GenericBooleanState;)V
-#combine(Lio/trino/operator/aggregation/state/BlockPositionState;Lio/trino/operator/aggregation/state/BlockPositionState;)V

+###io/trino/operator/aggregation/ParametricAggregation
@351
+#<init>(Lio/trino/metadata/Signature;Lio/trino/operator/aggregation/AggregationHeader;Lio/trino/operator/ParametricImplementationsGroup;Z)V
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#getImplementations()Lio/trino/operator/ParametricImplementationsGroup;
@364
+#<init>(Lio/trino/metadata/Signature;Lio/trino/operator/aggregation/AggregationHeader;Ljava/lang/Class;Lio/trino/operator/ParametricImplementationsGroup;)V
+#getStateClass()Ljava/lang/Class;
+#toString()Ljava/lang/String;
-#<init>(Lio/trino/metadata/Signature;Lio/trino/operator/aggregation/AggregationHeader;Lio/trino/operator/ParametricImplementationsGroup;Z)V
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
+#<init>(Lio/trino/metadata/Signature;Lio/trino/operator/aggregation/AggregationHeader;Ljava/util/List;Lio/trino/operator/ParametricImplementationsGroup;)V
+#getStateDetails()Ljava/util/List;
-#<init>(Lio/trino/metadata/Signature;Lio/trino/operator/aggregation/AggregationHeader;Ljava/lang/Class;Lio/trino/operator/ParametricImplementationsGroup;)V
-#getStateClass()Ljava/lang/Class;
@395
+#<init>(Lio/trino/spi/function/Signature;Lio/trino/operator/aggregation/AggregationHeader;Ljava/util/List;Lio/trino/operator/ParametricImplementationsGroup;)V
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/AggregationImplementation;
-#<init>(Lio/trino/metadata/Signature;Lio/trino/operator/aggregation/AggregationHeader;Ljava/util/List;Lio/trino/operator/ParametricImplementationsGroup;)V
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/operator/aggregation/AbstractGroupCollectionAggregationState
@351
+#ensureCapacity(J)V
+#getEstimatedSize()J
+#forEach(Ljava/lang/Object;)V
+#isEmpty()Z
+#getEntryCount()I

+###io/trino/operator/aggregation/DoubleSumAggregation
@351
+#sum(Lio/trino/operator/aggregation/minmaxby/LongDoubleState;D)V
+#removeInput(Lio/trino/operator/aggregation/minmaxby/LongDoubleState;D)V
+#combine(Lio/trino/operator/aggregation/minmaxby/LongDoubleState;Lio/trino/operator/aggregation/minmaxby/LongDoubleState;)V
+#output(Lio/trino/operator/aggregation/minmaxby/LongDoubleState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#sum(Lio/trino/operator/aggregation/LongDoubleState;D)V
+#removeInput(Lio/trino/operator/aggregation/LongDoubleState;D)V
+#combine(Lio/trino/operator/aggregation/LongDoubleState;Lio/trino/operator/aggregation/LongDoubleState;)V
+#output(Lio/trino/operator/aggregation/LongDoubleState;Lio/trino/spi/block/BlockBuilder;)V
-#sum(Lio/trino/operator/aggregation/minmaxby/LongDoubleState;D)V
-#removeInput(Lio/trino/operator/aggregation/minmaxby/LongDoubleState;D)V
-#combine(Lio/trino/operator/aggregation/minmaxby/LongDoubleState;Lio/trino/operator/aggregation/minmaxby/LongDoubleState;)V
-#output(Lio/trino/operator/aggregation/minmaxby/LongDoubleState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/IntervalYearToMonthAverageAggregation
@351
+#input(Lio/trino/operator/aggregation/state/LongAndDoubleState;J)V
+#combine(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/operator/aggregation/state/LongAndDoubleState;)V
+#output(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/MergeTDigestAggregation
@351
+#input(Lio/trino/operator/aggregation/state/TDigestState;Ljava/lang/Object;)V
+#combine(Lio/trino/operator/aggregation/state/TDigestState;Lio/trino/operator/aggregation/state/TDigestState;)V
+#output(Lio/trino/operator/aggregation/state/TDigestState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/MaxDataSizeForStats
@351
+#input(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#output(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/LazyAccumulatorFactoryBinder
@351
+#<init>(Lio/trino/operator/aggregation/AggregationMetadata;Lio/airlift/bytecode/DynamicClassLoader;)V
+#getGenericAccumulatorFactoryBinder()Lio/trino/operator/aggregation/GenericAccumulatorFactoryBinder;
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
@365
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;ZLio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
@366
-###io/trino/operator/aggregation/LazyAccumulatorFactoryBinder

+###io/trino/operator/aggregation/MaxNAggregationFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
@383
-###io/trino/operator/aggregation/MaxNAggregationFunction

+###io/trino/operator/aggregation/AbstractMinMaxAggregationFunction
@351
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableDoubleState;D)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableLongState;J)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableBooleanState;Z)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/BlockPositionState;Lio/trino/spi/block/Block;I)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/operator/aggregation/state/NullableDoubleState;)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/operator/aggregation/state/NullableBooleanState;)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/BlockPositionState;Lio/trino/operator/aggregation/state/BlockPositionState;)V
@364
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/GenericDoubleState;D)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/GenericLongState;J)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/GenericBooleanState;Z)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/operator/aggregation/state/GenericLongState;)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/operator/aggregation/state/GenericDoubleState;)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/operator/aggregation/state/GenericBooleanState;)V
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
-#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableDoubleState;D)V
-#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableLongState;J)V
-#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableBooleanState;Z)V
-#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
-#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/operator/aggregation/state/NullableDoubleState;)V
-#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/operator/aggregation/state/NullableBooleanState;)V
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
-###io/trino/operator/aggregation/AbstractMinMaxAggregationFunction

+###io/trino/operator/aggregation/RealRegressionAggregation
@351
+#input(Lio/trino/operator/aggregation/state/RegressionState;JJ)V
+#combine(Lio/trino/operator/aggregation/state/RegressionState;Lio/trino/operator/aggregation/state/RegressionState;)V
+#regrSlope(Lio/trino/operator/aggregation/state/RegressionState;Lio/trino/spi/block/BlockBuilder;)V
+#regrIntercept(Lio/trino/operator/aggregation/state/RegressionState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/AggregationImplementation
@351
+#<init>(Lio/trino/metadata/Signature;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getSignature()Lio/trino/metadata/Signature;
+#hasSpecializedTypeParameters()Z
+#isNullable()Z
+#getArgumentDefinitions()Ljava/util/List;
+#getDefinitionClass()Ljava/lang/Class;
+#getStateClass()Ljava/lang/Class;
+#getInputFunction()Ljava/lang/invoke/MethodHandle;
+#getRemoveInputFunction()Ljava/util/Optional;
+#getOutputFunction()Ljava/lang/invoke/MethodHandle;
+#getCombineFunction()Ljava/lang/invoke/MethodHandle;
+#getInputDependencies()Ljava/util/List;
+#getRemoveInputDependencies()Ljava/util/List;
+#getOutputDependencies()Ljava/util/List;
+#getCombineDependencies()Ljava/util/List;
+#getInputParameterMetadataTypes()Ljava/util/List;
+#areTypesAssignable(Lio/trino/metadata/BoundSignature;)Z
@364
+#<init>(Lio/trino/metadata/Signature;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#withAlias(Ljava/lang/String;)Lio/trino/operator/aggregation/AggregationImplementation;
+#withAlias(Ljava/lang/String;)Lio/trino/operator/ParametricImplementation;
-#<init>(Lio/trino/metadata/Signature;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
-#getStateClass()Ljava/lang/Class;
@366
+#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
+#getInputParameterKinds()Ljava/util/List;
-#isNullable()Z
-#getArgumentDefinitions()Ljava/util/List;
-#getInputParameterMetadataTypes()Ljava/util/List;
@367
+#<init>(Lio/trino/metadata/Signature;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getCombineFunction()Ljava/util/Optional;
-#<init>(Lio/trino/metadata/Signature;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
-#getCombineFunction()Ljava/lang/invoke/MethodHandle;
@395
-###io/trino/operator/aggregation/AggregationImplementation

+###io/trino/operator/aggregation/AggregationFromAnnotationsParser
@351
+#parseFunctionDefinitionWithTypesConstraint(Ljava/lang/Class;Lio/trino/spi/type/TypeSignature;Ljava/util/List;)Lio/trino/operator/aggregation/ParametricAggregation;
+#parseFunctionDefinitions(Ljava/lang/Class;)Ljava/util/List;
+#parseFunctionDefinition(Ljava/lang/Class;)Lio/trino/operator/aggregation/ParametricAggregation;
@364
-#parseFunctionDefinition(Ljava/lang/Class;)Lio/trino/operator/aggregation/ParametricAggregation;
@366
-#parseFunctionDefinitionWithTypesConstraint(Ljava/lang/Class;Lio/trino/spi/type/TypeSignature;Ljava/util/List;)Lio/trino/operator/aggregation/ParametricAggregation;
@383
+#toAccumulatorStateDetails(Ljava/lang/Class;Ljava/util/List;)Lio/trino/operator/aggregation/AggregationFromAnnotationsParser$AccumulatorStateDetails;
+#parseImplementationDependencies(Lio/trino/operator/aggregation/TypeSignatureMapping;Ljava/lang/reflect/Executable;)Ljava/util/List;

+###io/trino/operator/aggregation/LongSumAggregation
@351
+#sum(Lio/trino/operator/aggregation/minmaxby/LongLongState;J)V
+#removeInput(Lio/trino/operator/aggregation/minmaxby/LongLongState;J)V
+#combine(Lio/trino/operator/aggregation/minmaxby/LongLongState;Lio/trino/operator/aggregation/minmaxby/LongLongState;)V
+#output(Lio/trino/operator/aggregation/minmaxby/LongLongState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#sum(Lio/trino/operator/aggregation/LongLongState;J)V
+#removeInput(Lio/trino/operator/aggregation/LongLongState;J)V
+#combine(Lio/trino/operator/aggregation/LongLongState;Lio/trino/operator/aggregation/LongLongState;)V
+#output(Lio/trino/operator/aggregation/LongLongState;Lio/trino/spi/block/BlockBuilder;)V
-#sum(Lio/trino/operator/aggregation/minmaxby/LongLongState;J)V
-#removeInput(Lio/trino/operator/aggregation/minmaxby/LongLongState;J)V
-#combine(Lio/trino/operator/aggregation/minmaxby/LongLongState;Lio/trino/operator/aggregation/minmaxby/LongLongState;)V
-#output(Lio/trino/operator/aggregation/minmaxby/LongLongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/NumericHistogram
@351
+#<init>(I)V
+#<init>(II)V
+#<init>(Lio/airlift/slice/Slice;I)V
+#serialize()Lio/airlift/slice/Slice;
+#estimatedInMemorySize()J
+#add(D)V
+#add(DD)V
+#mergeWith(Lio/trino/operator/aggregation/NumericHistogram;)V
+#getBuckets()Ljava/util/Map;

+###io/trino/operator/aggregation/BitwiseOrAggregation
@351
+#bitOr(Lio/trino/operator/aggregation/state/NullableLongState;J)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#output(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/FloatingPointBitsConverterUtil
@351
+#doubleToSortableLong(D)J
+#sortableLongToDouble(J)D
+#floatToSortableInt(F)I
+#sortableIntToFloat(I)F

+###io/trino/operator/aggregation/IntervalDayToSecondSumAggregation
@351
+#sum(Lio/trino/operator/aggregation/state/NullableLongState;J)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#output(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/QuantileDigestAggregationFunction
@351
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#inputDouble(Lio/trino/operator/aggregation/state/QuantileDigestState;DJD)V
+#inputReal(Lio/trino/operator/aggregation/state/QuantileDigestState;JJD)V
+#inputBigint(Lio/trino/operator/aggregation/state/QuantileDigestState;JJD)V
+#combineState(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/operator/aggregation/state/QuantileDigestState;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/QuantileDigestStateSerializer;Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
+#<init>()V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#inputDouble(Lio/trino/operator/aggregation/state/QuantileDigestState;DJD)V
-#inputReal(Lio/trino/operator/aggregation/state/QuantileDigestState;JJD)V
-#inputBigint(Lio/trino/operator/aggregation/state/QuantileDigestState;JJD)V
-#combineState(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/operator/aggregation/state/QuantileDigestState;)V
-#evaluateFinal(Lio/trino/operator/aggregation/state/QuantileDigestStateSerializer;Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/AggregationMetadata
@351
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Lio/trino/spi/type/Type;)V
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Lio/trino/spi/type/Type;Ljava/util/List;)V
+#getOutputType()Lio/trino/spi/type/Type;
+#getValueInputMetadata()Ljava/util/List;
+#getLambdaInterfaces()Ljava/util/List;
+#getName()Ljava/lang/String;
+#getInputFunction()Ljava/lang/invoke/MethodHandle;
+#getRemoveInputFunction()Ljava/util/Optional;
+#getCombineFunction()Ljava/lang/invoke/MethodHandle;
+#getOutputFunction()Ljava/lang/invoke/MethodHandle;
+#getAccumulatorStateDescriptors()Ljava/util/List;
+#countInputChannels(Ljava/util/List;)I
@366
+#<init>(Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;)V
+#<init>(Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Ljava/util/List;)V
+#getInputParameterKinds()Ljava/util/List;
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Lio/trino/spi/type/Type;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Lio/trino/spi/type/Type;Ljava/util/List;)V
-#getOutputType()Lio/trino/spi/type/Type;
-#getValueInputMetadata()Ljava/util/List;
-#getName()Ljava/lang/String;
-#countInputChannels(Ljava/util/List;)I
@367
+#<init>(Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/util/List;)V
+#<init>(Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Ljava/util/List;)V
+#getCombineFunction()Ljava/util/Optional;
-#<init>(Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;)V
-#<init>(Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/util/List;Ljava/util/List;)V
-#getInputParameterKinds()Ljava/util/List;
-#getCombineFunction()Ljava/lang/invoke/MethodHandle;
@395
-###io/trino/operator/aggregation/AggregationMetadata

+###io/trino/operator/aggregation/DefaultApproximateCountDistinctAggregation
@351
+#input(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/Block;I)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;J)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;D)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;Ljava/lang/Object;)V
+#input(Lio/trino/operator/aggregation/state/BooleanDistinctState;Z)V
+#combineState(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/operator/aggregation/state/HyperLogLogState;)V
+#combineState(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/operator/aggregation/state/BooleanDistinctState;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/BlockBuilder;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#input(Lio/trino/operator/aggregation/state/BooleanDistinctState;Z)V
-#combineState(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/operator/aggregation/state/BooleanDistinctState;)V
-#evaluateFinal(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/AggregationImplementation$Parser
@351
+#parseImplementation(Ljava/lang/Class;Lio/trino/operator/aggregation/AggregationHeader;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/util/Optional;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Lio/trino/operator/aggregation/AggregationImplementation;
+#parseSignatureArgumentsTypes(Ljava/lang/reflect/Method;)Ljava/util/List;
+#parseImplementationDependencies(Ljava/lang/reflect/Method;)Ljava/util/List;
+#isParameterNullable([Ljava/lang/annotation/Annotation;)Z
+#isParameterBlock([Ljava/lang/annotation/Annotation;)Z
+#getInputTypesSignatures(Ljava/lang/reflect/Method;)Ljava/util/List;
+#findAggregationStateParamType(Ljava/lang/reflect/Method;)Ljava/lang/Class;
+#findAggregationStateParamId(Ljava/lang/reflect/Method;)I
+#findAggregationStateParamId(Ljava/lang/reflect/Method;I)I
@364
+#parseImplementation(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/Optional;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Lio/trino/operator/aggregation/AggregationImplementation;
-#parseImplementation(Ljava/lang/Class;Lio/trino/operator/aggregation/AggregationHeader;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/util/Optional;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Lio/trino/operator/aggregation/AggregationImplementation;
@367
+#parseImplementation(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/Optional;Ljava/lang/reflect/Method;Ljava/util/Optional;)Lio/trino/operator/aggregation/AggregationImplementation;
-#parseImplementation(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/Optional;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Lio/trino/operator/aggregation/AggregationImplementation;
@383
+#parseImplementation(Ljava/lang/Class;Ljava/lang/String;Ljava/util/List;Ljava/lang/reflect/Method;Ljava/util/Optional;Ljava/lang/reflect/Method;Ljava/util/Optional;)Lio/trino/operator/aggregation/AggregationImplementation;
-#parseImplementation(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/Optional;Ljava/lang/reflect/Method;Ljava/util/Optional;)Lio/trino/operator/aggregation/AggregationImplementation;
-#findAggregationStateParamType(Ljava/lang/reflect/Method;)Ljava/lang/Class;
@395
-###io/trino/operator/aggregation/AggregationImplementation$Parser

+###io/trino/operator/aggregation/BucketConsumer
@351
+#process(Ljava/lang/Object;J)V

+###io/trino/operator/aggregation/NumericHistogramStateFactory$GroupedState
@351
+#<init>()V
+#ensureCapacity(J)V
+#get()Lio/trino/operator/aggregation/NumericHistogram;
+#set(Lio/trino/operator/aggregation/NumericHistogram;)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/arrayagg/ArrayAggregationStateConsumer
@351
+#accept(Lio/trino/spi/block/Block;I)V

+###io/trino/operator/aggregation/arrayagg/SingleArrayAggregationState
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getEstimatedSize()J
+#add(Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/arrayagg/ArrayAggregationStateConsumer;)V
+#isEmpty()Z
+#reset()V
@365
+#copy()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/arrayagg/ArrayAggregationFunction
@351
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;)V
+#output(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
+#input(Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;)V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;Lio/trino/spi/block/Block;I)V
-#combine(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;)V

+###io/trino/operator/aggregation/arrayagg/GroupArrayAggregationState
@351
+#add(Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/arrayagg/ArrayAggregationStateConsumer;)V

+###io/trino/operator/aggregation/arrayagg/ArrayAggregationStateFactory
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#createSingleState()Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/arrayagg/ArrayAggregationState
@351
+#add(Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/arrayagg/ArrayAggregationStateConsumer;)V
+#isEmpty()Z
+#merge(Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;)V
+#reset()V

+###io/trino/operator/aggregation/arrayagg/ArrayAggregationStateSerializer
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/arrayagg/ArrayAggregationState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/arrayagg/ArrayAggregationState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/ApproximateLongPercentileAggregations
@351
+#input(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;JD)V
+#weightedInput(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;JDD)V
+#combine(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;Lio/trino/operator/aggregation/state/TDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V
+#toDoubleExact(J)D
+#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;JDDD)V[deprecated]
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;JDDD)V[deprecated]
-#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
-#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/ApproximateDoublePercentileArrayAggregations
@351
+#input(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;DLio/trino/spi/block/Block;)V
+#weightedInput(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;DDLio/trino/spi/block/Block;)V
+#combine(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;)V
+#output(Lio/trino/operator/aggregation/state/TDigestAndPercentileArrayState;Lio/trino/spi/block/BlockBuilder;)V
+#valuesAtPercentiles(Lio/airlift/stats/TDigest;Ljava/util/List;)Ljava/util/List;

+###io/trino/operator/aggregation/GeometricMeanAggregations
@351
+#input(Lio/trino/operator/aggregation/state/LongAndDoubleState;J)V
+#input(Lio/trino/operator/aggregation/state/LongAndDoubleState;D)V
+#combine(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/operator/aggregation/state/LongAndDoubleState;)V
+#output(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/RealCorrelationAggregation
@351
+#input(Lio/trino/operator/aggregation/state/CorrelationState;JJ)V
+#combine(Lio/trino/operator/aggregation/state/CorrelationState;Lio/trino/operator/aggregation/state/CorrelationState;)V
+#corr(Lio/trino/operator/aggregation/state/CorrelationState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/IntervalYearToMonthSumAggregation
@351
+#sum(Lio/trino/operator/aggregation/state/NullableLongState;J)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#output(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/NumericHistogramStateFactory$SingleState
@351
+#<init>()V
+#get()Lio/trino/operator/aggregation/NumericHistogram;
+#set(Lio/trino/operator/aggregation/NumericHistogram;)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/VarcharApproximateMostFrequent
@351
+#input(Lio/trino/operator/aggregation/VarcharApproximateMostFrequent$State;JLio/airlift/slice/Slice;J)V
+#combine(Lio/trino/operator/aggregation/VarcharApproximateMostFrequent$State;Lio/trino/operator/aggregation/VarcharApproximateMostFrequent$State;)V
+#output(Lio/trino/operator/aggregation/VarcharApproximateMostFrequent$State;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/DecimalSumAggregation
@351
+#<init>()V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#inputShortDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/Block;I)V
+#inputLongDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;)V
+#outputLongDecimal(Lio/trino/spi/type/DecimalType;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/BlockBuilder;)V
@361
+#inputShortDecimal(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/Block;I)V
+#inputLongDecimal(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/Block;I)V
+#outputLongDecimal(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/BlockBuilder;)V
-#inputShortDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/Block;I)V
-#inputLongDecimal(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/Block;I)V
-#outputLongDecimal(Lio/trino/spi/type/DecimalType;Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
+#inputShortDecimal(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;J)V
-#<init>()V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#inputShortDecimal(Lio/trino/operator/aggregation/state/LongDecimalWithOverflowState;Lio/trino/spi/block/Block;I)V

+###io/trino/operator/aggregation/RealCovarianceAggregation
@351
+#input(Lio/trino/operator/aggregation/state/CovarianceState;JJ)V
+#combine(Lio/trino/operator/aggregation/state/CovarianceState;Lio/trino/operator/aggregation/state/CovarianceState;)V
+#covarSamp(Lio/trino/operator/aggregation/state/CovarianceState;Lio/trino/spi/block/BlockBuilder;)V
+#covarPop(Lio/trino/operator/aggregation/state/CovarianceState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/AggregationMetadata$ParameterMetadata$ParameterType
@351
+#values()[Lio/trino/operator/aggregation/AggregationMetadata$ParameterMetadata$ParameterType;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/aggregation/AggregationMetadata$ParameterMetadata$ParameterType;
@366
-###io/trino/operator/aggregation/AggregationMetadata$ParameterMetadata$ParameterType

+###io/trino/operator/aggregation/CountColumn
@351
+#<init>()V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/operator/aggregation/state/LongState;Lio/trino/spi/block/Block;I)V
+#removeInput(Lio/trino/operator/aggregation/state/LongState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/LongState;Lio/trino/operator/aggregation/state/LongState;)V
+#output(Lio/trino/operator/aggregation/state/LongState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
-#<init>()V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/operator/aggregation/GroupedAccumulator
@351
+#getEstimatedSize()J
+#getFinalType()Lio/trino/spi/type/Type;
+#getIntermediateType()Lio/trino/spi/type/Type;
+#addInput(Lio/trino/operator/GroupByIdBlock;Lio/trino/spi/Page;)V
+#addIntermediate(Lio/trino/operator/GroupByIdBlock;Lio/trino/spi/block/Block;)V
+#evaluateIntermediate(ILio/trino/spi/block/BlockBuilder;)V
+#evaluateFinal(ILio/trino/spi/block/BlockBuilder;)V
+#prepareFinal()V
@367
+#addInput(Lio/trino/operator/GroupByIdBlock;Lio/trino/spi/Page;Ljava/util/Optional;)V
-#getFinalType()Lio/trino/spi/type/Type;
-#getIntermediateType()Lio/trino/spi/type/Type;
-#addInput(Lio/trino/operator/GroupByIdBlock;Lio/trino/spi/Page;)V

+###io/trino/operator/aggregation/ChecksumAggregationFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/type/BlockTypeOperators$BlockPositionXxHash64;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;)V
+#output(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/Block;I)V
-#<init>(Lio/trino/type/BlockTypeOperators;)V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#input(Lio/trino/type/BlockTypeOperators$BlockPositionXxHash64;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/spi/block/Block;I)V

+###io/trino/operator/aggregation/LongApproximateMostFrequentStateFactory
@351
+#<init>()V
+#createSingleState()Lio/trino/operator/aggregation/BigintApproximateMostFrequent$State;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/BigintApproximateMostFrequent$State;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/IntervalDayToSecondAverageAggregation
@351
+#input(Lio/trino/operator/aggregation/state/LongAndDoubleState;J)V
+#combine(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/operator/aggregation/state/LongAndDoubleState;)V
+#output(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/InternalAggregationFunction
@351
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/AccumulatorFactoryBinder;)V
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/AccumulatorFactoryBinder;Ljava/util/List;)V
+#name()Ljava/lang/String;
+#getParameterTypes()Ljava/util/List;
+#getFinalType()Lio/trino/spi/type/Type;
+#getIntermediateType()Lio/trino/spi/type/Type;
+#getLambdaInterfaces()Ljava/util/List;
+#bind(Ljava/util/List;Ljava/util/Optional;)Lio/trino/operator/aggregation/AccumulatorFactory;
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
+#getAccumulatorFactoryBinder()Lio/trino/operator/aggregation/AccumulatorFactoryBinder;
@364
+#getIntermediateType()Ljava/util/Optional;
-#getIntermediateType()Lio/trino/spi/type/Type;
@365
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;ZLio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
@366
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;)V
+#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Lio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/AccumulatorFactoryBinder;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/AccumulatorFactoryBinder;Ljava/util/List;)V
-#name()Ljava/lang/String;
-#getParameterTypes()Ljava/util/List;
-#getFinalType()Lio/trino/spi/type/Type;
-#getIntermediateType()Ljava/util/Optional;
-#bind(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/List;ZLio/trino/Session;)Lio/trino/operator/aggregation/AccumulatorFactory;
-#getAccumulatorFactoryBinder()Lio/trino/operator/aggregation/AccumulatorFactoryBinder;
@367
-###io/trino/operator/aggregation/InternalAggregationFunction

+###io/trino/operator/aggregation/ApproximateMostFrequentHistogram
@351
+#<init>(IILio/trino/operator/aggregation/ApproximateMostFrequentBucketSerializer;Lio/trino/operator/aggregation/ApproximateMostFrequentBucketDeserializer;)V
+#<init>(Lio/airlift/slice/Slice;Lio/trino/operator/aggregation/ApproximateMostFrequentBucketSerializer;Lio/trino/operator/aggregation/ApproximateMostFrequentBucketDeserializer;)V
+#add(Ljava/lang/Object;)V
+#add(Ljava/lang/Object;J)V
+#serialize()Lio/airlift/slice/Slice;
+#merge(Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V
+#forEachBucket(Lio/trino/operator/aggregation/BucketConsumer;)V
+#getBuckets()Ljava/util/Map;
+#estimatedInMemorySize()J

+###io/trino/operator/aggregation/ApproximateDoublePercentileAggregations
@351
+#input(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;DD)V
+#weightedInput(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;DDD)V
+#combine(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;Lio/trino/operator/aggregation/state/TDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/TDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V
+#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;DDDD)V[deprecated]
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;DDDD)V[deprecated]
-#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
-#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/StringApproximateMostFrequentStateFactory$GroupedLongApproximateMostFrequentState
@351
+#<init>()V
+#get()Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;
+#set(Lio/trino/operator/aggregation/ApproximateMostFrequentHistogram;)V
+#ensureCapacity(J)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/AggregationMetadata$ParameterMetadata
@351
+#<init>(Lio/trino/operator/aggregation/AggregationMetadata$ParameterMetadata$ParameterType;)V
+#<init>(Lio/trino/operator/aggregation/AggregationMetadata$ParameterMetadata$ParameterType;Lio/trino/spi/type/Type;)V
+#fromSqlType(Lio/trino/spi/type/Type;ZZLjava/lang/String;)Lio/trino/operator/aggregation/AggregationMetadata$ParameterMetadata;
+#forBlockIndexParameter()Lio/trino/operator/aggregation/AggregationMetadata$ParameterMetadata;
+#forStateParameter()Lio/trino/operator/aggregation/AggregationMetadata$ParameterMetadata;
+#getParameterType()Lio/trino/operator/aggregation/AggregationMetadata$ParameterMetadata$ParameterType;
+#getSqlType()Lio/trino/spi/type/Type;
@366
-###io/trino/operator/aggregation/AggregationMetadata$ParameterMetadata

+###io/trino/operator/aggregation/AverageAggregations
@351
+#input(Lio/trino/operator/aggregation/state/LongAndDoubleState;J)V
+#input(Lio/trino/operator/aggregation/state/LongAndDoubleState;D)V
+#removeInput(Lio/trino/operator/aggregation/state/LongAndDoubleState;J)V
+#removeInput(Lio/trino/operator/aggregation/state/LongAndDoubleState;D)V
+#combine(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/operator/aggregation/state/LongAndDoubleState;)V
+#output(Lio/trino/operator/aggregation/state/LongAndDoubleState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/builder/InMemoryHashAggregationBuilder
@351
+#<init>(Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ILjava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/operator/OperatorContext;Ljava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/operator/UpdateMemory;)V
+#<init>(Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ILjava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/operator/OperatorContext;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/operator/UpdateMemory;)V
+#close()V
+#processPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#updateMemory()V
+#isFull()Z
+#recordHashCollisions(Lio/trino/operator/HashCollisionsCounter;)V
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#getSizeInMemory()J
+#getGroupIdsSortingSize()J
+#setOutputPartial()V
+#getKeyChannels()I
+#getGroupCount()J
+#buildResult()Lio/trino/operator/WorkProcessor;
+#buildHashSortedResult()Lio/trino/operator/WorkProcessor;
+#buildIntermediateTypes()Ljava/util/List;
+#getCapacity()I
+#buildTypes()Ljava/util/List;
+#toTypes(Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Ljava/util/Optional;)Ljava/util/List;
@367
+#setSpillOutput()V
+#buildSpillTypes()Ljava/util/List;
+#toTypes(Ljava/util/List;Ljava/util/List;Ljava/util/Optional;)Ljava/util/List;
-#setOutputPartial()V
-#buildIntermediateTypes()Ljava/util/List;
-#toTypes(Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Ljava/util/Optional;)Ljava/util/List;
@405
-#recordHashCollisions(Lio/trino/operator/HashCollisionsCounter;)V
-#getHashCollisions()J
-#getExpectedHashCollisions()D

+###io/trino/operator/aggregation/builder/MergingHashAggregationBuilder
@351
+#<init>(Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ILjava/util/List;Ljava/util/Optional;Lio/trino/operator/OperatorContext;Lio/trino/operator/WorkProcessor;Lio/trino/memory/context/AggregatedMemoryContext;JILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#buildResult()Lio/trino/operator/WorkProcessor;
+#close()V

+###io/trino/operator/aggregation/builder/HashAggregationBuilder
@351
+#processPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#buildResult()Lio/trino/operator/WorkProcessor;
+#isFull()Z
+#updateMemory()V
+#recordHashCollisions(Lio/trino/operator/HashCollisionsCounter;)V
+#close()V
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
@405
-#recordHashCollisions(Lio/trino/operator/HashCollisionsCounter;)V

+###io/trino/operator/aggregation/builder/SpillableHashAggregationBuilder
@351
+#<init>(Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ILjava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/operator/OperatorContext;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#processPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#updateMemory()V
+#recordHashCollisions(Lio/trino/operator/HashCollisionsCounter;)V
+#isFull()Z
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#buildResult()Lio/trino/operator/WorkProcessor;
+#close()V
@405
-#recordHashCollisions(Lio/trino/operator/HashCollisionsCounter;)V

+###io/trino/operator/aggregation/ApproximateSetAggregation
@351
+#newHyperLogLog()Lio/airlift/stats/cardinality/HyperLogLog;
+#input(Lio/trino/operator/aggregation/state/HyperLogLogState;D)V
+#input(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/airlift/slice/Slice;)V
+#input(Lio/trino/operator/aggregation/state/HyperLogLogState;J)V
+#combineState(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/operator/aggregation/state/HyperLogLogState;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/MergeHyperLogLogAggregation
@351
+#input(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/airlift/slice/Slice;)V
+#combine(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/operator/aggregation/state/HyperLogLogState;)V
+#output(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/BigintApproximateMostFrequent
@351
+#input(Lio/trino/operator/aggregation/BigintApproximateMostFrequent$State;JJJ)V
+#combine(Lio/trino/operator/aggregation/BigintApproximateMostFrequent$State;Lio/trino/operator/aggregation/BigintApproximateMostFrequent$State;)V
+#output(Lio/trino/operator/aggregation/BigintApproximateMostFrequent$State;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/MinAggregationFunction
@351
+#<init>()V
@383
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/InOut;Lio/trino/spi/block/Block;I)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;)V
+#output(Lio/trino/spi/function/InOut;Lio/trino/spi/block/BlockBuilder;)V
-#<init>()V

+###io/trino/operator/aggregation/TypedSet
@351
+#createEqualityTypedSet(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;ILjava/lang/String;)Lio/trino/operator/aggregation/TypedSet;
+#createEqualityTypedSet(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/BlockBuilder;ILjava/lang/String;Z)Lio/trino/operator/aggregation/TypedSet;
+#createDistinctTypedSet(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;ILjava/lang/String;)Lio/trino/operator/aggregation/TypedSet;
+#createDistinctTypedSet(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/BlockBuilder;ILjava/lang/String;)Lio/trino/operator/aggregation/TypedSet;
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/BlockBuilder;ILjava/lang/String;Z)V
+#getRetainedSizeInBytes()J
+#contains(Lio/trino/spi/block/Block;I)Z
+#add(Lio/trino/spi/block/Block;I)V
+#size()I
+#positionOf(Lio/trino/spi/block/Block;I)I
@365
+#createEqualityTypedSet(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/BlockBuilder;ILjava/lang/String;)Lio/trino/operator/aggregation/TypedSet;
+#createUnboundedEqualityTypedSet(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/BlockBuilder;ILjava/lang/String;)Lio/trino/operator/aggregation/TypedSet;
+#add(Lio/trino/spi/block/Block;I)Z
-#createEqualityTypedSet(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/BlockBuilder;ILjava/lang/String;Z)Lio/trino/operator/aggregation/TypedSet;
-#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/BlockBuilder;ILjava/lang/String;Z)V
-#add(Lio/trino/spi/block/Block;I)V

+###io/trino/operator/aggregation/CountAggregation
@351
+#input(Lio/trino/operator/aggregation/state/LongState;)V
+#removeInput(Lio/trino/operator/aggregation/state/LongState;)V
+#combine(Lio/trino/operator/aggregation/state/LongState;Lio/trino/operator/aggregation/state/LongState;)V
+#output(Lio/trino/operator/aggregation/state/LongState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/ReduceAggregationFunction
@351
+#<init>()V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/operator/aggregation/state/NullableLongState;Ljava/lang/Object;JLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#input(Lio/trino/operator/aggregation/state/NullableDoubleState;Ljava/lang/Object;DLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#input(Lio/trino/operator/aggregation/state/NullableBooleanState;Ljava/lang/Object;ZLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#combine(Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#combine(Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
@364
+#input(Lio/trino/operator/aggregation/state/GenericLongState;Ljava/lang/Object;JLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#input(Lio/trino/operator/aggregation/state/GenericDoubleState;Ljava/lang/Object;DLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#input(Lio/trino/operator/aggregation/state/GenericBooleanState;Ljava/lang/Object;ZLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#combine(Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#combine(Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
+#combine(Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
-#input(Lio/trino/operator/aggregation/state/NullableLongState;Ljava/lang/Object;JLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
-#input(Lio/trino/operator/aggregation/state/NullableDoubleState;Ljava/lang/Object;DLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
-#input(Lio/trino/operator/aggregation/state/NullableBooleanState;Ljava/lang/Object;ZLio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
-#combine(Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/operator/aggregation/state/NullableLongState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
-#combine(Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/operator/aggregation/state/NullableDoubleState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
-#combine(Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/operator/aggregation/state/NullableBooleanState;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)V
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@395
+#specialize(Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/AggregationImplementation;
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/operator/aggregation/multimapagg/MultimapAggregationStateConsumer
@351
+#accept(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V

+###io/trino/operator/aggregation/multimapagg/MultimapAggregationStateFactory
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#createSingleState()Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;

+###io/trino/operator/aggregation/multimapagg/GroupedMultimapAggregationState
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/multimapagg/MultimapAggregationStateConsumer;)V

+###io/trino/operator/aggregation/multimapagg/SingleMultimapAggregationState
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/multimapagg/MultimapAggregationStateConsumer;)V
+#isEmpty()Z
+#getEntryCount()I
+#getEstimatedSize()J
+#reset()V
@365
+#copy()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/multimapagg/MultimapAggregationStateSerializer
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/multimapagg/MultimapAggregationState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/multimapagg/MultimapAggregationFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;)V
+#output(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@376
+#output(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;Lio/trino/spi/block/BlockBuilder;)V
-#output(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;Lio/trino/spi/block/BlockBuilder;)V
@383
-#<init>(Lio/trino/type/BlockTypeOperators;)V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/operator/aggregation/multimapagg/MultimapAggregationState
@351
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/multimapagg/MultimapAggregationStateConsumer;)V
+#merge(Lio/trino/operator/aggregation/multimapagg/MultimapAggregationState;)V
+#isEmpty()Z
+#reset()V
+#getEntryCount()I

+###io/trino/operator/aggregation/histogram/HashUtil
@351
+#nextProbeLinear(I)I
+#nextSumOfCount(I)I
+#nextSumOfSquares(I)I
+#nextBucketId(III)I
+#calculateMaxFill(IF)I
+#computeBucketCount(IF)I

+###io/trino/operator/aggregation/histogram/GroupedTypedHistogram
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;I)V
+#<init>(JLio/trino/spi/block/Block;Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;I)V
+#ensureCapacity(J)V
+#getEstimatedSize()J
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#addAll(Lio/trino/operator/aggregation/histogram/TypedHistogram;)V
+#readAllValues(Lio/trino/operator/aggregation/histogram/HistogramValueReader;)V
+#setGroupId(J)Lio/trino/operator/aggregation/histogram/TypedHistogram;
+#getType()Lio/trino/spi/type/Type;
+#getExpectedSize()I
+#isEmpty()Z
+#add(ILio/trino/spi/block/Block;J)V

+###io/trino/operator/aggregation/histogram/TypedHistogram
@351
+#getEstimatedSize()J
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#addAll(Lio/trino/operator/aggregation/histogram/TypedHistogram;)V
+#readAllValues(Lio/trino/operator/aggregation/histogram/HistogramValueReader;)V
+#add(ILio/trino/spi/block/Block;J)V
+#getType()Lio/trino/spi/type/Type;
+#getExpectedSize()I
+#isEmpty()Z
+#setGroupId(J)Lio/trino/operator/aggregation/histogram/TypedHistogram;
+#ensureCapacity(J)V

+###io/trino/operator/aggregation/histogram/SingleTypedHistogram
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;I)V
+#<init>(Lio/trino/spi/block/Block;Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;I)V
+#getEstimatedSize()J
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#addAll(Lio/trino/operator/aggregation/histogram/TypedHistogram;)V
+#readAllValues(Lio/trino/operator/aggregation/histogram/HistogramValueReader;)V
+#add(ILio/trino/spi/block/Block;J)V
+#getType()Lio/trino/spi/type/Type;
+#getExpectedSize()I
+#isEmpty()Z

+###io/trino/operator/aggregation/histogram/Histogram
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/histogram/HistogramState;Lio/trino/spi/block/Block;I)V
+#combine(Lio/trino/operator/aggregation/histogram/HistogramState;Lio/trino/operator/aggregation/histogram/HistogramState;)V
+#output(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/histogram/HistogramState;Lio/trino/spi/block/BlockBuilder;)V
@364
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
@383
-#<init>(Lio/trino/type/BlockTypeOperators;)V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;

+###io/trino/operator/aggregation/histogram/HistogramStateFactory
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;I)V
+#createSingleState()Lio/trino/operator/aggregation/histogram/HistogramState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/histogram/HistogramState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;
@383
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;)V
-#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;I)V

+###io/trino/operator/aggregation/histogram/SingleHistogramState
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;I)V
+#get()Lio/trino/operator/aggregation/histogram/TypedHistogram;
+#deserialize(Lio/trino/spi/block/Block;I)V
+#addMemoryUsage(J)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/histogram/HistogramState
@351
+#get()Lio/trino/operator/aggregation/histogram/TypedHistogram;
+#addMemoryUsage(J)V
+#deserialize(Lio/trino/spi/block/Block;I)V

+###io/trino/operator/aggregation/histogram/HistogramValueReader
@351
+#read(Lio/trino/spi/block/Block;IJ)V

+###io/trino/operator/aggregation/histogram/GroupedHistogramState
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;I)V
+#ensureCapacity(J)V
+#get()Lio/trino/operator/aggregation/histogram/TypedHistogram;
+#deserialize(Lio/trino/spi/block/Block;I)V
+#addMemoryUsage(J)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/histogram/HistogramStateSerializer
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/histogram/HistogramState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/histogram/HistogramState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/histogram/ValueStore
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;ILio/trino/spi/block/BlockBuilder;)V
+#addAndGetPosition(Lio/trino/spi/block/Block;IJ)I
+#getRehashCount()I
+#getEstimatedSize()J

+###io/trino/operator/NestedLoopJoinPages
@351
+#getPages()Ljava/util/List;
+#getEstimatedSize()Lio/airlift/units/DataSize;
@358
-###io/trino/operator/NestedLoopJoinPages

+###io/trino/operator/ExchangeClient
@351
+#<init>(Ljava/lang/String;Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZLio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/LocalMemoryContext;Ljava/util/concurrent/Executor;)V
+#getStatus()Lio/trino/operator/ExchangeClientStatus;
+#addLocation(Ljava/net/URI;)V
+#noMoreLocations()V
+#pages()Lio/trino/operator/WorkProcessor;
+#pollPage()Lio/trino/execution/buffer/SerializedPage;
+#isFinished()Z
+#isClosed()Z
+#close()V
+#scheduleRequestIfNecessary()V
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Ljava/lang/String;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZLio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/LocalMemoryContext;Ljava/util/concurrent/Executor;)V
-#<init>(Ljava/lang/String;Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZLio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/LocalMemoryContext;Ljava/util/concurrent/Executor;)V
-#scheduleRequestIfNecessary()V
@366
+#<init>(Ljava/lang/String;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/trino/operator/ExchangeClientBuffer;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZLio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/LocalMemoryContext;Ljava/util/concurrent/Executor;Lio/trino/execution/TaskFailureListener;)V
+#addLocation(Lio/trino/execution/TaskId;Ljava/net/URI;)V
-#<init>(Ljava/lang/String;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZLio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/LocalMemoryContext;Ljava/util/concurrent/Executor;)V
-#addLocation(Ljava/net/URI;)V
-#isClosed()Z
@368
+#pollPage()Lio/airlift/slice/Slice;
-#pollPage()Lio/trino/execution/buffer/SerializedPage;
@369
-###io/trino/operator/ExchangeClient

+###io/trino/operator/PageTooLargeException
@351
+#<init>()V

+###io/trino/operator/PagesSpatialIndex
@351
+#findJoinPositions(ILio/trino/spi/Page;ILjava/util/Optional;)[I
+#isJoinPositionEligible(IILio/trino/spi/Page;)Z
+#appendTo(ILio/trino/spi/PageBuilder;I)V

+###io/trino/operator/LookupOuterOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/List;Ljava/util/List;Ljava/lang/Runnable;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V
@358
-###io/trino/operator/LookupOuterOperator

+###io/trino/operator/StatisticsWriterOperator$StatisticsWriterOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/StatisticsWriterOperator$StatisticsWriter;ZLio/trino/sql/planner/plan/StatisticAggregationsDescriptor;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/AggregationOperator$AggregationOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Z)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@367
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Z)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Z)V
@369
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Z)V

+###io/trino/operator/MarkDistinctHash
@351
+#<init>(Lio/trino/Session;Ljava/util/List;[ILjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/operator/UpdateMemory;)V
+#<init>(Lio/trino/Session;Ljava/util/List;[ILjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/operator/UpdateMemory;)V
+#getEstimatedSize()J
+#markDistinctRows(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#getCapacity()I

+###io/trino/operator/InternalJoinFilterFunction
@351
+#filter(ILio/trino/spi/Page;ILio/trino/spi/Page;)Z
@358
-###io/trino/operator/InternalJoinFilterFunction

+###io/trino/operator/FinishedOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/PartitionedOutputOperator$PartitionedOutputFactory
@351
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;)V
+#createOutputOperator(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)Lio/trino/operator/OperatorFactory;
@360
-###io/trino/operator/PartitionedOutputOperator$PartitionedOutputFactory

+###io/trino/operator/WindowInfo$DriverWindowInfo
@351
+#<init>(DDDJJJ)V
+#getSumSquaredDifferencesPositionsOfIndex()D
+#getSumSquaredDifferencesSizeOfIndex()D
+#getSumSquaredDifferencesSizeInPartition()D
+#getTotalPartitionsCount()J
+#getTotalRowsCount()J
+#getNumberOfIndexes()J

+###io/trino/operator/SortedPositionLinks$FactoryBuilder
@351
+#<init>(ILio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;)V
+#link(II)I
+#build()Lio/trino/operator/PositionLinks$Factory;
+#size()I
@358
-###io/trino/operator/SortedPositionLinks$FactoryBuilder

+###io/trino/operator/SpatialJoinOperator$SpatialJoinOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/SpatialJoinNode$Type;Ljava/util/List;Ljava/util/List;ILjava/util/Optional;Lio/trino/operator/PagesSpatialIndexFactory;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/DriverContext
@351
+#<init>(Lio/trino/operator/PipelineContext;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/execution/Lifespan;)V
+#getTaskId()Lio/trino/execution/TaskId;
+#addOperatorContext(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;)Lio/trino/operator/OperatorContext;
+#getOperatorContexts()Ljava/util/List;
+#getPipelineContext()Lio/trino/operator/PipelineContext;
+#getSession()Lio/trino/Session;
+#startProcessTimer()V
+#recordProcessed(Lio/trino/operator/OperationTimer;)V
+#recordBlocked(Lcom/google/common/util/concurrent/ListenableFuture;)V
+#finished()V
+#failed(Ljava/lang/Throwable;)V
+#isDone()Z
+#reserveSpill(J)Lcom/google/common/util/concurrent/ListenableFuture;
+#freeSpill(J)V
+#getYieldSignal()Lio/trino/operator/DriverYieldSignal;
+#getSystemMemoryUsage()J
+#getMemoryUsage()J
+#getRevocableMemoryUsage()J
+#moreMemoryAvailable()V
+#isPerOperatorCpuTimerEnabled()Z
+#isCpuTimerEnabled()Z
+#getInputDataSize()Lio/airlift/stats/CounterStat;
+#getInputPositions()Lio/airlift/stats/CounterStat;
+#getOutputDataSize()Lio/airlift/stats/CounterStat;
+#getOutputPositions()Lio/airlift/stats/CounterStat;
+#getPhysicalWrittenDataSize()J
+#isExecutionStarted()Z
+#isFullyBlocked()Z
+#getOperatorStats()Ljava/util/List;
+#getDriverStats()Lio/trino/operator/DriverStats;
+#accept(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#acceptChildren(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/util/List;
+#getLifespan()Lio/trino/execution/Lifespan;
+#getYieldExecutor()Ljava/util/concurrent/ScheduledExecutorService;
@364
+#<init>(Lio/trino/operator/PipelineContext;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/execution/Lifespan;J)V
+#getSplitWeight()J
-#<init>(Lio/trino/operator/PipelineContext;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/execution/Lifespan;)V
@368
-#moreMemoryAvailable()V
@369
-#getSystemMemoryUsage()J
@388
+#<init>(Lio/trino/operator/PipelineContext;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/MemoryTrackingContext;J)V
-#<init>(Lio/trino/operator/PipelineContext;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/execution/Lifespan;J)V
-#getLifespan()Lio/trino/execution/Lifespan;

+###io/trino/operator/exchange/LocalExchangeSinkOperator
@351
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V

+###io/trino/operator/exchange/LocalExchangeMemoryManager
@351
+#<init>(J)V
+#updateMemoryUsage(J)V
+#getNotFullFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#getBufferedBytes()J

+###io/trino/operator/exchange/LocalExchangeBufferInfo
@351
+#<init>(JI)V
+#getBufferedBytes()J
+#getBufferedPages()I
+#mergeWith(Lio/trino/operator/exchange/LocalExchangeBufferInfo;)Lio/trino/operator/exchange/LocalExchangeBufferInfo;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/operator/exchange/LocalExchangeSourceOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/exchange/LocalExchangeSource;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V

+###io/trino/operator/exchange/PageChannelSelector
@351
+#<init>([I)V
+#apply(Lio/trino/spi/Page;)Lio/trino/spi/Page;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@361
+#identitySelection()Ljava/util/function/Function;

+###io/trino/operator/exchange/LocalMergeSourceOperator$LocalMergeSourceOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/exchange/LocalExchange$LocalExchangeFactory;Ljava/util/List;Lio/trino/sql/gen/OrderingCompiler;Ljava/util/List;Ljava/util/List;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@388
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/exchange/LocalExchange;Ljava/util/List;Lio/trino/sql/gen/OrderingCompiler;Ljava/util/List;Ljava/util/List;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/exchange/LocalExchange$LocalExchangeFactory;Ljava/util/List;Lio/trino/sql/gen/OrderingCompiler;Ljava/util/List;Ljava/util/List;)V

+###io/trino/operator/exchange/LocalExchange
@351
+#<init>(IILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
+#getBufferCount()I
+#getBufferedBytes()J
+#createSinkFactory()Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactory;
+#getSinkFactory(Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactoryId;)Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactory;
+#getNextSource()Lio/trino/operator/exchange/LocalExchangeSource;
@353
+#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;IILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
-#<init>(IILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
@388
+#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;ILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
-#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;IILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
-#getSinkFactory(Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactoryId;)Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactory;
@395
+#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;ILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;Ljava/util/function/Supplier;Lio/airlift/units/DataSize;)V
-#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;ILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
@403
+#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;ILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;Lio/airlift/units/DataSize;)V
+#getNextSource(Ljava/util/function/Supplier;)Lio/trino/operator/exchange/LocalExchangeSource;
-#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;ILio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;Ljava/util/function/Supplier;Lio/airlift/units/DataSize;)V
-#getNextSource()Lio/trino/operator/exchange/LocalExchangeSource;
@405
-#getBufferedBytes()J
@407
+#getBucketCount(Lio/trino/Session;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/sql/planner/PartitioningHandle;)I

+###io/trino/operator/exchange/LocalExchanger
@351
+#accept(Lio/trino/spi/Page;)V
+#waitForWriting()Lcom/google/common/util/concurrent/ListenableFuture;
+#finish()V

+###io/trino/operator/exchange/LocalMergeSourceOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PageWithPositionComparator;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V

+###io/trino/operator/exchange/PassthroughExchanger
@351
+#<init>(Lio/trino/operator/exchange/LocalExchangeSource;JLjava/util/function/LongConsumer;)V
+#accept(Lio/trino/spi/Page;)V
+#waitForWriting()Lcom/google/common/util/concurrent/ListenableFuture;
+#finish()V
@405
+#<init>(Lio/trino/operator/exchange/LocalExchangeSource;Lio/trino/operator/exchange/LocalExchangeMemoryManager;)V
-#<init>(Lio/trino/operator/exchange/LocalExchangeSource;JLjava/util/function/LongConsumer;)V

+###io/trino/operator/exchange/LocalExchangeSource
@351
+#<init>(Ljava/util/function/Consumer;)V
+#getBufferInfo()Lio/trino/operator/exchange/LocalExchangeBufferInfo;
+#pages()Lio/trino/operator/WorkProcessor;
+#removePage()Lio/trino/spi/Page;
+#waitForReading()Lcom/google/common/util/concurrent/ListenableFuture;
+#isFinished()Z
+#finish()V
+#close()V
@405
+#<init>(Lio/trino/operator/exchange/LocalExchangeMemoryManager;Ljava/util/function/Consumer;)V
-#<init>(Ljava/util/function/Consumer;)V

+###io/trino/operator/exchange/LocalExchangeSink
@351
+#finishedLocalExchangeSink()Lio/trino/operator/exchange/LocalExchangeSink;
+#<init>(Lio/trino/operator/exchange/LocalExchanger;Ljava/util/function/Consumer;)V
+#finish()V
+#isFinished()Z
+#addPage(Lio/trino/spi/Page;)V
+#waitForWriting()Lcom/google/common/util/concurrent/ListenableFuture;
@393
+#isFinished()Lcom/google/common/util/concurrent/ListenableFuture;
-#isFinished()Z

+###io/trino/operator/exchange/LocalExchangeSourceOperator$LocalExchangeSourceOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/exchange/LocalExchange$LocalExchangeFactory;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
+#getLocalExchangeFactory()Lio/trino/operator/exchange/LocalExchange$LocalExchangeFactory;
@388
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/exchange/LocalExchange;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/exchange/LocalExchange$LocalExchangeFactory;)V
-#getLocalExchangeFactory()Lio/trino/operator/exchange/LocalExchange$LocalExchangeFactory;

+###io/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactoryId
@351
+#<init>(I)V
@388
-###io/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactoryId

+###io/trino/operator/exchange/LocalExchange$LocalExchangeFactory
@351
+#<init>(Lio/trino/sql/planner/PartitioningHandle;ILjava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/operator/PipelineExecutionStrategy;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
+#newSinkFactoryId()Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactoryId;
+#noMoreSinkFactories()V
+#getBufferCount()I
+#getLocalExchange(Lio/trino/execution/Lifespan;)Lio/trino/operator/exchange/LocalExchange;
+#closeSinks(Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactoryId;)V
@353
+#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;ILjava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/operator/PipelineExecutionStrategy;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
-#<init>(Lio/trino/sql/planner/PartitioningHandle;ILjava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/operator/PipelineExecutionStrategy;Lio/airlift/units/DataSize;Lio/trino/type/BlockTypeOperators;)V
@388
-###io/trino/operator/exchange/LocalExchange$LocalExchangeFactory

+###io/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactory
@351
+#createSink()Lio/trino/operator/exchange/LocalExchangeSink;
+#duplicate()Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactory;
+#close()V
+#noMoreSinkFactories()V

+###io/trino/operator/exchange/LocalPartitionGenerator
@351
+#<init>(Lio/trino/operator/HashGenerator;I)V
+#getPartitionCount()I
+#getPartition(Lio/trino/spi/Page;I)I
+#getRawHash(Lio/trino/spi/Page;I)J
+#getPartition(J)I

+###io/trino/operator/exchange/LocalExchangeSinkOperator$LocalExchangeSinkOperatorFactory
@351
+#<init>(Lio/trino/operator/exchange/LocalExchange$LocalExchangeFactory;ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactoryId;Ljava/util/function/Function;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#duplicate()Lio/trino/operator/OperatorFactory;
+#localPlannerComplete()V
@388
+#<init>(Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactory;ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/function/Function;)V
-#<init>(Lio/trino/operator/exchange/LocalExchange$LocalExchangeFactory;ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/exchange/LocalExchange$LocalExchangeSinkFactoryId;Ljava/util/function/Function;)V
-#noMoreOperators(Lio/trino/execution/Lifespan;)V

+###io/trino/operator/StatisticsWriterOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/StatisticsWriterOperator$StatisticsWriter;Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;Z)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z

+###io/trino/operator/PartitionedOutputOperator$PartitionedOutputInfo
@351
+#<init>(JJJ)V
+#getRowsAdded()J
+#getPagesAdded()J
+#getOutputBufferPeakMemoryUsage()J
+#mergeWith(Lio/trino/operator/PartitionedOutputOperator$PartitionedOutputInfo;)Lio/trino/operator/PartitionedOutputOperator$PartitionedOutputInfo;
+#isFinal()Z
+#toString()Ljava/lang/String;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@360
-###io/trino/operator/PartitionedOutputOperator$PartitionedOutputInfo

+###io/trino/operator/SimplePagesHashStrategy
@351
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Lio/trino/type/BlockTypeOperators;)V
+#getChannelCount()I
+#getSizeInBytes()J
+#appendTo(IILio/trino/spi/PageBuilder;I)V
+#hashPosition(II)J
+#hashRow(ILio/trino/spi/Page;)J
+#rowEqualsRow(ILio/trino/spi/Page;ILio/trino/spi/Page;)Z
+#positionEqualsRow(IIILio/trino/spi/Page;)Z
+#positionEqualsRowIgnoreNulls(IIILio/trino/spi/Page;)Z
+#positionNotDistinctFromRow(IIILio/trino/spi/Page;[I)Z
+#positionEqualsPosition(IIII)Z
+#positionEqualsPositionIgnoreNulls(IIII)Z
+#isPositionNull(II)Z
+#compareSortChannelPositions(IIII)I
+#isSortChannelPositionNull(II)Z
@352
+#rowNotDistinctFromRow(ILio/trino/spi/Page;ILio/trino/spi/Page;)Z
+#positionNotDistinctFromRow(IIILio/trino/spi/Page;)Z
+#positionNotDistinctFromPosition(IIII)Z

+###io/trino/operator/RowReferencePageManager
@351
+#<init>()V
+#add(Lio/trino/spi/Page;)Lio/trino/operator/RowReferencePageManager$LoadCursor;
+#dereference(J)V
+#getPage(J)Lio/trino/spi/Page;
+#getPosition(J)I
+#compactIfNeeded()V
+#sizeOf()J

+###io/trino/operator/StatisticsWriterOperator$StatisticsWriter
@351
+#writeStatistics(Ljava/util/Collection;)V

+###io/trino/operator/TopNProcessor
@351
+#<init>(Lio/trino/memory/context/AggregatedMemoryContext;Ljava/util/List;ILjava/util/List;Ljava/util/List;Lio/trino/spi/type/TypeOperators;)V
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#noMoreOutput()Z

+###io/trino/operator/OuterPositionIterator
@351
+#appendToNext(Lio/trino/spi/PageBuilder;I)Z
@358
-###io/trino/operator/OuterPositionIterator

+###io/trino/operator/JoinHash
@351
+#<init>(Lio/trino/operator/PagesHash;Ljava/util/Optional;Ljava/util/Optional;)V
+#isEmpty()Z
+#getChannelCount()I
+#getJoinPositionCount()J
+#getInMemorySizeInBytes()J
+#joinPositionWithinPartition(J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#close()V
@358
-###io/trino/operator/JoinHash

+###io/trino/operator/PartitionFunction
@351
+#getPartitionCount()I
+#getPartition(Lio/trino/spi/Page;I)I

+###io/trino/operator/WindowOperator$FrameBoundKey$Type
@351
+#values()[Lio/trino/operator/WindowOperator$FrameBoundKey$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/WindowOperator$FrameBoundKey$Type;

+###io/trino/operator/HashAggregationOperator$HashAggregationOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Z)V
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ZLjava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;ZLio/airlift/units/DataSize;Lio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Z)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@369
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ZLjava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;ZLio/airlift/units/DataSize;Lio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Z)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ZLjava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;ZLio/airlift/units/DataSize;Lio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Z)V
@374
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/Optional;)V
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ZLjava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;ZLio/airlift/units/DataSize;Lio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Ljava/util/Optional;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ZLjava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;ZLio/airlift/units/DataSize;Lio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V

+###io/trino/operator/UpdateOperator$UpdateOperatorFactory
@352
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@406
-###io/trino/operator/UpdateOperator$UpdateOperatorFactory

+###io/trino/operator/PagesRTreeIndex$GeometryWithPosition
@351
+#<init>(Lcom/esri/core/geometry/ogc/OGCGeometry;II)V
+#getGeometry()Lcom/esri/core/geometry/ogc/OGCGeometry;
+#getPartition()I
+#getPosition()I
+#getEstimatedMemorySizeInBytes()J

+###io/trino/operator/BigintGroupByHash
@351
+#<init>(IZILio/trino/operator/UpdateMemory;)V
+#getEstimatedSize()J
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#getTypes()Ljava/util/List;
+#getGroupCount()I
+#appendValuesTo(ILio/trino/spi/PageBuilder;I)V
+#addPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#getGroupIds(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#contains(ILio/trino/spi/Page;[I)Z
+#getRawHash(I)J
+#getCapacity()I
@376
+#appendValuesTo(ILio/trino/spi/PageBuilder;)V
-#appendValuesTo(ILio/trino/spi/PageBuilder;I)V
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D

+###io/trino/operator/StageExecutionDescriptor$StageExecutionStrategy
@351
+#values()[Lio/trino/operator/StageExecutionDescriptor$StageExecutionStrategy;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/StageExecutionDescriptor$StageExecutionStrategy;
@388
-###io/trino/operator/StageExecutionDescriptor$StageExecutionStrategy

+###io/trino/operator/PositionLinks
@351
+#getSizeInBytes()J
+#start(IILio/trino/spi/Page;)I
+#next(IILio/trino/spi/Page;)I
@358
-###io/trino/operator/PositionLinks

+###io/trino/operator/WindowFunctionDefinition
@351
+#window(Lio/trino/operator/window/WindowFunctionSupplier;Lio/trino/spi/type/Type;Lio/trino/operator/window/FrameInfo;ZLjava/util/List;Ljava/util/List;)Lio/trino/operator/WindowFunctionDefinition;
+#window(Lio/trino/operator/window/WindowFunctionSupplier;Lio/trino/spi/type/Type;Lio/trino/operator/window/FrameInfo;ZLjava/util/List;[Ljava/lang/Integer;)Lio/trino/operator/WindowFunctionDefinition;
+#getFrameInfo()Lio/trino/operator/window/FrameInfo;
+#getType()Lio/trino/spi/type/Type;
+#createWindowFunction()Lio/trino/spi/function/WindowFunction;
@359
+#window(Lio/trino/operator/window/WindowFunctionSupplier;Lio/trino/spi/type/Type;ZLjava/util/List;Ljava/util/List;)Lio/trino/operator/WindowFunctionDefinition;
+#getFrameInfo()Ljava/util/Optional;
-#getFrameInfo()Lio/trino/operator/window/FrameInfo;
@395
+#window(Lio/trino/spi/function/WindowFunctionSupplier;Lio/trino/spi/type/Type;Lio/trino/operator/window/FrameInfo;ZLjava/util/List;Ljava/util/List;)Lio/trino/operator/WindowFunctionDefinition;
+#window(Lio/trino/spi/function/WindowFunctionSupplier;Lio/trino/spi/type/Type;Lio/trino/operator/window/FrameInfo;ZLjava/util/List;[Ljava/lang/Integer;)Lio/trino/operator/WindowFunctionDefinition;
+#window(Lio/trino/spi/function/WindowFunctionSupplier;Lio/trino/spi/type/Type;ZLjava/util/List;Ljava/util/List;)Lio/trino/operator/WindowFunctionDefinition;
-#window(Lio/trino/operator/window/WindowFunctionSupplier;Lio/trino/spi/type/Type;Lio/trino/operator/window/FrameInfo;ZLjava/util/List;Ljava/util/List;)Lio/trino/operator/WindowFunctionDefinition;
-#window(Lio/trino/operator/window/WindowFunctionSupplier;Lio/trino/spi/type/Type;Lio/trino/operator/window/FrameInfo;ZLjava/util/List;[Ljava/lang/Integer;)Lio/trino/operator/WindowFunctionDefinition;
-#window(Lio/trino/operator/window/WindowFunctionSupplier;Lio/trino/spi/type/Type;ZLjava/util/List;Ljava/util/List;)Lio/trino/operator/WindowFunctionDefinition;

+###io/trino/operator/TaskContext
@351
+#createTaskContext(Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Ljava/lang/Runnable;ZZLjava/util/OptionalInt;)Lio/trino/operator/TaskContext;
+#getTaskId()Lio/trino/execution/TaskId;
+#getTotalPartitions()Ljava/util/OptionalInt;
+#addPipelineContext(IZZZ)Lio/trino/operator/PipelineContext;
+#getSession()Lio/trino/Session;
+#start()V
+#failed(Ljava/lang/Throwable;)V
+#isDone()Z
+#getState()Lio/trino/execution/TaskState;
+#getMemoryReservation()Lio/airlift/units/DataSize;
+#getSystemMemoryReservation()Lio/airlift/units/DataSize;
+#getRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getCompletedDriverGroups()Ljava/util/Set;
+#addCompletedDriverGroup(Lio/trino/execution/Lifespan;)V
+#getPipelineContexts()Ljava/util/List;
+#reserveSpill(J)Lcom/google/common/util/concurrent/ListenableFuture;
+#freeSpill(J)V
+#localSystemMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
+#moreMemoryAvailable()V
+#isPerOperatorCpuTimerEnabled()Z
+#isCpuTimerEnabled()Z
+#getProcessedInputDataSize()Lio/airlift/stats/CounterStat;
+#getInputPositions()Lio/airlift/stats/CounterStat;
+#getOutputDataSize()Lio/airlift/stats/CounterStat;
+#getOutputPositions()Lio/airlift/stats/CounterStat;
+#getFullGcTime()Lio/airlift/units/Duration;
+#getFullGcCount()I
+#updateDomains(Ljava/util/Map;)V
+#getDynamicFiltersVersion()J
+#acknowledgeAndGetNewDynamicFilterDomains(J)Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;
+#getTaskStats()Lio/trino/operator/TaskStats;
+#accept(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#acceptChildren(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/util/List;
+#getTaskMemoryContext()Lio/trino/memory/context/MemoryTrackingContext;
+#getQueryContext()Lio/trino/memory/QueryContext;
@360
+#getLocalDynamicFiltersCollector()Lio/trino/sql/planner/LocalDynamicFiltersCollector;
+#addDynamicFilter(Ljava/util/Map;)V
@362
+#createTaskContext(Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Ljava/lang/Runnable;ZZ)Lio/trino/operator/TaskContext;
-#createTaskContext(Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Ljava/lang/Runnable;ZZLjava/util/OptionalInt;)Lio/trino/operator/TaskContext;
-#getTotalPartitions()Ljava/util/OptionalInt;
@366
+#sourceTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@368
+#createTaskContext(Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Ljava/lang/Runnable;ZZLjava/util/Optional;)Lio/trino/operator/TaskContext;
-#createTaskContext(Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Ljava/lang/Runnable;ZZ)Lio/trino/operator/TaskContext;
-#moreMemoryAvailable()V
@369
+#localMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
-#getSystemMemoryReservation()Lio/airlift/units/DataSize;
-#localSystemMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
@374
+#createTaskContext(Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Ljava/lang/Runnable;ZZ)Lio/trino/operator/TaskContext;
-#createTaskContext(Lio/trino/memory/QueryContext;Lio/trino/execution/TaskStateMachine;Lio/airlift/stats/GcMonitor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Ljava/lang/Runnable;ZZLjava/util/Optional;)Lio/trino/operator/TaskContext;
@388
-#getCompletedDriverGroups()Ljava/util/Set;
-#addCompletedDriverGroup(Lio/trino/execution/Lifespan;)V
@392
+#getCurrentDynamicFilterDomains()Lio/trino/execution/DynamicFiltersCollector$VersionedDynamicFilterDomains;
@395
+#getPhysicalWrittenDataSize()J
@398
+#getPeakMemoryReservation()Lio/airlift/units/DataSize;
@406
+#newAggregateMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
+#setMaxWriterCount(I)V
+#getMaxWriterCount()Ljava/util/Optional;

+###io/trino/operator/OrderByOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLjava/util/Optional;Lio/trino/sql/gen/OrderingCompiler;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#close()V

+###io/trino/operator/GroupByIdBlock
@351
+#<init>(JLio/trino/spi/block/Block;)V
+#getGroupCount()J
+#getGroupId(I)J
+#getRegion(II)Lio/trino/spi/block/Block;
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getSliceLength(I)I
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#equals(IILio/trino/spi/block/Block;III)Z
+#hash(III)J
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#isNull(I)Z
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getEncodingName()Ljava/lang/String;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#toString()Ljava/lang/String;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
+#getChildren()Ljava/util/List;
@360
+#mayHaveNull()Z
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/operator/ForExchange
@351

+###io/trino/operator/GroupIdOperator$GroupIdOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/StandardJoinFilterFunction
@351
+#<init>(Lio/trino/operator/InternalJoinFilterFunction;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;)V
+#filter(IILio/trino/spi/Page;)Z
@358
-###io/trino/operator/StandardJoinFilterFunction

+###io/trino/operator/ValuesOperator$ValuesOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/PartitionedOutputOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#getInfo()Lio/trino/operator/PartitionedOutputOperator$PartitionedOutputInfo;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
@359
-#getInfo()Lio/trino/operator/PartitionedOutputOperator$PartitionedOutputInfo;
@360
-###io/trino/operator/PartitionedOutputOperator

+###io/trino/operator/TableScanWorkProcessorOperator
@351
+#<init>(Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/operator/WorkProcessor;Lio/trino/split/PageSourceProvider;Lio/trino/metadata/TableHandle;Ljava/lang/Iterable;Lio/trino/spi/connector/DynamicFilter;)V
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#getUpdatablePageSourceSupplier()Ljava/util/function/Supplier;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getInputDataSize()Lio/airlift/units/DataSize;
+#getInputPositions()J
+#getDynamicFilterSplitsProcessed()J
+#getReadTime()Lio/airlift/units/Duration;
+#close()V
@360
+#getConnectorMetrics()Lio/trino/spi/metrics/Metrics;
@406
-#getUpdatablePageSourceSupplier()Ljava/util/function/Supplier;

+###io/trino/operator/TableFinishOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/TableFinishOperator$TableFinisher;Lio/trino/operator/Operator;Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;Z)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V
@364
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/TableFinishOperator$TableFinisher;Lio/trino/operator/Operator;Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;ZLio/trino/execution/TableExecuteContext;Z)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/TableFinishOperator$TableFinisher;Lio/trino/operator/Operator;Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;Z)V

+###io/trino/operator/LookupSource
@351
+#getChannelCount()I
+#getInMemorySizeInBytes()J
+#getJoinPositionCount()J
+#joinPositionWithinPartition(J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#isEmpty()Z
+#close()V
@358
-###io/trino/operator/LookupSource

+###io/trino/operator/ProcessorContext
@351
+#<init>(Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/operator/OperatorContext;)V
+#getSession()Lio/trino/Session;
+#getMemoryTrackingContext()Lio/trino/memory/context/MemoryTrackingContext;
+#getDriverYieldSignal()Lio/trino/operator/DriverYieldSignal;
+#getLifespan()Lio/trino/execution/Lifespan;
+#getSpillContext()Lio/trino/operator/SpillContext;
+#getTaskId()Lio/trino/execution/TaskId;
@388
-#getLifespan()Lio/trino/execution/Lifespan;

+###io/trino/operator/MultiChannelGroupByHash
@351
+#<init>(Ljava/util/List;[ILjava/util/Optional;IZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/operator/UpdateMemory;)V
+#getRawHash(I)J
+#getEstimatedSize()J
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#getTypes()Ljava/util/List;
+#getGroupCount()I
+#appendValuesTo(ILio/trino/spi/PageBuilder;I)V
+#addPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#getGroupIds(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#contains(ILio/trino/spi/Page;[I)Z
+#contains(ILio/trino/spi/Page;[IJ)Z
+#getCapacity()I
@376
+#appendValuesTo(ILio/trino/spi/PageBuilder;)V
-#appendValuesTo(ILio/trino/spi/PageBuilder;I)V
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D

+###io/trino/operator/PartitionedConsumption
@351
@358
-###io/trino/operator/PartitionedConsumption

+###io/trino/operator/SetBuilderOperator$SetBuilderOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/spi/type/Type;ILjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#getSetProvider()Lio/trino/operator/SetBuilderOperator$SetSupplier;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/DistinctLimitOperator$DistinctLimitOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;JLjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/SyntheticAddress
@351
+#encodeSyntheticAddress(II)J
+#decodeSliceIndex(J)I
+#decodePosition(J)I

+###io/trino/operator/BasicWorkProcessorOperatorAdapter$BasicAdapterWorkProcessorOperatorFactory
@351
+#createAdapterOperator(Lio/trino/operator/ProcessorContext;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorOperator;
+#duplicate()Lio/trino/operator/BasicWorkProcessorOperatorAdapter$BasicAdapterWorkProcessorOperatorFactory;

+###io/trino/operator/SetBuilderOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/SetBuilderOperator$SetSupplier;ILjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#getCapacity()I

+###io/trino/operator/GroupedTopNRowNumberBuilder
@352
+#<init>(Ljava/util/List;Lio/trino/operator/PageWithPositionComparator;IZLio/trino/operator/GroupByHash;)V
+#processPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#buildResult()Ljava/util/Iterator;
+#getEstimatedSizeInBytes()J

+###io/trino/operator/BucketPartitionFunction
@351
+#<init>(Lio/trino/spi/connector/BucketFunction;[I)V
+#getPartitionCount()I
+#getPartition(Lio/trino/spi/Page;I)I

+###io/trino/operator/TableScanOperator$TableScanOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSourceProvider;Lio/trino/metadata/TableHandle;Ljava/lang/Iterable;Lio/trino/spi/connector/DynamicFilter;)V
+#getOperatorId()I
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SourceOperator;
+#create(Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/operator/DriverYieldSignal;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorSourceOperator;
+#noMoreOperators()V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;

+###io/trino/operator/WorkProcessorSourceOperator
@351
+#getUpdatablePageSourceSupplier()Ljava/util/function/Supplier;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getInternalNetworkPositions()J
+#getInputDataSize()Lio/airlift/units/DataSize;
+#getInputPositions()J
+#getReadTime()Lio/airlift/units/Duration;
+#getDynamicFilterSplitsProcessed()J
@360
+#getConnectorMetrics()Lio/trino/spi/metrics/Metrics;
@406
-#getUpdatablePageSourceSupplier()Ljava/util/function/Supplier;

+###io/trino/operator/LookupSourceProvider
@351
+#withLease(Ljava/util/function/Function;)Ljava/lang/Object;
+#close()V
@358
-###io/trino/operator/LookupSourceProvider

+###io/trino/operator/DynamicFilterSourceOperator$Channel
@351
+#<init>(Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;I)V

+###io/trino/operator/PositionLinks$FactoryBuilder
@351
+#link(II)I
+#build()Lio/trino/operator/PositionLinks$Factory;
+#size()I
+#isEmpty()Z
@358
-###io/trino/operator/PositionLinks$FactoryBuilder

+###io/trino/operator/PartitionedLookupSource
@351
+#createPartitionedLookupSourceSupplier(Ljava/util/List;Ljava/util/List;ZLio/trino/type/BlockTypeOperators;)Lio/trino/operator/TrackingLookupSourceSupplier;
+#isEmpty()Z
+#getChannelCount()I
+#getJoinPositionCount()J
+#getInMemorySizeInBytes()J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#joinPositionWithinPartition(J)J
+#close()V
@358
-###io/trino/operator/PartitionedLookupSource

+###io/trino/operator/WorkProcessorPipelineSourceOperator$WorkProcessorPipelineSourceOperatorFactory
@351
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SourceOperator;
+#noMoreOperators()V
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
@388
-#noMoreOperators(Lio/trino/execution/Lifespan;)V

+###io/trino/operator/TableFinishInfo
@351
+#<init>(Ljava/util/Optional;Lio/airlift/units/Duration;Lio/airlift/units/Duration;)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;ZLio/airlift/units/Duration;Lio/airlift/units/Duration;)V
+#getConnectorOutputMetadata()Ljava/lang/String;
+#isJsonLengthLimitExceeded()Z
+#getStatisticsWallTime()Lio/airlift/units/Duration;
+#getStatisticsCpuTime()Lio/airlift/units/Duration;
+#isFinal()Z

+###io/trino/operator/PagesSpatialIndexSupplier
@351
+#<init>(Lio/trino/Session;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/util/Optional;Ljava/util/Optional;Lio/trino/operator/SpatialIndexBuilderOperator$SpatialPredicate;Ljava/util/Optional;Ljava/util/Map;)V
+#getEstimatedSize()Lio/airlift/units/DataSize;
+#get()Lio/trino/operator/PagesSpatialIndex;
+#get()Ljava/lang/Object;

+###io/trino/operator/unnest/UnnestOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ZZ)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
@390
+#ensureCapacity([IIZ)[I
+#ensureCapacity([ZIZ)[Z

+###io/trino/operator/unnest/UnnestOperator$UnnestOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ZZ)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/HashBuilderOperator$State
@351
+#values()[Lio/trino/operator/HashBuilderOperator$State;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/HashBuilderOperator$State;
@358
-###io/trino/operator/HashBuilderOperator$State

+###io/trino/operator/JoinBridge
@351
+#getOuterPositionIterator()Lio/trino/operator/OuterPositionIterator;
+#destroy()V
+#whenBuildFinishes()Lcom/google/common/util/concurrent/ListenableFuture;
@358
-###io/trino/operator/JoinBridge

+###io/trino/operator/ExchangeClientStatus
@351
+#<init>(JJJJIZLjava/util/List;)V
+#getBufferedBytes()J
+#getMaxBufferedBytes()J
+#getAverageBytesPerRequest()J
+#getSuccessfulRequestsCount()J
+#getBufferedPages()I
+#isNoMoreLocations()Z
+#getPageBufferClientStatuses()Ljava/util/List;
+#isFinal()Z
+#toString()Ljava/lang/String;
+#mergeWith(Lio/trino/operator/ExchangeClientStatus;)Lio/trino/operator/ExchangeClientStatus;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@369
-###io/trino/operator/ExchangeClientStatus

+###io/trino/operator/TrackingLookupSourceSupplier
@351
+#getLookupSource()Lio/trino/operator/LookupSource;
+#getOuterPositionIterator()Lio/trino/operator/OuterPositionIterator;
+#nonTracking(Ljava/util/function/Supplier;)Lio/trino/operator/TrackingLookupSourceSupplier;
@358
-###io/trino/operator/TrackingLookupSourceSupplier

+###io/trino/operator/WorkProcessorOperator
@351
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#getOperatorInfo()Ljava/util/Optional;
+#close()V
@362
+#getMetrics()Lio/trino/spi/metrics/Metrics;

+###io/trino/operator/Operator
@351
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#finish()V
+#isFinished()Z
+#close()V

+###io/trino/operator/RowNumberOperator$RowNumberOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/PipelineExecutionStrategy
@351
+#values()[Lio/trino/operator/PipelineExecutionStrategy;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/PipelineExecutionStrategy;
@388
-###io/trino/operator/PipelineExecutionStrategy

+###io/trino/operator/NestedLoopJoinBridge
@351
+#getPagesFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#setPages(Lio/trino/operator/NestedLoopJoinPages;)Lcom/google/common/util/concurrent/ListenableFuture;
+#destroy()V
+#getOuterPositionIterator()Lio/trino/operator/OuterPositionIterator;
+#whenBuildFinishes()Lcom/google/common/util/concurrent/ListenableFuture;
@358
-###io/trino/operator/NestedLoopJoinBridge

+###io/trino/operator/NestedLoopJoinOperator
@351
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V
@358
-###io/trino/operator/NestedLoopJoinOperator

+###io/trino/operator/TaskOutputOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/execution/buffer/OutputBuffer;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
@360
-###io/trino/operator/TaskOutputOperator

+###io/trino/operator/LookupJoinOperator$SavedRow
@351
+#<init>(Lio/trino/spi/Page;IJZI)V
@358
-###io/trino/operator/LookupJoinOperator$SavedRow

+###io/trino/operator/TableFinishOperator$TableFinishOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/TableFinishOperator$TableFinisher;Lio/trino/operator/OperatorFactory;Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;Lio/trino/Session;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@364
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/TableFinishOperator$TableFinisher;Lio/trino/operator/OperatorFactory;Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;Lio/trino/execution/TableExecuteContextManager;ZLio/trino/Session;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/TableFinishOperator$TableFinisher;Lio/trino/operator/OperatorFactory;Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;Lio/trino/Session;)V

+###io/trino/operator/SourceOperatorFactory
@351
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SourceOperator;
+#duplicate()Lio/trino/operator/OperatorFactory;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;

+###io/trino/operator/PagesIndex$Factory
@351
+#newPagesIndex(Ljava/util/List;I)Lio/trino/operator/PagesIndex;

+###io/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperatorFactory
@351
+#createAdapterOperator(Lio/trino/operator/ProcessorContext;)Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperator;
+#duplicate()Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperatorFactory;

+###io/trino/operator/HashBuilderOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/PartitionedLookupSourceFactory;ILjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SingleStreamSpillerFactory;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#getState()Lio/trino/operator/HashBuilderOperator$State;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z
+#close()V
@358
-###io/trino/operator/HashBuilderOperator

+###io/trino/operator/DynamicFilterSourceOperator
@351
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z
@407
+#close()V

+###io/trino/operator/PageSourceOperator
@351
+#<init>(Lio/trino/spi/connector/ConnectorPageSource;Lio/trino/operator/OperatorContext;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V

+###io/trino/operator/NoChannelGroupByHash
@351
+#<init>()V
+#getEstimatedSize()J
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#getTypes()Ljava/util/List;
+#getGroupCount()I
+#appendValuesTo(ILio/trino/spi/PageBuilder;I)V
+#addPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#getGroupIds(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#contains(ILio/trino/spi/Page;[I)Z
+#getRawHash(I)J
+#getCapacity()I
@376
+#appendValuesTo(ILio/trino/spi/PageBuilder;)V
-#appendValuesTo(ILio/trino/spi/PageBuilder;I)V
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D

+###io/trino/operator/PagesIndex$DefaultFactory
@351
+#<init>(Lio/trino/sql/gen/OrderingCompiler;Lio/trino/sql/gen/JoinCompiler;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/type/BlockTypeOperators;)V
+#newPagesIndex(Ljava/util/List;I)Lio/trino/operator/PagesIndex;
@365
+#<init>(Lio/trino/sql/gen/OrderingCompiler;Lio/trino/sql/gen/JoinCompiler;Lio/trino/FeaturesConfig;Lio/trino/type/BlockTypeOperators;)V
-#<init>(Lio/trino/sql/gen/OrderingCompiler;Lio/trino/sql/gen/JoinCompiler;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/type/BlockTypeOperators;)V

+###io/trino/operator/Work
@351
+#process()Z
+#getResult()Ljava/lang/Object;

+###io/trino/operator/MarkDistinctOperator$MarkDistinctOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/Collection;Ljava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/ForScheduler
@351

+###io/trino/operator/LookupSourceFactory
@351
+#getTypes()Ljava/util/List;
+#getOutputTypes()Ljava/util/List;
+#createLookupSourceProvider()Lcom/google/common/util/concurrent/ListenableFuture;
+#partitions()I
+#finishProbeOperator(Ljava/util/OptionalInt;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getOuterPositionIterator()Lio/trino/operator/OuterPositionIterator;
+#setTaskContext(Lio/trino/operator/TaskContext;)V
+#destroy()V
+#isDestroyed()Lcom/google/common/util/concurrent/ListenableFuture;
@358
-###io/trino/operator/LookupSourceFactory

+###io/trino/operator/LookupJoinOperator$SpillInfoSnapshot
@351
+#<init>(JLjava/util/function/IntPredicate;)V
+#from(Lio/trino/operator/LookupSourceProvider$LookupSourceLease;)Lio/trino/operator/LookupJoinOperator$SpillInfoSnapshot;
+#getSpillEpoch()J
+#getSpillMask()Ljava/util/function/IntPredicate;
@358
-###io/trino/operator/LookupJoinOperator$SpillInfoSnapshot

+###io/trino/operator/RowIdComparisonHashStrategy
@352
+#equals(JJ)Z

+###io/trino/operator/JoinBridgeManager
@351
+#lookupAllAtOnce(Lio/trino/operator/PartitionedLookupSourceFactory;)Lio/trino/operator/JoinBridgeManager;
+#<init>(ZLio/trino/operator/PipelineExecutionStrategy;Lio/trino/operator/PipelineExecutionStrategy;Ljava/util/function/Function;Ljava/util/List;)V
+#getBuildOutputTypes()Ljava/util/List;
+#getBuildExecutionStrategy()Lio/trino/operator/PipelineExecutionStrategy;
+#incrementProbeFactoryCount()V
+#getJoinBridge(Lio/trino/execution/Lifespan;)Lio/trino/operator/JoinBridge;
+#probeOperatorFactoryClosedForAllLifespans()V
+#probeOperatorFactoryClosed(Lio/trino/execution/Lifespan;)V
+#probeOperatorCreated(Lio/trino/execution/Lifespan;)V
+#probeOperatorClosed(Lio/trino/execution/Lifespan;)V
+#outerOperatorFactoryClosed(Lio/trino/execution/Lifespan;)V
+#outerOperatorCreated(Lio/trino/execution/Lifespan;)V
+#outerOperatorClosed(Lio/trino/execution/Lifespan;)V
+#getOuterPositionsFuture(Lio/trino/execution/Lifespan;)Lcom/google/common/util/concurrent/ListenableFuture;
@358
-###io/trino/operator/JoinBridgeManager

+###io/trino/operator/WorkProcessor$Transformation
@351
+#process(Ljava/lang/Object;)Lio/trino/operator/WorkProcessor$TransformationState;

+###io/trino/operator/JoinProbe$JoinProbeFactory
@351
+#<init>([ILjava/util/List;Ljava/util/OptionalInt;)V
+#createJoinProbe(Lio/trino/spi/Page;)Lio/trino/operator/JoinProbe;
@358
-###io/trino/operator/JoinProbe$JoinProbeFactory

+###io/trino/operator/WorkProcessorUtils
@351

+###io/trino/operator/FilterAndProjectOperator
@351
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/function/Supplier;Ljava/util/List;Lio/airlift/units/DataSize;I)Lio/trino/operator/OperatorFactory;
@398
+#getMetrics()Lio/trino/spi/metrics/Metrics;

+###io/trino/operator/PartitionedLookupSource$OuterPositionTracker$Factory
@351
+#<init>(Ljava/util/List;)V
+#create()Lio/trino/operator/PartitionedLookupSource$OuterPositionTracker;
+#getOuterPositionIterator()Lio/trino/operator/OuterPositionIterator;
@358
-###io/trino/operator/PartitionedLookupSource$OuterPositionTracker$Factory

+###io/trino/operator/SpatialJoinOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/SpatialJoinNode$Type;Ljava/util/List;Ljava/util/List;ILjava/util/Optional;Lio/trino/operator/PagesSpatialIndexFactory;Ljava/lang/Runnable;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z
+#close()V

+###io/trino/operator/HashCollisionsCounter
@351
+#<init>(Lio/trino/operator/OperatorContext;)V
+#recordHashCollision(JD)V
+#get()Lio/trino/operator/HashCollisionsInfo;
+#get()Ljava/lang/Object;
@405
-###io/trino/operator/HashCollisionsCounter

+###io/trino/operator/TopNPeerGroupLookup
@352
+#<init>(JFLio/trino/operator/RowIdHashStrategy;JJ)V
+#<init>(JLio/trino/operator/RowIdHashStrategy;JJ)V
+#sizeOf()J
+#size()J
+#isEmpty()Z
+#get(JJ)J
+#get(JLio/trino/operator/RowReference;)J
+#put(JJJ)J
+#remove(JJ)J

+###io/trino/operator/RowReferencePageManager$LoadCursor
@351
+#advance()Z
+#compareTo(Lit/unimi/dsi/fastutil/longs/LongComparator;J)I
+#allocateRowId()J
+#close()V
@352
+#compareTo(Lio/trino/operator/RowIdComparisonStrategy;J)I
+#equals(Lio/trino/operator/RowIdHashStrategy;J)Z
+#hash(Lio/trino/operator/RowIdHashStrategy;)J
-#compareTo(Lit/unimi/dsi/fastutil/longs/LongComparator;J)I

+###io/trino/operator/HashAggregationOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ZLjava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;ZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Z)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#getOutput()Lio/trino/spi/Page;
+#close()V
+#getAggregationBuilder()Lio/trino/operator/aggregation/builder/HashAggregationBuilder;
@367
-#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;ZLjava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/Optional;ZLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Z)V

+###io/trino/operator/LookupJoinPageBuilder
@351
+#<init>(Ljava/util/List;)V
+#isFull()Z
+#isEmpty()Z
+#reset()V
+#appendRow(Lio/trino/operator/JoinProbe;Lio/trino/operator/LookupSource;J)V
+#appendNullForBuild(Lio/trino/operator/JoinProbe;)V
+#build(Lio/trino/operator/JoinProbe;)Lio/trino/spi/Page;
+#toString()Ljava/lang/String;
@358
-###io/trino/operator/LookupJoinPageBuilder

+###io/trino/operator/LocalPlannerAware
@351
+#localPlannerComplete()V

+###io/trino/operator/BasicWorkProcessorOperatorAdapter
@351
+#createAdapterOperatorFactory(Lio/trino/operator/BasicWorkProcessorOperatorAdapter$BasicAdapterWorkProcessorOperatorFactory;)Lio/trino/operator/OperatorFactory;
+#finish()V
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#getOperatorInfo()Ljava/util/Optional;
+#close()V
@398
+#getMetrics()Lio/trino/spi/metrics/Metrics;

+###io/trino/operator/DriverFactory
@351
+#<init>(IZZLjava/util/List;Ljava/util/OptionalInt;Lio/trino/operator/PipelineExecutionStrategy;)V
+#getPipelineId()I
+#isInputDriver()Z
+#isOutputDriver()Z
+#getSourceId()Ljava/util/Optional;
+#getDriverInstances()Ljava/util/OptionalInt;
+#getPipelineExecutionStrategy()Lio/trino/operator/PipelineExecutionStrategy;
+#getOperatorFactories()Ljava/util/List;
+#createDriver(Lio/trino/operator/DriverContext;)Lio/trino/operator/Driver;
+#noMoreDrivers(Lio/trino/execution/Lifespan;)V
+#noMoreDrivers()V
@388
+#<init>(IZZLjava/util/List;Ljava/util/OptionalInt;)V
-#<init>(IZZLjava/util/List;Ljava/util/OptionalInt;Lio/trino/operator/PipelineExecutionStrategy;)V
-#getPipelineExecutionStrategy()Lio/trino/operator/PipelineExecutionStrategy;
-#noMoreDrivers(Lio/trino/execution/Lifespan;)V
@395
+#isNoMoreDrivers()Z

+###io/trino/operator/ChannelSet$ChannelSetBuilder
@351
+#<init>(Lio/trino/spi/type/Type;Ljava/util/Optional;ILio/trino/operator/OperatorContext;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#build()Lio/trino/operator/ChannelSet;
+#getEstimatedSize()J
+#size()I
+#addPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#updateMemoryReservation()Z
+#getCapacity()I

+###io/trino/operator/TableWriterOperator$TableWriterInfo
@351
+#<init>(JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;)V
+#getPageSinkPeakMemoryUsage()J
+#getStatisticsWallTime()Lio/airlift/units/Duration;
+#getStatisticsCpuTime()Lio/airlift/units/Duration;
+#getValidationCpuTime()Lio/airlift/units/Duration;
+#mergeWith(Lio/trino/operator/TableWriterOperator$TableWriterInfo;)Lio/trino/operator/TableWriterOperator$TableWriterInfo;
+#isFinal()Z
+#toString()Ljava/lang/String;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/operator/ParametricFunctionHelpers
@351
+#bindDependencies(Ljava/lang/invoke/MethodHandle;Ljava/util/List;Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/invoke/MethodHandle;
@364
+#signatureWithName(Ljava/lang/String;Lio/trino/metadata/Signature;)Lio/trino/metadata/Signature;
@379
-#signatureWithName(Ljava/lang/String;Lio/trino/metadata/Signature;)Lio/trino/metadata/Signature;
@395
+#bindDependencies(Ljava/lang/invoke/MethodHandle;Ljava/util/List;Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionDependencies;)Ljava/lang/invoke/MethodHandle;
-#bindDependencies(Ljava/lang/invoke/MethodHandle;Ljava/util/List;Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/invoke/MethodHandle;

+###io/trino/operator/TableDeleteOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/TableFinishOperator$TableFinisher
@351
+#finishTable(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
@364
+#finishTable(Ljava/util/Collection;Ljava/util/Collection;Lio/trino/execution/TableExecuteContext;)Ljava/util/Optional;
-#finishTable(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;

+###io/trino/operator/UpdateOperator
@352
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;)V
+#addInput(Lio/trino/spi/Page;)V
@406
-###io/trino/operator/UpdateOperator

+###io/trino/operator/DynamicFilterSourceOperator$DynamicFilterSourceOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/function/Consumer;Ljava/util/List;ILio/airlift/units/DataSize;ILio/trino/type/BlockTypeOperators;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@383
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/DynamicFilterSourceConsumer;Ljava/util/List;ILio/airlift/units/DataSize;ILio/trino/type/BlockTypeOperators;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/function/Consumer;Ljava/util/List;ILio/airlift/units/DataSize;ILio/trino/type/BlockTypeOperators;)V

+###io/trino/operator/LookupJoinOperators
@351
+#<init>()V
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@352
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@356
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;ZZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@358
-###io/trino/operator/LookupJoinOperators

+###io/trino/operator/HashCollisionsInfo
@351
+#createHashCollisionsInfo(JDD)Lio/trino/operator/HashCollisionsInfo;
+#<init>(DDD)V
+#getWeightedSumSquaredHashCollisions()D
+#getWeightedHashCollisions()D
+#getWeightedExpectedHashCollisions()D
+#mergeWith(Lio/trino/operator/HashCollisionsInfo;)Lio/trino/operator/HashCollisionsInfo;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@405
-###io/trino/operator/HashCollisionsInfo

+###io/trino/operator/HashSemiJoinOperator
@351
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/SetBuilderOperator$SetSupplier;Ljava/util/List;ILjava/util/Optional;)Lio/trino/operator/OperatorFactory;
+#getOutputPages()Lio/trino/operator/WorkProcessor;

+###io/trino/operator/NestedLoopBuildOperator$NestedLoopBuildOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@358
-###io/trino/operator/NestedLoopBuildOperator$NestedLoopBuildOperatorFactory

+###io/trino/operator/OperatorStats
@351
+#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V
+#getStageId()I
+#getPipelineId()I
+#getOperatorId()I
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#getTotalDrivers()J
+#getAddInputCalls()J
+#getAddInputWall()Lio/airlift/units/Duration;
+#getAddInputCpu()Lio/airlift/units/Duration;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getInternalNetworkInputPositions()J
+#getRawInputDataSize()Lio/airlift/units/DataSize;
+#getInputDataSize()Lio/airlift/units/DataSize;
+#getInputPositions()J
+#getSumSquaredInputPositions()D
+#getGetOutputCalls()J
+#getGetOutputWall()Lio/airlift/units/Duration;
+#getGetOutputCpu()Lio/airlift/units/Duration;
+#getOutputDataSize()Lio/airlift/units/DataSize;
+#getOutputPositions()J
+#getDynamicFilterSplitsProcessed()J
+#getPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
+#getBlockedWall()Lio/airlift/units/Duration;
+#getFinishCalls()J
+#getFinishWall()Lio/airlift/units/Duration;
+#getFinishCpu()Lio/airlift/units/Duration;
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getSystemMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakUserMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakSystemMemoryReservation()Lio/airlift/units/DataSize;
+#getPeakTotalMemoryReservation()Lio/airlift/units/DataSize;
+#getSpilledDataSize()Lio/airlift/units/DataSize;
+#getBlockedReason()Ljava/util/Optional;
+#getInfo()Lio/trino/operator/OperatorInfo;
+#add([Lio/trino/operator/OperatorStats;)Lio/trino/operator/OperatorStats;
+#add(Ljava/lang/Iterable;)Lio/trino/operator/OperatorStats;
+#summarize()Lio/trino/operator/OperatorStats;
@360
+#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/trino/spi/metrics/Metrics;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V
+#getMetrics()Lio/trino/spi/metrics/Metrics;
-#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V
@362
+#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/trino/spi/metrics/Metrics;Lio/trino/spi/metrics/Metrics;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V
+#getConnectorMetrics()Lio/trino/spi/metrics/Metrics;
-#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/trino/spi/metrics/Metrics;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V
@365
+#add(Lio/trino/operator/OperatorStats;)Lio/trino/operator/OperatorStats;
-#add([Lio/trino/operator/OperatorStats;)Lio/trino/operator/OperatorStats;
@369
+#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/trino/spi/metrics/Metrics;Lio/trino/spi/metrics/Metrics;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V
-#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/trino/spi/metrics/Metrics;Lio/trino/spi/metrics/Metrics;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V
-#getSystemMemoryReservation()Lio/airlift/units/DataSize;
-#getPeakSystemMemoryReservation()Lio/airlift/units/DataSize;
@379
+#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/trino/spi/metrics/Metrics;Lio/trino/spi/metrics/Metrics;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V
+#getPhysicalInputReadTime()Lio/airlift/units/Duration;
-#<init>(IIILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;JJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;JDJLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;JJLio/trino/spi/metrics/Metrics;Lio/trino/spi/metrics/Metrics;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;JLio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Optional;Lio/trino/operator/OperatorInfo;)V

+###io/trino/operator/PagesIndex
@351
+#getTypes()Ljava/util/List;
+#getPositionCount()I
+#getValueAddresses()Lit/unimi/dsi/fastutil/longs/LongArrayList;
+#getChannel(I)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;
+#clear()V
+#addPage(Lio/trino/spi/Page;)V
+#getEstimatedSize()Lio/airlift/units/DataSize;
+#compact()V
+#getType(I)Lio/trino/spi/type/Type;
+#swap(II)V
+#buildPage(I[ILio/trino/spi/PageBuilder;)I
+#appendTo(IILio/trino/spi/block/BlockBuilder;)V
+#isNull(II)Z
+#getBoolean(II)Z
+#getLong(II)J
+#getDouble(II)D
+#getSlice(II)Lio/airlift/slice/Slice;
+#getObject(II)Ljava/lang/Object;
+#getSingleValueBlock(II)Lio/trino/spi/block/Block;
+#sort(Ljava/util/List;Ljava/util/List;)V
+#sort(Ljava/util/List;Ljava/util/List;II)V
+#positionEqualsPosition(Lio/trino/operator/PagesHashStrategy;II)Z
+#positionEqualsRow(Lio/trino/operator/PagesHashStrategy;IILio/trino/spi/Page;)Z
+#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;)Ljava/util/function/Supplier;
+#createPagesHashStrategy(Ljava/util/List;Ljava/util/OptionalInt;)Lio/trino/operator/PagesHashStrategy;
+#createPagesHashStrategy(Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;)Lio/trino/operator/PagesHashStrategy;
+#createChannelComparator(II)Lio/trino/operator/PagesIndexComparator;
+#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)Lio/trino/operator/LookupSourceSupplier;
+#createPagesSpatialIndex(Lio/trino/Session;ILjava/util/Optional;Ljava/util/Optional;Lio/trino/operator/SpatialIndexBuilderOperator$SpatialPredicate;Ljava/util/Optional;Ljava/util/List;Ljava/util/Map;)Lio/trino/operator/PagesSpatialIndexSupplier;
+#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;)Lio/trino/operator/LookupSourceSupplier;
+#toString()Ljava/lang/String;
+#getPages()Ljava/util/Iterator;
+#getSortedPages()Ljava/util/Iterator;
@352
+#positionNotDistinctFromPosition(Lio/trino/operator/PagesHashStrategy;II)Z
+#positionNotDistinctFromRow(Lio/trino/operator/PagesHashStrategy;IILio/trino/spi/Page;)Z
-#positionEqualsPosition(Lio/trino/operator/PagesHashStrategy;II)Z
-#positionEqualsRow(Lio/trino/operator/PagesHashStrategy;IILio/trino/spi/Page;)Z
@358
+#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)Lio/trino/operator/join/LookupSourceSupplier;
+#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;)Lio/trino/operator/join/LookupSourceSupplier;
-#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)Lio/trino/operator/LookupSourceSupplier;
-#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;)Lio/trino/operator/LookupSourceSupplier;
@365
+#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Lio/trino/operator/HashArraySizeSupplier;)Lio/trino/operator/join/LookupSourceSupplier;
-#createLookupSourceSupplier(Lio/trino/Session;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;)Lio/trino/operator/join/LookupSourceSupplier;
@367
+#getRawBlock(II)Lio/trino/spi/block/Block;
+#getRawBlockPosition(I)I
-#buildPage(I[ILio/trino/spi/PageBuilder;)I
-#createPagesHashStrategy(Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;)Lio/trino/operator/PagesHashStrategy;
@406
+#getEstimatedMemoryRequiredToCreateLookupSource(Lio/trino/operator/HashArraySizeSupplier;Ljava/util/Optional;Ljava/util/List;)J
@409
+#getSortedPages(II)Ljava/util/Iterator;

+###io/trino/operator/StageExecutionDescriptor
@351
+#ungroupedExecution()Lio/trino/operator/StageExecutionDescriptor;
+#fixedLifespanScheduleGroupedExecution(Ljava/util/List;)Lio/trino/operator/StageExecutionDescriptor;
+#dynamicLifespanScheduleGroupedExecution(Ljava/util/List;)Lio/trino/operator/StageExecutionDescriptor;
+#getStageExecutionStrategy()Lio/trino/operator/StageExecutionDescriptor$StageExecutionStrategy;
+#isStageGroupedExecution()Z
+#isDynamicLifespanSchedule()Z
+#isScanGroupedExecution(Lio/trino/sql/planner/plan/PlanNodeId;)Z
+#jsonCreator(Lio/trino/operator/StageExecutionDescriptor$StageExecutionStrategy;Ljava/util/Set;)Lio/trino/operator/StageExecutionDescriptor;
+#getJsonSerializableGroupedExecutionScanNodes()Ljava/util/Set;
@388
-###io/trino/operator/StageExecutionDescriptor

+###io/trino/operator/project/ConstantPageProjection
@351
+#<init>(Ljava/lang/Object;Lio/trino/spi/type/Type;)V
+#getType()Lio/trino/spi/type/Type;
+#isDeterministic()Z
+#getInputChannels()Lio/trino/operator/project/InputChannels;
+#project(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/spi/Page;Lio/trino/operator/project/SelectedPositions;)Lio/trino/operator/Work;

+###io/trino/operator/project/InputPageProjection
@351
+#<init>(ILio/trino/spi/type/Type;)V
+#getType()Lio/trino/spi/type/Type;
+#isDeterministic()Z
+#getInputChannels()Lio/trino/operator/project/InputChannels;
+#project(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/spi/Page;Lio/trino/operator/project/SelectedPositions;)Lio/trino/operator/Work;

+###io/trino/operator/project/CursorProcessorOutput
@351
+#<init>(IZ)V
+#getProcessedRows()I
+#isNoMoreRows()Z
+#toString()Ljava/lang/String;

+###io/trino/operator/project/PageFilter
@351
+#isDeterministic()Z
+#getInputChannels()Lio/trino/operator/project/InputChannels;
+#filter(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/Page;)Lio/trino/operator/project/SelectedPositions;
+#positionsArrayToSelectedPositions([ZI)Lio/trino/operator/project/SelectedPositions;

+###io/trino/operator/project/CursorProcessor
@351
+#process(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/spi/connector/RecordCursor;Lio/trino/spi/PageBuilder;)Lio/trino/operator/project/CursorProcessorOutput;

+###io/trino/operator/project/PageFieldsToInputParametersRewriter
@351
+#rewritePageFieldsToInputParameters(Lio/trino/sql/relational/RowExpression;)Lio/trino/operator/project/PageFieldsToInputParametersRewriter$Result;

+###io/trino/operator/project/DictionaryAwarePageFilter
@351
+#<init>(Lio/trino/operator/project/PageFilter;)V
+#isDeterministic()Z
+#getInputChannels()Lio/trino/operator/project/InputChannels;
+#filter(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/Page;)Lio/trino/operator/project/SelectedPositions;

+###io/trino/operator/project/MergePages
@351
+#mergePages(Ljava/lang/Iterable;JILio/trino/operator/WorkProcessor;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/WorkProcessor;
+#mergePages(Ljava/lang/Iterable;JIILio/trino/operator/WorkProcessor;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/WorkProcessor;

+###io/trino/operator/project/GeneratedPageProjection
@351
+#<init>(Lio/trino/sql/relational/RowExpression;ZLio/trino/operator/project/InputChannels;Ljava/lang/invoke/MethodHandle;)V
+#getType()Lio/trino/spi/type/Type;
+#isDeterministic()Z
+#getInputChannels()Lio/trino/operator/project/InputChannels;
+#project(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/spi/Page;Lio/trino/operator/project/SelectedPositions;)Lio/trino/operator/Work;
+#toString()Ljava/lang/String;

+###io/trino/operator/project/PageProjection
@351
+#getType()Lio/trino/spi/type/Type;
+#isDeterministic()Z
+#getInputChannels()Lio/trino/operator/project/InputChannels;
+#project(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/spi/Page;Lio/trino/operator/project/SelectedPositions;)Lio/trino/operator/Work;

+###io/trino/operator/project/SelectedPositions
@351
+#positionsList([III)Lio/trino/operator/project/SelectedPositions;
+#positionsRange(II)Lio/trino/operator/project/SelectedPositions;
+#isList()Z
+#isEmpty()Z
+#getPositions()[I
+#getOffset()I
+#size()I
+#subRange(II)Lio/trino/operator/project/SelectedPositions;

+###io/trino/operator/project/DictionaryAwarePageProjection
@351
+#<init>(Lio/trino/operator/project/PageProjection;Ljava/util/function/Function;Z)V
+#getType()Lio/trino/spi/type/Type;
+#isDeterministic()Z
+#getInputChannels()Lio/trino/operator/project/InputChannels;
+#project(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/spi/Page;Lio/trino/operator/project/SelectedPositions;)Lio/trino/operator/Work;

+###io/trino/operator/project/InputChannels
@351
+#<init>([I)V
+#<init>(Ljava/util/List;)V
+#size()I
+#getInputChannels()Ljava/util/List;
+#getInputChannels(Lio/trino/spi/Page;)Lio/trino/spi/Page;
+#toString()Ljava/lang/String;
@370
+#<init>(Ljava/util/List;Ljava/util/List;)V

+###io/trino/operator/project/PageProcessor
@351
+#<init>(Ljava/util/Optional;Ljava/util/List;Ljava/util/OptionalInt;)V
+#<init>(Ljava/util/Optional;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/sql/gen/ExpressionProfiler;)V
+#<init>(Ljava/util/Optional;Ljava/util/List;)V
+#process(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/spi/Page;)Ljava/util/Iterator;
+#process(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/spi/Page;Z)Ljava/util/Iterator;
+#createWorkProcessor(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/spi/Page;Z)Lio/trino/operator/WorkProcessor;
+#getProjections()Ljava/util/List;
@398
+#createWorkProcessor(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/operator/project/PageProcessorMetrics;Lio/trino/spi/Page;Z)Lio/trino/operator/WorkProcessor;
-#process(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/spi/Page;Z)Ljava/util/Iterator;
-#createWorkProcessor(Lio/trino/spi/connector/ConnectorSession;Lio/trino/operator/DriverYieldSignal;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/spi/Page;Z)Lio/trino/operator/WorkProcessor;

+###io/trino/operator/project/PageFieldsToInputParametersRewriter$Result
@351
+#<init>(Lio/trino/sql/relational/RowExpression;Lio/trino/operator/project/InputChannels;)V
+#getRewrittenExpression()Lio/trino/sql/relational/RowExpression;
+#getInputChannels()Lio/trino/operator/project/InputChannels;

+###io/trino/operator/TaskStats
@351
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;)V
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
+#getCreateTime()Lorg/joda/time/DateTime;
+#getFirstStartTime()Lorg/joda/time/DateTime;
+#getLastStartTime()Lorg/joda/time/DateTime;
+#getLastEndTime()Lorg/joda/time/DateTime;
+#getEndTime()Lorg/joda/time/DateTime;
+#getElapsedTime()Lio/airlift/units/Duration;
+#getQueuedTime()Lio/airlift/units/Duration;
+#getTotalDrivers()I
+#getQueuedDrivers()I
+#getRunningDrivers()I
+#getBlockedDrivers()I
+#getCompletedDrivers()I
+#getCumulativeUserMemory()D
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getSystemMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalScheduledTime()Lio/airlift/units/Duration;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalBlockedTime()Lio/airlift/units/Duration;
+#isFullyBlocked()Z
+#getBlockedReasons()Ljava/util/Set;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getPhysicalInputReadTime()Lio/airlift/units/Duration;
+#getInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getInternalNetworkInputPositions()J
+#getRawInputDataSize()Lio/airlift/units/DataSize;
+#getRawInputPositions()J
+#getProcessedInputDataSize()Lio/airlift/units/DataSize;
+#getProcessedInputPositions()J
+#getOutputDataSize()Lio/airlift/units/DataSize;
+#getOutputPositions()J
+#getPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
+#getPipelines()Ljava/util/List;
+#getQueuedPartitionedDrivers()I
+#getRunningPartitionedDrivers()I
+#getFullGcCount()I
+#getFullGcTime()Lio/airlift/units/Duration;
+#summarize()Lio/trino/operator/TaskStats;
+#summarizeFinal()Lio/trino/operator/TaskStats;
@360
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
+#getCumulativeSystemMemory()D
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
@364
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
+#getQueuedPartitionedSplitsWeight()J
+#getRunningPartitionedSplitsWeight()J
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIIIIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
@369
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
-#getCumulativeSystemMemory()D
-#getSystemMemoryReservation()Lio/airlift/units/DataSize;
@375
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
+#getPeakUserMemoryReservation()Lio/airlift/units/DataSize;
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
@376
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
+#getInputBlockedTime()Lio/airlift/units/Duration;
+#getOutputBlockedTime()Lio/airlift/units/Duration;
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V
@406
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljava/util/Optional;ILio/airlift/units/Duration;Ljava/util/List;)V
+#getMaxWriterCount()Ljava/util/Optional;
-#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;IIIJIIJIIDLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;Ljava/util/List;)V

+###io/trino/operator/Driver
@351
+#createDriver(Lio/trino/operator/DriverContext;Ljava/util/List;)Lio/trino/operator/Driver;
+#createDriver(Lio/trino/operator/DriverContext;Lio/trino/operator/Operator;[Lio/trino/operator/Operator;)Lio/trino/operator/Driver;
+#getDriverContext()Lio/trino/operator/DriverContext;
+#getSourceId()Ljava/util/Optional;
+#close()V
+#isFinished()Z
+#updateSource(Lio/trino/execution/TaskSource;)V
+#processFor(Lio/airlift/units/Duration;)Lcom/google/common/util/concurrent/ListenableFuture;
+#process()Lcom/google/common/util/concurrent/ListenableFuture;
@369
+#updateSplitAssignment(Lio/trino/execution/SplitAssignment;)V
-#updateSource(Lio/trino/execution/TaskSource;)V
@381
+#processForDuration(Lio/airlift/units/Duration;)Lcom/google/common/util/concurrent/ListenableFuture;
+#processForNumberOfIterations(I)Lcom/google/common/util/concurrent/ListenableFuture;
+#processUntilBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#process(Lio/airlift/units/Duration;I)Lcom/google/common/util/concurrent/ListenableFuture;
-#processFor(Lio/airlift/units/Duration;)Lcom/google/common/util/concurrent/ListenableFuture;
-#process()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/WorkProcessorSourceOperatorAdapter$AdapterWorkProcessorSourceOperatorFactory
@351
+#createAdapterOperator(Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/operator/DriverYieldSignal;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorSourceOperator;

+###io/trino/operator/annotations/CastImplementationDependency
@351
+#<init>(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;Lio/trino/spi/function/InvocationConvention;Ljava/lang/Class;)V
+#getFromType()Lio/trino/spi/type/TypeSignature;
+#getToType()Lio/trino/spi/type/TypeSignature;
+#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@395
+#declareDependencies(Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
-#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V

+###io/trino/operator/annotations/TypeImplementationDependency
@351
+#<init>(Ljava/lang/String;)V
+#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@383
+#<init>(Lio/trino/spi/type/TypeSignature;)V
+#getSignature()Lio/trino/spi/type/TypeSignature;
-#<init>(Ljava/lang/String;)V
@395
+#declareDependencies(Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionDependencies;)Ljava/lang/Object;
-#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
-#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/Object;

+###io/trino/operator/annotations/LiteralImplementationDependency
@351
+#<init>(Ljava/lang/String;)V
+#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/Object;
@395
+#declareDependencies(Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionDependencies;)Ljava/lang/Object;
-#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
-#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/Object;

+###io/trino/operator/annotations/ImplementationDependency$Factory
@351
+#createDependency(Ljava/lang/annotation/Annotation;Ljava/util/Set;Ljava/lang/Class;)Lio/trino/operator/annotations/ImplementationDependency;

+###io/trino/operator/annotations/ScalarImplementationDependency
@351
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@383
+#getInvocationConvention()Lio/trino/spi/function/InvocationConvention;
+#getType()Ljava/lang/Class;
@395
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionDependencies;)Ljava/lang/Object;
-#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/Object;

+###io/trino/operator/annotations/FunctionImplementationDependency
@351
+#<init>(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;Ljava/lang/Class;)V
+#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@383
+#getFullyQualifiedName()Lio/trino/sql/tree/QualifiedName;
+#getArgumentTypes()Ljava/util/List;
@395
+#<init>(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;Ljava/lang/Class;)V
+#getFullyQualifiedName()Lio/trino/spi/function/QualifiedFunctionName;
+#declareDependencies(Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
-#<init>(Lio/trino/sql/tree/QualifiedName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;Ljava/lang/Class;)V
-#getFullyQualifiedName()Lio/trino/sql/tree/QualifiedName;
-#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V

+###io/trino/operator/annotations/OperatorImplementationDependency
@351
+#<init>(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;Ljava/lang/Class;)V
+#getOperator()Lio/trino/spi/function/OperatorType;
+#getArgumentTypes()Ljava/util/List;
+#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@395
+#declareDependencies(Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
-#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V

+###io/trino/operator/annotations/FunctionsParserHelper
@351
+#containsAnnotation([Ljava/lang/annotation/Annotation;Ljava/util/function/Predicate;)Z
+#containsImplementationDependencyAnnotation([Ljava/lang/annotation/Annotation;)Z
+#createTypeVariableConstraints(Ljava/util/Collection;Ljava/util/List;)Ljava/util/List;
+#validateSignaturesCompatibility(Ljava/util/Optional;Lio/trino/metadata/Signature;)V
+#findPublicStaticMethodsWithAnnotation(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
+#findPublicMethodsWithAnnotation(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/util/Set;
+#findConstructor(Ljava/lang/Class;)Ljava/util/Optional;
+#parseLiteralParameters(Ljava/lang/reflect/Method;)Ljava/util/Set;
+#containsLegacyNullable([Ljava/lang/annotation/Annotation;)Z
+#isTrinoAnnotation(Ljava/lang/annotation/Annotation;)Z
+#parseDescription(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Optional;
+#parseDescription(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Optional;
+#parseLongVariableConstraints(Ljava/lang/reflect/Method;)Ljava/util/List;
+#getDeclaredSpecializedTypeParameters(Ljava/lang/reflect/Method;Ljava/util/Set;)Ljava/util/Map;
@379
+#parseLongVariableConstraints(Ljava/lang/reflect/Method;Lio/trino/metadata/Signature$Builder;)V
-#parseLongVariableConstraints(Ljava/lang/reflect/Method;)Ljava/util/List;
@395
+#validateSignaturesCompatibility(Ljava/util/Optional;Lio/trino/spi/function/Signature;)V
+#parseLongVariableConstraints(Ljava/lang/reflect/Method;Lio/trino/spi/function/Signature$Builder;)V
-#validateSignaturesCompatibility(Ljava/util/Optional;Lio/trino/metadata/Signature;)V
-#parseLongVariableConstraints(Ljava/lang/reflect/Method;Lio/trino/metadata/Signature$Builder;)V

+###io/trino/operator/annotations/ImplementationDependency
@351
+#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/Object;
+#isImplementationDependencyAnnotation(Ljava/lang/annotation/Annotation;)Z
+#getImplementationDependencyAnnotation(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Optional;
+#validateImplementationDependencyAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/annotation/Annotation;Ljava/util/Set;Ljava/util/Collection;)V
+#checkTypeParameters(Lio/trino/spi/type/TypeSignature;Ljava/util/Set;Ljava/lang/reflect/AnnotatedElement;)V
@395
+#declareDependencies(Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
+#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionDependencies;)Ljava/lang/Object;
-#declareDependencies(Lio/trino/metadata/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;)V
-#resolve(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/lang/Object;

+###io/trino/operator/WorkProcessorSourceOperatorAdapter
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/WorkProcessorSourceOperatorAdapter$AdapterWorkProcessorSourceOperatorFactory;)V
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;
+#noMoreSplits()V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z
+#close()V
@406
+#addSplit(Lio/trino/metadata/Split;)V
-#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;

+###io/trino/operator/TaskOutputOperator$TaskOutputOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/buffer/OutputBuffer;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@360
-###io/trino/operator/TaskOutputOperator$TaskOutputOperatorFactory

+###io/trino/operator/SimpleChannelComparator
@351
+#<init>(IILio/trino/type/BlockTypeOperators$BlockPositionComparison;)V
+#compareTo(Lio/trino/operator/PagesIndex;II)I

+###io/trino/operator/ArrayPositionLinks$FactoryBuilder
@351
+#link(II)I
+#build()Lio/trino/operator/PositionLinks$Factory;
+#size()I
@358
-###io/trino/operator/ArrayPositionLinks$FactoryBuilder

+###io/trino/operator/PageBuffer
@351
+#<init>()V
+#<init>(Lcom/google/common/util/concurrent/ListenableFuture;)V
+#pages()Lio/trino/operator/WorkProcessor;
+#isEmpty()Z
+#isFinished()Z
+#add(Lio/trino/spi/Page;)V
+#finish()V
@399
-#<init>(Lcom/google/common/util/concurrent/ListenableFuture;)V

+###io/trino/operator/StaticLookupSourceProvider
@351
+#<init>(Lio/trino/operator/LookupSource;)V
+#withLease(Ljava/util/function/Function;)Ljava/lang/Object;
+#close()V
@358
-###io/trino/operator/StaticLookupSourceProvider

+###io/trino/operator/PageWithPositionEqualsAndHash
@352
+#equals(Lio/trino/spi/Page;ILio/trino/spi/Page;I)Z
+#hashCode(Lio/trino/spi/Page;I)J

+###io/trino/operator/IdRegistry
@351
+#<init>()V
+#allocateId(Ljava/util/function/IntFunction;)I
+#deallocate(I)V
+#get(I)Ljava/lang/Object;
+#sizeOf()J

+###io/trino/operator/JoinOperatorFactory
@351
+#createOuterOperatorFactory()Ljava/util/Optional;
@358
-###io/trino/operator/JoinOperatorFactory

+###io/trino/operator/DevNullOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z

+###io/trino/operator/InterpretedHashGenerator
@351
+#<init>(Ljava/util/List;Ljava/util/List;Lio/trino/type/BlockTypeOperators;)V
+#<init>(Ljava/util/List;[ILio/trino/type/BlockTypeOperators;)V
+#hashPosition(ILio/trino/spi/Page;)J
+#hashPosition(ILjava/util/function/IntFunction;)J
+#toString()Ljava/lang/String;
@362
+#createPositionalWithTypes(Ljava/util/List;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/InterpretedHashGenerator;

+###io/trino/operator/ReferenceCount
@351
+#<init>(I)V
+#getFreeFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#retain()V
+#release()V

+###io/trino/operator/WorkProcessorPipelineSourceOperator
@351
+#convertOperators(ILjava/util/List;)Ljava/util/List;
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;
+#noMoreSplits()V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#close()V
@354
+#convertOperators(Ljava/util/List;)Ljava/util/List;
-#convertOperators(ILjava/util/List;)Ljava/util/List;
@356
+#convertOperators(Ljava/util/List;Lio/airlift/units/DataSize;I)Ljava/util/List;
+#toOperatorFactories(Ljava/util/List;)Ljava/util/List;
-#convertOperators(Ljava/util/List;)Ljava/util/List;
@406
+#addSplit(Lio/trino/metadata/Split;)V
-#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;

+###io/trino/operator/TableWriterOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/spi/connector/ConnectorPageSink;Ljava/util/List;Ljava/util/List;Lio/trino/operator/Operator;Ljava/util/List;Z)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V
@393
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/spi/connector/ConnectorPageSink;Ljava/util/List;Lio/trino/operator/Operator;Ljava/util/List;Z)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/spi/connector/ConnectorPageSink;Ljava/util/List;Ljava/util/List;Lio/trino/operator/Operator;Ljava/util/List;Z)V

+###io/trino/operator/SplitOperatorInfo
@351
+#<init>(Lio/trino/connector/CatalogName;Ljava/lang/Object;)V
+#isFinal()Z
+#getSplitInfo()Ljava/lang/Object;
+#getCatalogName()Lio/trino/connector/CatalogName;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/Object;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Ljava/lang/Object;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Object;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/Object;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/operator/RowIdHashStrategy
@352
+#equals(JJ)Z
+#hashCode(J)J

+###io/trino/operator/WorkProcessorOperatorAdapter
@351
+#createAdapterOperatorFactory(Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperatorFactory;)Lio/trino/operator/OperatorFactory;
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperatorFactory;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z
+#close()V

+###io/trino/operator/WindowOperator$WindowOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/OrderingCompiler;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@356
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/OrderingCompiler;Ljava/util/List;Lio/trino/operator/window/PartitionerSupplier;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/OrderingCompiler;)V

+###io/trino/operator/WindowOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/OrderingCompiler;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#close()V
@356
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/OrderingCompiler;Ljava/util/List;Lio/trino/operator/window/Partitioner;)V
-#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SpillerFactory;Lio/trino/sql/gen/OrderingCompiler;)V

+###io/trino/operator/SpatialIndexBuilderOperator$SpatialIndexBuilderOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;ILjava/util/Optional;Ljava/util/Optional;Lio/trino/operator/SpatialIndexBuilderOperator$SpatialPredicate;Ljava/util/Optional;Ljava/util/Optional;ILio/trino/operator/PagesIndex$Factory;)V
+#getPagesSpatialIndexFactory()Lio/trino/operator/PagesSpatialIndexFactory;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SpatialIndexBuilderOperator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;

+###io/trino/operator/HttpPageBufferClient
@351
+#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLjava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLjava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Lcom/google/common/base/Ticker;Ljava/util/concurrent/Executor;)V
+#getStatus()Lio/trino/operator/PageBufferClientStatus;
+#isRunning()Z
+#close()V
+#scheduleRequest()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@365
+#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLjava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLjava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Lcom/google/common/base/Ticker;Ljava/util/concurrent/Executor;)V
-#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLjava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;)V
-#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLjava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Lcom/google/common/base/Ticker;Ljava/util/concurrent/Executor;)V
@366
+#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLio/trino/execution/TaskId;Ljava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLio/trino/execution/TaskId;Ljava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Lcom/google/common/base/Ticker;Ljava/util/concurrent/Executor;)V
+#getRemoteTaskId()Lio/trino/execution/TaskId;
-#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLjava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Executor;)V
-#<init>(Ljava/lang/String;Lio/airlift/http/client/HttpClient;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;ZLjava/net/URI;Lio/trino/operator/HttpPageBufferClient$ClientCallback;Ljava/util/concurrent/ScheduledExecutorService;Lcom/google/common/base/Ticker;Ljava/util/concurrent/Executor;)V
@405
+#getAverageRequestSizeInBytes()J
@406
+#getLastRequestDurationMillis()J

+###io/trino/operator/StreamingAggregationOperator
@351
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Lio/trino/sql/gen/JoinCompiler;)Lio/trino/operator/OperatorFactory;
+#getOutputPages()Lio/trino/operator/WorkProcessor;
@369
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/gen/JoinCompiler;)Lio/trino/operator/OperatorFactory;
-#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Lio/trino/sql/gen/JoinCompiler;)Lio/trino/operator/OperatorFactory;

+###io/trino/operator/OperatorContext
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Lio/trino/operator/DriverContext;Ljava/util/concurrent/Executor;Lio/trino/memory/context/MemoryTrackingContext;)V
+#getOperatorId()I
+#getOperatorType()Ljava/lang/String;
+#getDriverContext()Lio/trino/operator/DriverContext;
+#getSession()Lio/trino/Session;
+#isDone()Z
+#recordPhysicalInputWithTiming(JJJ)V
+#recordNetworkInput(JJ)V
+#recordProcessedInput(JJ)V
+#recordOutput(JJ)V
+#recordDynamicFilterSplitProcessed(J)V
+#recordPhysicalWrittenData(J)V
+#recordBlocked(Lcom/google/common/util/concurrent/ListenableFuture;)V
+#isWaitingForMemory()Lcom/google/common/util/concurrent/ListenableFuture;
+#isWaitingForRevocableMemory()Lcom/google/common/util/concurrent/ListenableFuture;
+#newLocalSystemMemoryContext(Ljava/lang/String;)Lio/trino/memory/context/LocalMemoryContext;
+#localUserMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
+#localSystemMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
+#localRevocableMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
+#aggregateUserMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
+#aggregateSystemMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
+#aggregateRevocableMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
+#newAggregateUserMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
+#newAggregateSystemMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
+#newAggregateRevocableMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
+#getReservedRevocableBytes()J
+#destroy()V
+#getSpillContext()Lio/trino/operator/SpillContext;
+#moreMemoryAvailable()V
+#isMemoryRevokingRequested()Z
+#requestMemoryRevoking()J
+#resetMemoryRevokingRequested()V
+#setMemoryRevocationRequestListener(Ljava/lang/Runnable;)V
+#setInfoSupplier(Ljava/util/function/Supplier;)V
+#setNestedOperatorStatsSupplier(Ljava/util/function/Supplier;)V
+#getInputDataSize()Lio/airlift/stats/CounterStat;
+#getInputPositions()Lio/airlift/stats/CounterStat;
+#getOutputDataSize()Lio/airlift/stats/CounterStat;
+#getOutputPositions()Lio/airlift/stats/CounterStat;
+#getPhysicalWrittenDataSize()J
+#toString()Ljava/lang/String;
+#getOperatorStats()Lio/trino/operator/OperatorStats;
+#getNestedOperatorStats()Ljava/util/List;
+#accept(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#getOperatorMemoryContext()Lio/trino/memory/context/MemoryTrackingContext;
@360
+#setLatestMetrics(Lio/trino/spi/metrics/Metrics;)V
@362
+#setLatestConnectorMetrics(Lio/trino/spi/metrics/Metrics;)V
-#getOperatorStats()Lio/trino/operator/OperatorStats;
@365
+#getOperatorMetrics(Lio/trino/spi/metrics/Metrics;J)Lio/trino/spi/metrics/Metrics;
@368
+#getConnectorMetrics(Lio/trino/spi/metrics/Metrics;J)Lio/trino/spi/metrics/Metrics;
-#moreMemoryAvailable()V
@369
+#newLocalUserMemoryContext(Ljava/lang/String;)Lio/trino/memory/context/LocalMemoryContext;
-#newLocalSystemMemoryContext(Ljava/lang/String;)Lio/trino/memory/context/LocalMemoryContext;
-#localSystemMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
-#aggregateSystemMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
-#newAggregateSystemMemoryContext()Lio/trino/memory/context/AggregatedMemoryContext;
@393
+#setFinishedFuture(Lcom/google/common/util/concurrent/ListenableFuture;)V
@399
+#getOperatorMetrics(Lio/trino/spi/metrics/Metrics;JDD)Lio/trino/spi/metrics/Metrics;
-#getOperatorMetrics(Lio/trino/spi/metrics/Metrics;J)Lio/trino/spi/metrics/Metrics;
@401
+#getOperatorMetrics(Lio/trino/spi/metrics/Metrics;JDDD)Lio/trino/spi/metrics/Metrics;
-#getOperatorMetrics(Lio/trino/spi/metrics/Metrics;JDD)Lio/trino/spi/metrics/Metrics;
@406
-#isDone()Z
@408
-#getConnectorMetrics(Lio/trino/spi/metrics/Metrics;J)Lio/trino/spi/metrics/Metrics;

+###io/trino/operator/LookupJoinOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/LookupJoinOperators$JoinType;Lio/trino/operator/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/OptionalInt;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;)V
+#createOuterOperatorFactory()Ljava/util/Optional;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#getOperatorId()I
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#create(Lio/trino/operator/ProcessorContext;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorOperator;
+#createAdapterOperator(Lio/trino/operator/ProcessorContext;)Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperator;
+#lifespanFinished(Lio/trino/execution/Lifespan;)V
+#close()V
+#duplicate()Lio/trino/operator/LookupJoinOperatorFactory;
+#duplicate()Lio/trino/operator/OperatorFactory;
+#duplicate()Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperatorFactory;
@352
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/LookupJoinOperators$JoinType;ZLio/trino/operator/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/OptionalInt;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/LookupJoinOperators$JoinType;Lio/trino/operator/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/OptionalInt;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;)V
@356
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/LookupJoinOperators$JoinType;ZZLio/trino/operator/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/OptionalInt;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/LookupJoinOperators$JoinType;ZLio/trino/operator/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/OptionalInt;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;)V
@358
-###io/trino/operator/LookupJoinOperatorFactory

+###io/trino/operator/UpdateMemory
@351
+#update()Z

+###io/trino/operator/ParametricImplementationsGroup
@351
+#<init>(Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lio/trino/metadata/Signature;)V
+#isNullable()Z
+#getArgumentDefinitions()Ljava/util/List;
+#of([Lio/trino/operator/ParametricImplementation;)Lio/trino/operator/ParametricImplementationsGroup;
+#getGenericImplementations()Ljava/util/List;
+#getExactImplementations()Ljava/util/Map;
+#getSpecializedImplementations()Ljava/util/List;
+#getSignature()Lio/trino/metadata/Signature;
+#builder()Lio/trino/operator/ParametricImplementationsGroup$Builder;
@364
+#withAlias(Ljava/lang/String;)Lio/trino/operator/ParametricImplementationsGroup;
@366
+#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
-#isNullable()Z
-#getArgumentDefinitions()Ljava/util/List;
@395
+#<init>(Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lio/trino/spi/function/Signature;)V
+#getFunctionNullability()Lio/trino/spi/function/FunctionNullability;
+#getSignature()Lio/trino/spi/function/Signature;
-#<init>(Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lio/trino/metadata/Signature;)V
-#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
-#getSignature()Lio/trino/metadata/Signature;

+###io/trino/operator/CompletedWork
@351
+#<init>(Ljava/lang/Object;)V
+#process()Z
+#getResult()Ljava/lang/Object;
@374
+#<init>()V

+###io/trino/operator/PagesSpatialIndexFactory
@351
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#getTypes()Ljava/util/List;
+#getOutputTypes()Ljava/util/List;
+#destroy()V
+#createPagesSpatialIndex()Lcom/google/common/util/concurrent/ListenableFuture;
+#lendPagesSpatialIndex(Ljava/util/function/Supplier;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/GroupedTopNRankBuilder
@352
+#<init>(Ljava/util/List;Lio/trino/operator/PageWithPositionComparator;Lio/trino/operator/PageWithPositionEqualsAndHash;IZLio/trino/operator/GroupByHash;)V
+#processPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#buildResult()Ljava/util/Iterator;
+#getEstimatedSizeInBytes()J

+###io/trino/operator/PagesIndexComparator
@351
+#compareTo(Lio/trino/operator/PagesIndex;II)I

+###io/trino/operator/WorkProcessorOperatorFactory
@351
+#getOperatorId()I
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#create(Lio/trino/operator/ProcessorContext;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorOperator;
+#lifespanFinished(Lio/trino/execution/Lifespan;)V
+#close()V
@388
-#lifespanFinished(Lio/trino/execution/Lifespan;)V

+###io/trino/operator/RowNumberOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#getCapacity()I

+###io/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperator
@351
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#finish()V

+###io/trino/operator/PartitionedConsumption$Partition
@351
+#<init>(IILjava/util/function/IntFunction;Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/function/IntConsumer;)V
+#number()I
+#load()Lcom/google/common/util/concurrent/ListenableFuture;
+#release()V
@358
-###io/trino/operator/PartitionedConsumption$Partition

+###io/trino/operator/JoinFilterFunction
@351
+#filter(IILio/trino/spi/Page;)Z
@358
-###io/trino/operator/JoinFilterFunction

+###io/trino/operator/PageWithPositionComparator
@351
+#compareTo(Lio/trino/spi/Page;ILio/trino/spi/Page;I)I

+###io/trino/operator/window/NTileFunction
@351
+#<init>(Ljava/util/List;)V
+#reset()V
+#processRow(Lio/trino/spi/block/BlockBuilder;ZII)V

+###io/trino/operator/window/ReflectionWindowFunctionSupplier
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/lang/Class;)V
+#<init>(Lio/trino/metadata/Signature;Ljava/lang/Class;)V
@367
+#<init>(ILjava/lang/Class;)V
+#getLambdaInterfaces()Ljava/util/List;
+#createWindowFunction(ZLjava/util/List;)Lio/trino/spi/function/WindowFunction;
-#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/lang/Class;)V
-#<init>(Lio/trino/metadata/Signature;Ljava/lang/Class;)V

+###io/trino/operator/window/PercentRankFunction
@351
+#<init>()V
+#reset()V
+#processRow(Lio/trino/spi/block/BlockBuilder;ZII)V

+###io/trino/operator/window/LastValueFunction
@351
+#<init>(Ljava/util/List;Z)V
+#processRow(Lio/trino/spi/block/BlockBuilder;III)V

+###io/trino/operator/window/WindowFunctionSupplier
@351
+#getSignature()Lio/trino/metadata/Signature;
+#getDescription()Ljava/lang/String;
+#createWindowFunction(Ljava/util/List;ZLjava/util/List;)Lio/trino/spi/function/WindowFunction;
+#getLambdaInterfaces()Ljava/util/List;
@367
+#createWindowFunction(ZLjava/util/List;)Lio/trino/spi/function/WindowFunction;
-#getSignature()Lio/trino/metadata/Signature;
-#getDescription()Ljava/lang/String;
-#createWindowFunction(Ljava/util/List;ZLjava/util/List;)Lio/trino/spi/function/WindowFunction;
@395
-###io/trino/operator/window/WindowFunctionSupplier

+###io/trino/operator/window/RowNumberFunction
@351
+#<init>()V
+#processRow(Lio/trino/spi/block/BlockBuilder;ZII)V

+###io/trino/operator/window/WindowAnnotationsParser
@351
+#parseFunctionDefinition(Ljava/lang/Class;)Ljava/util/List;

+###io/trino/operator/window/FramedWindowFunction
@351
+#<init>(Lio/trino/spi/function/WindowFunction;Lio/trino/operator/window/FrameInfo;)V
+#getFunction()Lio/trino/spi/function/WindowFunction;
+#getFrame()Lio/trino/operator/window/FrameInfo;
@367
-###io/trino/operator/window/FramedWindowFunction

+###io/trino/operator/window/AggregateWindowFunction
@351
+#reset(Lio/trino/spi/function/WindowIndex;)V
+#processRow(Lio/trino/spi/block/BlockBuilder;IIII)V
+#supplier(Lio/trino/metadata/Signature;Lio/trino/operator/aggregation/InternalAggregationFunction;)Lio/trino/operator/window/WindowFunctionSupplier;
@367
-###io/trino/operator/window/AggregateWindowFunction

+###io/trino/operator/window/NthValueFunction
@351
+#<init>(Ljava/util/List;Z)V
+#processRow(Lio/trino/spi/block/BlockBuilder;III)V

+###io/trino/operator/window/WindowPartition
@351
+#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)V
+#getPartitionStart()I
+#getPartitionEnd()I
+#hasNext()Z
+#processNextRow(Lio/trino/spi/PageBuilder;)V
@356
-#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)V

+###io/trino/operator/window/FrameInfo
@351
+#<init>(Lio/trino/sql/tree/WindowFrame$Type;Lio/trino/sql/tree/FrameBound$Type;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/tree/FrameBound$Type;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getType()Lio/trino/sql/tree/WindowFrame$Type;
+#getStartType()Lio/trino/sql/tree/FrameBound$Type;
+#getStartChannel()I
+#getSortKeyChannelForStartComparison()I
+#getEndType()Lio/trino/sql/tree/FrameBound$Type;
+#getEndChannel()I
+#getSortKeyChannelForEndComparison()I
+#getSortKeyChannel()I
+#getOrdering()Ljava/util/Optional;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/operator/window/FirstValueFunction
@351
+#<init>(Ljava/util/List;Z)V
+#processRow(Lio/trino/spi/block/BlockBuilder;III)V

+###io/trino/operator/window/CumulativeDistributionFunction
@351
+#<init>()V
+#reset()V
+#processRow(Lio/trino/spi/block/BlockBuilder;ZII)V

+###io/trino/operator/window/LeadFunction
@351
+#<init>(Ljava/util/List;Z)V
+#processRow(Lio/trino/spi/block/BlockBuilder;III)V

+###io/trino/operator/window/SqlWindowFunction
@351
+#<init>(Lio/trino/operator/window/WindowFunctionSupplier;Z)V
+#getFunctionMetadata()Lio/trino/metadata/FunctionMetadata;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/window/WindowFunctionSupplier;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/window/WindowFunctionSupplier;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/window/WindowFunctionSupplier;
@367
+#<init>(Lio/trino/metadata/Signature;Ljava/util/Optional;ZLio/trino/operator/window/WindowFunctionSupplier;)V
-#<init>(Lio/trino/operator/window/WindowFunctionSupplier;Z)V
@395
+#<init>(Lio/trino/spi/function/Signature;Ljava/util/Optional;ZLio/trino/spi/function/WindowFunctionSupplier;)V
+#getFunctionMetadata()Lio/trino/spi/function/FunctionMetadata;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/WindowFunctionSupplier;
+#specialize(Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/WindowFunctionSupplier;
-#<init>(Lio/trino/metadata/Signature;Ljava/util/Optional;ZLio/trino/operator/window/WindowFunctionSupplier;)V
-#getFunctionMetadata()Lio/trino/metadata/FunctionMetadata;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/window/WindowFunctionSupplier;

+###io/trino/operator/window/LagFunction
@351
+#<init>(Ljava/util/List;Z)V
+#processRow(Lio/trino/spi/block/BlockBuilder;III)V

+###io/trino/operator/window/PagesWindowIndex
@351
+#<init>(Lio/trino/operator/PagesIndex;II)V
+#size()I
+#isNull(II)Z
+#getBoolean(II)Z
+#getLong(II)J
+#getDouble(II)D
+#getSlice(II)Lio/airlift/slice/Slice;
+#getSingleValueBlock(II)Lio/trino/spi/block/Block;
+#getObject(II)Ljava/lang/Object;
+#appendTo(IILio/trino/spi/block/BlockBuilder;)V
+#toString()Ljava/lang/String;
@367
+#getRawBlock(II)Lio/trino/spi/block/Block;
+#getRawBlockPosition(I)I

+###io/trino/operator/window/RankFunction
@351
+#<init>()V
+#reset()V
+#processRow(Lio/trino/spi/block/BlockBuilder;ZII)V

+###io/trino/operator/window/AbstractWindowFunctionSupplier
@351
+#getSignature()Lio/trino/metadata/Signature;
+#getDescription()Ljava/lang/String;
+#getLambdaInterfaces()Ljava/util/List;
+#createWindowFunction(Ljava/util/List;ZLjava/util/List;)Lio/trino/spi/function/WindowFunction;
@367
-###io/trino/operator/window/AbstractWindowFunctionSupplier

+###io/trino/operator/window/DenseRankFunction
@351
+#<init>()V
+#reset()V
+#processRow(Lio/trino/spi/block/BlockBuilder;ZII)V

+###io/trino/operator/ExchangeOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/buffer/PagesSerde;Lio/trino/operator/ExchangeClient;)V
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;
+#noMoreSplits()V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V
@369
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeOperator$ExchangeDataSource;Lio/trino/execution/buffer/PagesSerde;)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/buffer/PagesSerde;Lio/trino/operator/ExchangeClient;)V
@394
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/exchange/ExchangeDataSource;Lio/trino/execution/buffer/PagesSerde;)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeOperator$ExchangeDataSource;Lio/trino/execution/buffer/PagesSerde;)V
@396
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/exchange/ExchangeDataSource;Lio/trino/execution/buffer/PagesSerde;Lio/trino/operator/ExchangeOperator$NoMoreSplitsTracker;I)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/exchange/ExchangeDataSource;Lio/trino/execution/buffer/PagesSerde;)V
@405
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/exchange/ExchangeDataSource;Lio/trino/execution/buffer/PageDeserializer;Lio/trino/operator/ExchangeOperator$NoMoreSplitsTracker;I)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/exchange/ExchangeDataSource;Lio/trino/execution/buffer/PagesSerde;Lio/trino/operator/ExchangeOperator$NoMoreSplitsTracker;I)V
@406
+#addSplit(Lio/trino/metadata/Split;)V
-#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;

+###io/trino/operator/PositionLinks$Factory
@351
+#create(Ljava/util/List;)Lio/trino/operator/PositionLinks;
+#checksum()J
@358
-###io/trino/operator/PositionLinks$Factory

+###io/trino/operator/AbstractRowChangeOperator
@352
+#<init>(Lio/trino/operator/OperatorContext;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#getOutput()Lio/trino/spi/Page;
+#close()V
+#setPageSource(Ljava/util/function/Supplier;)V
@406
-###io/trino/operator/AbstractRowChangeOperator

+###io/trino/operator/ExchangeOperator$ExchangeOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerdeFactory;)V
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SourceOperator;
+#noMoreOperators()V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
@366
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/trino/operator/RetryPolicy;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerdeFactory;)V
@369
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/trino/operator/RetryPolicy;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/trino/operator/RetryPolicy;)V

+###io/trino/operator/TableWriterOperator$TableWriterOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSinkManager;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Ljava/util/List;Ljava/util/List;Lio/trino/Session;Lio/trino/operator/OperatorFactory;Ljava/util/List;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@393
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSinkManager;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Ljava/util/List;Lio/trino/Session;Lio/trino/operator/OperatorFactory;Ljava/util/List;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSinkManager;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Ljava/util/List;Ljava/util/List;Lio/trino/Session;Lio/trino/operator/OperatorFactory;Ljava/util/List;)V

+###io/trino/operator/JoinOperatorInfo
@351
+#createJoinOperatorInfo(Lio/trino/operator/LookupJoinOperators$JoinType;[JLjava/util/Optional;)Lio/trino/operator/JoinOperatorInfo;
+#<init>(Lio/trino/operator/LookupJoinOperators$JoinType;[J[JLjava/util/Optional;)V
+#getJoinType()Lio/trino/operator/LookupJoinOperators$JoinType;
+#getLogHistogramProbes()[J
+#getLogHistogramOutput()[J
+#getLookupSourcePositions()Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#mergeWith(Lio/trino/operator/JoinOperatorInfo;)Lio/trino/operator/JoinOperatorInfo;
+#isFinal()Z
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@358
-###io/trino/operator/JoinOperatorInfo

+###io/trino/operator/LookupJoinOperator
@351
+#getOperatorInfo()Ljava/util/Optional;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#finish()V
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#close()V
@358
-###io/trino/operator/LookupJoinOperator

+###io/trino/operator/EnforceSingleRowOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
@356
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/spi/Page;)V
-#<init>(Lio/trino/operator/OperatorContext;)V

+###io/trino/operator/PageUtils
@351
+#recordMaterializedBytes(Lio/trino/spi/Page;Ljava/util/function/LongConsumer;)V

+###io/trino/operator/DriverStats
@351
+#<init>()V
+#<init>(Lio/trino/execution/Lifespan;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;)V
+#getLifespan()Lio/trino/execution/Lifespan;
+#getCreateTime()Lorg/joda/time/DateTime;
+#getStartTime()Lorg/joda/time/DateTime;
+#getEndTime()Lorg/joda/time/DateTime;
+#getQueuedTime()Lio/airlift/units/Duration;
+#getElapsedTime()Lio/airlift/units/Duration;
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getSystemMemoryReservation()Lio/airlift/units/DataSize;
+#getTotalScheduledTime()Lio/airlift/units/Duration;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalBlockedTime()Lio/airlift/units/Duration;
+#isFullyBlocked()Z
+#getBlockedReasons()Ljava/util/Set;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getPhysicalInputReadTime()Lio/airlift/units/Duration;
+#getInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getInternalNetworkInputPositions()J
+#getInternalNetworkInputReadTime()Lio/airlift/units/Duration;
+#getRawInputDataSize()Lio/airlift/units/DataSize;
+#getRawInputPositions()J
+#getRawInputReadTime()Lio/airlift/units/Duration;
+#getProcessedInputDataSize()Lio/airlift/units/DataSize;
+#getProcessedInputPositions()J
+#getOutputDataSize()Lio/airlift/units/DataSize;
+#getOutputPositions()J
+#getPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
+#getOperatorStats()Ljava/util/List;
@369
+#<init>(Lio/trino/execution/Lifespan;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;)V
-#<init>(Lio/trino/execution/Lifespan;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;)V
-#getSystemMemoryReservation()Lio/airlift/units/DataSize;
@376
+#<init>(Lio/trino/execution/Lifespan;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljava/util/List;)V
+#getInputBlockedTime()Lio/airlift/units/Duration;
+#getOutputBlockedTime()Lio/airlift/units/Duration;
-#<init>(Lio/trino/execution/Lifespan;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;)V
@379
+#<init>(Lio/trino/execution/Lifespan;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljava/util/List;)V
-#<init>(Lio/trino/execution/Lifespan;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljava/util/List;)V
-#getInternalNetworkInputReadTime()Lio/airlift/units/Duration;
@388
+#<init>(Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljava/util/List;)V
-#<init>(Lio/trino/execution/Lifespan;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljava/util/List;)V
-#getLifespan()Lio/trino/execution/Lifespan;

+###io/trino/operator/ChannelSet
@351
+#<init>(Lio/trino/operator/GroupByHash;Z[I)V
+#getType()Lio/trino/spi/type/Type;
+#getEstimatedSizeInBytes()J
+#size()I
+#isEmpty()Z
+#containsNull()Z
+#contains(ILio/trino/spi/Page;)Z
+#contains(ILio/trino/spi/Page;J)Z

+###io/trino/operator/MergeOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerde;Lio/trino/operator/PageWithPositionComparator;Ljava/util/List;Ljava/util/List;)V
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;
+#noMoreSplits()V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V
@369
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerde;Lio/trino/operator/PageWithPositionComparator;Ljava/util/List;Ljava/util/List;)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerde;Lio/trino/operator/PageWithPositionComparator;Ljava/util/List;Ljava/util/List;)V
@405
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/execution/buffer/PageDeserializer;Lio/trino/operator/PageWithPositionComparator;Ljava/util/List;Ljava/util/List;)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/execution/buffer/PagesSerde;Lio/trino/operator/PageWithPositionComparator;Ljava/util/List;Ljava/util/List;)V
@406
+#addSplit(Lio/trino/metadata/Split;)V
-#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;

+###io/trino/operator/WorkProcessorSourceOperatorFactory
@351
+#getOperatorId()I
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#create(Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/operator/DriverYieldSignal;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorSourceOperator;

+###io/trino/operator/JoinUtils
@351
+#channelsToPages(Ljava/util/List;)Ljava/util/List;
+#isBuildSideReplicated(Lio/trino/sql/planner/plan/PlanNode;)Z
@358
-###io/trino/operator/JoinUtils

+###io/trino/operator/SourceOperator
@351
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;
+#noMoreSplits()V
@406
+#addSplit(Lio/trino/metadata/Split;)V
-#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;

+###io/trino/operator/LimitOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;J)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/SpatialIndexBuilderOperator
@351
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#finish()V
+#isFinished()Z
+#close()V

+###io/trino/operator/SimplePagesIndexComparator
@351
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/TypeOperators;)V
+#compareTo(Lio/trino/operator/PagesIndex;II)I

+###io/trino/operator/OuterLookupSource
@351
+#createOuterLookupSourceSupplier(Ljava/util/function/Supplier;)Lio/trino/operator/TrackingLookupSourceSupplier;
+#isEmpty()Z
+#getChannelCount()I
+#getJoinPositionCount()J
+#getInMemorySizeInBytes()J
+#joinPositionWithinPartition(J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#close()V
@358
-###io/trino/operator/OuterLookupSource

+###io/trino/operator/SortedPositionLinks
@351
+#builder(ILio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;)Lio/trino/operator/SortedPositionLinks$FactoryBuilder;
+#next(IILio/trino/spi/Page;)I
+#start(IILio/trino/spi/Page;)I
+#getSizeInBytes()J
@358
-###io/trino/operator/SortedPositionLinks

+###io/trino/operator/LimitOperator$LimitOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;J)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/index/IndexSplit
@351
+#<init>(Lio/trino/spi/connector/RecordSet;)V
+#isRemotelyAccessible()Z
+#getAddresses()Ljava/util/List;
+#getInfo()Ljava/lang/Object;
+#getKeyRecordSet()Lio/trino/spi/connector/RecordSet;
@368
+#getRetainedSizeInBytes()J

+###io/trino/operator/index/DynamicTupleFilterFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;[I[ILjava/util/List;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/type/BlockTypeOperators;)V
+#filterWithTuple(Lio/trino/spi/Page;)Lio/trino/operator/OperatorFactory;
+#createPageProcessor(Lio/trino/spi/Page;Ljava/util/OptionalInt;)Ljava/util/function/Supplier;

+###io/trino/operator/index/IndexedData
@351
+#getJoinPosition(ILio/trino/spi/Page;)J
+#getNextJoinPosition(J)J
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#close()V

+###io/trino/operator/index/IndexSourceOperator$IndexSourceOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/spi/connector/ConnectorIndex;Ljava/util/function/Function;)V
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SourceOperator;
+#noMoreOperators()V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;

+###io/trino/operator/index/IndexBuildDriverFactoryProvider
@351
+#<init>(IILio/trino/sql/planner/plan/PlanNodeId;ZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getPipelineId()I
+#getOutputTypes()Ljava/util/List;
+#createSnapshot(ILio/trino/operator/index/IndexSnapshotBuilder;)Lio/trino/operator/DriverFactory;
+#createStreaming(Lio/trino/operator/index/PageBuffer;Lio/trino/spi/Page;)Lio/trino/operator/DriverFactory;

+###io/trino/operator/index/StreamingIndexedData
@351
+#<init>(Ljava/util/List;Ljava/util/List;Lio/trino/spi/Page;Lio/trino/operator/index/PageBuffer;Lio/trino/operator/Driver;)V
+#getJoinPosition(ILio/trino/spi/Page;)J
+#getNextJoinPosition(J)J
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#close()V

+###io/trino/operator/index/PageBufferOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/index/PageBuffer;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/index/IndexJoinLookupStats
@351
+#<init>()V
+#getTotalIndexJoinLookups()Lio/airlift/stats/CounterStat;
+#getSuccessfulIndexJoinLookupsByCacheReset()Lio/airlift/stats/CounterStat;
+#getSuccessfulIndexJoinLookupsBySingleRequest()Lio/airlift/stats/CounterStat;
+#getSuccessfulIndexJoinLookupsByLimitedRequest()Lio/airlift/stats/CounterStat;
+#getStreamedIndexJoinLookups()Lio/airlift/stats/CounterStat;
+#recordIndexJoinLookup()V
+#recordSuccessfulIndexJoinLookupByCacheReset()V
+#recordSuccessfulIndexJoinLookupBySingleRequest()V
+#recordSuccessfulIndexJoinLookupByLimitedRequest()V
+#recordStreamedIndexJoinLookup()V

+###io/trino/operator/index/TuplePageFilter
@351
+#<init>(Lio/trino/spi/Page;Ljava/util/List;Ljava/util/List;)V
+#isDeterministic()Z
+#getInputChannels()Lio/trino/operator/project/InputChannels;
+#filter(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/Page;)Lio/trino/operator/project/SelectedPositions;

+###io/trino/operator/index/PageRecordSet
@351
+#<init>(Ljava/util/List;Lio/trino/spi/Page;)V
+#getColumnTypes()Ljava/util/List;
+#cursor()Lio/trino/spi/connector/RecordCursor;

+###io/trino/operator/index/PagesIndexBuilderOperator$PagesIndexBuilderOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/index/IndexSnapshotBuilder;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@376
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/index/IndexSnapshotBuilder;Ljava/lang/String;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/index/IndexSnapshotBuilder;)V

+###io/trino/operator/index/IndexLookupSource
@351
+#<init>(Lio/trino/operator/index/IndexLoader;)V
+#isEmpty()Z
+#getChannelCount()I
+#getJoinPositionCount()J
+#getInMemorySizeInBytes()J
+#joinPositionWithinPartition(J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#close()V
@362
-#getChannelCount()I

+###io/trino/operator/index/IndexLoader
@351
+#<init>(Ljava/util/Set;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/List;Lio/trino/operator/index/IndexBuildDriverFactoryProvider;ILio/airlift/units/DataSize;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#setContext(Lio/trino/operator/TaskContext;)V
+#getChannelCount()I
+#getOutputTypes()Ljava/util/List;
+#getIndexSnapshot()Lio/trino/operator/index/IndexSnapshot;
+#getIndexedDataForKeys(ILio/trino/spi/Page;)Lio/trino/operator/index/IndexedData;
+#streamIndexDataForSingleKey(Lio/trino/operator/index/UpdateRequest;)Lio/trino/operator/index/IndexedData;
@362
-#getChannelCount()I

+###io/trino/operator/index/PageBuffer
@351
+#<init>(I)V
+#isFull()Z
+#add(Lio/trino/spi/Page;)Lcom/google/common/util/concurrent/ListenableFuture;
+#poll()Lio/trino/spi/Page;

+###io/trino/operator/index/IndexSnapshotBuilder
@351
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/operator/DriverContext;Lio/airlift/units/DataSize;ILio/trino/operator/PagesIndex$Factory;)V
+#getOutputTypes()Ljava/util/List;
+#getMemoryInBytes()J
+#isMemoryExceeded()Z
+#tryAddPage(Lio/trino/spi/Page;)Z
+#createIndexSnapshot(Lio/trino/operator/index/UnloadedIndexKeyRecordSet;)Lio/trino/operator/index/IndexSnapshot;
+#reset()V

+###io/trino/operator/index/PagesIndexBuilderOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/index/IndexSnapshotBuilder;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/index/UnloadedIndexKeyRecordSet$UnloadedIndexKeyRecordCursor
@351
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#getType(I)Lio/trino/spi/type/Type;
+#advanceNextPosition()Z
+#getPage()Lio/trino/spi/Page;
+#getPosition()I
+#getBoolean(I)Z
+#getLong(I)J
+#getDouble(I)D
+#getSlice(I)Lio/airlift/slice/Slice;
+#getObject(I)Ljava/lang/Object;
+#isNull(I)Z
+#close()V

+###io/trino/operator/index/FieldSetFilteringRecordSet
@351
+#<init>(Lio/trino/spi/type/TypeOperators;Lio/trino/spi/connector/RecordSet;Ljava/util/List;)V
+#getColumnTypes()Ljava/util/List;
+#cursor()Lio/trino/spi/connector/RecordCursor;

+###io/trino/operator/index/UnloadedIndexKeyRecordSet
@351
+#<init>(Lio/trino/Session;Lio/trino/operator/index/IndexSnapshot;Ljava/util/Set;Ljava/util/List;Ljava/util/List;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#getColumnTypes()Ljava/util/List;
+#cursor()Lio/trino/operator/index/UnloadedIndexKeyRecordSet$UnloadedIndexKeyRecordCursor;
+#cursor()Lio/trino/spi/connector/RecordCursor;

+###io/trino/operator/index/PageBufferOperator$PageBufferOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/index/PageBuffer;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@376
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/index/PageBuffer;Ljava/lang/String;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/index/PageBuffer;)V

+###io/trino/operator/index/PageRecordSet$PageRecordCursor
@351
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#getType(I)Lio/trino/spi/type/Type;
+#advanceNextPosition()Z
+#getBoolean(I)Z
+#getLong(I)J
+#getDouble(I)D
+#getSlice(I)Lio/airlift/slice/Slice;
+#getObject(I)Ljava/lang/Object;
+#isNull(I)Z
+#close()V

+###io/trino/operator/index/IndexLookupSourceFactory
@351
+#<init>(Ljava/util/Set;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/List;Lio/trino/operator/index/IndexBuildDriverFactoryProvider;Lio/airlift/units/DataSize;Lio/trino/operator/index/IndexJoinLookupStats;ZLio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#getTypes()Ljava/util/List;
+#getOutputTypes()Ljava/util/List;
+#setTaskContext(Lio/trino/operator/TaskContext;)V
+#createLookupSourceProvider()Lcom/google/common/util/concurrent/ListenableFuture;
+#whenBuildFinishes()Lcom/google/common/util/concurrent/ListenableFuture;
+#partitions()I
+#getOuterPositionIterator()Lio/trino/operator/OuterPositionIterator;
+#destroy()V
@358
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;
-#getOuterPositionIterator()Lio/trino/operator/OuterPositionIterator;

+###io/trino/operator/index/IndexSnapshot
@351
+#<init>(Lio/trino/operator/LookupSource;Lio/trino/operator/LookupSource;)V
+#getJoinPosition(ILio/trino/spi/Page;)J
+#getNextJoinPosition(J)J
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#close()V
@358
+#<init>(Lio/trino/operator/join/LookupSource;Lio/trino/operator/join/LookupSource;)V
-#<init>(Lio/trino/operator/LookupSource;Lio/trino/operator/LookupSource;)V

+###io/trino/operator/index/IndexSourceOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/spi/connector/ConnectorIndex;Ljava/util/function/Function;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;
+#noMoreSplits()V
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V
@406
+#addSplit(Lio/trino/metadata/Split;)V
-#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;

+###io/trino/operator/NestedLoopJoinPagesBuilder
@351
+#addPage(Lio/trino/spi/Page;)V
+#getEstimatedSize()Lio/airlift/units/DataSize;
+#compact()V
+#build()Lio/trino/operator/NestedLoopJoinPages;
+#toString()Ljava/lang/String;
@358
-###io/trino/operator/NestedLoopJoinPagesBuilder

+###io/trino/operator/ScanFilterAndProjectOperator
@351
+#getUpdatablePageSourceSupplier()Ljava/util/function/Supplier;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getInputDataSize()Lio/airlift/units/DataSize;
+#getInputPositions()J
+#getReadTime()Lio/airlift/units/Duration;
+#getDynamicFilterSplitsProcessed()J
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#close()V
@360
+#getConnectorMetrics()Lio/trino/spi/metrics/Metrics;
@398
+#getMetrics()Lio/trino/spi/metrics/Metrics;
@406
-#getUpdatablePageSourceSupplier()Ljava/util/function/Supplier;

+###io/trino/operator/GroupByHash
@351
+#createGroupByHash(Lio/trino/Session;Ljava/util/List;[ILjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/GroupByHash;
+#createGroupByHash(Ljava/util/List;[ILjava/util/Optional;IZLio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/operator/UpdateMemory;)Lio/trino/operator/GroupByHash;
+#getEstimatedSize()J
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#getTypes()Ljava/util/List;
+#getGroupCount()I
+#appendValuesTo(ILio/trino/spi/PageBuilder;I)V
+#addPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#getGroupIds(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#contains(ILio/trino/spi/Page;[I)Z
+#contains(ILio/trino/spi/Page;[IJ)Z
+#getRawHash(I)J
+#getCapacity()I
@365
+#createGroupByHash(Lio/trino/Session;Ljava/util/List;[ILjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/operator/UpdateMemory;)Lio/trino/operator/GroupByHash;
-#createGroupByHash(Lio/trino/Session;Ljava/util/List;[ILjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/GroupByHash;
@376
+#appendValuesTo(ILio/trino/spi/PageBuilder;)V
-#appendValuesTo(ILio/trino/spi/PageBuilder;I)V
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D

+###io/trino/operator/NestedLoopJoinOperator$NestedLoopJoinOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#duplicate()Lio/trino/operator/OperatorFactory;
@358
-###io/trino/operator/NestedLoopJoinOperator$NestedLoopJoinOperatorFactory

+###io/trino/operator/AssignUniqueIdOperator
@351
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;)Lio/trino/operator/OperatorFactory;
+#getOutputPages()Lio/trino/operator/WorkProcessor;

+###io/trino/operator/PrecomputedHashGenerator
@351
+#<init>(I)V
+#hashPosition(ILio/trino/spi/Page;)J
+#toString()Ljava/lang/String;

+###io/trino/operator/OrderByOperator$OrderByOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;ZLjava/util/Optional;Lio/trino/sql/gen/OrderingCompiler;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/WindowInfo
@351
+#<init>(Ljava/util/List;)V
+#getWindowInfos()Ljava/util/List;
+#mergeWith(Lio/trino/operator/WindowInfo;)Lio/trino/operator/WindowInfo;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@359
+#emptyInfo()Lio/trino/operator/WindowInfo;

+###io/trino/operator/LookupOuterOperator$LookupOuterOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Lio/trino/operator/JoinBridgeManager;)V
+#getOperatorId()I
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@358
-###io/trino/operator/LookupOuterOperator$LookupOuterOperatorFactory

+###io/trino/operator/SetBuilderOperator$SetSupplier
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getType()Lio/trino/spi/type/Type;
+#getChannelSet()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/TransformWork
@351
+#<init>(Lio/trino/operator/Work;Ljava/util/function/Function;)V
+#process()Z
+#getResult()Ljava/lang/Object;

+###io/trino/operator/SpatialIndexBuilderOperator$SpatialPredicate
@351
+#apply(Lcom/esri/core/geometry/ogc/OGCGeometry;Lcom/esri/core/geometry/ogc/OGCGeometry;Ljava/util/OptionalDouble;)Z

+###io/trino/operator/DeleteOperator$DeleteOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;I)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@406
-###io/trino/operator/DeleteOperator$DeleteOperatorFactory

+###io/trino/operator/LookupJoinOperators$JoinType
@351
+#values()[Lio/trino/operator/LookupJoinOperators$JoinType;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/LookupJoinOperators$JoinType;
@358
-###io/trino/operator/LookupJoinOperators$JoinType

+###io/trino/operator/GroupedTopNRowNumberAccumulator
@351
+#<init>(Lit/unimi/dsi/fastutil/longs/LongComparator;ILjava/util/function/LongConsumer;)V
+#sizeOf()J
+#add(JLio/trino/operator/GroupedTopNRowNumberAccumulator$RowReference;)Z
+#drainTo(JLio/trino/array/LongBigArray;)J
@352
+#<init>(Lio/trino/operator/RowIdComparisonStrategy;ILjava/util/function/LongConsumer;)V
+#add(JLio/trino/operator/RowReference;)Z
-#<init>(Lit/unimi/dsi/fastutil/longs/LongComparator;ILjava/util/function/LongConsumer;)V
-#add(JLio/trino/operator/GroupedTopNRowNumberAccumulator$RowReference;)Z

+###io/trino/operator/GroupIdOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;[[I[Lio/trino/spi/block/Block;[Lio/trino/spi/block/Block;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/TopNOperator
@351
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;ILjava/util/List;Ljava/util/List;Lio/trino/spi/type/TypeOperators;)Lio/trino/operator/OperatorFactory;
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#finish()V
@370
-#needsInput()Z
-#addInput(Lio/trino/spi/Page;)V
-#finish()V

+###io/trino/operator/ExchangeClientFactory
@351
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/operator/ExchangeClientConfig;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZILio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
+#stop()V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#get(Lio/trino/memory/context/LocalMemoryContext;)Lio/trino/operator/ExchangeClient;
@365
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/FeaturesConfig;Lio/trino/operator/ExchangeClientConfig;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZILio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
-#<init>(Lio/airlift/node/NodeInfo;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/operator/ExchangeClientConfig;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
-#<init>(Lio/airlift/node/NodeInfo;Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZILio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
@366
+#get(Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;)Lio/trino/operator/ExchangeClient;
-#get(Lio/trino/memory/context/LocalMemoryContext;)Lio/trino/operator/ExchangeClient;
@369
-###io/trino/operator/ExchangeClientFactory

+###io/trino/operator/WorkProcessor$Process
@351
+#process()Lio/trino/operator/WorkProcessor$ProcessState;

+###io/trino/operator/TopNRankingOperator$TopNRankingOperatorFactory
@352
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@365
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLjava/util/Optional;ILjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V

+###io/trino/operator/WindowOperator$FrameBoundKey
@351
+#<init>(ILio/trino/operator/WindowOperator$FrameBoundKey$Type;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/operator/SpillContext
@351
+#updateBytes(J)V
+#newLocalSpillContext()Lio/trino/operator/SpillContext;
+#close()V

+###io/trino/operator/PipelineContext
@351
+#<init>(ILio/trino/operator/TaskContext;Ljava/util/concurrent/Executor;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/MemoryTrackingContext;ZZZ)V
+#getTaskContext()Lio/trino/operator/TaskContext;
+#getTaskId()Lio/trino/execution/TaskId;
+#getPipelineId()I
+#isInputPipeline()Z
+#isOutputPipeline()Z
+#addDriverContext()Lio/trino/operator/DriverContext;
+#addDriverContext(Lio/trino/execution/Lifespan;)Lio/trino/operator/DriverContext;
+#getSession()Lio/trino/Session;
+#splitsAdded(I)V
+#driverFinished(Lio/trino/operator/DriverContext;)V
+#start()V
+#failed(Ljava/lang/Throwable;)V
+#isDone()Z
+#reserveSpill(J)Lcom/google/common/util/concurrent/ListenableFuture;
+#freeSpill(J)V
+#localSystemMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
+#moreMemoryAvailable()V
+#isPerOperatorCpuTimerEnabled()Z
+#isCpuTimerEnabled()Z
+#getProcessedInputDataSize()Lio/airlift/stats/CounterStat;
+#getInputPositions()Lio/airlift/stats/CounterStat;
+#getOutputDataSize()Lio/airlift/stats/CounterStat;
+#getOutputPositions()Lio/airlift/stats/CounterStat;
+#getPhysicalWrittenDataSize()J
+#getPipelineStatus()Lio/trino/operator/PipelineStatus;
+#getPipelineStats()Lio/trino/operator/PipelineStats;
+#accept(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#acceptChildren(Lio/trino/memory/QueryContextVisitor;Ljava/lang/Object;)Ljava/util/List;
+#getPipelineMemoryContext()Lio/trino/memory/context/MemoryTrackingContext;
@364
+#addDriverContext(Lio/trino/execution/Lifespan;J)Lio/trino/operator/DriverContext;
+#splitsAdded(IJ)V
-#addDriverContext(Lio/trino/execution/Lifespan;)Lio/trino/operator/DriverContext;
-#splitsAdded(I)V
@368
-#moreMemoryAvailable()V
@369
+#localMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
-#localSystemMemoryContext()Lio/trino/memory/context/LocalMemoryContext;
@388
+#addDriverContext(J)Lio/trino/operator/DriverContext;
-#addDriverContext(Lio/trino/execution/Lifespan;J)Lio/trino/operator/DriverContext;

+###io/trino/operator/HashBuilderOperator$HashBuilderOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SingleStreamSpillerFactory;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/HashBuilderOperator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
@358
-###io/trino/operator/HashBuilderOperator$HashBuilderOperatorFactory

+###io/trino/operator/TaskOutputOperator$TaskOutputFactory
@351
+#<init>(Lio/trino/execution/buffer/OutputBuffer;)V
+#createOutputOperator(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)Lio/trino/operator/OperatorFactory;
@360
-###io/trino/operator/TaskOutputOperator$TaskOutputFactory

+###io/trino/operator/ArrayPositionLinks
@351
+#builder(I)Lio/trino/operator/ArrayPositionLinks$FactoryBuilder;
+#start(IILio/trino/spi/Page;)I
+#next(IILio/trino/spi/Page;)I
+#getSizeInBytes()J
@358
-###io/trino/operator/ArrayPositionLinks

+###io/trino/operator/TopNRankingOperator
@352
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#getCapacity()I
@365
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLjava/util/Optional;ILjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
+#close()V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
-#getCapacity()I

+###io/trino/operator/ValuesOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/PipelineStats
@351
+#<init>(ILorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;ZZIIIIIIILio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Ljava/util/List;)V
+#getPipelineId()I
+#getFirstStartTime()Lorg/joda/time/DateTime;
+#getLastStartTime()Lorg/joda/time/DateTime;
+#getLastEndTime()Lorg/joda/time/DateTime;
+#isInputPipeline()Z
+#isOutputPipeline()Z
+#getTotalDrivers()I
+#getQueuedDrivers()I
+#getQueuedPartitionedDrivers()I
+#getRunningDrivers()I
+#getRunningPartitionedDrivers()I
+#getBlockedDrivers()I
+#getCompletedDrivers()I
+#getUserMemoryReservation()Lio/airlift/units/DataSize;
+#getRevocableMemoryReservation()Lio/airlift/units/DataSize;
+#getSystemMemoryReservation()Lio/airlift/units/DataSize;
+#getQueuedTime()Lio/airlift/stats/Distribution$DistributionSnapshot;
+#getElapsedTime()Lio/airlift/stats/Distribution$DistributionSnapshot;
+#getTotalScheduledTime()Lio/airlift/units/Duration;
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getTotalBlockedTime()Lio/airlift/units/Duration;
+#isFullyBlocked()Z
+#getBlockedReasons()Ljava/util/Set;
+#getPhysicalInputDataSize()Lio/airlift/units/DataSize;
+#getPhysicalInputPositions()J
+#getInternalNetworkInputDataSize()Lio/airlift/units/DataSize;
+#getInternalNetworkInputPositions()J
+#getRawInputDataSize()Lio/airlift/units/DataSize;
+#getRawInputPositions()J
+#getProcessedInputDataSize()Lio/airlift/units/DataSize;
+#getProcessedInputPositions()J
+#getPhysicalInputReadTime()Lio/airlift/units/Duration;
+#getOutputDataSize()Lio/airlift/units/DataSize;
+#getOutputPositions()J
+#getPhysicalWrittenDataSize()Lio/airlift/units/DataSize;
+#getOperatorSummaries()Ljava/util/List;
+#getDrivers()Ljava/util/List;
+#summarize()Lio/trino/operator/PipelineStats;
@364
+#<init>(ILorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;ZZIIIJIIJIILio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Ljava/util/List;)V
+#getQueuedPartitionedSplitsWeight()J
+#getRunningPartitionedSplitsWeight()J
-#<init>(ILorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;ZZIIIIIIILio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Ljava/util/List;)V
@369
+#<init>(ILorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;ZZIIIJIIJIILio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Ljava/util/List;)V
-#<init>(ILorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;ZZIIIJIIJIILio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Ljava/util/List;)V
-#getSystemMemoryReservation()Lio/airlift/units/DataSize;
@376
+#<init>(ILorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;ZZIIIJIIJIILio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;Ljava/util/List;Ljava/util/List;)V
+#getInputBlockedTime()Lio/airlift/units/Duration;
+#getOutputBlockedTime()Lio/airlift/units/Duration;
-#<init>(ILorg/joda/time/DateTime;Lorg/joda/time/DateTime;Lorg/joda/time/DateTime;ZZIIIJIIJIILio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/stats/Distribution$DistributionSnapshot;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;ZLjava/util/Set;Lio/airlift/units/DataSize;JLio/airlift/units/Duration;Lio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/List;Ljava/util/List;)V

+###io/trino/operator/DevNullOperator$DevNullOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/PagesIndex$TestingFactory
@351
+#<init>(Z)V
+#newPagesIndex(Ljava/util/List;I)Lio/trino/operator/PagesIndex;
@394
+#<init>(ZZ)V

+###io/trino/operator/WorkProcessor$ProcessState$Type
@351
+#values()[Lio/trino/operator/WorkProcessor$ProcessState$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/WorkProcessor$ProcessState$Type;

+###io/trino/operator/ScanFilterAndProjectOperator$ScanFilterAndProjectOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSourceProvider;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lio/trino/metadata/TableHandle;Ljava/lang/Iterable;Lio/trino/spi/connector/DynamicFilter;Ljava/util/List;Lio/airlift/units/DataSize;I)V
+#getOperatorId()I
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SourceOperator;
+#create(Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/operator/DriverYieldSignal;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorSourceOperator;
+#createAdapterOperator(Lio/trino/Session;Lio/trino/memory/context/MemoryTrackingContext;Lio/trino/operator/DriverYieldSignal;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorSourceOperator;
+#noMoreOperators()V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;

+###io/trino/operator/PipelineStatus
@351
+#<init>(IIIII)V
+#getQueuedDrivers()I
+#getRunningDrivers()I
+#getBlockedDrivers()I
+#getQueuedPartitionedDrivers()I
+#getRunningPartitionedDrivers()I
@364
+#<init>(IIIIJIJ)V
+#getQueuedPartitionedSplitsWeight()J
+#getRunningPartitionedSplitsWeight()J
-#<init>(IIIII)V

+###io/trino/operator/RowReference
@352
+#compareTo(Lio/trino/operator/RowIdComparisonStrategy;J)I
+#equals(Lio/trino/operator/RowIdHashStrategy;J)Z
+#hash(Lio/trino/operator/RowIdHashStrategy;)J
+#allocateRowId()J

+###io/trino/operator/AbstractRowChangeOperator$State
@352
+#values()[Lio/trino/operator/AbstractRowChangeOperator$State;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/AbstractRowChangeOperator$State;
@406
-###io/trino/operator/AbstractRowChangeOperator$State

+###io/trino/operator/ExplainAnalyzeOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Z)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
@374
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Z)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Z)V
@405
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;ZLio/trino/client/NodeVersion;)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Z)V

+###io/trino/operator/JoinOperatorFactory$OuterOperatorFactoryResult
@351
+#<init>(Lio/trino/operator/OperatorFactory;Lio/trino/operator/PipelineExecutionStrategy;)V
+#getOuterOperatorFactory()Lio/trino/operator/OperatorFactory;
+#getBuildExecutionStrategy()Lio/trino/operator/PipelineExecutionStrategy;
@358
-###io/trino/operator/JoinOperatorFactory$OuterOperatorFactoryResult

+###io/trino/operator/GroupedTopNRankAccumulator
@352
+#<init>(Lio/trino/operator/RowIdComparisonHashStrategy;ILjava/util/function/LongConsumer;)V
+#sizeOf()J
+#add(JLio/trino/operator/RowReference;)Z
+#drainTo(JLio/trino/array/LongBigArray;Lio/trino/array/LongBigArray;)J
+#drainTo(JLio/trino/array/LongBigArray;)J

+###io/trino/operator/scalar/JsonFunctions
@351
+#castVarcharToJsonPath(Lio/airlift/slice/Slice;)Lio/trino/operator/scalar/JsonPath;
+#castCharToJsonPath(Ljava/lang/Long;Lio/airlift/slice/Slice;)Lio/trino/operator/scalar/JsonPath;
+#varcharIsJsonScalar(Lio/airlift/slice/Slice;)Z
+#isJsonScalar(Lio/airlift/slice/Slice;)Z
+#jsonFormat(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#jsonParse(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#varcharJsonArrayLength(Lio/airlift/slice/Slice;)Ljava/lang/Long;
+#jsonArrayLength(Lio/airlift/slice/Slice;)Ljava/lang/Long;
+#varcharJsonArrayContains(Lio/airlift/slice/Slice;Z)Ljava/lang/Boolean;
+#jsonArrayContains(Lio/airlift/slice/Slice;Z)Ljava/lang/Boolean;
+#varcharJsonArrayContains(Lio/airlift/slice/Slice;J)Ljava/lang/Boolean;
+#jsonArrayContains(Lio/airlift/slice/Slice;J)Ljava/lang/Boolean;
+#varcharJsonArrayContains(Lio/airlift/slice/Slice;D)Ljava/lang/Boolean;
+#jsonArrayContains(Lio/airlift/slice/Slice;D)Ljava/lang/Boolean;
+#varcharJsonArrayContains(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Ljava/lang/Boolean;
+#jsonArrayContains(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Ljava/lang/Boolean;
+#varcharJsonArrayGet(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#jsonArrayGet(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#varcharJsonExtractScalar(Lio/airlift/slice/Slice;Lio/trino/operator/scalar/JsonPath;)Lio/airlift/slice/Slice;
+#jsonExtractScalar(Lio/airlift/slice/Slice;Lio/trino/operator/scalar/JsonPath;)Lio/airlift/slice/Slice;
+#varcharJsonExtract(Lio/airlift/slice/Slice;Lio/trino/operator/scalar/JsonPath;)Lio/airlift/slice/Slice;
+#jsonExtract(Lio/airlift/slice/Slice;Lio/trino/operator/scalar/JsonPath;)Lio/airlift/slice/Slice;
+#varcharJsonSize(Lio/airlift/slice/Slice;Lio/trino/operator/scalar/JsonPath;)Ljava/lang/Long;
+#jsonSize(Lio/airlift/slice/Slice;Lio/trino/operator/scalar/JsonPath;)Ljava/lang/Long;

+###io/trino/operator/scalar/ArrayPositionFunction
@351
+#arrayPosition(Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;Z)J
+#arrayPosition(Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;J)J
+#arrayPosition(Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;D)J
+#arrayPosition(Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;Ljava/lang/Object;)J

+###io/trino/operator/scalar/JoniRegexpFunctions
@351
+#regexpLike(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Z
+#regexpReplace(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Lio/airlift/slice/Slice;
+#regexpReplace(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#regexpExtractAll(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Lio/trino/spi/block/Block;
+#regexpExtractAll(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;J)Lio/trino/spi/block/Block;
+#regexpExtract(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Lio/airlift/slice/Slice;
+#regexpExtract(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;J)Lio/airlift/slice/Slice;
+#regexpSplit(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)Lio/trino/spi/block/Block;
+#regexpPosition(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)J
+#regexpPosition(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;J)J
+#regexpPosition(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;JJ)J
+#regexpCount(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;)J
@389
+#getSearchingOffset(Lio/airlift/joni/Matcher;II)I

+###io/trino/operator/scalar/ElementToArrayConcatFunction
@351
+#<init>()V

+###io/trino/operator/scalar/IdentityCast
@351

+###io/trino/operator/scalar/MathFunctions$Truncate
@351
+#<init>()V
+#truncateShort(JJ)J
+#truncateLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#truncateLongShort(JLio/airlift/slice/Slice;)J
@368
+#truncateLong(JLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#truncateLongShort(JLio/trino/spi/type/Int128;)J
-#truncateLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
-#truncateLongShort(JLio/airlift/slice/Slice;)J

+###io/trino/operator/scalar/ArrayContainsSequence
@351
+#containsSequence(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Ljava/lang/Boolean;

+###io/trino/operator/scalar/SplitToMultimapFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#splitToMultimap(Lio/trino/spi/type/Type;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/HmacFunctions
@351
+#hmacMd5(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#hmacSha1(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#hmacSha256(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#hmacSha512(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/JsonStringToArrayCast
@351

+###io/trino/operator/scalar/ArraySortComparatorFunction$ComparatorBooleanLambda
@351
+#apply(Ljava/lang/Boolean;Ljava/lang/Boolean;)Ljava/lang/Long;

+###io/trino/operator/scalar/MathFunctions$Abs
@351
+#absShort(J)J
+#absLong(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@368
+#absLong(Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
-#absLong(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/ArrayCardinalityFunction
@351
+#arrayCardinality(Lio/trino/spi/block/Block;)J

+###io/trino/operator/scalar/MathFunctions$Floor
@351
+#floorShort(JJ)J
+#floorLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#floorLongShort(JLio/airlift/slice/Slice;)J
@368
+#floorLong(JLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#floorLongShort(JLio/trino/spi/type/Int128;)J
-#floorLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
-#floorLongShort(JLio/airlift/slice/Slice;)J

+###io/trino/operator/scalar/StringFunctions
@351
+#chr(J)Lio/airlift/slice/Slice;
+#codepoint(Lio/airlift/slice/Slice;)J
+#length(Lio/airlift/slice/Slice;)J
+#charLength(JLio/airlift/slice/Slice;)J
+#spaceTrimmedLength(Lio/airlift/slice/Slice;)J
+#replace(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#replace(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#reverse(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#stringPosition(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)J
+#stringPosition(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;J)J
+#substring(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#charSubstring(Ljava/lang/Long;Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#substring(Lio/airlift/slice/Slice;JJ)Lio/airlift/slice/Slice;
+#charSubstr(Ljava/lang/Long;Lio/airlift/slice/Slice;JJ)Lio/airlift/slice/Slice;
+#split(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;
+#split(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;J)Lio/trino/spi/block/Block;
+#splitPart(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#leftTrim(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#charLeftTrim(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#rightTrim(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#charRightTrim(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#trim(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#charTrim(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#leftTrim(Lio/airlift/slice/Slice;[I)Lio/airlift/slice/Slice;
+#charLeftTrim(Lio/airlift/slice/Slice;[I)Lio/airlift/slice/Slice;
+#rightTrim(Lio/airlift/slice/Slice;[I)Lio/airlift/slice/Slice;
+#charRightTrim(Lio/airlift/slice/Slice;[I)Lio/airlift/slice/Slice;
+#trim(Lio/airlift/slice/Slice;[I)Lio/airlift/slice/Slice;
+#charTrim(Lio/airlift/slice/Slice;[I)Lio/airlift/slice/Slice;
+#castVarcharToCodePoints(Lio/airlift/slice/Slice;)[I
+#castCharToCodePoints(Ljava/lang/Long;Lio/airlift/slice/Slice;)[I
+#lower(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#charLower(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#upper(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#charUpper(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#leftPad(Lio/airlift/slice/Slice;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#rightPad(Lio/airlift/slice/Slice;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#levenshteinDistance(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)J
+#hammingDistance(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)J
+#normalize(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromUtf8(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromUtf8(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromUtf8(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#toUtf8(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#concat(Ljava/lang/Long;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#startsWith(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Z
+#translate(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@356
+#soundex(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/RowToJsonCast
@351
+#toJson(Ljava/util/List;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;
@357
+#toJsonObject(Ljava/util/List;Ljava/util/List;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;
+#toJsonArray(Ljava/util/List;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;
-#toJson(Ljava/util/List;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;
@399
-#toJsonArray(Ljava/util/List;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/GenericHashCodeOperator
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/JsonPath
@351
+#<init>(Ljava/lang/String;)V
+#pattern()Ljava/lang/String;
+#getScalarExtractor()Lio/trino/operator/scalar/JsonExtract$JsonExtractor;
+#getObjectExtractor()Lio/trino/operator/scalar/JsonExtract$JsonExtractor;
+#getSizeExtractor()Lio/trino/operator/scalar/JsonExtract$JsonExtractor;
+#toString()Ljava/lang/String;

+###io/trino/operator/scalar/ArrayJoin
@351
+#createState()Ljava/lang/Object;
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#arrayJoin(Ljava/lang/invoke/MethodHandle;Ljava/lang/Object;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#arrayJoin(Ljava/lang/invoke/MethodHandle;Ljava/lang/Object;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/ArrayRemoveFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#remove(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Lio/trino/spi/block/Block;
+#remove(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;D)Lio/trino/spi/block/Block;
+#remove(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Z)Lio/trino/spi/block/Block;
+#remove(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Ljava/lang/Object;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArrayDistinctFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#distinct(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#bigintDistinct(Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArrayIntersectFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#intersect(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/BooleanToBooleanFunction
@351
+#apply(Ljava/lang/Boolean;)Ljava/lang/Boolean;

+###io/trino/operator/scalar/JsonExtract$JsonSizeExtractor
@351
+#<init>()V
+#extract(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Long;
+#extract(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;

+###io/trino/operator/scalar/WordStemFunction
@351
+#wordStem(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#wordStem(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/DoubleToBooleanFunction
@351
+#apply(Ljava/lang/Double;)Ljava/lang/Boolean;

+###io/trino/operator/scalar/MapConcatFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#createMapState(Lio/trino/spi/type/MapType;)Ljava/lang/Object;
+#mapConcat(Lio/trino/spi/type/MapType;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Ljava/lang/Object;[Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
@376
+#mapConcat(Lio/trino/spi/type/MapType;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Ljava/lang/Object;[Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
-#mapConcat(Lio/trino/spi/type/MapType;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Ljava/lang/Object;[Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/MapElementAtFunction
@351
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#elementAt(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Z)Ljava/lang/Object;
+#elementAt(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Object;
+#elementAt(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;D)Ljava/lang/Object;
+#elementAt(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Ljava/lang/Object;)Ljava/lang/Object;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/ArrayElementAtFunction
@351
+#longElementAt(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Long;
+#booleanElementAt(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Boolean;
+#doubleElementAt(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Double;
+#sliceElementAt(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Object;

+###io/trino/operator/scalar/SessionFunctions
@351
+#currentUser(Lio/trino/spi/connector/ConnectorSession;)Lio/airlift/slice/Slice;
+#currentPath(Lio/trino/spi/connector/ConnectorSession;)Lio/airlift/slice/Slice;
@357
+#currentCatalog(Lio/trino/spi/connector/ConnectorSession;)Lio/airlift/slice/Slice;
+#currentSchema(Lio/trino/spi/connector/ConnectorSession;)Lio/airlift/slice/Slice;
@359
+#currentGroups(Lio/trino/spi/connector/ConnectorSession;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArrayToElementConcatFunction
@351
+#<init>()V

+###io/trino/operator/scalar/ArraySortFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#sort(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/JsonStringToRowCast
@351

+###io/trino/operator/scalar/ArrayJoin$ArrayJoinWithNullReplacement
@351
+#<init>()V
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/ArrayConcatFunction
@351
+#createState(Lio/trino/spi/type/Type;)Ljava/lang/Object;
+#concat(Lio/trino/spi/type/Type;Ljava/lang/Object;[Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArrayToJsonCast
@351
+#toJson(Lio/trino/util/JsonUtil$JsonGeneratorWriter;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/GenericDistinctFromOperator
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneOperators
@351

+###io/trino/operator/scalar/timestamptz/LastDayOfMonth
@351
+#lastDayOfMonth(J)J
+#lastDayOfMonth(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/ExtractYear
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/ExtractSecond
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/CurrentTimestamp
@351
+#shortTimestamp(JLio/trino/spi/connector/ConnectorSession;Ljava/lang/Long;)J
+#longTimestamp(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestampWithTimeZone;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/AtTimeZoneWithOffset
@351
+#atTimeZone(JJ)J
+#atTimeZone(Lio/trino/spi/type/LongTimestampWithTimeZone;J)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/DateToTimestampWithTimeZoneCast
@351
+#castToShort(Lio/trino/spi/connector/ConnectorSession;J)J
+#castToLong(Lio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/ExtractMillisecond
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneToTimestampWithTimeZoneCast
@351
+#shortToShort(JJJ)J
+#shortToLong(J)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#longToShort(JLio/trino/spi/type/LongTimestampWithTimeZone;)J
+#longToLong(JLio/trino/spi/type/LongTimestampWithTimeZone;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/DateFormat
@351
+#format(Lio/trino/spi/connector/ConnectorSession;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#format(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestampWithTimeZone;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneToTimestampCast
@351
+#shortToShort(JJ)J
+#longToShort(JLio/trino/spi/type/LongTimestampWithTimeZone;)J
+#shortToLong(J)Lio/trino/spi/type/LongTimestamp;
+#longToLong(JLio/trino/spi/type/LongTimestampWithTimeZone;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamptz/ExtractMonth
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/ExtractYearOfWeek
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneOperators$TimestampMinusIntervalDayToSecond
@351
+#<init>()V
+#subtract(JJJ)J
+#subtract(Lio/trino/spi/type/LongTimestampWithTimeZone;J)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/ExtractWeekOfYear
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/ExtractDayOfYear
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/AtTimeZone
@351
+#atTimeZone(JLio/airlift/slice/Slice;)J
+#atTimeZone(Lio/trino/spi/type/LongTimestampWithTimeZone;Lio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneOperators$TimestampPlusIntervalDayToSecond
@351
+#<init>()V
+#add(JJJ)J
+#add(Lio/trino/spi/type/LongTimestampWithTimeZone;J)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/VarcharToTimestampWithTimeZoneCast
@351
+#castToShort(JLio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)J
+#castToLong(JLio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneOperators$TimestampMinusTimestamp
@351
+#<init>()V
+#subtract(JJ)J
+#subtract(Lio/trino/spi/type/LongTimestampWithTimeZone;Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/DateDiff
@351
+#diff(Lio/airlift/slice/Slice;JJ)J
+#diff(Lio/airlift/slice/Slice;Lio/trino/spi/type/LongTimestampWithTimeZone;Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimeZoneMinute
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/FormatDateTime
@351
+#format(Lio/trino/spi/connector/ConnectorSession;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#format(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestampWithTimeZone;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamptz/ToUnixTime
@351
+#toUnixTime(JJ)D
+#toUnixTime(Lio/trino/spi/type/LongTimestampWithTimeZone;)D
@357
+#toUnixTime(J)D
-#toUnixTime(JJ)D

+###io/trino/operator/scalar/timestamptz/ToIso8601
@351
+#toIso8601(JJ)Lio/airlift/slice/Slice;
+#toIso8601(JLio/trino/spi/type/LongTimestampWithTimeZone;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneToTimeCast
@351
+#cast(JJ)J
+#cast(JLio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneOperators$IntervalYearToMonthPlusTimestamp
@351
+#<init>()V
+#add(JJ)J
+#add(JLio/trino/spi/type/LongTimestampWithTimeZone;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/ExtractHour
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneOperators$IntervalDayToSecondPlusTimestamp
@351
+#<init>()V
+#add(JJJ)J
+#add(JLio/trino/spi/type/LongTimestampWithTimeZone;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/DateAdd
@351
+#add(JLio/airlift/slice/Slice;JJ)J
+#add(Lio/airlift/slice/Slice;JLio/trino/spi/type/LongTimestampWithTimeZone;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneOperators$TimestampPlusIntervalYearToMonth
@351
+#<init>()V
+#add(JJ)J
+#add(Lio/trino/spi/type/LongTimestampWithTimeZone;J)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/ExtractDayOfWeek
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneToTimeWithTimeZoneCast
@351
+#shortToShort(JJ)J
+#longToShort(JLio/trino/spi/type/LongTimestampWithTimeZone;)J
+#shortToLong(J)Lio/trino/spi/type/LongTimeWithTimeZone;
+#longToLong(JLio/trino/spi/type/LongTimestampWithTimeZone;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneOperators$TimestampMinusIntervalYearToMonth
@351
+#<init>()V
+#subtract(JJ)J
+#subtract(Lio/trino/spi/type/LongTimestampWithTimeZone;J)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamptz/ExtractQuarter
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/ExtractMinute
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/ExtractDay
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneToDateCast
@351
+#cast(J)J
+#cast(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimeZoneHour
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestampWithTimeZone;)J

+###io/trino/operator/scalar/timestamptz/TimestampWithTimeZoneToVarcharCast
@351
+#cast(JJ)Lio/airlift/slice/Slice;
+#cast(JLio/trino/spi/type/LongTimestampWithTimeZone;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamptz/DateTrunc
@351
+#truncate(Lio/airlift/slice/Slice;J)J
+#truncate(Lio/airlift/slice/Slice;Lio/trino/spi/type/LongTimestampWithTimeZone;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/LongToBooleanFunction
@351
+#apply(Ljava/lang/Long;)Ljava/lang/Boolean;

+###io/trino/operator/scalar/ArrayTransformFunction
@351

+###io/trino/operator/scalar/ParametricScalar
@351
+#<init>(Lio/trino/metadata/Signature;Lio/trino/operator/scalar/ScalarHeader;Lio/trino/operator/ParametricImplementationsGroup;Z)V
+#getImplementations()Lio/trino/operator/ParametricImplementationsGroup;
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#<init>(Lio/trino/spi/function/Signature;Lio/trino/operator/scalar/ScalarHeader;Lio/trino/operator/ParametricImplementationsGroup;Z)V
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#<init>(Lio/trino/metadata/Signature;Lio/trino/operator/scalar/ScalarHeader;Lio/trino/operator/ParametricImplementationsGroup;Z)V
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/InvokeFunction$InvokeLambda
@351
+#apply()Ljava/lang/Object;

+###io/trino/operator/scalar/MapZipWithFunction$MapZipWithLambda
@351
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/operator/scalar/ColorFunctions
@351
+#color(Lio/airlift/slice/Slice;)J
+#rgb(JJJ)J
+#color(DDDJJ)J
+#color(DJJ)J
+#render(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#render(JJ)Lio/airlift/slice/Slice;
+#render(DJ)Lio/airlift/slice/Slice;
+#render(Z)Lio/airlift/slice/Slice;
+#bar(DJ)Lio/airlift/slice/Slice;
+#bar(DJJJ)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/JsonToArrayCast
@351
+#toArray(Lio/trino/spi/type/ArrayType;Lio/trino/util/JsonUtil$BlockBuilderAppender;Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/RowToRowCast
@351
+#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@366
+#getFunctionDependencies(Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies(Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies(Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/AbstractGreatestLeast
@351
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/ArrayReduceFunction
@351
+#reduce(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Ljava/lang/Object;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;Lio/trino/sql/gen/lambda/UnaryFunctionInterface;)Ljava/lang/Object;

+###io/trino/operator/scalar/WilsonInterval
@351
+#wilsonIntervalLower(JJD)D
+#wilsonIntervalUpper(JJD)D

+###io/trino/operator/scalar/ArrayMinFunction
@351
+#longArrayMin(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Long;
+#booleanArrayMin(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Boolean;
+#doubleArrayMin(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Double;
+#objectArrayMin(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Object;

+###io/trino/operator/scalar/CharacterStringCasts
@351
+#varcharToVarcharCast(Ljava/lang/Long;Ljava/lang/Long;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#charToCharCast(Ljava/lang/Long;Ljava/lang/Long;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#varcharToCharCast(Ljava/lang/Long;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#charToVarcharCast(Ljava/lang/Long;Ljava/lang/Long;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#varcharToCharSaturatedFloorCast(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#codePointsToSliceUtf8(Ljava/util/List;)Lio/airlift/slice/Slice;
@356
+#varcharToVarcharSaturatedFloorCast(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#codePointsToSliceUtf8(Lit/unimi/dsi/fastutil/ints/IntList;)Lio/airlift/slice/Slice;
-#codePointsToSliceUtf8(Ljava/util/List;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/JsonToMapCast
@351
+#toMap(Lio/trino/spi/type/MapType;Lio/trino/util/JsonUtil$BlockBuilderAppender;Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArraysOverlapFunction$LongComparison
@351
+#compare(JJ)J

+###io/trino/operator/scalar/ArraySubscriptOperator
@351
+#longSubscript(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Long;
+#booleanSubscript(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Boolean;
+#doubleSubscript(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Double;
+#sliceSubscript(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Lio/airlift/slice/Slice;
+#objectSubscript(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Ljava/lang/Object;
+#checkArrayIndex(J)V
+#checkIndex(Lio/trino/spi/block/Block;J)V

+###io/trino/operator/scalar/MathFunctions$RoundN
@351
+#<init>()V
+#roundNShort(JJJJ)J
+#roundNLong(JJLio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#roundNShortLong(JJJJ)Lio/airlift/slice/Slice;
@368
+#roundNLong(JJLio/trino/spi/type/Int128;J)Lio/trino/spi/type/Int128;
+#roundNShortLong(JJJJ)Lio/trino/spi/type/Int128;
-#roundNLong(JJLio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
-#roundNShortLong(JJJJ)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/MapSubscriptOperator
@351
+#<init>()V
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#subscript(Lio/trino/operator/scalar/MapSubscriptOperator$MissingKeyExceptionFactory;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;Z)Ljava/lang/Object;
+#subscript(Lio/trino/operator/scalar/MapSubscriptOperator$MissingKeyExceptionFactory;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;J)Ljava/lang/Object;
+#subscript(Lio/trino/operator/scalar/MapSubscriptOperator$MissingKeyExceptionFactory;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;D)Ljava/lang/Object;
+#subscript(Lio/trino/operator/scalar/MapSubscriptOperator$MissingKeyExceptionFactory;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;Ljava/lang/Object;)Ljava/lang/Object;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/ArrayUnionFunction
@351
+#union(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#bigintUnion(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
@376
+#union(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
-#union(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/MultimapFromEntriesFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#multimapFromEntries(Lio/trino/spi/type/MapType;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
@376
+#multimapFromEntries(Lio/trino/spi/type/MapType;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
-#multimapFromEntries(Lio/trino/spi/type/MapType;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/MapValues
@351
+#getValues(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/JsonPathTokenizer
@351
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###io/trino/operator/scalar/ApplyFunction
@351
+#apply(Ljava/lang/Object;Lio/trino/sql/gen/lambda/UnaryFunctionInterface;)Ljava/lang/Object;

+###io/trino/operator/scalar/MapToJsonCast
@351
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#toJson(Lio/trino/util/JsonUtil$ObjectKeyProvider;Lio/trino/util/JsonUtil$JsonGeneratorWriter;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#specialize(Lio/trino/spi/function/BoundSignature;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/GenericLessThanOperator
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/MathFunctions$Round
@351
+#roundShort(JJ)J
+#roundLongLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#roundLongShort(JLio/airlift/slice/Slice;)J
@368
+#roundLongLong(JLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#roundLongShort(JLio/trino/spi/type/Int128;)J
-#roundLongLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
-#roundLongShort(JLio/airlift/slice/Slice;)J

+###io/trino/operator/scalar/ArrayAnyMatchFunction
@351
+#anyMatchObject(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/ObjectToBooleanFunction;)Ljava/lang/Boolean;
+#anyMatchLong(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/LongToBooleanFunction;)Ljava/lang/Boolean;
+#anyMatchDouble(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/DoubleToBooleanFunction;)Ljava/lang/Boolean;
+#anyMatchBoolean(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/BooleanToBooleanFunction;)Ljava/lang/Boolean;

+###io/trino/operator/scalar/HyperLogLogFunctions
@351
+#cardinality(Lio/airlift/slice/Slice;)J
+#emptyApproxSet()Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/ConcatFunction
@351
+#concat([Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/CastFromUnknownOperator
@351
+#<init>()V
+#handleNonNull(Z)Ljava/lang/Object;

+###io/trino/operator/scalar/ChoicesScalarFunctionImplementation
@351
+#<init>(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/lang/invoke/MethodHandle;)V
+#<init>(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#<init>(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#<init>(Lio/trino/metadata/FunctionBinding;Ljava/util/List;)V
+#getChoices()Ljava/util/List;
+#getScalarFunctionInvoker(Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@366
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/lang/invoke/MethodHandle;)V
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#<init>(Lio/trino/metadata/BoundSignature;Ljava/util/List;)V
-#<init>(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/lang/invoke/MethodHandle;)V
-#<init>(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
-#<init>(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
-#<init>(Lio/trino/metadata/FunctionBinding;Ljava/util/List;)V
@395
-###io/trino/operator/scalar/ChoicesScalarFunctionImplementation

+###io/trino/operator/scalar/ArrayMaxFunction
@351
+#longArrayMax(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Long;
+#booleanArrayMax(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Boolean;
+#doubleArrayMax(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Double;
+#objectArrayMax(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Object;
+#doubleTypeArrayMax(Lio/trino/spi/block/Block;)Ljava/lang/Double;
+#realTypeArrayMax(Lio/trino/spi/block/Block;)Ljava/lang/Long;

+###io/trino/operator/scalar/MapTransformValuesFunction
@351
+#createState(Lio/trino/spi/type/MapType;)Ljava/lang/Object;

+###io/trino/operator/scalar/ChoicesScalarFunctionImplementation$ScalarImplementationChoice
@351
+#<init>(Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#getMethodHandle()Ljava/lang/invoke/MethodHandle;
+#getInstanceFactory()Ljava/util/Optional;
+#getLambdaInterfaces()Ljava/util/List;
+#getInvocationConvention()Lio/trino/spi/function/InvocationConvention;
+#getScore()I
@395
-###io/trino/operator/scalar/ChoicesScalarFunctionImplementation$ScalarImplementationChoice

+###io/trino/operator/scalar/MapTransformKeysFunction
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#createState(Lio/trino/spi/type/MapType;)Ljava/lang/Object;

+###io/trino/operator/scalar/DateTimeFunctions$FromUnixtimeNanosDecimal
@351
+#fromLong(JLio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestamp;
+#fromShort(JJ)Lio/trino/spi/type/LongTimestamp;
@355
+#fromLong(JLio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#fromShort(JLio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimestampWithTimeZone;
-#fromLong(JLio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestamp;
-#fromShort(JJ)Lio/trino/spi/type/LongTimestamp;
@368
+#fromLong(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/Int128;)Lio/trino/spi/type/LongTimestampWithTimeZone;
-#fromLong(JLio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/EmptyMapConstructor
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#map()Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ConcatWsFunction$ConcatArrayWs
@351
+#<init>()V
+#concatWsArray(Lio/airlift/slice/Slice;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/ArraySortComparatorFunction$ComparatorLongLambda
@351
+#apply(Ljava/lang/Long;Ljava/lang/Long;)Ljava/lang/Long;

+###io/trino/operator/scalar/VersionFunction
@352
+#<init>(Ljava/lang/String;)V
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#getVersion(Ljava/lang/String;)Lio/airlift/slice/Slice;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#specialize(Lio/trino/spi/function/BoundSignature;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/MapCardinalityFunction
@351
+#mapCardinality(Lio/trino/spi/block/Block;)J

+###io/trino/operator/scalar/TryFunction
@351
+#tryLong(Lio/trino/operator/scalar/TryFunction$TryLongLambda;)Ljava/lang/Long;
+#tryDouble(Lio/trino/operator/scalar/TryFunction$TryDoubleLambda;)Ljava/lang/Double;
+#tryBoolean(Lio/trino/operator/scalar/TryFunction$TryBooleanLambda;)Ljava/lang/Boolean;
+#tryObject(Lio/trino/operator/scalar/TryFunction$TryObjectLambda;)Ljava/lang/Object;
+#evaluate(Ljava/util/function/Supplier;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/operator/scalar/TDigestFunctions
@351
+#valueAtQuantile(Lio/airlift/stats/TDigest;D)D
+#valuesAtQuantiles(Lio/airlift/stats/TDigest;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#verifyWeight(D)D

+###io/trino/operator/scalar/ArraySliceFunction
@351
+#slice(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;JJ)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/MapKeys
@351
+#getKeys(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArrayConstructor
@351
+#<init>()V

+###io/trino/operator/scalar/time/TimeOperators
@351
+#subtract(JJ)J
+#castFromVarchar(JLio/airlift/slice/Slice;)J
+#castToTime(JJJ)J
+#timePlusIntervalDayToSecond(JJ)J
+#intervalDayToSecondPlusTime(JJ)J
+#timeMinusIntervalDayToSecond(JJ)J
+#castToVarchar(JJ)Lio/airlift/slice/Slice;
+#add(JJ)J

+###io/trino/operator/scalar/time/TimeToTimeWithTimeZoneCast
@351
+#castToShort(JLio/trino/spi/connector/ConnectorSession;J)J
+#castToLong(JLio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/time/TimeToTimestampCast
@351
+#castToShort(JJLio/trino/spi/connector/ConnectorSession;J)J
+#castToLong(JJLio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/time/TimeToTimestampWithTimeZoneCast
@351
+#castToShort(JJLio/trino/spi/connector/ConnectorSession;J)J
+#castToLong(JJLio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/time/LocalTimeFunction
@351
+#localTime(JLio/trino/spi/connector/ConnectorSession;Ljava/lang/Long;)J

+###io/trino/operator/scalar/time/TimeFunctions
@351
+#millisecond(J)J
+#second(J)J
+#minute(J)J
+#hour(J)J
+#truncate(Lio/airlift/slice/Slice;J)J
+#dateAdd(JLio/airlift/slice/Slice;JJ)J
+#dateDiff(Lio/airlift/slice/Slice;JJ)J

+###io/trino/operator/scalar/ArrayNgramsFunction
@351
+#ngrams(Lio/trino/spi/block/Block;J)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/SequenceFunction
@351
+#sequence(JJJ)Lio/trino/spi/block/Block;
+#sequenceDefaultStep(JJ)Lio/trino/spi/block/Block;
+#sequenceDateDefaultStep(JJ)Lio/trino/spi/block/Block;
+#sequenceDateDayToSecond(JJJ)Lio/trino/spi/block/Block;
+#sequenceDateYearToMonth(Lio/trino/spi/connector/ConnectorSession;JJJ)Lio/trino/spi/block/Block;
+#checkValidStep(JJJ)V
+#checkMaxEntry(I)V
@352
+#sequenceDateYearToMonth(JJJ)Lio/trino/spi/block/Block;
-#sequenceDateYearToMonth(Lio/trino/spi/connector/ConnectorSession;JJJ)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/Re2JCastToRegexpFunction
@351
+#castVarcharToRe2JRegexp(II)Lio/trino/metadata/SqlOperator;
+#castCharToRe2JRegexp(II)Lio/trino/metadata/SqlOperator;
+#castToRegexp(IIZJLio/airlift/slice/Slice;)Lio/trino/type/Re2JRegexp;
@379
+#castVarcharToRe2JRegexp(II)Lio/trino/metadata/SqlScalarFunction;
+#castCharToRe2JRegexp(II)Lio/trino/metadata/SqlScalarFunction;
-#castVarcharToRe2JRegexp(II)Lio/trino/metadata/SqlOperator;
-#castCharToRe2JRegexp(II)Lio/trino/metadata/SqlOperator;

+###io/trino/operator/scalar/RepeatFunction
@351
+#repeat(Ljava/lang/Boolean;J)Lio/trino/spi/block/Block;
+#repeat(Lio/trino/spi/type/Type;Ljava/lang/Object;J)Lio/trino/spi/block/Block;
+#repeat(Lio/trino/spi/type/Type;Ljava/lang/Long;J)Lio/trino/spi/block/Block;
+#repeat(Lio/trino/spi/type/Type;Ljava/lang/Boolean;J)Lio/trino/spi/block/Block;
+#repeat(Lio/trino/spi/type/Type;Ljava/lang/Double;J)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/annotations/OperatorValidator
@351
+#validateOperator(Lio/trino/spi/function/OperatorType;Lio/trino/spi/type/TypeSignature;Ljava/util/List;)V

+###io/trino/operator/scalar/annotations/ParametricScalarImplementation$Parser
@351
+#getArgumentNativeContainerTypes()Ljava/util/List;
+#getSpecializedTypeParameters()Ljava/util/Map;
+#getReturnNativeContainerType()Ljava/lang/Class;
+#getChoice()Lio/trino/operator/scalar/annotations/ParametricScalarImplementation$ParametricScalarImplementationChoice;
+#getSpecializedSignature()Lio/trino/operator/scalar/annotations/ParametricScalarImplementation$SpecializedSignature;
+#getSignature()Lio/trino/metadata/Signature;
@395
+#getSignature()Lio/trino/spi/function/Signature;
-#getSignature()Lio/trino/metadata/Signature;

+###io/trino/operator/scalar/annotations/ScalarImplementationHeader
@351
+#fromAnnotatedElement(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/List;
+#getName()Ljava/lang/String;
+#getOperatorType()Ljava/util/Optional;
+#getDescription()Ljava/util/Optional;
+#isHidden()Z
+#isDeterministic()Z
+#getHeader()Lio/trino/operator/scalar/ScalarHeader;

+###io/trino/operator/scalar/annotations/ParametricScalarImplementation
@351
+#isNullable()Z
+#getArgumentDefinitions()Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/util/Optional;
+#hasSpecializedTypeParameters()Z
+#getSignature()Lio/trino/metadata/Signature;
+#getChoices()Ljava/util/List;
@364
+#withAlias(Ljava/lang/String;)Lio/trino/operator/scalar/annotations/ParametricScalarImplementation;
+#withAlias(Ljava/lang/String;)Lio/trino/operator/ParametricImplementation;
@366
+#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
-#isNullable()Z
-#getArgumentDefinitions()Ljava/util/List;
@395
+#getFunctionNullability()Lio/trino/spi/function/FunctionNullability;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionDependencies;)Ljava/util/Optional;
+#getSignature()Lio/trino/spi/function/Signature;
-#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Ljava/util/Optional;
-#getSignature()Lio/trino/metadata/Signature;

+###io/trino/operator/scalar/annotations/ParametricScalarImplementation$Builder
@351
+#<init>(Lio/trino/metadata/Signature;Ljava/util/List;Ljava/util/Map;Ljava/lang/Class;)V
+#build()Lio/trino/operator/scalar/annotations/ParametricScalarImplementation;
@395
+#<init>(Lio/trino/spi/function/Signature;Ljava/util/List;Ljava/util/Map;Ljava/lang/Class;)V
-#<init>(Lio/trino/metadata/Signature;Ljava/util/List;Ljava/util/Map;Ljava/lang/Class;)V

+###io/trino/operator/scalar/annotations/ParametricScalarImplementation$ParametricScalarImplementationChoice
@351
+#getReturnConvention()Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;
+#hasConnectorSession()Z
+#getMethodHandle()Ljava/lang/invoke/MethodHandle;
+#getDependencies()Ljava/util/List;
+#getArgumentConventions()Ljava/util/List;
+#getLambdaInterfaces()Ljava/util/List;
+#checkDependencies()Z
+#getConstructorDependencies()Ljava/util/List;
+#getConstructor()Ljava/util/Optional;
+#compareTo(Lio/trino/operator/scalar/annotations/ParametricScalarImplementation$ParametricScalarImplementationChoice;)I
+#compareTo(Ljava/lang/Object;)I

+###io/trino/operator/scalar/annotations/ScalarFromAnnotationsParser
@351
+#parseFunctionDefinition(Ljava/lang/Class;)Ljava/util/List;
+#parseFunctionDefinitions(Ljava/lang/Class;)Ljava/util/List;

+###io/trino/operator/scalar/annotations/ParametricScalarImplementation$SpecializedSignature
@351
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/operator/scalar/Greatest
@351
+#<init>()V

+###io/trino/operator/scalar/FormatFunction
@351
+#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#sqlFormat(Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;Lio/trino/spi/block/Block;)Lio/airlift/slice/Slice;
@366
+#getFunctionDependencies(Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#getFunctionDependencies(Lio/trino/metadata/FunctionBinding;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies(Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies(Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/TryFunction$TryDoubleLambda
@351
+#apply()Ljava/lang/Double;

+###io/trino/operator/scalar/CombineHashFunction
@351
+#getHash(JJ)J

+###io/trino/operator/scalar/SplitToMapFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#splitToMap(Lio/trino/spi/type/Type;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArraySortComparatorFunction$ComparatorDoubleLambda
@351
+#apply(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Long;

+###io/trino/operator/scalar/JsonExtract
@351
+#extract(Lio/airlift/slice/Slice;Lio/trino/operator/scalar/JsonExtract$JsonExtractor;)Ljava/lang/Object;
+#generateExtractor(Ljava/lang/String;Lio/trino/operator/scalar/JsonExtract$JsonExtractor;)Lio/trino/operator/scalar/JsonExtract$JsonExtractor;
+#generateExtractor(Ljava/lang/String;Lio/trino/operator/scalar/JsonExtract$JsonExtractor;Z)Lio/trino/operator/scalar/JsonExtract$JsonExtractor;

+###io/trino/operator/scalar/ArrayFunctions
@351
+#arrayConstructor()Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ScalarHeader
@351
+#<init>(Ljava/util/Optional;ZZ)V
+#getDescription()Ljava/util/Optional;
+#isHidden()Z
+#isDeterministic()Z

+###io/trino/operator/scalar/ColorFunctions$SystemColor
@351
+#values()[Lio/trino/operator/scalar/ColorFunctions$SystemColor;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/scalar/ColorFunctions$SystemColor;
+#getName()Ljava/lang/String;
+#valueOf(I)Lio/trino/operator/scalar/ColorFunctions$SystemColor;

+###io/trino/operator/scalar/Re2JRegexpReplaceLambdaFunction
@351
+#<init>()V
+#regexpReplace(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;Lio/trino/sql/gen/lambda/UnaryFunctionInterface;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/ScalarFunctionImplementation
@351
+#getScalarFunctionInvoker(Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@395
-###io/trino/operator/scalar/ScalarFunctionImplementation

+###io/trino/operator/scalar/MapConstructor
@351
+#<init>()V
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#createMap(Lio/trino/spi/type/MapType;Ljava/lang/invoke/MethodHandle;Lio/trino/operator/scalar/MapConstructor$State;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/MapFromEntriesFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#mapFromEntries(Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/MapType;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
@376
+#mapFromEntries(Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/MapType;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
-#mapFromEntries(Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/type/MapType;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/GenericLessThanOrEqualOperator
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/Re2JRegexpFunctions
@351
+#regexpLike(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;)Z
+#regexpReplace(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;)Lio/airlift/slice/Slice;
+#regexpReplace(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#regexpExtractAll(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;)Lio/trino/spi/block/Block;
+#regexpExtractAll(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;J)Lio/trino/spi/block/Block;
+#regexpExtract(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;)Lio/airlift/slice/Slice;
+#regexpExtract(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;J)Lio/airlift/slice/Slice;
+#regexpSplit(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;)Lio/trino/spi/block/Block;
+#regexpPosition(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;)J
+#regexpPosition(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;J)J
+#regexpPosition(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;JJ)J
+#regexpCount(Lio/airlift/slice/Slice;Lio/trino/type/Re2JRegexp;)J

+###io/trino/operator/scalar/ZipFunction
@351
+#zip(Ljava/util/List;[Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/JsonExtract$ObjectFieldJsonExtractor
@351
+#<init>(Ljava/lang/String;Lio/trino/operator/scalar/JsonExtract$JsonExtractor;)V
+#<init>(Ljava/lang/String;Lio/trino/operator/scalar/JsonExtract$JsonExtractor;Z)V
+#extract(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;
+#processJsonObject(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;
+#processJsonArray(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;

+###io/trino/operator/scalar/ArraySortComparatorFunction$ComparatorObjectLambda
@351
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;

+###io/trino/operator/scalar/UrlFunctions
@351
+#urlExtractProtocol(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#urlExtractHost(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#urlExtractPort(Lio/airlift/slice/Slice;)Ljava/lang/Long;
+#urlExtractPath(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#urlExtractQuery(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#urlExtractFragment(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#urlExtractParameter(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#urlEncode(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#urlDecode(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/ZipWithFunction
@351
+#createState(Lio/trino/spi/type/ArrayType;)Ljava/lang/Object;
+#zipWith(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/type/ArrayType;Ljava/lang/Object;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;Lio/trino/sql/gen/lambda/BinaryFunctionInterface;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/TryFunction$TryBooleanLambda
@351
+#apply()Ljava/lang/Boolean;

+###io/trino/operator/scalar/ArrayAllMatchFunction
@351
+#allMatchObject(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/ObjectToBooleanFunction;)Ljava/lang/Boolean;
+#allMatchLong(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/LongToBooleanFunction;)Ljava/lang/Boolean;
+#allMatchDouble(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/DoubleToBooleanFunction;)Ljava/lang/Boolean;
+#allMatchBoolean(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/BooleanToBooleanFunction;)Ljava/lang/Boolean;

+###io/trino/operator/scalar/MapToMapCast
@351
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#checkLongIsNotNull(Ljava/lang/Long;)J
+#checkDoubleIsNotNull(Ljava/lang/Double;)D
+#checkBooleanIsNotNull(Ljava/lang/Boolean;)Z
+#checkSliceIsNotNull(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#checkBlockIsNotNull(Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#mapCast(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@376
+#mapCast(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
-#mapCast(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
@393
+#nativeValueWriter(Lio/trino/spi/type/Type;)Ljava/lang/invoke/MethodHandle;
@395
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/GenericXxHash64Operator
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/MathFunctions
@351
+#absTinyint(J)J
+#absSmallint(J)J
+#absInteger(J)J
+#abs(J)J
+#abs(D)D
+#absFloat(J)J
+#acos(D)D
+#asin(D)D
+#atan(D)D
+#atan2(DD)D
+#cbrt(D)D
+#ceilingTinyint(J)J
+#ceilingSmallint(J)J
+#ceilingInteger(J)J
+#ceiling(J)J
+#ceiling(D)D
+#ceilingFloat(J)J
+#truncate(D)D
+#truncate(J)J
+#cos(D)D
+#cosh(D)D
+#degrees(D)D
+#e()D
+#exp(D)D
+#floorTinyint(J)J
+#floorSmallint(J)J
+#floorInteger(J)J
+#floor(J)J
+#floor(D)D
+#floorFloat(J)J
+#ln(D)D
+#log(DD)D
+#log2(D)D
+#log10(D)D
+#modTinyint(JJ)J
+#modSmallint(JJ)J
+#modInteger(JJ)J
+#mod(JJ)J
+#mod(DD)D
+#modFloat(JJ)J
+#pi()D
+#power(DD)D
+#radians(D)D
+#random()D
+#randomTinyint(J)J
+#randomSmallint(J)J
+#randomInteger(J)J
+#random(J)J
+#randomTinyint(JJ)J
+#randomSmallint(JJ)J
+#randomInteger(JJ)J
+#random(JJ)J
+#inverseNormalCdf(DDD)D
+#normalCdf(DDD)D
+#inverseBetaCdf(DDD)D
+#betaCdf(DDD)D
+#roundTinyint(J)J
+#roundSmallint(J)J
+#roundInteger(J)J
+#round(J)J
+#roundTinyint(JJ)J
+#roundSmallint(JJ)J
+#roundInteger(JJ)J
+#round(JJ)J
+#round(D)D
+#roundFloat(J)J
+#round(DJ)D
+#roundFloat(JJ)J
+#sign(J)J
+#signInteger(J)J
+#signSmallint(J)J
+#signTinyint(J)J
+#sign(D)D
+#signFloat(J)J
+#sin(D)D
+#sqrt(D)D
+#tan(D)D
+#tanh(D)D
+#isNaN(D)Z
+#isFinite(D)Z
+#isInfinite(D)Z
+#NaN()D
+#infinity()D
+#toBase(JJ)Lio/airlift/slice/Slice;
+#fromBase(Lio/airlift/slice/Slice;J)J
+#widthBucket(DDDJ)J
+#widthBucket(DLio/trino/spi/block/Block;)J
+#cosineSimilarity(Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Ljava/lang/Double;
@362
+#nan()D
-#NaN()D
@394
+#isNaNReal(J)Z
@400
+#roundReal(J)J
+#roundReal(JJ)J
-#roundFloat(J)J
-#roundFloat(JJ)J

+###io/trino/operator/scalar/ArrayContains
@351
+#contains(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;Ljava/lang/Object;)Ljava/lang/Boolean;
+#contains(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;J)Ljava/lang/Boolean;
+#contains(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;Z)Ljava/lang/Boolean;
+#contains(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;D)Ljava/lang/Boolean;

+###io/trino/operator/scalar/ArraysOverlapFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#arraysOverlapInt(Lio/trino/operator/scalar/ArraysOverlapFunction$LongComparison;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Ljava/lang/Boolean;
+#arraysOverlap(Lio/trino/type/BlockTypeOperators$BlockPositionComparison;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Ljava/lang/Boolean;

+###io/trino/operator/scalar/ArrayNoneMatchFunction
@351
+#noneMatchObject(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/ObjectToBooleanFunction;)Ljava/lang/Boolean;
+#noneMatchLong(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/LongToBooleanFunction;)Ljava/lang/Boolean;
+#noneMatchDouble(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/DoubleToBooleanFunction;)Ljava/lang/Boolean;
+#noneMatchBoolean(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/BooleanToBooleanFunction;)Ljava/lang/Boolean;

+###io/trino/operator/scalar/TryFunction$TryObjectLambda
@351
+#apply()Ljava/lang/Object;

+###io/trino/operator/scalar/JsonStringToMapCast
@351

+###io/trino/operator/scalar/ArrayToArrayCast
@351
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@366
+#filterLong(Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#filterDouble(Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#filterBoolean(Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#filterObject(Lio/trino/spi/type/Type;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/JoniRegexpCasts
@351
+#castVarcharToJoniRegexp(Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
+#castCharToJoniRegexp(Ljava/lang/Long;Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;
+#joniRegexp(Lio/airlift/slice/Slice;)Lio/trino/type/JoniRegexp;

+###io/trino/operator/scalar/GenericEqualOperator
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/TypeOfFunction
@351
+#typeof(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/airlift/slice/Slice;
+#typeof(Lio/trino/spi/type/Type;Ljava/lang/Long;)Lio/airlift/slice/Slice;
+#typeof(Lio/trino/spi/type/Type;Ljava/lang/Double;)Lio/airlift/slice/Slice;
+#typeof(Lio/trino/spi/type/Type;Ljava/lang/Boolean;)Lio/airlift/slice/Slice;
@369
-#typeof(Lio/trino/spi/type/Type;Ljava/lang/Long;)Lio/airlift/slice/Slice;
-#typeof(Lio/trino/spi/type/Type;Ljava/lang/Double;)Lio/airlift/slice/Slice;
-#typeof(Lio/trino/spi/type/Type;Ljava/lang/Boolean;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/ArrayReverseFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#reverse(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/TryCastFunction
@351
+#<init>()V
+#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
+#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@366
+#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#getFunctionDependencies()Lio/trino/spi/function/FunctionDependencyDeclaration;
+#specialize(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#getFunctionDependencies()Lio/trino/metadata/FunctionDependencyDeclaration;
-#specialize(Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/MapEntriesFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#mapFromEntries(Lio/trino/spi/type/RowType;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/GenericIndeterminateOperator
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/TryFunction$TryLongLambda
@351
+#apply()Ljava/lang/Long;

+###io/trino/operator/scalar/ArrayExceptFunction
@351
+#except(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
@376
+#except(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
-#except(Lio/trino/spi/type/Type;Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/type/BlockTypeOperators$BlockPositionHashCode;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArrayCombinationsFunction
@351
+#combinations(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/QuantileDigestFunctions
@351
+#valueAtQuantileDouble(Lio/airlift/slice/Slice;D)D
+#valueAtQuantileReal(Lio/airlift/slice/Slice;D)J
+#valueAtQuantileBigint(Lio/airlift/slice/Slice;D)J
+#valuesAtQuantilesDouble(Lio/airlift/slice/Slice;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#valuesAtQuantilesReal(Lio/airlift/slice/Slice;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#valuesAtQuantilesBigint(Lio/airlift/slice/Slice;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#verifyAccuracy(D)D
+#verifyWeight(J)J

+###io/trino/operator/scalar/DateTimeFunctions
@351
+#now(Lio/trino/spi/connector/ConnectorSession;)J
+#currentDate(Lio/trino/spi/connector/ConnectorSession;)J
+#currentTimeZone(Lio/trino/spi/connector/ConnectorSession;)Lio/airlift/slice/Slice;
+#fromUnixTime(D)J
+#fromUnixTime(DJJ)J
+#fromUnixTime(DLio/airlift/slice/Slice;)J
+#fromUnixtimeNanosLong(J)Lio/trino/spi/type/LongTimestamp;
+#toISO8601FromDate(Lio/trino/spi/connector/ConnectorSession;J)Lio/airlift/slice/Slice;
+#fromISO8601Timestamp(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)J
+#fromIso8601TimestampNanos(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#fromISO8601Date(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)J
+#truncateDate(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;J)J
+#addFieldValueDate(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;JJ)J
+#diffDate(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;JJ)J
+#getTimestampField(Lorg/joda/time/chrono/ISOChronology;Lio/airlift/slice/Slice;)Lorg/joda/time/DateTimeField;
+#parseDatetime(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)J
+#dateFormat(Lorg/joda/time/chrono/ISOChronology;Ljava/util/Locale;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#dateParse(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)J
+#millisecondFromInterval(J)J
+#secondFromInterval(J)J
+#minuteFromInterval(J)J
+#hourFromInterval(J)J
+#dayOfWeekFromDate(J)J
+#dayFromDate(J)J
+#dayFromInterval(J)J
+#lastDayOfMonthFromDate(J)J
+#dayOfYearFromDate(J)J
+#weekFromDate(J)J
+#yearOfWeekFromDate(J)J
+#monthFromDate(J)J
+#monthFromInterval(J)J
+#quarterFromDate(J)J
+#yearFromDate(J)J
+#yearFromInterval(J)J
+#createDateTimeFormatter(Lio/airlift/slice/Slice;)Lorg/joda/time/format/DateTimeFormatter;
+#parseDuration(Lio/airlift/slice/Slice;)J
+#valueToSessionTimeZoneOffsetDiff(JLorg/joda/time/DateTimeZone;)J
+#toMilliseconds(J)J
@352
+#toISO8601FromDate(J)Lio/airlift/slice/Slice;
+#fromISO8601Date(Lio/airlift/slice/Slice;)J
+#truncateDate(Lio/airlift/slice/Slice;J)J
+#addFieldValueDate(Lio/airlift/slice/Slice;JJ)J
+#diffDate(Lio/airlift/slice/Slice;JJ)J
-#toISO8601FromDate(Lio/trino/spi/connector/ConnectorSession;J)Lio/airlift/slice/Slice;
-#fromISO8601Date(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)J
-#truncateDate(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;J)J
-#addFieldValueDate(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;JJ)J
-#diffDate(Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;JJ)J
@355
+#fromUnixTime(Lio/trino/spi/connector/ConnectorSession;D)J
+#fromUnixtimeNanosLong(Lio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimestampWithTimeZone;
-#fromUnixTime(D)J
-#fromUnixtimeNanosLong(J)Lio/trino/spi/type/LongTimestamp;
@397
-#valueToSessionTimeZoneOffsetDiff(JLorg/joda/time/DateTimeZone;)J

+###io/trino/operator/scalar/JsonOperators
@351
+#castToVarchar(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castToBigint(Lio/airlift/slice/Slice;)Ljava/lang/Long;
+#castToInteger(Lio/airlift/slice/Slice;)Ljava/lang/Long;
+#castToSmallint(Lio/airlift/slice/Slice;)Ljava/lang/Long;
+#castToTinyint(Lio/airlift/slice/Slice;)Ljava/lang/Long;
+#castToDouble(Lio/airlift/slice/Slice;)Ljava/lang/Double;
+#castToReal(Lio/airlift/slice/Slice;)Ljava/lang/Long;
+#castToBoolean(Lio/airlift/slice/Slice;)Ljava/lang/Boolean;
+#castFromVarchar(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#castFromTinyInt(J)Lio/airlift/slice/Slice;
+#castFromSmallInt(J)Lio/airlift/slice/Slice;
+#castFromInteger(J)Lio/airlift/slice/Slice;
+#castFromBigint(J)Lio/airlift/slice/Slice;
+#castFromDouble(D)Lio/airlift/slice/Slice;
+#castFromReal(J)Lio/airlift/slice/Slice;
+#castFromBoolean(Z)Lio/airlift/slice/Slice;
+#castFromDate(Lio/trino/spi/connector/ConnectorSession;J)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/MapFilterFunction
@351
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#createState(Lio/trino/spi/type/MapType;)Ljava/lang/Object;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
+#specialize(Lio/trino/spi/function/BoundSignature;)Lio/trino/operator/scalar/SpecializedSqlScalarFunction;
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/FailureFunction
@351
+#failWithException(Lio/airlift/slice/Slice;)Z
+#fail(Lio/airlift/slice/Slice;)Z
+#fail(JLio/airlift/slice/Slice;)Z

+###io/trino/operator/scalar/MathFunctions$TruncateN
@351
+#truncateShort(JJJJ)J
+#truncateLong(JJLio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
@368
+#truncateLong(JJLio/trino/spi/type/Int128;J)Lio/trino/spi/type/Int128;
-#truncateLong(JJLio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/MathFunctions$Sign
@351
+#signDecimalShort(J)J
+#signDecimalLong(Lio/airlift/slice/Slice;)J
@368
+#signDecimalLong(Lio/trino/spi/type/Int128;)J
-#signDecimalLong(Lio/airlift/slice/Slice;)J

+###io/trino/operator/scalar/JsonToRowCast
@351
+#toRow(Lio/trino/spi/type/RowType;Lio/trino/util/JsonUtil$BlockBuilderAppender;Lio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/LuhnCheckFunction
@351
+#LuhnCheck(Lio/airlift/slice/Slice;)Z
@362
+#luhnCheck(Lio/airlift/slice/Slice;)Z
-#LuhnCheck(Lio/airlift/slice/Slice;)Z

+###io/trino/operator/scalar/VarbinaryFunctions
@351
+#length(Lio/airlift/slice/Slice;)J
+#toBase64(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromBase64Varchar(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromBase64Varbinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#toBase64Url(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromBase64UrlVarchar(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromBase64UrlVarbinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#toHex(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromHexVarchar(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#toBigEndian64(J)Lio/airlift/slice/Slice;
+#fromBigEndian64(Lio/airlift/slice/Slice;)J
+#toBigEndian32(J)Lio/airlift/slice/Slice;
+#fromBigEndian32(Lio/airlift/slice/Slice;)J
+#toIEEE754Binary32(J)Lio/airlift/slice/Slice;
+#fromIEEE754Binary32(Lio/airlift/slice/Slice;)J
+#toIEEE754Binary64(D)Lio/airlift/slice/Slice;
+#fromIEEE754Binary64(Lio/airlift/slice/Slice;)D
+#md5(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#sha1(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#sha256(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#sha512(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#murmur3(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#xxhash64(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#spookyHashV2_32(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#spookyHashV2_64(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromHexVarbinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#crc32(Lio/airlift/slice/Slice;)J
+#substr(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#substr(Lio/airlift/slice/Slice;JJ)Lio/airlift/slice/Slice;
+#leftPad(Lio/airlift/slice/Slice;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#rightPad(Lio/airlift/slice/Slice;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#reverse(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@378
+#toBase32(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromBase32Varchar(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#fromBase32Varbinary(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/MapConstructor$State
@351
+#<init>(Lio/trino/spi/type/MapType;)V
+#getPageBuilder()Lio/trino/spi/PageBuilder;

+###io/trino/operator/scalar/timestamp/LastDayOfMonth
@351
+#lastDayOfMonth(J)J
+#lastDayOfMonth(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/ExtractYear
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/ExtractSecond
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimestampToDateCast
@351
+#cast(Lio/trino/spi/connector/ConnectorSession;J)J
+#cast(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/ExtractMillisecond
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimestampOperators$TimestampMinusIntervalYearToMonth
@351
+#<init>()V
+#subtract(JJ)J
+#subtract(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;J)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/DateFormat
@351
+#format(Lio/trino/spi/connector/ConnectorSession;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#format(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@397
+#format(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
-#format(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamp/TimestampOperators$TimestampMinusTimestamp
@351
+#<init>()V
+#subtract(JJ)J
+#subtract(Lio/trino/spi/type/LongTimestamp;Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimestampToJsonCast
@351
+#cast(JLio/trino/spi/connector/ConnectorSession;J)Lio/airlift/slice/Slice;
+#cast(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamp/ExtractMonth
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimestampToTimeCast
@351
+#cast(JJJ)J
+#cast(JLio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/ExtractYearOfWeek
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/ExtractWeekOfYear
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimestampToTimestampWithTimeZoneCast
@351
+#shortToShort(JLio/trino/spi/connector/ConnectorSession;J)J
+#longToShort(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;)J
+#shortToLong(JJLio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#longToLong(JJLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamp/ExtractDayOfYear
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/HumanReadableSeconds
@351
+#humanReadableSeconds(D)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamp/TimestampOperators$TimestampPlusIntervalDayToSecond
@351
+#<init>()V
+#add(JJ)J
+#add(Lio/trino/spi/type/LongTimestamp;J)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/SequenceIntervalYearToMonth
@351
+#sequence(JJJ)Lio/trino/spi/block/Block;
+#sequence(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;Lio/trino/spi/type/LongTimestamp;J)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/timestamp/DateDiff
@351
+#diff(Lio/airlift/slice/Slice;JJ)J
+#diff(Lio/airlift/slice/Slice;Lio/trino/spi/type/LongTimestamp;Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimestampOperators$TimestampMinusIntervalDayToSecond
@351
+#<init>()V
+#subtract(JJ)J
+#subtract(Lio/trino/spi/type/LongTimestamp;J)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/LocalTimestamp
@351
+#localTimestamp(JLio/trino/spi/connector/ConnectorSession;Ljava/lang/Long;)J
+#localTimestamp(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/FormatDateTime
@351
+#format(Lio/trino/spi/connector/ConnectorSession;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#formatDatetime(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamp/ToUnixTime
@351
+#toUnixTime(J)D
+#toUnixTime(Lio/trino/spi/type/LongTimestamp;)D
@355
-###io/trino/operator/scalar/timestamp/ToUnixTime

+###io/trino/operator/scalar/timestamp/DateToTimestampCast
@351
+#castToShort(J)J
+#castToLong(J)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/ToIso8601
@351
+#toIso8601(JJ)Lio/airlift/slice/Slice;
+#toIso8601(JLio/trino/spi/type/LongTimestamp;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamp/TimestampOperators$IntervalYearToMonthPlusTimestamp
@351
+#<init>()V
+#add(JJ)J
+#add(Lio/trino/spi/connector/ConnectorSession;JLio/trino/spi/type/LongTimestamp;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/ExtractHour
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimestampToVarcharCast
@351
+#cast(JJ)Lio/airlift/slice/Slice;
+#cast(JLio/trino/spi/type/LongTimestamp;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timestamp/TimestampOperators$TimestampPlusIntervalYearToMonth
@351
+#<init>()V
+#add(JJ)J
+#add(Lio/trino/spi/type/LongTimestamp;J)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/DateAdd
@351
+#add(JLio/airlift/slice/Slice;JJ)J
+#add(Lio/airlift/slice/Slice;JLio/trino/spi/type/LongTimestamp;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/TimestampToTimeWithTimeZoneCast
@351
+#shortToShort(JLio/trino/spi/connector/ConnectorSession;J)J
+#longToShort(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;)J
+#shortToLong(Lio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimeWithTimeZone;
+#longToLong(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimestamp;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timestamp/SequenceIntervalDayToSecond
@351
+#sequence(JJJ)Lio/trino/spi/block/Block;
+#sequence(Lio/trino/spi/type/LongTimestamp;Lio/trino/spi/type/LongTimestamp;J)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/timestamp/TimestampOperators$IntervalDayToSecondPlusTimestamp
@351
+#<init>()V
+#add(JJ)J
+#add(JLio/trino/spi/type/LongTimestamp;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/ExtractDayOfWeek
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimeWithTimeZoneToTimestampCast
@351
+#shortToShort(JLio/trino/spi/connector/ConnectorSession;J)J
+#longToShort(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimeWithTimeZone;)J
+#shortToLong(JLio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimestamp;
+#longToLong(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimeWithTimeZone;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/ExtractQuarter
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/TimestampOperators
@351

+###io/trino/operator/scalar/timestamp/TimestampToTimestampCast
@351
+#shortToShort(JJJ)J
+#shortToLong(J)Lio/trino/spi/type/LongTimestamp;
+#longToShort(JLio/trino/spi/type/LongTimestamp;)J
+#longToLong(JLio/trino/spi/type/LongTimestamp;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/ExtractMinute
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/WithTimeZone
@351
+#shortPrecision(JJLio/airlift/slice/Slice;)J
+#mediumPrecision(JJLio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#largePrecision(JLio/trino/spi/type/LongTimestamp;Lio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timestamp/ExtractDay
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimestamp;)J

+###io/trino/operator/scalar/timestamp/VarcharToTimestampCast
@351
+#castToShort(JLio/airlift/slice/Slice;)J
+#castToLong(JLio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimestamp;
+#castToShortTimestamp(ILjava/lang/String;)J
+#castToLongTimestamp(ILjava/lang/String;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/timestamp/DateTrunc
@351
+#truncate(Lio/airlift/slice/Slice;J)J
+#truncate(Lio/airlift/slice/Slice;Lio/trino/spi/type/LongTimestamp;)Lio/trino/spi/type/LongTimestamp;

+###io/trino/operator/scalar/ArrayShuffleFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#shuffle(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/JsonExtract$ScalarValueJsonExtractor
@351
+#<init>()V
+#extract(Lcom/fasterxml/jackson/core/JsonParser;)Lio/airlift/slice/Slice;
+#extract(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneOperators$TimeMinusIntervalDayToSecond
@351
+#<init>()V
+#subtract(JJ)J
+#subtract(Lio/trino/spi/type/LongTimeWithTimeZone;J)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/ExtractSecond
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/AtTimeZoneWithOffset
@351
+#atTimeZone(JJ)J
+#atTimeZone(Lio/trino/spi/type/LongTimeWithTimeZone;J)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/CurrentTime
@351
+#shortTime(JLio/trino/spi/connector/ConnectorSession;Ljava/lang/Long;)J
+#longTime(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimeWithTimeZone;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/ExtractMillisecond
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneToTimeCast
@351
+#cast(JJ)J
+#cast(JLio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneToTimestampWithTimeZoneCast
@351
+#shortToShort(JLio/trino/spi/connector/ConnectorSession;J)J
+#longToShort(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimeWithTimeZone;)J
+#shortToLong(JLio/trino/spi/connector/ConnectorSession;J)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#longToLong(JLio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimeWithTimeZone;)Lio/trino/spi/type/LongTimestampWithTimeZone;

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneOperators$TimePlusIntervalDayToSecond
@351
+#<init>()V
+#add(JJ)J
+#add(Lio/trino/spi/type/LongTimeWithTimeZone;J)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/AtTimeZone
@351
+#atTimeZone(Lio/trino/spi/connector/ConnectorSession;JLio/airlift/slice/Slice;)J
+#atTimeZone(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/LongTimeWithTimeZone;Lio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneToTimeWithTimeZoneCast
@351
+#shortToShort(JJJ)J
+#shortToLong(J)Lio/trino/spi/type/LongTimeWithTimeZone;
+#longToShort(JLio/trino/spi/type/LongTimeWithTimeZone;)J
+#longToLong(JLio/trino/spi/type/LongTimeWithTimeZone;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneOperators$TimeMinusTime
@351
+#<init>()V
+#subtract(JJ)J
+#subtract(Lio/trino/spi/type/LongTimeWithTimeZone;Lio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/DateDiff
@351
+#diff(Lio/airlift/slice/Slice;JJ)J
+#diff(Lio/airlift/slice/Slice;Lio/trino/spi/type/LongTimeWithTimeZone;Lio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/TimeZoneMinute
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneOperators$IntervalDayToSecondPlusTime
@351
+#<init>()V
+#add(JJ)J
+#add(JLio/trino/spi/type/LongTimeWithTimeZone;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneToVarcharCast
@351
+#cast(JJ)Lio/airlift/slice/Slice;
+#cast(JLio/trino/spi/type/LongTimeWithTimeZone;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/timetz/TimeWithTimeZoneOperators
@351

+###io/trino/operator/scalar/timetz/ExtractHour
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/DateAdd
@351
+#add(JLio/airlift/slice/Slice;JJ)J
+#add(Lio/airlift/slice/Slice;JLio/trino/spi/type/LongTimeWithTimeZone;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/VarcharToTimeWithTimeZoneCast
@351
+#castToShort(JLio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)J
+#castToLong(JLio/trino/spi/connector/ConnectorSession;Lio/airlift/slice/Slice;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/timetz/ExtractMinute
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/TimeZoneHour
@351
+#extract(J)J
+#extract(Lio/trino/spi/type/LongTimeWithTimeZone;)J

+###io/trino/operator/scalar/timetz/DateTrunc
@351
+#truncate(Lio/airlift/slice/Slice;J)J
+#truncate(Lio/airlift/slice/Slice;Lio/trino/spi/type/LongTimeWithTimeZone;)Lio/trino/spi/type/LongTimeWithTimeZone;

+###io/trino/operator/scalar/BitwiseFunctions
@351
+#bitCount(JJ)J
+#bitwiseNot(J)J
+#bitwiseAnd(JJ)J
+#bitwiseOr(JJ)J
+#bitwiseXor(JJ)J
+#bitwiseLeftShiftTinyint(JJ)J
+#bitwiseLeftShiftSmallint(JJ)J
+#bitwiseLeftShiftInteger(JJ)J
+#bitwiseLeftShiftBigint(JJ)J
+#bitwiseRightShiftTinyint(JJ)J
+#bitwiseRightShiftSmallint(JJ)J
+#bitwiseRightShiftInteger(JJ)J
+#bitwiseRightShiftBigint(JJ)J
+#bitwiseRightShiftArithmeticTinyint(JJ)J
+#bitwiseRightShiftArithmeticSmallint(JJ)J
+#bitwiseRightShiftArithmeticInteger(JJ)J
+#bitwiseRightShiftArithmeticBigint(JJ)J

+###io/trino/operator/scalar/JoniRegexpReplaceLambdaFunction
@351
+#<init>()V
+#regexpReplace(Lio/airlift/slice/Slice;Lio/trino/type/JoniRegexp;Lio/trino/sql/gen/lambda/UnaryFunctionInterface;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/QuarterOfYearDateTimeField
@351
+#getDurationType()Lorg/joda/time/DurationFieldType;
+#getRangeDurationType()Lorg/joda/time/DurationFieldType;
+#getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;

+###io/trino/operator/scalar/ConcatWsFunction
@351
+#<init>()V
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
+#concatWs(Lio/airlift/slice/Slice;[Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/scalar/ScalarFunctionImplementation;
@395
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/scalar/ScalarFunctionImplementation;

+###io/trino/operator/scalar/ArrayFilterFunction
@351
+#filterLong(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/LongToBooleanFunction;)Lio/trino/spi/block/Block;
+#filterDouble(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/DoubleToBooleanFunction;)Lio/trino/spi/block/Block;
+#filterBoolean(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/BooleanToBooleanFunction;)Lio/trino/spi/block/Block;
+#filterObject(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/ObjectToBooleanFunction;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/MathFunctions$Ceiling
@351
+#ceilingShort(JJ)J
+#ceilingLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#ceilingLongShort(JLio/airlift/slice/Slice;)J
@368
+#ceilingLong(JLio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#ceilingLongShort(JLio/trino/spi/type/Int128;)J
-#ceilingLong(JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
-#ceilingLongShort(JLio/airlift/slice/Slice;)J

+###io/trino/operator/scalar/JsonExtract$JsonExtractor
@351
+#extract(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;

+###io/trino/operator/scalar/JsonExtract$JsonValueJsonExtractor
@351
+#<init>()V
+#extract(Lcom/fasterxml/jackson/core/JsonParser;)Lio/airlift/slice/Slice;
+#extract(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;

+###io/trino/operator/scalar/ArraySortComparatorFunction
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#sortLong(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/ArraySortComparatorFunction$ComparatorLongLambda;)Lio/trino/spi/block/Block;
+#sortDouble(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/ArraySortComparatorFunction$ComparatorDoubleLambda;)Lio/trino/spi/block/Block;
+#sortBoolean(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/ArraySortComparatorFunction$ComparatorBooleanLambda;)Lio/trino/spi/block/Block;
+#sortObject(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/ArraySortComparatorFunction$ComparatorObjectLambda;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/Least
@351
+#<init>()V

+###io/trino/operator/scalar/ArrayConcatUtils
@351
+#appendElement(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Lio/trino/spi/block/Block;
+#appendElement(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Z)Lio/trino/spi/block/Block;
+#appendElement(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;D)Lio/trino/spi/block/Block;
+#appendElement(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;
+#appendElement(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;Ljava/lang/Object;)Lio/trino/spi/block/Block;
+#prependElement(Lio/trino/spi/type/Type;Lio/airlift/slice/Slice;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#prependElement(Lio/trino/spi/type/Type;Ljava/lang/Object;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#prependElement(Lio/trino/spi/type/Type;JLio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#prependElement(Lio/trino/spi/type/Type;ZLio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#prependElement(Lio/trino/spi/type/Type;DLio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ArrayFlattenFunction
@351
+#flatten(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/DataSizeFunctions
@351
+#parsePrestoDataSize(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
@368
+#parsePrestoDataSize(Lio/airlift/slice/Slice;)Lio/trino/spi/type/Int128;
-#parsePrestoDataSize(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/MapZipWithFunction
@351
+#createState(Lio/trino/spi/type/MapType;)Ljava/lang/Object;
+#mapZipWith(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/type/MapType;Ljava/lang/Object;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;Lio/trino/operator/scalar/MapZipWithFunction$MapZipWithLambda;)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/GenericComparisonOperator
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V
@364
-###io/trino/operator/scalar/GenericComparisonOperator

+###io/trino/operator/scalar/InvokeFunction
@351
+#invoke(Lio/trino/operator/scalar/InvokeFunction$InvokeLambda;)Ljava/lang/Object;

+###io/trino/operator/scalar/ObjectToBooleanFunction
@351
+#apply(Ljava/lang/Object;)Ljava/lang/Boolean;

+###io/trino/operator/ExplainAnalyzeOperator$ExplainAnalyzeOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Z)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@374
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Z)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Z)V
@405
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;ZLio/trino/client/NodeVersion;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/QueryPerformanceFetcher;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Z)V

+###io/trino/operator/PagesHash
@351
+#<init>(Lit/unimi/dsi/fastutil/longs/LongArrayList;Lio/trino/operator/PagesHashStrategy;Lio/trino/operator/PositionLinks$FactoryBuilder;)V
+#getChannelCount()I
+#getPositionCount()I
+#getInMemorySizeInBytes()J
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#getAddressIndex(ILio/trino/spi/Page;)I
+#getAddressIndex(ILio/trino/spi/Page;J)I
+#appendTo(JLio/trino/spi/PageBuilder;I)V
@358
-###io/trino/operator/PagesHash

+###io/trino/operator/HttpPageBufferClient$ClientCallback
@351
+#addPages(Lio/trino/operator/HttpPageBufferClient;Ljava/util/List;)Z
+#requestComplete(Lio/trino/operator/HttpPageBufferClient;)V
+#clientFinished(Lio/trino/operator/HttpPageBufferClient;)V
+#clientFailed(Lio/trino/operator/HttpPageBufferClient;Ljava/lang/Throwable;)V

+###io/trino/operator/ParametricImplementation
@351
+#getSignature()Lio/trino/metadata/Signature;
+#hasSpecializedTypeParameters()Z
+#isNullable()Z
+#getArgumentDefinitions()Ljava/util/List;
@364
+#withAlias(Ljava/lang/String;)Lio/trino/operator/ParametricImplementation;
@366
+#getFunctionNullability()Lio/trino/metadata/FunctionNullability;
-#isNullable()Z
-#getArgumentDefinitions()Ljava/util/List;
@395
+#getSignature()Lio/trino/spi/function/Signature;
+#getFunctionNullability()Lio/trino/spi/function/FunctionNullability;
-#getSignature()Lio/trino/metadata/Signature;
-#getFunctionNullability()Lio/trino/metadata/FunctionNullability;

+###io/trino/operator/PagesHashStrategy
@351
+#getChannelCount()I
+#getSizeInBytes()J
+#appendTo(IILio/trino/spi/PageBuilder;I)V
+#hashPosition(II)J
+#hashRow(ILio/trino/spi/Page;)J
+#rowEqualsRow(ILio/trino/spi/Page;ILio/trino/spi/Page;)Z
+#positionEqualsRow(IIILio/trino/spi/Page;)Z
+#positionEqualsRowIgnoreNulls(IIILio/trino/spi/Page;)Z
+#positionNotDistinctFromRow(IIILio/trino/spi/Page;[I)Z
+#positionEqualsPosition(IIII)Z
+#positionEqualsPositionIgnoreNulls(IIII)Z
+#isPositionNull(II)Z
+#compareSortChannelPositions(IIII)I
+#isSortChannelPositionNull(II)Z
@352
+#rowNotDistinctFromRow(ILio/trino/spi/Page;ILio/trino/spi/Page;)Z
+#positionNotDistinctFromRow(IIILio/trino/spi/Page;)Z
+#positionNotDistinctFromPosition(IIII)Z

+###io/trino/operator/AggregationOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Z)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#close()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
@367
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Z)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/List;Z)V
@369
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;)V
-#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Z)V

+###io/trino/operator/EnforceSingleRowOperator$EnforceSingleRowOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@356
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;)V

+###io/trino/operator/ExchangeClientConfig
@351
+#<init>()V
+#getMaxBufferSize()Lio/airlift/units/DataSize;
+#setMaxBufferSize(Lio/airlift/units/DataSize;)Lio/trino/operator/ExchangeClientConfig;
+#getConcurrentRequestMultiplier()I
+#setConcurrentRequestMultiplier(I)Lio/trino/operator/ExchangeClientConfig;
+#getMinErrorDuration()Lio/airlift/units/Duration;[deprecated]
+#setMinErrorDuration(Lio/airlift/units/Duration;)Lio/trino/operator/ExchangeClientConfig;[deprecated]
+#getMaxErrorDuration()Lio/airlift/units/Duration;
+#setMaxErrorDuration(Lio/airlift/units/Duration;)Lio/trino/operator/ExchangeClientConfig;
+#getMaxResponseSize()Lio/airlift/units/DataSize;
+#setMaxResponseSize(Lio/airlift/units/DataSize;)Lio/trino/operator/ExchangeClientConfig;
+#getClientThreads()I
+#setClientThreads(I)Lio/trino/operator/ExchangeClientConfig;
+#getPageBufferClientMaxCallbackThreads()I
+#setPageBufferClientMaxCallbackThreads(I)Lio/trino/operator/ExchangeClientConfig;
+#isAcknowledgePages()Z
+#setAcknowledgePages(Z)Lio/trino/operator/ExchangeClientConfig;
@369
-###io/trino/operator/ExchangeClientConfig

+###io/trino/operator/ParametricImplementationsGroup$Builder
@351
+#build()Lio/trino/operator/ParametricImplementationsGroup;
+#addImplementation(Lio/trino/operator/ParametricImplementation;)V

+###io/trino/operator/TableDeleteOperator$TableDeleteOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/metadata/TableHandle;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/WorkProcessor$ProcessState
@351
+#blocked(Lcom/google/common/util/concurrent/ListenableFuture;)Lio/trino/operator/WorkProcessor$ProcessState;
+#yield()Lio/trino/operator/WorkProcessor$ProcessState;
+#ofResult(Ljava/lang/Object;)Lio/trino/operator/WorkProcessor$ProcessState;
+#finished()Lio/trino/operator/WorkProcessor$ProcessState;
+#getType()Lio/trino/operator/WorkProcessor$ProcessState$Type;
+#getResult()Ljava/lang/Object;
+#getBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
@364
+#yielded()Lio/trino/operator/WorkProcessor$ProcessState;
-#yield()Lio/trino/operator/WorkProcessor$ProcessState;

+###io/trino/operator/DeleteOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;I)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#getOutput()Lio/trino/spi/Page;
+#close()V
+#setPageSource(Ljava/util/function/Supplier;)V
@352
-#getOperatorContext()Lio/trino/operator/OperatorContext;
-#finish()V
-#isFinished()Z
-#needsInput()Z
-#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
-#getOutput()Lio/trino/spi/Page;
-#close()V
-#setPageSource(Ljava/util/function/Supplier;)V
@406
-###io/trino/operator/DeleteOperator

+###io/trino/operator/WorkProcessor
@351
+#process()Z
+#isBlocked()Z
+#getBlockedFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#isFinished()Z
+#getResult()Ljava/lang/Object;
+#yielding(Ljava/util/function/BooleanSupplier;)Lio/trino/operator/WorkProcessor;
+#withProcessEntryMonitor(Ljava/lang/Runnable;)Lio/trino/operator/WorkProcessor;
+#withProcessStateMonitor(Ljava/util/function/Consumer;)Lio/trino/operator/WorkProcessor;
+#finishWhen(Ljava/util/function/BooleanSupplier;)Lio/trino/operator/WorkProcessor;
+#flatMap(Ljava/util/function/Function;)Lio/trino/operator/WorkProcessor;
+#map(Ljava/util/function/Function;)Lio/trino/operator/WorkProcessor;
+#flatTransform(Lio/trino/operator/WorkProcessor$Transformation;)Lio/trino/operator/WorkProcessor;
+#transform(Lio/trino/operator/WorkProcessor$Transformation;)Lio/trino/operator/WorkProcessor;
+#transformProcessor(Ljava/util/function/Function;)Lio/trino/operator/WorkProcessor;
+#iterator()Ljava/util/Iterator;
+#yieldingIterator()Ljava/util/Iterator;
+#flatten(Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessor;
+#of([Ljava/lang/Object;)Lio/trino/operator/WorkProcessor;
+#fromIterable(Ljava/lang/Iterable;)Lio/trino/operator/WorkProcessor;
+#fromIterator(Ljava/util/Iterator;)Lio/trino/operator/WorkProcessor;
+#create(Lio/trino/operator/WorkProcessor$Process;)Lio/trino/operator/WorkProcessor;
+#mergeSorted(Ljava/lang/Iterable;Ljava/util/Comparator;)Lio/trino/operator/WorkProcessor;
@368
+#blocking(Ljava/util/function/Supplier;)Lio/trino/operator/WorkProcessor;

+###io/trino/operator/WorkProcessor$TransformationState
@351
+#needsMoreData()Lio/trino/operator/WorkProcessor$TransformationState;
+#blocked(Lcom/google/common/util/concurrent/ListenableFuture;)Lio/trino/operator/WorkProcessor$TransformationState;
+#yield()Lio/trino/operator/WorkProcessor$TransformationState;
+#ofResult(Ljava/lang/Object;)Lio/trino/operator/WorkProcessor$TransformationState;
+#ofResult(Ljava/lang/Object;Z)Lio/trino/operator/WorkProcessor$TransformationState;
+#finished()Lio/trino/operator/WorkProcessor$TransformationState;
@364
+#yielded()Lio/trino/operator/WorkProcessor$TransformationState;
-#yield()Lio/trino/operator/WorkProcessor$TransformationState;

+###io/trino/operator/JoinHashSupplier
@351
+#<init>(Lio/trino/Session;Lio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)V
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#checksum()J
+#get()Lio/trino/operator/JoinHash;
+#get()Ljava/lang/Object;
@358
-###io/trino/operator/JoinHashSupplier

+###io/trino/operator/PageTransportTimeoutException
@351
+#<init>(Lio/trino/spi/HostAddress;Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/trino/operator/LookupSourceProvider$LookupSourceLease
@351
+#getLookupSource()Lio/trino/operator/LookupSource;
+#hasSpilled()Z
+#spillEpoch()J
+#getSpillMask()Ljava/util/function/IntPredicate;
@358
-###io/trino/operator/LookupSourceProvider$LookupSourceLease

+###io/trino/operator/JoinStatisticsCounter
@351
+#<init>(Lio/trino/operator/LookupJoinOperators$JoinType;)V
+#updateLookupSourcePositions(J)V
+#recordProbe(I)V
+#get()Lio/trino/operator/JoinOperatorInfo;
+#get()Ljava/lang/Object;
@358
-###io/trino/operator/JoinStatisticsCounter

+###io/trino/operator/PartitionedOutputOperator$PartitionedOutputOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@360
-###io/trino/operator/PartitionedOutputOperator$PartitionedOutputOperatorFactory

+###io/trino/operator/DistinctLimitOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;JLjava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#getCapacity()I

+###io/trino/operator/GroupedTopNBuilder
@351
+#<init>(Ljava/util/List;Lio/trino/operator/PageWithPositionComparator;IZLio/trino/operator/GroupByHash;)V
+#processPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#buildResult()Ljava/util/Iterator;
+#getEstimatedSizeInBytes()J
@352
-#<init>(Ljava/util/List;Lio/trino/operator/PageWithPositionComparator;IZLio/trino/operator/GroupByHash;)V

+###io/trino/operator/PagesRTreeIndex
@351
+#<init>(Lio/trino/Session;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/locationtech/jts/index/strtree/STRtree;Ljava/util/Optional;Lio/trino/operator/SpatialIndexBuilderOperator$SpatialPredicate;Ljava/util/Optional;Ljava/util/Map;)V
+#findJoinPositions(ILio/trino/spi/Page;ILjava/util/Optional;)[I
+#isJoinPositionEligible(IILio/trino/spi/Page;)Z
+#appendTo(ILio/trino/spi/PageBuilder;I)V

+###io/trino/operator/OperatorFactory
@351
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#duplicate()Lio/trino/operator/OperatorFactory;
@388
-#noMoreOperators(Lio/trino/execution/Lifespan;)V

+###io/trino/operator/LookupSourceSupplier
@351
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#checksum()J
@358
-###io/trino/operator/LookupSourceSupplier

+###io/trino/operator/HashGenerator
@351
+#hashPosition(ILio/trino/spi/Page;)J
+#getPartition(IILio/trino/spi/Page;)I

+###io/trino/operator/BlockedReason
@351
+#values()[Lio/trino/operator/BlockedReason;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/BlockedReason;

+###io/trino/operator/RowIdComparisonStrategy
@352
+#compare(JJ)I

+###io/trino/operator/WindowInfo$IndexInfo
@351
+#<init>(JJDJ)V
+#getTotalRowsCount()J
+#getSizeInBytes()J
+#getSumSquaredDifferencesSizeInPartition()D
+#getNumberOfPartitions()J

+###io/trino/operator/OutputFactory
@351
+#createOutputOperator(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)Lio/trino/operator/OperatorFactory;

+###io/trino/operator/PagesIndexOrdering
@351
+#<init>(Lio/trino/operator/PagesIndexComparator;)V
+#getComparator()Lio/trino/operator/PagesIndexComparator;
+#sort(Lio/trino/operator/PagesIndex;II)V

+###io/trino/operator/MergeHashSort
@351
+#<init>(Lio/trino/memory/context/AggregatedMemoryContext;Lio/trino/type/BlockTypeOperators;)V
+#merge(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/DriverYieldSignal;)Lio/trino/operator/WorkProcessor;
+#close()V

+###io/trino/operator/PageBufferClientStatus
@351
+#<init>(Ljava/net/URI;Ljava/lang/String;Lorg/joda/time/DateTime;JILjava/util/OptionalLong;Ljava/util/OptionalInt;IIILjava/lang/String;)V
+#getUri()Ljava/net/URI;
+#getState()Ljava/lang/String;
+#getLastUpdate()Lorg/joda/time/DateTime;
+#getRowsReceived()J
+#getPagesReceived()I
+#getRowsRejected()Ljava/util/OptionalLong;
+#getPagesRejected()Ljava/util/OptionalInt;
+#getRequestsScheduled()I
+#getRequestsCompleted()I
+#getRequestsFailed()I
+#getHttpRequestState()Ljava/lang/String;
+#toString()Ljava/lang/String;
@405
+#<init>(Ljava/net/URI;Ljava/lang/String;Lorg/joda/time/DateTime;JILjava/util/OptionalLong;Ljava/util/OptionalInt;IIIILjava/lang/String;)V
+#getRequestsSucceeded()I
-#<init>(Ljava/net/URI;Ljava/lang/String;Lorg/joda/time/DateTime;JILjava/util/OptionalLong;Ljava/util/OptionalInt;IIILjava/lang/String;)V

+###io/trino/operator/MarkDistinctOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#getCapacity()I

+###io/trino/operator/TableScanOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSourceProvider;Lio/trino/metadata/TableHandle;Ljava/lang/Iterable;Lio/trino/spi/connector/DynamicFilter;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;
+#noMoreSplits()V
+#close()V
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
@406
+#addSplit(Lio/trino/metadata/Split;)V
-#addSplit(Lio/trino/metadata/Split;)Ljava/util/function/Supplier;

+###io/trino/operator/ExchangeClientSupplier
@351
+#get(Lio/trino/memory/context/LocalMemoryContext;)Lio/trino/operator/ExchangeClient;
@366
+#get(Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;)Lio/trino/operator/ExchangeClient;
-#get(Lio/trino/memory/context/LocalMemoryContext;)Lio/trino/operator/ExchangeClient;
@369
-###io/trino/operator/ExchangeClientSupplier

+###io/trino/Session$ResourceEstimateBuilder
@351
+#<init>()V
+#setExecutionTime(Lio/airlift/units/Duration;)Lio/trino/Session$ResourceEstimateBuilder;
+#setCpuTime(Lio/airlift/units/Duration;)Lio/trino/Session$ResourceEstimateBuilder;
+#setPeakMemory(Lio/airlift/units/DataSize;)Lio/trino/Session$ResourceEstimateBuilder;
+#build()Lio/trino/spi/session/ResourceEstimates;

+###io/trino/failuredetector/FailureDetector
@351
+#getFailed()Ljava/util/Set;
+#getState(Lio/trino/spi/HostAddress;)Lio/trino/failuredetector/FailureDetector$State;

+###io/trino/failuredetector/NoOpFailureDetector
@351
+#<init>()V
+#getFailed()Ljava/util/Set;
+#getState(Lio/trino/spi/HostAddress;)Lio/trino/failuredetector/FailureDetector$State;

+###io/trino/failuredetector/FailureDetectorModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/failuredetector/HeartbeatFailureDetector
@351
+#<init>(Lio/airlift/discovery/client/ServiceSelector;Lio/airlift/http/client/HttpClient;Lio/trino/failuredetector/FailureDetectorConfig;Lio/airlift/node/NodeInfo;Lio/trino/server/InternalCommunicationConfig;)V
+#start()V
+#shutdown()V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#getFailed()Ljava/util/Set;
+#getState(Lio/trino/spi/HostAddress;)Lio/trino/failuredetector/FailureDetector$State;
+#getFailedCount()I
+#getTotalCount()I
+#getActiveCount()I
+#getStats()Ljava/util/Map;

+###io/trino/failuredetector/HeartbeatFailureDetector$Stats
@351
+#<init>(Ljava/net/URI;)V
+#recordStart()V
+#recordSuccess()V
+#recordFailure(Ljava/lang/Exception;)V
+#getAge()Lio/airlift/units/Duration;
+#getUri()Ljava/net/URI;
+#getRecentFailures()D
+#getRecentSuccesses()D
+#getRecentRequests()D
+#getRecentFailureRatio()D
+#getLastRequestTime()Lorg/joda/time/DateTime;
+#getLastResponseTime()Lorg/joda/time/DateTime;
+#getLastFailureException()Ljava/lang/Exception;
+#getLastFailureInfo()Lio/trino/client/FailureInfo;
+#getRecentFailuresByType()Ljava/util/Map;

+###io/trino/failuredetector/FailureDetectorConfig
@351
+#<init>()V
+#getExpirationGraceInterval()Lio/airlift/units/Duration;
+#setExpirationGraceInterval(Lio/airlift/units/Duration;)Lio/trino/failuredetector/FailureDetectorConfig;
+#isEnabled()Z
+#setEnabled(Z)Lio/trino/failuredetector/FailureDetectorConfig;
+#getWarmupInterval()Lio/airlift/units/Duration;
+#setWarmupInterval(Lio/airlift/units/Duration;)Lio/trino/failuredetector/FailureDetectorConfig;
+#getHeartbeatInterval()Lio/airlift/units/Duration;
+#setHeartbeatInterval(Lio/airlift/units/Duration;)Lio/trino/failuredetector/FailureDetectorConfig;
+#getFailureRatioThreshold()D
+#setFailureRatioThreshold(D)Lio/trino/failuredetector/FailureDetectorConfig;

+###io/trino/failuredetector/FailureDetector$State
@351
+#values()[Lio/trino/failuredetector/FailureDetector$State;
+#valueOf(Ljava/lang/String;)Lio/trino/failuredetector/FailureDetector$State;

+###io/trino/failuredetector/ForFailureDetector
@351

+###io/trino/block/BlockJsonSerde$Serializer
@351
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;)V
+#serialize(Lio/trino/spi/block/Block;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V

+###io/trino/block/BlockJsonSerde
@351

+###io/trino/block/BlockJsonSerde$Deserializer
@351
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;)V
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lio/trino/spi/block/Block;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;

+###io/trino/block/BlockSerdeUtil
@351
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/Slice;)Lio/trino/spi/block/Block;
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;
+#readBlockValue(Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/spi/type/Type;Lio/airlift/slice/Slice;)Ljava/lang/Object;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V

+###io/trino/eventlistener/EventListenerModule
@351
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/eventlistener/EventListenerManager
@351
+#<init>(Lio/trino/eventlistener/EventListenerConfig;)V
+#addEventListenerFactory(Lio/trino/spi/eventlistener/EventListenerFactory;)V
+#addEventListener(Lio/trino/spi/eventlistener/EventListener;)V
+#loadEventListeners()V
+#queryCompleted(Lio/trino/spi/eventlistener/QueryCompletedEvent;)V
+#queryCreated(Lio/trino/spi/eventlistener/QueryCreatedEvent;)V
+#splitCompleted(Lio/trino/spi/eventlistener/SplitCompletedEvent;)V
@394
+#queryCompleted(Lcom/google/common/base/Function;)V
-#queryCompleted(Lio/trino/spi/eventlistener/QueryCompletedEvent;)V

+###io/trino/eventlistener/EventListenerConfig
@351
+#<init>()V
+#getEventListenerFiles()Ljava/util/List;
+#setEventListenerFiles(Ljava/lang/String;)Lio/trino/eventlistener/EventListenerConfig;
+#setEventListenerFiles(Ljava/util/List;)Lio/trino/eventlistener/EventListenerConfig;

+###io/trino/sql/SqlFormatterUtil
@351
+#getFormattedSql(Lio/trino/sql/tree/Statement;Lio/trino/sql/parser/SqlParser;)Ljava/lang/String;

+###io/trino/sql/relational/StandardFunctionResolution
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#arithmeticFunction(Lio/trino/sql/tree/ArithmeticBinaryExpression$Operator;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
+#comparisonFunction(Lio/trino/sql/tree/ComparisonExpression$Operator;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/metadata/ResolvedFunction;
@364
+#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/relational/DeterminismEvaluator
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#isDeterministic(Lio/trino/sql/relational/RowExpression;)Z
@366
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/relational/ConstantExpression
@351
+#<init>(Ljava/lang/Object;Lio/trino/spi/type/Type;)V
+#getValue()Ljava/lang/Object;
+#getType()Lio/trino/spi/type/Type;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#accept(Lio/trino/sql/relational/RowExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/relational/optimizer/ExpressionOptimizer
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/Session;)V
+#optimize(Lio/trino/sql/relational/RowExpression;)Lio/trino/sql/relational/RowExpression;
@374
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/Session;)V

+###io/trino/sql/relational/RowExpressionVisitor
@351
+#visitCall(Lio/trino/sql/relational/CallExpression;Ljava/lang/Object;)Ljava/lang/Object;
+#visitSpecialForm(Lio/trino/sql/relational/SpecialForm;Ljava/lang/Object;)Ljava/lang/Object;
+#visitInputReference(Lio/trino/sql/relational/InputReferenceExpression;Ljava/lang/Object;)Ljava/lang/Object;
+#visitConstant(Lio/trino/sql/relational/ConstantExpression;Ljava/lang/Object;)Ljava/lang/Object;
+#visitLambda(Lio/trino/sql/relational/LambdaDefinitionExpression;Ljava/lang/Object;)Ljava/lang/Object;
+#visitVariableReference(Lio/trino/sql/relational/VariableReferenceExpression;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/relational/Expressions
@351
+#constant(Ljava/lang/Object;Lio/trino/spi/type/Type;)Lio/trino/sql/relational/ConstantExpression;
+#constantNull(Lio/trino/spi/type/Type;)Lio/trino/sql/relational/ConstantExpression;
+#call(Lio/trino/metadata/ResolvedFunction;[Lio/trino/sql/relational/RowExpression;)Lio/trino/sql/relational/CallExpression;
+#call(Lio/trino/metadata/ResolvedFunction;Ljava/util/List;)Lio/trino/sql/relational/CallExpression;
+#field(ILio/trino/spi/type/Type;)Lio/trino/sql/relational/InputReferenceExpression;
+#subExpressions(Ljava/lang/Iterable;)Ljava/util/List;

+###io/trino/sql/relational/SpecialForm
@351
+#<init>(Lio/trino/sql/relational/SpecialForm$Form;Lio/trino/spi/type/Type;[Lio/trino/sql/relational/RowExpression;)V
+#<init>(Lio/trino/sql/relational/SpecialForm$Form;Lio/trino/spi/type/Type;Ljava/util/List;)V
+#<init>(Lio/trino/sql/relational/SpecialForm$Form;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/util/List;)V
+#getForm()Lio/trino/sql/relational/SpecialForm$Form;
+#getFunctionDependencies()Ljava/util/List;
+#getOperatorDependency(Lio/trino/spi/function/OperatorType;)Lio/trino/metadata/ResolvedFunction;
+#getCastDependency(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Ljava/util/Optional;
+#getType()Lio/trino/spi/type/Type;
+#getArguments()Ljava/util/List;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#accept(Lio/trino/sql/relational/RowExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/relational/RowExpression
@351
+#<init>()V
+#getType()Lio/trino/spi/type/Type;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#accept(Lio/trino/sql/relational/RowExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/relational/InputReferenceExpression
@351
+#<init>(ILio/trino/spi/type/Type;)V
+#getField()I
+#getType()Lio/trino/spi/type/Type;
+#hashCode()I
+#toString()Ljava/lang/String;
+#accept(Lio/trino/sql/relational/RowExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z

+###io/trino/sql/relational/LambdaDefinitionExpression
@351
+#<init>(Ljava/util/List;Ljava/util/List;Lio/trino/sql/relational/RowExpression;)V
+#getArgumentTypes()Ljava/util/List;
+#getArguments()Ljava/util/List;
+#getBody()Lio/trino/sql/relational/RowExpression;
+#getType()Lio/trino/spi/type/Type;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#accept(Lio/trino/sql/relational/RowExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/relational/CallExpression
@351
+#<init>(Lio/trino/metadata/ResolvedFunction;Ljava/util/List;)V
+#getResolvedFunction()Lio/trino/metadata/ResolvedFunction;
+#getType()Lio/trino/spi/type/Type;
+#getArguments()Ljava/util/List;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#accept(Lio/trino/sql/relational/RowExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/relational/SpecialForm$Form
@351
+#values()[Lio/trino/sql/relational/SpecialForm$Form;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/relational/SpecialForm$Form;

+###io/trino/sql/relational/VariableReferenceExpression
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;)V
+#getName()Ljava/lang/String;
+#getType()Lio/trino/spi/type/Type;
+#hashCode()I
+#toString()Ljava/lang/String;
+#accept(Lio/trino/sql/relational/RowExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z

+###io/trino/sql/relational/SqlToRowExpressionTranslator
@351
+#translate(Lio/trino/sql/tree/Expression;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/Session;Z)Lio/trino/sql/relational/RowExpression;
@374
+#translate(Lio/trino/sql/tree/Expression;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;Z)Lio/trino/sql/relational/RowExpression;
-#translate(Lio/trino/sql/tree/Expression;Ljava/util/Map;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/Session;Z)Lio/trino/sql/relational/RowExpression;

+###io/trino/sql/DynamicFilters
@351
+#createDynamicFilterExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/SymbolReference;Lio/trino/sql/tree/ComparisonExpression$Operator;Z)Lio/trino/sql/tree/Expression;
+#createDynamicFilterExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/ComparisonExpression$Operator;)Lio/trino/sql/tree/Expression;
+#createDynamicFilterExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/ComparisonExpression$Operator;Z)Lio/trino/sql/tree/Expression;
+#createDynamicFilterExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#extractDynamicFilters(Lio/trino/sql/tree/Expression;)Lio/trino/sql/DynamicFilters$ExtractResult;
+#extractSourceSymbols(Ljava/util/List;)Lcom/google/common/collect/Multimap;
+#isDynamicFilter(Lio/trino/sql/tree/Expression;)Z
+#getDescriptor(Lio/trino/sql/tree/Expression;)Ljava/util/Optional;
@364
+#createDynamicFilterExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/SymbolReference;Lio/trino/sql/tree/ComparisonExpression$Operator;Z)Lio/trino/sql/tree/Expression;
+#createDynamicFilterExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/ComparisonExpression$Operator;)Lio/trino/sql/tree/Expression;
+#createDynamicFilterExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/ComparisonExpression$Operator;Z)Lio/trino/sql/tree/Expression;
+#createDynamicFilterExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
-#createDynamicFilterExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/SymbolReference;Lio/trino/sql/tree/ComparisonExpression$Operator;Z)Lio/trino/sql/tree/Expression;
-#createDynamicFilterExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/ComparisonExpression$Operator;)Lio/trino/sql/tree/Expression;
-#createDynamicFilterExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/ComparisonExpression$Operator;Z)Lio/trino/sql/tree/Expression;
-#createDynamicFilterExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
@365
+#replaceDynamicFilterId(Lio/trino/sql/tree/FunctionCall;Lio/trino/sql/planner/plan/DynamicFilterId;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/InterpretedFunctionInvoker
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#invoke(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/connector/ConnectorSession;[Ljava/lang/Object;)Ljava/lang/Object;
+#invoke(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/connector/ConnectorSession;Ljava/util/List;)Ljava/lang/Object;
+#invoke(Lio/trino/metadata/FunctionMetadata;Lio/trino/metadata/FunctionInvoker;Lio/trino/spi/connector/ConnectorSession;Ljava/util/List;)Ljava/lang/Object;
@366
-#invoke(Lio/trino/metadata/FunctionMetadata;Lio/trino/metadata/FunctionInvoker;Lio/trino/spi/connector/ConnectorSession;Ljava/util/List;)Ljava/lang/Object;
@374
+#<init>(Lio/trino/metadata/FunctionManager;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/rewrite/StatementRewrite
@351
+#rewrite(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Ljava/util/Optional;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/StatsCalculator;)Lio/trino/sql/tree/Statement;
@365
+#<init>(Ljava/util/Set;)V
+#rewrite(Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/tree/Statement;
-#rewrite(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Ljava/util/Optional;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/StatsCalculator;)Lio/trino/sql/tree/Statement;

+###io/trino/sql/rewrite/ShowStatsRewrite
@351
+#<init>()V
+#rewrite(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Ljava/util/Optional;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/StatsCalculator;)Lio/trino/sql/tree/Statement;
@365
+#<init>(Lio/trino/sql/analyzer/QueryExplainerFactory;Lio/trino/cost/StatsCalculator;)V
+#rewrite(Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/tree/Statement;
-#<init>()V
-#rewrite(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Ljava/util/Optional;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/StatsCalculator;)Lio/trino/sql/tree/Statement;
@391
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/analyzer/QueryExplainerFactory;Lio/trino/cost/StatsCalculator;)V
-#<init>(Lio/trino/sql/analyzer/QueryExplainerFactory;Lio/trino/cost/StatsCalculator;)V

+###io/trino/sql/ParameterUtils
@351
+#parameterExtractor(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/util/Map;
@403
-###io/trino/sql/ParameterUtils

+###io/trino/sql/SqlPath
@351
+#<init>(Ljava/util/Optional;)V
+#getRawPath()Ljava/util/Optional;
+#getParsedPath()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@362
+#<init>(Ljava/lang/String;)V

+###io/trino/sql/ParsingUtil
@351
+#createParsingOptions(Lio/trino/Session;)Lio/trino/sql/parser/ParsingOptions;

+###io/trino/sql/planner/DistributedExecutionPlanner
@351
+#<init>(Lio/trino/split/SplitManager;Lio/trino/metadata/Metadata;Lio/trino/server/DynamicFilterService;)V
+#plan(Lio/trino/sql/planner/SubPlan;Lio/trino/Session;)Lio/trino/sql/planner/StageExecutionPlan;
@365
+#<init>(Lio/trino/split/SplitManager;Lio/trino/metadata/Metadata;Lio/trino/server/DynamicFilterService;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/split/SplitManager;Lio/trino/metadata/Metadata;Lio/trino/server/DynamicFilterService;)V
@366
-###io/trino/sql/planner/DistributedExecutionPlanner

+###io/trino/sql/planner/StatisticsAggregationPlanner$TableStatisticAggregation
@351
+#getAggregations()Lio/trino/sql/planner/plan/StatisticAggregations;
+#getDescriptor()Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;

+###io/trino/sql/planner/PlanOptimizers
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/RuleStatsRecorder;)V
+#initialize()V
+#destroy()V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/RuleStatsRecorder;)V
+#get()Ljava/util/List;
@355
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/sql/planner/NodePartitioningManager;)V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/sql/planner/NodePartitioningManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/RuleStatsRecorder;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/RuleStatsRecorder;)V
@356
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
+#getOptimizerStats()Ljava/util/Map;
+#getRuleStats()Ljava/util/Map;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/sql/planner/NodePartitioningManager;)V
-#initialize()V
-#destroy()V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/sql/planner/NodePartitioningManager;)V
@357
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLorg/weakref/jmx/MBeanExporter;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
@358
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
@362
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/sql/planner/RuleStatsRecorder;)V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/sql/planner/RuleStatsRecorder;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)V
@365
+#columnPruningRules(Lio/trino/metadata/Metadata;)Ljava/util/Set;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/sql/planner/RuleStatsRecorder;)V
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/sql/planner/RuleStatsRecorder;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/sql/planner/RuleStatsRecorder;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/sql/planner/RuleStatsRecorder;)V

+###io/trino/sql/planner/LiteralInterpreter
@351
+#evaluate(Lio/trino/metadata/Metadata;Lio/trino/spi/connector/ConnectorSession;Ljava/util/Map;Lio/trino/sql/tree/Expression;)Ljava/lang/Object;
@364
+#evaluate(Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/util/Map;Lio/trino/sql/tree/Expression;)Ljava/lang/Object;
-#evaluate(Lio/trino/metadata/Metadata;Lio/trino/spi/connector/ConnectorSession;Ljava/util/Map;Lio/trino/sql/tree/Expression;)Ljava/lang/Object;
@367
+#evaluate(Lio/trino/sql/PlannerContext;Lio/trino/Session;Ljava/util/Map;Lio/trino/sql/tree/Expression;)Ljava/lang/Object;
-#evaluate(Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/util/Map;Lio/trino/sql/tree/Expression;)Ljava/lang/Object;
@378
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/Session;)V
+#evaluate(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;)Ljava/lang/Object;
-#evaluate(Lio/trino/sql/PlannerContext;Lio/trino/Session;Ljava/util/Map;Lio/trino/sql/tree/Expression;)Ljava/lang/Object;

+###io/trino/sql/planner/Partitioning
@351
+#create(Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;)Lio/trino/sql/planner/Partitioning;
+#jsonCreate(Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;)Lio/trino/sql/planner/Partitioning;
+#getHandle()Lio/trino/sql/planner/PartitioningHandle;
+#getArguments()Ljava/util/List;
+#getColumns()Ljava/util/Set;
+#isCompatibleWith(Lio/trino/sql/planner/Partitioning;Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
+#isCompatibleWith(Lio/trino/sql/planner/Partitioning;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
+#isPartitionedOn(Ljava/util/Collection;Ljava/util/Set;)Z
+#isEffectivelySinglePartition(Ljava/util/Set;)Z
+#isRepartitionEffective(Ljava/util/Collection;Ljava/util/Set;)Z
+#translate(Ljava/util/function/Function;)Lio/trino/sql/planner/Partitioning;
+#translate(Lio/trino/sql/planner/Partitioning$Translator;)Ljava/util/Optional;
+#withAlternativePartitiongingHandle(Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/sql/planner/Partitioning;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@380
+#withAlternativePartitioningHandle(Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/sql/planner/Partitioning;
-#withAlternativePartitiongingHandle(Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/sql/planner/Partitioning;
@388
+#isPartitionedOnExactly(Ljava/util/Collection;Ljava/util/Set;)Z

+###io/trino/sql/planner/SystemPartitioningHandle
@351
+#<init>(Lio/trino/sql/planner/SystemPartitioningHandle$SystemPartitioning;Lio/trino/sql/planner/SystemPartitioningHandle$SystemPartitionFunction;)V
+#getPartitioning()Lio/trino/sql/planner/SystemPartitioningHandle$SystemPartitioning;
+#getFunction()Lio/trino/sql/planner/SystemPartitioningHandle$SystemPartitionFunction;
+#isSingleNode()Z
+#isCoordinatorOnly()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getNodePartitionMap(Lio/trino/Session;Lio/trino/execution/scheduler/NodeScheduler;)Lio/trino/sql/planner/NodePartitionMap;
+#getPartitionFunction(Ljava/util/List;Z[ILio/trino/type/BlockTypeOperators;)Lio/trino/operator/PartitionFunction;
@393
-#getNodePartitionMap(Lio/trino/Session;Lio/trino/execution/scheduler/NodeScheduler;)Lio/trino/sql/planner/NodePartitionMap;
@394
+#getPartitioningName()Ljava/lang/String;

+###io/trino/sql/planner/SystemPartitioningHandle$SystemPartitionFunction
@351
+#values()[Lio/trino/sql/planner/SystemPartitioningHandle$SystemPartitionFunction;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/SystemPartitioningHandle$SystemPartitionFunction;
+#createBucketFunction(Ljava/util/List;ZILio/trino/type/BlockTypeOperators;)Lio/trino/spi/connector/BucketFunction;

+###io/trino/sql/planner/SymbolAllocator
@351
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#newSymbol(Lio/trino/sql/planner/Symbol;)Lio/trino/sql/planner/Symbol;
+#newSymbol(Lio/trino/sql/planner/Symbol;Ljava/lang/String;)Lio/trino/sql/planner/Symbol;
+#newSymbol(Ljava/lang/String;Lio/trino/spi/type/Type;)Lio/trino/sql/planner/Symbol;
+#newHashSymbol()Lio/trino/sql/planner/Symbol;
+#newSymbol(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;)Lio/trino/sql/planner/Symbol;
+#newSymbol(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;)Lio/trino/sql/planner/Symbol;
+#newSymbol(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;Ljava/lang/String;)Lio/trino/sql/planner/Symbol;
+#newSymbol(Lio/trino/sql/analyzer/Field;)Lio/trino/sql/planner/Symbol;
+#getTypes()Lio/trino/sql/planner/TypeProvider;

+###io/trino/sql/planner/DeterminismEvaluator
@351
+#isDeterministic(Lio/trino/sql/tree/Expression;Lio/trino/metadata/Metadata;)Z
+#isDeterministic(Lio/trino/sql/tree/Expression;Ljava/util/function/Function;)Z
@406
+#containsCurrentTimeFunctions(Lio/trino/sql/tree/Expression;)Z

+###io/trino/sql/planner/SubPlan
@351
+#<init>(Lio/trino/sql/planner/PlanFragment;Ljava/util/List;)V
+#getFragment()Lio/trino/sql/planner/PlanFragment;
+#getChildren()Ljava/util/List;
+#getAllFragments()Ljava/util/List;
+#sanityCheck()V

+###io/trino/sql/planner/DesugarLikeRewriter
@351
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/Expression;
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/tree/Expression;
@364
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/Session;)Lio/trino/sql/tree/Expression;
-#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/Expression;
@405
-###io/trino/sql/planner/DesugarLikeRewriter

+###io/trino/sql/planner/PlanCopier
@351
+#copyPlan(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;)Lio/trino/sql/planner/NodeAndMappings;

+###io/trino/sql/planner/LogicalPlanner$Stage
@351
+#values()[Lio/trino/sql/planner/LogicalPlanner$Stage;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/LogicalPlanner$Stage;

+###io/trino/sql/planner/PlanFragment
@351
+#<init>(Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/operator/StageExecutionDescriptor;Lio/trino/cost/StatsAndCosts;Ljava/util/Optional;)V
+#getId()Lio/trino/sql/planner/plan/PlanFragmentId;
+#getRoot()Lio/trino/sql/planner/plan/PlanNode;
+#getSymbols()Ljava/util/Map;
+#getPartitioning()Lio/trino/sql/planner/PartitioningHandle;
+#getPartitionedSources()Ljava/util/List;
+#isPartitionedSources(Lio/trino/sql/planner/plan/PlanNodeId;)Z
+#getPartitioningScheme()Lio/trino/sql/planner/PartitioningScheme;
+#getStageExecutionDescriptor()Lio/trino/operator/StageExecutionDescriptor;
+#getStatsAndCosts()Lio/trino/cost/StatsAndCosts;
+#getJsonRepresentation()Ljava/util/Optional;
+#withoutEmbeddedJsonRepresentation()Lio/trino/sql/planner/PlanFragment;
+#getTypes()Ljava/util/List;
+#getPartitionedSourceNodes()Ljava/util/Set;
+#isLeaf()Z
+#getRemoteSourceNodes()Ljava/util/List;
+#withBucketToPartition(Ljava/util/Optional;)Lio/trino/sql/planner/PlanFragment;
+#withFixedLifespanScheduleGroupedExecution(Ljava/util/List;)Lio/trino/sql/planner/PlanFragment;
+#withDynamicLifespanScheduleGroupedExecution(Ljava/util/List;)Lio/trino/sql/planner/PlanFragment;
+#toString()Ljava/lang/String;
@388
+#<init>(Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/cost/StatsAndCosts;Ljava/util/Optional;)V
-#<init>(Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/operator/StageExecutionDescriptor;Lio/trino/cost/StatsAndCosts;Ljava/util/Optional;)V
-#getStageExecutionDescriptor()Lio/trino/operator/StageExecutionDescriptor;
-#withFixedLifespanScheduleGroupedExecution(Ljava/util/List;)Lio/trino/sql/planner/PlanFragment;
-#withDynamicLifespanScheduleGroupedExecution(Ljava/util/List;)Lio/trino/sql/planner/PlanFragment;
@393
+#<init>(Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/cost/StatsAndCosts;Ljava/util/List;Ljava/util/Optional;)V
+#getActiveCatalogs()Ljava/util/List;
-#<init>(Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/cost/StatsAndCosts;Ljava/util/Optional;)V
@407
+#<init>(Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/Optional;Ljava/util/List;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/cost/StatsAndCosts;Ljava/util/List;Ljava/util/Optional;)V
+#getPartitionCount()Ljava/util/Optional;
+#getOutputPartitioningScheme()Lio/trino/sql/planner/PartitioningScheme;
-#<init>(Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/cost/StatsAndCosts;Ljava/util/List;Ljava/util/Optional;)V
-#getPartitioningScheme()Lio/trino/sql/planner/PartitioningScheme;

+###io/trino/sql/planner/LocalDynamicFilterConsumer
@351
+#<init>(Ljava/util/Map;Ljava/util/Map;I)V
+#getDynamicFilterDomains()Lcom/google/common/util/concurrent/ListenableFuture;
+#create(Lio/trino/sql/planner/plan/JoinNode;Ljava/util/List;ILjava/util/Set;)Lio/trino/sql/planner/LocalDynamicFilterConsumer;
+#getBuildChannels()Ljava/util/Map;
+#getTupleDomainConsumer()Ljava/util/function/Consumer;
+#toString()Ljava/lang/String;
@383
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#addPartition(Lio/trino/spi/predicate/TupleDomain;)V
+#setPartitionCount(I)V
+#create(Lio/trino/sql/planner/plan/JoinNode;Ljava/util/List;Ljava/util/Set;)Lio/trino/sql/planner/LocalDynamicFilterConsumer;
-#<init>(Ljava/util/Map;Ljava/util/Map;I)V
-#create(Lio/trino/sql/planner/plan/JoinNode;Ljava/util/List;ILjava/util/Set;)Lio/trino/sql/planner/LocalDynamicFilterConsumer;
-#getTupleDomainConsumer()Ljava/util/function/Consumer;
@387
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)V
+#create(Lio/trino/sql/planner/plan/JoinNode;Ljava/util/List;Ljava/util/Set;Ljava/util/List;)Lio/trino/sql/planner/LocalDynamicFilterConsumer;
-#<init>(Ljava/util/Map;Ljava/util/Map;)V
-#getDynamicFilterDomains()Lcom/google/common/util/concurrent/ListenableFuture;
-#create(Lio/trino/sql/planner/plan/JoinNode;Ljava/util/List;Ljava/util/Set;)Lio/trino/sql/planner/LocalDynamicFilterConsumer;
@388
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Lio/airlift/units/DataSize;)V
+#create(Lio/trino/sql/planner/plan/JoinNode;Ljava/util/List;Ljava/util/Set;Ljava/util/List;Lio/airlift/units/DataSize;)Lio/trino/sql/planner/LocalDynamicFilterConsumer;
-#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)V
-#create(Lio/trino/sql/planner/plan/JoinNode;Ljava/util/List;Ljava/util/Set;Ljava/util/List;)Lio/trino/sql/planner/LocalDynamicFilterConsumer;
@392
+#isDomainCollectionComplete()Z

+###io/trino/sql/planner/PlanFragmenter
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/QueryManagerConfig;)V
+#createSubPlans(Lio/trino/Session;Lio/trino/sql/planner/Plan;ZLio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/SubPlan;
@374
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/QueryManagerConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/QueryManagerConfig;)V
@388
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/execution/QueryManagerConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/QueryManagerConfig;)V
@393
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/CatalogManager;Lio/trino/execution/QueryManagerConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/execution/QueryManagerConfig;)V

+###io/trino/sql/planner/ConnectorExpressionTranslator
@351
+#translate(Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;Lio/trino/sql/planner/LiteralEncoder;)Lio/trino/sql/tree/Expression;
+#translate(Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@367
+#translate(Lio/trino/Session;Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;Lio/trino/sql/planner/LiteralEncoder;)Lio/trino/sql/tree/Expression;
-#translate(Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;Lio/trino/sql/planner/LiteralEncoder;)Lio/trino/sql/tree/Expression;
@372
+#translate(Lio/trino/Session;Lio/trino/spi/expression/ConnectorExpression;Lio/trino/sql/PlannerContext;Ljava/util/Map;Lio/trino/sql/planner/LiteralEncoder;)Lio/trino/sql/tree/Expression;
+#translate(Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/PlannerContext;)Ljava/util/Optional;
-#translate(Lio/trino/Session;Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;Lio/trino/sql/planner/LiteralEncoder;)Lio/trino/sql/tree/Expression;
-#translate(Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
@396
+#translate(Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)Ljava/util/Optional;
+#translateConjuncts(Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/ConnectorExpressionTranslator$ConnectorExpressionTranslation;
-#translate(Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/PlannerContext;)Ljava/util/Optional;

+###io/trino/sql/planner/EqualityInference$EqualityPartition
@351
+#<init>(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)V
+#getScopeEqualities()Ljava/util/List;
+#getScopeComplementEqualities()Ljava/util/List;
+#getScopeStraddlingEqualities()Ljava/util/List;

+###io/trino/sql/planner/LiteralEncoder
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#toExpressions(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
+#toExpression(Ljava/lang/Object;Lio/trino/spi/type/Type;)Lio/trino/sql/tree/Expression;
@364
+#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
+#toExpressions(Lio/trino/Session;Ljava/util/List;Ljava/util/List;)Ljava/util/List;
+#toExpression(Lio/trino/Session;Ljava/lang/Object;Lio/trino/spi/type/Type;)Lio/trino/sql/tree/Expression;
-#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;)V
-#toExpressions(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
-#toExpression(Ljava/lang/Object;Lio/trino/spi/type/Type;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/ExpressionNodeInliner
@351
+#replaceExpression(Lio/trino/sql/tree/Expression;Ljava/util/Map;)Lio/trino/sql/tree/Expression;
+#<init>(Ljava/util/Map;)V

+###io/trino/sql/planner/StageExecutionPlan
@351
+#<init>(Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;)V
+#getFieldNames()Ljava/util/List;
+#getFragment()Lio/trino/sql/planner/PlanFragment;
+#getSplitSources()Ljava/util/Map;
+#getSubStages()Ljava/util/List;
+#getTables()Ljava/util/Map;
+#withBucketToPartition(Ljava/util/Optional;)Lio/trino/sql/planner/StageExecutionPlan;
+#toString()Ljava/lang/String;
@366
-###io/trino/sql/planner/StageExecutionPlan

+###io/trino/sql/planner/ReferenceAwareExpressionNodeInliner
@351
+#replaceExpression(Lio/trino/sql/tree/Expression;Ljava/util/Map;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/plan/UnnestNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/planner/plan/JoinNode$Type;Ljava/util/Optional;)V
+#getOutputSymbols()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getReplicateSymbols()Ljava/util/List;
+#getMappings()Ljava/util/List;
+#getOrdinalitySymbol()Ljava/util/Optional;
+#getJoinType()Lio/trino/sql/planner/plan/JoinNode$Type;
+#getFilter()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/JoinNode$Type
@351
+#values()[Lio/trino/sql/planner/plan/JoinNode$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/JoinNode$Type;
+#getJoinLabel()Ljava/lang/String;
+#typeConvert(Lio/trino/sql/tree/Join$Type;)Lio/trino/sql/planner/plan/JoinNode$Type;

+###io/trino/sql/planner/plan/Assignments
@351
+#builder()Lio/trino/sql/planner/plan/Assignments$Builder;
+#identity([Lio/trino/sql/planner/Symbol;)Lio/trino/sql/planner/plan/Assignments;
+#identity(Ljava/lang/Iterable;)Lio/trino/sql/planner/plan/Assignments;
+#copyOf(Ljava/util/Map;)Lio/trino/sql/planner/plan/Assignments;
+#of()Lio/trino/sql/planner/plan/Assignments;
+#of(Lio/trino/sql/planner/Symbol;Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/plan/Assignments;
+#of(Lio/trino/sql/planner/Symbol;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/Symbol;Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/plan/Assignments;
+#of(Ljava/util/Collection;Lio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/plan/Assignments;
+#<init>(Ljava/util/Map;)V
+#getOutputs()Ljava/util/List;
+#getMap()Ljava/util/Map;
+#rewrite(Lio/trino/sql/tree/ExpressionRewriter;)Lio/trino/sql/planner/plan/Assignments;
+#rewrite(Ljava/util/function/Function;)Lio/trino/sql/planner/plan/Assignments;
+#filter(Ljava/util/Collection;)Lio/trino/sql/planner/plan/Assignments;
+#filter(Lcom/google/common/base/Predicate;)Lio/trino/sql/planner/plan/Assignments;
+#isIdentity(Lio/trino/sql/planner/Symbol;)Z
+#isIdentity()Z
+#getExpressions()Ljava/util/Collection;
+#getSymbols()Ljava/util/Set;
+#entrySet()Ljava/util/Set;
+#get(Lio/trino/sql/planner/Symbol;)Lio/trino/sql/tree/Expression;
+#size()I
+#isEmpty()Z
+#forEach(Ljava/util/function/BiConsumer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@352
+#filter(Ljava/util/function/Predicate;)Lio/trino/sql/planner/plan/Assignments;
-#filter(Lcom/google/common/base/Predicate;)Lio/trino/sql/planner/plan/Assignments;

+###io/trino/sql/planner/plan/TableWriterNode$WriterTarget
@351
+#<init>()V
+#toString()Ljava/lang/String;
@380
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/plan/TopNRankingNode$RankingType
@352
+#values()[Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;

+###io/trino/sql/planner/plan/UnionNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Lcom/google/common/collect/ListMultimap;Ljava/util/List;)V
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/SetOperationNode
@351
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getSymbolMapping()Lcom/google/common/collect/ListMultimap;
+#sourceOutputLayout(I)Ljava/util/List;
+#sourceSymbolMap(I)Ljava/util/Map;
+#outputSymbolMap(I)Lcom/google/common/collect/Multimap;

+###io/trino/sql/planner/plan/StatisticAggregations$Parts
@351
+#<init>(Lio/trino/sql/planner/plan/StatisticAggregations;Lio/trino/sql/planner/plan/StatisticAggregations;Ljava/util/Map;)V
+#getPartialAggregation()Lio/trino/sql/planner/plan/StatisticAggregations;
+#getFinalAggregation()Lio/trino/sql/planner/plan/StatisticAggregations;
+#getMappings()Ljava/util/Map;

+###io/trino/sql/planner/plan/ExceptNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Lcom/google/common/collect/ListMultimap;Ljava/util/List;Z)V
+#isDistinct()Z
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/TableWriterNode$InsertTarget
@351
+#<init>(Lio/trino/metadata/InsertTableHandle;Lio/trino/spi/connector/SchemaTableName;)V
+#getHandle()Lio/trino/metadata/InsertTableHandle;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#toString()Ljava/lang/String;
@380
+#<init>(Lio/trino/metadata/InsertTableHandle;Lio/trino/spi/connector/SchemaTableName;Z)V
+#getReportingWrittenBytesSupported()Z
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
-#<init>(Lio/trino/metadata/InsertTableHandle;Lio/trino/spi/connector/SchemaTableName;)V
@403
+#<init>(Lio/trino/metadata/InsertTableHandle;Lio/trino/spi/connector/SchemaTableName;ZZ)V
+#isMultipleWritersPerPartitionSupported()Z
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
-#<init>(Lio/trino/metadata/InsertTableHandle;Lio/trino/spi/connector/SchemaTableName;Z)V

+###io/trino/sql/planner/plan/Patterns$Values
@351
+#<init>()V
+#rows()Lio/trino/matching/Property;
+#rowCount()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/AggregationNode$Aggregation
@351
+#<init>(Lio/trino/metadata/ResolvedFunction;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getResolvedFunction()Lio/trino/metadata/ResolvedFunction;
+#getArguments()Ljava/util/List;
+#isDistinct()Z
+#getFilter()Ljava/util/Optional;
+#getOrderingScheme()Ljava/util/Optional;
+#getMask()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/plan/SampleNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;DLio/trino/sql/planner/plan/SampleNode$Type;)V
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getSampleRatio()D
+#getSampleType()Lio/trino/sql/planner/plan/SampleNode$Type;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/Patterns$Apply
@351
+#<init>()V
+#correlation()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/AggregationNode$GroupingSetDescriptor
@351
+#<init>(Ljava/util/List;ILjava/util/Set;)V
+#getGroupingKeys()Ljava/util/List;
+#getGroupingSetCount()I
+#getGlobalGroupingSets()Ljava/util/Set;

+###io/trino/sql/planner/plan/TableWriterNode$UpdateTarget
@352
+#<init>(Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;Ljava/util/List;)V
+#getHandle()Lio/trino/metadata/TableHandle;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#getUpdatedColumns()Ljava/util/List;
+#getUpdatedColumnHandles()Ljava/util/List;
+#toString()Ljava/lang/String;
@354
+#<init>(Ljava/util/Optional;Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;Ljava/util/List;)V
+#getHandle()Ljava/util/Optional;
+#getHandleOrElseThrow()Lio/trino/metadata/TableHandle;
-#<init>(Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;Ljava/util/List;)V
-#getHandle()Lio/trino/metadata/TableHandle;
@380
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/plan/ChildReplacer
@351
+#replaceChildren(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/ValuesNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;)V
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;I)V
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;ILjava/util/Optional;)V
+#getOutputSymbols()Ljava/util/List;
+#getRowCount()I
+#getRows()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/StatisticAggregationsDescriptor$Builder
@351
+#<init>()V
+#addGrouping(Ljava/lang/String;Ljava/lang/Object;)V
+#addTableStatistic(Lio/trino/spi/statistics/TableStatisticType;Ljava/lang/Object;)V
+#addColumnStatistic(Lio/trino/spi/statistics/ColumnStatisticMetadata;Ljava/lang/Object;)V
+#build()Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;

+###io/trino/sql/planner/plan/Patterns$Limit
@351
+#<init>()V
+#count()Lio/trino/matching/Property;
@358
+#requiresPreSortedInputs()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/IndexSourceNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/IndexHandle;Lio/trino/metadata/TableHandle;Ljava/util/Set;Ljava/util/List;Ljava/util/Map;)V
+#getIndexHandle()Lio/trino/metadata/IndexHandle;
+#getTableHandle()Lio/trino/metadata/TableHandle;
+#getLookupSymbols()Ljava/util/Set;
+#getOutputSymbols()Ljava/util/List;
+#getAssignments()Ljava/util/Map;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/Assignments$Builder
@351
+#<init>()V
+#putAll(Lio/trino/sql/planner/plan/Assignments;)Lio/trino/sql/planner/plan/Assignments$Builder;
+#putAll(Ljava/util/Map;)Lio/trino/sql/planner/plan/Assignments$Builder;
+#put(Lio/trino/sql/planner/Symbol;Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/plan/Assignments$Builder;
+#put(Ljava/util/Map$Entry;)Lio/trino/sql/planner/plan/Assignments$Builder;
+#putIdentities(Ljava/lang/Iterable;)Lio/trino/sql/planner/plan/Assignments$Builder;
+#putIdentity(Lio/trino/sql/planner/Symbol;)Lio/trino/sql/planner/plan/Assignments$Builder;
+#build()Lio/trino/sql/planner/plan/Assignments;
@357
+#add(Lio/trino/sql/planner/plan/Assignments$Assignment;)Lio/trino/sql/planner/plan/Assignments$Builder;

+###io/trino/sql/planner/plan/IndexJoinNode$Type
@351
+#values()[Lio/trino/sql/planner/plan/IndexJoinNode$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/IndexJoinNode$Type;
+#getJoinLabel()Ljava/lang/String;

+###io/trino/sql/planner/plan/StatisticAggregationsDescriptor$ColumnStatisticMetadataKeySerializer
@351
+#<init>()V
+#serialize(Lio/trino/spi/statistics/ColumnStatisticMetadata;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
@398
-###io/trino/sql/planner/plan/StatisticAggregationsDescriptor$ColumnStatisticMetadataKeySerializer

+###io/trino/sql/planner/plan/DeleteNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$DeleteTarget;Lio/trino/sql/planner/Symbol;Ljava/util/List;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getTarget()Lio/trino/sql/planner/plan/TableWriterNode$DeleteTarget;
+#getRowId()Lio/trino/sql/planner/Symbol;
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@406
-###io/trino/sql/planner/plan/DeleteNode

+###io/trino/sql/planner/plan/RemoteSourceNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/planner/plan/ExchangeNode$Type;)V
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanFragmentId;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/planner/plan/ExchangeNode$Type;)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getSourceFragmentIds()Ljava/util/List;
+#getOrderingScheme()Ljava/util/Optional;
+#getExchangeType()Lio/trino/sql/planner/plan/ExchangeNode$Type;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@366
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/planner/plan/ExchangeNode$Type;Lio/trino/operator/RetryPolicy;)V
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanFragmentId;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/planner/plan/ExchangeNode$Type;Lio/trino/operator/RetryPolicy;)V
+#getRetryPolicy()Lio/trino/operator/RetryPolicy;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/planner/plan/ExchangeNode$Type;)V
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanFragmentId;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/planner/plan/ExchangeNode$Type;)V

+###io/trino/sql/planner/plan/EnforceSingleRowNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/DynamicFilterId
@351
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@388
+#getRetainedSizeInBytes()J

+###io/trino/sql/planner/plan/IntersectNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Lcom/google/common/collect/ListMultimap;Ljava/util/List;Z)V
+#isDistinct()Z
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/JoinNode$DistributionType
@351
+#values()[Lio/trino/sql/planner/plan/JoinNode$DistributionType;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/JoinNode$DistributionType;

+###io/trino/sql/planner/plan/TableWriterNode$CreateTarget
@351
+#<init>(Lio/trino/metadata/OutputTableHandle;Lio/trino/spi/connector/SchemaTableName;)V
+#getHandle()Lio/trino/metadata/OutputTableHandle;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#toString()Ljava/lang/String;
@380
+#<init>(Lio/trino/metadata/OutputTableHandle;Lio/trino/spi/connector/SchemaTableName;Z)V
+#getReportingWrittenBytesSupported()Z
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
-#<init>(Lio/trino/metadata/OutputTableHandle;Lio/trino/spi/connector/SchemaTableName;)V
@403
+#<init>(Lio/trino/metadata/OutputTableHandle;Lio/trino/spi/connector/SchemaTableName;ZZ)V
+#isMultipleWritersPerPartitionSupported()Z
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
-#<init>(Lio/trino/metadata/OutputTableHandle;Lio/trino/spi/connector/SchemaTableName;Z)V

+###io/trino/sql/planner/plan/ExchangeNode$Scope
@351
+#values()[Lio/trino/sql/planner/plan/ExchangeNode$Scope;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/ExchangeNode$Scope;

+###io/trino/sql/planner/plan/WindowNode$Frame
@351
+#<init>(Lio/trino/sql/tree/WindowFrame$Type;Lio/trino/sql/tree/FrameBound$Type;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/tree/FrameBound$Type;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getType()Lio/trino/sql/tree/WindowFrame$Type;
+#getStartType()Lio/trino/sql/tree/FrameBound$Type;
+#getStartValue()Ljava/util/Optional;
+#getSortKeyCoercedForFrameStartComparison()Ljava/util/Optional;
+#getEndType()Lio/trino/sql/tree/FrameBound$Type;
+#getEndValue()Ljava/util/Optional;
+#getSortKeyCoercedForFrameEndComparison()Ljava/util/Optional;
+#getOriginalStartValue()Ljava/util/Optional;
+#getOriginalEndValue()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/plan/SortNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/OrderingScheme;Z)V
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getOutputSymbols()Ljava/util/List;
+#isPartial()Z
+#getOrderingScheme()Lio/trino/sql/planner/OrderingScheme;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/TableWriterNode$DeleteTarget
@351
+#<init>(Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/SchemaTableName;)V
+#getHandle()Lio/trino/metadata/TableHandle;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#toString()Ljava/lang/String;
@354
+#<init>(Ljava/util/Optional;Lio/trino/spi/connector/SchemaTableName;)V
+#getHandle()Ljava/util/Optional;
+#getHandleOrElseThrow()Lio/trino/metadata/TableHandle;
-#<init>(Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/SchemaTableName;)V
-#getHandle()Lio/trino/metadata/TableHandle;
@380
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/plan/ProjectNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/Assignments;)V
+#getOutputSymbols()Ljava/util/List;
+#getAssignments()Lio/trino/sql/planner/plan/Assignments;
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#isIdentity()Z
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/PlanNodeId
@351
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@371
+#getRetainedSizeInBytes()J

+###io/trino/sql/planner/plan/SpatialJoinNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/SpatialJoinNode$Type;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/tree/Expression;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getType()Lio/trino/sql/planner/plan/SpatialJoinNode$Type;
+#getLeft()Lio/trino/sql/planner/plan/PlanNode;
+#getRight()Lio/trino/sql/planner/plan/PlanNode;
+#getFilter()Lio/trino/sql/tree/Expression;
+#getLeftPartitionSymbol()Ljava/util/Optional;
+#getRightPartitionSymbol()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getDistributionType()Lio/trino/sql/planner/plan/SpatialJoinNode$DistributionType;
+#getKdbTree()Ljava/util/Optional;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/Patterns$TopN
@351
+#<init>()V
+#step()Lio/trino/matching/Property;
+#count()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/Patterns$Aggregation
@351
+#<init>()V
+#groupingColumns()Lio/trino/matching/Property;
+#step()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/StatisticsWriterNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/StatisticsWriterNode$WriteStatisticsTarget;Lio/trino/sql/planner/Symbol;ZLio/trino/sql/planner/plan/StatisticAggregationsDescriptor;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getTarget()Lio/trino/sql/planner/plan/StatisticsWriterNode$WriteStatisticsTarget;
+#getDescriptor()Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;
+#getRowCountSymbol()Lio/trino/sql/planner/Symbol;
+#isRowCountEnabled()Z
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/planner/plan/Patterns
@351
+#assignUniqueId()Lio/trino/matching/Pattern;
+#aggregation()Lio/trino/matching/Pattern;
+#groupId()Lio/trino/matching/Pattern;
+#applyNode()Lio/trino/matching/Pattern;
+#delete()Lio/trino/matching/Pattern;
+#exchange()Lio/trino/matching/Pattern;
+#explainAnalyze()Lio/trino/matching/Pattern;
+#enforceSingleRow()Lio/trino/matching/Pattern;
+#filter()Lio/trino/matching/Pattern;
+#indexJoin()Lio/trino/matching/Pattern;
+#indexSource()Lio/trino/matching/Pattern;
+#join()Lio/trino/matching/Pattern;
+#spatialJoin()Lio/trino/matching/Pattern;
+#correlatedJoin()Lio/trino/matching/Pattern;
+#offset()Lio/trino/matching/Pattern;
+#limit()Lio/trino/matching/Pattern;
+#markDistinct()Lio/trino/matching/Pattern;
+#output()Lio/trino/matching/Pattern;
+#project()Lio/trino/matching/Pattern;
+#sample()Lio/trino/matching/Pattern;
+#semiJoin()Lio/trino/matching/Pattern;
+#sort()Lio/trino/matching/Pattern;
+#tableFinish()Lio/trino/matching/Pattern;
+#tableScan()Lio/trino/matching/Pattern;
+#tableWriterNode()Lio/trino/matching/Pattern;
+#topN()Lio/trino/matching/Pattern;
+#union()Lio/trino/matching/Pattern;
+#values()Lio/trino/matching/Pattern;
+#unnest()Lio/trino/matching/Pattern;
+#window()Lio/trino/matching/Pattern;
+#rowNumber()Lio/trino/matching/Pattern;
+#topNRowNumber()Lio/trino/matching/Pattern;
+#distinctLimit()Lio/trino/matching/Pattern;
+#intersect()Lio/trino/matching/Pattern;
+#except()Lio/trino/matching/Pattern;
+#source()Lio/trino/matching/Property;
+#sources()Lio/trino/matching/Property;
@352
+#update()Lio/trino/matching/Pattern;
+#topNRanking()Lio/trino/matching/Pattern;
-#topNRowNumber()Lio/trino/matching/Pattern;
@356
+#patternRecognition()Lio/trino/matching/Pattern;
@364
+#tableExecute()Lio/trino/matching/Pattern;
@365
+#emptyValues()Lio/trino/matching/Pattern;
@381
+#tableFunction()Lio/trino/matching/Pattern;
@392
+#dynamicFilterSource()Lio/trino/matching/Pattern;
@393
+#merge()Lio/trino/matching/Pattern;
@401
+#mergeWriter()Lio/trino/matching/Pattern;
-#merge()Lio/trino/matching/Pattern;
@406
-#delete()Lio/trino/matching/Pattern;
-#update()Lio/trino/matching/Pattern;
@407
+#tableFunctionProcessor()Lio/trino/matching/Pattern;

+###io/trino/sql/planner/plan/IndexJoinNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/IndexJoinNode$Type;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V
+#getType()Lio/trino/sql/planner/plan/IndexJoinNode$Type;
+#getProbeSource()Lio/trino/sql/planner/plan/PlanNode;
+#getIndexSource()Lio/trino/sql/planner/plan/PlanNode;
+#getCriteria()Ljava/util/List;
+#getProbeHashSymbol()Ljava/util/Optional;
+#getIndexHashSymbol()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/PlanNode
@351
+#getId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/planner/plan/SimplePlanRewriter
@351
+#<init>()V
+#rewriteWith(Lio/trino/sql/planner/plan/SimplePlanRewriter;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/PlanNode;
+#rewriteWith(Lio/trino/sql/planner/plan/SimplePlanRewriter;Lio/trino/sql/planner/plan/PlanNode;Ljava/lang/Object;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/GroupIdNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/Map;Ljava/util/List;Lio/trino/sql/planner/Symbol;)V
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getGroupingSets()Ljava/util/List;
+#getGroupingColumns()Ljava/util/Map;
+#getAggregationArguments()Ljava/util/List;
+#getGroupIdSymbol()Lio/trino/sql/planner/Symbol;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#getInputSymbols()Ljava/util/Set;
+#getCommonGroupingColumns()Ljava/util/Set;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/Patterns$DistinctLimit
@351
+#<init>()V
+#isPartial()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/CorrelatedJoinNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/planner/plan/CorrelatedJoinNode$Type;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/Node;)V
+#getInput()Lio/trino/sql/planner/plan/PlanNode;
+#getSubquery()Lio/trino/sql/planner/plan/PlanNode;
+#getCorrelation()Ljava/util/List;
+#getType()Lio/trino/sql/planner/plan/CorrelatedJoinNode$Type;
+#getFilter()Lio/trino/sql/tree/Expression;
+#getOriginSubquery()Lio/trino/sql/tree/Node;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/planner/plan/DistinctLimitNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;JZLjava/util/List;Ljava/util/Optional;)V
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getLimit()J
+#isPartial()Z
+#getHashSymbol()Ljava/util/Optional;
+#getDistinctSymbols()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/StatisticsWriterNode$WriteStatisticsTarget
@351
+#<init>()V
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/plan/SpatialJoinNode$Type
@351
+#values()[Lio/trino/sql/planner/plan/SpatialJoinNode$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/SpatialJoinNode$Type;
+#getJoinLabel()Ljava/lang/String;
+#fromJoinNodeType(Lio/trino/sql/planner/plan/JoinNode$Type;)Lio/trino/sql/planner/plan/SpatialJoinNode$Type;

+###io/trino/sql/planner/plan/LimitNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;JZ)V
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;JLjava/util/Optional;Z)V
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getCount()J
+#isWithTies()Z
+#getTiesResolvingScheme()Ljava/util/Optional;
+#isPartial()Z
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@358
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;JLjava/util/Optional;ZLjava/util/List;)V
+#requiresPreSortedInputs()Z
+#getPreSortedInputs()Ljava/util/List;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;JLjava/util/Optional;Z)V

+###io/trino/sql/planner/plan/TableWriterNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getTarget()Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;
+#getRowCountSymbol()Lio/trino/sql/planner/Symbol;
+#getFragmentSymbol()Lio/trino/sql/planner/Symbol;
+#getColumns()Ljava/util/List;
+#getColumnNames()Ljava/util/List;
+#getNotNullColumnSymbols()Ljava/util/Set;
+#getPartitioningScheme()Ljava/util/Optional;
+#getStatisticsAggregation()Ljava/util/Optional;
+#getStatisticsAggregationDescriptor()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@354
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getPreferredPartitioningScheme()Ljava/util/Optional;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
@393
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
-#getNotNullColumnSymbols()Ljava/util/Set;

+###io/trino/sql/planner/plan/WindowNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Set;I)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getCreatedSymbols()Ljava/util/Set;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;
+#getPartitionBy()Ljava/util/List;
+#getOrderingScheme()Ljava/util/Optional;
+#getWindowFunctions()Ljava/util/Map;
+#getFrames()Ljava/util/List;
+#getHashSymbol()Ljava/util/Optional;
+#getPrePartitionedInputs()Ljava/util/Set;
+#getPreSortedOrderPrefix()I
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@405
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/DataOrganizationSpecification;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Set;I)V
+#getSpecification()Lio/trino/sql/planner/plan/DataOrganizationSpecification;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Set;I)V
-#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;

+###io/trino/sql/planner/plan/TopNNode$Step
@351
+#values()[Lio/trino/sql/planner/plan/TopNNode$Step;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/TopNNode$Step;

+###io/trino/sql/planner/plan/SampleNode$Type
@351
+#values()[Lio/trino/sql/planner/plan/SampleNode$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/SampleNode$Type;
+#fromType(Lio/trino/sql/tree/SampledRelation$Type;)Lio/trino/sql/planner/plan/SampleNode$Type;

+###io/trino/sql/planner/plan/TableDeleteNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Lio/trino/sql/planner/Symbol;)V
+#getTarget()Lio/trino/metadata/TableHandle;
+#getOutput()Lio/trino/sql/planner/Symbol;
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/Patterns$Sample
@351
+#<init>()V
+#sampleRatio()Lio/trino/matching/Property;
+#sampleType()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/AssignUniqueId
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/Symbol;)V
+#getOutputSymbols()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getSources()Ljava/util/List;
+#getIdColumn()Lio/trino/sql/planner/Symbol;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/WindowNode$Specification
@351
+#<init>(Ljava/util/List;Ljava/util/Optional;)V
+#getPartitionBy()Ljava/util/List;
+#getOrderingScheme()Ljava/util/Optional;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@405
-###io/trino/sql/planner/plan/WindowNode$Specification

+###io/trino/sql/planner/plan/PlanFragmentId
@351
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/plan/SpatialJoinNode$DistributionType
@351
+#values()[Lio/trino/sql/planner/plan/SpatialJoinNode$DistributionType;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/SpatialJoinNode$DistributionType;

+###io/trino/sql/planner/plan/Patterns$Except
@351
+#<init>()V
+#distinct()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/Patterns$Exchange
@351
+#<init>()V
+#scope()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/Patterns$CorrelatedJoin
@351
+#<init>()V
+#correlation()Lio/trino/matching/Property;
+#subquery()Lio/trino/matching/Property;
+#filter()Lio/trino/matching/Property;
+#type()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/TopNNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;JLio/trino/sql/planner/OrderingScheme;Lio/trino/sql/planner/plan/TopNNode$Step;)V
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getOutputSymbols()Ljava/util/List;
+#getCount()J
+#getOrderingScheme()Lio/trino/sql/planner/OrderingScheme;
+#getStep()Lio/trino/sql/planner/plan/TopNNode$Step;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/AggregationNode$Step
@351
+#values()[Lio/trino/sql/planner/plan/AggregationNode$Step;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/AggregationNode$Step;
+#isInputRaw()Z
+#isOutputPartial()Z
+#partialOutput(Lio/trino/sql/planner/plan/AggregationNode$Step;)Lio/trino/sql/planner/plan/AggregationNode$Step;
+#partialInput(Lio/trino/sql/planner/plan/AggregationNode$Step;)Lio/trino/sql/planner/plan/AggregationNode$Step;

+###io/trino/sql/planner/plan/PlanVisitor
@351
+#<init>()V
+#visitRemoteSource(Lio/trino/sql/planner/plan/RemoteSourceNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitAggregation(Lio/trino/sql/planner/plan/AggregationNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitFilter(Lio/trino/sql/planner/plan/FilterNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitProject(Lio/trino/sql/planner/plan/ProjectNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTopN(Lio/trino/sql/planner/plan/TopNNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitOutput(Lio/trino/sql/planner/plan/OutputNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitOffset(Lio/trino/sql/planner/plan/OffsetNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitLimit(Lio/trino/sql/planner/plan/LimitNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitDistinctLimit(Lio/trino/sql/planner/plan/DistinctLimitNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitSample(Lio/trino/sql/planner/plan/SampleNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTableScan(Lio/trino/sql/planner/plan/TableScanNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitExplainAnalyze(Lio/trino/sql/planner/plan/ExplainAnalyzeNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitValues(Lio/trino/sql/planner/plan/ValuesNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitIndexSource(Lio/trino/sql/planner/plan/IndexSourceNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitJoin(Lio/trino/sql/planner/plan/JoinNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitSemiJoin(Lio/trino/sql/planner/plan/SemiJoinNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitSpatialJoin(Lio/trino/sql/planner/plan/SpatialJoinNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitIndexJoin(Lio/trino/sql/planner/plan/IndexJoinNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitSort(Lio/trino/sql/planner/plan/SortNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitWindow(Lio/trino/sql/planner/plan/WindowNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTableWriter(Lio/trino/sql/planner/plan/TableWriterNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitDelete(Lio/trino/sql/planner/plan/DeleteNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTableDelete(Lio/trino/sql/planner/plan/TableDeleteNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTableFinish(Lio/trino/sql/planner/plan/TableFinishNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitStatisticsWriterNode(Lio/trino/sql/planner/plan/StatisticsWriterNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitUnion(Lio/trino/sql/planner/plan/UnionNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitIntersect(Lio/trino/sql/planner/plan/IntersectNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitExcept(Lio/trino/sql/planner/plan/ExceptNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitUnnest(Lio/trino/sql/planner/plan/UnnestNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitMarkDistinct(Lio/trino/sql/planner/plan/MarkDistinctNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitGroupId(Lio/trino/sql/planner/plan/GroupIdNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitRowNumber(Lio/trino/sql/planner/plan/RowNumberNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTopNRowNumber(Lio/trino/sql/planner/plan/TopNRowNumberNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitExchange(Lio/trino/sql/planner/plan/ExchangeNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitEnforceSingleRow(Lio/trino/sql/planner/plan/EnforceSingleRowNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitApply(Lio/trino/sql/planner/plan/ApplyNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitAssignUniqueId(Lio/trino/sql/planner/plan/AssignUniqueId;Ljava/lang/Object;)Ljava/lang/Object;
+#visitGroupReference(Lio/trino/sql/planner/iterative/GroupReference;Ljava/lang/Object;)Ljava/lang/Object;
+#visitCorrelatedJoin(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Ljava/lang/Object;)Ljava/lang/Object;
@352
+#visitUpdate(Lio/trino/sql/planner/plan/UpdateNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitTopNRanking(Lio/trino/sql/planner/plan/TopNRankingNode;Ljava/lang/Object;)Ljava/lang/Object;
-#visitTopNRowNumber(Lio/trino/sql/planner/plan/TopNRowNumberNode;Ljava/lang/Object;)Ljava/lang/Object;
@356
+#visitPatternRecognition(Lio/trino/sql/planner/plan/PatternRecognitionNode;Ljava/lang/Object;)Ljava/lang/Object;
@359
+#visitRefreshMaterializedView(Lio/trino/sql/planner/plan/RefreshMaterializedViewNode;Ljava/lang/Object;)Ljava/lang/Object;
@364
+#visitTableExecute(Lio/trino/sql/planner/plan/TableExecuteNode;Ljava/lang/Object;)Ljava/lang/Object;
@376
+#visitSimpleTableExecuteNode(Lio/trino/sql/planner/plan/SimpleTableExecuteNode;Ljava/lang/Object;)Ljava/lang/Object;
@381
+#visitTableFunction(Lio/trino/sql/planner/plan/TableFunctionNode;Ljava/lang/Object;)Ljava/lang/Object;
@392
+#visitDynamicFilterSource(Lio/trino/sql/planner/plan/DynamicFilterSourceNode;Ljava/lang/Object;)Ljava/lang/Object;
@393
+#visitMergeWriter(Lio/trino/sql/planner/plan/MergeWriterNode;Ljava/lang/Object;)Ljava/lang/Object;
+#visitMergeProcessor(Lio/trino/sql/planner/plan/MergeProcessorNode;Ljava/lang/Object;)Ljava/lang/Object;
@406
-#visitDelete(Lio/trino/sql/planner/plan/DeleteNode;Ljava/lang/Object;)Ljava/lang/Object;
-#visitUpdate(Lio/trino/sql/planner/plan/UpdateNode;Ljava/lang/Object;)Ljava/lang/Object;
@407
+#visitTableFunctionProcessor(Lio/trino/sql/planner/plan/TableFunctionProcessorNode;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/planner/plan/Patterns$Intersect
@351
+#<init>()V
+#distinct()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/ExplainAnalyzeNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/Symbol;Ljava/util/List;Z)V
+#getOutputSymbol()Lio/trino/sql/planner/Symbol;
+#getActualOutputs()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#isVerbose()Z
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/SimplePlanRewriter$RewriteContext
@351
+#get()Ljava/lang/Object;
+#defaultRewrite(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/PlanNode;
+#defaultRewrite(Lio/trino/sql/planner/plan/PlanNode;Ljava/lang/Object;)Lio/trino/sql/planner/plan/PlanNode;
+#rewrite(Lio/trino/sql/planner/plan/PlanNode;Ljava/lang/Object;)Lio/trino/sql/planner/plan/PlanNode;
+#rewrite(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/SemiJoinNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getFilteringSource()Lio/trino/sql/planner/plan/PlanNode;
+#getSourceJoinSymbol()Lio/trino/sql/planner/Symbol;
+#getFilteringSourceJoinSymbol()Lio/trino/sql/planner/Symbol;
+#getSemiJoinOutput()Lio/trino/sql/planner/Symbol;
+#getSourceHashSymbol()Ljava/util/Optional;
+#getFilteringSourceHashSymbol()Ljava/util/Optional;
+#getDistributionType()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#getDynamicFilterId()Ljava/util/Optional;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
+#withDistributionType(Lio/trino/sql/planner/plan/SemiJoinNode$DistributionType;)Lio/trino/sql/planner/plan/SemiJoinNode;
@392
+#withoutDynamicFilter()Lio/trino/sql/planner/plan/SemiJoinNode;

+###io/trino/sql/planner/plan/TableWriterNode$CreateReference
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;)V
+#getCatalog()Ljava/lang/String;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#getLayout()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@380
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/plan/TableWriterNode$RefreshMaterializedViewTarget
@351
+#<init>(Lio/trino/metadata/TableHandle;Lio/trino/metadata/InsertTableHandle;Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;)V
+#getTableHandle()Lio/trino/metadata/TableHandle;
+#getInsertHandle()Lio/trino/metadata/InsertTableHandle;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#getSourceTableHandles()Ljava/util/List;
+#toString()Ljava/lang/String;
@380
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/plan/UpdateNode
@352
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$UpdateTarget;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getTarget()Lio/trino/sql/planner/plan/TableWriterNode$UpdateTarget;
+#getRowId()Lio/trino/sql/planner/Symbol;
+#getColumnValueAndRowIdSymbols()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@406
-###io/trino/sql/planner/plan/UpdateNode

+###io/trino/sql/planner/plan/JoinNode$EquiJoinClause
@351
+#<init>(Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;)V
+#getLeft()Lio/trino/sql/planner/Symbol;
+#getRight()Lio/trino/sql/planner/Symbol;
+#toExpression()Lio/trino/sql/tree/ComparisonExpression;
+#flip()Lio/trino/sql/planner/plan/JoinNode$EquiJoinClause;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/plan/IndexJoinNode$EquiJoinClause
@351
+#<init>(Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;)V
+#getProbe()Lio/trino/sql/planner/Symbol;
+#getIndex()Lio/trino/sql/planner/Symbol;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/plan/TableWriterNode$InsertReference
@351
+#<init>(Lio/trino/metadata/TableHandle;Ljava/util/List;)V
+#getHandle()Lio/trino/metadata/TableHandle;
+#getColumns()Ljava/util/List;
+#toString()Ljava/lang/String;
@380
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/plan/Patterns$SemiJoin
@351
+#<init>()V
+#getSource()Lio/trino/matching/Property;
+#getFilteringSource()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/TableScanNode
@351
+#newInstance(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Z)Lio/trino/sql/planner/plan/TableScanNode;
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Z)V
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/predicate/TupleDomain;Z)V
+#getTable()Lio/trino/metadata/TableHandle;
+#getOutputSymbols()Ljava/util/List;
+#getAssignments()Ljava/util/Map;
+#getEnforcedConstraint()Lio/trino/spi/predicate/TupleDomain;
+#isForDelete()Z
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@352
*#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Z)V[deprecated]
@354
+#isUpdateTarget()Z
-#isForDelete()Z
@355
+#newInstance(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;ZLjava/util/Optional;)Lio/trino/sql/planner/plan/TableScanNode;
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;ZLjava/util/Optional;)V[deprecated]
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/predicate/TupleDomain;ZLjava/util/Optional;)V
+#getUseConnectorNodePartitioning()Ljava/util/Optional;
+#isUseConnectorNodePartitioning()Z
+#withUseConnectorNodePartitioning(Z)Lio/trino/sql/planner/plan/TableScanNode;
-#newInstance(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Z)Lio/trino/sql/planner/plan/TableScanNode;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Z)V[deprecated]
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/predicate/TupleDomain;Z)V
@358
*#newInstance(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;ZLjava/util/Optional;)Lio/trino/sql/planner/plan/TableScanNode;[deprecated]
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/predicate/TupleDomain;Ljava/util/Optional;ZLjava/util/Optional;)V
+#getStatistics()Ljava/util/Optional;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Map;Lio/trino/spi/predicate/TupleDomain;ZLjava/util/Optional;)V
@364
+#withTableHandle(Lio/trino/metadata/TableHandle;)Lio/trino/sql/planner/plan/TableScanNode;

+###io/trino/sql/planner/plan/StatisticsWriterNode$WriteStatisticsHandle
@351
+#<init>(Lio/trino/metadata/AnalyzeTableHandle;)V
+#getHandle()Lio/trino/metadata/AnalyzeTableHandle;
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/plan/JoinNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/JoinNode$Type;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;)V
+#flipChildren()Lio/trino/sql/planner/plan/JoinNode;
+#getType()Lio/trino/sql/planner/plan/JoinNode$Type;
+#getLeft()Lio/trino/sql/planner/plan/PlanNode;
+#getRight()Lio/trino/sql/planner/plan/PlanNode;
+#getCriteria()Ljava/util/List;
+#getLeftOutputSymbols()Ljava/util/List;
+#getRightOutputSymbols()Ljava/util/List;
+#getFilter()Ljava/util/Optional;
+#getLeftHashSymbol()Ljava/util/Optional;
+#getRightHashSymbol()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getDistributionType()Ljava/util/Optional;
+#isSpillable()Ljava/util/Optional;
+#getDynamicFilters()Ljava/util/Map;
+#getReorderJoinStatsAndCost()Ljava/util/Optional;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
+#withDistributionType(Lio/trino/sql/planner/plan/JoinNode$DistributionType;)Lio/trino/sql/planner/plan/JoinNode;
+#withSpillable(Z)Lio/trino/sql/planner/plan/JoinNode;
+#withReorderJoinStatsAndCost(Lio/trino/cost/PlanNodeStatsAndCostSummary;)Lio/trino/sql/planner/plan/JoinNode;
+#isCrossJoin()Z
@352
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/JoinNode$Type;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;)V
+#isMaySkipOutputDuplicates()Z
+#withMaySkipOutputDuplicates()Lio/trino/sql/planner/plan/JoinNode;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/JoinNode$Type;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;)V
@392
+#withoutDynamicFilters()Lio/trino/sql/planner/plan/JoinNode;

+###io/trino/sql/planner/plan/TopNRankingNode
@352
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Lio/trino/sql/planner/Symbol;IZLjava/util/Optional;)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;
+#getPartitionBy()Ljava/util/List;
+#getOrderingScheme()Lio/trino/sql/planner/OrderingScheme;
+#getRankingType()Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;
+#getRankingSymbol()Lio/trino/sql/planner/Symbol;
+#getMaxRankingPerPartition()I
+#isPartial()Z
+#getHashSymbol()Ljava/util/Optional;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@405
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/DataOrganizationSpecification;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Lio/trino/sql/planner/Symbol;IZLjava/util/Optional;)V
+#getSpecification()Lio/trino/sql/planner/plan/DataOrganizationSpecification;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Lio/trino/sql/planner/plan/TopNRankingNode$RankingType;Lio/trino/sql/planner/Symbol;IZLjava/util/Optional;)V
-#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;

+###io/trino/sql/planner/plan/FilterNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/tree/Expression;)V
+#getPredicate()Lio/trino/sql/tree/Expression;
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/SemiJoinNode$DistributionType
@351
+#values()[Lio/trino/sql/planner/plan/SemiJoinNode$DistributionType;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/SemiJoinNode$DistributionType;

+###io/trino/sql/planner/plan/OffsetNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;J)V
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getCount()J
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/StatisticAggregationsDescriptor$ColumnStatisticMetadataKeyDeserializer
@351
+#<init>()V
+#deserializeKey(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lio/trino/spi/statistics/ColumnStatisticMetadata;
+#deserializeKey(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
@398
-###io/trino/sql/planner/plan/StatisticAggregationsDescriptor$ColumnStatisticMetadataKeyDeserializer

+###io/trino/sql/planner/plan/ExchangeNode$Type
@351
+#values()[Lio/trino/sql/planner/plan/ExchangeNode$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/ExchangeNode$Type;

+###io/trino/sql/planner/plan/CorrelatedJoinNode$Type
@351
+#values()[Lio/trino/sql/planner/plan/CorrelatedJoinNode$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/plan/CorrelatedJoinNode$Type;
+#toJoinNodeType()Lio/trino/sql/planner/plan/JoinNode$Type;
+#typeConvert(Lio/trino/sql/tree/Join$Type;)Lio/trino/sql/planner/plan/CorrelatedJoinNode$Type;

+###io/trino/sql/planner/plan/MarkDistinctNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/Optional;)V
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getMarkerSymbol()Lio/trino/sql/planner/Symbol;
+#getDistinctSymbols()Ljava/util/List;
+#getHashSymbol()Ljava/util/Optional;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/AggregationNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/plan/AggregationNode$GroupingSetDescriptor;Ljava/util/List;Lio/trino/sql/planner/plan/AggregationNode$Step;Ljava/util/Optional;Ljava/util/Optional;)V
+#getGroupingKeys()Ljava/util/List;
+#getGroupingSets()Lio/trino/sql/planner/plan/AggregationNode$GroupingSetDescriptor;
+#hasDefaultOutput()Z
+#hasEmptyGroupingSet()Z
+#hasNonEmptyGroupingSet()Z
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getAggregations()Ljava/util/Map;
+#getPreGroupedSymbols()Ljava/util/List;
+#getGroupingSetCount()I
+#getGlobalGroupingSets()Ljava/util/Set;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getStep()Lio/trino/sql/planner/plan/AggregationNode$Step;
+#getHashSymbol()Ljava/util/Optional;
+#getGroupIdSymbol()Ljava/util/Optional;
+#hasOrderings()Z
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
+#producesDistinctRows()Z
+#isDecomposable(Lio/trino/metadata/Metadata;)Z
+#hasSingleNodeExecutionPreference(Lio/trino/metadata/Metadata;)Z
+#isStreamable()Z
+#globalAggregation()Lio/trino/sql/planner/plan/AggregationNode$GroupingSetDescriptor;
+#singleGroupingSet(Ljava/util/List;)Lio/trino/sql/planner/plan/AggregationNode$GroupingSetDescriptor;
+#groupingSets(Ljava/util/List;ILjava/util/Set;)Lio/trino/sql/planner/plan/AggregationNode$GroupingSetDescriptor;
@379
+#isDecomposable(Lio/trino/Session;Lio/trino/metadata/Metadata;)Z
+#hasSingleNodeExecutionPreference(Lio/trino/Session;Lio/trino/metadata/Metadata;)Z
-#isDecomposable(Lio/trino/metadata/Metadata;)Z
-#hasSingleNodeExecutionPreference(Lio/trino/metadata/Metadata;)Z
@383
+#singleAggregation(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/sql/planner/plan/AggregationNode$GroupingSetDescriptor;)Lio/trino/sql/planner/plan/AggregationNode;
+#builderFrom(Lio/trino/sql/planner/plan/AggregationNode;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
@400
+#hasSingleGlobalAggregation()Z

+###io/trino/sql/planner/plan/StatisticAggregations
@351
+#<init>(Ljava/util/Map;Ljava/util/List;)V
+#getAggregations()Ljava/util/Map;
+#getGroupingSymbols()Ljava/util/List;
+#createPartialAggregations(Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;)Lio/trino/sql/planner/plan/StatisticAggregations$Parts;
@367
+#createPartialAggregations(Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/PlannerContext;)Lio/trino/sql/planner/plan/StatisticAggregations$Parts;
-#createPartialAggregations(Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;)Lio/trino/sql/planner/plan/StatisticAggregations$Parts;
@379
+#createPartialAggregations(Lio/trino/sql/planner/SymbolAllocator;Lio/trino/Session;Lio/trino/sql/PlannerContext;)Lio/trino/sql/planner/plan/StatisticAggregations$Parts;
-#createPartialAggregations(Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/PlannerContext;)Lio/trino/sql/planner/plan/StatisticAggregations$Parts;

+###io/trino/sql/planner/plan/ApplyNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/Assignments;Ljava/util/List;Lio/trino/sql/tree/Node;)V
+#getInput()Lio/trino/sql/planner/plan/PlanNode;
+#getSubquery()Lio/trino/sql/planner/plan/PlanNode;
+#getSubqueryAssignments()Lio/trino/sql/planner/plan/Assignments;
+#getCorrelation()Ljava/util/List;
+#getOriginSubquery()Lio/trino/sql/tree/Node;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/OutputNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/List;)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getColumnNames()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/Patterns$Join
@351
+#<init>()V
+#type()Lio/trino/matching/Property;
@352
+#left()Lio/trino/matching/Property;
+#right()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/UnnestNode$Mapping
@351
+#<init>(Lio/trino/sql/planner/Symbol;Ljava/util/List;)V
+#getInput()Lio/trino/sql/planner/Symbol;
+#getOutputs()Ljava/util/List;

+###io/trino/sql/planner/plan/ExchangeNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/ExchangeNode$Type;Lio/trino/sql/planner/plan/ExchangeNode$Scope;Lio/trino/sql/planner/PartitioningScheme;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#partitionedExchange(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/ExchangeNode$Scope;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/Optional;)Lio/trino/sql/planner/plan/ExchangeNode;
+#partitionedExchange(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/ExchangeNode$Scope;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/Optional;Z)Lio/trino/sql/planner/plan/ExchangeNode;
+#partitionedExchange(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/ExchangeNode$Scope;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/PartitioningScheme;)Lio/trino/sql/planner/plan/ExchangeNode;
+#replicatedExchange(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/ExchangeNode$Scope;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/ExchangeNode;
+#gatheringExchange(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/ExchangeNode$Scope;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/ExchangeNode;
+#roundRobinExchange(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/ExchangeNode$Scope;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/ExchangeNode;
+#mergingExchange(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/ExchangeNode$Scope;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/OrderingScheme;)Lio/trino/sql/planner/plan/ExchangeNode;
+#getType()Lio/trino/sql/planner/plan/ExchangeNode$Type;
+#getScope()Lio/trino/sql/planner/plan/ExchangeNode$Scope;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getPartitioningScheme()Lio/trino/sql/planner/PartitioningScheme;
+#getOrderingScheme()Ljava/util/Optional;
+#getInputs()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/TableFinishNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Lio/trino/sql/planner/Symbol;Ljava/util/Optional;Ljava/util/Optional;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getTarget()Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;
+#getRowCountSymbol()Lio/trino/sql/planner/Symbol;
+#getStatisticsAggregation()Ljava/util/Optional;
+#getStatisticsAggregationDescriptor()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/StatisticsWriterNode$WriteStatisticsReference
@351
+#<init>(Lio/trino/metadata/TableHandle;)V
+#getHandle()Lio/trino/metadata/TableHandle;
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/plan/TableWriterNode$RefreshMaterializedViewReference
@351
+#<init>(Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableHandle;Ljava/util/List;)V
+#getMaterializedViewName()Lio/trino/metadata/QualifiedObjectName;
+#getStorageTableHandle()Lio/trino/metadata/TableHandle;
+#getSourceTableHandles()Ljava/util/List;
+#toString()Ljava/lang/String;
@365
+#<init>(Lio/trino/sql/tree/Table;Lio/trino/metadata/TableHandle;Ljava/util/List;)V
+#getTable()Lio/trino/sql/tree/Table;
-#<init>(Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableHandle;Ljava/util/List;)V
-#getMaterializedViewName()Lio/trino/metadata/QualifiedObjectName;
@380
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/plan/WindowNode$Function
@351
+#<init>(Lio/trino/metadata/ResolvedFunction;Ljava/util/List;Lio/trino/sql/planner/plan/WindowNode$Frame;Z)V
+#getResolvedFunction()Lio/trino/metadata/ResolvedFunction;
+#getArguments()Ljava/util/List;
+#getFrame()Lio/trino/sql/planner/plan/WindowNode$Frame;
+#isIgnoreNulls()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/sql/planner/plan/RowNumberNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;ZLio/trino/sql/planner/Symbol;Ljava/util/Optional;Ljava/util/Optional;)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getPartitionBy()Ljava/util/List;
+#isOrderSensitive()Z
+#getRowNumberSymbol()Lio/trino/sql/planner/Symbol;
+#getMaxRowCountPerPartition()Ljava/util/Optional;
+#getHashSymbol()Ljava/util/Optional;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/StatisticAggregationsDescriptor
@351
+#empty()Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
+#getGrouping()Ljava/util/Map;
+#getTableStatistics()Ljava/util/Map;
+#getColumnStatistics()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#builder()Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor$Builder;
+#map(Ljava/util/function/Function;)Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;
@398
+#fromJson(Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)Lio/trino/sql/planner/plan/StatisticAggregationsDescriptor;[deprecated]
+#getColumnStatisticsList()Ljava/util/List;[deprecated]

+###io/trino/sql/planner/SimplePlanVisitor
@351
+#<init>()V

+###io/trino/sql/planner/FragmentTableScanCounter
@351
+#countSources(Ljava/util/List;)I
+#hasMultipleSources([Lio/trino/sql/planner/plan/PlanNode;)Z

+###io/trino/sql/planner/CompilerConfig
@351
+#<init>()V
+#getExpressionCacheSize()I
+#setExpressionCacheSize(I)Lio/trino/sql/planner/CompilerConfig;

+###io/trino/sql/planner/LocalExecutionPlanner$LocalExecutionPlan
@351
+#<init>(Ljava/util/List;Ljava/util/List;Lio/trino/operator/StageExecutionDescriptor;)V
+#getDriverFactories()Ljava/util/List;
+#getPartitionedSourceOrder()Ljava/util/List;
+#getStageExecutionDescriptor()Lio/trino/operator/StageExecutionDescriptor;
@388
+#<init>(Ljava/util/List;Ljava/util/List;)V
-#<init>(Ljava/util/List;Ljava/util/List;Lio/trino/operator/StageExecutionDescriptor;)V
-#getStageExecutionDescriptor()Lio/trino/operator/StageExecutionDescriptor;

+###io/trino/sql/planner/SchedulingOrderVisitor
@351
+#scheduleOrder(Lio/trino/sql/planner/plan/PlanNode;)Ljava/util/List;

+###io/trino/sql/planner/StatisticsAggregationPlanner$ColumnStatisticsAggregation
@351
+#getAggregation()Lio/trino/sql/planner/plan/AggregationNode$Aggregation;
+#getOutputType()Lio/trino/spi/type/Type;

+###io/trino/sql/planner/SortExpressionContext
@351
+#<init>(Lio/trino/sql/tree/Expression;Ljava/util/List;)V
+#getSortExpression()Lio/trino/sql/tree/Expression;
+#getSearchExpressions()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/NodeAndMappings
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;)V
+#getNode()Lio/trino/sql/planner/plan/PlanNode;
+#getFields()Ljava/util/List;

+###io/trino/sql/planner/LogicalPlanner
@351
+#<init>(Lio/trino/Session;Ljava/util/List;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/execution/warnings/WarningCollector;)V
+#<init>(Lio/trino/Session;Ljava/util/List;Lio/trino/sql/planner/sanity/PlanSanityChecker;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/execution/warnings/WarningCollector;)V
+#plan(Lio/trino/sql/analyzer/Analysis;)Lio/trino/sql/planner/Plan;
+#plan(Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/planner/LogicalPlanner$Stage;)Lio/trino/sql/planner/Plan;
+#plan(Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/planner/LogicalPlanner$Stage;Z)Lio/trino/sql/planner/Plan;
+#planStatement(Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/tree/Statement;)Lio/trino/sql/planner/plan/PlanNode;
@367
+#<init>(Lio/trino/Session;Ljava/util/List;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/execution/warnings/WarningCollector;)V
+#<init>(Lio/trino/Session;Ljava/util/List;Lio/trino/sql/planner/sanity/PlanSanityChecker;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/execution/warnings/WarningCollector;)V
-#<init>(Lio/trino/Session;Ljava/util/List;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/execution/warnings/WarningCollector;)V
-#<init>(Lio/trino/Session;Ljava/util/List;Lio/trino/sql/planner/sanity/PlanSanityChecker;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/execution/warnings/WarningCollector;)V
@391
+#failFunction(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;)Lio/trino/sql/tree/FunctionCall;

+###io/trino/sql/planner/planprinter/ValuePrinter
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/Session;)V
+#castToVarchar(Lio/trino/spi/type/Type;Ljava/lang/Object;)Ljava/lang/String;
+#castToVarcharOrFail(Lio/trino/spi/type/Type;Ljava/lang/Object;)Ljava/lang/String;
@374
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/Session;)V

+###io/trino/sql/planner/planprinter/TextRenderer
@351
+#<init>(ZI)V
+#render(Lio/trino/sql/planner/planprinter/PlanRepresentation;)Ljava/lang/String;
+#render(Lio/trino/sql/planner/planprinter/PlanRepresentation;)Ljava/lang/Object;

+###io/trino/sql/planner/planprinter/TableInfoSupplier
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/Session;)V
+#apply(Lio/trino/sql/planner/plan/TableScanNode;)Lio/trino/execution/TableInfo;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker$Bound
@353
+#values()[Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker$Bound;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker$Bound;

+###io/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker
@351
+#<init>(Ljava/util/Optional;Lio/trino/spi/predicate/Marker$Bound;)V
+#getValue()Ljava/util/Optional;
+#getBound()Lio/trino/spi/predicate/Marker$Bound;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@353
+#<init>(Ljava/util/Optional;Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker$Bound;)V
+#getBound()Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker$Bound;
-#<init>(Ljava/util/Optional;Lio/trino/spi/predicate/Marker$Bound;)V
-#getBound()Lio/trino/spi/predicate/Marker$Bound;

+###io/trino/sql/planner/planprinter/JsonRenderer$JsonRenderedNode
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#getId()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getIdentifier()Ljava/lang/String;
+#getDetails()Ljava/lang/String;
+#getChildren()Ljava/util/List;
+#getRemoteSources()Ljava/util/List;
@388
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getDescriptor()Ljava/util/Map;
+#getOutputs()Ljava/util/List;
+#getDetails()Ljava/util/List;
+#getEstimates()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
-#getIdentifier()Ljava/lang/String;
-#getDetails()Ljava/lang/String;
-#getRemoteSources()Ljava/util/List;
@394
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/trino/sql/planner/planprinter/IoPlanPrinter$IoPlan$IoPlanBuilder
@351

+###io/trino/sql/planner/planprinter/PlanPrinter
@351
+#jsonFragmentPlan(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/Session;)Ljava/lang/String;
+#textLogicalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/cost/StatsAndCosts;Lio/trino/Session;IZ)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/metadata/Metadata;Lio/trino/Session;Z)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/sql/planner/planprinter/ValuePrinter;Z)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/sql/planner/SubPlan;Lio/trino/metadata/Metadata;Lio/trino/Session;Z)Ljava/lang/String;
+#graphvizLogicalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;)Ljava/lang/String;
+#graphvizDistributedPlan(Lio/trino/sql/planner/SubPlan;)Ljava/lang/String;
+#formatAggregation(Lio/trino/sql/planner/plan/AggregationNode$Aggregation;)Ljava/lang/String;
@357
+#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/metadata/Metadata;Lio/trino/Session;Z)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/sql/planner/planprinter/ValuePrinter;Z)Ljava/lang/String;
-#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/metadata/Metadata;Lio/trino/Session;Z)Ljava/lang/String;
-#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/sql/planner/planprinter/ValuePrinter;Z)Ljava/lang/String;
@374
+#jsonFragmentPlan(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;)Ljava/lang/String;
+#textLogicalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/cost/StatsAndCosts;Lio/trino/Session;IZ)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;Z)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/sql/planner/SubPlan;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;Z)Ljava/lang/String;
-#jsonFragmentPlan(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/Session;)Ljava/lang/String;
-#textLogicalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/cost/StatsAndCosts;Lio/trino/Session;IZ)Ljava/lang/String;
-#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/metadata/Metadata;Lio/trino/Session;Z)Ljava/lang/String;
-#textDistributedPlan(Lio/trino/sql/planner/SubPlan;Lio/trino/metadata/Metadata;Lio/trino/Session;Z)Ljava/lang/String;
@388
+#jsonLogicalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/cost/StatsAndCosts;)Ljava/lang/String;
@394
+#jsonDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/sql/planner/planprinter/Anonymizer;)Ljava/lang/String;
+#jsonDistributedPlan(Lio/trino/sql/planner/SubPlan;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/sql/planner/planprinter/ValuePrinter;ZLio/trino/sql/planner/planprinter/Anonymizer;)Ljava/lang/String;
+#formatAggregation(Lio/trino/sql/planner/planprinter/Anonymizer;Lio/trino/sql/planner/plan/AggregationNode$Aggregation;)Ljava/lang/String;
-#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/sql/planner/planprinter/ValuePrinter;Z)Ljava/lang/String;
-#formatAggregation(Lio/trino/sql/planner/plan/AggregationNode$Aggregation;)Ljava/lang/String;
@405
+#textLogicalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/cost/StatsAndCosts;Lio/trino/Session;IZLjava/util/Optional;)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;ZLio/trino/client/NodeVersion;)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/sql/planner/planprinter/ValuePrinter;ZLio/trino/sql/planner/planprinter/Anonymizer;Lio/trino/client/NodeVersion;)Ljava/lang/String;
+#textDistributedPlan(Lio/trino/sql/planner/SubPlan;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;ZLio/trino/client/NodeVersion;)Ljava/lang/String;
-#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;Z)Ljava/lang/String;
-#textDistributedPlan(Lio/trino/execution/StageInfo;Lio/trino/execution/QueryStats;Lio/trino/sql/planner/planprinter/ValuePrinter;ZLio/trino/sql/planner/planprinter/Anonymizer;)Ljava/lang/String;
-#textDistributedPlan(Lio/trino/sql/planner/SubPlan;Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/Session;Z)Ljava/lang/String;

+###io/trino/sql/planner/planprinter/WindowPlanNodeStats
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/Map;Lio/trino/sql/planner/planprinter/WindowOperatorStats;)V
+#getWindowOperatorStats()Lio/trino/sql/planner/planprinter/WindowOperatorStats;
+#mergeWith(Lio/trino/sql/planner/planprinter/PlanNodeStats;)Lio/trino/sql/planner/planprinter/PlanNodeStats;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@355
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Map;Lio/trino/sql/planner/planprinter/WindowOperatorStats;)V
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/Map;Lio/trino/sql/planner/planprinter/WindowOperatorStats;)V
@376
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Map;Lio/trino/sql/planner/planprinter/WindowOperatorStats;)V
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Map;Lio/trino/sql/planner/planprinter/WindowOperatorStats;)V

+###io/trino/sql/planner/planprinter/NodeRepresentation$TypedSymbol
@351
+#<init>(Lio/trino/sql/planner/Symbol;Ljava/lang/String;)V
+#getSymbol()Lio/trino/sql/planner/Symbol;
+#getType()Ljava/lang/String;
@388
+#typedSymbol(Ljava/lang/String;Ljava/lang/String;)Lio/trino/sql/planner/planprinter/NodeRepresentation$TypedSymbol;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/planprinter/IoPlanPrinter$FormattedDomain
@351
+#<init>(ZLjava/util/Set;)V
+#isNullsAllowed()Z
+#getRanges()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/planprinter/NodeRepresentation
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;)V
+#appendDetails(Ljava/lang/String;[Ljava/lang/Object;)V
+#appendDetailsLine(Ljava/lang/String;[Ljava/lang/Object;)V
+#getId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getIdentifier()Ljava/lang/String;
+#getOutputs()Ljava/util/List;
+#getChildren()Ljava/util/List;
+#getRemoteSources()Ljava/util/List;
+#getDetails()Ljava/lang/String;
+#getStats()Ljava/util/Optional;
+#getEstimatedStats()Ljava/util/List;
+#getEstimatedCost()Ljava/util/List;
+#getReorderJoinStatsAndCost()Ljava/util/Optional;
@388
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;)V
+#getDescriptor()Ljava/util/Map;
+#getDetails()Ljava/util/List;
+#getEstimates(Lio/trino/sql/planner/TypeProvider;)Ljava/util/List;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;)V
-#appendDetailsLine(Ljava/lang/String;[Ljava/lang/Object;)V
-#getIdentifier()Ljava/lang/String;
-#getDetails()Ljava/lang/String;

+###io/trino/sql/planner/planprinter/IoPlanPrinter$IoPlan$TableColumnInfo
@351
+#<init>(Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;Lio/trino/sql/planner/planprinter/IoPlanPrinter$EstimatedStatsAndCost;)V
+#getTable()Lio/trino/spi/connector/CatalogSchemaTableName;
+#getColumnConstraints()Ljava/util/Set;
+#getEstimate()Lio/trino/sql/planner/planprinter/IoPlanPrinter$EstimatedStatsAndCost;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@397
+#<init>(Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/sql/planner/planprinter/IoPlanPrinter$Constraint;Lio/trino/sql/planner/planprinter/IoPlanPrinter$EstimatedStatsAndCost;)V
+#getConstraint()Lio/trino/sql/planner/planprinter/IoPlanPrinter$Constraint;
-#<init>(Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;Lio/trino/sql/planner/planprinter/IoPlanPrinter$EstimatedStatsAndCost;)V
-#getColumnConstraints()Ljava/util/Set;

+###io/trino/sql/planner/planprinter/IoPlanPrinter$FormattedRange
@351
+#<init>(Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker;Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker;)V
+#getLow()Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker;
+#getHigh()Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedMarker;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/planprinter/HashCollisionPlanNodeStats
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/Map;Ljava/util/Map;)V
+#getOperatorHashCollisionsAverages()Ljava/util/Map;
+#getOperatorHashCollisionsStdDevs()Ljava/util/Map;
+#getOperatorExpectedCollisionsAverages()Ljava/util/Map;
+#mergeWith(Lio/trino/sql/planner/planprinter/PlanNodeStats;)Lio/trino/sql/planner/planprinter/PlanNodeStats;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@355
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Ljava/util/Map;Ljava/util/Map;)V
@376
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/airlift/units/Duration;Lio/airlift/units/Duration;JLio/airlift/units/DataSize;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/Map;Ljava/util/Map;)V
@405
-###io/trino/sql/planner/planprinter/HashCollisionPlanNodeStats

+###io/trino/sql/planner/planprinter/IoPlanPrinter
@351
+#textIoPlan(Lio/trino/sql/planner/Plan;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;)Ljava/lang/String;
@367
+#textIoPlan(Lio/trino/sql/planner/Plan;Lio/trino/sql/PlannerContext;Lio/trino/Session;)Ljava/lang/String;
-#textIoPlan(Lio/trino/sql/planner/Plan;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;)Ljava/lang/String;

+###io/trino/sql/planner/planprinter/IoPlanPrinter$IoPlan
@351
+#<init>(Ljava/util/Set;Ljava/util/Optional;Lio/trino/sql/planner/planprinter/IoPlanPrinter$EstimatedStatsAndCost;)V
+#getInputTableColumnInfos()Ljava/util/Set;
+#getOutputTable()Ljava/util/Optional;
+#getEstimate()Lio/trino/sql/planner/planprinter/IoPlanPrinter$EstimatedStatsAndCost;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/planprinter/IoPlanPrinter$EstimatedStatsAndCost
@351
+#<init>(DDDDD)V
+#getOutputRowCount()D
+#getOutputSizeInBytes()D
+#getCpuCost()D
+#getMaxMemory()D
+#getNetworkCost()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/planprinter/JsonRenderer
@351
+#<init>()V
+#render(Lio/trino/sql/planner/planprinter/PlanRepresentation;)Ljava/lang/String;
+#render(Lio/trino/sql/planner/planprinter/PlanRepresentation;)Ljava/lang/Object;

+###io/trino/sql/planner/planprinter/PlanNodeStats
@351
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getPlanNodeScheduledTime()Lio/airlift/units/Duration;
+#getPlanNodeCpuTime()Lio/airlift/units/Duration;
+#getOperatorTypes()Ljava/util/Set;
+#getPlanNodeInputPositions()J
+#getPlanNodeInputDataSize()Lio/airlift/units/DataSize;
+#getPlanNodeOutputPositions()J
+#getPlanNodeOutputDataSize()Lio/airlift/units/DataSize;
+#getOperatorInputPositionsAverages()Ljava/util/Map;
+#getOperatorInputPositionsStdDevs()Ljava/util/Map;
+#mergeWith(Lio/trino/sql/planner/planprinter/PlanNodeStats;)Lio/trino/sql/planner/planprinter/PlanNodeStats;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@355
+#getPlanNodeSpilledDataSize()Lio/airlift/units/DataSize;
@365
+#getOperatorStats()Ljava/util/Map;
@376
+#getPlanNodeBlockedTime()Lio/airlift/units/Duration;
@403
+#getPlanNodePhysicalInputDataSize()Lio/airlift/units/DataSize;
@408
+#getPlanNodePhysicalInputReadTime()Lio/airlift/units/Duration;

+###io/trino/sql/planner/planprinter/PlanNodeStatsSummarizer
@351
+#aggregateStageStats(Ljava/util/List;)Ljava/util/Map;
+#aggregateTaskStats(Ljava/util/List;)Ljava/util/Map;

+###io/trino/sql/planner/planprinter/Renderer
@351
+#render(Lio/trino/sql/planner/planprinter/PlanRepresentation;)Ljava/lang/Object;

+###io/trino/sql/planner/planprinter/IoPlanPrinter$ColumnConstraint
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedDomain;)V
+#getColumnName()Ljava/lang/String;
+#getType()Lio/trino/spi/type/Type;
+#getDomain()Lio/trino/sql/planner/planprinter/IoPlanPrinter$FormattedDomain;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/InputExtractor
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/Session;)V
+#extractInputs(Lio/trino/sql/planner/SubPlan;)Ljava/util/List;

+###io/trino/sql/planner/DesugarRowSubscriptRewriter
@351
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/SymbolAllocator;)Lio/trino/sql/tree/Expression;
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;)Lio/trino/sql/tree/Expression;
@357
-###io/trino/sql/planner/DesugarRowSubscriptRewriter

+###io/trino/sql/planner/SymbolResolver
@351
+#getValue(Lio/trino/sql/planner/Symbol;)Ljava/lang/Object;

+###io/trino/sql/planner/ConnectorExpressions
@351
+#extractVariables(Lio/trino/spi/expression/ConnectorExpression;)Ljava/util/List;
+#preOrder(Lio/trino/spi/expression/ConnectorExpression;)Ljava/util/stream/Stream;

+###io/trino/sql/planner/SubExpressionExtractor
@351
+#extract(Lio/trino/sql/tree/Expression;)Ljava/util/Set;
@363
+#extract(Lio/trino/sql/tree/Expression;)Ljava/util/stream/Stream;
-#extract(Lio/trino/sql/tree/Expression;)Ljava/util/Set;

+###io/trino/sql/planner/FunctionCallBuilder
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#setName(Lio/trino/sql/tree/QualifiedName;)Lio/trino/sql/planner/FunctionCallBuilder;
+#addArgument(Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/FunctionCallBuilder;
+#addArgument(Lio/trino/spi/type/TypeSignature;Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setArguments(Ljava/util/List;Ljava/util/List;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setLocation(Lio/trino/sql/tree/NodeLocation;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setWindow(Lio/trino/sql/tree/Window;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setWindow(Ljava/util/Optional;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setFilter(Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setFilter(Ljava/util/Optional;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setOrderBy(Lio/trino/sql/tree/OrderBy;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setOrderBy(Ljava/util/Optional;)Lio/trino/sql/planner/FunctionCallBuilder;
+#setDistinct(Z)Lio/trino/sql/planner/FunctionCallBuilder;
+#build()Lio/trino/sql/tree/FunctionCall;
@364
+#resolve(Lio/trino/Session;Lio/trino/metadata/Metadata;)Lio/trino/sql/planner/FunctionCallBuilder;
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/sanity/ValidateStreamingAggregations
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/PlanSanityChecker
@351
+#<init>(Z)V
+#validateFinalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
+#validateIntermediatePlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validateFinalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
+#validateIntermediatePlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validateFinalPlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validateIntermediatePlan(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/AllFunctionsResolved
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/VerifyNoFilteredAggregations
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/VerifyOnlyOneOutputNode
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/DynamicFiltersChecker
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/NoSubqueryExpressionLeftChecker
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/SugarFreeChecker
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/TableScanValidator
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/NoDuplicatePlanNodeIdsChecker
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/PlanSanityChecker$Checker
@351
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/TypeValidator
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/NoIdentifierLeftChecker
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/ValidateAggregationsWithDefaultValues
@351
+#<init>(Z)V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/ValidateDependenciesChecker
@351
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
+#validate(Lio/trino/sql/planner/plan/PlanNode;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/OrderingScheme
@351
+#<init>(Ljava/util/List;Ljava/util/Map;)V
+#getOrderBy()Ljava/util/List;
+#getOrderings()Ljava/util/Map;
+#getOrderingList()Ljava/util/List;
+#getOrdering(Lio/trino/sql/planner/Symbol;)Lio/trino/spi/connector/SortOrder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#fromOrderBy(Lio/trino/sql/tree/OrderBy;)Lio/trino/sql/planner/OrderingScheme;
+#sortItemToSortOrder(Lio/trino/sql/tree/SortItem;)Lio/trino/spi/connector/SortOrder;
+#toSortItems()Ljava/util/List;
@356
+#toLocalProperties()Ljava/util/List;

+###io/trino/sql/planner/ExpressionSymbolInliner
@351
+#inlineSymbols(Ljava/util/Map;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#inlineSymbols(Ljava/util/function/Function;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/Partitioning$Translator
@351
+#<init>(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V

+###io/trino/sql/planner/PartitioningScheme
@351
+#<init>(Lio/trino/sql/planner/Partitioning;Ljava/util/List;)V
+#<init>(Lio/trino/sql/planner/Partitioning;Ljava/util/List;Ljava/util/Optional;)V
+#<init>(Lio/trino/sql/planner/Partitioning;Ljava/util/List;Ljava/util/Optional;ZLjava/util/Optional;)V
+#getPartitioning()Lio/trino/sql/planner/Partitioning;
+#getOutputLayout()Ljava/util/List;
+#getHashColumn()Ljava/util/Optional;
+#isReplicateNullsAndAny()Z
+#getBucketToPartition()Ljava/util/Optional;
+#withBucketToPartition(Ljava/util/Optional;)Lio/trino/sql/planner/PartitioningScheme;
+#translateOutputLayout(Ljava/util/List;)Lio/trino/sql/planner/PartitioningScheme;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@405
+#withPartitioningHandle(Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/sql/planner/PartitioningScheme;
@407
+#<init>(Lio/trino/sql/planner/Partitioning;Ljava/util/List;Ljava/util/Optional;ZLjava/util/Optional;Ljava/util/Optional;)V
+#getPartitionCount()Ljava/util/Optional;
+#withPartitionCount(I)Lio/trino/sql/planner/PartitioningScheme;
-#<init>(Lio/trino/sql/planner/Partitioning;Ljava/util/List;Ljava/util/Optional;ZLjava/util/Optional;)V

+###io/trino/sql/planner/optimizations/LimitPushDown
@351
+#<init>()V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/PreferredProperties$Global
@351
+#undistributed()Lio/trino/sql/planner/optimizations/PreferredProperties$Global;
+#distributed(Ljava/util/Optional;)Lio/trino/sql/planner/optimizations/PreferredProperties$Global;
+#distributed()Lio/trino/sql/planner/optimizations/PreferredProperties$Global;
+#distributed(Lio/trino/sql/planner/optimizations/PreferredProperties$PartitioningProperties;)Lio/trino/sql/planner/optimizations/PreferredProperties$Global;
+#isDistributed()Z
+#getPartitioningProperties()Ljava/util/Optional;
+#mergeWithParent(Lio/trino/sql/planner/optimizations/PreferredProperties$Global;)Lio/trino/sql/planner/optimizations/PreferredProperties$Global;
+#translate(Ljava/util/function/Function;)Lio/trino/sql/planner/optimizations/PreferredProperties$Global;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/optimizations/LocalProperties
@351
+#none()Ljava/util/List;
+#grouped(Ljava/util/Collection;)Ljava/util/List;
+#stripLeadingConstants(Ljava/util/List;)Ljava/util/List;
+#extractLeadingConstants(Ljava/util/List;)Ljava/util/Set;
+#translate(Ljava/util/List;Ljava/util/function/Function;)Ljava/util/List;
+#match(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
+#normalizeAndPrune(Ljava/util/List;)Ljava/util/List;
+#normalize(Ljava/util/List;)Ljava/util/List;

+###io/trino/sql/planner/optimizations/ActualProperties$Global
@351
+#coordinatorSingleStreamPartition()Lio/trino/sql/planner/optimizations/ActualProperties$Global;
+#singleStreamPartition()Lio/trino/sql/planner/optimizations/ActualProperties$Global;
+#arbitraryPartition()Lio/trino/sql/planner/optimizations/ActualProperties$Global;
+#partitionedOn(Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;Ljava/util/Optional;)Lio/trino/sql/planner/optimizations/ActualProperties$Global;
+#partitionedOn(Lio/trino/sql/planner/Partitioning;Ljava/util/Optional;)Lio/trino/sql/planner/optimizations/ActualProperties$Global;
+#streamPartitionedOn(Ljava/util/List;)Lio/trino/sql/planner/optimizations/ActualProperties$Global;
+#withReplicatedNulls(Z)Lio/trino/sql/planner/optimizations/ActualProperties$Global;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/optimizations/IndexJoinOptimizer$IndexKeyTracer
@351
+#<init>()V
+#trace(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Set;)Ljava/util/Map;

+###io/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties
@351
+#getLocalProperties()Ljava/util/List;
+#isSingleStream()Z
+#getDistribution()Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties$StreamDistribution;
+#isExactlyPartitionedOn(Ljava/lang/Iterable;)Z
+#isPartitionedOn(Ljava/lang/Iterable;)Z
+#isOrdered()Z
+#translate(Ljava/util/function/Function;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
+#getPartitioningColumns()Ljava/util/Optional;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/optimizations/IndexJoinOptimizer$IndexSourceRewriter$Context
@351
+#<init>(Ljava/util/Set;Ljava/util/concurrent/atomic/AtomicBoolean;)V
+#getLookupSymbols()Ljava/util/Set;
+#getSuccess()Ljava/util/concurrent/atomic/AtomicBoolean;
+#markSuccess()V

+###io/trino/sql/planner/optimizations/ReplicateSemiJoinInDelete
@351
+#<init>()V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@392
-###io/trino/sql/planner/optimizations/ReplicateSemiJoinInDelete

+###io/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties$StreamDistribution
@351
+#values()[Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties$StreamDistribution;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties$StreamDistribution;

+###io/trino/sql/planner/optimizations/HashGenerationOptimizer
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
+#getHashExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Ljava/util/List;)Ljava/util/Optional;
@364
+#getHashExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Ljava/util/List;)Ljava/util/Optional;
-#getHashExpression(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Ljava/util/List;)Ljava/util/Optional;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/OptimizerStats
@351
+#<init>()V
+#record(J)V
+#recordFailure()V
+#getTime()Lio/airlift/stats/TimeDistribution;
+#getFailures()J

+###io/trino/sql/planner/optimizations/StreamPropertyDerivations
@351
+#derivePropertiesRecursively(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
+#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
+#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
@367
+#derivePropertiesRecursively(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
+#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
+#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
-#derivePropertiesRecursively(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
-#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;
-#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;

+###io/trino/sql/planner/optimizations/QueryCardinalityUtil
@351
+#isScalar(Lio/trino/sql/planner/plan/PlanNode;)Z
+#isScalar(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Z
+#isAtMostScalar(Lio/trino/sql/planner/plan/PlanNode;)Z
+#isAtMostScalar(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Z
+#isAtMost(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;J)Z
+#isAtLeastScalar(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Z
+#isAtLeast(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;J)Z
+#isEmpty(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Z
+#extractCardinality(Lio/trino/sql/planner/plan/PlanNode;)Lcom/google/common/collect/Range;
+#extractCardinality(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Lcom/google/common/collect/Range;
@398
+#extractCardinality(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/optimizations/Cardinality;
+#extractCardinality(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Lio/trino/sql/planner/optimizations/Cardinality;
-#extractCardinality(Lio/trino/sql/planner/plan/PlanNode;)Lcom/google/common/collect/Range;
-#extractCardinality(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Lcom/google/common/collect/Range;

+###io/trino/sql/planner/optimizations/PlanOptimizer
@351
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/ActualProperties
@351
+#isCoordinatorOnly()Z
+#isSingleNode()Z
+#isNullsAndAnyReplicated()Z
+#isStreamPartitionedOn(Ljava/util/Collection;)Z
+#isStreamPartitionedOn(Ljava/util/Collection;Z)Z
+#isNodePartitionedOn(Ljava/util/Collection;)Z
+#isNodePartitionedOn(Ljava/util/Collection;Z)Z
+#isCompatibleTablePartitioningWith(Lio/trino/sql/planner/Partitioning;ZLio/trino/metadata/Metadata;Lio/trino/Session;)Z
+#isCompatibleTablePartitioningWith(Lio/trino/sql/planner/optimizations/ActualProperties;Ljava/util/function/Function;Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
+#isEffectivelySingleStream()Z
+#isStreamRepartitionEffective(Ljava/util/Collection;)Z
+#translate(Ljava/util/function/Function;)Lio/trino/sql/planner/optimizations/ActualProperties;
+#translate(Ljava/util/function/Function;Ljava/util/function/Function;)Lio/trino/sql/planner/optimizations/ActualProperties;
+#getNodePartitioning()Ljava/util/Optional;
+#getConstants()Ljava/util/Map;
+#getLocalProperties()Ljava/util/List;
+#withReplicatedNulls(Z)Lio/trino/sql/planner/optimizations/ActualProperties;
+#builder()Lio/trino/sql/planner/optimizations/ActualProperties$Builder;
+#builderFrom(Lio/trino/sql/planner/optimizations/ActualProperties;)Lio/trino/sql/planner/optimizations/ActualProperties$Builder;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@388
+#isStreamPartitionedOn(Ljava/util/Collection;ZZ)Z
+#isNodePartitionedOn(Ljava/util/Collection;ZZ)Z
-#isStreamPartitionedOn(Ljava/util/Collection;)Z
-#isNodePartitionedOn(Ljava/util/Collection;)Z

+###io/trino/sql/planner/optimizations/BeginTableWrite
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@374
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/PlanNodeSearcher
@351
+#searchFrom(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/optimizations/PlanNodeSearcher;
+#searchFrom(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Lio/trino/sql/planner/optimizations/PlanNodeSearcher;
+#where(Ljava/util/function/Predicate;)Lio/trino/sql/planner/optimizations/PlanNodeSearcher;
+#recurseOnlyWhen(Ljava/util/function/Predicate;)Lio/trino/sql/planner/optimizations/PlanNodeSearcher;
+#findFirst()Ljava/util/Optional;
+#findSingle()Ljava/util/Optional;
+#findAll()Ljava/util/List;
+#findOnlyElement()Lio/trino/sql/planner/plan/PlanNode;
+#findOnlyElement(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/PlanNode;
+#removeAll()Lio/trino/sql/planner/plan/PlanNode;
+#removeFirst()Lio/trino/sql/planner/plan/PlanNode;
+#replaceAll(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/PlanNode;
+#replaceFirst(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/PlanNode;
+#matches()Z
+#count()I
@375
+#whereIsInstanceOfAny([Ljava/lang/Class;)Lio/trino/sql/planner/optimizations/PlanNodeSearcher;
@377
+#whereIsInstanceOfAny(Ljava/util/List;)Lio/trino/sql/planner/optimizations/PlanNodeSearcher;

+###io/trino/sql/planner/optimizations/IndexJoinOptimizer
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/WindowNodeUtil
@351
+#dependsOn(Lio/trino/sql/planner/plan/WindowNode;Lio/trino/sql/planner/plan/WindowNode;)Z

+###io/trino/sql/planner/optimizations/PropertyDerivations
@351
+#derivePropertiesRecursively(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;
+#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;
+#streamBackdoorDeriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;
+#filterIfMissing(Ljava/util/Collection;Lio/trino/sql/planner/Symbol;)Ljava/util/Optional;
+#filterOrRewrite(Ljava/util/Collection;Ljava/util/Collection;Lio/trino/sql/planner/Symbol;)Ljava/util/Optional;
@367
+#derivePropertiesRecursively(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;
+#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;
+#streamBackdoorDeriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;
-#derivePropertiesRecursively(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;
-#deriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;
-#streamBackdoorDeriveProperties(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/planner/optimizations/ActualProperties;

+###io/trino/sql/planner/optimizations/OptimizeMixedDistinctAggregations
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/TransformQuantifiedComparisonApplyToCorrelatedJoin
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/AddExchanges
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@358
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsCalculator;)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/PreferredProperties$PartitioningProperties
@351
+#withNullsAndAnyReplicated(Z)Lio/trino/sql/planner/optimizations/PreferredProperties$PartitioningProperties;
+#partitioned(Lio/trino/sql/planner/Partitioning;)Lio/trino/sql/planner/optimizations/PreferredProperties$PartitioningProperties;
+#partitioned(Ljava/util/Set;)Lio/trino/sql/planner/optimizations/PreferredProperties$PartitioningProperties;
+#singlePartition()Lio/trino/sql/planner/optimizations/PreferredProperties$PartitioningProperties;
+#getPartitioningColumns()Ljava/util/Set;
+#getPartitioning()Ljava/util/Optional;
+#isNullsAndAnyReplicated()Z
+#mergeWithParent(Lio/trino/sql/planner/optimizations/PreferredProperties$PartitioningProperties;)Lio/trino/sql/planner/optimizations/PreferredProperties$PartitioningProperties;
+#translate(Ljava/util/function/Function;)Ljava/util/Optional;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/optimizations/PredicatePushDown
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;ZZ)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;ZZ)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;ZZ)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/StatsRecordingPlanOptimizer
@351
+#<init>(Lio/trino/sql/planner/OptimizerStatsRecorder;Lio/trino/sql/planner/optimizations/PlanOptimizer;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/PreferredProperties$Builder
@351
+#<init>()V
+#global(Lio/trino/sql/planner/optimizations/PreferredProperties$Global;)Lio/trino/sql/planner/optimizations/PreferredProperties$Builder;
+#global(Ljava/util/Optional;)Lio/trino/sql/planner/optimizations/PreferredProperties$Builder;
+#global(Lio/trino/sql/planner/optimizations/PreferredProperties;)Lio/trino/sql/planner/optimizations/PreferredProperties$Builder;
+#local(Ljava/util/List;)Lio/trino/sql/planner/optimizations/PreferredProperties$Builder;
+#local(Lio/trino/sql/planner/optimizations/PreferredProperties;)Lio/trino/sql/planner/optimizations/PreferredProperties$Builder;
+#build()Lio/trino/sql/planner/optimizations/PreferredProperties;

+###io/trino/sql/planner/optimizations/joins/JoinGraph$Edge
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;)V
+#getTargetNode()Lio/trino/sql/planner/plan/PlanNode;
+#getSourceSymbol()Lio/trino/sql/planner/Symbol;
+#getTargetSymbol()Lio/trino/sql/planner/Symbol;

+###io/trino/sql/planner/optimizations/joins/JoinGraph
@351
+#buildFrom(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;)Lio/trino/sql/planner/optimizations/joins/JoinGraph;
+#<init>(Lio/trino/sql/planner/plan/PlanNode;)V
+#<init>(Ljava/util/List;Lcom/google/common/collect/Multimap;Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Z)V
+#withFilter(Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/optimizations/joins/JoinGraph;
+#getFilters()Ljava/util/List;
+#getRootId()Lio/trino/sql/planner/plan/PlanNodeId;
+#isEmpty()Z
+#size()I
+#getNode(I)Lio/trino/sql/planner/plan/PlanNode;
+#getNodes()Ljava/util/List;
+#getEdges(Lio/trino/sql/planner/plan/PlanNode;)Ljava/util/Collection;
+#isContainsCrossJoin()Z
+#toString()Ljava/lang/String;
@357
+#buildFrom(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/planner/optimizations/joins/JoinGraph;
-#buildFrom(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;)Lio/trino/sql/planner/optimizations/joins/JoinGraph;
@370
+#buildFrom(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/planner/optimizations/joins/JoinGraph;
-#buildFrom(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/planner/optimizations/joins/JoinGraph;

+###io/trino/sql/planner/optimizations/ActualProperties$Builder
@351
+#<init>()V
+#<init>(Lio/trino/sql/planner/optimizations/ActualProperties$Global;Ljava/util/List;Ljava/util/Map;)V
+#global(Lio/trino/sql/planner/optimizations/ActualProperties$Global;)Lio/trino/sql/planner/optimizations/ActualProperties$Builder;
+#global(Lio/trino/sql/planner/optimizations/ActualProperties;)Lio/trino/sql/planner/optimizations/ActualProperties$Builder;
+#local(Ljava/util/List;)Lio/trino/sql/planner/optimizations/ActualProperties$Builder;
+#constants(Ljava/util/Map;)Lio/trino/sql/planner/optimizations/ActualProperties$Builder;
+#unordered(Z)Lio/trino/sql/planner/optimizations/ActualProperties$Builder;
+#build()Lio/trino/sql/planner/optimizations/ActualProperties;

+###io/trino/sql/planner/optimizations/MetadataQueryOptimizer
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/StreamPreferredProperties
@351
+#any()Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#singleStream()Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#fixedParallelism()Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#defaultParallelism(Lio/trino/Session;)Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#withParallelism()Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#withFixedParallelism()Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#exactlyPartitionedOn(Ljava/util/Collection;)Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#withoutPreference()Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#withPartitioning(Ljava/util/Collection;)Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#withDefaultParallelism(Lio/trino/Session;)Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#isSatisfiedBy(Lio/trino/sql/planner/optimizations/StreamPropertyDerivations$StreamProperties;)Z
+#isSingleStreamPreferred()Z
+#isParallelPreferred()Z
+#getPartitioningColumns()Ljava/util/Optional;
+#isOrderSensitive()Z
+#translate(Ljava/util/function/Function;)Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#toString()Ljava/lang/String;
+#withOrderSensitivity()Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
+#constrainTo(Ljava/lang/Iterable;)Lio/trino/sql/planner/optimizations/StreamPreferredProperties;
@353
+#partitionedOn(Ljava/util/Collection;)Lio/trino/sql/planner/optimizations/StreamPreferredProperties;

+###io/trino/sql/planner/optimizations/DistinctOutputQueryUtil
@351
+#isDistinct(Lio/trino/sql/planner/plan/PlanNode;)Z
+#isDistinct(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/function/Function;)Z

+###io/trino/sql/planner/optimizations/UnaliasSymbolReferences
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
+#reallocateSymbols(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/planner/SymbolAllocator;)Lio/trino/sql/planner/NodeAndMappings;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/SymbolMapper$Builder
@351
+#<init>()V
+#put(Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;)V
+#build()Lio/trino/sql/planner/optimizations/SymbolMapper;

+###io/trino/sql/planner/optimizations/PruneUnreferencedOutputs
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@365
-###io/trino/sql/planner/optimizations/PruneUnreferencedOutputs

+###io/trino/sql/planner/optimizations/TableDeleteOptimizer
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@369
-###io/trino/sql/planner/optimizations/TableDeleteOptimizer

+###io/trino/sql/planner/optimizations/PlanNodeDecorrelator$DecorrelatedNode
@351
+#<init>(Ljava/util/List;Lio/trino/sql/planner/plan/PlanNode;)V
+#getCorrelatedPredicates()Ljava/util/Optional;
+#getNode()Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/WindowFilterPushDown
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/ExpressionEquivalence
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
+#areExpressionsEquivalent(Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeProvider;)Z
@374
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/optimizations/SymbolMapper
@351
+#symbolMapper(Ljava/util/Map;)Lio/trino/sql/planner/optimizations/SymbolMapper;
+#symbolReallocator(Ljava/util/Map;Lio/trino/sql/planner/SymbolAllocator;)Lio/trino/sql/planner/optimizations/SymbolMapper;
+#map(Lio/trino/sql/planner/Symbol;)Lio/trino/sql/planner/Symbol;
+#map(Ljava/util/List;)Ljava/util/List;
+#mapAndDistinct(Ljava/util/List;)Ljava/util/List;
+#map(Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#map(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/AggregationNode;
+#map(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNodeId;)Lio/trino/sql/planner/plan/AggregationNode;
+#map(Lio/trino/sql/planner/plan/AggregationNode$Aggregation;)Lio/trino/sql/planner/plan/AggregationNode$Aggregation;
+#map(Lio/trino/sql/planner/plan/GroupIdNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/GroupIdNode;
+#map(Lio/trino/sql/planner/plan/WindowNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/WindowNode;
+#map(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/LimitNode;
+#map(Lio/trino/sql/planner/OrderingScheme;)Lio/trino/sql/planner/OrderingScheme;
+#map(Lio/trino/sql/planner/plan/DistinctLimitNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/DistinctLimitNode;
+#map(Lio/trino/sql/planner/plan/StatisticsWriterNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/StatisticsWriterNode;
+#map(Lio/trino/sql/planner/plan/TableWriterNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/TableWriterNode;
+#map(Lio/trino/sql/planner/plan/TableWriterNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNodeId;)Lio/trino/sql/planner/plan/TableWriterNode;
+#map(Lio/trino/sql/planner/PartitioningScheme;Ljava/util/List;)Lio/trino/sql/planner/PartitioningScheme;
+#map(Lio/trino/sql/planner/plan/TableFinishNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/TableFinishNode;
+#map(Lio/trino/sql/planner/plan/RowNumberNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/RowNumberNode;
+#map(Lio/trino/sql/planner/plan/TopNRowNumberNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/TopNRowNumberNode;
+#map(Lio/trino/sql/planner/plan/TopNNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/TopNNode;
+#map(Lio/trino/sql/planner/plan/TopNNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNodeId;)Lio/trino/sql/planner/plan/TopNNode;
+#builder()Lio/trino/sql/planner/optimizations/SymbolMapper$Builder;
@352
+#map(Lio/trino/sql/planner/plan/TopNRankingNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/TopNRankingNode;
-#map(Lio/trino/sql/planner/plan/TopNRowNumberNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/TopNRowNumberNode;
@356
+#map(Lio/trino/sql/planner/plan/PatternRecognitionNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/PatternRecognitionNode;
@360
+#<init>(Ljava/util/function/Function;)V
@364
+#map(Lio/trino/sql/planner/plan/TableExecuteNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/TableExecuteNode;
+#map(Lio/trino/sql/planner/plan/TableExecuteNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNodeId;)Lio/trino/sql/planner/plan/TableExecuteNode;
@393
+#map(Lio/trino/sql/planner/plan/MergeWriterNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/MergeWriterNode;
+#map(Lio/trino/sql/planner/plan/MergeWriterNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/PlanNodeId;)Lio/trino/sql/planner/plan/MergeWriterNode;
+#map(Lio/trino/sql/planner/plan/MergeProcessorNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/MergeProcessorNode;
@405
+#mapAndDistinct(Lio/trino/sql/planner/plan/DataOrganizationSpecification;)Lio/trino/sql/planner/plan/DataOrganizationSpecification;
@407
+#map(Lio/trino/sql/planner/plan/TableFunctionProcessorNode;Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/TableFunctionProcessorNode;
+#map(Lio/trino/sql/planner/OrderingScheme;I)Lio/trino/sql/planner/optimizations/SymbolMapper$OrderingSchemeWithPreSortedPrefix;

+###io/trino/sql/planner/optimizations/PlanNodeDecorrelator
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/iterative/Lookup;)V
+#decorrelateFilters(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;)Ljava/util/Optional;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/iterative/Lookup;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/iterative/Lookup;)V

+###io/trino/sql/planner/optimizations/CheckSubqueryNodesAreRewritten
@351
+#<init>()V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/optimizations/AddLocalExchanges
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/LookupSymbolResolver
@351
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#getValue(Lio/trino/sql/planner/Symbol;)Ljava/lang/Object;

+###io/trino/sql/planner/iterative/RuleIndex
@351
+#getCandidates(Ljava/lang/Object;)Ljava/util/stream/Stream;
+#builder()Lio/trino/sql/planner/iterative/RuleIndex$Builder;

+###io/trino/sql/planner/iterative/Rule$Result
@351
+#empty()Lio/trino/sql/planner/iterative/Rule$Result;
+#ofPlanNode(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/iterative/Rule$Result;
+#getTransformedPlan()Ljava/util/Optional;
+#isEmpty()Z

+###io/trino/sql/planner/iterative/Rule$Context
@351
+#getLookup()Lio/trino/sql/planner/iterative/Lookup;
+#getIdAllocator()Lio/trino/sql/planner/PlanNodeIdAllocator;
+#getSymbolAllocator()Lio/trino/sql/planner/SymbolAllocator;
+#getSession()Lio/trino/Session;
+#getStatsProvider()Lio/trino/cost/StatsProvider;
+#getCostProvider()Lio/trino/cost/CostProvider;
+#checkTimeoutNotExhausted()V
+#getWarningCollector()Lio/trino/execution/warnings/WarningCollector;

+###io/trino/sql/planner/iterative/Memo
@351
+#<init>(Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/sql/planner/plan/PlanNode;)V
+#getRootGroup()I
+#getNode(I)Lio/trino/sql/planner/plan/PlanNode;
+#resolve(Lio/trino/sql/planner/iterative/GroupReference;)Lio/trino/sql/planner/plan/PlanNode;
+#extract()Lio/trino/sql/planner/plan/PlanNode;
+#replace(ILio/trino/sql/planner/plan/PlanNode;Ljava/lang/String;)Lio/trino/sql/planner/plan/PlanNode;
+#getStats(I)Ljava/util/Optional;
+#storeStats(ILio/trino/cost/PlanNodeStatsEstimate;)V
+#getCost(I)Ljava/util/Optional;
+#storeCost(ILio/trino/cost/PlanCostEstimate;)V
+#getGroupCount()I

+###io/trino/sql/planner/iterative/Lookup
@351
+#resolve(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/PlanNode;[deprecated]
+#resolveGroup(Lio/trino/sql/planner/plan/PlanNode;)Ljava/util/stream/Stream;
+#noLookup()Lio/trino/sql/planner/iterative/Lookup;
+#from(Ljava/util/function/Function;)Lio/trino/sql/planner/iterative/Lookup;

+###io/trino/sql/planner/iterative/GroupReference
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;ILjava/util/List;)V
+#getGroupId()I
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#getOutputSymbols()Ljava/util/List;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/iterative/IterativeOptimizer
@351
+#<init>(Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Set;)V
+#<init>(Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/function/Predicate;Ljava/util/List;Ljava/util/Set;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@356
+#getRules()Ljava/util/Set;
@357
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Set;)V
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/function/Predicate;Ljava/util/List;Ljava/util/Set;)V
-#<init>(Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Set;)V
-#<init>(Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/function/Predicate;Ljava/util/List;Ljava/util/Set;)V
@374
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Set;)V
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/function/Predicate;Ljava/util/List;Ljava/util/Set;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Set;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/RuleStatsRecorder;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/function/Predicate;Ljava/util/List;Ljava/util/Set;)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/iterative/Plans
@351
+#resolveGroupReferences(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantLimit
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneUnionColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/CreatePartialTopN
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TopNNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@358
+#isEnabled(Lio/trino/Session;)Z

+###io/trino/sql/planner/iterative/rule/PushdownLimitIntoRowNumber
@352
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneUpdateSourceColumns
@352
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/UpdateNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@406
-###io/trino/sql/planner/iterative/rule/PruneUpdateSourceColumns

+###io/trino/sql/planner/iterative/rule/MergeFilters
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughAssignUniqueId
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedScalarSubquery
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneExceptSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ExceptNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DetermineJoinDistributionType
@351
+#<init>(Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#canReplicate(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/sql/planner/iterative/Rule$Context;)Z
+#getSourceTablesSizeInBytes(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Rule$Context;)D
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ExtractCommonPredicatesExpressionRewriter
@351
+#extractCommonPredicates(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/iterative/rule/ExpressionRewriteRuleSet
@351
+#<init>(Lio/trino/sql/planner/iterative/rule/ExpressionRewriteRuleSet$ExpressionRewriter;)V
+#rules()Ljava/util/Set;
+#projectExpressionRewrite()Lio/trino/sql/planner/iterative/Rule;
+#aggregationExpressionRewrite()Lio/trino/sql/planner/iterative/Rule;
+#filterExpressionRewrite()Lio/trino/sql/planner/iterative/Rule;
+#joinExpressionRewrite()Lio/trino/sql/planner/iterative/Rule;
+#valuesExpressionRewrite()Lio/trino/sql/planner/iterative/Rule;
@365
+#patternRecognitionExpressionRewrite()Lio/trino/sql/planner/iterative/Rule;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushDeleteIntoConnector
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableFinishNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@406
-###io/trino/sql/planner/iterative/rule/PushDeleteIntoConnector

+###io/trino/sql/planner/iterative/rule/TransformUncorrelatedSubqueryToJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/CanonicalizeExpressions
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
@370
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedJoinToJoin
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/PruneDistinctAggregation
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DecorrelateLeftUnnestWithGlobalAggregation
@353
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushPredicateThroughProjectIntoRowNumber
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V

+###io/trino/sql/planner/iterative/rule/PushDistinctLimitIntoTableScan
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/DistinctLimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@379
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/sql/PlannerContext;)V

+###io/trino/sql/planner/iterative/rule/PushLimitThroughMarkDistinct
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneGroupIdColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PruneTopNRankingColumns
@352
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PushProjectionThroughExchange
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/SimplifyCountOverConstant
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@370
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/RemoveAggregationInSemiJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/SemiJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/SimplifyExpressions
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
+#rules()Ljava/util/Set;
@362
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/LiteralEncoder;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/tree/Expression;
@364
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/tree/Expression;
-#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/LiteralEncoder;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/tree/Expression;
@367
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/tree/Expression;
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/tree/Expression;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/PushLimitThroughSemiJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneSemiJoinColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PushdownFilterIntoRowNumber
@352
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V

+###io/trino/sql/planner/iterative/rule/PushDownDereferenceThroughUnnest
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneCountAggregationOverScalar
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ExtractSpatialJoins$ExtractSpatialLeftJoin
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V
+#isEnabled(Lio/trino/Session;)Z
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/RemoveTrivialFilters
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushPredicateThroughProjectIntoWindow
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V

+###io/trino/sql/planner/iterative/rule/PruneEnforceSingleRowColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/MergeLimitOverProjectWithSort
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneSampleColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedSingleRowSubqueryToProject
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushTopNThroughUnion
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TopNNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushDownDereferenceThroughFilter
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/AddExchangesBelowPartialAggregationOverGroupIdRuleSet
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/TaskCountEstimator;Lio/trino/execution/TaskManagerConfig;)V
+#rules()Ljava/util/Set;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/TaskCountEstimator;Lio/trino/execution/TaskManagerConfig;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/TaskCountEstimator;Lio/trino/execution/TaskManagerConfig;)V

+###io/trino/sql/planner/iterative/rule/PushAggregationThroughOuterJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushTopNIntoTableScan
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TopNNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@353
+#isEnabled(Lio/trino/Session;)Z

+###io/trino/sql/planner/iterative/rule/PruneApplyCorrelation
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ApplyNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneMarkDistinctColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PushPredicateIntoTableScan
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/TableScanNode;Lio/trino/sql/tree/Expression;ZLio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@357
+#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/sql/planner/plan/TableScanNode;ZLio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
-#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/TableScanNode;Lio/trino/sql/tree/Expression;ZLio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
@358
+#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/sql/planner/plan/TableScanNode;ZLio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
-#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/sql/planner/plan/TableScanNode;ZLio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
@362
+#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/sql/planner/plan/TableScanNode;ZLio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
-#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/sql/planner/plan/TableScanNode;ZLio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
+#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/sql/planner/plan/TableScanNode;ZLio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
-#pushFilterIntoTableScan(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/sql/planner/plan/TableScanNode;ZLio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/StatsProvider;Lio/trino/sql/planner/DomainTranslator;)Ljava/util/Optional;
@369
+#computeEnforced(Lio/trino/spi/predicate/TupleDomain;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/predicate/TupleDomain;

+###io/trino/sql/planner/iterative/rule/PushTopNThroughProject
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TopNNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@357
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>()V

+###io/trino/sql/planner/iterative/rule/RemoveDuplicateConditions
@351
+#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughWindow
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantDistinctLimit
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/DistinctLimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneIndexJoinColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedGlobalAggregationWithProjection
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/RemoveRedundantTableScanPredicate
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@362
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
@371
-###io/trino/sql/planner/iterative/rule/RemoveRedundantTableScanPredicate

+###io/trino/sql/planner/iterative/rule/PruneJoinColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/RemoveUnsupportedDynamicFilters
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@391
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
-#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/iterative/rule/PushdownFilterIntoWindow
@352
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)V

+###io/trino/sql/planner/iterative/rule/ReplaceRedundantJoinWithProject
@353
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/SingleDistinctAggregationToGroupBy
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveEmptyDelete
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableFinishNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@365
-###io/trino/sql/planner/iterative/rule/RemoveEmptyDelete

+###io/trino/sql/planner/iterative/rule/PushPartialAggregationThroughExchange
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/ReplaceWindowWithRowNumber
@352
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/WindowNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughTopNRanking
@352
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushLimitIntoTableScan
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ProjectOffPushDownRule
@351
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/GatherAndMergeWindows
@351
+#rules()Ljava/util/Set;

+###io/trino/sql/planner/iterative/rule/PruneOrderByInAggregation
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/InlineProjections
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@357
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>()V
@370
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/PruneTopNColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/ImplementIntersectAll
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/IntersectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/MergeExcept
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ExceptNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneSemiJoinFilteringSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/SemiJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantSortBelowLimitWithTies
@353
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneJoinChildrenColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/LambdaCaptureDesugaringRewriter
@351
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/iterative/rule/PruneSortColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/DesugarCurrentPath
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getCall(Lio/trino/sql/tree/CurrentPath;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
@364
+#getCall(Lio/trino/sql/tree/CurrentPath;Lio/trino/metadata/Metadata;Lio/trino/Session;)Lio/trino/sql/tree/FunctionCall;
-#getCall(Lio/trino/sql/tree/CurrentPath;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
@405
-###io/trino/sql/planner/iterative/rule/DesugarCurrentPath

+###io/trino/sql/planner/iterative/rule/GatherAndMergeWindows$SwapAdjacentWindowsBySpecifications
@351
+#<init>(I)V
+#apply(Lio/trino/sql/planner/plan/WindowNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/sql/planner/iterative/rule/DeterminePreferredWritePartitioning
@354
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/TableWriterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@365
-###io/trino/sql/planner/iterative/rule/DeterminePreferredWritePartitioning

+###io/trino/sql/planner/iterative/rule/ExpressionRewriteRuleSet$ExpressionRewriter
@351
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/iterative/rule/DesugarRowSubscript
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
@357
-###io/trino/sql/planner/iterative/rule/DesugarRowSubscript

+###io/trino/sql/planner/iterative/rule/PruneCorrelatedJoinColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/MergeLimits
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DecorrelateInnerUnnestWithGlobalAggregation
@353
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneUnionSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/UnionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/OptimizeDuplicateInsensitiveJoins
@352
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedInPredicateToJoin
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ApplyNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushOffsetThroughProject
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/OffsetNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughMarkDistinct
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DesugarArrayConstructor
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
+#rules()Ljava/util/Set;
@405
-###io/trino/sql/planner/iterative/rule/DesugarArrayConstructor

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedDistinctAggregationWithoutProjection
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/DesugarTryExpression
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
@405
-###io/trino/sql/planner/iterative/rule/DesugarTryExpression

+###io/trino/sql/planner/iterative/rule/PruneAggregationColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/SetOperationNodeTranslator
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;)V
+#makeSetContainmentPlanForDistinct(Lio/trino/sql/planner/plan/SetOperationNode;)Lio/trino/sql/planner/iterative/rule/SetOperationNodeTranslator$TranslationResult;
+#makeSetContainmentPlanForAll(Lio/trino/sql/planner/plan/SetOperationNode;)Lio/trino/sql/planner/iterative/rule/SetOperationNodeTranslator$TranslationResult;
@364
+#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;)V

+###io/trino/sql/planner/iterative/rule/PruneCorrelatedJoinCorrelation
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneTableWriterSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableWriterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DesugarCurrentUser
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getCall(Lio/trino/sql/tree/CurrentUser;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
@364
+#getCall(Lio/trino/sql/tree/CurrentUser;Lio/trino/metadata/Metadata;Lio/trino/Session;)Lio/trino/sql/tree/FunctionCall;
-#getCall(Lio/trino/sql/tree/CurrentUser;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
@402
+#getCall(Lio/trino/metadata/Metadata;Lio/trino/Session;)Lio/trino/sql/tree/FunctionCall;
-#getCall(Lio/trino/sql/tree/CurrentUser;Lio/trino/metadata/Metadata;Lio/trino/Session;)Lio/trino/sql/tree/FunctionCall;
@405
-###io/trino/sql/planner/iterative/rule/DesugarCurrentUser

+###io/trino/sql/planner/iterative/rule/PushProjectionThroughUnion
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneIndexSourceColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/ExtractSpatialJoins
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V
+#rules()Ljava/util/Set;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/DetermineSemiJoinDistributionType
@351
+#<init>(Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/SemiJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DesugarLambdaExpression
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/RewriteSpatialPartitioningAggregation
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/PushProjectionIntoTableScan
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@358
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/ScalarStatsCalculator;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/ScalarStatsCalculator;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/cost/ScalarStatsCalculator;)V

+###io/trino/sql/planner/iterative/rule/PushJoinIntoTableScan
@352
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#isEnabled(Lio/trino/Session;)Z
+#getEffectiveFilter(Lio/trino/sql/planner/plan/JoinNode;)Lio/trino/sql/tree/Expression;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@396
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/MergeLimitWithSort
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneDeleteSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/DeleteNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@406
-###io/trino/sql/planner/iterative/rule/PruneDeleteSourceColumns

+###io/trino/sql/planner/iterative/rule/PruneUnnestSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/UnnestNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/MergeLimitWithTopN
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushLimitThroughProject
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@357
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>()V

+###io/trino/sql/planner/iterative/rule/TransformExistsApplyToCorrelatedJoin
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ApplyNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/RemoveFullSample
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/SampleNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneApplyColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PushDownNegationsExpressionRewriter
@351
+#pushDownNegations(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;Ljava/util/Map;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/iterative/rule/MergeUnion
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/UnionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneDistinctLimitSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/DistinctLimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveUnreferencedScalarSubqueries
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushLimitThroughOffset
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneOutputSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/OutputNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/EvaluateZeroSample
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/SampleNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DecorrelateUnnest
@353
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ExtractDereferencesFromFilterAboveScan
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ImplementExceptAll
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ExceptNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushSampleIntoTableScan
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/SampleNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/TransformFilteringSemiJoinToInnerJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneApplySourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ApplyNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ImplementBernoulliSampleAsFilter
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/SampleNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneSpatialJoinColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/ReplaceRedundantJoinWithSource
@354
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneIntersectSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/IntersectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneFilterColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/EliminateCrossJoins
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#isOriginalOrder(Ljava/util/List;)Z
+#getJoinOrder(Lio/trino/sql/planner/optimizations/joins/JoinGraph;)Ljava/util/List;
+#buildJoinTree(Ljava/util/List;Lio/trino/sql/planner/optimizations/joins/JoinGraph;Ljava/util/List;Lio/trino/sql/planner/PlanNodeIdAllocator;)Lio/trino/sql/planner/plan/PlanNode;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@357
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@370
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/PushLimitThroughUnion
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneTableScanColumns
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#pruneColumns(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeProvider;Lio/trino/Session;Lio/trino/sql/planner/plan/TableScanNode;Ljava/util/Set;)Ljava/util/Optional;

+###io/trino/sql/planner/iterative/rule/PruneGroupIdSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/GroupIdNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneOffsetColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PruneAssignUniqueIdColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PlanNodeWithCost
@351
+#<init>(Lio/trino/cost/PlanCostEstimate;Lio/trino/sql/planner/plan/PlanNode;)V
+#getPlanNode()Lio/trino/sql/planner/plan/PlanNode;
+#getCost()Lio/trino/cost/PlanCostEstimate;

+###io/trino/sql/planner/iterative/rule/MultipleDistinctAggregationToMarkDistinct
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@409
+#<init>(Lio/trino/cost/TaskCountEstimator;)V
-#<init>()V

+###io/trino/sql/planner/iterative/rule/PushProjectionThroughJoin
@351
+#pushProjectionThroughJoin(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;)Ljava/util/Optional;
@357
+#pushProjectionThroughJoin(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#pushProjectionThroughJoin(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;)Ljava/util/Optional;
@370
+#pushProjectionThroughJoin(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;
-#pushProjectionThroughJoin(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/sql/planner/iterative/Lookup;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Optional;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantSort
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/SortNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantTopN
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TopNNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushPartialAggregationThroughJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ImplementOffset
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/OffsetNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughLimit
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushdownLimitIntoWindow
@352
+#<init>(Lio/trino/metadata/Metadata;)V
+#isEnabled(Lio/trino/Session;)Z
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@364
+#<init>()V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/PruneWindowColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/RemoveRedundantEnforceSingleRowNode
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/EnforceSingleRowNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneProjectColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/ExtractSpatialJoins$ExtractSpatialInnerJoin
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V
+#isEnabled(Lio/trino/Session;)Z
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/RemoveRedundantIdentityProjections
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneSpatialJoinChildrenColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/SpatialJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedGlobalAggregationWithoutProjection
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/PushTopNThroughOuterJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TopNNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneUnnestColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PruneValuesColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedGroupedAggregationWithoutProjection
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/DesugarAtTimeZone
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
@405
-###io/trino/sql/planner/iterative/rule/DesugarAtTimeZone

+###io/trino/sql/planner/iterative/rule/PushRemoteExchangeThroughAssignUniqueId
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ExchangeNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ImplementFilteredAggregations
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushDownDereferenceThroughJoin
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ApplyTableScanRedirection
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableScanNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/GatherAndMergeWindows$MergeAdjacentWindowsOverProjects
@351
+#<init>(I)V
+#apply(Lio/trino/sql/planner/plan/WindowNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/sql/planner/iterative/rule/PruneExchangeSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ExchangeNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DesugarLike
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
+#rules()Ljava/util/Set;
@405
-###io/trino/sql/planner/iterative/rule/DesugarLike

+###io/trino/sql/planner/iterative/rule/SetOperationNodeTranslator$TranslationResult
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;)V
+#<init>(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Ljava/util/Optional;)V
+#getPlanNode()Lio/trino/sql/planner/plan/PlanNode;
+#getCountSymbols()Ljava/util/List;
+#getRowNumberSymbol()Lio/trino/sql/planner/Symbol;

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughRowNumber
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/UnwrapCastInComparison
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
+#unwrapCasts(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
+#unwrapCasts(Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;)V
-#unwrapCasts(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
@396
+#falseIfNotNull(Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#trueIfNotNull(Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/iterative/rule/PruneAggregationSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantOffset
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/OffsetNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/MergeIntersect
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/IntersectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ImplementLimitWithTies
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@353
+#rewriteLimitWithTiesWithPartitioning(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/sql/planner/SymbolAllocator;Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@364
+#rewriteLimitWithTiesWithPartitioning(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/sql/planner/SymbolAllocator;Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
-#rewriteLimitWithTiesWithPartitioning(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/sql/planner/SymbolAllocator;Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/iterative/rule/AddIntermediateAggregations
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneExplainAnalyzeSourceColumns
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ExplainAnalyzeNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedDistinctAggregationWithProjection
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/ReorderJoins
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/CostComparator;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@357
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/CostComparator;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/CostComparator;)V
@370
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/cost/CostComparator;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/CostComparator;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/RemoveUnreferencedScalarApplyNodes
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ApplyNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ImplementIntersectDistinctAsUnion
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/IntersectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/MergeLimitWithDistinct
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneRowNumberColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughTopN
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughSort
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushTableWriteThroughUnion
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/TableWriterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ImplementExceptDistinctAsUnion
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ExceptNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneLimitColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/rule/TransformUncorrelatedInPredicateSubqueryToSemiJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ApplyNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantExists
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ApplyNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/CanonicalizeExpressionRewriter
@351
+#canonicalizeExpression(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/Expression;
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/tree/Expression;
@364
+#canonicalizeExpression(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/Session;)Lio/trino/sql/tree/Expression;
-#canonicalizeExpression(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/Expression;
@370
+#canonicalizeExpression(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/sql/PlannerContext;Lio/trino/Session;)Lio/trino/sql/tree/Expression;
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/tree/Expression;
-#canonicalizeExpression(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/Session;)Lio/trino/sql/tree/Expression;
-#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/iterative/rule/PushAggregationIntoTableScan
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#pushAggregationIntoTableScan(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/iterative/Rule$Context;Lio/trino/sql/planner/plan/TableScanNode;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@358
+#pushAggregationIntoTableScan(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/iterative/Rule$Context;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableScanNode;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
-#pushAggregationIntoTableScan(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/iterative/Rule$Context;Lio/trino/sql/planner/plan/TableScanNode;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
+#pushAggregationIntoTableScan(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/iterative/Rule$Context;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableScanNode;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
-#<init>(Lio/trino/metadata/Metadata;)V
-#pushAggregationIntoTableScan(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/iterative/Rule$Context;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableScanNode;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
@379
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
+#pushAggregationIntoTableScan(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/iterative/Rule$Context;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableScanNode;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
-#<init>(Lio/trino/sql/PlannerContext;)V
-#pushAggregationIntoTableScan(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/iterative/Rule$Context;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableScanNode;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;

+###io/trino/sql/planner/iterative/rule/PushDownDereferenceThroughSemiJoin
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/TransformCorrelatedGroupedAggregationWithProjection
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/CorrelatedJoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/iterative/rule/PushDownDereferenceThroughProject
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushLimitThroughOuterJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/LimitNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneExchangeColumns
@351
+#<init>()V

+###io/trino/sql/planner/iterative/RuleIndex$Builder
@351
+#<init>()V
+#register(Ljava/util/Set;)Lio/trino/sql/planner/iterative/RuleIndex$Builder;
+#register(Lio/trino/sql/planner/iterative/Rule;)Lio/trino/sql/planner/iterative/RuleIndex$Builder;
+#build()Lio/trino/sql/planner/iterative/RuleIndex;

+###io/trino/sql/planner/iterative/Rule
@351
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/RuleStats
@351
+#<init>()V
+#record(JZ)V
+#recordFailure()V
+#getInvocations()J
+#getHits()J
+#getTime()Lio/airlift/stats/TimeDistribution;
+#getFailures()J

+###io/trino/sql/planner/OptimizerStatsRecorder
@351
+#<init>()V
+#register(Lio/trino/sql/planner/optimizations/PlanOptimizer;)V
+#record(Lio/trino/sql/planner/optimizations/PlanOptimizer;J)V
+#recordFailure(Lio/trino/sql/planner/optimizations/PlanOptimizer;)V
@356
+#getStats()Ljava/util/Map;

+###io/trino/sql/planner/DomainTranslator$ExtractionResult
@351
+#<init>(Lio/trino/spi/predicate/TupleDomain;Lio/trino/sql/tree/Expression;)V
+#getTupleDomain()Lio/trino/spi/predicate/TupleDomain;
+#getRemainingExpression()Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/SortExpressionExtractor
@351
+#extractSortExpression(Lio/trino/metadata/Metadata;Ljava/util/Set;Lio/trino/sql/tree/Expression;)Ljava/util/Optional;

+###io/trino/sql/planner/ResolvedFunctionCallRewriter
@351
+#rewriteResolvedFunctions(Lio/trino/sql/tree/Expression;Ljava/util/Map;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/PartialTranslator
@351
+#extractPartialTranslations(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Map;
@372
+#extractPartialTranslations(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/PlannerContext;)Ljava/util/Map;
-#extractPartialTranslations(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Map;

+###io/trino/sql/planner/PlanNodeIdAllocator
@351
+#<init>()V
+#getNextId()Lio/trino/sql/planner/plan/PlanNodeId;

+###io/trino/sql/planner/Coercer
@351
+#addCoercions(Lio/trino/sql/tree/Expression;Lio/trino/sql/analyzer/Analysis;)Lio/trino/sql/tree/Expression;
+#addCoercions(Lio/trino/sql/tree/Expression;Ljava/util/Map;Ljava/util/Set;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/DesugarAtTimeZoneRewriter
@351
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/Expression;
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/SymbolAllocator;)Lio/trino/sql/tree/Expression;
@364
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;Lio/trino/Session;)Lio/trino/sql/tree/Expression;
-#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/Expression;
@405
-###io/trino/sql/planner/DesugarAtTimeZoneRewriter

+###io/trino/sql/planner/GroupingOperationRewriter
@351
+#rewriteGroupingOperation(Lio/trino/sql/tree/GroupingOperation;Ljava/util/List;Ljava/util/Map;Ljava/util/Optional;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/ExpressionInterpreter
@351
+#expressionInterpreter(Lio/trino/sql/tree/Expression;Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/util/Map;)Lio/trino/sql/planner/ExpressionInterpreter;
+#expressionOptimizer(Lio/trino/sql/tree/Expression;Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/util/Map;)Lio/trino/sql/planner/ExpressionInterpreter;
+#evaluateConstantExpression(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/lang/Object;
+#getType()Lio/trino/spi/type/Type;
+#evaluate()Ljava/lang/Object;
+#evaluate(Lio/trino/sql/planner/SymbolResolver;)Ljava/lang/Object;
+#optimize(Lio/trino/sql/planner/SymbolResolver;)Ljava/lang/Object;
@354
+#<init>(Lio/trino/sql/tree/Expression;Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/util/Map;)V
-#expressionInterpreter(Lio/trino/sql/tree/Expression;Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/util/Map;)Lio/trino/sql/planner/ExpressionInterpreter;
-#expressionOptimizer(Lio/trino/sql/tree/Expression;Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/util/Map;)Lio/trino/sql/planner/ExpressionInterpreter;
@367
+#<init>(Lio/trino/sql/tree/Expression;Lio/trino/sql/PlannerContext;Lio/trino/Session;Ljava/util/Map;)V
+#evaluateConstantExpression(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/lang/Object;
+#evaluateConstantExpression(Lio/trino/sql/tree/Expression;Ljava/util/Map;Ljava/util/Set;Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/security/AccessControl;Ljava/util/Set;Ljava/util/Map;)Ljava/lang/Object;
-#<init>(Lio/trino/sql/tree/Expression;Lio/trino/metadata/Metadata;Lio/trino/Session;Ljava/util/Map;)V
-#evaluateConstantExpression(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/lang/Object;

+###io/trino/sql/planner/RuleStatsRecorder
@351
+#<init>()V
+#registerAll(Ljava/util/Collection;)V
+#record(Lio/trino/sql/planner/iterative/Rule;JZ)V
+#recordFailure(Lio/trino/sql/planner/iterative/Rule;)V
+#getStats()Ljava/util/Map;

+###io/trino/sql/planner/DesugarTryExpressionRewriter
@351
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/Session;Lio/trino/sql/planner/SymbolAllocator;)Lio/trino/sql/tree/Expression;
@405
-###io/trino/sql/planner/DesugarTryExpressionRewriter

+###io/trino/sql/planner/SymbolsExtractor
@351
+#extractUnique(Lio/trino/sql/planner/plan/PlanNode;)Ljava/util/Set;
+#extractUniqueNonRecursive(Lio/trino/sql/planner/plan/PlanNode;)Ljava/util/Set;
+#extractUnique(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Ljava/util/Set;
+#extractUnique(Lio/trino/sql/tree/Expression;)Ljava/util/Set;
+#extractUnique(Ljava/lang/Iterable;)Ljava/util/Set;
+#extractUnique(Lio/trino/sql/planner/plan/AggregationNode$Aggregation;)Ljava/util/Set;
+#extractUnique(Lio/trino/sql/planner/plan/WindowNode$Function;)Ljava/util/Set;
+#extractAll(Lio/trino/sql/tree/Expression;)Ljava/util/List;
+#extractAll(Lio/trino/sql/planner/plan/AggregationNode$Aggregation;)Ljava/util/List;
+#extractAll(Lio/trino/sql/planner/plan/WindowNode$Function;)Ljava/util/List;
+#extractNames(Lio/trino/sql/tree/Expression;Ljava/util/Set;)Ljava/util/Set;
+#extractNamesNoSubqueries(Lio/trino/sql/tree/Expression;Ljava/util/Set;)Ljava/util/Set;
+#extractOutputSymbols(Lio/trino/sql/planner/plan/PlanNode;)Ljava/util/Set;
+#extractOutputSymbols(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Ljava/util/Set;
@356
+#extractUnique(Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;)Ljava/util/Set;
@365
-#extractUnique(Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;)Ljava/util/Set;

+###io/trino/sql/planner/DesugarArrayConstructorRewriter
@351
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/Expression;
+#rewrite(Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/tree/Expression;
@364
-#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/Expression;
@405
-###io/trino/sql/planner/DesugarArrayConstructorRewriter

+###io/trino/sql/planner/LocalExecutionPlanner
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/LookupJoinOperators;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
+#plan(Lio/trino/operator/TaskContext;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffer;)Lio/trino/sql/planner/LocalExecutionPlanner$LocalExecutionPlan;
+#plan(Lio/trino/operator/TaskContext;Lio/trino/operator/StageExecutionDescriptor;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/planner/TypeProvider;Ljava/util/List;Lio/trino/operator/OutputFactory;)Lio/trino/sql/planner/LocalExecutionPlanner$LocalExecutionPlan;
@358
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/LookupJoinOperators;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
@364
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/execution/TableExecuteContextManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/type/BlockTypeOperators;Lio/trino/execution/TableExecuteContextManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/execution/TableExecuteContextManager;)V
@369
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/type/BlockTypeOperators;Lio/trino/execution/TableExecuteContextManager;Lio/trino/exchange/ExchangeManagerRegistry;)V
-#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/ExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/type/BlockTypeOperators;Lio/trino/execution/TableExecuteContextManager;)V
@388
+#plan(Lio/trino/operator/TaskContext;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/PartitioningScheme;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffer;)Lio/trino/sql/planner/LocalExecutionPlanner$LocalExecutionPlan;
+#plan(Lio/trino/operator/TaskContext;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/planner/TypeProvider;Ljava/util/List;Lio/trino/operator/OutputFactory;)Lio/trino/sql/planner/LocalExecutionPlanner$LocalExecutionPlan;
-#plan(Lio/trino/operator/TaskContext;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/PartitioningScheme;Lio/trino/operator/StageExecutionDescriptor;Ljava/util/List;Lio/trino/execution/buffer/OutputBuffer;)Lio/trino/sql/planner/LocalExecutionPlanner$LocalExecutionPlan;
-#plan(Lio/trino/operator/TaskContext;Lio/trino/operator/StageExecutionDescriptor;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/List;Lio/trino/sql/planner/TypeProvider;Ljava/util/List;Lio/trino/operator/OutputFactory;)Lio/trino/sql/planner/LocalExecutionPlanner$LocalExecutionPlan;
@405
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/type/BlockTypeOperators;Lio/trino/execution/TableExecuteContextManager;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/client/NodeVersion;)V
-#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Ljava/util/Optional;Lio/trino/split/PageSourceProvider;Lio/trino/index/IndexManager;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/split/PageSinkManager;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/sql/gen/ExpressionCompiler;Lio/trino/sql/gen/PageFunctionCompiler;Lio/trino/sql/gen/JoinFilterFunctionCompiler;Lio/trino/operator/index/IndexJoinLookupStats;Lio/trino/execution/TaskManagerConfig;Lio/trino/spiller/SpillerFactory;Lio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/PagesIndex$Factory;Lio/trino/sql/gen/JoinCompiler;Lio/trino/operator/OperatorFactories;Lio/trino/sql/gen/OrderingCompiler;Lio/trino/execution/DynamicFilterConfig;Lio/trino/type/BlockTypeOperators;Lio/trino/execution/TableExecuteContextManager;Lio/trino/exchange/ExchangeManagerRegistry;)V

+###io/trino/sql/planner/Partitioning$ArgumentBinding
@351
+#<init>(Lio/trino/sql/tree/Expression;Lio/trino/spi/predicate/NullableValue;)V
+#expressionBinding(Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/Partitioning$ArgumentBinding;
+#constantBinding(Lio/trino/spi/predicate/NullableValue;)Lio/trino/sql/planner/Partitioning$ArgumentBinding;
+#isConstant()Z
+#isVariable()Z
+#getColumn()Lio/trino/sql/planner/Symbol;
+#getExpression()Lio/trino/sql/tree/Expression;
+#getConstant()Lio/trino/spi/predicate/NullableValue;
+#translate(Ljava/util/function/Function;)Lio/trino/sql/planner/Partitioning$ArgumentBinding;
+#translate(Lio/trino/sql/planner/Partitioning$Translator;)Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/NodePartitioningManager
@351
+#<init>(Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/type/BlockTypeOperators;)V
+#addPartitioningProvider(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorNodePartitioningProvider;)V
+#removePartitioningProvider(Lio/trino/connector/CatalogName;)V
+#getPartitionFunction(Lio/trino/Session;Lio/trino/sql/planner/PartitioningScheme;Ljava/util/List;)Lio/trino/operator/PartitionFunction;
+#listPartitionHandles(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)Ljava/util/List;
+#getNodePartitioningMap(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/sql/planner/NodePartitionMap;
+#getBucketNodeMap(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;Z)Lio/trino/execution/scheduler/BucketNodeMap;
@353
+#getBucketFunction(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/List;I)Lio/trino/spi/connector/BucketFunction;
+#getConnectorBucketNodeMap(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/spi/connector/ConnectorBucketNodeMap;
@388
+#<init>(Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/type/BlockTypeOperators;Lio/trino/connector/CatalogServiceProvider;)V
-#<init>(Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/type/BlockTypeOperators;)V
-#addPartitioningProvider(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorNodePartitioningProvider;)V
-#removePartitioningProvider(Lio/trino/connector/CatalogName;)V
-#listPartitionHandles(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)Ljava/util/List;
@393
+#getPartitionFunction(Lio/trino/Session;Lio/trino/sql/planner/PartitioningScheme;Ljava/util/List;[I)Lio/trino/operator/PartitionFunction;
+#getBucketNodeMap(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/execution/scheduler/BucketNodeMap;
+#getNodeCount(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)I
+#getConnectorBucketNodeMap(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)Ljava/util/Optional;
-#getBucketNodeMap(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;Z)Lio/trino/execution/scheduler/BucketNodeMap;
-#getConnectorBucketNodeMap(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/spi/connector/ConnectorBucketNodeMap;
@398
+#getBucketCount(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)I
@406
+#getSplitToBucket(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)Ljava/util/function/ToIntFunction;
@407
+#getNodePartitioningMap(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;Ljava/util/Optional;)Lio/trino/sql/planner/NodePartitionMap;
-#getBucketCount(Lio/trino/Session;Lio/trino/sql/planner/PartitioningHandle;)I

+###io/trino/sql/planner/ExpressionExtractor
@351
+#extractExpressions(Lio/trino/sql/planner/plan/PlanNode;)Ljava/util/List;
+#extractExpressions(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/iterative/Lookup;)Ljava/util/List;
+#extractExpressionsNonRecursive(Lio/trino/sql/planner/plan/PlanNode;)Ljava/util/List;
+#forEachExpression(Lio/trino/sql/planner/plan/PlanNode;Ljava/util/function/Consumer;)V

+###io/trino/sql/planner/NodePartitionMap
@351
+#<init>(Ljava/util/List;Ljava/util/function/ToIntFunction;)V
+#<init>(Ljava/util/List;[ILjava/util/function/ToIntFunction;)V
+#getPartitionToNode()Ljava/util/List;
+#getBucketToPartition()[I
+#getNode(Lio/trino/metadata/Split;)Lio/trino/metadata/InternalNode;
+#asBucketNodeMap()Lio/trino/execution/scheduler/BucketNodeMap;

+###io/trino/sql/planner/TypeAnalyzer
@351
+#<init>(Lio/trino/sql/parser/SqlParser;Lio/trino/metadata/Metadata;)V
+#getTypes(Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/lang/Iterable;)Ljava/util/Map;
+#getTypes(Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/tree/Expression;)Ljava/util/Map;
+#getType(Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/tree/Expression;)Lio/trino/spi/type/Type;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/analyzer/StatementAnalyzerFactory;)V
+#createTestingTypeAnalyzer(Lio/trino/sql/PlannerContext;)Lio/trino/sql/planner/TypeAnalyzer;
-#<init>(Lio/trino/sql/parser/SqlParser;Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/EqualityInference
@351
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Set;)Lio/trino/sql/tree/Expression;
+#generateEqualitiesPartitionedBy(Ljava/util/Set;)Lio/trino/sql/planner/EqualityInference$EqualityPartition;
+#isInferenceCandidate(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;)Z
+#newInstance(Lio/trino/metadata/Metadata;[Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/EqualityInference;
+#newInstance(Lio/trino/metadata/Metadata;Ljava/util/Collection;)Lio/trino/sql/planner/EqualityInference;
+#nonInferrableConjuncts(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;)Ljava/util/List;
@363
+#nonInferrableConjuncts(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;)Ljava/util/stream/Stream;
-#nonInferrableConjuncts(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;)Ljava/util/List;

+###io/trino/sql/planner/QueryPlanner$PlanAndMappings
@351
+#<init>(Lio/trino/sql/planner/PlanBuilder;Ljava/util/Map;)V
+#getSubPlan()Lio/trino/sql/planner/PlanBuilder;
+#get(Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/Symbol;
+#tryGet(Lio/trino/sql/tree/Expression;)Ljava/util/Optional;

+###io/trino/sql/planner/EffectivePredicateExtractor
@351
+#<init>(Lio/trino/sql/planner/DomainTranslator;Lio/trino/metadata/Metadata;Z)V
+#extract(Lio/trino/Session;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/TypeAnalyzer;)Lio/trino/sql/tree/Expression;
@367
+#<init>(Lio/trino/sql/planner/DomainTranslator;Lio/trino/sql/PlannerContext;Z)V
-#<init>(Lio/trino/sql/planner/DomainTranslator;Lio/trino/metadata/Metadata;Z)V

+###io/trino/sql/planner/NullabilityAnalyzer
@351
+#mayReturnNullOnNonNullInput(Lio/trino/sql/tree/Expression;)Z

+###io/trino/sql/planner/DomainCoercer
@351
+#applySaturatedCasts(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/spi/predicate/Domain;Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Domain;
@374
+#applySaturatedCasts(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/spi/predicate/Domain;Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Domain;
-#applySaturatedCasts(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/spi/predicate/Domain;Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Domain;

+###io/trino/sql/planner/TypeProvider
@351
+#viewOf(Ljava/util/Map;)Lio/trino/sql/planner/TypeProvider;
+#copyOf(Ljava/util/Map;)Lio/trino/sql/planner/TypeProvider;
+#empty()Lio/trino/sql/planner/TypeProvider;
+#get(Lio/trino/sql/planner/Symbol;)Lio/trino/spi/type/Type;
+#allTypes()Ljava/util/Map;

+###io/trino/sql/planner/NoOpSymbolResolver
@351
+#<init>()V
+#getValue(Lio/trino/sql/planner/Symbol;)Ljava/lang/Object;

+###io/trino/sql/planner/StatisticsAggregationPlanner
@351
+#<init>(Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;)V
+#createStatisticsAggregation(Lio/trino/spi/statistics/TableStatisticsMetadata;Ljava/util/Map;)Lio/trino/sql/planner/StatisticsAggregationPlanner$TableStatisticAggregation;
@364
+#<init>(Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;Lio/trino/Session;)V
-#<init>(Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;)V

+###io/trino/sql/planner/ScopeAware
@351
+#scopeAwareKey(Lio/trino/sql/tree/Node;Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/analyzer/Scope;)Lio/trino/sql/planner/ScopeAware;
+#getNode()Lio/trino/sql/tree/Node;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/Symbol
@351
+#from(Lio/trino/sql/tree/Expression;)Lio/trino/sql/planner/Symbol;
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toSymbolReference()Lio/trino/sql/tree/SymbolReference;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lio/trino/sql/planner/Symbol;)I
+#compareTo(Ljava/lang/Object;)I

+###io/trino/sql/planner/DomainTranslator
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#toPredicate(Lio/trino/spi/predicate/TupleDomain;)Lio/trino/sql/tree/Expression;
+#fromPredicate(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/planner/DomainTranslator$ExtractionResult;
@364
+#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;)V
-#<init>(Lio/trino/metadata/Metadata;)V
@367
+#<init>(Lio/trino/sql/PlannerContext;)V
+#toPredicate(Lio/trino/Session;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/sql/tree/Expression;
+#getExtractionResult(Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/planner/DomainTranslator$ExtractionResult;
-#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;)V
-#toPredicate(Lio/trino/spi/predicate/TupleDomain;)Lio/trino/sql/tree/Expression;
-#fromPredicate(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeProvider;)Lio/trino/sql/planner/DomainTranslator$ExtractionResult;

+###io/trino/sql/planner/Plan
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/TypeProvider;Lio/trino/cost/StatsAndCosts;)V
+#getRoot()Lio/trino/sql/planner/plan/PlanNode;
+#getTypes()Lio/trino/sql/planner/TypeProvider;
+#getStatsAndCosts()Lio/trino/cost/StatsAndCosts;

+###io/trino/sql/planner/PartitioningHandle
@351
+#<init>(Ljava/util/Optional;Ljava/util/Optional;Lio/trino/spi/connector/ConnectorPartitioningHandle;)V
+#getConnectorId()Ljava/util/Optional;
+#getTransactionHandle()Ljava/util/Optional;
+#getConnectorHandle()Lio/trino/spi/connector/ConnectorPartitioningHandle;
+#isSingleNode()Z
+#isCoordinatorOnly()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@392
+#getCatalogHandle()Ljava/util/Optional;
-#getConnectorId()Ljava/util/Optional;
@403
+#<init>(Ljava/util/Optional;Ljava/util/Optional;Lio/trino/spi/connector/ConnectorPartitioningHandle;Z)V
+#isScaleWriters()Z
@405
+#isScaledWriterHashDistribution(Lio/trino/sql/planner/PartitioningHandle;)Z

+###io/trino/sql/planner/ParameterRewriter
@351
+#<init>(Ljava/util/Map;)V
+#<init>(Lio/trino/sql/analyzer/Analysis;)V
+#rewriteParameter(Lio/trino/sql/tree/Parameter;Ljava/lang/Void;Lio/trino/sql/tree/ExpressionTreeRewriter;)Lio/trino/sql/tree/Expression;
+#rewriteParameter(Lio/trino/sql/tree/Parameter;Ljava/lang/Object;Lio/trino/sql/tree/ExpressionTreeRewriter;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/gen/AndCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/VarArgsToMapAdapterGenerator
@351
+#generateVarArgsToMapAdapter(Ljava/lang/Class;Ljava/util/List;Ljava/util/List;Ljava/util/function/Function;)Ljava/lang/invoke/MethodHandle;

+###io/trino/sql/gen/Binding
@351
+#<init>(JLjava/lang/invoke/MethodType;)V
+#getBindingId()J
+#getType()Ljava/lang/invoke/MethodType;
+#toString()Ljava/lang/String;

+###io/trino/sql/gen/CachedInstanceBinder
@351
+#<init>(Lio/airlift/bytecode/ClassDefinition;Lio/trino/sql/gen/CallSiteBinder;)V
+#getCallSiteBinder()Lio/trino/sql/gen/CallSiteBinder;
+#getCachedInstance(Ljava/lang/invoke/MethodHandle;)Lio/airlift/bytecode/FieldDefinition;
+#generateInitializations(Lio/airlift/bytecode/Variable;Lio/airlift/bytecode/BytecodeBlock;)V

+###io/trino/sql/gen/PageFunctionCompiler
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/CompilerConfig;)V
+#<init>(Lio/trino/metadata/Metadata;I)V
+#getProjectionCache()Lio/airlift/jmx/CacheStatsMBean;
+#getFilterCache()Lio/airlift/jmx/CacheStatsMBean;
+#compileProjection(Lio/trino/sql/relational/RowExpression;Ljava/util/Optional;)Ljava/util/function/Supplier;
+#compileFilter(Lio/trino/sql/relational/RowExpression;Ljava/util/Optional;)Ljava/util/function/Supplier;
@374
+#<init>(Lio/trino/metadata/FunctionManager;Lio/trino/sql/planner/CompilerConfig;)V
+#<init>(Lio/trino/metadata/FunctionManager;I)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/CompilerConfig;)V
-#<init>(Lio/trino/metadata/Metadata;I)V

+###io/trino/sql/gen/BytecodeGenerator
@351
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/RowConstructorCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/JoinFilterFunctionCompiler
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#getJoinFilterFunctionFactoryStats()Lio/airlift/jmx/CacheStatsMBean;
+#compileJoinFilterFunction(Lio/trino/sql/relational/RowExpression;I)Lio/trino/sql/gen/JoinFilterFunctionCompiler$JoinFilterFunctionFactory;
@374
+#<init>(Lio/trino/metadata/FunctionManager;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/gen/JoinCompiler$PagesHashStrategyFactory
@351
+#<init>(Ljava/lang/Class;)V
+#createPagesHashStrategy(Ljava/util/List;Ljava/util/OptionalInt;)Lio/trino/operator/PagesHashStrategy;

+###io/trino/sql/gen/SwitchCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/ExpressionProfiler
@351
+#<init>()V
+#<init>(Lcom/google/common/base/Ticker;Lio/airlift/units/Duration;)V
+#start()V
+#stop(I)V
+#isExpressionExpensive()Z
@398
+#stop(I)J
-#stop(I)V

+###io/trino/sql/gen/SqlTypeBytecodeExpression
@351
+#constantType(Lio/trino/sql/gen/CallSiteBinder;Lio/trino/spi/type/Type;)Lio/trino/sql/gen/SqlTypeBytecodeExpression;
+#getBytecode(Lio/airlift/bytecode/MethodGenerationContext;)Lio/airlift/bytecode/BytecodeNode;
+#getChildNodes()Ljava/util/List;
+#getValue(Lio/airlift/bytecode/expression/BytecodeExpression;Lio/airlift/bytecode/expression/BytecodeExpression;)Lio/airlift/bytecode/expression/BytecodeExpression;
+#writeValue(Lio/airlift/bytecode/expression/BytecodeExpression;Lio/airlift/bytecode/expression/BytecodeExpression;)Lio/airlift/bytecode/expression/BytecodeExpression;

+###io/trino/sql/gen/BytecodeGeneratorContext
@351
+#<init>(Lio/trino/sql/gen/RowExpressionCompiler;Lio/airlift/bytecode/Scope;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/metadata/Metadata;)V
+#getScope()Lio/airlift/bytecode/Scope;
+#getCallSiteBinder()Lio/trino/sql/gen/CallSiteBinder;
+#generate(Lio/trino/sql/relational/RowExpression;)Lio/airlift/bytecode/BytecodeNode;
+#getScalarFunctionInvoker(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#generateCall(Lio/trino/metadata/ResolvedFunction;Ljava/util/List;)Lio/airlift/bytecode/BytecodeNode;
+#generateFullCall(Lio/trino/metadata/ResolvedFunction;Ljava/util/List;)Lio/airlift/bytecode/BytecodeNode;
+#wasNull()Lio/airlift/bytecode/Variable;
@374
+#<init>(Lio/trino/sql/gen/RowExpressionCompiler;Lio/airlift/bytecode/Scope;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/metadata/FunctionManager;)V
-#<init>(Lio/trino/sql/gen/RowExpressionCompiler;Lio/airlift/bytecode/Scope;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/metadata/Metadata;)V
@395
+#getScalarFunctionImplementation(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
-#getScalarFunctionInvoker(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;

+###io/trino/sql/gen/ExpressionCompiler
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/gen/PageFunctionCompiler;)V
+#getCursorProcessorCache()Lio/airlift/jmx/CacheStatsMBean;
+#compileCursorProcessor(Ljava/util/Optional;Ljava/util/List;Ljava/lang/Object;)Ljava/util/function/Supplier;
+#compilePageProcessor(Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;)Ljava/util/function/Supplier;
+#compilePageProcessor(Ljava/util/Optional;Ljava/util/List;)Ljava/util/function/Supplier;
+#compilePageProcessor(Ljava/util/Optional;Ljava/util/List;I)Ljava/util/function/Supplier;
@374
+#<init>(Lio/trino/metadata/FunctionManager;Lio/trino/sql/gen/PageFunctionCompiler;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/gen/PageFunctionCompiler;)V

+###io/trino/sql/gen/BytecodeUtils
@351
+#ifWasNullPopAndGoto(Lio/airlift/bytecode/Scope;Lio/airlift/bytecode/instruction/LabelNode;Ljava/lang/Class;[Ljava/lang/Class;)Lio/airlift/bytecode/BytecodeNode;
+#ifWasNullPopAndGoto(Lio/airlift/bytecode/Scope;Lio/airlift/bytecode/instruction/LabelNode;Ljava/lang/Class;Ljava/lang/Iterable;)Lio/airlift/bytecode/BytecodeNode;
+#ifWasNullClearPopAndGoto(Lio/airlift/bytecode/Scope;Lio/airlift/bytecode/instruction/LabelNode;Ljava/lang/Class;[Ljava/lang/Class;)Lio/airlift/bytecode/BytecodeNode;
+#handleNullValue(Lio/airlift/bytecode/Scope;Lio/airlift/bytecode/instruction/LabelNode;Ljava/lang/Class;Ljava/util/List;Z)Lio/airlift/bytecode/BytecodeNode;
+#boxPrimitive(Ljava/lang/Class;)Lio/airlift/bytecode/BytecodeNode;
+#unboxPrimitive(Ljava/lang/Class;)Lio/airlift/bytecode/BytecodeNode;
+#loadConstant(Lio/trino/sql/gen/CallSiteBinder;Ljava/lang/Object;Ljava/lang/Class;)Lio/airlift/bytecode/expression/BytecodeExpression;
+#loadConstant(Lio/trino/sql/gen/Binding;)Lio/airlift/bytecode/expression/BytecodeExpression;
+#generateInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/ResolvedFunction;Lio/trino/metadata/Metadata;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
+#generateInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/FunctionMetadata;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
+#generateFullInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/ResolvedFunction;Lio/trino/metadata/Metadata;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
+#generateFullInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/FunctionMetadata;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
+#unboxPrimitiveIfNecessary(Lio/airlift/bytecode/Scope;Ljava/lang/Class;)Lio/airlift/bytecode/BytecodeBlock;
+#boxPrimitiveIfNecessary(Lio/airlift/bytecode/Scope;Ljava/lang/Class;)Lio/airlift/bytecode/BytecodeNode;
+#invoke(Lio/trino/sql/gen/Binding;Ljava/lang/String;)Lio/airlift/bytecode/expression/BytecodeExpression;
+#invoke(Lio/trino/sql/gen/Binding;Lio/trino/metadata/BoundSignature;)Lio/airlift/bytecode/expression/BytecodeExpression;
+#sanitizeName(Ljava/lang/String;)Ljava/lang/String;
+#generateWrite(Lio/trino/sql/gen/CallSiteBinder;Lio/airlift/bytecode/Scope;Lio/airlift/bytecode/Variable;Lio/trino/spi/type/Type;)Lio/airlift/bytecode/BytecodeNode;
@366
+#generateInvocation(Lio/airlift/bytecode/Scope;Ljava/lang/String;Lio/trino/metadata/FunctionNullability;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
-#generateInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/FunctionMetadata;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
-#generateFullInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/FunctionMetadata;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
@367
+#invoke(Lio/trino/sql/gen/Binding;Ljava/lang/String;[Lio/airlift/bytecode/expression/BytecodeExpression;)Lio/airlift/bytecode/expression/BytecodeExpression;
+#invoke(Lio/trino/sql/gen/Binding;Ljava/lang/String;Ljava/util/List;)Lio/airlift/bytecode/expression/BytecodeExpression;
-#invoke(Lio/trino/sql/gen/Binding;Ljava/lang/String;)Lio/airlift/bytecode/expression/BytecodeExpression;
@374
+#generateInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/ResolvedFunction;Lio/trino/metadata/FunctionManager;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
+#generateFullInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/ResolvedFunction;Lio/trino/metadata/FunctionManager;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
-#generateInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/ResolvedFunction;Lio/trino/metadata/Metadata;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
-#generateFullInvocation(Lio/airlift/bytecode/Scope;Lio/trino/metadata/ResolvedFunction;Lio/trino/metadata/Metadata;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
@394
-#boxPrimitive(Ljava/lang/Class;)Lio/airlift/bytecode/BytecodeNode;
@395
+#generateInvocation(Lio/airlift/bytecode/Scope;Ljava/lang/String;Lio/trino/spi/function/FunctionNullability;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
+#invoke(Lio/trino/sql/gen/Binding;Lio/trino/spi/function/BoundSignature;)Lio/airlift/bytecode/expression/BytecodeExpression;
-#generateInvocation(Lio/airlift/bytecode/Scope;Ljava/lang/String;Lio/trino/metadata/FunctionNullability;Ljava/util/function/Function;Ljava/util/List;Lio/trino/sql/gen/CallSiteBinder;)Lio/airlift/bytecode/BytecodeNode;
-#invoke(Lio/trino/sql/gen/Binding;Lio/trino/metadata/BoundSignature;)Lio/airlift/bytecode/expression/BytecodeExpression;

+###io/trino/sql/gen/IsNullCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/JoinCompiler$LookupSourceSupplierFactory
@351
+#<init>(Ljava/lang/Class;Lio/trino/sql/gen/JoinCompiler$PagesHashStrategyFactory;)V
+#createLookupSourceSupplier(Lio/trino/Session;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)Lio/trino/operator/LookupSourceSupplier;
@358
+#createLookupSourceSupplier(Lio/trino/Session;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)Lio/trino/operator/join/LookupSourceSupplier;
-#createLookupSourceSupplier(Lio/trino/Session;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)Lio/trino/operator/LookupSourceSupplier;
@365
+#createLookupSourceSupplier(Lio/trino/Session;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Lio/trino/operator/HashArraySizeSupplier;)Lio/trino/operator/join/LookupSourceSupplier;
-#createLookupSourceSupplier(Lio/trino/Session;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)Lio/trino/operator/join/LookupSourceSupplier;
@394
+#<init>(Ljava/lang/Class;Lio/trino/sql/gen/JoinCompiler$PagesHashStrategyFactory;Ljava/util/OptionalInt;)V
-#<init>(Ljava/lang/Class;Lio/trino/sql/gen/JoinCompiler$PagesHashStrategyFactory;)V

+###io/trino/sql/gen/OrderingCompiler
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V
+#getPagesIndexOrderingsStats()Lio/airlift/jmx/CacheStatsMBean;
+#getPageWithPositionsComparatorsStats()Lio/airlift/jmx/CacheStatsMBean;
+#compilePagesIndexOrdering(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lio/trino/operator/PagesIndexOrdering;
+#internalCompilePagesIndexOrdering(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lio/trino/operator/PagesIndexOrdering;
+#compilePageWithPositionComparator(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lio/trino/operator/PageWithPositionComparator;

+###io/trino/sql/gen/VarArgsToArrayAdapterGenerator$VarArgsToArrayAdapterState
@351
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V

+###io/trino/sql/gen/DereferenceCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/LambdaCapture
@351
+#lambdaCapture(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;

+###io/trino/sql/gen/RowExpressionCompiler
@351
+#compile(Lio/trino/sql/relational/RowExpression;Lio/airlift/bytecode/Scope;)Lio/airlift/bytecode/BytecodeNode;
+#compile(Lio/trino/sql/relational/RowExpression;Lio/airlift/bytecode/Scope;Ljava/util/Optional;)Lio/airlift/bytecode/BytecodeNode;
+#createTempVariableReferenceExpression(Lio/airlift/bytecode/Variable;Lio/trino/spi/type/Type;)Lio/trino/sql/relational/VariableReferenceExpression;

+###io/trino/sql/gen/CompilerOperations
@351
+#longGreaterThanZero(J)Z
+#and(ZZ)Z
+#or(ZZ)Z
+#not(Z)Z
+#lessThan(II)Z
+#greaterThan(II)Z
+#in(Ljava/lang/Object;Ljava/util/Set;)Z
+#testMask(Lio/trino/spi/block/Block;I)Z
@362
+#optionalChannelToIntOrNegative(Ljava/util/Optional;)I
+#validateChannelsListLength(Ljava/util/List;I)V

+###io/trino/sql/gen/CoalesceCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/LambdaBytecodeGenerator
@351
+#generateMethodsForLambda(Lio/airlift/bytecode/ClassDefinition;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/sql/relational/RowExpression;Lio/trino/metadata/Metadata;)Ljava/util/Map;
+#preGenerateLambdaExpression(Lio/trino/sql/relational/LambdaDefinitionExpression;Ljava/lang/String;Lio/airlift/bytecode/ClassDefinition;Ljava/util/Map;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/metadata/Metadata;)Lio/trino/sql/gen/LambdaBytecodeGenerator$CompiledLambda;
+#generateLambda(Lio/trino/sql/gen/BytecodeGeneratorContext;Ljava/util/List;Lio/trino/sql/gen/LambdaBytecodeGenerator$CompiledLambda;Ljava/lang/Class;)Lio/airlift/bytecode/BytecodeNode;
+#compileLambdaProvider(Lio/trino/sql/relational/LambdaDefinitionExpression;Lio/trino/metadata/Metadata;Ljava/lang/Class;)Ljava/lang/Class;
@374
+#generateMethodsForLambda(Lio/airlift/bytecode/ClassDefinition;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/sql/relational/RowExpression;Lio/trino/metadata/FunctionManager;)Ljava/util/Map;
+#preGenerateLambdaExpression(Lio/trino/sql/relational/LambdaDefinitionExpression;Ljava/lang/String;Lio/airlift/bytecode/ClassDefinition;Ljava/util/Map;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/metadata/FunctionManager;)Lio/trino/sql/gen/LambdaBytecodeGenerator$CompiledLambda;
+#compileLambdaProvider(Lio/trino/sql/relational/LambdaDefinitionExpression;Lio/trino/metadata/FunctionManager;Ljava/lang/Class;)Ljava/lang/Class;
-#generateMethodsForLambda(Lio/airlift/bytecode/ClassDefinition;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/sql/relational/RowExpression;Lio/trino/metadata/Metadata;)Ljava/util/Map;
-#preGenerateLambdaExpression(Lio/trino/sql/relational/LambdaDefinitionExpression;Ljava/lang/String;Lio/airlift/bytecode/ClassDefinition;Ljava/util/Map;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/metadata/Metadata;)Lio/trino/sql/gen/LambdaBytecodeGenerator$CompiledLambda;
-#compileLambdaProvider(Lio/trino/sql/relational/LambdaDefinitionExpression;Lio/trino/metadata/Metadata;Ljava/lang/Class;)Ljava/lang/Class;

+###io/trino/sql/gen/InvokeFunctionBytecodeExpression
@351
+#invokeFunction(Lio/airlift/bytecode/Scope;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/spi/type/Type;Lio/trino/metadata/FunctionMetadata;Ljava/util/function/Function;[Lio/airlift/bytecode/expression/BytecodeExpression;)Lio/airlift/bytecode/expression/BytecodeExpression;
+#getBytecode(Lio/airlift/bytecode/MethodGenerationContext;)Lio/airlift/bytecode/BytecodeNode;
+#getChildNodes()Ljava/util/List;
@366
-###io/trino/sql/gen/InvokeFunctionBytecodeExpression

+###io/trino/sql/gen/NullIfCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/JoinFilterFunctionCompiler$JoinFilterFunctionFactory
@351
+#create(Lio/trino/spi/connector/ConnectorSession;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;)Lio/trino/operator/JoinFilterFunction;
@358
+#create(Lio/trino/spi/connector/ConnectorSession;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;)Lio/trino/operator/join/JoinFilterFunction;
-#create(Lio/trino/spi/connector/ConnectorSession;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;)Lio/trino/operator/JoinFilterFunction;

+###io/trino/sql/gen/CursorProcessorCompiler
@351
+#<init>(Lio/trino/metadata/Metadata;)V
+#generateMethods(Lio/airlift/bytecode/ClassDefinition;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/relational/RowExpression;Ljava/util/List;)V
@374
+#<init>(Lio/trino/metadata/FunctionManager;)V
-#<init>(Lio/trino/metadata/Metadata;)V

+###io/trino/sql/gen/IsolatedClass
@351
+#isolateClass(Lio/airlift/bytecode/DynamicClassLoader;Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Class;

+###io/trino/sql/gen/VarArgsToArrayAdapterGenerator$MethodHandleAndConstructor
@351
+#getMethodHandle()Ljava/lang/invoke/MethodHandle;
+#getConstructor()Ljava/lang/invoke/MethodHandle;

+###io/trino/sql/gen/InCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;
+#isInteger(J)Z

+###io/trino/sql/gen/LambdaExpressionExtractor
@351
+#extractLambdaExpressions(Lio/trino/sql/relational/RowExpression;)Ljava/util/List;

+###io/trino/sql/gen/BodyCompiler
@351
+#generateMethods(Lio/airlift/bytecode/ClassDefinition;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/sql/relational/RowExpression;Ljava/util/List;)V

+###io/trino/sql/gen/lambda/BinaryFunctionInterface
@351
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/gen/lambda/UnaryFunctionInterface
@351
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/gen/lambda/LambdaFunctionInterface
@351

+###io/trino/sql/gen/Bootstrap
@351
+#bootstrap(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;J)Ljava/lang/invoke/CallSite;

+###io/trino/sql/gen/CallSiteBinder
@351
+#<init>()V
+#bind(Ljava/lang/invoke/MethodHandle;)Lio/trino/sql/gen/Binding;
+#bind(Ljava/lang/Object;Ljava/lang/Class;)Lio/trino/sql/gen/Binding;
+#getBindings()Ljava/util/Map;
+#toString()Ljava/lang/String;

+###io/trino/sql/gen/BindCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;Ljava/util/Map;Ljava/lang/Class;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/OrCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/IfCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/JoinCompiler
@351
+#<init>(Lio/trino/spi/type/TypeOperators;)V
+#getLookupSourceStats()Lio/airlift/jmx/CacheStatsMBean;
+#getHashStrategiesStats()Lio/airlift/jmx/CacheStatsMBean;
+#compileLookupSourceFactory(Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/sql/gen/JoinCompiler$LookupSourceSupplierFactory;
+#compilePagesHashStrategyFactory(Ljava/util/List;Ljava/util/List;)Lio/trino/sql/gen/JoinCompiler$PagesHashStrategyFactory;
+#compilePagesHashStrategyFactory(Ljava/util/List;Ljava/util/List;Ljava/util/Optional;)Lio/trino/sql/gen/JoinCompiler$PagesHashStrategyFactory;
@394
+#<init>(Lio/trino/spi/type/TypeOperators;Z)V

+###io/trino/sql/gen/ArrayMapBytecodeExpression
@351
+#<init>(Lio/airlift/bytecode/Scope;Lio/trino/sql/gen/CallSiteBinder;Lio/airlift/bytecode/expression/BytecodeExpression;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Ljava/util/function/Function;)V
+#getBytecode(Lio/airlift/bytecode/MethodGenerationContext;)Lio/airlift/bytecode/BytecodeNode;
+#getChildNodes()Ljava/util/List;

+###io/trino/sql/gen/BetweenCodeGenerator
@351
+#<init>(Lio/trino/sql/relational/SpecialForm;)V
+#generateExpression(Lio/trino/sql/gen/BytecodeGeneratorContext;)Lio/airlift/bytecode/BytecodeNode;

+###io/trino/sql/gen/VarArgsToArrayAdapterGenerator
@351
+#generateVarArgsToArrayAdapter(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Lio/trino/sql/gen/VarArgsToArrayAdapterGenerator$MethodHandleAndConstructor;

+###io/trino/sql/gen/ArrayGeneratorUtils
@351
+#map(Lio/airlift/bytecode/Scope;Lio/trino/sql/gen/CachedInstanceBinder;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/airlift/bytecode/Variable;Lio/trino/metadata/FunctionMetadata;Ljava/util/function/Function;)Lio/trino/sql/gen/ArrayMapBytecodeExpression;
+#map(Lio/airlift/bytecode/Scope;Lio/trino/sql/gen/CallSiteBinder;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/airlift/bytecode/expression/BytecodeExpression;Ljava/util/function/Function;)Lio/trino/sql/gen/ArrayMapBytecodeExpression;
+#map(Lio/airlift/bytecode/Scope;Lio/trino/sql/gen/CallSiteBinder;Lio/airlift/bytecode/expression/BytecodeExpression;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Ljava/util/function/Function;)Lio/trino/sql/gen/ArrayMapBytecodeExpression;
@366
-###io/trino/sql/gen/ArrayGeneratorUtils

+###io/trino/sql/DynamicFilters$Function
@351
+#dynamicFilter(Ljava/lang/Object;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Z)Z
+#dynamicFilter(JLio/airlift/slice/Slice;Lio/airlift/slice/Slice;Z)Z
+#dynamicFilter(ZLio/airlift/slice/Slice;Lio/airlift/slice/Slice;Z)Z
+#dynamicFilter(DLio/airlift/slice/Slice;Lio/airlift/slice/Slice;Z)Z

+###io/trino/sql/SqlEnvironmentConfig
@351
+#<init>()V
+#getPath()Ljava/util/Optional;
+#setPath(Ljava/lang/String;)Lio/trino/sql/SqlEnvironmentConfig;
+#getDefaultCatalog()Ljava/util/Optional;
+#setDefaultCatalog(Ljava/lang/String;)Lio/trino/sql/SqlEnvironmentConfig;
+#getDefaultSchema()Ljava/util/Optional;
+#setDefaultSchema(Ljava/lang/String;)Lio/trino/sql/SqlEnvironmentConfig;
+#getForcedSessionTimeZone()Ljava/util/Optional;
+#setForcedSessionTimeZone(Ljava/lang/String;)Lio/trino/sql/SqlEnvironmentConfig;

+###io/trino/sql/DynamicFilters$ExtractResult
@351
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#getStaticConjuncts()Ljava/util/List;
+#getDynamicConjuncts()Ljava/util/List;

+###io/trino/sql/SqlPathElement
@351
+#<init>(Ljava/util/Optional;Lio/trino/sql/tree/Identifier;)V
+#getCatalog()Ljava/util/Optional;
+#getSchema()Lio/trino/sql/tree/Identifier;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/analyzer/Scope
@351
+#create()Lio/trino/sql/analyzer/Scope;
+#builder()Lio/trino/sql/analyzer/Scope$Builder;
+#withRelationType(Lio/trino/sql/analyzer/RelationType;)Lio/trino/sql/analyzer/Scope;
+#getQueryBoundaryScope()Lio/trino/sql/analyzer/Scope;
+#getOuterQueryParent()Ljava/util/Optional;
+#hasOuterParent(Lio/trino/sql/analyzer/Scope;)Z
+#getLocalParent()Ljava/util/Optional;
+#getLocalScopeFieldCount()I
+#getRelationId()Lio/trino/sql/analyzer/RelationId;
+#getRelationType()Lio/trino/sql/analyzer/RelationType;
+#resolveAsteriskedIdentifierChainBasis(Lio/trino/sql/tree/QualifiedName;Lio/trino/sql/tree/AllColumns;)Ljava/util/Optional;
+#isLocalScope(Lio/trino/sql/analyzer/Scope;)Z
+#resolveField(Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/QualifiedName;)Lio/trino/sql/analyzer/ResolvedField;
+#tryResolveField(Lio/trino/sql/tree/Expression;)Ljava/util/Optional;
+#tryResolveField(Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/QualifiedName;)Ljava/util/Optional;
+#getField(I)Lio/trino/sql/analyzer/ResolvedField;
+#isColumnReference(Lio/trino/sql/tree/QualifiedName;)Z
+#getNamedQuery(Ljava/lang/String;)Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###io/trino/sql/analyzer/TypeSignatureTranslator
@351
+#toSqlType(Lio/trino/spi/type/Type;)Lio/trino/sql/tree/DataType;
+#toTypeSignature(Lio/trino/sql/tree/DataType;)Lio/trino/spi/type/TypeSignature;
+#parseTypeSignature(Ljava/lang/String;Ljava/util/Set;)Lio/trino/spi/type/TypeSignature;

+###io/trino/sql/analyzer/Analysis$RefreshMaterializedViewAnalysis
@351
+#<init>(Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableHandle;Lio/trino/sql/tree/Query;Ljava/util/List;)V
+#getQuery()Lio/trino/sql/tree/Query;
+#getColumns()Ljava/util/List;
+#getTarget()Lio/trino/metadata/TableHandle;
+#getMaterializedViewName()Lio/trino/metadata/QualifiedObjectName;
@365
+#<init>(Lio/trino/sql/tree/Table;Lio/trino/metadata/TableHandle;Lio/trino/sql/tree/Query;Ljava/util/List;)V
+#getTable()Lio/trino/sql/tree/Table;
-#<init>(Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableHandle;Lio/trino/sql/tree/Query;Ljava/util/List;)V
-#getMaterializedViewName()Lio/trino/metadata/QualifiedObjectName;

+###io/trino/sql/analyzer/Analysis$GroupingSetAnalysis
@351
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getOriginalExpressions()Ljava/util/List;
+#getCubes()Ljava/util/List;
+#getRollups()Ljava/util/List;
+#getOrdinarySets()Ljava/util/List;
+#getComplexExpressions()Ljava/util/List;
+#getAllFields()Ljava/util/Set;

+###io/trino/sql/analyzer/FeaturesConfig$JoinDistributionType
@351
+#values()[Lio/trino/sql/analyzer/FeaturesConfig$JoinDistributionType;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/analyzer/FeaturesConfig$JoinDistributionType;
+#canPartition()Z
+#canReplicate()Z
@365
-###io/trino/sql/analyzer/FeaturesConfig$JoinDistributionType

+###io/trino/sql/analyzer/ConstantExpressionVerifier
@351
+#verifyExpressionIsConstant(Ljava/util/Set;Lio/trino/sql/tree/Expression;)V

+###io/trino/sql/analyzer/Scope$AsteriskedIdentifierChainBasis
@351
+#<init>(Lio/trino/sql/analyzer/Scope$BasisType;Ljava/util/Optional;Ljava/util/Optional;)V
+#getBasisType()Lio/trino/sql/analyzer/Scope$BasisType;
+#getScope()Ljava/util/Optional;
+#getRelationType()Ljava/util/Optional;

+###io/trino/sql/analyzer/FeaturesConfig
@351
+#<init>()V
+#getCpuCostWeight()D
+#setCpuCostWeight(D)Lio/trino/sql/analyzer/FeaturesConfig;
+#getMemoryCostWeight()D
+#setMemoryCostWeight(D)Lio/trino/sql/analyzer/FeaturesConfig;
+#getNetworkCostWeight()D
+#setNetworkCostWeight(D)Lio/trino/sql/analyzer/FeaturesConfig;
+#isDistributedIndexJoinsEnabled()Z
+#setDistributedIndexJoinsEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isOmitDateTimeTypePrecision()Z
+#setOmitDateTimeTypePrecision(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getJoinDistributionType()Lio/trino/sql/analyzer/FeaturesConfig$JoinDistributionType;
+#setJoinDistributionType(Lio/trino/sql/analyzer/FeaturesConfig$JoinDistributionType;)Lio/trino/sql/analyzer/FeaturesConfig;
+#getJoinMaxBroadcastTableSize()Lio/airlift/units/DataSize;
+#setJoinMaxBroadcastTableSize(Lio/airlift/units/DataSize;)Lio/trino/sql/analyzer/FeaturesConfig;
+#isGroupedExecutionEnabled()Z
+#setGroupedExecutionEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isDynamicScheduleForGroupedExecutionEnabled()Z
+#setDynamicScheduleForGroupedExecutionEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getConcurrentLifespansPerTask()I
+#setConcurrentLifespansPerTask(I)Lio/trino/sql/analyzer/FeaturesConfig;
+#isColocatedJoinsEnabled()Z
+#setColocatedJoinsEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isSpatialJoinsEnabled()Z
+#setSpatialJoinsEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getJoinReorderingStrategy()Lio/trino/sql/analyzer/FeaturesConfig$JoinReorderingStrategy;
+#setJoinReorderingStrategy(Lio/trino/sql/analyzer/FeaturesConfig$JoinReorderingStrategy;)Lio/trino/sql/analyzer/FeaturesConfig;
+#getMaxReorderedJoins()I
+#setMaxReorderedJoins(I)Lio/trino/sql/analyzer/FeaturesConfig;
+#isRedistributeWrites()Z
+#setRedistributeWrites(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isUsePreferredWritePartitioning()Z
+#setUsePreferredWritePartitioning(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isScaleWriters()Z
+#setScaleWriters(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getWriterMinSize()Lio/airlift/units/DataSize;
+#setWriterMinSize(Lio/airlift/units/DataSize;)Lio/trino/sql/analyzer/FeaturesConfig;
+#isOptimizeMetadataQueries()Z
+#setOptimizeMetadataQueries(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isUseMarkDistinct()Z
+#setUseMarkDistinct(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isPreferPartialAggregation()Z
+#setPreferPartialAggregation(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isOptimizeTopNRowNumber()Z
+#setOptimizeTopNRowNumber(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isOptimizeHashGeneration()Z
+#setOptimizeHashGeneration(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isPushTableWriteThroughUnion()Z
+#setPushTableWriteThroughUnion(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isDictionaryAggregation()Z
+#setDictionaryAggregation(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getRe2JDfaStatesLimit()I
+#setRe2JDfaStatesLimit(I)Lio/trino/sql/analyzer/FeaturesConfig;
+#getRe2JDfaRetries()I
+#setRe2JDfaRetries(I)Lio/trino/sql/analyzer/FeaturesConfig;
+#getRegexLibrary()Lio/trino/sql/analyzer/RegexLibrary;
+#setRegexLibrary(Lio/trino/sql/analyzer/RegexLibrary;)Lio/trino/sql/analyzer/FeaturesConfig;
+#isSpillEnabled()Z
+#setSpillEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isSpillOrderBy()Z
+#setSpillOrderBy(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isSpillWindowOperator()Z
+#setSpillWindowOperator(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getIterativeOptimizerTimeout()Lio/airlift/units/Duration;
+#setIterativeOptimizerTimeout(Lio/airlift/units/Duration;)Lio/trino/sql/analyzer/FeaturesConfig;
+#isEnableStatsCalculator()Z
+#setEnableStatsCalculator(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isCollectPlanStatisticsForAllQueries()Z
+#setCollectPlanStatisticsForAllQueries(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isIgnoreStatsCalculatorFailures()Z
+#setIgnoreStatsCalculatorFailures(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#setDefaultFilterFactorEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isDefaultFilterFactorEnabled()Z
+#isEnableForcedExchangeBelowGroupId()Z
+#setEnableForcedExchangeBelowGroupId(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getAggregationOperatorUnspillMemoryLimit()Lio/airlift/units/DataSize;
+#setAggregationOperatorUnspillMemoryLimit(Lio/airlift/units/DataSize;)Lio/trino/sql/analyzer/FeaturesConfig;
+#getSpillerSpillPaths()Ljava/util/List;
+#setSpillerSpillPaths(Ljava/lang/String;)Lio/trino/sql/analyzer/FeaturesConfig;
+#getSpillerThreads()I
+#setSpillerThreads(I)Lio/trino/sql/analyzer/FeaturesConfig;
+#getMemoryRevokingThreshold()D
+#setMemoryRevokingThreshold(D)Lio/trino/sql/analyzer/FeaturesConfig;
+#getMemoryRevokingTarget()D
+#setMemoryRevokingTarget(D)Lio/trino/sql/analyzer/FeaturesConfig;
+#getSpillMaxUsedSpaceThreshold()D
+#setSpillMaxUsedSpaceThreshold(D)Lio/trino/sql/analyzer/FeaturesConfig;
+#isOptimizeMixedDistinctAggregations()Z
+#setOptimizeMixedDistinctAggregations(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isUnwrapCasts()Z
+#setUnwrapCasts(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isExchangeCompressionEnabled()Z
+#setExchangeCompressionEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getExchangeDataIntegrityVerification()Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;
+#setExchangeDataIntegrityVerification(Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;)Lio/trino/sql/analyzer/FeaturesConfig;
+#isEnableIntermediateAggregations()Z
+#setEnableIntermediateAggregations(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isPushAggregationThroughOuterJoin()Z
+#setPushAggregationThroughOuterJoin(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isPushPartialAggregationThoughJoin()Z
+#setPushPartialAggregationThoughJoin(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isParseDecimalLiteralsAsDouble()Z
+#setParseDecimalLiteralsAsDouble(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isForceSingleNodeOutput()Z
+#setForceSingleNodeOutput(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isPagesIndexEagerCompactionEnabled()Z
+#setPagesIndexEagerCompactionEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getFilterAndProjectMinOutputPageSize()Lio/airlift/units/DataSize;
+#setFilterAndProjectMinOutputPageSize(Lio/airlift/units/DataSize;)Lio/trino/sql/analyzer/FeaturesConfig;
+#getFilterAndProjectMinOutputPageRowCount()I
+#setFilterAndProjectMinOutputPageRowCount(I)Lio/trino/sql/analyzer/FeaturesConfig;
+#isDistributedSortEnabled()Z
+#setDistributedSortEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getMaxRecursionDepth()I
+#setMaxRecursionDepth(I)Lio/trino/sql/analyzer/FeaturesConfig;
+#getMaxGroupingSets()I
+#setMaxGroupingSets(I)Lio/trino/sql/analyzer/FeaturesConfig;
+#isLateMaterializationEnabled()Z
+#setLateMaterializationEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isSkipRedundantSort()Z
+#setSkipRedundantSort(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isPredicatePushdownUseTableProperties()Z
+#setPredicatePushdownUseTableProperties(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isIgnoreDownstreamPreferences()Z
+#setIgnoreDownstreamPreferences(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isIterativeRuleBasedColumnPruning()Z
+#setIterativeRuleBasedColumnPruning(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isRewriteFilteringSemiJoinToInnerJoin()Z
+#setRewriteFilteringSemiJoinToInnerJoin(Z)Lio/trino/sql/analyzer/FeaturesConfig;
@352
+#isOptimizeTopNRanking()Z
+#setOptimizeTopNRanking(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isOptimizeDuplicateInsensitiveJoins()Z
+#setOptimizeDuplicateInsensitiveJoins(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isUseLegacyWindowFilterPushdown()Z
+#setUseLegacyWindowFilterPushdown(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isPlanWithTableNodePartitioning()Z
+#setPlanWithTableNodePartitioning(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getJoinPushdownMode()Lio/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode;
+#setJoinPushdownMode(Lio/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode;)Lio/trino/sql/analyzer/FeaturesConfig;
-#isOptimizeTopNRowNumber()Z
-#setOptimizeTopNRowNumber(Z)Lio/trino/sql/analyzer/FeaturesConfig;
@353
-#getJoinPushdownMode()Lio/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode;
-#setJoinPushdownMode(Lio/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode;)Lio/trino/sql/analyzer/FeaturesConfig;
@354
+#getPreferredWritePartitioningMinNumberOfPartitions()I
+#setPreferredWritePartitioningMinNumberOfPartitions(I)Lio/trino/sql/analyzer/FeaturesConfig;
@355
+#isUseTableScanNodePartitioning()Z
+#setUseTableScanNodePartitioning(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#getTableScanNodePartitioningMinBucketToTaskRatio()D
+#setTableScanNodePartitioningMinBucketToTaskRatio(D)Lio/trino/sql/analyzer/FeaturesConfig;
-#isPlanWithTableNodePartitioning()Z
-#setPlanWithTableNodePartitioning(Z)Lio/trino/sql/analyzer/FeaturesConfig;
@357
+#isLegacyRowToJsonCast()Z
+#setLegacyRowToJsonCast(Z)Lio/trino/sql/analyzer/FeaturesConfig;
+#isMergeProjectWithValues()Z
+#setMergeProjectWithValues(Z)Lio/trino/sql/analyzer/FeaturesConfig;
@358
+#isStatisticsPrecalculationForPushdownEnabled()Z
+#setStatisticsPrecalculationForPushdownEnabled(Z)Lio/trino/sql/analyzer/FeaturesConfig;
@362
+#isLegacyCatalogRoles()Z
+#setLegacyCatalogRoles(Z)Lio/trino/sql/analyzer/FeaturesConfig;
@364
+#isDisableSetPropertiesSecurityCheckForCreateDdl()Z
+#setDisableSetPropertiesSecurityCheckForCreateDdl(Z)Lio/trino/sql/analyzer/FeaturesConfig;
-#isUnwrapCasts()Z
-#setUnwrapCasts(Z)Lio/trino/sql/analyzer/FeaturesConfig;
@365
-###io/trino/sql/analyzer/FeaturesConfig

+###io/trino/sql/analyzer/RegexLibrary
@351
+#values()[Lio/trino/sql/analyzer/RegexLibrary;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/analyzer/RegexLibrary;

+###io/trino/sql/analyzer/Analysis
@351
+#<init>(Lio/trino/sql/tree/Statement;Ljava/util/Map;Z)V
+#getStatement()Lio/trino/sql/tree/Statement;
+#getUpdateType()Ljava/lang/String;
+#getTarget()Ljava/util/Optional;
+#setUpdateType(Ljava/lang/String;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;)V
+#resetUpdateType()V
+#isDeleteTarget(Lio/trino/sql/tree/Table;)Z
+#isSkipMaterializedViewRefresh()Z
+#setSkipMaterializedViewRefresh(Z)V
+#setAggregates(Lio/trino/sql/tree/QuerySpecification;Ljava/util/List;)V
+#getAggregates(Lio/trino/sql/tree/QuerySpecification;)Ljava/util/List;
+#setOrderByAggregates(Lio/trino/sql/tree/OrderBy;Ljava/util/List;)V
+#getOrderByAggregates(Lio/trino/sql/tree/OrderBy;)Ljava/util/List;
+#getTypes()Ljava/util/Map;
+#getType(Lio/trino/sql/tree/Expression;)Lio/trino/spi/type/Type;
+#getRelationCoercion(Lio/trino/sql/tree/Relation;)Ljava/util/List;
+#addRelationCoercion(Lio/trino/sql/tree/Relation;[Lio/trino/spi/type/Type;)V
+#getCoercions()Ljava/util/Map;
+#getTypeOnlyCoercions()Ljava/util/Set;
+#getCoercion(Lio/trino/sql/tree/Expression;)Lio/trino/spi/type/Type;
+#addLambdaArgumentReferences(Ljava/util/Map;)V
+#getLambdaArgumentReference(Lio/trino/sql/tree/Identifier;)Lio/trino/sql/tree/LambdaArgumentDeclaration;
+#getLambdaArgumentReferences()Ljava/util/Map;
+#setGroupingSets(Lio/trino/sql/tree/QuerySpecification;Lio/trino/sql/analyzer/Analysis$GroupingSetAnalysis;)V
+#isAggregation(Lio/trino/sql/tree/QuerySpecification;)Z
+#isTypeOnlyCoercion(Lio/trino/sql/tree/Expression;)Z
+#getGroupingSets(Lio/trino/sql/tree/QuerySpecification;)Lio/trino/sql/analyzer/Analysis$GroupingSetAnalysis;
+#setWhere(Lio/trino/sql/tree/Node;Lio/trino/sql/tree/Expression;)V
+#getWhere(Lio/trino/sql/tree/QuerySpecification;)Lio/trino/sql/tree/Expression;
+#setOrderByExpressions(Lio/trino/sql/tree/Node;Ljava/util/List;)V
+#getOrderByExpressions(Lio/trino/sql/tree/Node;)Ljava/util/List;
+#setOffset(Lio/trino/sql/tree/Offset;J)V
+#getOffset(Lio/trino/sql/tree/Offset;)J
+#setLimit(Lio/trino/sql/tree/Node;Ljava/util/OptionalLong;)V
+#setLimit(Lio/trino/sql/tree/Node;J)V
+#getLimit(Lio/trino/sql/tree/Node;)Ljava/util/OptionalLong;
+#setSelectAllResultFields(Lio/trino/sql/tree/AllColumns;Ljava/util/List;)V
+#getSelectAllResultFields(Lio/trino/sql/tree/AllColumns;)Ljava/util/List;
+#setSelectExpressions(Lio/trino/sql/tree/Node;Ljava/util/List;)V
+#getSelectExpressions(Lio/trino/sql/tree/Node;)Ljava/util/List;
+#setHaving(Lio/trino/sql/tree/QuerySpecification;Lio/trino/sql/tree/Expression;)V
+#setJoinCriteria(Lio/trino/sql/tree/Join;Lio/trino/sql/tree/Expression;)V
+#getJoinCriteria(Lio/trino/sql/tree/Join;)Lio/trino/sql/tree/Expression;
+#recordSubqueries(Lio/trino/sql/tree/Node;Lio/trino/sql/analyzer/ExpressionAnalysis;)V
+#getInPredicateSubqueries(Lio/trino/sql/tree/Node;)Ljava/util/List;
+#getScalarSubqueries(Lio/trino/sql/tree/Node;)Ljava/util/List;
+#getExistsSubqueries(Lio/trino/sql/tree/Node;)Ljava/util/List;
+#getQuantifiedComparisonSubqueries(Lio/trino/sql/tree/Node;)Ljava/util/List;
+#setWindowFunctions(Lio/trino/sql/tree/QuerySpecification;Ljava/util/List;)V
+#getWindowFunctions(Lio/trino/sql/tree/QuerySpecification;)Ljava/util/List;
+#setOrderByWindowFunctions(Lio/trino/sql/tree/OrderBy;Ljava/util/List;)V
+#getOrderByWindowFunctions(Lio/trino/sql/tree/OrderBy;)Ljava/util/List;
+#addColumnReferences(Ljava/util/Map;)V
+#getScope(Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/Scope;
+#tryGetScope(Lio/trino/sql/tree/Node;)Ljava/util/Optional;
+#getRootScope()Lio/trino/sql/analyzer/Scope;
+#setScope(Lio/trino/sql/tree/Node;Lio/trino/sql/analyzer/Scope;)V
+#getOutputDescriptor()Lio/trino/sql/analyzer/RelationType;
+#getOutputDescriptor(Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/RelationType;
+#getTableHandle(Lio/trino/sql/tree/Table;)Lio/trino/metadata/TableHandle;
+#getTables()Ljava/util/Collection;
+#registerTable(Lio/trino/sql/tree/Table;Ljava/util/Optional;Lio/trino/metadata/QualifiedObjectName;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Lio/trino/sql/analyzer/Scope;)V
+#getResolvedFunction(Lio/trino/sql/tree/FunctionCall;)Lio/trino/metadata/ResolvedFunction;
+#addResolvedFunction(Lio/trino/sql/tree/FunctionCall;Lio/trino/metadata/ResolvedFunction;Ljava/lang/String;)V
+#getColumnReferences()Ljava/util/Set;
+#getColumnReferenceFields()Ljava/util/Map;
+#getResolvedField(Lio/trino/sql/tree/Expression;)Lio/trino/sql/analyzer/ResolvedField;
+#isColumnReference(Lio/trino/sql/tree/Expression;)Z
+#addTypes(Ljava/util/Map;)V
+#addCoercion(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;Z)V
+#addCoercions(Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;)V
+#getSortKeyCoercionForFrameBoundCalculation(Lio/trino/sql/tree/Expression;)Lio/trino/spi/type/Type;
+#getSortKeyCoercionForFrameBoundComparison(Lio/trino/sql/tree/Expression;)Lio/trino/spi/type/Type;
+#addFrameBoundCalculations(Ljava/util/Map;)V
+#getFrameBoundCalculation(Lio/trino/sql/tree/Expression;)Lio/trino/metadata/ResolvedFunction;
+#getHaving(Lio/trino/sql/tree/QuerySpecification;)Lio/trino/sql/tree/Expression;
+#setColumn(Lio/trino/sql/analyzer/Field;Lio/trino/spi/connector/ColumnHandle;)V
+#getColumn(Lio/trino/sql/analyzer/Field;)Lio/trino/spi/connector/ColumnHandle;
+#getAnalyzeTarget()Ljava/util/Optional;
+#setAnalyzeTarget(Lio/trino/metadata/TableHandle;)V
+#setCreate(Lio/trino/sql/analyzer/Analysis$Create;)V
+#getCreate()Ljava/util/Optional;
+#setInsert(Lio/trino/sql/analyzer/Analysis$Insert;)V
+#getInsert()Ljava/util/Optional;
+#setRefreshMaterializedView(Lio/trino/sql/analyzer/Analysis$RefreshMaterializedViewAnalysis;)V
+#getRefreshMaterializedView()Ljava/util/Optional;
+#getNamedQuery(Lio/trino/sql/tree/Table;)Lio/trino/sql/tree/Query;
+#registerNamedQuery(Lio/trino/sql/tree/Table;Lio/trino/sql/tree/Query;)V
+#registerExpandableQuery(Lio/trino/sql/tree/Query;Lio/trino/sql/tree/Node;)V
+#isExpandableQuery(Lio/trino/sql/tree/Query;)Z
+#getRecursiveReference(Lio/trino/sql/tree/Query;)Lio/trino/sql/tree/Node;
+#setExpandableBaseScope(Lio/trino/sql/tree/Node;Lio/trino/sql/analyzer/Scope;)V
+#getExpandableBaseScope(Lio/trino/sql/tree/Node;)Ljava/util/Optional;
+#registerTableForView(Lio/trino/sql/tree/Table;)V
+#unregisterTableForView()V
+#hasTableInView(Lio/trino/sql/tree/Table;)Z
+#setSampleRatio(Lio/trino/sql/tree/SampledRelation;D)V
+#getSampleRatio(Lio/trino/sql/tree/SampledRelation;)D
+#setGroupingOperations(Lio/trino/sql/tree/QuerySpecification;Ljava/util/List;)V
+#getGroupingOperations(Lio/trino/sql/tree/QuerySpecification;)Ljava/util/List;
+#getParameters()Ljava/util/Map;
+#isDescribe()Z
+#setJoinUsing(Lio/trino/sql/tree/Join;Lio/trino/sql/analyzer/Analysis$JoinUsingAnalysis;)V
+#getJoinUsing(Lio/trino/sql/tree/Join;)Lio/trino/sql/analyzer/Analysis$JoinUsingAnalysis;
+#setUnnest(Lio/trino/sql/tree/Unnest;Lio/trino/sql/analyzer/Analysis$UnnestAnalysis;)V
+#getUnnest(Lio/trino/sql/tree/Unnest;)Lio/trino/sql/analyzer/Analysis$UnnestAnalysis;
+#addTableColumnReferences(Lio/trino/security/AccessControl;Lio/trino/spi/security/Identity;Lcom/google/common/collect/Multimap;)V
+#addEmptyColumnReferencesForTable(Lio/trino/security/AccessControl;Lio/trino/spi/security/Identity;Lio/trino/metadata/QualifiedObjectName;)V
+#addReferencedFields(Lcom/google/common/collect/Multimap;)V
+#getTableColumnReferences()Ljava/util/Map;
+#markRedundantOrderBy(Lio/trino/sql/tree/OrderBy;)V
+#isOrderByRedundant(Lio/trino/sql/tree/OrderBy;)Z
+#hasRowFilter(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)Z
+#registerTableForRowFiltering(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
+#unregisterTableForRowFiltering(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
+#addRowFilter(Lio/trino/sql/tree/Table;Lio/trino/sql/tree/Expression;)V
+#getRowFilters(Lio/trino/sql/tree/Table;)Ljava/util/List;
+#hasColumnMask(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Ljava/lang/String;)Z
+#registerTableForColumnMasking(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Ljava/lang/String;)V
+#unregisterTableForColumnMasking(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Ljava/lang/String;)V
+#addColumnMask(Lio/trino/sql/tree/Table;Ljava/lang/String;Lio/trino/sql/tree/Expression;)V
+#getColumnMasks(Lio/trino/sql/tree/Table;)Ljava/util/Map;
+#getReferencedTables()Ljava/util/List;
+#getRoutines()Ljava/util/List;
+#setRowIdField(Lio/trino/sql/tree/Table;Lio/trino/sql/tree/FieldReference;)V
+#getRowIdField(Lio/trino/sql/tree/Table;)Lio/trino/sql/tree/FieldReference;
+#getAccessControlScope(Lio/trino/sql/tree/Table;)Lio/trino/sql/analyzer/Scope;
+#setImplicitFromScope(Lio/trino/sql/tree/QuerySpecification;Lio/trino/sql/analyzer/Scope;)V
+#getImplicitFromScope(Lio/trino/sql/tree/QuerySpecification;)Lio/trino/sql/analyzer/Scope;
@352
+#addWindowDefinition(Lio/trino/sql/tree/QuerySpecification;Lio/trino/sql/analyzer/CanonicalizationAware;Lio/trino/sql/analyzer/Analysis$ResolvedWindow;)V
+#getWindowDefinition(Lio/trino/sql/tree/QuerySpecification;Lio/trino/sql/analyzer/CanonicalizationAware;)Lio/trino/sql/analyzer/Analysis$ResolvedWindow;
+#setWindow(Lio/trino/sql/tree/FunctionCall;Lio/trino/sql/analyzer/Analysis$ResolvedWindow;)V
+#getWindow(Lio/trino/sql/tree/FunctionCall;)Lio/trino/sql/analyzer/Analysis$ResolvedWindow;
+#setUpdatedColumns(Ljava/util/List;)V
+#getUpdatedColumns()Ljava/util/Optional;
@354
+#isUpdateTarget(Lio/trino/sql/tree/Table;)Z
-#isDeleteTarget(Lio/trino/sql/tree/Table;)Z
@355
+#setUpdateType(Ljava/lang/String;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;Ljava/util/Optional;)V
+#addSourceColumns(Lio/trino/sql/analyzer/Field;Ljava/util/Set;)V
+#getSourceColumns(Lio/trino/sql/analyzer/Field;)Ljava/util/Set;
+#addExpressionFields(Lio/trino/sql/tree/Expression;Ljava/util/Collection;)V
+#getExpressionSourceColumns(Lio/trino/sql/tree/Expression;)Ljava/util/Set;
-#setUpdateType(Ljava/lang/String;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;)V
-#addReferencedFields(Lcom/google/common/collect/Multimap;)V
@356
+#getSubqueries(Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/Analysis$SubqueryAnalysis;
+#addLabelDereferences(Ljava/util/Map;)V
+#getLabelDereference(Lio/trino/sql/tree/DereferenceExpression;)Lio/trino/sql/analyzer/ExpressionAnalyzer$LabelPrefixedReference;
+#addPatternRecognitionFunctions(Ljava/util/Set;)V
+#isPatternRecognitionFunction(Lio/trino/sql/tree/FunctionCall;)Z
+#setRange(Lio/trino/sql/tree/RangeQuantifier;Lio/trino/sql/analyzer/Analysis$Range;)V
+#getRange(Lio/trino/sql/tree/RangeQuantifier;)Lio/trino/sql/analyzer/Analysis$Range;
+#setUndefinedLabels(Lio/trino/sql/tree/PatternRecognitionRelation;Ljava/util/Set;)V
+#getUndefinedLabels(Lio/trino/sql/tree/PatternRecognitionRelation;)Ljava/util/Set;
-#getInPredicateSubqueries(Lio/trino/sql/tree/Node;)Ljava/util/List;
-#getScalarSubqueries(Lio/trino/sql/tree/Node;)Ljava/util/List;
-#getExistsSubqueries(Lio/trino/sql/tree/Node;)Ljava/util/List;
-#getQuantifiedComparisonSubqueries(Lio/trino/sql/tree/Node;)Ljava/util/List;
@357
+#addPredicateCoercions(Ljava/util/Map;)V
+#getPredicateCoercions(Lio/trino/sql/tree/Expression;)Lio/trino/sql/analyzer/Analysis$PredicateCoercions;
@359
+#setWindow(Lio/trino/sql/tree/Node;Lio/trino/sql/analyzer/Analysis$ResolvedWindow;)V
+#getWindow(Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/Analysis$ResolvedWindow;
+#setWindowMeasures(Lio/trino/sql/tree/QuerySpecification;Ljava/util/List;)V
+#getWindowMeasures(Lio/trino/sql/tree/QuerySpecification;)Ljava/util/List;
+#setOrderByWindowMeasures(Lio/trino/sql/tree/OrderBy;Ljava/util/List;)V
+#getOrderByWindowMeasures(Lio/trino/sql/tree/OrderBy;)Ljava/util/List;
+#registerTable(Lio/trino/sql/tree/Table;Ljava/util/Optional;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;Lio/trino/sql/analyzer/Scope;)V
+#setDelegatedRefreshMaterializedView(Lio/trino/metadata/QualifiedObjectName;)V
+#getDelegatedRefreshMaterializedView()Ljava/util/Optional;
+#setRanges(Ljava/util/Map;)V
+#setUndefinedLabels(Lio/trino/sql/tree/RowPattern;Ljava/util/Set;)V
+#setUndefinedLabels(Ljava/util/Map;)V
+#getUndefinedLabels(Lio/trino/sql/tree/RowPattern;)Ljava/util/Set;
+#setMeasureDefinitions(Ljava/util/Map;)V
+#getMeasureDefinition(Lio/trino/sql/tree/WindowOperation;)Lio/trino/sql/tree/MeasureDefinition;
-#setWindow(Lio/trino/sql/tree/FunctionCall;Lio/trino/sql/analyzer/Analysis$ResolvedWindow;)V
-#getWindow(Lio/trino/sql/tree/FunctionCall;)Lio/trino/sql/analyzer/Analysis$ResolvedWindow;
-#registerTable(Lio/trino/sql/tree/Table;Ljava/util/Optional;Lio/trino/metadata/QualifiedObjectName;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Lio/trino/sql/analyzer/Scope;)V
-#setRange(Lio/trino/sql/tree/RangeQuantifier;Lio/trino/sql/analyzer/Analysis$Range;)V
-#setUndefinedLabels(Lio/trino/sql/tree/PatternRecognitionRelation;Ljava/util/Set;)V
-#getUndefinedLabels(Lio/trino/sql/tree/PatternRecognitionRelation;)Ljava/util/Set;
@364
+#<init>(Lio/trino/sql/tree/Statement;Ljava/util/Map;Lio/trino/sql/analyzer/QueryType;)V
+#setUpdateType(Ljava/lang/String;)V
+#setUpdateTarget(Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;Ljava/util/Optional;)V
+#getQueryType()Lio/trino/sql/analyzer/QueryType;
+#setTableExecuteHandle(Lio/trino/metadata/TableExecuteHandle;)V
+#getTableExecuteHandle()Ljava/util/Optional;
-#<init>(Lio/trino/sql/tree/Statement;Ljava/util/Map;Z)V
-#setUpdateType(Ljava/lang/String;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Optional;Ljava/util/Optional;)V
-#resetUpdateType()V
@365
+#setPatternAggregations(Ljava/util/Set;)V
+#isPatternAggregation(Lio/trino/sql/tree/FunctionCall;)Z
@376
+#isTableExecuteReadsData()Z
+#setTableExecuteReadsData(Z)V
@377
+#getResolvedFunction(Lio/trino/sql/tree/Expression;)Lio/trino/metadata/ResolvedFunction;
+#addResolvedFunction(Lio/trino/sql/tree/Expression;Lio/trino/metadata/ResolvedFunction;Ljava/lang/String;)V
-#getResolvedFunction(Lio/trino/sql/tree/FunctionCall;)Lio/trino/metadata/ResolvedFunction;
-#addResolvedFunction(Lio/trino/sql/tree/FunctionCall;Lio/trino/metadata/ResolvedFunction;Ljava/lang/String;)V
@381
+#setTableFunctionAnalysis(Lio/trino/sql/tree/TableFunctionInvocation;Lio/trino/sql/analyzer/Analysis$TableFunctionInvocationAnalysis;)V
+#getTableFunctionAnalysis(Lio/trino/sql/tree/TableFunctionInvocation;)Lio/trino/sql/analyzer/Analysis$TableFunctionInvocationAnalysis;
@383
+#setJsonPathAnalyses(Ljava/util/Map;)V
+#getJsonPathAnalysis(Lio/trino/sql/tree/Expression;)Lio/trino/sql/analyzer/JsonPathAnalyzer$JsonPathAnalysis;
+#setJsonInputFunctions(Ljava/util/Map;)V
+#getJsonInputFunction(Lio/trino/sql/tree/Expression;)Lio/trino/metadata/ResolvedFunction;
+#setJsonOutputFunctions(Ljava/util/Map;)V
+#getJsonOutputFunction(Lio/trino/sql/tree/Expression;)Lio/trino/metadata/ResolvedFunction;
@386
+#getAnalyzeMetadata()Ljava/util/Optional;
+#setAnalyzeMetadata(Lio/trino/metadata/AnalyzeMetadata;)V
-#getAnalyzeTarget()Ljava/util/Optional;
-#setAnalyzeTarget(Lio/trino/metadata/TableHandle;)V
@393
+#getMergeAnalysis()Ljava/util/Optional;
+#setMergeAnalysis(Lio/trino/sql/analyzer/Analysis$MergeAnalysis;)V
@399
+#setRelationName(Lio/trino/sql/tree/Relation;Lio/trino/sql/tree/QualifiedName;)V
+#getRelationName(Lio/trino/sql/tree/Relation;)Lio/trino/sql/tree/QualifiedName;
@400
+#addAliased(Lio/trino/sql/tree/Relation;)V
+#isAliased(Lio/trino/sql/tree/Relation;)Z
+#addPolymorphicTableFunction(Lio/trino/sql/tree/TableFunctionInvocation;)V
+#isPolymorphicTableFunction(Lio/trino/sql/tree/TableFunctionInvocation;)Z
@406
+#addCheckConstraints(Lio/trino/sql/tree/Table;Lio/trino/sql/tree/Expression;)V
+#getCheckConstraints(Lio/trino/sql/tree/Table;)Ljava/util/List;

+###io/trino/sql/analyzer/Analysis$UnnestAnalysis
@351
+#<init>(Ljava/util/Map;Ljava/util/Optional;)V
+#getMappings()Ljava/util/Map;
+#getOrdinalityField()Ljava/util/Optional;

+###io/trino/sql/analyzer/FieldId
@351
+#from(Lio/trino/sql/analyzer/ResolvedField;)Lio/trino/sql/analyzer/FieldId;
+#<init>(Lio/trino/sql/analyzer/RelationId;I)V
+#getRelationId()Lio/trino/sql/analyzer/RelationId;
+#getFieldIndex()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/analyzer/SemanticExceptions
@351
+#missingAttributeException(Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/QualifiedName;)Lio/trino/spi/TrinoException;
+#ambiguousAttributeException(Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/QualifiedName;)Lio/trino/spi/TrinoException;
+#semanticException(Lio/trino/spi/ErrorCodeSupplier;Lio/trino/sql/tree/Node;Ljava/lang/String;[Ljava/lang/Object;)Lio/trino/spi/TrinoException;
+#semanticException(Lio/trino/spi/ErrorCodeSupplier;Lio/trino/sql/tree/Node;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/trino/spi/TrinoException;

+###io/trino/sql/analyzer/Scope$Builder
@351
+#<init>()V
+#withRelationType(Lio/trino/sql/analyzer/RelationId;Lio/trino/sql/analyzer/RelationType;)Lio/trino/sql/analyzer/Scope$Builder;
+#withParent(Lio/trino/sql/analyzer/Scope;)Lio/trino/sql/analyzer/Scope$Builder;
+#withOuterQueryParent(Lio/trino/sql/analyzer/Scope;)Lio/trino/sql/analyzer/Scope$Builder;
+#withNamedQuery(Ljava/lang/String;Lio/trino/sql/tree/WithQuery;)Lio/trino/sql/analyzer/Scope$Builder;
+#containsNamedQuery(Ljava/lang/String;)Z
+#build()Lio/trino/sql/analyzer/Scope;
@365
+#like(Lio/trino/sql/analyzer/Scope;)Lio/trino/sql/analyzer/Scope$Builder;

+###io/trino/sql/analyzer/Output
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#getSchema()Ljava/lang/String;
+#getTable()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@355
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)V
+#getColumns()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###io/trino/sql/analyzer/CanonicalizationAware
@351
+#canonicalizationAwareKey(Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/CanonicalizationAware;
+#getNode()Lio/trino/sql/tree/Node;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#canonicalizationAwareComparison(Lio/trino/sql/tree/Node;Lio/trino/sql/tree/Node;)Ljava/lang/Boolean;
+#canonicalizationAwareHash(Lio/trino/sql/tree/Node;)Ljava/util/OptionalInt;
+#canonicalize(Lio/trino/sql/tree/Identifier;)Ljava/lang/String;
@356
-#canonicalize(Lio/trino/sql/tree/Identifier;)Ljava/lang/String;

+###io/trino/sql/analyzer/ResolvedField
@351
+#<init>(Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Field;IIZ)V
+#getFieldId()Lio/trino/sql/analyzer/FieldId;
+#getType()Lio/trino/spi/type/Type;
+#getScope()Lio/trino/sql/analyzer/Scope;
+#isLocal()Z
+#getHierarchyFieldIndex()I
+#getRelationFieldIndex()I
+#getField()Lio/trino/sql/analyzer/Field;

+###io/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification
@351
+#values()[Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification;
@365
-###io/trino/sql/analyzer/FeaturesConfig$DataIntegrityVerification

+###io/trino/sql/analyzer/RelationType
@351
+#<init>([Lio/trino/sql/analyzer/Field;)V
+#<init>(Ljava/util/List;)V
+#indexOf(Lio/trino/sql/analyzer/Field;)I
+#getFieldByIndex(I)Lio/trino/sql/analyzer/Field;
+#getVisibleFields()Ljava/util/Collection;
+#getVisibleFieldCount()I
+#getAllFields()Ljava/util/Collection;
+#getAllFieldCount()I
+#resolveVisibleFieldsWithRelationPrefix(Ljava/util/Optional;)Ljava/util/List;
+#resolveFields(Lio/trino/sql/tree/QualifiedName;)Ljava/util/List;
+#canResolve(Lio/trino/sql/tree/QualifiedName;)Z
+#joinWith(Lio/trino/sql/analyzer/RelationType;)Lio/trino/sql/analyzer/RelationType;
+#withAlias(Ljava/lang/String;Ljava/util/List;)Lio/trino/sql/analyzer/RelationType;
+#withOnlyVisibleFields()Lio/trino/sql/analyzer/RelationType;
+#toString()Ljava/lang/String;

+###io/trino/sql/analyzer/Field
@351
+#newUnqualified(Ljava/lang/String;Lio/trino/spi/type/Type;)Lio/trino/sql/analyzer/Field;
+#newUnqualified(Ljava/util/Optional;Lio/trino/spi/type/Type;)Lio/trino/sql/analyzer/Field;
+#newUnqualified(Ljava/util/Optional;Lio/trino/spi/type/Type;Ljava/util/Optional;Ljava/util/Optional;Z)Lio/trino/sql/analyzer/Field;
+#newQualified(Lio/trino/sql/tree/QualifiedName;Ljava/util/Optional;Lio/trino/spi/type/Type;ZLjava/util/Optional;Ljava/util/Optional;Z)Lio/trino/sql/analyzer/Field;
+#<init>(Ljava/util/Optional;Ljava/util/Optional;Lio/trino/spi/type/Type;ZLjava/util/Optional;Ljava/util/Optional;Z)V
+#getOriginTable()Ljava/util/Optional;
+#getOriginColumnName()Ljava/util/Optional;
+#getRelationAlias()Ljava/util/Optional;
+#getName()Ljava/util/Optional;
+#getType()Lio/trino/spi/type/Type;
+#isHidden()Z
+#isAliased()Z
+#matchesPrefix(Ljava/util/Optional;)Z
+#canResolve(Lio/trino/sql/tree/QualifiedName;)Z
+#toString()Ljava/lang/String;

+###io/trino/sql/analyzer/FreeLambdaReferenceExtractor
@351
+#hasFreeReferencesToLambdaArgument(Lio/trino/sql/tree/Node;Lio/trino/sql/analyzer/Analysis;)Z
+#getFreeReferencesToLambdaArgument(Lio/trino/sql/tree/Node;Lio/trino/sql/analyzer/Analysis;)Ljava/util/List;

+###io/trino/sql/analyzer/Analyzer
@351
+#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Ljava/util/Optional;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/StatsCalculator;)V
+#analyze(Lio/trino/sql/tree/Statement;)Lio/trino/sql/analyzer/Analysis;
+#analyze(Lio/trino/sql/tree/Statement;Z)Lio/trino/sql/analyzer/Analysis;
@364
+#analyze(Lio/trino/sql/tree/Statement;Lio/trino/sql/analyzer/QueryType;)Lio/trino/sql/analyzer/Analysis;
-#analyze(Lio/trino/sql/tree/Statement;Z)Lio/trino/sql/analyzer/Analysis;
@365
-#<init>(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Ljava/util/Optional;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/StatsCalculator;)V

+###io/trino/sql/analyzer/ExpressionAnalysis
@351
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
+#getType(Lio/trino/sql/tree/Expression;)Lio/trino/spi/type/Type;
+#getExpressionTypes()Ljava/util/Map;
+#getCoercion(Lio/trino/sql/tree/Expression;)Lio/trino/spi/type/Type;
+#isTypeOnlyCoercion(Lio/trino/sql/tree/Expression;)Z
+#isColumnReference(Lio/trino/sql/tree/Expression;)Z
+#getSubqueryInPredicates()Ljava/util/Set;
+#getScalarSubqueries()Ljava/util/Set;
+#getExistsSubqueries()Ljava/util/Set;
+#getQuantifiedComparisons()Ljava/util/Set;
+#getWindowFunctions()Ljava/util/Set;
@356
+#getSubqueries()Ljava/util/Set;
-#getScalarSubqueries()Ljava/util/Set;

+###io/trino/sql/analyzer/Analysis$AccessControlInfo
@351
+#<init>(Lio/trino/security/AccessControl;Lio/trino/spi/security/Identity;)V
+#getAccessControl()Lio/trino/security/AccessControl;
+#getSecurityContext(Lio/trino/transaction/TransactionId;Lio/trino/spi/QueryId;)Lio/trino/security/SecurityContext;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/analyzer/Analysis$ResolvedWindow
@352
+#<init>(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;ZZZ)V
+#getPartitionBy()Ljava/util/List;
+#getOrderBy()Ljava/util/Optional;
+#getFrame()Ljava/util/Optional;
+#isPartitionByInherited()Z
+#isOrderByInherited()Z
+#isFrameInherited()Z

+###io/trino/sql/analyzer/RelationId
@351
+#of(Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/RelationId;
+#anonymous()Lio/trino/sql/analyzer/RelationId;
+#isAnonymous()Z
+#getSourceNode()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/analyzer/FeaturesConfig$JoinReorderingStrategy
@351
+#values()[Lio/trino/sql/analyzer/FeaturesConfig$JoinReorderingStrategy;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/analyzer/FeaturesConfig$JoinReorderingStrategy;
@365
-###io/trino/sql/analyzer/FeaturesConfig$JoinReorderingStrategy

+###io/trino/sql/analyzer/CorrelationSupport
@351
+#values()[Lio/trino/sql/analyzer/CorrelationSupport;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/analyzer/CorrelationSupport;

+###io/trino/sql/analyzer/TypeSignatureProvider
@351
+#<init>(Lio/trino/spi/type/TypeSignature;)V
+#<init>(Ljava/util/function/Function;)V
+#hasDependency()Z
+#getTypeSignature()Lio/trino/spi/type/TypeSignature;
+#getTypeSignature(Ljava/util/List;)Lio/trino/spi/type/TypeSignature;
+#fromTypes([Lio/trino/spi/type/Type;)Ljava/util/List;
+#fromTypes(Ljava/util/List;)Ljava/util/List;
+#fromTypeSignatures([Lio/trino/spi/type/TypeSignature;)Ljava/util/List;
+#fromTypeSignatures(Ljava/util/List;)Ljava/util/List;
+#toString()Ljava/lang/String;

+###io/trino/sql/analyzer/Analysis$SelectExpression
@351
+#<init>(Lio/trino/sql/tree/Expression;Ljava/util/Optional;)V
+#getExpression()Lio/trino/sql/tree/Expression;
+#getUnfoldedExpressions()Ljava/util/Optional;

+###io/trino/sql/analyzer/ExpressionAnalyzer
@351
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/function/Function;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;ZLio/trino/sql/analyzer/CorrelationSupport;)V
+#getResolvedFunctions()Ljava/util/Map;
+#getExpressionTypes()Ljava/util/Map;
+#setExpressionType(Lio/trino/sql/tree/Expression;Lio/trino/spi/type/Type;)Lio/trino/spi/type/Type;
+#getExpressionCoercions()Ljava/util/Map;
+#getTypeOnlyCoercions()Ljava/util/Set;
+#getSortKeyCoercionsForFrameBoundCalculation()Ljava/util/Map;
+#getSortKeyCoercionsForFrameBoundComparison()Ljava/util/Map;
+#getFrameBoundCalculations()Ljava/util/Map;
+#getSubqueryInPredicates()Ljava/util/Set;
+#getColumnReferences()Ljava/util/Map;
+#getLambdaArgumentReferences()Ljava/util/Map;
+#analyze(Lio/trino/sql/tree/Expression;Lio/trino/sql/analyzer/Scope;)Lio/trino/spi/type/Type;
+#getScalarSubqueries()Ljava/util/Set;
+#getExistsSubqueries()Ljava/util/Set;
+#getQuantifiedComparisons()Ljava/util/Set;
+#getWindowFunctions()Ljava/util/Set;
+#getTableColumnReferences()Lcom/google/common/collect/Multimap;
+#getReferencedFields()Lcom/google/common/collect/Multimap;
+#analyzeExpressions(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/planner/TypeProvider;Ljava/lang/Iterable;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalysis;
+#analyzeExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/tree/Expression;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;)Lio/trino/sql/analyzer/ExpressionAnalysis;
+#create(Lio/trino/sql/analyzer/Analysis;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#create(Lio/trino/sql/analyzer/Analysis;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#createConstantAnalyzer(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#createConstantAnalyzer(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#createWithoutSubqueries(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#createWithoutSubqueries(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Ljava/util/function/Function;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#isNumericType(Lio/trino/spi/type/Type;)Z
@352
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/function/Function;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;ZLio/trino/sql/analyzer/CorrelationSupport;Ljava/util/function/Function;Ljava/util/function/Function;)V
+#analyzeWindow(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;Lio/trino/sql/analyzer/Analysis$ResolvedWindow;Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/ExpressionAnalysis;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/function/Function;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;ZLio/trino/sql/analyzer/CorrelationSupport;)V
@355
+#getSourceFields()Ljava/util/List;
@356
+#getSubqueries()Ljava/util/Set;
+#getLabelDereferences()Ljava/util/Map;
+#getPatternRecognitionFunctions()Ljava/util/Set;
+#isPatternRecognitionFunction(Lio/trino/sql/tree/FunctionCall;)Z
+#analyzePatternRecognitionExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/tree/Expression;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Set;)Lio/trino/sql/analyzer/ExpressionAnalysis;
-#getScalarSubqueries()Ljava/util/Set;
@357
+#getPredicateCoercions()Ljava/util/Map;
@359
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/function/BiFunction;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;ZLjava/util/function/Function;Ljava/util/function/Function;)V
+#analyze(Lio/trino/sql/tree/Expression;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/CorrelationSupport;)Lio/trino/spi/type/Type;
+#getRanges()Ljava/util/Map;
+#getUndefinedLabels()Ljava/util/Map;
+#getMeasureDefinitions()Ljava/util/Map;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/function/Function;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;ZLio/trino/sql/analyzer/CorrelationSupport;Ljava/util/function/Function;Ljava/util/function/Function;)V
-#create(Lio/trino/sql/analyzer/Analysis;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;)Lio/trino/sql/analyzer/ExpressionAnalyzer;
@364
+#analyzeExpressions(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/planner/TypeProvider;Ljava/lang/Iterable;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/QueryType;)Lio/trino/sql/analyzer/ExpressionAnalysis;
-#analyzeExpressions(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/planner/TypeProvider;Ljava/lang/Iterable;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalysis;
@365
+#getPatternAggregations()Ljava/util/Set;
@367
+#analyzePatternRecognitionExpression(Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/analyzer/StatementAnalyzerFactory;Lio/trino/security/AccessControl;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/tree/Expression;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Set;)Lio/trino/sql/analyzer/ExpressionAnalysis;
+#analyzeExpressions(Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/analyzer/StatementAnalyzerFactory;Lio/trino/security/AccessControl;Lio/trino/sql/planner/TypeProvider;Ljava/lang/Iterable;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/QueryType;)Lio/trino/sql/analyzer/ExpressionAnalysis;
+#analyzeExpression(Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/analyzer/StatementAnalyzerFactory;Lio/trino/security/AccessControl;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/tree/Expression;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;)Lio/trino/sql/analyzer/ExpressionAnalysis;
+#analyzeWindow(Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/analyzer/StatementAnalyzerFactory;Lio/trino/security/AccessControl;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;Lio/trino/sql/analyzer/Analysis$ResolvedWindow;Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/ExpressionAnalysis;
+#createConstantAnalyzer(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#createConstantAnalyzer(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#createWithoutSubqueries(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
+#createWithoutSubqueries(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Ljava/util/function/Function;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/function/BiFunction;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;ZLjava/util/function/Function;Ljava/util/function/Function;)V
-#analyzePatternRecognitionExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/tree/Expression;Lio/trino/execution/warnings/WarningCollector;Ljava/util/Set;)Lio/trino/sql/analyzer/ExpressionAnalysis;
-#analyzeExpressions(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/planner/TypeProvider;Ljava/lang/Iterable;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/QueryType;)Lio/trino/sql/analyzer/ExpressionAnalysis;
-#analyzeExpression(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/sql/tree/Expression;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;)Lio/trino/sql/analyzer/ExpressionAnalysis;
-#analyzeWindow(Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Analysis;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;Lio/trino/sql/analyzer/Analysis$ResolvedWindow;Lio/trino/sql/tree/Node;)Lio/trino/sql/analyzer/ExpressionAnalysis;
-#create(Lio/trino/sql/analyzer/Analysis;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/analyzer/ExpressionAnalyzer;
-#createConstantAnalyzer(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/analyzer/ExpressionAnalyzer;
-#createConstantAnalyzer(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
-#createWithoutSubqueries(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/Session;Ljava/util/Map;Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
-#createWithoutSubqueries(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Ljava/util/function/Function;Lio/trino/execution/warnings/WarningCollector;Z)Lio/trino/sql/analyzer/ExpressionAnalyzer;
@377
-#getReferencedFields()Lcom/google/common/collect/Multimap;
@383
+#getJsonPathAnalyses()Ljava/util/Map;
+#getJsonInputFunctions()Ljava/util/Map;
+#getJsonOutputFunctions()Ljava/util/Map;
+#isStringType(Lio/trino/spi/type/Type;)Z
+#isCharacterStringType(Lio/trino/spi/type/Type;)Z

+###io/trino/sql/analyzer/ExpressionTreeUtils
@351
+#extractExpressions(Ljava/lang/Iterable;Ljava/lang/Class;)Ljava/util/List;
+#extractLocation(Lio/trino/sql/tree/Node;)Ljava/util/Optional;
+#asQualifiedName(Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/QualifiedName;

+###io/trino/sql/analyzer/QueryExplainer
@351
+#<init>(Lio/trino/sql/planner/PlanOptimizers;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Map;)V
+#<init>(Ljava/util/List;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Map;)V
+#analyze(Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/analyzer/Analysis;
+#getPlan(Lio/trino/Session;Lio/trino/sql/tree/Statement;Lio/trino/sql/tree/ExplainType$Type;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Ljava/lang/String;
+#getGraphvizPlan(Lio/trino/Session;Lio/trino/sql/tree/Statement;Lio/trino/sql/tree/ExplainType$Type;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Ljava/lang/String;
+#getJsonPlan(Lio/trino/Session;Lio/trino/sql/tree/Statement;Lio/trino/sql/tree/ExplainType$Type;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Ljava/lang/String;
+#getLogicalPlan(Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/planner/Plan;
@356
+#<init>(Lio/trino/sql/planner/PlanOptimizersFactory;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Map;)V
-#<init>(Lio/trino/sql/planner/PlanOptimizers;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Map;)V
@365
+#validate(Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)V
-#<init>(Lio/trino/sql/planner/PlanOptimizersFactory;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Map;)V
-#<init>(Ljava/util/List;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Ljava/util/Map;)V
-#analyze(Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/analyzer/Analysis;

+###io/trino/sql/analyzer/Analysis$Create
@351
+#<init>(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;ZZ)V
+#getDestination()Ljava/util/Optional;
+#getMetadata()Ljava/util/Optional;
+#getLayout()Ljava/util/Optional;
+#isCreateTableAsSelectWithData()Z
+#isCreateTableAsSelectNoOp()Z

+###io/trino/sql/analyzer/Analysis$Insert
@351
+#<init>(Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Optional;)V
+#getColumns()Ljava/util/List;
+#getTarget()Lio/trino/metadata/TableHandle;
+#getNewTableLayout()Ljava/util/Optional;
@365
+#<init>(Lio/trino/sql/tree/Table;Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Optional;)V
+#getTable()Lio/trino/sql/tree/Table;
-#<init>(Lio/trino/metadata/TableHandle;Ljava/util/List;Ljava/util/Optional;)V

+###io/trino/sql/analyzer/Analysis$JoinUsingAnalysis
@351
+#getLeftJoinFields()Ljava/util/List;
+#getRightJoinFields()Ljava/util/List;
+#getOtherLeftFields()Ljava/util/List;
+#getOtherRightFields()Ljava/util/List;

+###io/trino/sql/ExpressionUtils
@351
+#extractConjuncts(Lio/trino/sql/tree/Expression;)Ljava/util/List;
+#extractDisjuncts(Lio/trino/sql/tree/Expression;)Ljava/util/List;
+#extractPredicates(Lio/trino/sql/tree/LogicalBinaryExpression;)Ljava/util/List;
+#extractPredicates(Lio/trino/sql/tree/LogicalBinaryExpression$Operator;Lio/trino/sql/tree/Expression;)Ljava/util/List;
+#and([Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#and(Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
+#or([Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#or(Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
+#binaryExpression(Lio/trino/sql/tree/LogicalBinaryExpression$Operator;Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
+#combinePredicates(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/LogicalBinaryExpression$Operator;[Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#combinePredicates(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/LogicalBinaryExpression$Operator;Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
+#combineConjuncts(Lio/trino/metadata/Metadata;[Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#combineConjuncts(Lio/trino/metadata/Metadata;Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
+#combineConjunctsWithDuplicates(Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
+#combineDisjuncts(Lio/trino/metadata/Metadata;[Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#combineDisjuncts(Lio/trino/metadata/Metadata;Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
+#combineDisjunctsWithDefault(Lio/trino/metadata/Metadata;Ljava/util/Collection;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#filterDeterministicConjuncts(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#filterNonDeterministicConjuncts(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#filterConjuncts(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/Expression;Ljava/util/function/Predicate;)Lio/trino/sql/tree/Expression;
+#referencesAny(Lio/trino/sql/tree/Expression;Ljava/util/Collection;)Z
+#expressionOrNullSymbols([Ljava/util/function/Predicate;)Ljava/util/function/Function;
+#rewriteIdentifiersToSymbolReferences(Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
@357
-#referencesAny(Lio/trino/sql/tree/Expression;Ljava/util/Collection;)Z
@363
+#extractPredicates(Lio/trino/sql/tree/LogicalExpression;)Ljava/util/List;
+#extractPredicates(Lio/trino/sql/tree/LogicalExpression$Operator;Lio/trino/sql/tree/Expression;)Ljava/util/List;
+#logicalExpression(Lio/trino/sql/tree/LogicalExpression$Operator;Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
+#combinePredicates(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/LogicalExpression$Operator;[Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
+#combinePredicates(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/LogicalExpression$Operator;Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
-#extractPredicates(Lio/trino/sql/tree/LogicalBinaryExpression;)Ljava/util/List;
-#extractPredicates(Lio/trino/sql/tree/LogicalBinaryExpression$Operator;Lio/trino/sql/tree/Expression;)Ljava/util/List;
-#binaryExpression(Lio/trino/sql/tree/LogicalBinaryExpression$Operator;Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
-#combinePredicates(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/LogicalBinaryExpression$Operator;[Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
-#combinePredicates(Lio/trino/metadata/Metadata;Lio/trino/sql/tree/LogicalBinaryExpression$Operator;Ljava/util/Collection;)Lio/trino/sql/tree/Expression;
@370
+#isEffectivelyLiteral(Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/tree/Expression;)Z
+#getExpressionTypes(Lio/trino/sql/PlannerContext;Lio/trino/Session;Lio/trino/sql/tree/Expression;Lio/trino/sql/planner/TypeProvider;)Ljava/util/Map;[deprecated]

+###io/trino/sql/NodeUtils
@351
+#getSortItemsFromOrderBy(Ljava/util/Optional;)Ljava/util/List;
+#mapFromProperties(Ljava/util/List;)Ljava/util/Map;
@369
+#throwOnDefaultProperty(Ljava/util/Collection;Ljava/lang/String;)V
-#mapFromProperties(Ljava/util/List;)Ljava/util/Map;
@370
-#throwOnDefaultProperty(Ljava/util/Collection;Ljava/lang/String;)V

+###io/trino/sql/DynamicFilters$Descriptor
@351
+#<init>(Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/ComparisonExpression$Operator;Z)V
+#<init>(Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/sql/tree/Expression;Lio/trino/sql/tree/ComparisonExpression$Operator;)V
+#<init>(Lio/trino/sql/planner/plan/DynamicFilterId;Lio/trino/sql/tree/Expression;)V
+#getId()Lio/trino/sql/planner/plan/DynamicFilterId;
+#getInput()Lio/trino/sql/tree/Expression;
+#getOperator()Lio/trino/sql/tree/ComparisonExpression$Operator;
+#isNullAllowed()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#applyComparison(Lio/trino/spi/predicate/Domain;)Lio/trino/spi/predicate/Domain;

+###io/trino/FeaturesConfig$JoinDistributionType
@365
+#values()[Lio/trino/FeaturesConfig$JoinDistributionType;
+#valueOf(Ljava/lang/String;)Lio/trino/FeaturesConfig$JoinDistributionType;
+#canPartition()Z
+#canReplicate()Z
@373
-###io/trino/FeaturesConfig$JoinDistributionType

+###io/trino/FeaturesConfig
@365
+#<init>()V
+#getCpuCostWeight()D
+#setCpuCostWeight(D)Lio/trino/FeaturesConfig;
+#getMemoryCostWeight()D
+#setMemoryCostWeight(D)Lio/trino/FeaturesConfig;
+#getNetworkCostWeight()D
+#setNetworkCostWeight(D)Lio/trino/FeaturesConfig;
+#isDistributedIndexJoinsEnabled()Z
+#setDistributedIndexJoinsEnabled(Z)Lio/trino/FeaturesConfig;
+#isOmitDateTimeTypePrecision()Z
+#setOmitDateTimeTypePrecision(Z)Lio/trino/FeaturesConfig;
+#isLegacyRowToJsonCast()Z
+#setLegacyRowToJsonCast(Z)Lio/trino/FeaturesConfig;
+#getJoinDistributionType()Lio/trino/FeaturesConfig$JoinDistributionType;
+#setJoinDistributionType(Lio/trino/FeaturesConfig$JoinDistributionType;)Lio/trino/FeaturesConfig;
+#getJoinMaxBroadcastTableSize()Lio/airlift/units/DataSize;
+#setJoinMaxBroadcastTableSize(Lio/airlift/units/DataSize;)Lio/trino/FeaturesConfig;
+#isGroupedExecutionEnabled()Z
+#setGroupedExecutionEnabled(Z)Lio/trino/FeaturesConfig;
+#isDynamicScheduleForGroupedExecutionEnabled()Z
+#setDynamicScheduleForGroupedExecutionEnabled(Z)Lio/trino/FeaturesConfig;
+#getConcurrentLifespansPerTask()I
+#setConcurrentLifespansPerTask(I)Lio/trino/FeaturesConfig;
+#isColocatedJoinsEnabled()Z
+#setColocatedJoinsEnabled(Z)Lio/trino/FeaturesConfig;
+#isSpatialJoinsEnabled()Z
+#setSpatialJoinsEnabled(Z)Lio/trino/FeaturesConfig;
+#getJoinReorderingStrategy()Lio/trino/FeaturesConfig$JoinReorderingStrategy;
+#setJoinReorderingStrategy(Lio/trino/FeaturesConfig$JoinReorderingStrategy;)Lio/trino/FeaturesConfig;
+#getMaxReorderedJoins()I
+#setMaxReorderedJoins(I)Lio/trino/FeaturesConfig;
+#isRedistributeWrites()Z
+#setRedistributeWrites(Z)Lio/trino/FeaturesConfig;
+#isUsePreferredWritePartitioning()Z
+#setUsePreferredWritePartitioning(Z)Lio/trino/FeaturesConfig;
+#getPreferredWritePartitioningMinNumberOfPartitions()I
+#setPreferredWritePartitioningMinNumberOfPartitions(I)Lio/trino/FeaturesConfig;
+#isScaleWriters()Z
+#setScaleWriters(Z)Lio/trino/FeaturesConfig;
+#getWriterMinSize()Lio/airlift/units/DataSize;
+#setWriterMinSize(Lio/airlift/units/DataSize;)Lio/trino/FeaturesConfig;
+#isOptimizeMetadataQueries()Z
+#setOptimizeMetadataQueries(Z)Lio/trino/FeaturesConfig;
+#isUseMarkDistinct()Z
+#setUseMarkDistinct(Z)Lio/trino/FeaturesConfig;
+#isPreferPartialAggregation()Z
+#setPreferPartialAggregation(Z)Lio/trino/FeaturesConfig;
+#isOptimizeTopNRanking()Z
+#setOptimizeTopNRanking(Z)Lio/trino/FeaturesConfig;
+#isOptimizeHashGeneration()Z
+#setOptimizeHashGeneration(Z)Lio/trino/FeaturesConfig;
+#isPushTableWriteThroughUnion()Z
+#setPushTableWriteThroughUnion(Z)Lio/trino/FeaturesConfig;
+#isDictionaryAggregation()Z
+#setDictionaryAggregation(Z)Lio/trino/FeaturesConfig;
+#getRe2JDfaStatesLimit()I
+#setRe2JDfaStatesLimit(I)Lio/trino/FeaturesConfig;
+#getRe2JDfaRetries()I
+#setRe2JDfaRetries(I)Lio/trino/FeaturesConfig;
+#getRegexLibrary()Lio/trino/sql/analyzer/RegexLibrary;
+#setRegexLibrary(Lio/trino/sql/analyzer/RegexLibrary;)Lio/trino/FeaturesConfig;
+#isSpillEnabled()Z
+#setSpillEnabled(Z)Lio/trino/FeaturesConfig;
+#isSpillOrderBy()Z
+#setSpillOrderBy(Z)Lio/trino/FeaturesConfig;
+#isSpillWindowOperator()Z
+#setSpillWindowOperator(Z)Lio/trino/FeaturesConfig;
+#setSpillDistinctingAggregationsEnabled(Z)Lio/trino/FeaturesConfig;
+#isSpillDistinctingAggregationsEnabled()Z
+#setSpillOrderingAggregationsEnabled(Z)Lio/trino/FeaturesConfig;
+#isSpillOrderingAggregationsEnabled()Z
+#getIterativeOptimizerTimeout()Lio/airlift/units/Duration;
+#setIterativeOptimizerTimeout(Lio/airlift/units/Duration;)Lio/trino/FeaturesConfig;
+#isEnableStatsCalculator()Z
+#setEnableStatsCalculator(Z)Lio/trino/FeaturesConfig;
+#isStatisticsPrecalculationForPushdownEnabled()Z
+#setStatisticsPrecalculationForPushdownEnabled(Z)Lio/trino/FeaturesConfig;
+#isCollectPlanStatisticsForAllQueries()Z
+#setCollectPlanStatisticsForAllQueries(Z)Lio/trino/FeaturesConfig;
+#isIgnoreStatsCalculatorFailures()Z
+#setIgnoreStatsCalculatorFailures(Z)Lio/trino/FeaturesConfig;
+#setDefaultFilterFactorEnabled(Z)Lio/trino/FeaturesConfig;
+#isDefaultFilterFactorEnabled()Z
+#isEnableForcedExchangeBelowGroupId()Z
+#setEnableForcedExchangeBelowGroupId(Z)Lio/trino/FeaturesConfig;
+#getAggregationOperatorUnspillMemoryLimit()Lio/airlift/units/DataSize;
+#setAggregationOperatorUnspillMemoryLimit(Lio/airlift/units/DataSize;)Lio/trino/FeaturesConfig;
+#getSpillerSpillPaths()Ljava/util/List;
+#setSpillerSpillPaths(Ljava/lang/String;)Lio/trino/FeaturesConfig;
+#getSpillerThreads()I
+#setSpillerThreads(I)Lio/trino/FeaturesConfig;
+#getMemoryRevokingThreshold()D
+#setMemoryRevokingThreshold(D)Lio/trino/FeaturesConfig;
+#getMemoryRevokingTarget()D
+#setMemoryRevokingTarget(D)Lio/trino/FeaturesConfig;
+#getSpillMaxUsedSpaceThreshold()D
+#setSpillMaxUsedSpaceThreshold(D)Lio/trino/FeaturesConfig;
+#isOptimizeMixedDistinctAggregations()Z
+#setOptimizeMixedDistinctAggregations(Z)Lio/trino/FeaturesConfig;
+#isExchangeCompressionEnabled()Z
+#setExchangeCompressionEnabled(Z)Lio/trino/FeaturesConfig;
+#getExchangeDataIntegrityVerification()Lio/trino/FeaturesConfig$DataIntegrityVerification;
+#setExchangeDataIntegrityVerification(Lio/trino/FeaturesConfig$DataIntegrityVerification;)Lio/trino/FeaturesConfig;
+#isEnableIntermediateAggregations()Z
+#setEnableIntermediateAggregations(Z)Lio/trino/FeaturesConfig;
+#isPushAggregationThroughOuterJoin()Z
+#setPushAggregationThroughOuterJoin(Z)Lio/trino/FeaturesConfig;
+#isPushPartialAggregationThoughJoin()Z
+#setPushPartialAggregationThoughJoin(Z)Lio/trino/FeaturesConfig;
+#isParseDecimalLiteralsAsDouble()Z
+#setParseDecimalLiteralsAsDouble(Z)Lio/trino/FeaturesConfig;
+#isForceSingleNodeOutput()Z
+#setForceSingleNodeOutput(Z)Lio/trino/FeaturesConfig;
+#isPagesIndexEagerCompactionEnabled()Z
+#setPagesIndexEagerCompactionEnabled(Z)Lio/trino/FeaturesConfig;
+#getFilterAndProjectMinOutputPageSize()Lio/airlift/units/DataSize;
+#setFilterAndProjectMinOutputPageSize(Lio/airlift/units/DataSize;)Lio/trino/FeaturesConfig;
+#getFilterAndProjectMinOutputPageRowCount()I
+#setFilterAndProjectMinOutputPageRowCount(I)Lio/trino/FeaturesConfig;
+#isDistributedSortEnabled()Z
+#setDistributedSortEnabled(Z)Lio/trino/FeaturesConfig;
+#getMaxRecursionDepth()I
+#setMaxRecursionDepth(I)Lio/trino/FeaturesConfig;
+#getMaxGroupingSets()I
+#setMaxGroupingSets(I)Lio/trino/FeaturesConfig;
+#isLateMaterializationEnabled()Z
+#setLateMaterializationEnabled(Z)Lio/trino/FeaturesConfig;
+#isSkipRedundantSort()Z
+#setSkipRedundantSort(Z)Lio/trino/FeaturesConfig;
+#isPredicatePushdownUseTableProperties()Z
+#setPredicatePushdownUseTableProperties(Z)Lio/trino/FeaturesConfig;
+#isIgnoreDownstreamPreferences()Z
+#setIgnoreDownstreamPreferences(Z)Lio/trino/FeaturesConfig;
+#isRewriteFilteringSemiJoinToInnerJoin()Z
+#setRewriteFilteringSemiJoinToInnerJoin(Z)Lio/trino/FeaturesConfig;
+#isOptimizeDuplicateInsensitiveJoins()Z
+#setOptimizeDuplicateInsensitiveJoins(Z)Lio/trino/FeaturesConfig;
+#isUseLegacyWindowFilterPushdown()Z
+#setUseLegacyWindowFilterPushdown(Z)Lio/trino/FeaturesConfig;
+#isUseTableScanNodePartitioning()Z
+#setUseTableScanNodePartitioning(Z)Lio/trino/FeaturesConfig;
+#getTableScanNodePartitioningMinBucketToTaskRatio()D
+#setTableScanNodePartitioningMinBucketToTaskRatio(D)Lio/trino/FeaturesConfig;
+#isMergeProjectWithValues()Z
+#setMergeProjectWithValues(Z)Lio/trino/FeaturesConfig;
+#isLegacyCatalogRoles()Z
+#setLegacyCatalogRoles(Z)Lio/trino/FeaturesConfig;
+#isDisableSetPropertiesSecurityCheckForCreateDdl()Z
+#setDisableSetPropertiesSecurityCheckForCreateDdl(Z)Lio/trino/FeaturesConfig;
+#isIncrementalHashArrayLoadFactorEnabled()Z[deprecated]
+#setIncrementalHashArrayLoadFactorEnabled(Z)Lio/trino/FeaturesConfig;[deprecated]
@366
+#getRetryPolicy()Lio/trino/operator/RetryPolicy;
+#setRetryPolicy(Lio/trino/operator/RetryPolicy;)Lio/trino/FeaturesConfig;
+#getRetryAttempts()I
+#setRetryAttempts(I)Lio/trino/FeaturesConfig;
+#getRetryInitialDelay()Lio/airlift/units/Duration;
+#setRetryInitialDelay(Lio/airlift/units/Duration;)Lio/trino/FeaturesConfig;
+#getRetryMaxDelay()Lio/airlift/units/Duration;
+#setRetryMaxDelay(Lio/airlift/units/Duration;)Lio/trino/FeaturesConfig;
-#setSpillDistinctingAggregationsEnabled(Z)Lio/trino/FeaturesConfig;
-#isSpillDistinctingAggregationsEnabled()Z
-#setSpillOrderingAggregationsEnabled(Z)Lio/trino/FeaturesConfig;
-#isSpillOrderingAggregationsEnabled()Z
@367
+#isHideInaccesibleColumns()Z
+#setHideInaccesibleColumns(Z)Lio/trino/FeaturesConfig;
+#isAllowSetViewAuthorization()Z
+#setAllowSetViewAuthorization(Z)Lio/trino/FeaturesConfig;
-#getRetryPolicy()Lio/trino/operator/RetryPolicy;
-#setRetryPolicy(Lio/trino/operator/RetryPolicy;)Lio/trino/FeaturesConfig;
-#getRetryAttempts()I
-#setRetryAttempts(I)Lio/trino/FeaturesConfig;
-#getRetryInitialDelay()Lio/airlift/units/Duration;
-#setRetryInitialDelay(Lio/airlift/units/Duration;)Lio/trino/FeaturesConfig;
-#getRetryMaxDelay()Lio/airlift/units/Duration;
-#setRetryMaxDelay(Lio/airlift/units/Duration;)Lio/trino/FeaturesConfig;
@369
-#isSpillOrderBy()Z
-#setSpillOrderBy(Z)Lio/trino/FeaturesConfig;
-#isSpillWindowOperator()Z
-#setSpillWindowOperator(Z)Lio/trino/FeaturesConfig;
@371
+#isHideInaccessibleColumns()Z
+#setHideInaccessibleColumns(Z)Lio/trino/FeaturesConfig;
-#isDisableSetPropertiesSecurityCheckForCreateDdl()Z
-#setDisableSetPropertiesSecurityCheckForCreateDdl(Z)Lio/trino/FeaturesConfig;
-#isHideInaccesibleColumns()Z
-#setHideInaccesibleColumns(Z)Lio/trino/FeaturesConfig;
@372
+#isComplexExpressionPushdownEnabled()Z
+#setComplexExpressionPushdownEnabled(Z)Lio/trino/FeaturesConfig;
@373
-#getCpuCostWeight()D
-#setCpuCostWeight(D)Lio/trino/FeaturesConfig;
-#getMemoryCostWeight()D
-#setMemoryCostWeight(D)Lio/trino/FeaturesConfig;
-#getNetworkCostWeight()D
-#setNetworkCostWeight(D)Lio/trino/FeaturesConfig;
-#isDistributedIndexJoinsEnabled()Z
-#setDistributedIndexJoinsEnabled(Z)Lio/trino/FeaturesConfig;
-#getJoinDistributionType()Lio/trino/FeaturesConfig$JoinDistributionType;
-#setJoinDistributionType(Lio/trino/FeaturesConfig$JoinDistributionType;)Lio/trino/FeaturesConfig;
-#getJoinMaxBroadcastTableSize()Lio/airlift/units/DataSize;
-#setJoinMaxBroadcastTableSize(Lio/airlift/units/DataSize;)Lio/trino/FeaturesConfig;
-#isColocatedJoinsEnabled()Z
-#setColocatedJoinsEnabled(Z)Lio/trino/FeaturesConfig;
-#isSpatialJoinsEnabled()Z
-#setSpatialJoinsEnabled(Z)Lio/trino/FeaturesConfig;
-#getJoinReorderingStrategy()Lio/trino/FeaturesConfig$JoinReorderingStrategy;
-#setJoinReorderingStrategy(Lio/trino/FeaturesConfig$JoinReorderingStrategy;)Lio/trino/FeaturesConfig;
-#getMaxReorderedJoins()I
-#setMaxReorderedJoins(I)Lio/trino/FeaturesConfig;
-#isUsePreferredWritePartitioning()Z
-#setUsePreferredWritePartitioning(Z)Lio/trino/FeaturesConfig;
-#getPreferredWritePartitioningMinNumberOfPartitions()I
-#setPreferredWritePartitioningMinNumberOfPartitions(I)Lio/trino/FeaturesConfig;
-#isOptimizeMetadataQueries()Z
-#setOptimizeMetadataQueries(Z)Lio/trino/FeaturesConfig;
-#isUseMarkDistinct()Z
-#setUseMarkDistinct(Z)Lio/trino/FeaturesConfig;
-#isPreferPartialAggregation()Z
-#setPreferPartialAggregation(Z)Lio/trino/FeaturesConfig;
-#isOptimizeTopNRanking()Z
-#setOptimizeTopNRanking(Z)Lio/trino/FeaturesConfig;
-#isOptimizeHashGeneration()Z
-#setOptimizeHashGeneration(Z)Lio/trino/FeaturesConfig;
-#isPushTableWriteThroughUnion()Z
-#setPushTableWriteThroughUnion(Z)Lio/trino/FeaturesConfig;
-#isDictionaryAggregation()Z
-#setDictionaryAggregation(Z)Lio/trino/FeaturesConfig;
-#getIterativeOptimizerTimeout()Lio/airlift/units/Duration;
-#setIterativeOptimizerTimeout(Lio/airlift/units/Duration;)Lio/trino/FeaturesConfig;
-#isEnableStatsCalculator()Z
-#setEnableStatsCalculator(Z)Lio/trino/FeaturesConfig;
-#isStatisticsPrecalculationForPushdownEnabled()Z
-#setStatisticsPrecalculationForPushdownEnabled(Z)Lio/trino/FeaturesConfig;
-#isCollectPlanStatisticsForAllQueries()Z
-#setCollectPlanStatisticsForAllQueries(Z)Lio/trino/FeaturesConfig;
-#isIgnoreStatsCalculatorFailures()Z
-#setIgnoreStatsCalculatorFailures(Z)Lio/trino/FeaturesConfig;
-#setDefaultFilterFactorEnabled(Z)Lio/trino/FeaturesConfig;
-#isDefaultFilterFactorEnabled()Z
-#isEnableForcedExchangeBelowGroupId()Z
-#setEnableForcedExchangeBelowGroupId(Z)Lio/trino/FeaturesConfig;
-#isOptimizeMixedDistinctAggregations()Z
-#setOptimizeMixedDistinctAggregations(Z)Lio/trino/FeaturesConfig;
-#isEnableIntermediateAggregations()Z
-#setEnableIntermediateAggregations(Z)Lio/trino/FeaturesConfig;
-#isPushAggregationThroughOuterJoin()Z
-#setPushAggregationThroughOuterJoin(Z)Lio/trino/FeaturesConfig;
-#isPushPartialAggregationThoughJoin()Z
-#setPushPartialAggregationThoughJoin(Z)Lio/trino/FeaturesConfig;
-#isForceSingleNodeOutput()Z
-#setForceSingleNodeOutput(Z)Lio/trino/FeaturesConfig;
-#isDistributedSortEnabled()Z
-#setDistributedSortEnabled(Z)Lio/trino/FeaturesConfig;
-#isSkipRedundantSort()Z
-#setSkipRedundantSort(Z)Lio/trino/FeaturesConfig;
-#isComplexExpressionPushdownEnabled()Z
-#setComplexExpressionPushdownEnabled(Z)Lio/trino/FeaturesConfig;
-#isPredicatePushdownUseTableProperties()Z
-#setPredicatePushdownUseTableProperties(Z)Lio/trino/FeaturesConfig;
-#isIgnoreDownstreamPreferences()Z
-#setIgnoreDownstreamPreferences(Z)Lio/trino/FeaturesConfig;
-#isRewriteFilteringSemiJoinToInnerJoin()Z
-#setRewriteFilteringSemiJoinToInnerJoin(Z)Lio/trino/FeaturesConfig;
-#isOptimizeDuplicateInsensitiveJoins()Z
-#setOptimizeDuplicateInsensitiveJoins(Z)Lio/trino/FeaturesConfig;
-#isUseLegacyWindowFilterPushdown()Z
-#setUseLegacyWindowFilterPushdown(Z)Lio/trino/FeaturesConfig;
-#isUseTableScanNodePartitioning()Z
-#setUseTableScanNodePartitioning(Z)Lio/trino/FeaturesConfig;
-#getTableScanNodePartitioningMinBucketToTaskRatio()D
-#setTableScanNodePartitioningMinBucketToTaskRatio(D)Lio/trino/FeaturesConfig;
-#isMergeProjectWithValues()Z
-#setMergeProjectWithValues(Z)Lio/trino/FeaturesConfig;
@388
-#isGroupedExecutionEnabled()Z
-#setGroupedExecutionEnabled(Z)Lio/trino/FeaturesConfig;
-#isDynamicScheduleForGroupedExecutionEnabled()Z
-#setDynamicScheduleForGroupedExecutionEnabled(Z)Lio/trino/FeaturesConfig;
-#getConcurrentLifespansPerTask()I
-#setConcurrentLifespansPerTask(I)Lio/trino/FeaturesConfig;
@389
+#isForceSpillingJoin()Z
+#setForceSpillingJoin(Z)Lio/trino/FeaturesConfig;
@399
-#isLegacyRowToJsonCast()Z
-#setLegacyRowToJsonCast(Z)Lio/trino/FeaturesConfig;
@403
+#isFaultTolerantExecutionExchangeEncryptionEnabled()Z
+#setFaultTolerantExecutionExchangeEncryptionEnabled(Z)Lio/trino/FeaturesConfig;
+#applyFaultTolerantExecutionDefaults()V
@405
+#isLegacyUpdateDeleteImplementation()Z[deprecated]
+#setLegacyUpdateDeleteImplementation(Z)Lio/trino/FeaturesConfig;[deprecated]
@406
-#isLegacyUpdateDeleteImplementation()Z[deprecated]
-#setLegacyUpdateDeleteImplementation(Z)Lio/trino/FeaturesConfig;[deprecated]

+###io/trino/util/Executors
@364
+#executeUntilFailure(Ljava/util/concurrent/Executor;Ljava/util/Collection;)V

+###io/trino/util/FastutilSetHelper$ObjectStrategy$ObjectHashCode
@361
+#hashCode(Ljava/lang/Object;)J

+###io/trino/util/FastutilSetHelper$LongStrategy$LongHashCode
@361
+#hashCode(J)J

+###io/trino/util/FastutilSetHelper$LongStrategy$LongEquals
@361
+#equals(JJ)Ljava/lang/Boolean;

+###io/trino/util/SingleAccessMethodCompiler
@361
+#compileSingleAccessMethod(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;)Ljava/lang/Object;

+###io/trino/util/FastutilSetHelper$DoubleStrategy$DoubleEquals
@361
+#equals(DD)Ljava/lang/Boolean;

+###io/trino/util/FastutilSetHelper$DoubleStrategy$DoubleHashCode
@361
+#hashCode(D)J

+###io/trino/util/FastutilSetHelper$ObjectStrategy$ObjectEquals
@361
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;

+###io/trino/util/MachineInfo
@365
+#getAvailablePhysicalProcessorCount()I

+###io/trino/security/DefaultSystemAccessControlName
@362

+###io/trino/SystemSessionPropertiesProvider
@360
+#getSessionProperties()Ljava/util/List;

+###io/trino/cost/StatsCalculatorModule$StatsRulesProvider
@358
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/FilterStatsCalculator;Lio/trino/cost/StatsNormalizer;)V
+#get()Ljava/util/List;
+#get()Ljava/lang/Object;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/FilterStatsCalculator;Lio/trino/cost/StatsNormalizer;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/FilterStatsCalculator;Lio/trino/cost/StatsNormalizer;)V

+###io/trino/cost/SampleStatsRule
@358
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/FeaturesConfig$DataIntegrityVerification
@365
+#values()[Lio/trino/FeaturesConfig$DataIntegrityVerification;
+#valueOf(Ljava/lang/String;)Lio/trino/FeaturesConfig$DataIntegrityVerification;

+###io/trino/server/ui/TrimmedBasicQueryInfo
@364
+#<init>(Lio/trino/server/BasicQueryInfo;)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getSessionUser()Ljava/lang/String;
+#getSessionPrincipal()Ljava/util/Optional;
+#getSessionSource()Ljava/util/Optional;
+#getResourceGroupId()Ljava/util/Optional;
+#getState()Lio/trino/execution/QueryState;
+#getMemoryPool()Lio/trino/spi/memory/MemoryPoolId;
+#isScheduled()Z
+#getSelf()Ljava/net/URI;
+#getQueryTextPreview()Ljava/lang/String;
+#getUpdateType()Ljava/util/Optional;
+#getPreparedQuery()Ljava/util/Optional;
+#getQueryStats()Lio/trino/server/BasicQueryStats;
+#getErrorType()Ljava/util/Optional;
+#getErrorCode()Ljava/util/Optional;
+#getQueryType()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@372
-#getMemoryPool()Lio/trino/spi/memory/MemoryPoolId;
@379
+#getRetryPolicy()Lio/trino/operator/RetryPolicy;

+###io/trino/server/security/HeaderAuthenticator
@363
+#<init>(Lio/trino/server/security/HeaderAuthenticatorConfig;Lio/trino/server/security/HeaderAuthenticatorManager;)V
+#authenticate(Ljavax/ws/rs/container/ContainerRequestContext;)Lio/trino/spi/security/Identity;

+###io/trino/server/security/oauth2/OAuth2TokenHandler
@361
+#setAccessToken(Ljava/lang/String;Ljava/lang/String;)V
+#setTokenExchangeError(Ljava/lang/String;Ljava/lang/String;)V

+###io/trino/server/security/oauth2/ScribeHttpClient
@359
+#<init>(Lio/airlift/http/client/HttpClient;)V
+#executeAsync(Ljava/lang/String;Ljava/util/Map;Lcom/github/scribejava/core/model/Verb;Ljava/lang/String;[BLcom/github/scribejava/core/model/OAuthAsyncRequestCallback;Lcom/github/scribejava/core/model/OAuthRequest$ResponseConverter;)Ljava/util/concurrent/Future;
+#executeAsync(Ljava/lang/String;Ljava/util/Map;Lcom/github/scribejava/core/model/Verb;Ljava/lang/String;Lcom/github/scribejava/core/httpclient/multipart/MultipartPayload;Lcom/github/scribejava/core/model/OAuthAsyncRequestCallback;Lcom/github/scribejava/core/model/OAuthRequest$ResponseConverter;)Ljava/util/concurrent/Future;
+#executeAsync(Ljava/lang/String;Ljava/util/Map;Lcom/github/scribejava/core/model/Verb;Ljava/lang/String;Ljava/lang/String;Lcom/github/scribejava/core/model/OAuthAsyncRequestCallback;Lcom/github/scribejava/core/model/OAuthRequest$ResponseConverter;)Ljava/util/concurrent/Future;
+#executeAsync(Ljava/lang/String;Ljava/util/Map;Lcom/github/scribejava/core/model/Verb;Ljava/lang/String;Ljava/io/File;Lcom/github/scribejava/core/model/OAuthAsyncRequestCallback;Lcom/github/scribejava/core/model/OAuthRequest$ResponseConverter;)Ljava/util/concurrent/Future;
+#execute(Ljava/lang/String;Ljava/util/Map;Lcom/github/scribejava/core/model/Verb;Ljava/lang/String;[B)Lcom/github/scribejava/core/model/Response;
+#execute(Ljava/lang/String;Ljava/util/Map;Lcom/github/scribejava/core/model/Verb;Ljava/lang/String;Lcom/github/scribejava/core/httpclient/multipart/MultipartPayload;)Lcom/github/scribejava/core/model/Response;
+#execute(Ljava/lang/String;Ljava/util/Map;Lcom/github/scribejava/core/model/Verb;Ljava/lang/String;Ljava/lang/String;)Lcom/github/scribejava/core/model/Response;
+#execute(Ljava/lang/String;Ljava/util/Map;Lcom/github/scribejava/core/model/Verb;Ljava/lang/String;Ljava/io/File;)Lcom/github/scribejava/core/model/Response;
+#close()V
@381
-###io/trino/server/security/oauth2/ScribeHttpClient

+###io/trino/server/security/oauth2/OAuth2Client$OAuth2Response
@361
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#getAccessToken()Ljava/lang/String;
+#getValidUntil()Ljava/util/Optional;
+#getIdToken()Ljava/util/Optional;
@381
-###io/trino/server/security/oauth2/OAuth2Client$OAuth2Response

+###io/trino/server/security/HeaderAuthenticatorConfig
@363
+#<init>()V
+#setUserMappingPattern(Ljava/lang/String;)Lio/trino/server/security/HeaderAuthenticatorConfig;
+#getUserMappingPattern()Ljava/util/Optional;
+#setUserMappingFile(Ljava/io/File;)Lio/trino/server/security/HeaderAuthenticatorConfig;
+#getUserMappingFile()Ljava/util/Optional;
+#setHeaderAuthenticatorFiles(Ljava/util/List;)Lio/trino/server/security/HeaderAuthenticatorConfig;
+#getHeaderAuthenticatorFiles()Ljava/util/List;

+###io/trino/server/security/HeaderAuthenticatorManager
@363
+#<init>(Lio/trino/server/security/HeaderAuthenticatorConfig;)V
+#getAuthenticators()Ljava/util/List;
+#addHeaderAuthenticatorFactory(Lio/trino/spi/security/HeaderAuthenticatorFactory;)V
+#loadHeaderAuthenticator()V
+#setRequired()V
+#isLoaded()Z

+###io/trino/server/HttpRequestSessionContextFactory
@362
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;)V
+#createSessionContext(Ljavax/ws/rs/core/MultivaluedMap;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/server/SessionContext;
+#extractAuthorizedIdentity(Ljavax/servlet/http/HttpServletRequest;Ljavax/ws/rs/core/HttpHeaders;Ljava/util/Optional;)Lio/trino/spi/security/Identity;
+#extractAuthorizedIdentity(Ljava/util/Optional;Ljavax/ws/rs/core/MultivaluedMap;Ljava/util/Optional;)Lio/trino/spi/security/Identity;
+#addEnabledRoles(Lio/trino/spi/security/Identity;Lio/trino/spi/security/SelectedRole;Lio/trino/metadata/Metadata;)Lio/trino/spi/security/Identity;
@372
+#<init>(Lio/trino/server/protocol/PreparedStatementEncoder;Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/security/GroupProvider;Lio/trino/security/AccessControl;)V

+###io/trino/server/protocol/QueryInfoUrlFactory
@356
+#<init>(Lio/trino/server/ServerConfig;)V
+#getQueryInfoUrl(Lio/trino/spi/QueryId;)Ljava/util/Optional;
@360
+#getQueryInfoUri(Ljava/util/Optional;Lio/trino/spi/QueryId;Ljavax/ws/rs/core/UriInfo;)Ljava/net/URI;

+###io/trino/server/ForStartup
@364

+###io/trino/server/CoordinatorDiscoveryModule
@359
+#<init>()V

+###io/trino/testing/AllowAllAccessControlManager
@365
+#<init>()V
+#checkCanSetUser(Ljava/util/Optional;Ljava/lang/String;)V
+#checkCanImpersonateUser(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanReadSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanWriteSystemInformation(Lio/trino/spi/security/Identity;)V
+#checkCanExecuteQuery(Lio/trino/spi/security/Identity;)V
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#filterQueriesOwnedBy(Lio/trino/spi/security/Identity;Ljava/util/Collection;)Ljava/util/Collection;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanDropSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanRenameSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#checkCanSetSchemaAuthorization(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanShowSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#filterSchemas(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanShowCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanDropTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetTableComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetColumnComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanShowTables(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#filterTables(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#filterColumns(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanSetTableAuthorization(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanRenameColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanInsertIntoTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDeleteFromTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanTruncateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanUpdateTableColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRefreshMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanDropMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanRenameMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Ljava/lang/String;Lio/trino/spi/security/Identity;Z)V
+#checkCanGrantSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanSetSystemSessionProperty(Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#checkCanSetCatalogSessionProperty(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSelectFromColumns(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;)V
+#checkCanCreateRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanGrantRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/security/SecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/util/Optional;)V
+#checkCanSetCatalogRole(Lio/trino/security/SecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowCurrentRoles(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanShowRoleGrants(Lio/trino/security/SecurityContext;Ljava/util/Optional;)V
+#checkCanExecuteProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanExecuteTableProcedure(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
+#filterCatalogs(Lio/trino/security/SecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
-#filterCatalogs(Lio/trino/spi/security/Identity;Ljava/util/Set;)Ljava/util/Set;
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateMaterializedView(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@380
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@383
+#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanExecuteFunction(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@390
+#checkCanSetViewComment(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
@396
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/security/SecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/security/Identity;Z)V
@405
+#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;)V
+#checkCanAlterColumn(Lio/trino/security/SecurityContext;Lio/trino/metadata/QualifiedObjectName;)V
-#checkCanCreateSchema(Lio/trino/security/SecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
@408
+#checkCanCreateCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V
+#checkCanDropCatalog(Lio/trino/security/SecurityContext;Ljava/lang/String;)V

+###io/trino/testing/TestTestingMetadata
@364
+#<init>()V
+#testRenameMaterializedView()V

+###io/trino/testing/TestingTableExecuteHandle
@365
+#<init>()V

+###io/trino/testing/Bytes
@364
+#fromBytes([B)Lio/trino/testing/Bytes;
+#getBytes()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/testing/LocalQueryRunner$PlanOptimizersProvider
@357
+#getPlanOptimizers(ZLio/trino/sql/parser/SqlParser;Lio/trino/metadata/MetadataManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)Ljava/util/List;
@358
+#getPlanOptimizers(ZLio/trino/sql/parser/SqlParser;Lio/trino/metadata/MetadataManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)Ljava/util/List;
-#getPlanOptimizers(ZLio/trino/sql/parser/SqlParser;Lio/trino/metadata/MetadataManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)Ljava/util/List;
@365
+#getPlanOptimizers(ZLio/trino/sql/parser/SqlParser;Lio/trino/metadata/MetadataManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/FeaturesConfig;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)Ljava/util/List;
-#getPlanOptimizers(ZLio/trino/sql/parser/SqlParser;Lio/trino/metadata/MetadataManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/sql/analyzer/FeaturesConfig;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)Ljava/util/List;
@367
+#getPlanOptimizers(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/execution/TaskManagerConfig;ZLio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostComparator;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/sql/planner/RuleStatsRecorder;)Lio/trino/sql/planner/PlanOptimizersFactory;
-#getPlanOptimizers(ZLio/trino/sql/parser/SqlParser;Lio/trino/metadata/MetadataManager;Lio/trino/spi/type/TypeOperators;Lio/trino/execution/TaskManagerConfig;Lio/trino/split/SplitManager;Lio/trino/split/PageSourceManager;Lio/trino/cost/StatsCalculator;Lio/trino/cost/ScalarStatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/cost/CostCalculator;Lio/trino/FeaturesConfig;Lio/trino/cost/TaskCountEstimator;Lio/trino/sql/planner/NodePartitioningManager;)Ljava/util/List;
@392
-###io/trino/testing/LocalQueryRunner$PlanOptimizersProvider

+###io/trino/FeaturesConfig$JoinReorderingStrategy
@365
+#values()[Lio/trino/FeaturesConfig$JoinReorderingStrategy;
+#valueOf(Ljava/lang/String;)Lio/trino/FeaturesConfig$JoinReorderingStrategy;
@373
-###io/trino/FeaturesConfig$JoinReorderingStrategy

+###io/trino/execution/TruncateTableTask
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/TruncateTable;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/RenameMaterializedViewTask
@364
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/RenameMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/RenameMaterializedView;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/RenameMaterializedView;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/TableExecuteContextManager
@364
+#<init>()V
+#registerTableExecuteContextForQuery(Lio/trino/spi/QueryId;)V
+#unregisterTableExecuteContextForQuery(Lio/trino/spi/QueryId;)V
+#getTableExecuteContextForQuery(Lio/trino/spi/QueryId;)Lio/trino/execution/TableExecuteContext;

+###io/trino/execution/DataDefinitionTask$ExplainDataDefinition
@365
+#explain(Lio/trino/sql/tree/Statement;Ljava/util/List;)Ljava/lang/String;
@397
-###io/trino/execution/DataDefinitionTask$ExplainDataDefinition

+###io/trino/execution/SetTimeZoneTask
@359
+#<init>(Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/cost/StatsCalculator;)V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetTimeZone;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/spi/security/GroupProvider;)V
+#execute(Lio/trino/sql/tree/SetTimeZone;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>(Lio/trino/sql/parser/SqlParser;Lio/trino/spi/security/GroupProvider;Lio/trino/cost/StatsCalculator;)V
-#execute(Lio/trino/sql/tree/SetTimeZone;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/sql/parser/SqlParser;Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/spi/security/GroupProvider;)V

+###io/trino/execution/PartitionedSplitsInfo
@364
+#getCount()I
+#getWeightSum()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#forSplitCountAndWeightSum(IJ)Lio/trino/execution/PartitionedSplitsInfo;
+#forZeroSplits()Lio/trino/execution/PartitionedSplitsInfo;

+###io/trino/execution/SetPropertiesTask
@364
+#<init>()V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetProperties;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#execute(Lio/trino/sql/tree/SetProperties;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>()V
-#execute(Lio/trino/sql/tree/SetProperties;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
-#execute(Lio/trino/sql/tree/Statement;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/TablePropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
@369
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;)V
-#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/TablePropertyManager;)V

+###io/trino/execution/TableExecuteContext
@364
+#<init>()V
+#setSplitsInfo(Ljava/util/List;)V
+#getSplitsInfo()Ljava/util/List;

+###io/trino/connector/system/MaterializedViewPropertiesSystemTable
@356
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@367
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/MaterializedViewPropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/Metadata;)V
@405
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/MaterializedViewPropertyManager;)V
-#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/metadata/MaterializedViewPropertyManager;)V

+###io/trino/connector/system/MaterializedViewSystemTable
@361
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;

+###io/trino/metadata/TableProceduresPropertyManager
@364
+#<init>()V
+#addProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/List;)V
+#removeProperties(Lio/trino/connector/CatalogName;)V
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getAllProperties()Ljava/util/Map;
@367
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@369
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@370
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getAllProperties()Ljava/util/Map;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#addProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/List;)V
-#removeProperties(Lio/trino/connector/CatalogName;)V
@392
+#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
@405
+#getProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;

+###io/trino/metadata/ViewInfo
@365
+#<init>(Lio/trino/spi/connector/ConnectorViewDefinition;)V
+#<init>(Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;)V
+#getOriginalSql()Ljava/lang/String;
+#getColumns()Ljava/util/List;
+#getComment()Ljava/util/Optional;
+#getStorageTable()Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###io/trino/metadata/TableExecuteHandle
@364
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getConnectorHandle()Lio/trino/spi/connector/ConnectorTableExecuteHandle;
+#withConnectorHandle(Lio/trino/spi/connector/ConnectorTableExecuteHandle;)Lio/trino/metadata/TableExecuteHandle;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/MaterializedViewPropertyManager
@356
+#<init>()V
+#getAllProperties()Ljava/util/Map;
@364
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#removeProperties(Lio/trino/connector/CatalogName;)V
+#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@367
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@369
+#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@370
+#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
+#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties()Ljava/util/Map;
-#getOnlySpecifiedProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Lio/trino/metadata/Properties;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;)Ljava/util/Map;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#removeProperties(Lio/trino/connector/CatalogName;)V
-#addProperties(Lio/trino/connector/CatalogName;Ljava/util/List;)V
@392
+#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogName;)Ljava/util/Collection;
-#getNullableProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Lio/trino/connector/CatalogName;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
@405
+#getAllProperties(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Collection;
+#getNullableProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
+#getProperties(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getAllProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Collection;
-#getNullableProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;
-#getProperties(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Z)Ljava/util/Map;

+###io/trino/metadata/MaterializedViewDefinition
@365
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Lio/trino/spi/security/Identity;Ljava/util/Optional;Ljava/util/Map;)V
+#<init>(Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;Lio/trino/spi/security/Identity;)V
+#getStorageTable()Ljava/util/Optional;
+#getProperties()Ljava/util/Map;
+#toConnectorMaterializedViewDefinition()Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;
+#toString()Ljava/lang/String;

+###io/trino/metadata/TableProceduresRegistry
@364
+#<init>()V
+#addTableProcedures(Lio/trino/connector/CatalogName;Ljava/util/Collection;)V
+#removeProcedures(Lio/trino/connector/CatalogName;)V
+#resolve(Lio/trino/connector/CatalogName;Ljava/lang/String;)Lio/trino/spi/connector/TableProcedureMetadata;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
-#<init>()V
-#addTableProcedures(Lio/trino/connector/CatalogName;Ljava/util/Collection;)V
-#removeProcedures(Lio/trino/connector/CatalogName;)V
@392
+#resolve(Lio/trino/connector/CatalogHandle;Ljava/lang/String;)Lio/trino/spi/connector/TableProcedureMetadata;
-#resolve(Lio/trino/connector/CatalogName;Ljava/lang/String;)Lio/trino/spi/connector/TableProcedureMetadata;
@405
+#resolve(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;)Lio/trino/spi/connector/TableProcedureMetadata;
-#resolve(Lio/trino/connector/CatalogHandle;Ljava/lang/String;)Lio/trino/spi/connector/TableProcedureMetadata;

+###io/trino/metadata/DisabledSystemSecurityMetadata
@362
+#<init>()V
+#roleExists(Lio/trino/Session;Ljava/lang/String;)Z
+#createRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;)V
+#dropRole(Lio/trino/Session;Ljava/lang/String;)V
+#listRoles(Lio/trino/Session;)Ljava/util/Set;
+#listAllRoleGrants(Lio/trino/Session;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
+#listRoleGrants(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#grantRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#revokeRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#listApplicableRoles(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#listEnabledRoles(Lio/trino/spi/security/Identity;)Ljava/util/Set;
+#grantSchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeSchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#grantTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#listTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Set;
@365
+#getSchemaOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)Ljava/util/Optional;
+#setSchemaOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#setTableOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#getViewRunAsIdentity(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;)Ljava/util/Optional;
+#setViewOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#schemaCreated(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)V
+#schemaRenamed(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/connector/CatalogSchemaName;)V
+#schemaDropped(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)V
+#tableCreated(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#tableRenamed(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#tableDropped(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;)V
@366
+#denySchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
+#denyTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
@395
-#listAllRoleGrants(Lio/trino/Session;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
@406
+#columnCreated(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V
+#columnRenamed(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Ljava/lang/String;)V
+#columnDropped(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V
@407
-#columnCreated(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V
-#columnRenamed(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Ljava/lang/String;)V
-#columnDropped(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V

+###io/trino/metadata/SystemSecurityMetadata
@362
+#roleExists(Lio/trino/Session;Ljava/lang/String;)Z
+#createRole(Lio/trino/Session;Ljava/lang/String;Ljava/util/Optional;)V
+#dropRole(Lio/trino/Session;Ljava/lang/String;)V
+#listRoles(Lio/trino/Session;)Ljava/util/Set;
+#listAllRoleGrants(Lio/trino/Session;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
+#listRoleGrants(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#grantRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#revokeRoles(Lio/trino/Session;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#listApplicableRoles(Lio/trino/Session;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#listEnabledRoles(Lio/trino/spi/security/Identity;)Ljava/util/Set;
+#grantSchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeSchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#grantTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#listTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedTablePrefix;)Ljava/util/Set;
@365
+#getSchemaOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)Ljava/util/Optional;
+#setSchemaOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#setTableOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#getViewRunAsIdentity(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;)Ljava/util/Optional;
+#setViewOwner(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#schemaCreated(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)V
+#schemaRenamed(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/connector/CatalogSchemaName;)V
+#schemaDropped(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;)V
+#tableCreated(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#tableRenamed(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#tableDropped(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;)V
@366
+#denySchemaPrivileges(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
+#denyTablePrivileges(Lio/trino/Session;Lio/trino/metadata/QualifiedObjectName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
@395
-#listAllRoleGrants(Lio/trino/Session;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
@406
+#columnCreated(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V
+#columnRenamed(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Ljava/lang/String;)V
+#columnDropped(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V
@407
-#columnCreated(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V
-#columnRenamed(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Ljava/lang/String;)V
-#columnDropped(Lio/trino/Session;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V

+###io/trino/metadata/Catalog$SecurityManagement
@362
+#values()[Lio/trino/metadata/Catalog$SecurityManagement;
+#valueOf(Ljava/lang/String;)Lio/trino/metadata/Catalog$SecurityManagement;
@386
-###io/trino/metadata/Catalog$SecurityManagement

+###io/trino/metadata/TableVersion
@365
+#<init>(Lio/trino/spi/connector/PointerType;Lio/trino/spi/type/Type;Ljava/lang/Object;)V
+#getPointerType()Lio/trino/spi/connector/PointerType;
+#getObjectType()Lio/trino/spi/type/Type;
+#getPointer()Ljava/lang/Object;

+###io/trino/metadata/RedirectionAwareTableHandle
@358
+#withRedirectionTo(Lio/trino/metadata/QualifiedObjectName;Lio/trino/metadata/TableHandle;)Lio/trino/metadata/RedirectionAwareTableHandle;
+#noRedirection(Ljava/util/Optional;)Lio/trino/metadata/RedirectionAwareTableHandle;
+#getTableHandle()Ljava/util/Optional;
+#getRedirectedTableName()Ljava/util/Optional;

+###io/trino/metadata/ViewDefinition
@365
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V
+#<init>(Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorViewDefinition;)V
+#<init>(Lio/trino/metadata/QualifiedObjectName;Lio/trino/spi/connector/ConnectorViewDefinition;Lio/trino/spi/security/Identity;)V
+#getOriginalSql()Ljava/lang/String;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getColumns()Ljava/util/List;
+#getComment()Ljava/util/Optional;
+#isRunAsInvoker()Z
+#getRunAsIdentity()Ljava/util/Optional;
+#toConnectorViewDefinition()Lio/trino/spi/connector/ConnectorViewDefinition;
+#toString()Ljava/lang/String;

+###io/trino/metadata/TableSchema
@355
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTableSchema;)V
+#getQualifiedName()Lio/trino/metadata/QualifiedObjectName;
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getTableSchema()Lio/trino/spi/connector/ConnectorTableSchema;
+#getTable()Lio/trino/spi/connector/SchemaTableName;
+#getColumns()Ljava/util/List;
+#getColumn(Ljava/lang/String;)Lio/trino/spi/connector/ColumnSchema;
@392
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/ConnectorTableSchema;)V
+#getCatalogName()Ljava/lang/String;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTableSchema;)V
-#getCatalogName()Lio/trino/connector/CatalogName;

+###io/trino/metadata/ViewColumn
@365
+#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeId;)V
+#getName()Ljava/lang/String;
+#getType()Lio/trino/spi/type/TypeId;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@402
+#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeId;Ljava/util/Optional;)V
+#getComment()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeId;)V

+###io/trino/operator/OperatorFactories
@358
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@359
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@360
+#partitionedOutput(Lio/trino/operator/TaskContext;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;)Lio/trino/operator/OutputFactory;
@373
-#partitionedOutput(Lio/trino/operator/TaskContext;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;)Lio/trino/operator/OutputFactory;
@389
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@395
+#join(Lio/trino/operator/OperatorFactories$JoinOperatorType;ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#spillingJoin(Lio/trino/operator/OperatorFactories$JoinOperatorType;ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;

+###io/trino/operator/aggregation/LegacyApproximateRealPercentileAggregations
@364
+#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;JDDD)V[deprecated]
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/listagg/ListaggAggregationStateSerializer
@362
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/listagg/ListaggAggregationState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@383
+#<init>()V
-#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/listagg/GroupListaggAggregationState
@362
+#<init>(Lio/trino/spi/type/Type;)V
+#setSeparator(Lio/airlift/slice/Slice;)V
+#getSeparator()Lio/airlift/slice/Slice;
+#setOverflowFiller(Lio/airlift/slice/Slice;)V
+#getOverflowFiller()Lio/airlift/slice/Slice;
+#setOverflowError(Z)V
+#isOverflowError()Z
+#setShowOverflowEntryCount(Z)V
+#showOverflowEntryCount()Z
+#add(Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/listagg/ListaggAggregationStateConsumer;)V
@383
+#<init>()V
-#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/listagg/ListaggAggregationFunction
@362
+#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
+#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/Block;Lio/airlift/slice/Slice;ZLio/airlift/slice/Slice;ZI)V
+#combine(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;)V
+#output(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/BlockBuilder;)V
@364
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/Block;ILio/airlift/slice/Slice;ZLio/airlift/slice/Slice;Z)V
-#getIntermediateTypes(Lio/trino/metadata/FunctionBinding;)Ljava/util/List;
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/Block;Lio/airlift/slice/Slice;ZLio/airlift/slice/Slice;ZI)V
@366
+#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
+#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/Block;Lio/airlift/slice/Slice;ZLio/airlift/slice/Slice;ZI)V
-#specialize(Lio/trino/metadata/FunctionBinding;)Lio/trino/operator/aggregation/InternalAggregationFunction;
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/Block;ILio/airlift/slice/Slice;ZLio/airlift/slice/Slice;Z)V
@383
+#input(Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/Block;Lio/airlift/slice/Slice;ZLio/airlift/slice/Slice;ZI)V
+#combine(Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;)V
+#output(Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/BlockBuilder;)V
+#outputState(Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/BlockBuilder;I)V
-#specialize(Lio/trino/metadata/BoundSignature;)Lio/trino/operator/aggregation/AggregationMetadata;
-#input(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/Block;Lio/airlift/slice/Slice;ZLio/airlift/slice/Slice;ZI)V
-#combine(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;)V
-#output(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/listagg/ListaggAggregationState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/listagg/ListaggAggregationStateConsumer
@362
+#accept(Lio/trino/spi/block/Block;I)Z

+###io/trino/operator/aggregation/listagg/ListaggAggregationStateFactory
@362
+#<init>(Lio/trino/spi/type/Type;)V
+#createSingleState()Lio/trino/operator/aggregation/listagg/ListaggAggregationState;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Lio/trino/operator/aggregation/listagg/ListaggAggregationState;
+#getGroupedStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#createSingleState()Ljava/lang/Object;
@366
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
-#getSingleStateClass()Ljava/lang/Class;
-#getGroupedStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#createSingleState()Ljava/lang/Object;
@383
+#<init>()V
-#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/listagg/ListaggAggregationState
@362
+#setSeparator(Lio/airlift/slice/Slice;)V
+#getSeparator()Lio/airlift/slice/Slice;
+#setOverflowFiller(Lio/airlift/slice/Slice;)V
+#getOverflowFiller()Lio/airlift/slice/Slice;
+#setOverflowError(Z)V
+#isOverflowError()Z
+#setShowOverflowEntryCount(Z)V
+#showOverflowEntryCount()Z
+#add(Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/listagg/ListaggAggregationStateConsumer;)V
+#isEmpty()Z
+#getEntryCount()I
+#merge(Lio/trino/operator/aggregation/listagg/ListaggAggregationState;)V
+#reset()V

+###io/trino/operator/aggregation/listagg/SingleListaggAggregationState
@362
+#<init>(Lio/trino/spi/type/Type;)V
+#getEstimatedSize()J
+#setSeparator(Lio/airlift/slice/Slice;)V
+#getSeparator()Lio/airlift/slice/Slice;
+#setOverflowFiller(Lio/airlift/slice/Slice;)V
+#getOverflowFiller()Lio/airlift/slice/Slice;
+#setOverflowError(Z)V
+#isOverflowError()Z
+#setShowOverflowEntryCount(Z)V
+#showOverflowEntryCount()Z
+#add(Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/listagg/ListaggAggregationStateConsumer;)V
+#isEmpty()Z
+#getEntryCount()I
+#reset()V
@383
+#<init>()V
-#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/listagg/ListaggArrayAggregationState
@362
+#add(Lio/trino/spi/block/Block;I)V
+#forEach(Lio/trino/operator/aggregation/arrayagg/ArrayAggregationStateConsumer;)V
+#isEmpty()Z
+#merge(Lio/trino/operator/aggregation/listagg/ListaggArrayAggregationState;)V
+#reset()V

+###io/trino/operator/aggregation/LegacyApproximateDoublePercentileAggregations
@364
+#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;DDDD)V[deprecated]
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/BlockBuilderCopier
@365
+#copyBlockBuilder(Lio/trino/spi/block/BlockBuilder;)Lio/trino/spi/block/BlockBuilder;
@370
+#copyBlockBuilder(Lio/trino/spi/type/Type;Lio/trino/spi/block/BlockBuilder;)Lio/trino/spi/block/BlockBuilder;
-#copyBlockBuilder(Lio/trino/spi/block/BlockBuilder;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/operator/aggregation/state/GenericBooleanStateSerializer
@364
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/GenericBooleanState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/GenericBooleanState
@364
+#getBoolean()Z
+#setBoolean(Z)V
+#isNull()Z
+#setNull(Z)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericBooleanState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#getValue()Z
+#setValue(Z)V
+#set(Lio/trino/operator/aggregation/state/GenericBooleanState;)V
-#getBoolean()Z
-#setBoolean(Z)V

+###io/trino/operator/aggregation/state/GenericDoubleStateSerializer
@364
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/GenericDoubleState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/GenericDoubleState
@364
+#getDouble()D
+#setDouble(D)V
+#isNull()Z
+#setNull(Z)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericDoubleState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#getValue()D
+#setValue(D)V
+#set(Lio/trino/operator/aggregation/state/GenericDoubleState;)V
-#getDouble()D
-#setDouble(D)V

+###io/trino/operator/aggregation/state/GenericLongStateSerializer
@364
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/state/GenericLongState;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
@366
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/GenericLongState
@364
+#getLong()J
+#setLong(J)V
+#isNull()Z
+#setNull(Z)V
+#write(Lio/trino/spi/type/Type;Lio/trino/operator/aggregation/state/GenericLongState;Lio/trino/spi/block/BlockBuilder;)V
@366
+#getValue()J
+#setValue(J)V
+#set(Lio/trino/operator/aggregation/state/GenericLongState;)V
-#getLong()J
-#setLong(J)V

+###io/trino/operator/aggregation/LegacyApproximateLongPercentileAggregations
@364
+#weightedInput(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;JDDD)V[deprecated]
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestAndPercentileState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/ApproximateSetGenericAggregation
@359
+#input(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/Block;I)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;D)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;J)V
+#input(Lio/trino/operator/aggregation/state/HyperLogLogState;Z)V
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/operator/aggregation/state/HyperLogLogState;Ljava/lang/Object;)V
+#combineState(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/operator/aggregation/state/HyperLogLogState;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/HyperLogLogState;Lio/trino/spi/block/BlockBuilder;)V
+#getOrCreateHyperLogLog(Lio/trino/operator/aggregation/state/HyperLogLogState;)Lio/airlift/stats/cardinality/HyperLogLog;
+#newHyperLogLog()Lio/airlift/stats/cardinality/HyperLogLog;

+###io/trino/operator/aggregation/BooleanApproximateCountDistinctAggregation
@364
+#input(Lio/trino/operator/aggregation/state/BooleanDistinctState;ZD)V
+#combineState(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/operator/aggregation/state/BooleanDistinctState;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/BooleanDefaultApproximateCountDistinctAggregation
@364
+#input(Lio/trino/operator/aggregation/state/BooleanDistinctState;Z)V
+#combineState(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/operator/aggregation/state/BooleanDistinctState;)V
+#evaluateFinal(Lio/trino/operator/aggregation/state/BooleanDistinctState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/join/NestedLoopBuildOperator
@358
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/join/NestedLoopJoinBridge;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/join/PartitionedLookupSourceFactory
@358
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLio/trino/type/BlockTypeOperators;)V
+#getTypes()Ljava/util/List;
+#getOutputTypes()Ljava/util/List;
+#partitions()I
+#createLookupSourceProvider()Lcom/google/common/util/concurrent/ListenableFuture;
+#whenBuildFinishes()Lcom/google/common/util/concurrent/ListenableFuture;
+#lendPartitionLookupSource(ILjava/util/function/Supplier;)Lcom/google/common/util/concurrent/ListenableFuture;
+#setPartitionSpilledLookupSourceHandle(ILio/trino/operator/join/SpilledLookupSourceHandle;)V
+#finishProbeOperator(Ljava/util/OptionalInt;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;
+#destroy()V
+#isDestroyed()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/join/NestedLoopJoinPagesSupplier
@358
+#<init>()V
+#getPagesFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#setPages(Lio/trino/operator/join/NestedLoopJoinPages;)Lcom/google/common/util/concurrent/ListenableFuture;
+#destroy()V

+###io/trino/operator/join/LookupJoinOperatorFactory$JoinType
@358
+#values()[Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;

+###io/trino/operator/join/JoinProbe
@358
+#getOutputChannels()[I
+#advanceNextPosition()Z
+#isFinished()Z
+#getCurrentJoinPosition(Lio/trino/operator/join/LookupSource;)J
+#getPosition()I
+#getPage()Lio/trino/spi/Page;

+###io/trino/operator/join/NestedLoopJoinPages
@358
+#getPages()Ljava/util/List;
+#getEstimatedSize()Lio/airlift/units/DataSize;

+###io/trino/operator/join/LookupOuterOperator
@358
+#<init>(Lio/trino/operator/OperatorContext;Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/List;Ljava/util/List;Ljava/lang/Runnable;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V

+###io/trino/operator/join/InternalJoinFilterFunction
@358
+#filter(ILio/trino/spi/Page;ILio/trino/spi/Page;)Z

+###io/trino/operator/join/SortedPositionLinks$FactoryBuilder
@358
+#<init>(ILio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;)V
+#link(II)I
+#build()Lio/trino/operator/join/PositionLinks$Factory;
+#size()I
@365
+#isEmpty()Z
-#size()I

+###io/trino/operator/join/OuterPositionIterator
@358
+#appendToNext(Lio/trino/spi/PageBuilder;I)Z

+###io/trino/operator/join/JoinHash
@358
+#<init>(Lio/trino/operator/join/PagesHash;Ljava/util/Optional;Ljava/util/Optional;)V
+#isEmpty()Z
+#getChannelCount()I
+#getJoinPositionCount()J
+#getInMemorySizeInBytes()J
+#joinPositionWithinPartition(J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#close()V
@362
-#getChannelCount()I
@399
+#getJoinPosition([ILio/trino/spi/Page;Lio/trino/spi/Page;[J[J)V
+#getJoinPosition([ILio/trino/spi/Page;Lio/trino/spi/Page;[J)V
@406
+#<init>(Lio/trino/operator/join/PagesHash;Ljava/util/Optional;Ljava/util/Optional;J)V
-#<init>(Lio/trino/operator/join/PagesHash;Ljava/util/Optional;Ljava/util/Optional;)V

+###io/trino/operator/join/PositionLinks
@358
+#getSizeInBytes()J
+#start(IILio/trino/spi/Page;)I
+#next(IILio/trino/spi/Page;)I

+###io/trino/operator/join/StandardJoinFilterFunction
@358
+#<init>(Lio/trino/operator/join/InternalJoinFilterFunction;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;)V
+#filter(IILio/trino/spi/Page;)Z

+###io/trino/operator/join/LookupSource
@358
+#getChannelCount()I
+#getInMemorySizeInBytes()J
+#getJoinPositionCount()J
+#joinPositionWithinPartition(J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#isEmpty()Z
+#close()V
@362
-#getChannelCount()I
@399
+#getJoinPosition([ILio/trino/spi/Page;Lio/trino/spi/Page;[J[J)V
+#getJoinPosition([ILio/trino/spi/Page;Lio/trino/spi/Page;[J)V

+###io/trino/operator/join/PartitionedConsumption
@358

+###io/trino/operator/join/SpillingJoinProcessor
@358
+#<init>(Ljava/lang/Runnable;Ljava/util/OptionalInt;ZLio/trino/operator/join/LookupSourceFactory;Lcom/google/common/util/concurrent/ListenableFuture;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/operator/join/PageJoiner$PageJoinerFactory;Lio/trino/operator/WorkProcessor;)V
+#close()V
+#process()Lio/trino/operator/WorkProcessor$ProcessState;

+###io/trino/operator/join/LookupSourceProvider
@358
+#withLease(Ljava/util/function/Function;)Ljava/lang/Object;
+#close()V

+###io/trino/operator/join/PositionLinks$FactoryBuilder
@358
+#link(II)I
+#build()Lio/trino/operator/join/PositionLinks$Factory;
+#size()I
+#isEmpty()Z
@365
-#size()I

+###io/trino/operator/join/PartitionedLookupSource
@358
+#createPartitionedLookupSourceSupplier(Ljava/util/List;Ljava/util/List;ZLio/trino/type/BlockTypeOperators;)Lio/trino/operator/join/TrackingLookupSourceSupplier;
+#isEmpty()Z
+#getChannelCount()I
+#getJoinPositionCount()J
+#getInMemorySizeInBytes()J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#joinPositionWithinPartition(J)J
+#close()V
@362
-#getChannelCount()I

+###io/trino/operator/join/HashBuilderOperator$State
@358
+#values()[Lio/trino/operator/join/HashBuilderOperator$State;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/join/HashBuilderOperator$State;

+###io/trino/operator/join/JoinBridge
@358
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;
+#destroy()V
+#whenBuildFinishes()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/join/TrackingLookupSourceSupplier
@358
+#getLookupSource()Lio/trino/operator/join/LookupSource;
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;
+#nonTracking(Ljava/util/function/Supplier;)Lio/trino/operator/join/TrackingLookupSourceSupplier;

+###io/trino/operator/join/NestedLoopJoinBridge
@358
+#getPagesFuture()Lcom/google/common/util/concurrent/ListenableFuture;
+#setPages(Lio/trino/operator/join/NestedLoopJoinPages;)Lcom/google/common/util/concurrent/ListenableFuture;
+#destroy()V
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;
+#whenBuildFinishes()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/join/NestedLoopJoinOperator
@358
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V

+###io/trino/operator/join/HashBuilderOperator
@358
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/join/PartitionedLookupSourceFactory;ILjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SingleStreamSpillerFactory;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#getState()Lio/trino/operator/join/HashBuilderOperator$State;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z
+#close()V
@365
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/join/PartitionedLookupSourceFactory;ILjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/operator/HashArraySizeSupplier;)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/join/PartitionedLookupSourceFactory;ILjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SingleStreamSpillerFactory;)V

+###io/trino/operator/join/LookupSourceFactory
@358
+#getTypes()Ljava/util/List;
+#getOutputTypes()Ljava/util/List;
+#createLookupSourceProvider()Lcom/google/common/util/concurrent/ListenableFuture;
+#partitions()I
+#finishProbeOperator(Ljava/util/OptionalInt;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;
+#setTaskContext(Lio/trino/operator/TaskContext;)V
+#destroy()V
+#isDestroyed()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/join/JoinBridgeManager
@358
+#lookupAllAtOnce(Lio/trino/operator/join/PartitionedLookupSourceFactory;)Lio/trino/operator/join/JoinBridgeManager;
+#<init>(ZLio/trino/operator/PipelineExecutionStrategy;Lio/trino/operator/PipelineExecutionStrategy;Ljava/util/function/Function;Ljava/util/List;)V
+#getBuildOutputTypes()Ljava/util/List;
+#getBuildExecutionStrategy()Lio/trino/operator/PipelineExecutionStrategy;
+#incrementProbeFactoryCount()V
+#getJoinBridge(Lio/trino/execution/Lifespan;)Lio/trino/operator/join/JoinBridge;
+#probeOperatorFactoryClosedForAllLifespans()V
+#probeOperatorFactoryClosed(Lio/trino/execution/Lifespan;)V
+#probeOperatorCreated(Lio/trino/execution/Lifespan;)V
+#probeOperatorClosed(Lio/trino/execution/Lifespan;)V
+#outerOperatorFactoryClosed(Lio/trino/execution/Lifespan;)V
+#outerOperatorCreated(Lio/trino/execution/Lifespan;)V
+#outerOperatorClosed(Lio/trino/execution/Lifespan;)V
+#getOuterPositionsFuture(Lio/trino/execution/Lifespan;)Lcom/google/common/util/concurrent/ListenableFuture;
@388
+#<init>(ZLio/trino/operator/join/JoinBridge;Ljava/util/List;)V
+#getJoinBridge()Lio/trino/operator/join/JoinBridge;
+#probeOperatorFactoryClosed()V
+#probeOperatorCreated()V
+#probeOperatorClosed()V
+#outerOperatorFactoryClosed()V
+#outerOperatorCreated()V
+#outerOperatorClosed()V
+#getOuterPositionsFuture()Lcom/google/common/util/concurrent/ListenableFuture;
-#<init>(ZLio/trino/operator/PipelineExecutionStrategy;Lio/trino/operator/PipelineExecutionStrategy;Ljava/util/function/Function;Ljava/util/List;)V
-#getBuildExecutionStrategy()Lio/trino/operator/PipelineExecutionStrategy;
-#getJoinBridge(Lio/trino/execution/Lifespan;)Lio/trino/operator/join/JoinBridge;
-#probeOperatorFactoryClosedForAllLifespans()V
-#probeOperatorFactoryClosed(Lio/trino/execution/Lifespan;)V
-#probeOperatorCreated(Lio/trino/execution/Lifespan;)V
-#probeOperatorClosed(Lio/trino/execution/Lifespan;)V
-#outerOperatorFactoryClosed(Lio/trino/execution/Lifespan;)V
-#outerOperatorCreated(Lio/trino/execution/Lifespan;)V
-#outerOperatorClosed(Lio/trino/execution/Lifespan;)V
-#getOuterPositionsFuture(Lio/trino/execution/Lifespan;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/join/JoinProbe$JoinProbeFactory
@358
+#<init>([ILjava/util/List;Ljava/util/OptionalInt;)V
+#createJoinProbe(Lio/trino/spi/Page;)Lio/trino/operator/join/JoinProbe;

+###io/trino/operator/join/PartitionedLookupSource$OuterPositionTracker$Factory
@358
+#<init>(Ljava/util/List;)V
+#create()Lio/trino/operator/join/PartitionedLookupSource$OuterPositionTracker;
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;

+###io/trino/operator/join/LookupJoinPageBuilder
@358
+#<init>(Ljava/util/List;)V
+#isFull()Z
+#isEmpty()Z
+#reset()V
+#appendRow(Lio/trino/operator/join/JoinProbe;Lio/trino/operator/join/LookupSource;J)V
+#appendNullForBuild(Lio/trino/operator/join/JoinProbe;)V
+#build(Lio/trino/operator/join/JoinProbe;)Lio/trino/spi/Page;
+#toString()Ljava/lang/String;

+###io/trino/operator/join/PageJoiner$PageJoinerFactory
@358
+#getPageJoiner(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/Optional;Ljava/util/Iterator;)Lio/trino/operator/join/PageJoiner;

+###io/trino/operator/join/DefaultPageJoiner
@359
+#<init>(Lio/trino/operator/ProcessorContext;Ljava/util/List;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZLio/trino/operator/HashGenerator;Lio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/operator/join/LookupSourceFactory;Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/Optional;Lio/trino/operator/join/JoinStatisticsCounter;Ljava/util/Iterator;)V
+#getSpilledRows()Ljava/util/Map;
+#getSpiller()Ljava/util/Optional;
+#close()V
+#process(Lio/trino/spi/Page;)Lio/trino/operator/WorkProcessor$TransformationState;
+#process(Ljava/lang/Object;)Lio/trino/operator/WorkProcessor$TransformationState;

+###io/trino/operator/join/NestedLoopBuildOperator$NestedLoopBuildOperatorFactory
@358
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/join/ArrayPositionLinks$FactoryBuilder
@358
+#link(II)I
+#build()Lio/trino/operator/join/PositionLinks$Factory;
+#size()I
@365
+#isEmpty()Z
-#size()I

+###io/trino/operator/join/StaticLookupSourceProvider
@358
+#<init>(Lio/trino/operator/join/LookupSource;)V
+#withLease(Ljava/util/function/Function;)Ljava/lang/Object;
+#close()V

+###io/trino/operator/join/JoinOperatorFactory
@358
+#createOuterOperatorFactory()Ljava/util/Optional;

+###io/trino/operator/join/LookupJoinOperatorFactory
@358
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZZLio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/OptionalInt;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;)V
+#createOuterOperatorFactory()Ljava/util/Optional;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#getOperatorId()I
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#create(Lio/trino/operator/ProcessorContext;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorOperator;
+#createAdapterOperator(Lio/trino/operator/ProcessorContext;)Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperator;
+#lifespanFinished(Lio/trino/execution/Lifespan;)V
+#close()V
+#duplicate()Lio/trino/operator/join/LookupJoinOperatorFactory;
+#duplicate()Lio/trino/operator/OperatorFactory;
+#duplicate()Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperatorFactory;
@388
-#noMoreOperators(Lio/trino/execution/Lifespan;)V
-#lifespanFinished(Lio/trino/execution/Lifespan;)V
@395
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/OperatorFactories$JoinOperatorType;Lio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/OptionalInt;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZZLio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/OptionalInt;Ljava/util/List;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;)V

+###io/trino/operator/join/PartitionedConsumption$Partition
@358
+#<init>(IILjava/util/function/IntFunction;Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/function/IntConsumer;)V
+#number()I
+#load()Lcom/google/common/util/concurrent/ListenableFuture;
+#release()V

+###io/trino/operator/join/JoinFilterFunction
@358
+#filter(IILio/trino/spi/Page;)Z

+###io/trino/operator/join/PositionLinks$Factory
@358
+#create(Ljava/util/List;)Lio/trino/operator/join/PositionLinks;
+#checksum()J

+###io/trino/operator/join/JoinOperatorInfo
@358
+#createJoinOperatorInfo(Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;[JLjava/util/Optional;)Lio/trino/operator/join/JoinOperatorInfo;
+#<init>(Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;[J[JLjava/util/Optional;)V
+#getJoinType()Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;
+#getLogHistogramProbes()[J
+#getLogHistogramOutput()[J
+#getLookupSourcePositions()Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#mergeWith(Lio/trino/operator/join/JoinOperatorInfo;)Lio/trino/operator/join/JoinOperatorInfo;
+#isFinal()Z
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/operator/join/LookupJoinOperator
@358
+#getOperatorInfo()Ljava/util/Optional;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#finish()V
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#close()V

+###io/trino/operator/join/JoinUtils
@358
+#channelsToPages(Ljava/util/List;)Ljava/util/List;
+#isBuildSideReplicated(Lio/trino/sql/planner/plan/PlanNode;)Z
@392
+#getJoinDynamicFilters(Lio/trino/sql/planner/plan/JoinNode;)Ljava/util/Map;
+#getSemiJoinDynamicFilterId(Lio/trino/sql/planner/plan/SemiJoinNode;)Ljava/util/Optional;
@406
+#getSingleBigintJoinChannel(Ljava/util/List;Ljava/util/List;)Ljava/util/OptionalInt;

+###io/trino/operator/join/OuterLookupSource
@358
+#createOuterLookupSourceSupplier(Ljava/util/function/Supplier;)Lio/trino/operator/join/TrackingLookupSourceSupplier;
+#isEmpty()Z
+#getChannelCount()I
+#getJoinPositionCount()J
+#getInMemorySizeInBytes()J
+#joinPositionWithinPartition(J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#close()V
@362
-#getChannelCount()I

+###io/trino/operator/join/SortedPositionLinks
@358
+#builder(ILio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;)Lio/trino/operator/join/SortedPositionLinks$FactoryBuilder;
+#next(IILio/trino/spi/Page;)I
+#start(IILio/trino/spi/Page;)I
+#getSizeInBytes()J
@406
+#getEstimatedRetainedSizeInBytes(I)J

+###io/trino/operator/join/NestedLoopJoinPagesBuilder
@358
+#addPage(Lio/trino/spi/Page;)V
+#getEstimatedSize()Lio/airlift/units/DataSize;
+#compact()V
+#build()Lio/trino/operator/join/NestedLoopJoinPages;
+#toString()Ljava/lang/String;

+###io/trino/operator/join/NestedLoopJoinOperator$NestedLoopJoinOperatorFactory
@358
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#duplicate()Lio/trino/operator/OperatorFactory;
@388
-#noMoreOperators(Lio/trino/execution/Lifespan;)V

+###io/trino/operator/join/LookupOuterOperator$LookupOuterOperatorFactory
@358
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Lio/trino/operator/join/JoinBridgeManager;)V
+#getOperatorId()I
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators(Lio/trino/execution/Lifespan;)V
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@388
-#noMoreOperators(Lio/trino/execution/Lifespan;)V

+###io/trino/operator/join/DefaultPageJoiner$SavedRow
@359
+#<init>(Lio/trino/spi/Page;IJZI)V

+###io/trino/operator/join/HashBuilderOperator$HashBuilderOperatorFactory
@358
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SingleStreamSpillerFactory;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/join/HashBuilderOperator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
@365
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SingleStreamSpillerFactory;Lio/trino/operator/HashArraySizeSupplier;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;ZLio/trino/spiller/SingleStreamSpillerFactory;)V

+###io/trino/operator/join/ArrayPositionLinks
@358
+#builder(I)Lio/trino/operator/join/ArrayPositionLinks$FactoryBuilder;
+#start(IILio/trino/spi/Page;)I
+#next(IILio/trino/spi/Page;)I
+#getSizeInBytes()J
@406
+#getEstimatedRetainedSizeInBytes(I)J

+###io/trino/operator/join/PageJoiner
@358
+#<init>(Lio/trino/operator/ProcessorContext;Ljava/util/List;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZLio/trino/operator/HashGenerator;Lio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/operator/join/LookupSourceFactory;Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/Optional;Lio/trino/operator/join/JoinStatisticsCounter;Ljava/util/Iterator;)V
+#getSpilledRows()Ljava/util/Map;
+#getSpiller()Ljava/util/Optional;
+#close()V
+#process(Lio/trino/spi/Page;)Lio/trino/operator/WorkProcessor$TransformationState;
+#process(Ljava/lang/Object;)Lio/trino/operator/WorkProcessor$TransformationState;
@359
-#<init>(Lio/trino/operator/ProcessorContext;Ljava/util/List;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZLio/trino/operator/HashGenerator;Lio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/operator/join/LookupSourceFactory;Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/Optional;Lio/trino/operator/join/JoinStatisticsCounter;Ljava/util/Iterator;)V
-#close()V
-#process(Lio/trino/spi/Page;)Lio/trino/operator/WorkProcessor$TransformationState;
-#process(Ljava/lang/Object;)Lio/trino/operator/WorkProcessor$TransformationState;

+###io/trino/operator/join/JoinOperatorFactory$OuterOperatorFactoryResult
@358
+#<init>(Lio/trino/operator/OperatorFactory;Lio/trino/operator/PipelineExecutionStrategy;)V
+#getOuterOperatorFactory()Lio/trino/operator/OperatorFactory;
+#getBuildExecutionStrategy()Lio/trino/operator/PipelineExecutionStrategy;
@388
-###io/trino/operator/join/JoinOperatorFactory$OuterOperatorFactoryResult

+###io/trino/operator/join/PagesHash
@358
+#<init>(Lit/unimi/dsi/fastutil/longs/LongArrayList;Lio/trino/operator/PagesHashStrategy;Lio/trino/operator/join/PositionLinks$FactoryBuilder;)V
+#getChannelCount()I
+#getPositionCount()I
+#getInMemorySizeInBytes()J
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#getAddressIndex(ILio/trino/spi/Page;)I
+#getAddressIndex(ILio/trino/spi/Page;J)I
+#appendTo(JLio/trino/spi/PageBuilder;I)V
@362
-#getChannelCount()I
@365
+#<init>(Lit/unimi/dsi/fastutil/longs/LongArrayList;Lio/trino/operator/PagesHashStrategy;Lio/trino/operator/join/PositionLinks$FactoryBuilder;Lio/trino/operator/HashArraySizeSupplier;)V
-#<init>(Lit/unimi/dsi/fastutil/longs/LongArrayList;Lio/trino/operator/PagesHashStrategy;Lio/trino/operator/join/PositionLinks$FactoryBuilder;)V
@394
+#getHashPosition(JJ)I
-#<init>(Lit/unimi/dsi/fastutil/longs/LongArrayList;Lio/trino/operator/PagesHashStrategy;Lio/trino/operator/join/PositionLinks$FactoryBuilder;Lio/trino/operator/HashArraySizeSupplier;)V
@399
+#getAddressIndex([ILio/trino/spi/Page;)[I
+#getAddressIndex([ILio/trino/spi/Page;[J)[I
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D

+###io/trino/operator/join/JoinHashSupplier
@358
+#<init>(Lio/trino/Session;Lio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)V
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#checksum()J
+#get()Lio/trino/operator/join/JoinHash;
+#get()Ljava/lang/Object;
@365
+#<init>(Lio/trino/Session;Lio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Lio/trino/operator/HashArraySizeSupplier;)V
-#<init>(Lio/trino/Session;Lio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)V
@394
+#<init>(Lio/trino/Session;Lio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Lio/trino/operator/HashArraySizeSupplier;Ljava/util/OptionalInt;)V
-#<init>(Lio/trino/Session;Lio/trino/operator/PagesHashStrategy;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Lio/trino/operator/HashArraySizeSupplier;)V
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D
@406
+#getEstimatedRetainedSizeInBytes(ILit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;JLjava/util/Optional;Ljava/util/OptionalInt;Lio/trino/operator/HashArraySizeSupplier;)J

+###io/trino/operator/join/LookupSourceProvider$LookupSourceLease
@358
+#getLookupSource()Lio/trino/operator/join/LookupSource;
+#spillEpoch()J
+#getSpillMask()Ljava/util/function/IntPredicate;

+###io/trino/operator/join/JoinStatisticsCounter
@358
+#<init>(Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;)V
+#updateLookupSourcePositions(J)V
+#recordProbe(I)V
+#get()Lio/trino/operator/join/JoinOperatorInfo;
+#get()Ljava/lang/Object;

+###io/trino/operator/join/LookupSourceSupplier
@358
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#checksum()J
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D

+###io/trino/operator/TrinoOperatorFactories
@358
+#<init>()V
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@359
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;ZLjava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@360
+#partitionedOutput(Lio/trino/operator/TaskContext;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;)Lio/trino/operator/OutputFactory;
@373
-#partitionedOutput(Lio/trino/operator/TaskContext;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;)Lio/trino/operator/OutputFactory;
@389
+#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
@395
+#join(Lio/trino/operator/OperatorFactories$JoinOperatorType;ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
+#spillingJoin(Lio/trino/operator/OperatorFactories$JoinOperatorType;ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#innerJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#probeOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#lookupOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;
-#fullOuterJoin(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;ZZLjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/OptionalInt;Lio/trino/spiller/PartitioningSpillerFactory;Lio/trino/type/BlockTypeOperators;)Lio/trino/operator/OperatorFactory;

+###io/trino/operator/RefreshMaterializedViewOperator
@359
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/metadata/Metadata;Lio/trino/metadata/QualifiedObjectName;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#close()V
+#isFinished()Z

+###io/trino/operator/output/PartitionedOutputOperator$PartitionedOutputFactory
@360
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;)V
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;Lio/trino/operator/output/PagePartitionerFactory;)V
+#createOutputOperator(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)Lio/trino/operator/OperatorFactory;
@373
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;)V
-#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;)V
-#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;Lio/trino/operator/output/PagePartitionerFactory;)V
@406
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;Ljava/util/Optional;Lio/trino/memory/context/AggregatedMemoryContext;I)V
-#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;)V

+###io/trino/operator/output/PartitionedOutputOperator$PartitionedOutputInfo
@360
+#<init>(JJJ)V
+#getRowsAdded()J
+#getPagesAdded()J
+#getOutputBufferPeakMemoryUsage()J
+#mergeWith(Lio/trino/operator/output/PartitionedOutputOperator$PartitionedOutputInfo;)Lio/trino/operator/output/PartitionedOutputOperator$PartitionedOutputInfo;
+#isFinal()Z
+#toString()Ljava/lang/String;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/operator/output/DefaultPagePartitioner
@360
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Ljava/util/List;Lio/airlift/units/DataSize;Lio/trino/operator/OperatorContext;)V
+#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#getOperatorInfoSupplier()Ljava/util/function/Supplier;
+#partitionPage(Lio/trino/spi/Page;)V
+#flush(Z)V
@373
-###io/trino/operator/output/DefaultPagePartitioner

+###io/trino/operator/output/PartitionedOutputOperator
@360
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PagePartitionerFactory;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#close()V
@373
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;)V
-#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PagePartitionerFactory;)V
@406
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/function/Function;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/operator/output/PagePartitionerPool;)V
-#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;)V

+###io/trino/operator/output/TaskOutputOperator
@360
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/execution/buffer/OutputBuffer;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/output/PagePartitionerFactory
@360
+#create(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Ljava/util/List;Lio/airlift/units/DataSize;Lio/trino/operator/OperatorContext;)Lio/trino/operator/output/PagePartitioner;
@373
-###io/trino/operator/output/PagePartitionerFactory

+###io/trino/operator/output/TaskOutputOperator$TaskOutputOperatorFactory
@360
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/buffer/OutputBuffer;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/output/PagePartitioner
@360
+#partitionPage(Lio/trino/spi/Page;)V
+#flush(Z)V
+#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#getOperatorInfoSupplier()Ljava/util/function/Supplier;
@373
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Ljava/util/List;Lio/airlift/units/DataSize;Lio/trino/operator/OperatorContext;Lio/trino/operator/output/PositionsAppenderFactory;)V
+#partitionPageByRow(Lio/trino/spi/Page;)V
+#partitionPageByColumn(Lio/trino/spi/Page;)V
@383
+#forceFlush()V
-#flush(Z)V
@403
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Ljava/util/List;Lio/airlift/units/DataSize;Lio/trino/operator/OperatorContext;Lio/trino/operator/output/PositionsAppenderFactory;Ljava/util/Optional;)V
-#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Ljava/util/List;Lio/airlift/units/DataSize;Lio/trino/operator/OperatorContext;Lio/trino/operator/output/PositionsAppenderFactory;)V
@406
+#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Ljava/util/List;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;Ljava/util/Optional;Lio/trino/memory/context/AggregatedMemoryContext;)V
+#setupOperator(Lio/trino/operator/OperatorContext;)V
+#close()V
-#<init>(Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Ljava/util/List;Lio/airlift/units/DataSize;Lio/trino/operator/OperatorContext;Lio/trino/operator/output/PositionsAppenderFactory;Ljava/util/Optional;)V
-#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
-#getSizeInBytes()J
-#getRetainedSizeInBytes()J
-#getOperatorInfoSupplier()Ljava/util/function/Supplier;
-#forceFlush()V

+###io/trino/operator/output/TaskOutputOperator$TaskOutputFactory
@360
+#<init>(Lio/trino/execution/buffer/OutputBuffer;)V
+#createOutputOperator(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/execution/buffer/PagesSerdeFactory;)Lio/trino/operator/OperatorFactory;

+###io/trino/operator/output/PartitionedOutputOperator$PartitionedOutputOperatorFactory
@360
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PagePartitionerFactory;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@373
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PagePartitionerFactory;)V
@406
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;Ljava/util/Optional;Lio/trino/memory/context/AggregatedMemoryContext;I)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/function/Function;Lio/trino/operator/PartitionFunction;Ljava/util/List;Ljava/util/List;ZLjava/util/OptionalInt;Lio/trino/execution/buffer/OutputBuffer;Lio/trino/execution/buffer/PagesSerdeFactory;Lio/airlift/units/DataSize;Lio/trino/operator/output/PositionsAppenderFactory;)V

+###io/trino/operator/RefreshMaterializedViewOperator$RefreshMaterializedViewOperatorFactory
@359
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/Metadata;Lio/trino/metadata/QualifiedObjectName;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/window/RegularPartitionerSupplier
@356
+#<init>()V
+#get()Lio/trino/operator/window/Partitioner;
@365
+#get(Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/window/Partitioner;
-#get()Lio/trino/operator/window/Partitioner;

+###io/trino/operator/window/RangeFraming
@356
+#<init>(Lio/trino/operator/window/FrameInfo;IILio/trino/operator/PagesIndexComparator;Lio/trino/operator/PagesIndexComparator;Lio/trino/operator/PagesIndex;Lio/trino/operator/PagesHashStrategy;Lio/trino/operator/window/Framing$Range;)V
+#getRange(IIII)Lio/trino/operator/window/Framing$Range;

+###io/trino/operator/window/RegularWindowPartitioner
@356
+#<init>()V
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
@359
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
-#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
@362
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/window/WindowPartition;
-#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;

+###io/trino/operator/window/Partitioner
@356
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
@359
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
-#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
@362
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/window/WindowPartition;
-#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;

+###io/trino/operator/window/RowsFraming
@356
+#<init>(Lio/trino/operator/window/FrameInfo;IILio/trino/operator/PagesIndex;)V
+#getRange(IIII)Lio/trino/operator/window/Framing$Range;

+###io/trino/operator/window/Framing$Range
@356
+#<init>(II)V
+#getStart()I
+#getEnd()I

+###io/trino/operator/window/GroupsFraming
@356
+#<init>(Lio/trino/operator/window/FrameInfo;IILio/trino/operator/PagesIndex;Lio/trino/operator/PagesHashStrategy;I)V
+#getRange(IIII)Lio/trino/operator/window/Framing$Range;

+###io/trino/operator/window/matcher/ArrayView
@356
+#<init>([II)V
+#get(I)I
+#length()I

+###io/trino/operator/window/matcher/Instruction$Type
@356
+#values()[Lio/trino/operator/window/matcher/Instruction$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/window/matcher/Instruction$Type;

+###io/trino/operator/window/matcher/IrRowPatternToProgramRewriter
@356
+#rewrite(Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;Ljava/util/Map;)Lio/trino/operator/window/matcher/Program;

+###io/trino/operator/window/matcher/Matcher
@356
+#<init>(Lio/trino/operator/window/matcher/Program;)V
+#run(Lio/trino/operator/window/pattern/LabelEvaluator;)Lio/trino/operator/window/matcher/MatchResult;
@362
+#<init>(Lio/trino/operator/window/matcher/Program;Ljava/util/List;)V
+#run(Lio/trino/operator/window/pattern/LabelEvaluator;Lio/trino/memory/context/LocalMemoryContext;)Lio/trino/operator/window/matcher/MatchResult;
-#<init>(Lio/trino/operator/window/matcher/Program;)V
-#run(Lio/trino/operator/window/pattern/LabelEvaluator;)Lio/trino/operator/window/matcher/MatchResult;
@365
+#<init>(Lio/trino/operator/window/matcher/Program;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#run(Lio/trino/operator/window/pattern/LabelEvaluator;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/window/matcher/MatchResult;
-#<init>(Lio/trino/operator/window/matcher/Program;Ljava/util/List;)V
-#run(Lio/trino/operator/window/pattern/LabelEvaluator;Lio/trino/memory/context/LocalMemoryContext;)Lio/trino/operator/window/matcher/MatchResult;

+###io/trino/operator/window/matcher/ThreadEquivalence
@362
+#<init>(Lio/trino/operator/window/matcher/Program;Ljava/util/List;)V
+#equivalent(ILio/trino/operator/window/matcher/ArrayView;ILio/trino/operator/window/matcher/ArrayView;I)Z
@365
+#<init>(Lio/trino/operator/window/matcher/Program;Ljava/util/List;Ljava/util/List;)V
+#equivalent(ILio/trino/operator/window/matcher/ArrayView;[Lio/trino/operator/window/pattern/MatchAggregation;ILio/trino/operator/window/matcher/ArrayView;[Lio/trino/operator/window/pattern/MatchAggregation;I)Z
-#<init>(Lio/trino/operator/window/matcher/Program;Ljava/util/List;)V
-#equivalent(ILio/trino/operator/window/matcher/ArrayView;ILio/trino/operator/window/matcher/ArrayView;I)Z

+###io/trino/operator/window/matcher/Program
@356
+#<init>(Ljava/util/List;)V
+#at(I)Lio/trino/operator/window/matcher/Instruction;
+#size()I
+#getInstructions()Ljava/util/List;
+#getMinSlotCount()I
+#getMinLabelCount()I
+#dump()Ljava/lang/String;

+###io/trino/operator/window/matcher/MatchResult
@356
+#<init>(ZLio/trino/operator/window/matcher/ArrayView;Lio/trino/operator/window/matcher/ArrayView;)V
+#isMatched()Z
+#getLabels()Lio/trino/operator/window/matcher/ArrayView;
+#getExclusions()Lio/trino/operator/window/matcher/ArrayView;

+###io/trino/operator/window/matcher/IntList
@365
+#<init>(I)V
+#add(I)V
+#get(I)I
+#set(II)V
+#size()I
+#clear()V
+#copy()Lio/trino/operator/window/matcher/IntList;
+#toArrayView()Lio/trino/operator/window/matcher/ArrayView;
+#getSizeInBytes()J

+###io/trino/operator/window/Framing
@356
+#getRange(IIII)Lio/trino/operator/window/Framing$Range;

+###io/trino/operator/window/PartitionerSupplier
@356
+#get()Lio/trino/operator/window/Partitioner;
@365
+#get(Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/window/Partitioner;
-#get()Lio/trino/operator/window/Partitioner;

+###io/trino/operator/window/PatternRecognitionPartition
@356
+#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;)V
+#getPartitionStart()I
+#getPartitionEnd()I
+#hasNext()Z
+#processNextRow(Lio/trino/spi/PageBuilder;)V
@362
+#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Lio/trino/memory/context/AggregatedMemoryContext;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;)V
-#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;)V
@365
+#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Lio/trino/memory/context/AggregatedMemoryContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
-#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Lio/trino/memory/context/AggregatedMemoryContext;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;)V

+###io/trino/operator/window/PatternRecognitionPartitionerSupplier
@356
+#<init>(Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;)V
+#get()Lio/trino/operator/window/Partitioner;
@365
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#get(Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/window/Partitioner;
-#<init>(Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;)V
-#get()Lio/trino/operator/window/Partitioner;

+###io/trino/operator/window/PatternRecognitionPartitioner
@356
+#<init>(Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;)V
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
@359
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
-#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
@362
+#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/window/WindowPartition;
-#createPartition(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)Lio/trino/operator/window/WindowPartition;
@365
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
-#<init>(Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/operator/window/matcher/Matcher;Ljava/util/List;)V

+###io/trino/operator/window/pattern/LabelEvaluator$Evaluation
@356
+#<init>(Lio/trino/operator/project/PageProjection;Ljava/util/List;Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;)V
+#test(ILio/trino/operator/window/matcher/ArrayView;IIIJLio/trino/spi/function/WindowIndex;)Z
@359
+#test(ILio/trino/operator/window/matcher/ArrayView;IIIIJLio/trino/spi/function/WindowIndex;)Z
-#test(ILio/trino/operator/window/matcher/ArrayView;IIIJLio/trino/spi/function/WindowIndex;)Z
@362
+#getExpectedLayout()Ljava/util/List;
@365
+#test(Lio/trino/operator/window/matcher/ArrayView;[Lio/trino/operator/window/pattern/MatchAggregation;IIIIJLio/trino/operator/window/pattern/ProjectingPagesWindowIndex;)Z
-#test(ILio/trino/operator/window/matcher/ArrayView;IIIIJLio/trino/spi/function/WindowIndex;)Z

+###io/trino/operator/window/pattern/MeasureComputation
@356
+#<init>(Lio/trino/operator/project/PageProjection;Ljava/util/List;Lio/trino/spi/type/Type;Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;)V
+#getType()Lio/trino/spi/type/Type;
+#compute(ILio/trino/operator/window/matcher/ArrayView;IIIJLio/trino/spi/function/WindowIndex;)Lio/trino/spi/block/Block;
+#computeEmpty(J)Lio/trino/spi/block/Block;
@359
+#compute(ILio/trino/operator/window/matcher/ArrayView;IIIIJLio/trino/spi/function/WindowIndex;)Lio/trino/spi/block/Block;
-#compute(ILio/trino/operator/window/matcher/ArrayView;IIIJLio/trino/spi/function/WindowIndex;)Lio/trino/spi/block/Block;
@365
+#<init>(Lio/trino/operator/project/PageProjection;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;)V
+#compute(ILio/trino/operator/window/matcher/ArrayView;IIIIJLio/trino/operator/window/pattern/ProjectingPagesWindowIndex;)Lio/trino/spi/block/Block;
+#compute(ILio/trino/operator/window/matcher/ArrayView;[Lio/trino/operator/window/pattern/MatchAggregation;IIIIJLio/trino/operator/window/pattern/ProjectingPagesWindowIndex;Lio/trino/operator/project/PageProjection;Ljava/util/List;[Lio/trino/spi/block/Block;Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;)Lio/trino/spi/block/Block;
+#precomputeNulls(Ljava/util/List;)[Lio/trino/spi/block/Block;
-#<init>(Lio/trino/operator/project/PageProjection;Ljava/util/List;Lio/trino/spi/type/Type;Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;)V
-#compute(ILio/trino/operator/window/matcher/ArrayView;IIIIJLio/trino/spi/function/WindowIndex;)Lio/trino/spi/block/Block;

+###io/trino/operator/window/pattern/MeasureComputation$MeasureComputationSupplier
@356
+#<init>(Ljava/util/function/Supplier;Ljava/util/List;Lio/trino/spi/type/Type;Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;)V
+#get()Lio/trino/operator/window/pattern/MeasureComputation;
@365
+#get(Ljava/util/List;)Lio/trino/operator/window/pattern/MeasureComputation;
-#get()Lio/trino/operator/window/pattern/MeasureComputation;

+###io/trino/operator/window/pattern/MatchAggregationPointer
@365
+#<init>(I)V
+#getIndex()I

+###io/trino/operator/window/pattern/PhysicalValueAccessor
@365

+###io/trino/operator/window/pattern/ArgumentComputation$ArgumentComputationSupplier
@365
+#<init>(Ljava/util/function/Supplier;Lio/trino/spi/type/Type;Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;)V
+#get()Lio/trino/operator/window/pattern/ArgumentComputation;

+###io/trino/operator/window/pattern/MatchAggregation
@365
+#reset()V
+#aggregate(ILio/trino/operator/window/matcher/ArrayView;JLio/trino/operator/window/pattern/ProjectingPagesWindowIndex;II)Lio/trino/spi/block/Block;
+#aggregateEmpty()Lio/trino/spi/block/Block;
+#getAllPositions(Lio/trino/operator/window/matcher/ArrayView;)Lio/trino/operator/window/matcher/ArrayView;
+#copy()Lio/trino/operator/window/pattern/MatchAggregation;

+###io/trino/operator/window/pattern/SetEvaluator
@365
+#<init>(Ljava/util/Set;Z)V
+#reset()V
+#resolveNewPositions(ILio/trino/operator/window/matcher/ArrayView;II)Lio/trino/operator/window/matcher/ArrayView;
+#getAllPositions(Lio/trino/operator/window/matcher/ArrayView;)Lio/trino/operator/window/matcher/ArrayView;
+#copy()Lio/trino/operator/window/pattern/SetEvaluator;
+#getAllPositionsSizeInBytes()J

+###io/trino/operator/window/pattern/LabelEvaluator$EvaluationSupplier
@356
+#<init>(Ljava/util/function/Supplier;Ljava/util/List;Ljava/util/List;Lio/trino/spi/connector/ConnectorSession;)V
+#get()Lio/trino/operator/window/pattern/LabelEvaluator$Evaluation;

+###io/trino/operator/window/pattern/LabelEvaluator
@356
+#<init>(JIIILjava/util/List;Lio/trino/spi/function/WindowIndex;)V
+#getInputLength()I
+#isMatchingAtPartitionStart()Z
+#evaluateLabel(ILio/trino/operator/window/matcher/ArrayView;)Z
@359
+#<init>(JIIIILjava/util/List;Lio/trino/spi/function/WindowIndex;)V
-#<init>(JIIILjava/util/List;Lio/trino/spi/function/WindowIndex;)V
@365
+#<init>(JIIIILjava/util/List;Lio/trino/operator/window/pattern/ProjectingPagesWindowIndex;)V
+#evaluateLabel(Lio/trino/operator/window/matcher/ArrayView;[Lio/trino/operator/window/pattern/MatchAggregation;)Z
-#<init>(JIIIILjava/util/List;Lio/trino/spi/function/WindowIndex;)V
-#evaluateLabel(ILio/trino/operator/window/matcher/ArrayView;)Z

+###io/trino/operator/window/pattern/ArgumentComputation
@365
+#getOutputType()Lio/trino/spi/type/Type;
+#getInputChannels()Ljava/util/List;
+#compute([Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;

+###io/trino/operator/window/pattern/LogicalIndexNavigation
@356
+#<init>(Ljava/util/Set;ZZII)V
+#resolvePosition(Lio/trino/operator/window/matcher/ArrayView;IIII)I
+#resolvePosition(ILio/trino/operator/window/matcher/ArrayView;III)I
@362
+#getLabels()Ljava/util/Set;
+#isLast()Z
+#getLogicalOffset()I
+#getPhysicalOffset()I
+#withoutLogicalOffset()Lio/trino/operator/window/pattern/LogicalIndexNavigation;
+#withLogicalOffset(I)Lio/trino/operator/window/pattern/LogicalIndexNavigation;
+#withoutPhysicalOffset()Lio/trino/operator/window/pattern/LogicalIndexNavigation;
+#withPhysicalOffset(I)Lio/trino/operator/window/pattern/LogicalIndexNavigation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@365
-#resolvePosition(Lio/trino/operator/window/matcher/ArrayView;IIII)I

+###io/trino/operator/window/pattern/ProjectingPagesWindowIndex
@365
+#<init>(Lio/trino/operator/PagesIndex;IILjava/util/List;Ljava/util/List;)V
+#setLabelAndMatchNumber(IIJ)V
+#size()I
+#isNull(II)Z
+#getBoolean(II)Z
+#getLong(II)J
+#getDouble(II)D
+#getSlice(II)Lio/airlift/slice/Slice;
+#getSingleValueBlock(II)Lio/trino/spi/block/Block;
+#getObject(II)Ljava/lang/Object;
+#appendTo(IILio/trino/spi/block/BlockBuilder;)V
+#toString()Ljava/lang/String;
@367
+#getRawBlock(II)Lio/trino/spi/block/Block;
+#getRawBlockPosition(I)I

+###io/trino/operator/window/pattern/MatchAggregation$MatchAggregationInstantiator
@365
+#<init>(Lio/trino/operator/aggregation/InternalAggregationFunction;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V
+#get(Lio/trino/memory/context/AggregatedMemoryContext;)Lio/trino/operator/window/pattern/MatchAggregation;
@366
+#<init>(Ljava/lang/String;Lio/trino/operator/aggregation/InternalAggregationFunction;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V
-#<init>(Lio/trino/operator/aggregation/InternalAggregationFunction;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V
@367
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V
-#<init>(Ljava/lang/String;Lio/trino/operator/aggregation/InternalAggregationFunction;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V
@374
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/operator/window/AggregationWindowFunctionSupplier;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V
-#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V
@395
+#<init>(Lio/trino/spi/function/BoundSignature;Lio/trino/operator/window/AggregationWindowFunctionSupplier;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V
-#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/operator/window/AggregationWindowFunctionSupplier;Ljava/util/List;Ljava/util/List;Lio/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier;)V

+###io/trino/operator/window/pattern/SetEvaluator$SetEvaluatorSupplier
@365
+#<init>(Lio/trino/sql/planner/rowpattern/AggregatedSetDescriptor;Ljava/util/Map;)V
+#get()Lio/trino/operator/window/pattern/SetEvaluator;

+###io/trino/operator/window/pattern/PhysicalValuePointer
@356
+#<init>(ILio/trino/spi/type/Type;Lio/trino/operator/window/pattern/LogicalIndexNavigation;)V
+#getSourceChannel()I
+#getType()Lio/trino/spi/type/Type;
+#getLogicalIndexNavigation()Lio/trino/operator/window/pattern/LogicalIndexNavigation;

+###io/trino/operator/window/RegularWindowPartition
@356
+#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)V
+#getPartitionStart()I
+#getPartitionEnd()I
+#hasNext()Z
+#processNextRow(Lio/trino/spi/PageBuilder;)V
@367
+#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Ljava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)V
-#<init>(Lio/trino/operator/PagesIndex;II[ILjava/util/List;Lio/trino/operator/PagesHashStrategy;Ljava/util/Map;)V

+###io/trino/operator/IncrementalLoadFactorHashArraySizeSupplier
@365
+#<init>(I)V
+#getHashArraySize(I)I

+###io/trino/operator/HashArraySizeSupplier
@365
+#defaultHashArraySizeSupplier()Lio/trino/operator/HashArraySizeSupplier;
+#incrementalLoadFactorHashArraySizeSupplier(Lio/trino/Session;)Lio/trino/operator/HashArraySizeSupplier;
+#incrementalLoadFactorHashArraySizeSupplier(Lio/trino/Session;I)Lio/trino/operator/HashArraySizeSupplier;
+#getHashArraySize(I)I

+###io/trino/operator/scalar/GenericComparisonUnorderedFirstOperator
@364
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/GenericComparisonUnorderedLastOperator
@364
+#<init>(Lio/trino/spi/type/TypeOperators;)V

+###io/trino/operator/scalar/FormatNumberFunction
@357
+#<init>()V
+#formatNumber(J)Lio/airlift/slice/Slice;
+#formatNumber(D)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/IpAddressFunctions
@365
+#contains(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Z

+###io/trino/sql/rewrite/ShowQueriesRewrite
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;)V
+#rewrite(Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/tree/Statement;
@367
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;)V
@374
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;)V
@383
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/metadata/FunctionManager;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/SchemaPropertyManager;Lio/trino/metadata/ColumnPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/MaterializedViewPropertyManager;)V

+###io/trino/sql/rewrite/DescribeOutputRewrite
@365
+#<init>(Lio/trino/sql/parser/SqlParser;)V
+#rewrite(Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/tree/Statement;

+###io/trino/sql/rewrite/StatementRewrite$Rewrite
@365
+#rewrite(Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/tree/Statement;

+###io/trino/sql/rewrite/DescribeInputRewrite
@365
+#<init>(Lio/trino/sql/parser/SqlParser;)V
+#rewrite(Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/tree/Statement;

+###io/trino/sql/rewrite/ExplainRewrite
@365
+#<init>(Lio/trino/sql/analyzer/QueryExplainerFactory;Lio/trino/execution/QueryPreparer;)V
+#rewrite(Lio/trino/sql/analyzer/AnalyzerFactory;Lio/trino/Session;Lio/trino/sql/tree/Statement;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/tree/Statement;

+###io/trino/sql/planner/LocalExecutionPlanner$MatchAggregationLabelDependency
@365
+#<init>(Ljava/util/Set;Z)V
+#getLabels()Ljava/util/Set;
+#isClassifierInvolved()Z

+###io/trino/sql/planner/HashBucketFunction
@362
+#<init>(Lio/trino/operator/HashGenerator;I)V
+#getBucket(Lio/trino/spi/Page;I)I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/plan/Patterns$PatternRecognition
@359
+#<init>()V
+#rowsPerMatch()Lio/trino/matching/Property;

+###io/trino/sql/planner/plan/Assignments$Assignment
@357
+#<init>(Lio/trino/sql/planner/Symbol;Lio/trino/sql/tree/Expression;)V
+#getOutput()Lio/trino/sql/planner/Symbol;
+#getExpression()Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/plan/RefreshMaterializedViewNode
@359
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/QualifiedObjectName;)V
+#getViewName()Lio/trino/metadata/QualifiedObjectName;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/planner/plan/PatternRecognitionNode
@356
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Ljava/util/Optional;Ljava/util/Set;ILjava/util/Map;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/sql/planner/rowpattern/ir/IrRowPattern;Ljava/util/Map;Ljava/util/Map;)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getCreatedSymbols()Ljava/util/Set;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;
+#getPartitionBy()Ljava/util/List;
+#getOrderingScheme()Ljava/util/Optional;
+#getHashSymbol()Ljava/util/Optional;
+#getPrePartitionedInputs()Ljava/util/Set;
+#getPreSortedOrderPrefix()I
+#getMeasures()Ljava/util/Map;
+#getCommonBaseFrame()Ljava/util/Optional;
+#getRowsPerMatch()Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;
+#getSkipToLabel()Ljava/util/Optional;
+#getSkipToPosition()Lio/trino/sql/tree/SkipTo$Position;
+#isInitial()Z
+#getPattern()Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;
+#getSubsets()Ljava/util/Map;
+#getVariableDefinitions()Ljava/util/Map;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@359
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Ljava/util/Optional;Ljava/util/Set;ILjava/util/Map;Ljava/util/Map;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/sql/planner/rowpattern/ir/IrRowPattern;Ljava/util/Map;Ljava/util/Map;)V
+#getWindowFunctions()Ljava/util/Map;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Ljava/util/Optional;Ljava/util/Set;ILjava/util/Map;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/sql/planner/rowpattern/ir/IrRowPattern;Ljava/util/Map;Ljava/util/Map;)V
@405
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/DataOrganizationSpecification;Ljava/util/Optional;Ljava/util/Set;ILjava/util/Map;Ljava/util/Map;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/sql/planner/rowpattern/ir/IrRowPattern;Ljava/util/Map;Ljava/util/Map;)V
+#getSpecification()Lio/trino/sql/planner/plan/DataOrganizationSpecification;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Ljava/util/Optional;Ljava/util/Set;ILjava/util/Map;Ljava/util/Map;Ljava/util/Optional;Lio/trino/sql/tree/PatternRecognitionRelation$RowsPerMatch;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/sql/planner/rowpattern/ir/IrRowPattern;Ljava/util/Map;Ljava/util/Map;)V
-#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;

+###io/trino/sql/planner/plan/TableExecuteNode
@364
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$TableExecuteTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getTarget()Lio/trino/sql/planner/plan/TableWriterNode$TableExecuteTarget;
+#getRowCountSymbol()Lio/trino/sql/planner/Symbol;
+#getFragmentSymbol()Lio/trino/sql/planner/Symbol;
+#getColumns()Ljava/util/List;
+#getColumnNames()Ljava/util/List;
+#getPartitioningScheme()Ljava/util/Optional;
+#getPreferredPartitioningScheme()Ljava/util/Optional;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/PatternRecognitionNode$Measure
@356
+#<init>(Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;Lio/trino/spi/type/Type;)V
+#getExpressionAndValuePointers()Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;
+#getType()Lio/trino/spi/type/Type;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/plan/TableWriterNode$TableExecuteTarget
@364
+#<init>(Lio/trino/metadata/TableExecuteHandle;Ljava/util/Optional;Lio/trino/spi/connector/SchemaTableName;)V
+#getExecuteHandle()Lio/trino/metadata/TableExecuteHandle;
+#getSourceHandle()Ljava/util/Optional;
+#getMandatorySourceHandle()Lio/trino/metadata/TableHandle;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#toString()Ljava/lang/String;
@380
+#<init>(Lio/trino/metadata/TableExecuteHandle;Ljava/util/Optional;Lio/trino/spi/connector/SchemaTableName;Z)V
+#isReportingWrittenBytesSupported()Z
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
-#<init>(Lio/trino/metadata/TableExecuteHandle;Ljava/util/Optional;Lio/trino/spi/connector/SchemaTableName;)V
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/OptimizerStatsMBeanExporter
@356
+#<init>(Lorg/weakref/jmx/MBeanExporter;Lio/trino/sql/planner/PlanOptimizersFactory;)V
+#export()V
+#unexport()V

+###io/trino/sql/planner/LocalExecutionPlanner$OperatorFactoryWithTypes
@356
+#<init>(Lio/trino/operator/OperatorFactory;Ljava/util/List;)V
+#getOperatorFactory()Lio/trino/operator/OperatorFactory;
+#getTypes()Ljava/util/List;

+###io/trino/sql/planner/LayoutConstraintEvaluator
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/sql/tree/Expression;)V
+#getArguments()Ljava/util/Set;
+#isCandidate(Ljava/util/Map;)Z
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/sql/tree/Expression;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Ljava/util/Map;Lio/trino/sql/tree/Expression;)V

+###io/trino/sql/planner/RelationPlanner$PatternRecognitionComponents
@359
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Optional;Lio/trino/sql/tree/SkipTo$Position;ZLio/trino/sql/planner/rowpattern/ir/IrRowPattern;Ljava/util/Map;)V
+#getSubsets()Ljava/util/Map;
+#getMeasures()Ljava/util/Map;
+#getMeasureOutputs()Ljava/util/List;
+#getSkipToLabel()Ljava/util/Optional;
+#getSkipToPosition()Lio/trino/sql/tree/SkipTo$Position;
+#isInitial()Z
+#getPattern()Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;
+#getVariableDefinitions()Ljava/util/Map;

+###io/trino/sql/planner/sanity/TableExecuteStructureValidator
@364
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/VerifyUseConnectorNodePartitioningSet
@355
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/sanity/ValidateLimitWithPresortedInput
@358
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
@367
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V
-#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/rowpattern/LogicalIndexPointer
@356
+#<init>(Ljava/util/Set;ZZII)V
+#getLabels()Ljava/util/Set;
+#isLast()Z
+#isRunning()Z
+#getLogicalOffset()I
+#getPhysicalOffset()I
+#toLogicalIndexNavigation(Ljava/util/Map;)Lio/trino/operator/window/pattern/LogicalIndexNavigation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/rowpattern/IrPatternAlternationOptimizer
@356
+#optimize(Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;)Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;

+###io/trino/sql/planner/rowpattern/ir/IrQuantified
@356
+#<init>(Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;Lio/trino/sql/planner/rowpattern/ir/IrQuantifier;)V
+#getPattern()Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;
+#getQuantifier()Lio/trino/sql/planner/rowpattern/ir/IrQuantifier;
+#accept(Lio/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/ir/IrConcatenation
@356
+#<init>(Ljava/util/List;)V
+#getPatterns()Ljava/util/List;
+#accept(Lio/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/ir/IrRowPattern
@356
+#<init>()V

+###io/trino/sql/planner/rowpattern/ir/IrAnchor
@356
+#<init>(Lio/trino/sql/planner/rowpattern/ir/IrAnchor$Type;)V
+#getType()Lio/trino/sql/planner/rowpattern/ir/IrAnchor$Type;
+#accept(Lio/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/ir/IrAlternation
@356
+#<init>(Ljava/util/List;)V
+#getPatterns()Ljava/util/List;
+#accept(Lio/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/ir/IrLabel
@356
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#accept(Lio/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/ir/IrQuantifier
@356
+#zeroOrMore(Z)Lio/trino/sql/planner/rowpattern/ir/IrQuantifier;
+#oneOrMore(Z)Lio/trino/sql/planner/rowpattern/ir/IrQuantifier;
+#zeroOrOne(Z)Lio/trino/sql/planner/rowpattern/ir/IrQuantifier;
+#range(Ljava/util/Optional;Ljava/util/Optional;Z)Lio/trino/sql/planner/rowpattern/ir/IrQuantifier;
+#<init>(ILjava/util/Optional;Z)V
+#getAtLeast()I
+#getAtMost()Ljava/util/Optional;
+#isGreedy()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/ir/IrEmpty
@356
+#<init>()V
+#accept(Lio/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor
@356
+#<init>()V
+#process(Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;)Ljava/lang/Object;
+#process(Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/planner/rowpattern/ir/IrExclusion
@356
+#<init>(Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;)V
+#getPattern()Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;
+#accept(Lio/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/ir/IrAnchor$Type
@356
+#values()[Lio/trino/sql/planner/rowpattern/ir/IrAnchor$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/rowpattern/ir/IrAnchor$Type;

+###io/trino/sql/planner/rowpattern/ir/IrPermutation
@356
+#<init>(Ljava/util/List;)V
+#getPatterns()Ljava/util/List;
+#accept(Lio/trino/sql/planner/rowpattern/ir/IrRowPatternVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/rowpattern/RowPatternToIrRewriter
@356
+#<init>(Lio/trino/sql/analyzer/Analysis;)V
+#rewrite(Lio/trino/sql/tree/RowPattern;Lio/trino/sql/analyzer/Analysis;)Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;

+###io/trino/sql/planner/rowpattern/AggregateArgumentsRewriter
@365
+#rewrite(Ljava/util/List;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;)Ljava/util/List;

+###io/trino/sql/planner/rowpattern/AggregatedSetDescriptor
@365
+#<init>(Ljava/util/Set;Z)V
+#getLabels()Ljava/util/Set;
+#isRunning()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/rowpattern/LogicalIndexExtractor
@356
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/sql/planner/SymbolAllocator;)Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;
@365
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;)Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;
-#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/sql/planner/SymbolAllocator;)Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;
@379
+#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/Session;Lio/trino/metadata/Metadata;)Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;
-#rewrite(Lio/trino/sql/tree/Expression;Ljava/util/Map;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/metadata/Metadata;)Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;

+###io/trino/sql/planner/rowpattern/IrRowPatternFlattener
@356
+#optimize(Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;)Lio/trino/sql/planner/rowpattern/ir/IrRowPattern;

+###io/trino/sql/planner/rowpattern/ScalarValuePointer
@365
+#<init>(Lio/trino/sql/planner/rowpattern/LogicalIndexPointer;Lio/trino/sql/planner/Symbol;)V
+#getLogicalIndexPointer()Lio/trino/sql/planner/rowpattern/LogicalIndexPointer;
+#getInputSymbol()Lio/trino/sql/planner/Symbol;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers
@356
+#<init>(Lio/trino/sql/tree/Expression;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Set;)V
+#getExpression()Lio/trino/sql/tree/Expression;
+#getLayout()Ljava/util/List;
+#getValuePointers()Ljava/util/List;
+#getClassifierSymbols()Ljava/util/Set;
+#getMatchNumberSymbols()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@359
+#getInputSymbols()Ljava/util/List;

+###io/trino/sql/planner/rowpattern/ExpressionAndValuePointersEquivalence
@359
+#equivalent(Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;)Z
+#equivalent(Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;Lio/trino/sql/planner/rowpattern/LogicalIndexExtractor$ExpressionAndValuePointers;Ljava/util/function/BiFunction;)Z

+###io/trino/sql/planner/rowpattern/ValuePointer
@365
+#<init>()V

+###io/trino/sql/planner/rowpattern/AggregationValuePointer
@365
+#<init>(Lio/trino/metadata/ResolvedFunction;Lio/trino/sql/planner/rowpattern/AggregatedSetDescriptor;Ljava/util/List;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;)V
+#getFunction()Lio/trino/metadata/ResolvedFunction;
+#getSetDescriptor()Lio/trino/sql/planner/rowpattern/AggregatedSetDescriptor;
+#getArguments()Ljava/util/List;
+#getClassifierSymbol()Lio/trino/sql/planner/Symbol;
+#getMatchNumberSymbol()Lio/trino/sql/planner/Symbol;
+#getInputSymbols()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/sql/planner/iterative/rule/MergePatternRecognitionNodes$MergePatternRecognitionNodesWithProject
@359
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/PatternRecognitionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PrunePattenRecognitionColumns
@359
+#<init>()V

+###io/trino/sql/planner/iterative/rule/PruneTableExecuteSourceColumns
@365
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableExecuteNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ReplaceJoinOverConstantWithProject
@357
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DesugarCurrentSchema
@357
+#<init>(Lio/trino/metadata/Metadata;)V
+#getCall(Lio/trino/sql/tree/CurrentSchema;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
@364
+#desugarCurrentSchema(Lio/trino/Session;Lio/trino/sql/tree/CurrentSchema;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
-#getCall(Lio/trino/sql/tree/CurrentSchema;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
@405
-###io/trino/sql/planner/iterative/rule/DesugarCurrentSchema

+###io/trino/sql/planner/iterative/rule/RemoveEmptyExceptBranches
@357
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ExceptNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/MergePatternRecognitionNodes
@359
+#rules()Ljava/util/Set;

+###io/trino/sql/planner/iterative/rule/InlineProjectIntoFilter
@357
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PrunePatternRecognitionSourceColumns
@359
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/PatternRecognitionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/OptimizeRowPattern
@356
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/PatternRecognitionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ApplyPreferredTableWriterPartitioning
@365
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/TableWriterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushCastIntoRow
@357
+#<init>()V

+###io/trino/sql/planner/iterative/rule/MergePatternRecognitionNodes$MergePatternRecognitionNodesWithoutProject
@359
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/PatternRecognitionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/MergeProjectWithValues
@357
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ApplyPreferredTableExecutePartitioning
@365
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/TableExecuteNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/SimplifyFilterPredicate
@357
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveEmptyUnionBranches
@357
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/UnionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveEmptyDeleteRuleSet
@365
+#rules()Ljava/util/Set;
@406
-###io/trino/sql/planner/iterative/rule/RemoveEmptyDeleteRuleSet

+###io/trino/sql/planner/iterative/rule/UnwrapSingleColumnRowInApply
@357
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ApplyNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveEmptyTableExecute
@364
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableFinishNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/UnwrapRowSubscript
@357
+#<init>()V

+###io/trino/sql/planner/iterative/rule/Rules
@358
+#deriveTableStatisticsForPushdown(Lio/trino/cost/StatsProvider;Lio/trino/Session;ZLio/trino/sql/planner/plan/PlanNode;)Ljava/util/Optional;

+###io/trino/sql/planner/iterative/rule/PushDownProjectionsFromPatternRecognition
@365
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/PatternRecognitionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DetermineTableScanNodePartitioning
@355
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/cost/TaskCountEstimator;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableScanNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/DesugarCurrentCatalog
@357
+#<init>(Lio/trino/metadata/Metadata;)V
+#getCall(Lio/trino/sql/tree/CurrentCatalog;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
@364
+#desugarCurrentCatalog(Lio/trino/Session;Lio/trino/sql/tree/CurrentCatalog;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
-#getCall(Lio/trino/sql/tree/CurrentCatalog;Lio/trino/metadata/Metadata;)Lio/trino/sql/tree/FunctionCall;
@405
-###io/trino/sql/planner/iterative/rule/DesugarCurrentCatalog

+###io/trino/sql/planner/iterative/rule/EvaluateEmptyIntersect
@357
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/IntersectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/LocalDynamicFiltersCollector
@360
+#<init>(Lio/trino/Session;)V
+#register(Ljava/util/Set;)V
+#getRegisteredDynamicFilterIds()Ljava/util/Set;
+#collectDynamicFilterDomains(Ljava/util/Map;)V
+#createDynamicFilter(Ljava/util/List;Ljava/util/Map;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/connector/DynamicFilter;
@374
+#createDynamicFilter(Ljava/util/List;Ljava/util/Map;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/PlannerContext;)Lio/trino/spi/connector/DynamicFilter;
-#createDynamicFilter(Ljava/util/List;Ljava/util/Map;Lio/trino/sql/planner/TypeProvider;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/connector/DynamicFilter;

+###io/trino/sql/planner/PlanOptimizersFactory
@356
+#get()Ljava/util/List;
+#getOptimizerStats()Ljava/util/Map;
+#getRuleStats()Ljava/util/Map;

+###io/trino/sql/DynamicFilters$NullableFunction
@364
+#dynamicFilter(Ljava/lang/Object;ZLio/airlift/slice/Slice;Lio/airlift/slice/Slice;Z)Z
+#dynamicFilter(JZLio/airlift/slice/Slice;Lio/airlift/slice/Slice;Z)Z
+#dynamicFilter(ZZLio/airlift/slice/Slice;Lio/airlift/slice/Slice;Z)Z
+#dynamicFilter(DZLio/airlift/slice/Slice;Lio/airlift/slice/Slice;Z)Z

+###io/trino/sql/analyzer/PatternRecognitionAnalyzer
@359
+#analyze(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/sql/tree/RowPattern;Ljava/util/Optional;)Lio/trino/sql/analyzer/PatternRecognitionAnalyzer$PatternRecognitionAnalysis;
+#validateNoPatternSearchMode(Ljava/util/Optional;)V
+#validatePatternExclusions(Ljava/util/Optional;Lio/trino/sql/tree/RowPattern;)V
+#validateNoPatternAnchors(Lio/trino/sql/tree/RowPattern;)V
+#validateNoMatchNumber(Ljava/util/List;Ljava/util/List;Ljava/util/Set;)V

+###io/trino/sql/analyzer/QueryType
@364
+#values()[Lio/trino/sql/analyzer/QueryType;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/analyzer/QueryType;

+###io/trino/sql/analyzer/Analysis$SourceColumn
@355
+#<init>(Lio/trino/metadata/QualifiedObjectName;Ljava/lang/String;)V
+#getTableName()Lio/trino/metadata/QualifiedObjectName;
+#getColumnName()Ljava/lang/String;
+#getColumnDetail()Lio/trino/spi/eventlistener/ColumnDetail;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/sql/analyzer/QueryExplainerFactory
@365
+#<init>(Lio/trino/sql/planner/PlanOptimizersFactory;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/parser/SqlParser;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;)V
+#createQueryExplainer(Lio/trino/sql/analyzer/AnalyzerFactory;)Lio/trino/sql/analyzer/QueryExplainer;
@367
+#<init>(Lio/trino/sql/planner/PlanOptimizersFactory;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/sql/PlannerContext;Lio/trino/sql/analyzer/StatementAnalyzerFactory;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;)V
-#<init>(Lio/trino/sql/planner/PlanOptimizersFactory;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/sql/parser/SqlParser;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;)V
@405
+#<init>(Lio/trino/sql/planner/PlanOptimizersFactory;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/sql/PlannerContext;Lio/trino/sql/analyzer/StatementAnalyzerFactory;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;Lio/trino/client/NodeVersion;)V
-#<init>(Lio/trino/sql/planner/PlanOptimizersFactory;Lio/trino/sql/planner/PlanFragmenter;Lio/trino/sql/PlannerContext;Lio/trino/sql/analyzer/StatementAnalyzerFactory;Lio/trino/cost/StatsCalculator;Lio/trino/cost/CostCalculator;)V

+###io/trino/sql/analyzer/PatternRecognitionAnalyzer$PatternRecognitionAnalysis
@359
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;)V
+#getAllLabels()Ljava/util/Set;
+#getUndefinedLabels()Ljava/util/Set;
+#getRanges()Ljava/util/Map;

+###io/trino/sql/analyzer/Analysis$Range
@356
+#<init>(Ljava/util/Optional;Ljava/util/Optional;)V
+#getAtLeast()Ljava/util/Optional;
+#getAtMost()Ljava/util/Optional;

+###io/trino/sql/analyzer/OutputColumn
@355
+#<init>(Lio/trino/execution/Column;Ljava/util/Set;)V
+#getColumn()Lio/trino/execution/Column;
+#getSourceColumns()Ljava/util/Set;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/sql/analyzer/ExpressionAnalyzer$LabelPrefixedReference
@356
+#<init>(Ljava/lang/String;Lio/trino/sql/tree/Identifier;)V
+#getLabel()Ljava/lang/String;
+#getColumn()Lio/trino/sql/tree/Identifier;
@365
+#<init>(Ljava/lang/String;)V
+#getColumn()Ljava/util/Optional;
-#getColumn()Lio/trino/sql/tree/Identifier;

+###io/trino/sql/analyzer/Analysis$SubqueryAnalysis
@356
+#<init>()V
+#addInPredicates(Ljava/util/List;)V
+#addSubqueries(Ljava/util/List;)V
+#addExistsSubqueries(Ljava/util/List;)V
+#addQuantifiedComparisons(Ljava/util/List;)V
+#getInPredicatesSubqueries()Ljava/util/List;
+#getSubqueries()Ljava/util/List;
+#getExistsSubqueries()Ljava/util/List;
+#getQuantifiedComparisonSubqueries()Ljava/util/List;

+###io/trino/sql/analyzer/Analysis$PredicateCoercions
@357
+#<init>(Lio/trino/spi/type/Type;Ljava/util/Optional;Ljava/util/Optional;)V
+#getValueType()Lio/trino/spi/type/Type;
+#getValueCoercion()Ljava/util/Optional;
+#getSubqueryCoercion()Ljava/util/Optional;

+###io/trino/sql/analyzer/AnalyzerFactory
@365
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/sql/rewrite/StatementRewrite;)V
+#createAnalyzer(Lio/trino/Session;Ljava/util/List;Ljava/util/Map;Lio/trino/execution/warnings/WarningCollector;)Lio/trino/sql/analyzer/Analyzer;
@367
+#<init>(Lio/trino/sql/analyzer/StatementAnalyzerFactory;Lio/trino/sql/rewrite/StatementRewrite;)V
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/sql/rewrite/StatementRewrite;)V

+###io/trino/transaction/InMemoryTransactionManagerModule$ExecutorCleanup
@386
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;)V
+#shutdown()V

+###io/trino/transaction/InMemoryTransactionManagerModule
@386
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#createTransactionIdleCheckExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#createTransactionFinishingExecutor()Ljava/util/concurrent/ExecutorService;
+#createTransactionManager(Lio/trino/transaction/TransactionManagerConfig;Lio/trino/metadata/CatalogManager;Lio/trino/spi/VersionEmbedder;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ExecutorService;)Lio/trino/transaction/TransactionManager;

+###io/trino/transaction/TransactionManagerModule
@386
+#<init>()V

+###io/trino/exchange/ExchangeManagerModule
@369
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/exchange/ExchangeDataSource
@394
+#pollPage()Lio/airlift/slice/Slice;
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#addInput(Lio/trino/exchange/ExchangeInput;)V
+#noMoreInputs()V
+#getInfo()Lio/trino/operator/OperatorInfo;
+#close()V

+###io/trino/exchange/SpoolingExchangeInput
@394
+#<init>(Ljava/util/List;)V
+#getExchangeSourceHandles()Ljava/util/List;
+#toString()Ljava/lang/String;
+#getRetainedSizeInBytes()J
@400
+#<init>(Ljava/util/List;Ljava/util/Optional;)V
+#getOutputSelector()Ljava/util/Optional;
-#<init>(Ljava/util/List;)V

+###io/trino/exchange/ExchangeInput
@394
+#getRetainedSizeInBytes()J

+###io/trino/exchange/LazyExchangeDataSource
@394
+#<init>(Lio/trino/spi/QueryId;Lio/trino/spi/exchange/ExchangeId;Lio/trino/operator/DirectExchangeClientSupplier;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;Lio/trino/exchange/ExchangeManagerRegistry;)V
+#pollPage()Lio/airlift/slice/Slice;
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#addInput(Lio/trino/exchange/ExchangeInput;)V
+#noMoreInputs()V
+#getInfo()Lio/trino/operator/OperatorInfo;
+#close()V

+###io/trino/exchange/DirectExchangeInput
@394
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;)V
+#getTaskId()Lio/trino/execution/TaskId;
+#getLocation()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getRetainedSizeInBytes()J

+###io/trino/exchange/DirectExchangeDataSource
@394
+#<init>(Lio/trino/operator/DirectExchangeClient;)V
+#pollPage()Lio/airlift/slice/Slice;
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#addInput(Lio/trino/exchange/ExchangeInput;)V
+#noMoreInputs()V
+#getInfo()Lio/trino/operator/OperatorInfo;
+#close()V

+###io/trino/exchange/SpoolingExchangeDataSource
@394
+#<init>(Lio/trino/spi/exchange/ExchangeSource;Ljava/util/List;Lio/trino/memory/context/LocalMemoryContext;)V
+#pollPage()Lio/airlift/slice/Slice;
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#addInput(Lio/trino/exchange/ExchangeInput;)V
+#noMoreInputs()V
+#getInfo()Lio/trino/operator/OperatorInfo;
+#close()V
@396
+#<init>(Lio/trino/spi/exchange/ExchangeSource;Lio/trino/memory/context/LocalMemoryContext;)V
-#<init>(Lio/trino/spi/exchange/ExchangeSource;Ljava/util/List;Lio/trino/memory/context/LocalMemoryContext;)V

+###io/trino/exchange/ExchangeManagerRegistry
@369
+#<init>(Lio/trino/metadata/HandleResolver;)V
+#addExchangeManagerFactory(Lio/trino/spi/exchange/ExchangeManagerFactory;)V
+#loadExchangeManager()V
+#loadExchangeManager(Ljava/lang/String;Ljava/util/Map;)V
+#getExchangeManager()Lio/trino/spi/exchange/ExchangeManager;
@370
+#<init>(Lio/trino/metadata/ExchangeHandleResolver;)V
-#<init>(Lio/trino/metadata/HandleResolver;)V
@401
+#shutdown()V
@403
+#<init>()V
-#<init>(Lio/trino/metadata/ExchangeHandleResolver;)V

+###io/trino/TaskMemoryInfo
@373
+#<init>(Lio/trino/execution/TaskId;J)V
+#getTaskId()Lio/trino/execution/TaskId;
+#getMemoryReservation()J
+#toString()Ljava/lang/String;

+###io/trino/memory/LowMemoryKiller$ForTaskLowMemoryKiller
@381

+###io/trino/memory/TotalReservationOnBlockedNodesQueryLowMemoryKiller
@381
+#<init>()V
+#chooseTargetToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;

+###io/trino/memory/LowMemoryKiller$RunningQueryInfo
@381
+#<init>(Lio/trino/spi/QueryId;JLjava/util/Map;Lio/trino/operator/RetryPolicy;)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getMemoryReservation()J
+#getTaskInfos()Ljava/util/Map;
+#getRetryPolicy()Lio/trino/operator/RetryPolicy;
+#toString()Ljava/lang/String;

+###io/trino/memory/MemoryManagerConfig$LowMemoryQueryKillerPolicy
@381
+#values()[Lio/trino/memory/MemoryManagerConfig$LowMemoryQueryKillerPolicy;
+#valueOf(Ljava/lang/String;)Lio/trino/memory/MemoryManagerConfig$LowMemoryQueryKillerPolicy;
+#fromString(Ljava/lang/String;)Lio/trino/memory/MemoryManagerConfig$LowMemoryQueryKillerPolicy;

+###io/trino/memory/MemoryManagerConfig$LowMemoryTaskKillerPolicy
@381
+#values()[Lio/trino/memory/MemoryManagerConfig$LowMemoryTaskKillerPolicy;
+#valueOf(Ljava/lang/String;)Lio/trino/memory/MemoryManagerConfig$LowMemoryTaskKillerPolicy;
+#fromString(Ljava/lang/String;)Lio/trino/memory/MemoryManagerConfig$LowMemoryTaskKillerPolicy;

+###io/trino/memory/LeastWastedEffortTaskLowMemoryKiller
@381
+#<init>()V
+#chooseTargetToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;

+###io/trino/memory/LowMemoryKiller$ForQueryLowMemoryKiller
@381

+###io/trino/memory/TotalReservationOnBlockedNodesTaskLowMemoryKiller
@381
+#<init>()V
+#chooseTargetToKill(Ljava/util/List;Ljava/util/List;)Ljava/util/Optional;

+###io/trino/memory/KillTarget
@373
+#wholeQuery(Lio/trino/spi/QueryId;)Lio/trino/memory/KillTarget;
+#selectedTasks(Ljava/util/Set;)Lio/trino/memory/KillTarget;
+#isWholeQuery()Z
+#getQuery()Lio/trino/spi/QueryId;
+#getTasks()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/util/ThreadLocalCompressorDecompressor
@377
+#<init>(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
+#maxCompressedLength(I)I
+#compress([BII[BII)I
+#compress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#decompress([BII[BII)I
+#decompress(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###io/trino/cost/CachingTableStatsProvider
@391
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/Session;)V
+#getTableStatistics(Lio/trino/metadata/TableHandle;)Lio/trino/spi/statistics/TableStatistics;

+###io/trino/cost/FilterProjectAggregationStatsRule
@375
+#<init>(Lio/trino/cost/StatsNormalizer;Lio/trino/cost/FilterStatsCalculator;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/DistinctLimitStatsRule
@372
+#<init>(Lio/trino/cost/StatsNormalizer;)V
+#getPattern()Lio/trino/matching/Pattern;

+###io/trino/cost/TableStatsProvider
@391
+#getTableStatistics(Lio/trino/metadata/TableHandle;)Lio/trino/spi/statistics/TableStatistics;

+###io/trino/server/ui/WorkerResource$JsonNodeInfo
@376
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
+#getNodeId()Ljava/lang/String;
+#getNodeIp()Ljava/lang/String;
+#getNodeVersion()Ljava/lang/String;
+#getCoordinator()Z
+#getState()Ljava/lang/String;

+###io/trino/server/security/jwt/JwtUtil
@371
+#newJwtBuilder()Lio/jsonwebtoken/JwtBuilder;
+#newJwtParserBuilder()Lio/jsonwebtoken/JwtParserBuilder;

+###io/trino/server/security/jwt/ForJwt
@370

+###io/trino/server/security/oauth2/StaticConfigurationProvider
@381
+#get()Lio/trino/server/security/oauth2/OAuth2ServerConfigProvider$OAuth2ServerConfig;

+###io/trino/server/security/oauth2/JweTokenSerializerModule
@388
+#<init>()V
+#getTokenPairSerializer(Lio/trino/server/security/oauth2/OAuth2Client;Lio/trino/client/NodeVersion;Lio/trino/server/security/oauth2/RefreshTokensConfig;Lio/trino/server/security/oauth2/OAuth2Config;)Lio/trino/server/security/oauth2/TokenPairSerializer;

+###io/trino/server/security/oauth2/RefreshTokensConfig
@388
+#<init>()V
+#getTokenExpiration()Lio/airlift/units/Duration;
+#setTokenExpiration(Lio/airlift/units/Duration;)Lio/trino/server/security/oauth2/RefreshTokensConfig;
+#getIssuer()Ljava/lang/String;
+#setIssuer(Ljava/lang/String;)Lio/trino/server/security/oauth2/RefreshTokensConfig;
+#getAudience()Ljava/lang/String;
+#setAudience(Ljava/lang/String;)Lio/trino/server/security/oauth2/RefreshTokensConfig;
+#setSecretKey(Ljava/lang/String;)Lio/trino/server/security/oauth2/RefreshTokensConfig;
+#getSecretKey()Ljavax/crypto/SecretKey;

+###io/trino/server/security/oauth2/OAuth2Client$Request
@381
+#<init>(Ljava/net/URI;Ljava/util/Optional;)V
+#getAuthorizationUri()Ljava/net/URI;
+#getNonce()Ljava/util/Optional;

+###io/trino/server/security/oauth2/JweTokenSerializer
@388
+#<init>(Lio/trino/server/security/oauth2/RefreshTokensConfig;Lio/trino/server/security/oauth2/OAuth2Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/time/Clock;Lio/airlift/units/Duration;)V
+#deserialize(Ljava/lang/String;)Lio/trino/server/security/oauth2/TokenPairSerializer$TokenPair;
+#serialize(Lio/trino/server/security/oauth2/TokenPairSerializer$TokenPair;)Ljava/lang/String;

+###io/trino/server/security/oauth2/OidcDiscovery
@381
+#<init>(Lio/trino/server/security/oauth2/OAuth2Config;Lio/trino/server/security/oauth2/OidcDiscoveryConfig;Lio/trino/server/security/oauth2/NimbusHttpClient;)V
+#get()Lio/trino/server/security/oauth2/OAuth2ServerConfigProvider$OAuth2ServerConfig;

+###io/trino/server/security/oauth2/ForRefreshTokens
@388

+###io/trino/server/security/oauth2/OAuth2ServerConfigProvider
@381
+#get()Lio/trino/server/security/oauth2/OAuth2ServerConfigProvider$OAuth2ServerConfig;

+###io/trino/server/security/oauth2/TokenRefresher
@388
+#<init>(Lio/trino/server/security/oauth2/TokenPairSerializer;Lio/trino/server/security/oauth2/OAuth2TokenHandler;Lio/trino/server/security/oauth2/OAuth2Client;)V
+#refreshToken(Lio/trino/server/security/oauth2/TokenPairSerializer$TokenPair;)Ljava/util/Optional;

+###io/trino/server/security/oauth2/NimbusOAuth2Client
@381
+#<init>(Lio/trino/server/security/oauth2/OAuth2Config;Lio/trino/server/security/oauth2/OAuth2ServerConfigProvider;Lio/trino/server/security/oauth2/NimbusHttpClient;)V
+#load()V
+#createAuthorizationRequest(Ljava/lang/String;Ljava/net/URI;)Lio/trino/server/security/oauth2/OAuth2Client$Request;
+#getOAuth2Response(Ljava/lang/String;Ljava/net/URI;Ljava/util/Optional;)Lio/trino/server/security/oauth2/OAuth2Client$Response;
+#getClaims(Ljava/lang/String;)Ljava/util/Optional;
@388
+#refreshTokens(Ljava/lang/String;)Lio/trino/server/security/oauth2/OAuth2Client$Response;

+###io/trino/server/security/oauth2/NimbusHttpClient
@381
+#execute(Lcom/nimbusds/oauth2/sdk/Request;Lio/trino/server/security/oauth2/NimbusHttpClient$Parser;)Ljava/lang/Object;

+###io/trino/server/security/oauth2/NimbusAirliftHttpClient$NimbusResponseHandler
@381
+#<init>(Lio/trino/server/security/oauth2/NimbusHttpClient$Parser;)V
+#handleException(Lio/airlift/http/client/Request;Ljava/lang/Exception;)Ljava/lang/Object;
+#handle(Lio/airlift/http/client/Request;Lio/airlift/http/client/Response;)Ljava/lang/Object;

+###io/trino/server/security/oauth2/OAuth2ServerConfigProvider$OAuth2ServerConfig
@381
+#<init>(Ljava/util/Optional;Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;Ljava/util/Optional;)V
+#getAccessTokenIssuer()Ljava/util/Optional;
+#getAuthUrl()Ljava/net/URI;
+#getTokenUrl()Ljava/net/URI;
+#getJwksUrl()Ljava/net/URI;
+#getUserinfoUrl()Ljava/util/Optional;

+###io/trino/server/security/oauth2/OidcDiscoveryConfig
@381
+#<init>()V
+#getDiscoveryTimeout()Lio/airlift/units/Duration;
+#setDiscoveryTimeout(Lio/airlift/units/Duration;)Lio/trino/server/security/oauth2/OidcDiscoveryConfig;
+#isUserinfoEndpointEnabled()Z
+#setUserinfoEndpointEnabled(Z)Lio/trino/server/security/oauth2/OidcDiscoveryConfig;
+#getAccessTokenIssuer()Ljava/util/Optional;[deprecated]
+#setAccessTokenIssuer(Ljava/lang/String;)Lio/trino/server/security/oauth2/OidcDiscoveryConfig;[deprecated]
+#getAuthUrl()Ljava/util/Optional;[deprecated]
+#setAuthUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OidcDiscoveryConfig;[deprecated]
+#getTokenUrl()Ljava/util/Optional;[deprecated]
+#setTokenUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OidcDiscoveryConfig;[deprecated]
+#getJwksUrl()Ljava/util/Optional;[deprecated]
+#setJwksUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OidcDiscoveryConfig;[deprecated]
+#getUserinfoUrl()Ljava/util/Optional;[deprecated]
+#setUserinfoUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/OidcDiscoveryConfig;[deprecated]

+###io/trino/server/security/oauth2/NimbusAirliftHttpClient
@381
+#<init>(Lio/airlift/http/client/HttpClient;)V
+#retrieveResource(Ljava/net/URL;)Lcom/nimbusds/jose/util/Resource;
+#execute(Lcom/nimbusds/oauth2/sdk/Request;Lio/trino/server/security/oauth2/NimbusHttpClient$Parser;)Ljava/lang/Object;

+###io/trino/server/security/oauth2/TokenPairSerializer
@388
+#deserialize(Ljava/lang/String;)Lio/trino/server/security/oauth2/TokenPairSerializer$TokenPair;
+#serialize(Lio/trino/server/security/oauth2/TokenPairSerializer$TokenPair;)Ljava/lang/String;

+###io/trino/server/security/oauth2/ZstdCodec
@388
+#<init>()V
+#getAlgorithmName()Ljava/lang/String;
+#compress([B)[B
+#decompress([B)[B

+###io/trino/server/security/oauth2/TokenPairSerializer$TokenPair
@388
+#accessToken(Ljava/lang/String;)Lio/trino/server/security/oauth2/TokenPairSerializer$TokenPair;
+#fromOAuth2Response(Lio/trino/server/security/oauth2/OAuth2Client$Response;)Lio/trino/server/security/oauth2/TokenPairSerializer$TokenPair;
+#accessAndRefreshTokens(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)Lio/trino/server/security/oauth2/TokenPairSerializer$TokenPair;
+#getAccessToken()Ljava/lang/String;
+#getExpiration()Ljava/util/Date;
+#getRefreshToken()Ljava/util/Optional;

+###io/trino/server/security/oauth2/NimbusHttpClient$Parser
@381
+#parse(Lcom/nimbusds/oauth2/sdk/http/HTTPResponse;)Ljava/lang/Object;

+###io/trino/server/security/oauth2/StaticOAuth2ServerConfiguration
@381
+#<init>()V
+#getAccessTokenIssuer()Ljava/util/Optional;
+#setAccessTokenIssuer(Ljava/lang/String;)Lio/trino/server/security/oauth2/StaticOAuth2ServerConfiguration;
+#getAuthUrl()Ljava/lang/String;
+#setAuthUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/StaticOAuth2ServerConfiguration;
+#getTokenUrl()Ljava/lang/String;
+#setTokenUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/StaticOAuth2ServerConfiguration;
+#getJwksUrl()Ljava/lang/String;
+#setJwksUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/StaticOAuth2ServerConfiguration;
+#getUserinfoUrl()Ljava/util/Optional;
+#setUserinfoUrl(Ljava/lang/String;)Lio/trino/server/security/oauth2/StaticOAuth2ServerConfiguration;

+###io/trino/server/security/oauth2/OAuth2Client$Response
@381
+#<init>(Ljava/lang/String;Ljava/time/Instant;Ljava/util/Optional;)V
+#getAccessToken()Ljava/lang/String;
+#getExpiration()Ljava/time/Instant;
+#getIdToken()Ljava/util/Optional;
@388
+#<init>(Ljava/lang/String;Ljava/time/Instant;Ljava/util/Optional;Ljava/util/Optional;)V
+#getRefreshToken()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/time/Instant;Ljava/util/Optional;)V

+###io/trino/server/protocol/PreparedStatementEncoder
@372
+#<init>(Lio/trino/server/ProtocolConfig;)V
+#encodePreparedStatementForHeader(Ljava/lang/String;)Ljava/lang/String;
+#decodePreparedStatementFromHeader(Ljava/lang/String;)Ljava/lang/String;

+###io/trino/server/protocol/ProtocolUtil
@386
+#createColumns(Ljava/util/List;Ljava/util/List;Z)Ljava/util/List;
+#createColumn(Ljava/lang/String;Lio/trino/spi/type/Type;Z)Lio/trino/client/Column;
+#toStatementStats(Lio/trino/execution/QueryInfo;)Lio/trino/client/StatementStats;
+#toClientWarning(Lio/trino/spi/TrinoWarning;)Lio/trino/client/Warning;
+#toQueryError(Lio/trino/execution/QueryInfo;)Lio/trino/client/QueryError;
@407
-#createColumns(Ljava/util/List;Ljava/util/List;Z)Ljava/util/List;

+###io/trino/server/FailTaskRequest
@373
+#<init>(Lio/trino/execution/ExecutionFailureInfo;)V
+#getFailureInfo()Lio/trino/execution/ExecutionFailureInfo;
+#toString()Ljava/lang/String;

+###io/trino/server/PluginClassLoader
@370
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/ClassLoader;Ljava/util/List;)V
+#duplicate(Lio/trino/connector/CatalogName;)Lio/trino/server/PluginClassLoader;
+#withUrl(Ljava/net/URL;)Lio/trino/server/PluginClassLoader;
+#getId()Ljava/lang/String;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;
@388
+#toString()Ljava/lang/String;
@392
+#duplicate(Lio/trino/connector/CatalogHandle;)Lio/trino/server/PluginClassLoader;
-#duplicate(Lio/trino/connector/CatalogName;)Lio/trino/server/PluginClassLoader;
@405
+#duplicate(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/server/PluginClassLoader;
-#duplicate(Lio/trino/connector/CatalogHandle;)Lio/trino/server/PluginClassLoader;

+###io/trino/server/StartupStatus
@368
+#<init>()V
+#startupComplete()V
+#isStartupComplete()Z

+###io/trino/testing/LocalQueryRunner$MetadataProvider
@378
+#getMetadata(Lio/trino/FeaturesConfig;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/spi/type/TypeManager;)Lio/trino/metadata/Metadata;
@385
+#getMetadata(Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/spi/type/TypeManager;)Lio/trino/metadata/Metadata;
-#getMetadata(Lio/trino/FeaturesConfig;Lio/trino/metadata/SystemSecurityMetadata;Lio/trino/transaction/TransactionManager;Lio/trino/metadata/GlobalFunctionCatalog;Lio/trino/spi/type/TypeManager;)Lio/trino/metadata/Metadata;

+###io/trino/testing/assertions/Assert$CheckedRunnable
@374
+#run()V

+###io/trino/testing/assertions/TestUtil
@394
+#verifyResultOrFailure(Ljava/util/function/Supplier;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V

+###io/trino/testing/MaterializedResultWithQueryId
@392
+#<init>(Lio/trino/spi/QueryId;Lio/trino/testing/MaterializedResult;)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getResult()Lio/trino/testing/MaterializedResult;

+###io/trino/testing/QueryFailedException
@392
+#<init>(Lio/trino/spi/QueryId;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/QueryId;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getQueryId()Lio/trino/spi/QueryId;

+###io/trino/json/IrPathNodeRef
@383
+#of(Lio/trino/json/ir/IrPathNode;)Lio/trino/json/IrPathNodeRef;
+#getNode()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/json/PathEvaluationError
@383
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#structuralError(Ljava/lang/String;[Ljava/lang/Object;)Lio/trino/spi/TrinoException;
+#itemTypeError(Ljava/lang/String;Ljava/lang/String;)Lio/trino/spi/TrinoException;

+###io/trino/json/JsonPathEvaluator
@383
+#<init>(Lio/trino/json/ir/IrJsonPath;Lio/trino/spi/connector/ConnectorSession;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/metadata/FunctionManager;)V
+#evaluate(Lcom/fasterxml/jackson/databind/JsonNode;[Ljava/lang/Object;)Ljava/util/List;

+###io/trino/json/ir/IrComparisonPredicate$Operator
@383
+#values()[Lio/trino/json/ir/IrComparisonPredicate$Operator;
+#valueOf(Ljava/lang/String;)Lio/trino/json/ir/IrComparisonPredicate$Operator;

+###io/trino/json/ir/SqlJsonLiteralConverter
@383
+#getTypedValue(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/Optional;
+#getTextTypedValue(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/Optional;
+#getNumericTypedValue(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/Optional;
+#getJsonNode(Lio/trino/json/ir/TypedValue;)Ljava/util/Optional;
+#conversionError(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lio/trino/spi/TrinoException;

+###io/trino/json/ir/IrMemberAccessor
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;Ljava/util/Optional;)V
+#getKey()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrSizeMethod
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V

+###io/trino/json/ir/IrNamedJsonVariable
@383
+#<init>(ILjava/util/Optional;)V
+#getIndex()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrNamedValueVariable
@383
+#<init>(ILjava/util/Optional;)V
+#getIndex()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrConjunctionPredicate
@383
+#<init>(Lio/trino/json/ir/IrPredicate;Lio/trino/json/ir/IrPredicate;)V
+#getLeft()Lio/trino/json/ir/IrPathNode;
+#getRight()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrExistsPredicate
@383
+#<init>(Lio/trino/json/ir/IrPathNode;)V
+#getPath()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/SqlJsonLiteralConverter$JsonLiteralConversionError
@383
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)V

+###io/trino/json/ir/IrCeilingMethod
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V

+###io/trino/json/ir/IrArithmeticUnary$Sign
@383
+#values()[Lio/trino/json/ir/IrArithmeticUnary$Sign;
+#valueOf(Ljava/lang/String;)Lio/trino/json/ir/IrArithmeticUnary$Sign;
+#getSign()Ljava/lang/String;

+###io/trino/json/ir/IrArithmeticUnary
@383
+#<init>(Lio/trino/json/ir/IrArithmeticUnary$Sign;Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V
+#getSign()Lio/trino/json/ir/IrArithmeticUnary$Sign;
+#getBase()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrDatetimeMethod
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;Ljava/util/Optional;)V
+#getFormat()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrKeyValueMethod
@383
+#<init>(Lio/trino/json/ir/IrPathNode;)V

+###io/trino/json/ir/IrConstantJsonSequence
@383
+#singletonSequence(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/util/Optional;)Lio/trino/json/ir/IrConstantJsonSequence;
+#<init>(Ljava/util/List;Ljava/util/Optional;)V
+#getSequence()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrPredicateCurrentItemVariable
@383
+#<init>(Ljava/util/Optional;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrLastIndexVariable
@383
+#<init>(Ljava/util/Optional;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrArithmeticBinary
@383
+#<init>(Lio/trino/json/ir/IrArithmeticBinary$Operator;Lio/trino/json/ir/IrPathNode;Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V
+#getOperator()Lio/trino/json/ir/IrArithmeticBinary$Operator;
+#getLeft()Lio/trino/json/ir/IrPathNode;
+#getRight()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrAccessor
@383
+#getBase()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrMethod
@383

+###io/trino/json/ir/IrPredicate
@383

+###io/trino/json/ir/IrArrayAccessor
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/List;Ljava/util/Optional;)V
+#getSubscripts()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrDisjunctionPredicate
@383
+#<init>(Lio/trino/json/ir/IrPredicate;Lio/trino/json/ir/IrPredicate;)V
+#getLeft()Lio/trino/json/ir/IrPathNode;
+#getRight()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrNegationPredicate
@383
+#<init>(Lio/trino/json/ir/IrPredicate;)V
+#getPredicate()Lio/trino/json/ir/IrPredicate;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrContextVariable
@383
+#<init>(Ljava/util/Optional;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrAbsMethod
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V

+###io/trino/json/ir/IrArithmeticBinary$Operator
@383
+#values()[Lio/trino/json/ir/IrArithmeticBinary$Operator;
+#valueOf(Ljava/lang/String;)Lio/trino/json/ir/IrArithmeticBinary$Operator;
+#getType()Lio/trino/spi/function/OperatorType;

+###io/trino/json/ir/IrDoubleMethod
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V

+###io/trino/json/ir/IrFilter
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Lio/trino/json/ir/IrPredicate;Ljava/util/Optional;)V
+#getPredicate()Lio/trino/json/ir/IrPredicate;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrLiteral
@383
+#<init>(Lio/trino/spi/type/Type;Ljava/lang/Object;)V
+#fromJson(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/json/ir/IrLiteral;[deprecated]
+#getValue()Ljava/lang/Object;
+#getValueAsBlock()Lio/trino/spi/block/Block;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/TypedValue
@383
+#<init>(Lio/trino/spi/type/Type;Ljava/lang/Object;)V
+#<init>(Lio/trino/spi/type/Type;J)V
+#<init>(Lio/trino/spi/type/Type;D)V
+#<init>(Lio/trino/spi/type/Type;Z)V
+#fromValueAsObject(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/json/ir/TypedValue;
+#getType()Lio/trino/spi/type/Type;
+#getObjectValue()Ljava/lang/Object;
+#getLongValue()J
+#getDoubleValue()D
+#getBooleanValue()Z
+#getValueAsObject()Ljava/lang/Object;

+###io/trino/json/ir/IrStartsWithPredicate
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Lio/trino/json/ir/IrPathNode;)V
+#getValue()Lio/trino/json/ir/IrPathNode;
+#getPrefix()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrArrayAccessor$Subscript
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V
+#getFrom()Lio/trino/json/ir/IrPathNode;
+#getTo()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrTypeMethod
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V

+###io/trino/json/ir/IrIsUnknownPredicate
@383
+#<init>(Lio/trino/json/ir/IrPredicate;)V
+#getPredicate()Lio/trino/json/ir/IrPredicate;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrJsonPath
@383
+#<init>(ZLio/trino/json/ir/IrPathNode;)V
+#isLax()Z
+#getRoot()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrPathNode
@383
+#getType()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrJsonNull
@383
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrComparisonPredicate
@383
+#<init>(Lio/trino/json/ir/IrComparisonPredicate$Operator;Lio/trino/json/ir/IrPathNode;Lio/trino/json/ir/IrPathNode;)V
+#getOperator()Lio/trino/json/ir/IrComparisonPredicate$Operator;
+#getLeft()Lio/trino/json/ir/IrPathNode;
+#getRight()Lio/trino/json/ir/IrPathNode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/json/ir/IrFloorMethod
@383
+#<init>(Lio/trino/json/ir/IrPathNode;Ljava/util/Optional;)V

+###io/trino/json/ir/IrJsonPathVisitor
@383
+#<init>()V
+#process(Lio/trino/json/ir/IrPathNode;)Ljava/lang/Object;
+#process(Lio/trino/json/ir/IrPathNode;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/json/JsonInputErrorNode
@383
+#deepCopy()Lcom/fasterxml/jackson/databind/JsonNode;
+#asToken()Lcom/fasterxml/jackson/core/JsonToken;
+#numberType()Lcom/fasterxml/jackson/core/JsonParser$NumberType;
+#get(I)Lcom/fasterxml/jackson/databind/JsonNode;
+#path(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#path(I)Lcom/fasterxml/jackson/databind/JsonNode;
+#traverse()Lcom/fasterxml/jackson/core/JsonParser;
+#traverse(Lcom/fasterxml/jackson/core/ObjectCodec;)Lcom/fasterxml/jackson/core/JsonParser;
+#getNodeType()Lcom/fasterxml/jackson/databind/node/JsonNodeType;
+#asText()Ljava/lang/String;
+#findValue(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#findPath(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#findParent(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#findValues(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#findValuesAsText(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#findParents(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#serialize(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serializeWithType(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
+#path(I)Lcom/fasterxml/jackson/core/TreeNode;
+#path(Ljava/lang/String;)Lcom/fasterxml/jackson/core/TreeNode;
+#get(I)Lcom/fasterxml/jackson/core/TreeNode;

+###io/trino/json/JsonEmptySequenceNode
@383
+#deepCopy()Lcom/fasterxml/jackson/databind/JsonNode;
+#asToken()Lcom/fasterxml/jackson/core/JsonToken;
+#numberType()Lcom/fasterxml/jackson/core/JsonParser$NumberType;
+#get(I)Lcom/fasterxml/jackson/databind/JsonNode;
+#path(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#path(I)Lcom/fasterxml/jackson/databind/JsonNode;
+#traverse()Lcom/fasterxml/jackson/core/JsonParser;
+#traverse(Lcom/fasterxml/jackson/core/ObjectCodec;)Lcom/fasterxml/jackson/core/JsonParser;
+#getNodeType()Lcom/fasterxml/jackson/databind/node/JsonNodeType;
+#asText()Ljava/lang/String;
+#findValue(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#findPath(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#findParent(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#findValues(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#findValuesAsText(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#findParents(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#serialize(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serializeWithType(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
+#path(I)Lcom/fasterxml/jackson/core/TreeNode;
+#path(Ljava/lang/String;)Lcom/fasterxml/jackson/core/TreeNode;
+#get(I)Lcom/fasterxml/jackson/core/TreeNode;

+###io/trino/json/PathEvaluationUtil
@383
+#unwrapArrays(Ljava/util/List;)Ljava/util/List;

+###io/trino/json/CachingResolver
@383
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/type/TypeManager;)V
+#getOperators(Lio/trino/json/ir/IrPathNode;Lio/trino/spi/function/OperatorType;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/json/CachingResolver$ResolvedOperatorAndCoercions;

+###io/trino/json/CachingResolver$ResolvedOperatorAndCoercions
@383
+#operators(Lio/trino/metadata/ResolvedFunction;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/json/CachingResolver$ResolvedOperatorAndCoercions;
+#getOperator()Lio/trino/metadata/ResolvedFunction;
+#getLeftCoercion()Ljava/util/Optional;
+#getRightCoercion()Ljava/util/Optional;

+###io/trino/json/JsonPathInvocationContext
@383
+#<init>()V
+#getEvaluator()Lio/trino/json/JsonPathEvaluator;
+#setEvaluator(Lio/trino/json/JsonPathEvaluator;)V

+###io/trino/json/PathEvaluationContext
@383
+#<init>()V
+#withLast(J)Lio/trino/json/PathEvaluationContext;
+#withCurrentItem(Ljava/lang/Object;)Lio/trino/json/PathEvaluationContext;
+#getLast()Lio/trino/json/ir/TypedValue;
+#getCurrentItem()Ljava/lang/Object;

+###io/trino/json/JsonPathEvaluator$Invoker
@383
+#<init>(Lio/trino/spi/connector/ConnectorSession;Lio/trino/metadata/FunctionManager;)V
+#invoke(Lio/trino/metadata/ResolvedFunction;Ljava/util/List;)Ljava/lang/Object;

+###io/trino/type/Json2016Type
@383
+#<init>()V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V

+###io/trino/type/JsonPath2016Type
@383
+#<init>(Lio/trino/type/TypeDeserializer;Lio/trino/spi/block/BlockEncodingSerde;)V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V

+###io/trino/execution/TaskFailureListener
@366
+#onTaskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V

+###io/trino/execution/FailureInjectionConfig
@366
+#<init>()V
+#getExpirationPeriod()Lio/airlift/units/Duration;
+#setExpirationPeriod(Lio/airlift/units/Duration;)Lio/trino/execution/FailureInjectionConfig;
+#getRequestTimeout()Lio/airlift/units/Duration;
+#setRequestTimeout(Lio/airlift/units/Duration;)Lio/trino/execution/FailureInjectionConfig;

+###io/trino/execution/SqlStage
@366
+#createSqlStage(Lio/trino/execution/StageId;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lio/trino/execution/RemoteTaskFactory;Lio/trino/Session;ZLio/trino/execution/NodeTaskMap;Ljava/util/concurrent/Executor;Lio/trino/execution/scheduler/SplitSchedulerStats;)Lio/trino/execution/SqlStage;
+#getStageId()Lio/trino/execution/StageId;
+#finish()V
+#abort()V
+#fail(Ljava/lang/Throwable;)V
+#addFinalStageInfoListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#getFragment()Lio/trino/sql/planner/PlanFragment;
+#getUserMemoryReservation()J
+#getTotalMemoryReservation()J
+#getTotalCpuTime()Lio/airlift/units/Duration;
+#getBasicStageStats()Lio/trino/execution/BasicStageStats;
+#getStageInfo()Lio/trino/execution/StageInfo;
+#createTask(Lio/trino/metadata/InternalNode;IILjava/util/Optional;Lio/trino/execution/buffer/OutputBuffers;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Ljava/util/Set;)Ljava/util/Optional;
+#recordGetSplitTime(J)V
+#toString()Ljava/lang/String;
@379
+#createTask(Lio/trino/metadata/InternalNode;IILjava/util/Optional;Lio/trino/execution/buffer/OutputBuffers;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/Optional;)Ljava/util/Optional;
-#createTask(Lio/trino/metadata/InternalNode;IILjava/util/Optional;Lio/trino/execution/buffer/OutputBuffers;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Ljava/util/Set;)Ljava/util/Optional;
@388
+#createTask(Lio/trino/metadata/InternalNode;IILjava/util/Optional;Lio/trino/execution/buffer/OutputBuffers;Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/Optional;)Ljava/util/Optional;
-#createTask(Lio/trino/metadata/InternalNode;IILjava/util/Optional;Lio/trino/execution/buffer/OutputBuffers;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/Optional;)Ljava/util/Optional;
@394
+#failTaskRemotely(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@401
+#getState()Lio/trino/execution/StageState;

+###io/trino/execution/FailureInjector$InjectedErrorCode
@366
+#values()[Lio/trino/execution/FailureInjector$InjectedErrorCode;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/FailureInjector$InjectedErrorCode;
+#toErrorCode()Lio/trino/spi/ErrorCode;
+#getErrorCode(Lio/trino/spi/ErrorType;)Lio/trino/execution/FailureInjector$InjectedErrorCode;

+###io/trino/execution/scheduler/FaultTolerantQueryScheduler
@394
+#<init>(Lio/trino/execution/QueryStateMachine;Ljava/util/concurrent/ExecutorService;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/spi/exchange/ExchangeManager;Lio/trino/sql/planner/NodePartitioningManager;IIILjava/util/concurrent/ScheduledExecutorService;Lio/trino/execution/scheduler/NodeAllocatorService;Lio/trino/execution/scheduler/PartitionMemoryEstimatorFactory;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/server/DynamicFilterService;Lio/trino/metadata/Metadata;Lio/trino/execution/RemoteTaskFactory;Lio/trino/execution/NodeTaskMap;Lio/trino/sql/planner/SubPlan;Z)V
+#start()V
+#cancelStage(Lio/trino/execution/StageId;)V
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#getBasicStageStats()Lio/trino/execution/BasicStageStats;
+#getStageInfo()Lio/trino/execution/StageInfo;
+#getUserMemoryReservation()J
+#getTotalMemoryReservation()J
+#getTotalCpuTime()Lio/airlift/units/Duration;
@407
-###io/trino/execution/scheduler/FaultTolerantQueryScheduler

+###io/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource
@369
+#create(Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource;
+#<init>(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)V
+#getMoreTasks()Ljava/util/List;
+#isFinished()Z
+#close()V
@372
+#<init>(Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)V
-#<init>(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)V
@374
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource;
+#<init>(Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;)V
-#create(Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource;
-#<init>(Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)V
@382
+#getMoreTasks()Lcom/google/common/util/concurrent/ListenableFuture;
-#getMoreTasks()Ljava/util/List;
@385
-#<init>(Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;)V
@395
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource;
@397
+#create(Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource;
@407
-###io/trino/execution/scheduler/StageTaskSourceFactory$ArbitraryDistributionTaskSource

+###io/trino/execution/scheduler/StageExecution$State
@368
+#values()[Lio/trino/execution/scheduler/StageExecution$State;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/StageExecution$State;
+#isDone()Z
+#isFailure()Z
+#canScheduleMoreTasks()Z

+###io/trino/execution/scheduler/PipelinedQueryScheduler
@394
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/sql/planner/SubPlan;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/execution/RemoteTaskFactory;ZILjava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/NodeTaskMap;Lio/trino/execution/scheduler/policy/ExecutionPolicy;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/server/DynamicFilterService;Lio/trino/execution/TableExecuteContextManager;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/SqlTaskManager;)V
+#start()V
+#cancelStage(Lio/trino/execution/StageId;)V
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#getBasicStageStats()Lio/trino/execution/BasicStageStats;
+#getStageInfo()Lio/trino/execution/StageInfo;
+#getUserMemoryReservation()J
+#getTotalMemoryReservation()J
+#getTotalCpuTime()Lio/airlift/units/Duration;

+###io/trino/execution/scheduler/NodeAllocator
@369
+#acquire(Lio/trino/execution/scheduler/NodeRequirements;)Lcom/google/common/util/concurrent/ListenableFuture;
+#release(Lio/trino/metadata/InternalNode;)V
+#updateNodes()V
+#close()V
@374
+#acquire(Lio/trino/execution/scheduler/NodeRequirements;)Lio/trino/execution/scheduler/NodeAllocator$NodeLease;
-#acquire(Lio/trino/execution/scheduler/NodeRequirements;)Lcom/google/common/util/concurrent/ListenableFuture;
-#release(Lio/trino/metadata/InternalNode;)V
-#updateNodes()V
@397
+#acquire(Lio/trino/execution/scheduler/NodeRequirements;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/NodeAllocator$NodeLease;
-#acquire(Lio/trino/execution/scheduler/NodeRequirements;)Lio/trino/execution/scheduler/NodeAllocator$NodeLease;

+###io/trino/execution/scheduler/FixedCountNodeAllocatorService
@374
+#<init>(Lio/trino/execution/scheduler/NodeScheduler;)V
+#start()V
+#stop()V
+#getNodeAllocator(Lio/trino/Session;)Lio/trino/execution/scheduler/NodeAllocator;

+###io/trino/execution/scheduler/ErrorCodes
@378
+#isOutOfMemoryError(Lio/trino/spi/ErrorCode;)Z
@406
+#isWorkerCrashAssociatedError(Lio/trino/spi/ErrorCode;)Z

+###io/trino/execution/scheduler/ConstantPartitionMemoryEstimator
@374
+#<init>()V
+#getInitialMemoryRequirements(Lio/trino/Session;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
+#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
@375
+#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/airlift/units/DataSize;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
-#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
@377
+#registerPartitionFinished(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/airlift/units/DataSize;ZLjava/util/Optional;)V

+###io/trino/execution/scheduler/FaultTolerantStageScheduler
@369
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;I)V
+#getStageId()Lio/trino/execution/StageId;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#schedule()V
+#isFinished()Z
+#cancel()V
+#abort()V
+#reportTaskFailure(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@371
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;I)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;I)V
@373
+#failTaskRemotely(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@374
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;II)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;I)V
@376
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;I)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;II)V
@377
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;II)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;I)V
@378
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskLifecycleListener;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;II)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskLifecycleListener;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;II)V
@379
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/TaskLifecycleListener;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;II)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskLifecycleListener;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;II)V
@392
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/TaskLifecycleListener;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;IILio/trino/server/DynamicFilterService;)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/TaskLifecycleListener;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;II)V
@394
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Lio/trino/spi/exchange/Exchange;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;IILio/trino/server/DynamicFilterService;)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/TaskLifecycleListener;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;IILio/trino/server/DynamicFilterService;)V
-#reportTaskFailure(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
-#failTaskRemotely(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@397
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Lio/trino/spi/exchange/Exchange;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/Map;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/concurrent/atomic/AtomicInteger;IILio/trino/server/DynamicFilterService;)V
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Lio/trino/spi/exchange/Exchange;Ljava/util/Optional;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/concurrent/atomic/AtomicInteger;IILio/trino/server/DynamicFilterService;)V
@400
+#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Lio/trino/spi/exchange/Exchange;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/Map;Ljava/util/Map;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/concurrent/atomic/AtomicInteger;IILio/trino/server/DynamicFilterService;)V
+#getSuccessfulAttempts()Ljava/util/Map;
-#<init>(Lio/trino/Session;Lio/trino/execution/SqlStage;Lio/trino/failuredetector/FailureDetector;Lio/trino/execution/scheduler/TaskSourceFactory;Lio/trino/execution/scheduler/NodeAllocator;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/PartitionMemoryEstimator;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor;Lcom/google/common/base/Ticker;Lio/trino/spi/exchange/Exchange;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/Map;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/concurrent/atomic/AtomicInteger;IILio/trino/server/DynamicFilterService;)V
@407
-###io/trino/execution/scheduler/FaultTolerantStageScheduler

+###io/trino/execution/scheduler/NodeAllocatorService
@374
+#getNodeAllocator(Lio/trino/Session;)Lio/trino/execution/scheduler/NodeAllocator;

+###io/trino/execution/scheduler/PartitionMemoryEstimator
@374
+#getInitialMemoryRequirements(Lio/trino/Session;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
+#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
@375
+#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/airlift/units/DataSize;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
-#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
@377
+#registerPartitionFinished(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/airlift/units/DataSize;ZLjava/util/Optional;)V

+###io/trino/execution/scheduler/TaskExecutionStats$FailedTasksStats
@379
+#<init>()V
+#update(Lio/trino/execution/TaskInfo;)V
+#getUserError()Lio/trino/execution/scheduler/TaskExecutionStats$ExecutionStats;
+#getInternalError()Lio/trino/execution/scheduler/TaskExecutionStats$ExecutionStats;
+#getExternalError()Lio/trino/execution/scheduler/TaskExecutionStats$ExecutionStats;
+#getInsufficientResources()Lio/trino/execution/scheduler/TaskExecutionStats$ExecutionStats;

+###io/trino/execution/scheduler/BinPackingNodeAllocatorService$BinPackingSimulation$ReserveResult
@375
+#reserved(Lio/trino/metadata/InternalNode;)Lio/trino/execution/scheduler/BinPackingNodeAllocatorService$BinPackingSimulation$ReserveResult;
+#getStatus()Lio/trino/execution/scheduler/BinPackingNodeAllocatorService$BinPackingSimulation$ReservationStatus;
+#getNode()Ljava/util/Optional;

+###io/trino/execution/scheduler/QueryScheduler
@394
+#start()V
+#cancelStage(Lio/trino/execution/StageId;)V
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#getBasicStageStats()Lio/trino/execution/BasicStageStats;
+#getStageInfo()Lio/trino/execution/StageInfo;
+#getUserMemoryReservation()J
+#getTotalMemoryReservation()J
+#getTotalCpuTime()Lio/airlift/units/Duration;

+###io/trino/execution/scheduler/TaskExecutionStats
@379
+#<init>()V
+#update(Lio/trino/execution/TaskInfo;)V
+#getFinishedTasks()Lio/trino/execution/scheduler/TaskExecutionStats$ExecutionStats;
+#getAbortedTasks()Lio/trino/execution/scheduler/TaskExecutionStats$ExecutionStats;
+#getFailedTasks()Lio/trino/execution/scheduler/TaskExecutionStats$FailedTasksStats;

+###io/trino/execution/scheduler/StageTaskSourceFactory$SourceDistributionTaskSource
@369
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;Lio/trino/execution/TableExecuteContextManager;ILjava/util/function/LongConsumer;I)Lio/trino/execution/scheduler/StageTaskSourceFactory$SourceDistributionTaskSource;
+#<init>(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/TableExecuteContextManager;Lio/trino/split/SplitSource;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;Ljava/util/Optional;I)V
+#getMoreTasks()Ljava/util/List;
+#isFinished()Z
+#close()V
@371
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;Lio/trino/execution/TableExecuteContextManager;ILjava/util/function/LongConsumer;IJI)Lio/trino/execution/scheduler/StageTaskSourceFactory$SourceDistributionTaskSource;
+#<init>(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/TableExecuteContextManager;Lio/trino/split/SplitSource;Lcom/google/common/collect/ListMultimap;ILjava/util/function/LongConsumer;Ljava/util/Optional;IJI)V
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;Lio/trino/execution/TableExecuteContextManager;ILjava/util/function/LongConsumer;I)Lio/trino/execution/scheduler/StageTaskSourceFactory$SourceDistributionTaskSource;
-#<init>(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/TableExecuteContextManager;Lio/trino/split/SplitSource;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;Ljava/util/Optional;I)V
@374
+#<init>(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/TableExecuteContextManager;Lio/trino/split/SplitSource;Lcom/google/common/collect/ListMultimap;ILjava/util/function/LongConsumer;Ljava/util/Optional;IJILio/airlift/units/DataSize;)V
-#<init>(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/TableExecuteContextManager;Lio/trino/split/SplitSource;Lcom/google/common/collect/ListMultimap;ILjava/util/function/LongConsumer;Ljava/util/Optional;IJI)V
@382
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;Lio/trino/execution/TableExecuteContextManager;ILjava/util/function/LongConsumer;IJILjava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$SourceDistributionTaskSource;
+#<init>(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/TableExecuteContextManager;Lio/trino/split/SplitSource;Lcom/google/common/collect/ListMultimap;ILjava/util/function/LongConsumer;Ljava/util/Optional;IJILio/airlift/units/DataSize;Ljava/util/concurrent/Executor;)V
+#getMoreTasks()Lcom/google/common/util/concurrent/ListenableFuture;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;Lio/trino/execution/TableExecuteContextManager;ILjava/util/function/LongConsumer;IJI)Lio/trino/execution/scheduler/StageTaskSourceFactory$SourceDistributionTaskSource;
-#<init>(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/TableExecuteContextManager;Lio/trino/split/SplitSource;Lcom/google/common/collect/ListMultimap;ILjava/util/function/LongConsumer;Ljava/util/Optional;IJILio/airlift/units/DataSize;)V
-#getMoreTasks()Ljava/util/List;
@385
-#<init>(Lio/trino/spi/QueryId;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/execution/TableExecuteContextManager;Lio/trino/split/SplitSource;Lcom/google/common/collect/ListMultimap;ILjava/util/function/LongConsumer;Ljava/util/Optional;IJILio/airlift/units/DataSize;Ljava/util/concurrent/Executor;)V
@407
-###io/trino/execution/scheduler/StageTaskSourceFactory$SourceDistributionTaskSource

+###io/trino/execution/scheduler/NodeSchedulerConfig$NodeAllocatorType
@374
+#values()[Lio/trino/execution/scheduler/NodeSchedulerConfig$NodeAllocatorType;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/NodeSchedulerConfig$NodeAllocatorType;

+###io/trino/execution/scheduler/TaskDescriptorStorage
@371
+#<init>(Lio/trino/execution/QueryManagerConfig;)V
+#<init>(Lio/airlift/units/DataSize;)V
+#initialize(Lio/trino/spi/QueryId;)V
+#put(Lio/trino/execution/StageId;Lio/trino/execution/scheduler/TaskDescriptor;)V
+#get(Lio/trino/execution/StageId;I)Ljava/util/Optional;
+#destroy(Lio/trino/spi/QueryId;)V
+#getReservedBytes()J
@382
+#remove(Lio/trino/execution/StageId;I)V

+###io/trino/execution/scheduler/TaskSource
@369
+#getMoreTasks()Ljava/util/List;
+#isFinished()Z
+#close()V
@382
+#getMoreTasks()Lcom/google/common/util/concurrent/ListenableFuture;
-#getMoreTasks()Ljava/util/List;
@407
-###io/trino/execution/scheduler/TaskSource

+###io/trino/execution/scheduler/BinPackingNodeAllocatorService
@375
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/memory/ClusterMemoryManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#start()V
+#stop()V
+#getNodeAllocator(Lio/trino/Session;)Lio/trino/execution/scheduler/NodeAllocator;
+#acquire(Lio/trino/execution/scheduler/NodeRequirements;)Lio/trino/execution/scheduler/NodeAllocator$NodeLease;
+#close()V
@377
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/memory/ClusterMemoryManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;Lio/trino/memory/MemoryManagerConfig;)V
+#createPartitionMemoryEstimator()Lio/trino/execution/scheduler/PartitionMemoryEstimator;
-#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/memory/ClusterMemoryManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
@397
+#acquire(Lio/trino/execution/scheduler/NodeRequirements;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/NodeAllocator$NodeLease;
-#acquire(Lio/trino/execution/scheduler/NodeRequirements;)Lio/trino/execution/scheduler/NodeAllocator$NodeLease;

+###io/trino/execution/scheduler/NodeRequirements
@369
+#<init>(Ljava/util/Optional;Ljava/util/Set;)V
+#getCatalogName()Ljava/util/Optional;
+#getAddresses()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@371
+#getRetainedSizeInBytes()J
@374
+#<init>(Ljava/util/Optional;Ljava/util/Set;Lio/airlift/units/DataSize;)V
+#getMemory()Lio/airlift/units/DataSize;
+#withMemory(Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/NodeRequirements;
-#<init>(Ljava/util/Optional;Ljava/util/Set;)V
@392
+#getCatalogHandle()Ljava/util/Optional;
-#getCatalogName()Ljava/util/Optional;
@397
+#<init>(Ljava/util/Optional;Ljava/util/Set;)V
-#<init>(Ljava/util/Optional;Ljava/util/Set;Lio/airlift/units/DataSize;)V
-#getMemory()Lio/airlift/units/DataSize;
-#withMemory(Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/NodeRequirements;

+###io/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource
@369
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
+#<init>(Ljava/util/Map;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;Ljava/util/Optional;)V
+#getMoreTasks()Ljava/util/List;
+#isFinished()Z
+#close()V
@373
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/Map;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;JLio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
+#<init>(Ljava/util/Map;Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;Ljava/util/Optional;JLio/airlift/units/DataSize;)V
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
-#<init>(Ljava/util/Map;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;Ljava/util/Optional;)V
@374
+#<init>(Ljava/util/Map;Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;Ljava/util/Optional;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;)V
-#<init>(Ljava/util/Map;Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;Ljava/util/Optional;JLio/airlift/units/DataSize;)V
@382
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/Map;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;JLio/airlift/units/DataSize;Ljava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
+#<init>(Ljava/util/Map;Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;Ljava/util/Optional;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/concurrent/Executor;)V
+#getMoreTasks()Lcom/google/common/util/concurrent/ListenableFuture;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/Map;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;JLio/airlift/units/DataSize;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
-#<init>(Ljava/util/Map;Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;Ljava/util/Optional;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;)V
-#getMoreTasks()Ljava/util/List;
@385
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/Map;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;JLio/airlift/units/DataSize;ZLjava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/Map;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;JLio/airlift/units/DataSize;Ljava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
-#<init>(Ljava/util/Map;Ljava/util/IdentityHashMap;Lcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;Ljava/util/Optional;JLio/airlift/units/DataSize;Lio/airlift/units/DataSize;Ljava/util/concurrent/Executor;)V
@395
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;JLio/airlift/units/DataSize;ZLjava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/Map;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;JLio/airlift/units/DataSize;ZLjava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
@397
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;JLio/airlift/units/DataSize;ZLjava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;[ILjava/util/Optional;JLio/airlift/units/DataSize;ZLjava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
@405
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;JLio/airlift/units/DataSize;Ljava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lio/trino/sql/planner/SplitSourceFactory;Lcom/google/common/collect/Multimap;ILjava/util/function/LongConsumer;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;JLio/airlift/units/DataSize;ZLjava/util/concurrent/Executor;)Lio/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource;
@407
-###io/trino/execution/scheduler/StageTaskSourceFactory$HashDistributionTaskSource

+###io/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor
@378
+#completeFuture(Lcom/google/common/util/concurrent/SettableFuture;Ljava/time/Duration;)V
@407
-###io/trino/execution/scheduler/FaultTolerantStageScheduler$DelayedFutureCompletor

+###io/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements
@374
+#getRequiredMemory()Lio/airlift/units/DataSize;
+#isLimitReached()Z
@375
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@397
-#isLimitReached()Z

+###io/trino/execution/scheduler/StageExecution
@368
+#getStageId()Lio/trino/execution/StageId;
+#getAttemptId()I
+#getFragment()Lio/trino/sql/planner/PlanFragment;
+#isAnyTaskBlocked()Z
+#beginScheduling()V
+#transitionToSchedulingSplits()V
+#getState()Lio/trino/execution/scheduler/StageExecution$State;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addCompletedDriverGroupsChangedListener(Ljava/util/function/Consumer;)V
+#getTaskLifecycleListener()Lio/trino/execution/scheduler/TaskLifecycleListener;
+#schedulingComplete()V
+#schedulingComplete(Lio/trino/sql/planner/plan/PlanNodeId;)V
+#cancel()V
+#abort()V
+#recordGetSplitTime(J)V
+#scheduleTask(Lio/trino/metadata/InternalNode;ILcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;)Ljava/util/Optional;
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#getAllTasks()Ljava/util/List;
+#getTaskStatuses()Ljava/util/List;
+#getFailureCause()Ljava/util/Optional;
@373
+#failTaskRemotely(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@388
+#scheduleTask(Lio/trino/metadata/InternalNode;ILcom/google/common/collect/Multimap;)Ljava/util/Optional;
-#addCompletedDriverGroupsChangedListener(Ljava/util/function/Consumer;)V
-#scheduleTask(Lio/trino/metadata/InternalNode;ILcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;)Ljava/util/Optional;
@394
-#failTaskRemotely(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V

+###io/trino/execution/scheduler/StageTaskSourceFactory
@369
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;Lio/trino/execution/QueryManagerConfig;)V
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;I)V
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/execution/scheduler/TaskSource;
@382
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;Lio/trino/execution/QueryManagerConfig;Ljava/util/concurrent/ExecutorService;)V
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;ILjava/util/concurrent/ExecutorService;)V
-#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;Lio/trino/execution/QueryManagerConfig;)V
-#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;I)V
@394
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;Lio/trino/execution/QueryManagerConfig;Ljava/util/concurrent/ExecutorService;Lio/trino/metadata/InternalNodeManager;)V
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;ILjava/util/concurrent/ExecutorService;Lio/trino/metadata/InternalNodeManager;)V
-#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;Lio/trino/execution/QueryManagerConfig;Ljava/util/concurrent/ExecutorService;)V
-#<init>(Lio/trino/sql/planner/SplitSourceFactory;Lio/trino/execution/TableExecuteContextManager;ILjava/util/concurrent/ExecutorService;)V
@395
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/execution/scheduler/TaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/execution/scheduler/TaskSource;
@397
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;)Lio/trino/execution/scheduler/TaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/execution/scheduler/TaskSource;
@407
-###io/trino/execution/scheduler/StageTaskSourceFactory

+###io/trino/execution/scheduler/TaskExecutionStats$ExecutionStats
@379
+#<init>()V
+#update(Lio/trino/operator/TaskStats;)V
+#getElapsedTime()Lio/airlift/stats/TimeStat;
+#getScheduledTime()Lio/airlift/stats/TimeStat;
+#getCpuTime()Lio/airlift/stats/TimeStat;
+#getInputBlockedTime()Lio/airlift/stats/TimeStat;
+#getOutputBlockedTime()Lio/airlift/stats/TimeStat;
+#getPeakMemoryReservationInBytes()Lio/airlift/stats/DistributionStat;

+###io/trino/execution/scheduler/PartitionIdAllocator
@366
+#<init>()V
+#getNextId()I

+###io/trino/execution/scheduler/TaskLifecycleListener
@366
+#taskCreated(Lio/trino/sql/planner/plan/PlanFragmentId;Lio/trino/execution/RemoteTask;)V
+#noMoreTasks(Lio/trino/sql/planner/plan/PlanFragmentId;)V

+###io/trino/execution/scheduler/NodeSchedulerConfig$SplitsBalancingPolicy
@369
+#values()[Lio/trino/execution/scheduler/NodeSchedulerConfig$SplitsBalancingPolicy;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/NodeSchedulerConfig$SplitsBalancingPolicy;

+###io/trino/execution/scheduler/PipelinedStageExecution
@366
+#createPipelinedStageExecution(Lio/trino/execution/SqlStage;Ljava/util/Map;Lio/trino/execution/scheduler/TaskLifecycleListener;Lio/trino/failuredetector/FailureDetector;Ljava/util/concurrent/Executor;Ljava/util/Optional;I)Lio/trino/execution/scheduler/PipelinedStageExecution;
+#getState()Lio/trino/execution/scheduler/PipelinedStageExecution$State;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#addCompletedDriverGroupsChangedListener(Ljava/util/function/Consumer;)V
+#beginScheduling()V
+#transitionToSchedulingSplits()V
+#schedulingComplete()V
+#schedulingComplete(Lio/trino/sql/planner/plan/PlanNodeId;)V
+#cancel()V
+#abort()V
+#fail(Ljava/lang/Throwable;)V
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#scheduleTask(Lio/trino/metadata/InternalNode;ILcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;)Ljava/util/Optional;
+#getTaskLifecycleListener()Lio/trino/execution/scheduler/TaskLifecycleListener;
+#getAllTasks()Ljava/util/List;
+#getTaskStatuses()Ljava/util/List;
+#isAnyTaskBlocked()Z
+#recordGetSplitTime(J)V
+#getStageId()Lio/trino/execution/StageId;
+#getFragment()Lio/trino/sql/planner/PlanFragment;
+#getFailureCause()Ljava/util/Optional;
@367
+#getAttemptId()I
@368
+#getState()Lio/trino/execution/scheduler/StageExecution$State;
-#getState()Lio/trino/execution/scheduler/PipelinedStageExecution$State;
@373
+#failTaskRemotely(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@388
+#scheduleTask(Lio/trino/metadata/InternalNode;ILcom/google/common/collect/Multimap;)Ljava/util/Optional;
-#addCompletedDriverGroupsChangedListener(Ljava/util/function/Consumer;)V
-#scheduleTask(Lio/trino/metadata/InternalNode;ILcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;)Ljava/util/Optional;
@394
-#failTaskRemotely(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
@403
+#toString()Ljava/lang/String;

+###io/trino/execution/scheduler/TaskDescriptor
@369
+#<init>(ILcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Lio/trino/execution/scheduler/NodeRequirements;)V
+#getPartitionId()I
+#getSplits()Lcom/google/common/collect/Multimap;
+#getExchangeSourceHandles()Lcom/google/common/collect/Multimap;
+#getNodeRequirements()Lio/trino/execution/scheduler/NodeRequirements;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@371
+#<init>(ILcom/google/common/collect/ListMultimap;Lcom/google/common/collect/ListMultimap;Lio/trino/execution/scheduler/NodeRequirements;)V
+#getSplits()Lcom/google/common/collect/ListMultimap;
+#getExchangeSourceHandles()Lcom/google/common/collect/ListMultimap;
+#getRetainedSizeInBytes()J
-#<init>(ILcom/google/common/collect/Multimap;Lcom/google/common/collect/Multimap;Lio/trino/execution/scheduler/NodeRequirements;)V
-#getSplits()Lcom/google/common/collect/Multimap;
-#getExchangeSourceHandles()Lcom/google/common/collect/Multimap;
@397
+#<init>(ILcom/google/common/collect/ListMultimap;Lio/trino/execution/scheduler/NodeRequirements;)V
-#<init>(ILcom/google/common/collect/ListMultimap;Lcom/google/common/collect/ListMultimap;Lio/trino/execution/scheduler/NodeRequirements;)V
-#getExchangeSourceHandles()Lcom/google/common/collect/ListMultimap;

+###io/trino/execution/scheduler/BinPackingNodeAllocatorService$BinPackingSimulation$ReservationStatus
@375
+#values()[Lio/trino/execution/scheduler/BinPackingNodeAllocatorService$BinPackingSimulation$ReservationStatus;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/BinPackingNodeAllocatorService$BinPackingSimulation$ReservationStatus;

+###io/trino/execution/scheduler/PartitionMemoryEstimatorFactory
@377
+#createPartitionMemoryEstimator()Lio/trino/execution/scheduler/PartitionMemoryEstimator;

+###io/trino/execution/scheduler/policy/PhasedExecutionSchedule
@368
+#forStages(Ljava/util/Collection;)Lio/trino/execution/scheduler/policy/PhasedExecutionSchedule;
+#getStagesToSchedule()Lio/trino/execution/scheduler/policy/StagesScheduleResult;
+#isFinished()Z
@370
+#forStages(Ljava/util/Collection;Lio/trino/server/DynamicFilterService;)Lio/trino/execution/scheduler/policy/PhasedExecutionSchedule;
-#forStages(Ljava/util/Collection;)Lio/trino/execution/scheduler/policy/PhasedExecutionSchedule;

+###io/trino/execution/scheduler/policy/PhasedExecutionPolicy
@368
+#<init>()V
+#createExecutionSchedule(Ljava/util/Collection;)Lio/trino/execution/scheduler/policy/ExecutionSchedule;
@370
+#<init>(Lio/trino/server/DynamicFilterService;)V
-#<init>()V

+###io/trino/execution/scheduler/policy/StagesScheduleResult
@368
+#<init>(Ljava/util/Set;)V
+#<init>(Ljava/util/Set;Ljava/util/Optional;)V
+#getStagesToSchedule()Ljava/util/Set;
+#getRescheduleFuture()Ljava/util/Optional;

+###io/trino/execution/scheduler/policy/LegacyPhasedExecutionPolicy
@368
+#<init>()V
+#createExecutionSchedule(Ljava/util/Collection;)Lio/trino/execution/scheduler/policy/ExecutionSchedule;
@406
-###io/trino/execution/scheduler/policy/LegacyPhasedExecutionPolicy

+###io/trino/execution/scheduler/policy/AllAtOnceExecutionSchedule
@368
+#<init>(Ljava/util/Collection;)V
+#getStagesToSchedule()Lio/trino/execution/scheduler/policy/StagesScheduleResult;
+#isFinished()Z

+###io/trino/execution/scheduler/policy/ExecutionPolicy
@368
+#createExecutionSchedule(Ljava/util/Collection;)Lio/trino/execution/scheduler/policy/ExecutionSchedule;

+###io/trino/execution/scheduler/policy/LegacyPhasedExecutionSchedule
@368
+#<init>(Ljava/util/Collection;)V
+#getStagesToSchedule()Lio/trino/execution/scheduler/policy/StagesScheduleResult;
+#isFinished()Z
@406
-###io/trino/execution/scheduler/policy/LegacyPhasedExecutionSchedule

+###io/trino/execution/scheduler/policy/AllAtOnceExecutionPolicy
@368
+#<init>()V
+#createExecutionSchedule(Ljava/util/Collection;)Lio/trino/execution/scheduler/policy/ExecutionSchedule;

+###io/trino/execution/scheduler/policy/ExecutionSchedule
@368
+#getStagesToSchedule()Lio/trino/execution/scheduler/policy/StagesScheduleResult;
+#isFinished()Z

+###io/trino/execution/scheduler/FallbackToFullNodePartitionMemoryEstimator
@374
+#<init>()V
+#getInitialMemoryRequirements(Lio/trino/Session;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
+#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
@375
+#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/airlift/units/DataSize;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
-#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
@377
+#registerPartitionFinished(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/airlift/units/DataSize;ZLjava/util/Optional;)V

+###io/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource
@369
+#create(Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;)Lio/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource;
+#<init>(Lcom/google/common/collect/Multimap;)V
+#getMoreTasks()Ljava/util/List;
+#isFinished()Z
+#close()V
@371
+#<init>(Lcom/google/common/collect/ListMultimap;)V
-#<init>(Lcom/google/common/collect/Multimap;)V
@374
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;)Lio/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource;
+#<init>(Lcom/google/common/collect/ListMultimap;Lio/airlift/units/DataSize;)V
-#create(Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;)Lio/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource;
-#<init>(Lcom/google/common/collect/ListMultimap;)V
@382
+#getMoreTasks()Lcom/google/common/util/concurrent/ListenableFuture;
-#getMoreTasks()Ljava/util/List;
@385
-#<init>(Lcom/google/common/collect/ListMultimap;Lio/airlift/units/DataSize;)V
@394
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/metadata/InternalNodeManager;Z)Lio/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;)Lio/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource;
@397
+#create(Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/metadata/InternalNodeManager;Z)Lio/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Lio/trino/metadata/InternalNodeManager;Z)Lio/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource;
@407
-###io/trino/execution/scheduler/StageTaskSourceFactory$SingleDistributionTaskSource

+###io/trino/execution/scheduler/TaskSourceFactory
@369
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/execution/scheduler/TaskSource;
@395
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/execution/scheduler/TaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/execution/scheduler/TaskSource;
@397
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;)Lio/trino/execution/scheduler/TaskSource;
-#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Lcom/google/common/collect/Multimap;Ljava/util/function/LongConsumer;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/execution/scheduler/TaskSource;
@407
-###io/trino/execution/scheduler/TaskSourceFactory

+###io/trino/execution/scheduler/NodeAllocator$NodeLease
@374
+#getNode()Lcom/google/common/util/concurrent/ListenableFuture;
+#release()V
@377
+#attachTaskId(Lio/trino/execution/TaskId;)V

+###io/trino/execution/FailureInjector$InjectedFailureType
@366
+#values()[Lio/trino/execution/FailureInjector$InjectedFailureType;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/FailureInjector$InjectedFailureType;

+###io/trino/execution/SplitAssignment
@369
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/Set;Ljava/util/Set;Z)V
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/Set;Z)V
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getSplits()Ljava/util/Set;
+#getNoMoreSplitsForLifespan()Ljava/util/Set;
+#isNoMoreSplits()Z
+#update(Lio/trino/execution/SplitAssignment;)Lio/trino/execution/SplitAssignment;
+#toString()Ljava/lang/String;
@388
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/util/Set;Ljava/util/Set;Z)V
-#getNoMoreSplitsForLifespan()Ljava/util/Set;

+###io/trino/execution/FailureInjector
@366
+#<init>(Lio/trino/execution/FailureInjectionConfig;)V
+#<init>(Lio/airlift/units/Duration;Lio/airlift/units/Duration;)V
+#injectTaskFailure(Ljava/lang/String;IIILio/trino/execution/FailureInjector$InjectedFailureType;Ljava/util/Optional;)V
+#getInjectedFailure(Ljava/lang/String;III)Ljava/util/Optional;
+#getRequestTimeout()Lio/airlift/units/Duration;

+###io/trino/execution/executor/TaskExecutor$RunningSplitInfo
@391
+#<init>(JLjava/lang/String;Ljava/lang/Thread;Lio/trino/execution/executor/PrioritizedSplitRunner;)V
+#getStartTime()J
+#getThreadId()Ljava/lang/String;
+#getThread()Ljava/lang/Thread;
+#getTaskId()Lio/trino/execution/TaskId;
+#getSplitInfo()Ljava/lang/String;
+#isPrinted()Z
+#setPrinted()V
+#compareTo(Lio/trino/execution/executor/TaskExecutor$RunningSplitInfo;)I
+#compareTo(Ljava/lang/Object;)I

+###io/trino/execution/FailureInjector$InjectedFailure
@366
+#<init>(Lio/trino/execution/FailureInjector$InjectedFailureType;Ljava/util/Optional;)V
+#getInjectedFailureType()Lio/trino/execution/FailureInjector$InjectedFailureType;
+#getTaskFailureErrorType()Lio/trino/spi/ErrorType;
+#getTaskFailureException()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;

+###io/trino/execution/DenyTask
@366
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;)V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/Deny;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/buffer/SpoolingExchangeOutputBuffer
@369
+#<init>(Lio/trino/execution/StateMachine;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/spi/exchange/ExchangeSink;Ljava/util/function/Supplier;)V
+#getInfo()Lio/trino/execution/buffer/OutputBufferInfo;
+#isFinished()Z
+#getUtilization()D
+#isOverutilized()Z
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#setOutputBuffers(Lio/trino/execution/buffer/OutputBuffers;)V
+#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
+#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#isFull()Lcom/google/common/util/concurrent/ListenableFuture;
+#enqueue(Ljava/util/List;)V
+#enqueue(ILjava/util/List;)V
+#setNoMorePages()V
+#destroy()V
+#fail()V
+#getPeakMemoryUsage()J
@370
+#<init>(Lio/trino/execution/buffer/OutputBufferStateMachine;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/spi/exchange/ExchangeSink;Ljava/util/function/Supplier;)V
+#getState()Lio/trino/execution/buffer/BufferState;
+#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
+#abort()V
+#getFailureCause()Ljava/util/Optional;
-#<init>(Lio/trino/execution/StateMachine;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/spi/exchange/ExchangeSink;Ljava/util/function/Supplier;)V
-#isFinished()Z
-#abort(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V
-#fail()V
@396
+#getStatus()Lio/trino/execution/buffer/OutputBufferStatus;
-#isOverutilized()Z
@398
+#<init>(Lio/trino/execution/buffer/OutputBufferStateMachine;Lio/trino/execution/buffer/SpoolingOutputBuffers;Lio/trino/spi/exchange/ExchangeSink;Ljava/util/function/Supplier;)V
+#get(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
+#acknowledge(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;J)V
+#destroy(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)V
-#<init>(Lio/trino/execution/buffer/OutputBufferStateMachine;Lio/trino/execution/buffer/OutputBuffers;Lio/trino/spi/exchange/ExchangeSink;Ljava/util/function/Supplier;)V
-#get(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;JLio/airlift/units/DataSize;)Lcom/google/common/util/concurrent/ListenableFuture;
-#acknowledge(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;J)V
-#destroy(Lio/trino/execution/buffer/OutputBuffers$OutputBufferId;)V

+###io/trino/execution/buffer/OutputBufferStateMachine
@370
+#<init>(Lio/trino/execution/TaskId;Ljava/util/concurrent/Executor;)V
+#getState()Lio/trino/execution/buffer/BufferState;
+#addStateChangeListener(Lio/trino/execution/StateMachine$StateChangeListener;)V
+#noMoreBuffers()Z
+#noMorePages()Z
+#finish()Z
+#abort()Z
+#fail(Ljava/lang/Throwable;)Z
+#getFailureCause()Ljava/util/Optional;

+###io/trino/connector/CatalogHandle$CatalogHandleType
@392
+#values()[Lio/trino/connector/CatalogHandle$CatalogHandleType;
+#valueOf(Ljava/lang/String;)Lio/trino/connector/CatalogHandle$CatalogHandleType;
+#isInternal()Z
@405
-###io/trino/connector/CatalogHandle$CatalogHandleType

+###io/trino/connector/DynamicCatalogManagerModule
@393
+#<init>()V

+###io/trino/connector/LazyCatalogFactory
@392
+#<init>()V
+#setCatalogFactory(Lio/trino/connector/CatalogFactory;)V
+#addConnectorFactory(Lio/trino/spi/connector/ConnectorFactory;Ljava/util/function/Function;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogConnector;
+#createCatalog(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
@393
+#createCatalog(Lio/trino/connector/CatalogProperties;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogConnector;
@405
+#createCatalog(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
@408
+#createCatalog(Lio/trino/spi/connector/CatalogHandle;Lio/trino/connector/ConnectorName;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;

+###io/trino/connector/CatalogManagerModule
@392
+#<init>()V

+###io/trino/connector/CatalogServiceProvider
@388
+#fail()Lio/trino/connector/CatalogServiceProvider;
+#fail(Ljava/lang/String;)Lio/trino/connector/CatalogServiceProvider;
+#singleton(Lio/trino/connector/CatalogName;Ljava/lang/Object;)Lio/trino/connector/CatalogServiceProvider;
+#getService(Lio/trino/connector/CatalogName;)Ljava/lang/Object;
@392
+#singleton(Lio/trino/connector/CatalogHandle;Ljava/lang/Object;)Lio/trino/connector/CatalogServiceProvider;
+#getService(Lio/trino/connector/CatalogHandle;)Ljava/lang/Object;
-#singleton(Lio/trino/connector/CatalogName;Ljava/lang/Object;)Lio/trino/connector/CatalogServiceProvider;
-#getService(Lio/trino/connector/CatalogName;)Ljava/lang/Object;
@405
+#singleton(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/Object;)Lio/trino/connector/CatalogServiceProvider;
+#getService(Lio/trino/spi/connector/CatalogHandle;)Ljava/lang/Object;
-#singleton(Lio/trino/connector/CatalogHandle;Ljava/lang/Object;)Lio/trino/connector/CatalogServiceProvider;
-#getService(Lio/trino/connector/CatalogHandle;)Ljava/lang/Object;

+###io/trino/connector/ConnectorCatalogServiceProvider
@388
+#<init>(Ljava/lang/String;Lio/trino/connector/ConnectorServicesProvider;Ljava/util/function/Function;)V
+#getService(Lio/trino/connector/CatalogName;)Ljava/lang/Object;
@392
+#getService(Lio/trino/connector/CatalogHandle;)Ljava/lang/Object;
-#getService(Lio/trino/connector/CatalogName;)Ljava/lang/Object;
@405
+#getService(Lio/trino/spi/connector/CatalogHandle;)Ljava/lang/Object;
-#getService(Lio/trino/connector/CatalogHandle;)Ljava/lang/Object;

+###io/trino/connector/StaticCatalogManagerConfig
@393
+#<init>()V
+#getCatalogConfigurationDir()Ljava/io/File;
+#setCatalogConfigurationDir(Ljava/io/File;)Lio/trino/connector/StaticCatalogManagerConfig;
+#getDisabledCatalogs()Ljava/util/List;
+#setDisabledCatalogs(Ljava/lang/String;)Lio/trino/connector/StaticCatalogManagerConfig;
+#setDisabledCatalogs(Ljava/util/List;)Lio/trino/connector/StaticCatalogManagerConfig;

+###io/trino/connector/FileCatalogStore
@393
+#<init>(Lio/trino/connector/StaticCatalogManagerConfig;)V
+#getCatalogs()Ljava/util/Collection;
@408
+#<init>(Lio/trino/connector/FileCatalogStoreConfig;)V
+#createCatalogProperties(Ljava/lang/String;Lio/trino/connector/ConnectorName;Ljava/util/Map;)Lio/trino/connector/CatalogProperties;
+#addOrReplaceCatalog(Lio/trino/connector/CatalogProperties;)V
+#removeCatalog(Ljava/lang/String;)V
-#<init>(Lio/trino/connector/StaticCatalogManagerConfig;)V

+###io/trino/connector/StaticCatalogManager
@393
+#<init>(Lio/trino/connector/CatalogFactory;Lio/trino/connector/StaticCatalogManagerConfig;)V
+#stop()V
+#loadInitialCatalogs()V
+#getCatalogNames()Ljava/util/Set;
+#getCatalog(Ljava/lang/String;)Ljava/util/Optional;
+#ensureCatalogsLoaded(Lio/trino/Session;Ljava/util/List;)V
+#getCatalogProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Optional;
+#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
+#registerGlobalSystemConnector(Lio/trino/connector/system/GlobalSystemConnector;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
@405
+#<init>(Lio/trino/connector/CatalogFactory;Lio/trino/connector/StaticCatalogManagerConfig;Ljava/util/concurrent/Executor;)V
+#getCatalogProperties(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Optional;
+#getConnectorServices(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
-#<init>(Lio/trino/connector/CatalogFactory;Lio/trino/connector/StaticCatalogManagerConfig;)V
-#getCatalogProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Optional;
-#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
@408
+#pruneCatalogs(Ljava/util/Set;)V
+#createCatalog(Ljava/lang/String;Lio/trino/connector/ConnectorName;Ljava/util/Map;Z)V
+#dropCatalog(Ljava/lang/String;Z)V
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V

+###io/trino/connector/CatalogManagerConfig$CatalogMangerKind
@393
+#values()[Lio/trino/connector/CatalogManagerConfig$CatalogMangerKind;
+#valueOf(Ljava/lang/String;)Lio/trino/connector/CatalogManagerConfig$CatalogMangerKind;

+###io/trino/connector/CatalogStoreConfig
@393
+#<init>()V
+#getCatalogStoreKind()Lio/trino/connector/CatalogStoreConfig$CatalogStoreKind;
+#setCatalogStoreKind(Lio/trino/connector/CatalogStoreConfig$CatalogStoreKind;)Lio/trino/connector/CatalogStoreConfig;

+###io/trino/connector/CatalogManagerConfig
@393
+#<init>()V
+#getCatalogMangerKind()Lio/trino/connector/CatalogManagerConfig$CatalogMangerKind;
+#setCatalogMangerKind(Lio/trino/connector/CatalogManagerConfig$CatalogMangerKind;)Lio/trino/connector/CatalogManagerConfig;

+###io/trino/connector/WorkerDynamicCatalogManager
@393
+#<init>(Lio/trino/connector/CatalogFactory;)V
+#stop()V
+#loadInitialCatalogs()V
+#ensureCatalogsLoaded(Lio/trino/Session;Ljava/util/List;)V
+#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
+#registerGlobalSystemConnector(Lio/trino/connector/system/GlobalSystemConnector;)V
@405
+#getConnectorServices(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
-#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
@408
+#pruneCatalogs(Ljava/util/Set;)V

+###io/trino/connector/CatalogFactory
@392
+#addConnectorFactory(Lio/trino/spi/connector/ConnectorFactory;Ljava/util/function/Function;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogConnector;
+#createCatalog(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
@393
+#createCatalog(Lio/trino/connector/CatalogProperties;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogConnector;
@405
+#createCatalog(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
@408
+#createCatalog(Lio/trino/spi/connector/CatalogHandle;Lio/trino/connector/ConnectorName;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;

+###io/trino/connector/ConnectorServicesProvider
@388
+#getConnectorServices(Lio/trino/connector/CatalogName;)Lio/trino/connector/ConnectorManager$ConnectorServices;
@392
+#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
-#getConnectorServices(Lio/trino/connector/CatalogName;)Lio/trino/connector/ConnectorManager$ConnectorServices;
@393
+#loadInitialCatalogs()V
+#ensureCatalogsLoaded(Lio/trino/Session;Ljava/util/List;)V
@405
+#getConnectorServices(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
-#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
@408
+#pruneCatalogs(Ljava/util/Set;)V

+###io/trino/connector/CoordinatorDynamicCatalogManager
@393
+#<init>(Lio/trino/connector/CatalogStore;Lio/trino/connector/CatalogFactory;)V
+#stop()V
+#loadInitialCatalogs()V
+#getCatalogNames()Ljava/util/Set;
+#getCatalog(Ljava/lang/String;)Ljava/util/Optional;
+#ensureCatalogsLoaded(Lio/trino/Session;Ljava/util/List;)V
+#getCatalogProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Optional;
+#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#registerGlobalSystemConnector(Lio/trino/connector/system/GlobalSystemConnector;)V
@405
+#<init>(Lio/trino/connector/CatalogStore;Lio/trino/connector/CatalogFactory;Ljava/util/concurrent/Executor;)V
+#getCatalogProperties(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Optional;
+#getConnectorServices(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
-#<init>(Lio/trino/connector/CatalogStore;Lio/trino/connector/CatalogFactory;)V
-#getCatalogProperties(Lio/trino/connector/CatalogHandle;)Ljava/util/Optional;
-#getConnectorServices(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/ConnectorServices;
@408
+#getActiveCatalogs()Ljava/util/Set;
+#pruneCatalogs(Ljava/util/Set;)V
+#createCatalog(Ljava/lang/String;Lio/trino/connector/ConnectorName;Ljava/util/Map;Z)V
+#dropCatalog(Ljava/lang/String;Z)V
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V

+###io/trino/connector/CatalogStoreConfig$CatalogStoreKind
@393
+#values()[Lio/trino/connector/CatalogStoreConfig$CatalogStoreKind;
+#valueOf(Ljava/lang/String;)Lio/trino/connector/CatalogStoreConfig$CatalogStoreKind;

+###io/trino/connector/ConnectorServices
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/Connector;Ljava/lang/Runnable;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
+#getConnector()Lio/trino/spi/connector/Connector;
+#getSystemTables()Ljava/util/Set;
+#getProcedures()Lio/trino/metadata/CatalogProcedures;
+#getTableProcedures()Lio/trino/metadata/CatalogTableProcedures;
+#getTableFunctions()Lio/trino/metadata/CatalogTableFunctions;
+#getSplitManager()Ljava/util/Optional;
+#getPageSourceProvider()Ljava/util/Optional;
+#getPageSinkProvider()Ljava/util/Optional;
+#getIndexProvider()Ljava/util/Optional;
+#getPartitioningProvider()Ljava/util/Optional;
+#getSecurityManagement()Lio/trino/metadata/CatalogMetadata$SecurityManagement;
+#getAccessControl()Ljava/util/Optional;
+#getEventListeners()Ljava/util/List;
+#getSessionProperties()Ljava/util/Map;
+#getTableProperties()Ljava/util/Map;
+#getMaterializedViewProperties()Ljava/util/Map;
+#getColumnProperties()Ljava/util/Map;
+#getSchemaProperties()Ljava/util/Map;
+#getAnalyzeProperties()Ljava/util/Map;
+#getCapabilities()Ljava/util/Set;
+#shutdown()V
@395
+#getFunctionProvider()Lio/trino/spi/function/FunctionProvider;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/Connector;Ljava/lang/Runnable;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/Connector;Ljava/lang/Runnable;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/connector/CatalogConnector
@392
+#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
+#getConnectorName()Ljava/lang/String;
+#getCatalog()Lio/trino/metadata/Catalog;
+#getMaterializedConnector(Lio/trino/connector/CatalogHandle$CatalogHandleType;)Lio/trino/connector/ConnectorServices;
+#shutdown()V
+#toString()Ljava/lang/String;
@393
+#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Ljava/util/Optional;)V
+#getCatalogProperties()Ljava/util/Optional;
-#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;)V
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Ljava/util/Optional;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
+#getMaterializedConnector(Lio/trino/spi/connector/CatalogHandle$CatalogHandleType;)Lio/trino/connector/ConnectorServices;
-#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Ljava/util/Optional;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#getMaterializedConnector(Lio/trino/connector/CatalogHandle$CatalogHandleType;)Lio/trino/connector/ConnectorServices;
@408
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/connector/ConnectorName;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Ljava/util/Optional;)V
+#getConnectorName()Lio/trino/connector/ConnectorName;
-#<init>(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Lio/trino/connector/ConnectorServices;Ljava/util/Optional;)V
-#getConnectorName()Ljava/lang/String;

+###io/trino/connector/CatalogStore
@393
+#getCatalogs()Ljava/util/Collection;
@408
+#createCatalogProperties(Ljava/lang/String;Lio/trino/connector/ConnectorName;Ljava/util/Map;)Lio/trino/connector/CatalogProperties;
+#addOrReplaceCatalog(Lio/trino/connector/CatalogProperties;)V
+#removeCatalog(Ljava/lang/String;)V

+###io/trino/connector/DefaultCatalogFactory
@392
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/security/AccessControl;Lio/trino/metadata/HandleResolver;Lio/trino/metadata/InternalNodeManager;Lio/trino/spi/PageSorter;Lio/trino/spi/PageIndexerFactory;Lio/airlift/node/NodeInfo;Lio/trino/spi/VersionEmbedder;Lio/trino/transaction/TransactionManager;Lio/trino/spi/type/TypeManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#addConnectorFactory(Lio/trino/spi/connector/ConnectorFactory;Ljava/util/function/Function;)V
+#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogConnector;
+#createCatalog(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
@393
+#createCatalog(Lio/trino/connector/CatalogProperties;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lio/trino/connector/CatalogConnector;
@405
+#createCatalog(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
@408
+#createCatalog(Lio/trino/spi/connector/CatalogHandle;Lio/trino/connector/ConnectorName;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;
-#createCatalog(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Lio/trino/spi/connector/Connector;)Lio/trino/connector/CatalogConnector;

+###io/trino/connector/CatalogProperties
@393
+#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
+#getConnectorName()Ljava/lang/String;
+#getProperties()Ljava/util/Map;
+#toString()Ljava/lang/String;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;
@408
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/connector/ConnectorName;Ljava/util/Map;)V
+#getConnectorName()Lio/trino/connector/ConnectorName;
-#<init>(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;)V
-#getConnectorName()Ljava/lang/String;

+###io/trino/connector/CatalogServiceProviderModule
@388
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V
+#createSplitManagerProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
+#createPageSourceProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
+#createPageSinkProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
+#createIndexProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
+#createNodePartitioningProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
+#createProceduresProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
+#createTableProceduresProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
+#createTableFunctionProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
+#createSessionPropertyManager(Ljava/util/Set;Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/metadata/SessionPropertyManager;
+#createSchemaPropertyManager(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/metadata/SchemaPropertyManager;
+#createColumnPropertyManager(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/metadata/ColumnPropertyManager;
+#createTablePropertyManager(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/metadata/TablePropertyManager;
+#createMaterializedViewPropertyManager(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/metadata/MaterializedViewPropertyManager;
+#createAnalyzePropertyManager(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/metadata/AnalyzePropertyManager;
+#createTableProceduresPropertyManager(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/metadata/TableProceduresPropertyManager;
+#createAccessControlProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;
@395
+#createFunctionProvider(Lio/trino/connector/ConnectorServicesProvider;)Lio/trino/connector/CatalogServiceProvider;

+###io/trino/connector/InternalMetadataProvider
@366
+#<init>(Lio/trino/metadata/MetadataManager;)V
+#getRelationMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/CatalogSchemaTableName;)Ljava/util/Optional;
@367
+#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/spi/type/TypeManager;)V
-#<init>(Lio/trino/metadata/MetadataManager;)V
@378
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;)V
-#<init>(Lio/trino/metadata/MetadataManager;Lio/trino/spi/type/TypeManager;)V

+###io/trino/connector/CatalogHandle
@392
+#createRootCatalogHandle(Ljava/lang/String;)Lio/trino/connector/CatalogHandle;
+#createInformationSchemaCatalogHandle(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/CatalogHandle;
+#createSystemTablesCatalogHandle(Lio/trino/connector/CatalogHandle;)Lio/trino/connector/CatalogHandle;
+#fromId(Ljava/lang/String;)Lio/trino/connector/CatalogHandle;
+#getId()Ljava/lang/String;
+#getCatalogName()Ljava/lang/String;
+#getType()Lio/trino/connector/CatalogHandle$CatalogHandleType;
+#getRootCatalogHandle()Lio/trino/connector/CatalogHandle;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getRetainedSizeInBytes()J
@405
-###io/trino/connector/CatalogHandle

+###io/trino/connector/StaticCatalogManagerModule
@393
+#<init>()V
+#configure(Lcom/google/inject/Binder;)V

+###io/trino/likematcher/LikeMatcher
@394
+#getPattern()Ljava/lang/String;
+#getEscape()Ljava/util/Optional;
+#compile(Ljava/lang/String;)Lio/trino/likematcher/LikeMatcher;
+#compile(Ljava/lang/String;Ljava/util/Optional;)Lio/trino/likematcher/LikeMatcher;
+#match([B)Z
+#match([BII)Z
@409
+#compile(Ljava/lang/String;Ljava/util/Optional;Z)Lio/trino/likematcher/LikeMatcher;

+###io/trino/likematcher/NFA$State
@394
+#<init>(I)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#id()I
@409
-###io/trino/likematcher/NFA$State

+###io/trino/likematcher/DFA$Builder
@394
+#<init>()V
+#addState(Ljava/lang/String;Z)Lio/trino/likematcher/DFA$State;
+#addStartState(Ljava/lang/String;Z)Lio/trino/likematcher/DFA$State;
+#addFailState()Lio/trino/likematcher/DFA$State;
+#addTransition(Lio/trino/likematcher/DFA$State;ILio/trino/likematcher/DFA$State;)V
+#build()Lio/trino/likematcher/DFA;
@409
+#addState(Z)I
+#addStartState(Z)I
+#addTransition(III)V
-#addState(Ljava/lang/String;Z)Lio/trino/likematcher/DFA$State;
-#addStartState(Ljava/lang/String;Z)Lio/trino/likematcher/DFA$State;
-#addFailState()Lio/trino/likematcher/DFA$State;
-#addTransition(Lio/trino/likematcher/DFA$State;ILio/trino/likematcher/DFA$State;)V

+###io/trino/likematcher/NFA$Builder
@394
+#<init>()V
+#addState()Lio/trino/likematcher/NFA$State;
+#addStartState()Lio/trino/likematcher/NFA$State;
+#setAccept(Lio/trino/likematcher/NFA$State;)V
+#addTransition(Lio/trino/likematcher/NFA$State;Lio/trino/likematcher/NFA$Condition;Lio/trino/likematcher/NFA$State;)V
+#build()Lio/trino/likematcher/NFA;
@409
+#addState()I
+#addStartState()I
+#setAccept(I)V
+#addTransition(ILio/trino/likematcher/NFA$Condition;I)V
-#addState()Lio/trino/likematcher/NFA$State;
-#addStartState()Lio/trino/likematcher/NFA$State;
-#setAccept(Lio/trino/likematcher/NFA$State;)V
-#addTransition(Lio/trino/likematcher/NFA$State;Lio/trino/likematcher/NFA$Condition;Lio/trino/likematcher/NFA$State;)V

+###io/trino/likematcher/Pattern$Any
@394
+#<init>(IZ)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#min()I
+#unbounded()Z
@409
+#<init>(I)V
+#length()I
-#<init>(IZ)V
-#min()I
-#unbounded()Z

+###io/trino/likematcher/Pattern$Literal
@394
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#value()Ljava/lang/String;

+###io/trino/metadata/ExchangeHandleResolver
@370
+#<init>()V
+#setExchangeManagerHandleResolver(Lio/trino/spi/exchange/ExchangeManagerHandleResolver;)V
+#getExchangeSinkInstanceHandleClass()Ljava/lang/Class;
+#getExchangeSourceHandleClass()Ljava/lang/Class;
@403
-###io/trino/metadata/ExchangeHandleResolver

+###io/trino/metadata/OperatorNameUtil
@395
+#isOperatorName(Ljava/lang/String;)Z
+#mangleOperatorName(Lio/trino/spi/function/OperatorType;)Ljava/lang/String;
+#unmangleOperator(Ljava/lang/String;)Lio/trino/spi/function/OperatorType;

+###io/trino/metadata/PropertyUtil
@370
+#evaluateProperties(Ljava/lang/Iterable;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;ZLjava/util/Map;Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;)Ljava/util/Map;
@408
+#evaluateProperty(Ljava/lang/String;Lio/trino/spi/type/Type;Lio/trino/sql/tree/Expression;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Ljava/util/Map;Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;)Ljava/lang/Object;

+###io/trino/metadata/GlobalFunctionCatalog
@374
+#<init>()V
+#addFunctions(Lio/trino/metadata/FunctionBundle;)V
+#listFunctions()Ljava/util/List;
+#getFunctions(Lio/trino/sql/tree/QualifiedName;)Ljava/util/Collection;
+#getFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/AggregationFunctionMetadata;
+#getWindowFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
+#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
+#getFunctionDependencies(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#getScalarFunctionInvoker(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@379
+#getFunctions(Lio/trino/metadata/SchemaFunctionName;)Ljava/util/Collection;
-#getFunctions(Lio/trino/sql/tree/QualifiedName;)Ljava/util/Collection;
@395
+#getFunctions(Lio/trino/spi/function/SchemaFunctionName;)Ljava/util/Collection;
+#getFunctionMetadata(Lio/trino/spi/function/FunctionId;)Lio/trino/spi/function/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/spi/function/FunctionId;)Lio/trino/spi/function/AggregationFunctionMetadata;
+#getWindowFunctionSupplier(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/WindowFunctionSupplier;
+#getAggregationImplementation(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/AggregationImplementation;
+#getFunctionDependencies(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration;
+#getScalarFunctionImplementation(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
-#getFunctions(Lio/trino/metadata/SchemaFunctionName;)Ljava/util/Collection;
-#getFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/FunctionMetadata;
-#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/AggregationFunctionMetadata;
-#getWindowFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
-#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getFunctionDependencies(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#getScalarFunctionInvoker(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
@409
+#getTableFunctionProcessorProvider(Lio/trino/spi/function/SchemaFunctionName;)Lio/trino/spi/ptf/TableFunctionProcessorProvider;

+###io/trino/metadata/TableFunctionMetadata
@381
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/ptf/ConnectorTableFunction;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getFunction()Lio/trino/spi/ptf/ConnectorTableFunction;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/ptf/ConnectorTableFunction;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/ptf/ConnectorTableFunction;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/ptf/ConnectorTableFunction;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/ptf/ConnectorTableFunction;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/FunctionBundle
@374
+#getFunctions()Ljava/util/Collection;
+#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/AggregationFunctionMetadata;
+#getFunctionDependencies(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#getScalarFunctionInvoker(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
+#getWindowFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
@395
+#getAggregationFunctionMetadata(Lio/trino/spi/function/FunctionId;)Lio/trino/spi/function/AggregationFunctionMetadata;
+#getFunctionDependencies(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration;
+#getScalarFunctionImplementation(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getAggregationImplementation(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/AggregationImplementation;
+#getWindowFunctionSupplier(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/WindowFunctionSupplier;
-#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/AggregationFunctionMetadata;
-#getFunctionDependencies(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#getScalarFunctionInvoker(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
-#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getWindowFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;

+###io/trino/metadata/BlockEncodingManager
@367
+#<init>()V
+#getBlockEncoding(Ljava/lang/String;)Lio/trino/spi/block/BlockEncoding;
+#addBlockEncoding(Lio/trino/spi/block/BlockEncoding;)V

+###io/trino/metadata/TableFunctionRegistry
@381
+#<init>()V
+#addTableFunctions(Lio/trino/connector/CatalogName;Ljava/util/Collection;)V
+#removeTableFunctions(Lio/trino/connector/CatalogName;)V
+#resolve(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;)Lio/trino/metadata/TableFunctionMetadata;
@388
+#<init>(Lio/trino/connector/CatalogServiceProvider;)V
+#resolve(Lio/trino/connector/CatalogName;Lio/trino/metadata/SchemaFunctionName;)Ljava/util/Optional;
-#<init>()V
-#addTableFunctions(Lio/trino/connector/CatalogName;Ljava/util/Collection;)V
-#removeTableFunctions(Lio/trino/connector/CatalogName;)V
-#resolve(Lio/trino/Session;Lio/trino/sql/tree/QualifiedName;)Lio/trino/metadata/TableFunctionMetadata;
@392
+#resolve(Lio/trino/connector/CatalogHandle;Lio/trino/metadata/SchemaFunctionName;)Ljava/util/Optional;
-#resolve(Lio/trino/connector/CatalogName;Lio/trino/metadata/SchemaFunctionName;)Ljava/util/Optional;
@395
+#resolve(Lio/trino/connector/CatalogHandle;Lio/trino/spi/function/SchemaFunctionName;)Ljava/util/Optional;
-#resolve(Lio/trino/connector/CatalogHandle;Lio/trino/metadata/SchemaFunctionName;)Ljava/util/Optional;
@405
+#resolve(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/function/SchemaFunctionName;)Ljava/util/Optional;
-#resolve(Lio/trino/connector/CatalogHandle;Lio/trino/spi/function/SchemaFunctionName;)Ljava/util/Optional;

+###io/trino/metadata/CatalogTransaction
@386
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#isSingleStatementWritesOnly()Z
+#getConnectorMetadata(Lio/trino/Session;)Lio/trino/spi/connector/ConnectorMetadata;
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#commit()V
+#abort()V
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/Connector;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/Connector;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/Connector;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/InternalFunctionBundle
@374
+#<init>([Lio/trino/metadata/SqlFunction;)V
+#<init>(Ljava/util/List;)V
+#getFunctions()Ljava/util/Collection;
+#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/AggregationFunctionMetadata;
+#getFunctionDependencies(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
+#getScalarFunctionInvoker(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
+#getWindowFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;
+#extractFunctions(Ljava/lang/Class;)Lio/trino/metadata/InternalFunctionBundle;
+#extractFunctions(Ljava/util/Collection;)Lio/trino/metadata/InternalFunctionBundle;
+#builder()Lio/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder;
@395
+#getAggregationFunctionMetadata(Lio/trino/spi/function/FunctionId;)Lio/trino/spi/function/AggregationFunctionMetadata;
+#getFunctionDependencies(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration;
+#getScalarFunctionImplementation(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getAggregationImplementation(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/AggregationImplementation;
+#getWindowFunctionSupplier(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/WindowFunctionSupplier;
-#getAggregationFunctionMetadata(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/AggregationFunctionMetadata;
-#getFunctionDependencies(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;)Lio/trino/metadata/FunctionDependencyDeclaration;
-#getScalarFunctionInvoker(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
-#getAggregateFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getWindowFunctionImplementation(Lio/trino/metadata/FunctionId;Lio/trino/metadata/BoundSignature;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/window/WindowFunctionSupplier;

+###io/trino/metadata/CatalogTableFunctions
@388
+#<init>(Ljava/util/Collection;)V
+#getTableFunction(Lio/trino/metadata/SchemaFunctionName;)Ljava/util/Optional;
@395
+#getTableFunction(Lio/trino/spi/function/SchemaFunctionName;)Ljava/util/Optional;
-#getTableFunction(Lio/trino/metadata/SchemaFunctionName;)Ljava/util/Optional;

+###io/trino/metadata/SystemFunctionBundle
@374
+#create(Lio/trino/FeaturesConfig;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;Lio/trino/client/NodeVersion;)Lio/trino/metadata/FunctionBundle;

+###io/trino/metadata/MetadataManager$TestMetadataManagerBuilder
@374
+#withCatalogManager(Lio/trino/metadata/CatalogManager;)Lio/trino/metadata/MetadataManager$TestMetadataManagerBuilder;
+#withFeaturesConfig(Lio/trino/FeaturesConfig;)Lio/trino/metadata/MetadataManager$TestMetadataManagerBuilder;
+#withTransactionManager(Lio/trino/transaction/TransactionManager;)Lio/trino/metadata/MetadataManager$TestMetadataManagerBuilder;
+#withTypeManager(Lio/trino/spi/type/TypeManager;)Lio/trino/metadata/MetadataManager$TestMetadataManagerBuilder;
+#withGlobalFunctionCatalog(Lio/trino/metadata/GlobalFunctionCatalog;)Lio/trino/metadata/MetadataManager$TestMetadataManagerBuilder;
+#build()Lio/trino/metadata/MetadataManager;
@385
-#withFeaturesConfig(Lio/trino/FeaturesConfig;)Lio/trino/metadata/MetadataManager$TestMetadataManagerBuilder;
@393
-#withCatalogManager(Lio/trino/metadata/CatalogManager;)Lio/trino/metadata/MetadataManager$TestMetadataManagerBuilder;

+###io/trino/metadata/TableFunctionHandle
@381
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getFunctionHandle()Lio/trino/spi/ptf/ConnectorTableFunctionHandle;
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;
@407
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/function/SchemaFunctionName;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getSchemaFunctionName()Lio/trino/spi/function/SchemaFunctionName;
-#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V

+###io/trino/metadata/CatalogMetadata$SecurityManagement
@386
+#values()[Lio/trino/metadata/CatalogMetadata$SecurityManagement;
+#valueOf(Ljava/lang/String;)Lio/trino/metadata/CatalogMetadata$SecurityManagement;

+###io/trino/metadata/CatalogSchemaFunctionName
@379
+#<init>(Ljava/lang/String;Lio/trino/metadata/SchemaFunctionName;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#getSchemaFunctionName()Lio/trino/metadata/SchemaFunctionName;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
+#<init>(Ljava/lang/String;Lio/trino/spi/function/SchemaFunctionName;)V
+#getSchemaFunctionName()Lio/trino/spi/function/SchemaFunctionName;
-#<init>(Ljava/lang/String;Lio/trino/metadata/SchemaFunctionName;)V
-#getSchemaFunctionName()Lio/trino/metadata/SchemaFunctionName;

+###io/trino/metadata/CatalogTableProcedures
@388
+#<init>(Ljava/util/Collection;)V
+#getTableProcedures()Ljava/util/Collection;
+#getTableProcedure(Ljava/lang/String;)Lio/trino/spi/connector/TableProcedureMetadata;

+###io/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder
@374
+#window(Ljava/lang/Class;)Lio/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder;
+#aggregates(Ljava/lang/Class;)Lio/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder;
+#scalar(Ljava/lang/Class;)Lio/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder;
+#scalars(Ljava/lang/Class;)Lio/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder;
+#functions(Ljava/lang/Class;)Lio/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder;
+#functions([Lio/trino/metadata/SqlFunction;)Lio/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder;
+#function(Lio/trino/metadata/SqlFunction;)Lio/trino/metadata/InternalFunctionBundle$InternalFunctionBundleBuilder;
+#build()Lio/trino/metadata/InternalFunctionBundle;

+###io/trino/metadata/InternalFunctionDependencies$FunctionKey
@395
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/metadata/InternalFunctionDependencies
@395
+#<init>(Ljava/util/function/BiFunction;Ljava/util/Map;Ljava/util/Collection;)V
+#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
+#getFunctionNullability(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;)Lio/trino/spi/function/FunctionNullability;
+#getOperatorNullability(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/spi/function/FunctionNullability;
+#getCastNullability(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/spi/function/FunctionNullability;
+#getScalarFunctionImplementation(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getScalarFunctionImplementationSignature(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getOperatorImplementation(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getOperatorImplementationSignature(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getCastImplementation(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getCastImplementationSignature(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;

+###io/trino/metadata/TableLayout
@370
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableLayout;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getLayout()Lio/trino/spi/connector/ConnectorTableLayout;
+#getPartitioning()Ljava/util/Optional;
+#getPartitionColumns()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableLayout;)V
+#getCatalogName()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableLayout;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableLayout;)V
+#getCatalogName()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorTableLayout;)V
-#getCatalogName()Lio/trino/connector/CatalogHandle;

+###io/trino/metadata/CatalogProcedures
@388
+#<init>(Ljava/util/Collection;)V
+#getProcedure(Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/procedure/Procedure;

+###io/trino/metadata/InternalFunctionDependencies$OperatorKey
@395
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/metadata/InternalBlockEncodingSerde
@367
+#<init>(Lio/trino/metadata/BlockEncodingManager;Lio/trino/spi/type/TypeManager;)V
+#readBlock(Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;
+#writeBlock(Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readType(Lio/airlift/slice/SliceInput;)Lio/trino/spi/type/Type;
+#writeType(Lio/airlift/slice/SliceOutput;Lio/trino/spi/type/Type;)V

+###io/trino/metadata/TypeRegistry
@367
+#<init>(Lio/trino/spi/type/TypeOperators;Lio/trino/FeaturesConfig;)V
+#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
+#getType(Lio/trino/spi/type/TypeId;)Lio/trino/spi/type/Type;
+#fromSqlType(Ljava/lang/String;)Lio/trino/spi/type/Type;
+#getTypes()Ljava/util/Collection;
+#getParametricTypes()Ljava/util/Collection;
+#addType(Lio/trino/spi/type/Type;)V
+#addType(Ljava/lang/String;Lio/trino/spi/type/Type;)V
+#addParametricType(Lio/trino/spi/type/ParametricType;)V
+#getTypeOperators()Lio/trino/spi/type/TypeOperators;
+#verifyTypes()V

+###io/trino/metadata/MergeHandle
@393
+#<init>(Lio/trino/metadata/TableHandle;Lio/trino/spi/connector/ConnectorMergeTableHandle;)V
+#getTableHandle()Lio/trino/metadata/TableHandle;
+#getConnectorMergeHandle()Lio/trino/spi/connector/ConnectorMergeTableHandle;

+###io/trino/metadata/FunctionManager
@374
+#<init>(Lio/trino/metadata/GlobalFunctionCatalog;)V
+#getScalarFunctionInvoker(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
+#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/AggregationMetadata;
+#getWindowFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/window/WindowFunctionSupplier;
+#createTestingFunctionManager()Lio/trino/metadata/FunctionManager;
@395
+#<init>(Lio/trino/connector/CatalogServiceProvider;Lio/trino/metadata/GlobalFunctionCatalog;)V
+#getScalarFunctionImplementation(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getAggregationImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/spi/function/AggregationImplementation;
+#getWindowFunctionSupplier(Lio/trino/metadata/ResolvedFunction;)Lio/trino/spi/function/WindowFunctionSupplier;
-#<init>(Lio/trino/metadata/GlobalFunctionCatalog;)V
-#getScalarFunctionInvoker(Lio/trino/metadata/ResolvedFunction;Lio/trino/spi/function/InvocationConvention;)Lio/trino/metadata/FunctionInvoker;
-#getAggregateFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/aggregation/AggregationMetadata;
-#getWindowFunctionImplementation(Lio/trino/metadata/ResolvedFunction;)Lio/trino/operator/window/WindowFunctionSupplier;
@409
+#getTableFunctionProcessorProvider(Lio/trino/metadata/TableFunctionHandle;)Lio/trino/spi/ptf/TableFunctionProcessorProvider;

+###io/trino/metadata/InternalNodeManager$NodesSnapshot
@375
+#<init>(Ljava/util/Set;Lcom/google/common/collect/SetMultimap;)V
+#getAllNodes()Ljava/util/Set;
+#getConnectorNodes(Lio/trino/connector/CatalogName;)Ljava/util/Set;
@392
+#getConnectorNodes(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;
-#getConnectorNodes(Lio/trino/connector/CatalogName;)Ljava/util/Set;
@393
+#<init>(Ljava/util/Set;Ljava/util/Optional;)V
-#<init>(Ljava/util/Set;Lcom/google/common/collect/SetMultimap;)V
@405
+#getConnectorNodes(Lio/trino/spi/connector/CatalogHandle;)Ljava/util/Set;
-#getConnectorNodes(Lio/trino/connector/CatalogHandle;)Ljava/util/Set;

+###io/trino/metadata/CatalogInfo
@386
+#<init>(Lio/trino/connector/CatalogName;Ljava/lang/String;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getConnectorName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@392
+#<init>(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Ljava/lang/String;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@405
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
-#<init>(Ljava/lang/String;Lio/trino/connector/CatalogHandle;Ljava/lang/String;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;
@408
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Lio/trino/connector/ConnectorName;)V
+#getConnectorName()Lio/trino/connector/ConnectorName;
-#<init>(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;)V
-#getConnectorName()Ljava/lang/String;

+###io/trino/operator/aggregation/LongLongState
@366
+#getFirst()J
+#setFirst(J)V
+#isFirstNull()Z
+#setFirstNull(Z)V
+#getSecond()J
+#setSecond(J)V
+#isSecondNull()Z
+#setSecondNull(Z)V

+###io/trino/operator/aggregation/GroupedAggregator
@367
+#<init>(Lio/trino/operator/aggregation/GroupedAccumulator;Lio/trino/sql/planner/plan/AggregationNode$Step;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/util/OptionalInt;)V
+#getEstimatedSize()J
+#getType()Lio/trino/spi/type/Type;
+#processPage(Lio/trino/operator/GroupByIdBlock;Lio/trino/spi/Page;)V
+#prepareFinal()V
+#evaluate(ILio/trino/spi/block/BlockBuilder;)V
+#setSpillOutput()V
+#getSpillType()Lio/trino/spi/type/Type;

+###io/trino/operator/aggregation/MaxByAggregationFunction
@383
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;)V
+#output(Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/QuantileDigestAggregationFunction$BigintQuantileDigestAggregationFunction
@383
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;J)V
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;JJ)V
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;JJD)V
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/operator/aggregation/state/QuantileDigestState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/partial/SkipAggregationBuilder
@374
+#<init>(Ljava/util/List;Ljava/util/Optional;Ljava/util/List;Lio/trino/memory/context/LocalMemoryContext;)V
+#processPage(Lio/trino/spi/Page;)Lio/trino/operator/Work;
+#buildResult()Lio/trino/operator/WorkProcessor;
+#isFull()Z
+#updateMemory()V
+#recordHashCollisions(Lio/trino/operator/HashCollisionsCounter;)V
+#close()V
+#startMemoryRevoke()Lcom/google/common/util/concurrent/ListenableFuture;
+#finishMemoryRevoke()V
@405
-#recordHashCollisions(Lio/trino/operator/HashCollisionsCounter;)V

+###io/trino/operator/aggregation/partial/PartialAggregationController
@374
+#<init>(JD)V
+#isPartialAggregationDisabled()Z
+#onFlush(JJ)V
+#duplicate()Lio/trino/operator/aggregation/partial/PartialAggregationController;

+###io/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap
@383
+#<init>(ZLjava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;I)V
+#getSerializedType(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/spi/type/Type;
+#getCapacity()I
+#getEstimatedSize()J
+#isEmpty()Z
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(ZLjava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap;
+#popAllReverse(Lio/trino/spi/block/BlockBuilder;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#pop(Lio/trino/spi/block/BlockBuilder;)V
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#addAll(Lio/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap;)V
+#addAll(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)V
+#copy()Lio/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap;

+###io/trino/operator/aggregation/minmaxbyn/MaxByNStateFactory
@383
+#<init>(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#createSingleState()Lio/trino/operator/aggregation/minmaxbyn/MaxByNState;
+#createGroupedState()Lio/trino/operator/aggregation/minmaxbyn/MaxByNState;
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/minmaxbyn/MinMaxByNStateSerializer
@383
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/minmaxbyn/MinMaxByNState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/minmaxbyn/MinMaxByNState;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxbyn/MinMaxByNStateFactory
@383
+#<init>()V

+###io/trino/operator/aggregation/minmaxbyn/MinMaxByNStateFactory$SingleMinMaxByNState
@383
+#<init>(Ljava/util/function/LongFunction;Ljava/util/function/Function;)V
+#copy()Lio/trino/spi/function/AccumulatorState;
+#getEstimatedSize()J
+#initialize(J)V
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#merge(Lio/trino/operator/aggregation/minmaxbyn/MinMaxByNState;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;)V

+###io/trino/operator/aggregation/minmaxbyn/MinByNStateFactory
@383
+#<init>(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)V
+#createSingleState()Lio/trino/operator/aggregation/minmaxbyn/MinByNState;
+#createGroupedState()Lio/trino/operator/aggregation/minmaxbyn/MinByNState;
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/minmaxbyn/MinByNAggregationFunction
@383
+#input(Lio/trino/operator/aggregation/minmaxbyn/MinByNState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;JI)V
+#combine(Lio/trino/operator/aggregation/minmaxbyn/MinByNState;Lio/trino/operator/aggregation/minmaxbyn/MinByNState;)V
+#output(Lio/trino/operator/aggregation/minmaxbyn/MinByNState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxbyn/MaxByNStateSerializer
@383
+#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/minmaxbyn/MinMaxByNStateFactory$GroupedMinMaxByNState
@383
+#<init>(Ljava/util/function/LongFunction;Ljava/util/function/Function;)V
+#setGroupId(J)V
+#ensureCapacity(J)V
+#getEstimatedSize()J
+#initialize(J)V
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#merge(Lio/trino/operator/aggregation/minmaxbyn/MinMaxByNState;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;)V

+###io/trino/operator/aggregation/minmaxbyn/MaxByNAggregationFunction
@383
+#input(Lio/trino/operator/aggregation/minmaxbyn/MaxByNState;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;JI)V
+#combine(Lio/trino/operator/aggregation/minmaxbyn/MaxByNState;Lio/trino/operator/aggregation/minmaxbyn/MaxByNState;)V
+#output(Lio/trino/operator/aggregation/minmaxbyn/MaxByNState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxbyn/MaxByNState
@383

+###io/trino/operator/aggregation/minmaxbyn/MinByNStateSerializer
@383
+#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/minmaxbyn/MinByNState
@383

+###io/trino/operator/aggregation/minmaxbyn/MinMaxByNState
@383
+#initialize(J)V
+#add(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#merge(Lio/trino/operator/aggregation/minmaxbyn/MinMaxByNState;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;)V

+###io/trino/operator/aggregation/AggregatorFactory
@367
+#<init>(Lio/trino/operator/aggregation/AccumulatorFactory;Lio/trino/sql/planner/plan/AggregationNode$Step;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/util/OptionalInt;Z)V
+#createAggregator()Lio/trino/operator/aggregation/Aggregator;
+#createGroupedAggregator()Lio/trino/operator/aggregation/GroupedAggregator;
+#createUnspillGroupedAggregator(Lio/trino/sql/planner/plan/AggregationNode$Step;I)Lio/trino/operator/aggregation/GroupedAggregator;
+#isSpillable()Z
@374
+#<init>(Lio/trino/operator/aggregation/AccumulatorFactory;Lio/trino/sql/planner/plan/AggregationNode$Step;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/util/OptionalInt;ZLjava/util/List;)V
-#<init>(Lio/trino/operator/aggregation/AccumulatorFactory;Lio/trino/sql/planner/plan/AggregationNode$Step;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/util/OptionalInt;Z)V

+###io/trino/operator/aggregation/ParametricAggregationImplementation$Parser
@395
+#parseImplementation(Ljava/lang/Class;Ljava/lang/String;Ljava/util/List;Ljava/lang/reflect/Method;Ljava/util/Optional;Ljava/lang/reflect/Method;Ljava/util/Optional;)Lio/trino/operator/aggregation/ParametricAggregationImplementation;
+#parseSignatureArgumentsTypes(Ljava/lang/reflect/Method;)Ljava/util/List;
+#parseImplementationDependencies(Ljava/lang/reflect/Method;)Ljava/util/List;
+#isParameterNullable([Ljava/lang/annotation/Annotation;)Z
+#isParameterBlock([Ljava/lang/annotation/Annotation;)Z
+#getInputTypesSignatures(Ljava/lang/reflect/Method;)Ljava/util/List;
+#findAggregationStateParamId(Ljava/lang/reflect/Method;)I
+#findAggregationStateParamId(Ljava/lang/reflect/Method;I)I

+###io/trino/operator/aggregation/AggregationFunctionAdapter$AggregationParameterKind
@367
+#values()[Lio/trino/operator/aggregation/AggregationFunctionAdapter$AggregationParameterKind;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/aggregation/AggregationFunctionAdapter$AggregationParameterKind;

+###io/trino/operator/aggregation/CompiledAccumulatorFactory
@367
+#<init>(Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Constructor;Ljava/util/List;)V
+#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
@374
+#getLambdaInterfaces()Ljava/util/List;
+#createAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/GroupedAccumulator;
-#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
-#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
-#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
-#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;

+###io/trino/operator/aggregation/OrderedAccumulatorFactory
@367
+#<init>(Lio/trino/operator/aggregation/AccumulatorFactory;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/PagesIndex$Factory;)V
+#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
@374
+#getLambdaInterfaces()Ljava/util/List;
+#createAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/GroupedAccumulator;
-#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
-#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
-#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
-#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;

+###io/trino/operator/aggregation/WindowAccumulator
@367
+#getEstimatedSize()J
+#copy()Lio/trino/operator/aggregation/WindowAccumulator;
+#addInput(Lio/trino/spi/function/WindowIndex;II)V
+#removeInput(Lio/trino/spi/function/WindowIndex;II)V
+#evaluateFinal(Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/state/NullableState
@366
+#isNull()Z

+###io/trino/operator/aggregation/state/InOutStateSerializer
@383
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/spi/function/InOut;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/InOut;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/AggregationFunctionAdapter
@367
+#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/metadata/BoundSignature;[Lio/trino/operator/aggregation/AggregationFunctionAdapter$AggregationParameterKind;)Ljava/lang/invoke/MethodHandle;
+#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/metadata/BoundSignature;Ljava/util/List;)Ljava/lang/invoke/MethodHandle;
+#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/metadata/BoundSignature;Ljava/util/List;I)Ljava/lang/invoke/MethodHandle;
@395
+#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/BoundSignature;[Lio/trino/operator/aggregation/AggregationFunctionAdapter$AggregationParameterKind;)Ljava/lang/invoke/MethodHandle;
+#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/BoundSignature;Ljava/util/List;)Ljava/lang/invoke/MethodHandle;
+#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/BoundSignature;Ljava/util/List;I)Ljava/lang/invoke/MethodHandle;
-#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/metadata/BoundSignature;[Lio/trino/operator/aggregation/AggregationFunctionAdapter$AggregationParameterKind;)Ljava/lang/invoke/MethodHandle;
-#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/metadata/BoundSignature;Ljava/util/List;)Ljava/lang/invoke/MethodHandle;
-#normalizeInputMethod(Ljava/lang/invoke/MethodHandle;Lio/trino/metadata/BoundSignature;Ljava/util/List;I)Ljava/lang/invoke/MethodHandle;

+###io/trino/operator/aggregation/minmaxn/TypedHeap
@383
+#<init>(ZLjava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;I)V
+#getCapacity()I
+#getEstimatedSize()J
+#isEmpty()Z
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(ZLjava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Lio/trino/operator/aggregation/minmaxn/TypedHeap;
+#popAllReverse(Lio/trino/spi/block/BlockBuilder;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#pop(Lio/trino/spi/block/BlockBuilder;)V
+#add(Lio/trino/spi/block/Block;I)V
+#addAll(Lio/trino/operator/aggregation/minmaxn/TypedHeap;)V
+#addAll(Lio/trino/spi/block/Block;)V
+#copy()Lio/trino/operator/aggregation/minmaxn/TypedHeap;
@403
+#writeAll(Lio/trino/spi/block/BlockBuilder;)V
-#popAllReverse(Lio/trino/spi/block/BlockBuilder;)V
-#popAll(Lio/trino/spi/block/BlockBuilder;)V
-#pop(Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxn/MaxNStateSerializer
@383
+#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/minmaxn/MinMaxNStateFactory
@383

+###io/trino/operator/aggregation/minmaxn/MinNStateFactory
@383
+#<init>(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;)V
+#createSingleState()Lio/trino/operator/aggregation/minmaxn/MinNState;
+#createGroupedState()Lio/trino/operator/aggregation/minmaxn/MinNState;
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/minmaxn/MinNAggregationFunction
@383
+#input(Lio/trino/operator/aggregation/minmaxn/MinNState;Lio/trino/spi/block/Block;JI)V
+#combine(Lio/trino/operator/aggregation/minmaxn/MinNState;Lio/trino/operator/aggregation/minmaxn/MinNState;)V
+#output(Lio/trino/operator/aggregation/minmaxn/MinNState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxn/MinMaxNState
@383
+#initialize(J)V
+#add(Lio/trino/spi/block/Block;I)V
+#merge(Lio/trino/operator/aggregation/minmaxn/MinMaxNState;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;)V
@403
+#writeAll(Lio/trino/spi/block/BlockBuilder;)V
-#popAll(Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxn/MaxNState
@383

+###io/trino/operator/aggregation/minmaxn/MaxNAggregationFunction
@383
+#input(Lio/trino/operator/aggregation/minmaxn/MaxNState;Lio/trino/spi/block/Block;JI)V
+#combine(Lio/trino/operator/aggregation/minmaxn/MaxNState;Lio/trino/operator/aggregation/minmaxn/MaxNState;)V
+#output(Lio/trino/operator/aggregation/minmaxn/MaxNState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxn/MinNStateSerializer
@383
+#<init>(Lio/trino/spi/type/Type;)V

+###io/trino/operator/aggregation/minmaxn/MinMaxNStateSerializer
@383
+#<init>(Lio/trino/spi/type/Type;)V
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Lio/trino/operator/aggregation/minmaxn/MinMaxNState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/operator/aggregation/minmaxn/MinMaxNState;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxn/MinMaxNStateFactory$GroupedMinMaxNState
@383
+#<init>(Ljava/util/function/LongFunction;Ljava/util/function/Function;)V
+#setGroupId(J)V
+#ensureCapacity(J)V
+#getEstimatedSize()J
+#initialize(J)V
+#add(Lio/trino/spi/block/Block;I)V
+#merge(Lio/trino/operator/aggregation/minmaxn/MinMaxNState;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;)V
@403
+#writeAll(Lio/trino/spi/block/BlockBuilder;)V
-#popAll(Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxn/MaxNStateFactory
@383
+#<init>(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/type/Type;)V
+#createSingleState()Lio/trino/operator/aggregation/minmaxn/MaxNState;
+#createGroupedState()Lio/trino/operator/aggregation/minmaxn/MaxNState;
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
+#createSingleState()Lio/trino/spi/function/AccumulatorState;

+###io/trino/operator/aggregation/minmaxn/MinMaxNStateFactory$SingleMinMaxNState
@383
+#<init>(Ljava/util/function/LongFunction;Ljava/util/function/Function;)V
+#copy()Lio/trino/spi/function/AccumulatorState;
+#getEstimatedSize()J
+#initialize(J)V
+#add(Lio/trino/spi/block/Block;I)V
+#merge(Lio/trino/operator/aggregation/minmaxn/MinMaxNState;)V
+#popAll(Lio/trino/spi/block/BlockBuilder;)V
+#serialize(Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;)V
@403
+#writeAll(Lio/trino/spi/block/BlockBuilder;)V
-#popAll(Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/minmaxn/MinNState
@383

+###io/trino/operator/aggregation/ParametricAggregationImplementation$AggregateNativeContainerType
@395
+#<init>(Ljava/lang/Class;Z)V
+#getJavaType()Ljava/lang/Class;
+#isBlockPosition()Z

+###io/trino/operator/aggregation/QuantileDigestAggregationFunction$DoubleQuantileDigestAggregationFunction
@383
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;D)V
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;DJ)V
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;DJD)V
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/operator/aggregation/state/QuantileDigestState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/DistinctAccumulatorFactory
@367
+#<init>(Lio/trino/operator/aggregation/AccumulatorFactory;Ljava/util/List;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;Lio/trino/Session;)V
+#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
@374
+#getLambdaInterfaces()Ljava/util/List;
+#createAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/Accumulator;
+#createIntermediateAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/Accumulator;
+#createGroupedAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/GroupedAccumulator;
+#createGroupedIntermediateAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/GroupedAccumulator;
-#createAccumulator()Lio/trino/operator/aggregation/Accumulator;
-#createIntermediateAccumulator()Lio/trino/operator/aggregation/Accumulator;
-#createGroupedAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;
-#createGroupedIntermediateAccumulator()Lio/trino/operator/aggregation/GroupedAccumulator;

+###io/trino/operator/aggregation/AggregationFromAnnotationsParser$AccumulatorStateDetails
@383
+#<init>(Ljava/lang/Class;Ljava/util/List;Lio/trino/spi/type/TypeSignature;Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Ljava/util/List;)V
+#getStateClass()Ljava/lang/Class;
+#getSerializedType()Lio/trino/spi/type/TypeSignature;
+#getDependencies()Ljava/util/List;
+#createAccumulatorStateDescriptor(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata$AccumulatorStateDescriptor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@395
+#createAccumulatorStateDescriptor(Lio/trino/metadata/FunctionBinding;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/AggregationImplementation$AccumulatorStateDescriptor;
-#createAccumulatorStateDescriptor(Lio/trino/metadata/FunctionBinding;Lio/trino/metadata/FunctionDependencies;)Lio/trino/operator/aggregation/AggregationMetadata$AccumulatorStateDescriptor;

+###io/trino/operator/aggregation/Aggregator
@367
+#<init>(Lio/trino/operator/aggregation/Accumulator;Lio/trino/sql/planner/plan/AggregationNode$Step;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/util/OptionalInt;)V
+#getType()Lio/trino/spi/type/Type;
+#processPage(Lio/trino/spi/Page;)V
+#evaluate(Lio/trino/spi/block/BlockBuilder;)V
+#getEstimatedSize()J

+###io/trino/operator/aggregation/QuantileDigestAggregationFunction$RealQuantileDigestAggregationFunction
@383
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;J)V
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;JJ)V
+#input(Lio/trino/operator/aggregation/state/QuantileDigestState;JJD)V
+#combine(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/operator/aggregation/state/QuantileDigestState;)V
+#output(Lio/trino/operator/aggregation/state/QuantileDigestState;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/MinByAggregationFunction
@383
+#input(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;I)V
+#combine(Ljava/lang/invoke/MethodHandle;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;)V
+#output(Lio/trino/spi/function/InOut;Lio/trino/spi/function/InOut;Lio/trino/spi/block/BlockBuilder;)V

+###io/trino/operator/aggregation/ParametricAggregationImplementation
@395
+#<init>(Lio/trino/spi/function/Signature;Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getSignature()Lio/trino/spi/function/Signature;
+#hasSpecializedTypeParameters()Z
+#getFunctionNullability()Lio/trino/spi/function/FunctionNullability;
+#getDefinitionClass()Ljava/lang/Class;
+#getInputFunction()Ljava/lang/invoke/MethodHandle;
+#getRemoveInputFunction()Ljava/util/Optional;
+#getOutputFunction()Ljava/lang/invoke/MethodHandle;
+#getCombineFunction()Ljava/util/Optional;
+#getInputDependencies()Ljava/util/List;
+#getRemoveInputDependencies()Ljava/util/List;
+#getOutputDependencies()Ljava/util/List;
+#getCombineDependencies()Ljava/util/List;
+#getInputParameterKinds()Ljava/util/List;
+#areTypesAssignable(Lio/trino/spi/function/BoundSignature;)Z
+#withAlias(Ljava/lang/String;)Lio/trino/operator/ParametricImplementation;

+###io/trino/operator/aggregation/LongDoubleState
@366
+#getFirst()J
+#setFirst(J)V
+#isFirstNull()Z
+#setFirstNull(Z)V
+#getSecond()D
+#setSecond(D)V
+#isSecondNull()Z
+#setSecondNull(Z)V

+###io/trino/operator/ChangeOnlyUpdatedColumnsMergeProcessor
@393
+#<init>(IILjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Set;)V
+#transformPage(Lio/trino/spi/Page;)Lio/trino/spi/Page;
@394
+#<init>(IILjava/util/List;Ljava/util/List;)V
-#<init>(IILjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Set;)V

+###io/trino/operator/exchange/ScaleWriterExchanger
@395
+#<init>(Ljava/util/List;Lio/trino/operator/exchange/LocalExchangeMemoryManager;JLjava/util/function/Supplier;Lio/airlift/units/DataSize;)V
+#accept(Lio/trino/spi/Page;)V
+#waitForWriting()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/DirectExchangeClientSupplier
@369
+#get(Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;)Lio/trino/operator/DirectExchangeClient;
@370
+#get(Lio/trino/spi/QueryId;Lio/trino/spi/exchange/ExchangeId;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;)Lio/trino/operator/DirectExchangeClient;
-#get(Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;)Lio/trino/operator/DirectExchangeClient;

+###io/trino/operator/StreamingDirectExchangeBuffer
@369
+#<init>(Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;)V
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#pollPage()Lio/airlift/slice/Slice;
+#addTask(Lio/trino/execution/TaskId;)V
+#addPages(Lio/trino/execution/TaskId;Ljava/util/List;)V
+#taskFinished(Lio/trino/execution/TaskId;)V
+#taskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#noMoreTasks()V
+#isFinished()Z
+#isFailed()Z
+#getRemainingCapacityInBytes()J
+#getRetainedSizeInBytes()J
+#getMaxRetainedSizeInBytes()J
+#getBufferedPageCount()I
+#close()V
@370
+#getSpilledBytes()J
+#getSpilledPageCount()I

+###io/trino/operator/GroupByHashPageIndexerFactory
@366
+#<init>(Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#createPageIndexer(Ljava/util/List;)Lio/trino/spi/PageIndexer;

+###io/trino/operator/MergeWriterOperator
@393
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/spi/connector/ConnectorMergeSink;)V
+#addInput(Lio/trino/spi/Page;)V
+#finish()V
@401
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/spi/connector/ConnectorMergeSink;Ljava/util/function/Function;)V
-#<init>(Lio/trino/operator/OperatorContext;Lio/trino/spi/connector/ConnectorMergeSink;)V
@406
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#isFinished()Z
+#needsInput()Z
+#getOutput()Lio/trino/spi/Page;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#close()V

+###io/trino/operator/MergeProcessorOperator$Factory
@393
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/MergeRowChangeProcessor;)V
+#create(Lio/trino/operator/ProcessorContext;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorOperator;
+#getOperatorId()I
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#close()V
+#duplicate()Lio/trino/operator/MergeProcessorOperator$Factory;
+#duplicate()Lio/trino/operator/BasicWorkProcessorOperatorAdapter$BasicAdapterWorkProcessorOperatorFactory;
@401
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/MergeRowChangeProcessor;Ljava/util/function/Function;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/MergeRowChangeProcessor;)V

+###io/trino/operator/join/unspilled/PartitionedLookupSourceFactory
@389
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLio/trino/type/BlockTypeOperators;)V
+#getTypes()Ljava/util/List;
+#getOutputTypes()Ljava/util/List;
+#partitions()I
+#createLookupSource()Lcom/google/common/util/concurrent/ListenableFuture;
+#whenBuildFinishes()Lcom/google/common/util/concurrent/ListenableFuture;
+#lendPartitionLookupSource(ILjava/util/function/Supplier;)Lcom/google/common/util/concurrent/ListenableFuture;
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;
+#destroy()V
+#isDestroyed()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/join/unspilled/PartitionedLookupSource
@389
+#createPartitionedLookupSourceSupplier(Ljava/util/List;Ljava/util/List;ZLio/trino/type/BlockTypeOperators;)Lio/trino/operator/join/TrackingLookupSourceSupplier;
+#isEmpty()Z
+#getJoinPositionCount()J
+#getInMemorySizeInBytes()J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;)J
+#getJoinPosition(ILio/trino/spi/Page;Lio/trino/spi/Page;J)J
+#getNextJoinPosition(JILio/trino/spi/Page;)J
+#isJoinPositionEligible(JILio/trino/spi/Page;)Z
+#appendTo(JLio/trino/spi/PageBuilder;I)V
+#joinPositionWithinPartition(J)J
+#close()V
@399
+#getJoinPosition([ILio/trino/spi/Page;Lio/trino/spi/Page;[J[J)V
+#getJoinPosition([ILio/trino/spi/Page;Lio/trino/spi/Page;[J)V

+###io/trino/operator/join/unspilled/HashBuilderOperator$State
@389
+#values()[Lio/trino/operator/join/unspilled/HashBuilderOperator$State;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/join/unspilled/HashBuilderOperator$State;

+###io/trino/operator/join/unspilled/HashBuilderOperator
@389
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/operator/join/unspilled/PartitionedLookupSourceFactory;ILjava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;Lio/trino/operator/HashArraySizeSupplier;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z
+#close()V

+###io/trino/operator/join/unspilled/PartitionedLookupSource$OuterPositionTracker$Factory
@389
+#<init>(Ljava/util/List;)V
+#create()Lio/trino/operator/join/unspilled/PartitionedLookupSource$OuterPositionTracker;
+#getOuterPositionIterator()Lio/trino/operator/join/OuterPositionIterator;

+###io/trino/operator/join/unspilled/LookupJoinPageBuilder
@389
+#<init>(Ljava/util/List;)V
+#isFull()Z
+#isEmpty()Z
+#reset()V
+#appendRow(Lio/trino/operator/join/JoinProbe;Lio/trino/operator/join/LookupSource;J)V
+#appendNullForBuild(Lio/trino/operator/join/JoinProbe;)V
+#build(Lio/trino/operator/join/JoinProbe;)Lio/trino/spi/Page;
+#toString()Ljava/lang/String;
@399
+#appendRow(Lio/trino/operator/join/unspilled/JoinProbe;Lio/trino/operator/join/LookupSource;J)V
+#appendNullForBuild(Lio/trino/operator/join/unspilled/JoinProbe;)V
+#build(Lio/trino/operator/join/unspilled/JoinProbe;)Lio/trino/spi/Page;
-#appendRow(Lio/trino/operator/join/JoinProbe;Lio/trino/operator/join/LookupSource;J)V
-#appendNullForBuild(Lio/trino/operator/join/JoinProbe;)V
-#build(Lio/trino/operator/join/JoinProbe;)Lio/trino/spi/Page;

+###io/trino/operator/join/unspilled/LookupJoinOperatorFactory
@389
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZZLio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Ljava/util/OptionalInt;)V
+#createOuterOperatorFactory()Ljava/util/Optional;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#getOperatorId()I
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getOperatorType()Ljava/lang/String;
+#create(Lio/trino/operator/ProcessorContext;Lio/trino/operator/WorkProcessor;)Lio/trino/operator/WorkProcessorOperator;
+#createAdapterOperator(Lio/trino/operator/ProcessorContext;)Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperator;
+#close()V
+#duplicate()Lio/trino/operator/join/unspilled/LookupJoinOperatorFactory;
+#duplicate()Lio/trino/operator/OperatorFactory;
+#duplicate()Lio/trino/operator/WorkProcessorOperatorAdapter$AdapterWorkProcessorOperatorFactory;
@395
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/OperatorFactories$JoinOperatorType;Lio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Ljava/util/OptionalInt;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZZLio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Ljava/util/OptionalInt;)V
@399
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/OperatorFactories$JoinOperatorType;Lio/trino/operator/join/unspilled/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Ljava/util/OptionalInt;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/operator/OperatorFactories$JoinOperatorType;Lio/trino/operator/join/JoinProbe$JoinProbeFactory;Lio/trino/type/BlockTypeOperators;Ljava/util/List;Ljava/util/OptionalInt;)V

+###io/trino/operator/join/unspilled/LookupJoinOperator
@389
+#getOperatorInfo()Ljava/util/Optional;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#finish()V
+#getOutputPages()Lio/trino/operator/WorkProcessor;
+#process()Lio/trino/operator/WorkProcessor$ProcessState;
+#close()V

+###io/trino/operator/join/unspilled/HashBuilderOperator$HashBuilderOperatorFactory
@389
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/operator/join/JoinBridgeManager;Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;ILio/trino/operator/PagesIndex$Factory;Lio/trino/operator/HashArraySizeSupplier;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/join/unspilled/HashBuilderOperator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;

+###io/trino/operator/join/unspilled/PageJoiner
@389
+#<init>(Lio/trino/operator/ProcessorContext;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZLio/trino/operator/join/JoinProbe$JoinProbeFactory;Lcom/google/common/util/concurrent/ListenableFuture;Lio/trino/operator/join/JoinStatisticsCounter;)V
+#close()V
+#process(Lio/trino/spi/Page;)Lio/trino/operator/WorkProcessor$TransformationState;
+#process(Ljava/lang/Object;)Lio/trino/operator/WorkProcessor$TransformationState;
@399
+#<init>(Lio/trino/operator/ProcessorContext;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZLio/trino/operator/join/unspilled/JoinProbe$JoinProbeFactory;Lcom/google/common/util/concurrent/ListenableFuture;Lio/trino/operator/join/JoinStatisticsCounter;)V
-#<init>(Lio/trino/operator/ProcessorContext;Ljava/util/List;Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;ZLio/trino/operator/join/JoinProbe$JoinProbeFactory;Lcom/google/common/util/concurrent/ListenableFuture;Lio/trino/operator/join/JoinStatisticsCounter;)V

+###io/trino/operator/join/BigintPagesHash
@394
+#<init>(Lit/unimi/dsi/fastutil/longs/LongArrayList;Lio/trino/operator/PagesHashStrategy;Lio/trino/operator/join/PositionLinks$FactoryBuilder;Lio/trino/operator/HashArraySizeSupplier;Ljava/util/List;I)V
+#getPositionCount()I
+#getInMemorySizeInBytes()J
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#getAddressIndex(ILio/trino/spi/Page;J)I
+#getAddressIndex(ILio/trino/spi/Page;)I
+#appendTo(JLio/trino/spi/PageBuilder;I)V
@399
+#getAddressIndex([ILio/trino/spi/Page;[J)[I
+#getAddressIndex([ILio/trino/spi/Page;)[I
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D
@406
+#getEstimatedRetainedSizeInBytes(ILio/trino/operator/HashArraySizeSupplier;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;J)J

+###io/trino/operator/join/DefaultPagesHash
@394
+#<init>(Lit/unimi/dsi/fastutil/longs/LongArrayList;Lio/trino/operator/PagesHashStrategy;Lio/trino/operator/join/PositionLinks$FactoryBuilder;Lio/trino/operator/HashArraySizeSupplier;)V
+#getPositionCount()I
+#getInMemorySizeInBytes()J
+#getHashCollisions()J
+#getExpectedHashCollisions()D
+#getAddressIndex(ILio/trino/spi/Page;)I
+#getAddressIndex(ILio/trino/spi/Page;J)I
+#appendTo(JLio/trino/spi/PageBuilder;I)V
@399
+#getAddressIndex([ILio/trino/spi/Page;)[I
+#getAddressIndex([ILio/trino/spi/Page;[J)[I
@405
-#getHashCollisions()J
-#getExpectedHashCollisions()D
@406
+#getEstimatedRetainedSizeInBytes(ILio/trino/operator/HashArraySizeSupplier;Lit/unimi/dsi/fastutil/longs/LongArrayList;Ljava/util/List;J)J

+###io/trino/operator/DirectExchangeClientFactory
@369
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/FeaturesConfig;Lio/trino/operator/DirectExchangeClientConfig;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZILio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
+#stop()V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;
+#get(Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;)Lio/trino/operator/DirectExchangeClient;
@370
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/FeaturesConfig;Lio/trino/operator/DirectExchangeClientConfig;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/exchange/ExchangeManagerRegistry;)V
+#<init>(Lio/airlift/node/NodeInfo;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZILio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/exchange/ExchangeManagerRegistry;)V
+#get(Lio/trino/spi/QueryId;Lio/trino/spi/exchange/ExchangeId;Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;)Lio/trino/operator/DirectExchangeClient;
-#<init>(Lio/airlift/node/NodeInfo;Lio/trino/FeaturesConfig;Lio/trino/operator/DirectExchangeClientConfig;Lio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
-#<init>(Lio/airlift/node/NodeInfo;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/airlift/units/DataSize;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZILio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;)V
-#get(Lio/trino/memory/context/LocalMemoryContext;Lio/trino/execution/TaskFailureListener;Lio/trino/operator/RetryPolicy;)Lio/trino/operator/DirectExchangeClient;

+###io/trino/operator/MergeRowChangeProcessor
@393
+#transformPage(Lio/trino/spi/Page;)Lio/trino/spi/Page;

+###io/trino/operator/SimpleTableExecuteOperator$SimpleTableExecuteOperatorOperatorFactory
@376
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/RetryPolicy
@366
+#values()[Lio/trino/operator/RetryPolicy;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/RetryPolicy;
@367
+#getRetryMode()Lio/trino/spi/connector/RetryMode;

+###io/trino/operator/unnest/UnnestBlockBuilder
@390
+#<init>()V
+#resetInputBlock(Lio/trino/spi/block/Block;)V
+#resetInputBlock(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)V
+#buildWithoutNulls(I)Lio/trino/spi/block/Block;
+#buildWithNulls([IIII[I)Lio/trino/spi/block/Block;

+###io/trino/operator/unnest/Unnester
@390
+#getChannelCount()I
+#resetInput(Lio/trino/spi/block/Block;)V
+#getOutputEntriesPerPosition()[I
+#buildOutputBlocks([IIII)[Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J

+###io/trino/operator/unnest/ArrayOfRowsUnnester
@390
+#<init>(I)V
+#getChannelCount()I
+#resetInput(Lio/trino/spi/block/Block;)V
+#getOutputEntriesPerPosition()[I
+#buildOutputBlocks([IIII)[Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J

+###io/trino/operator/unnest/ReplicatedBlockBuilder
@390
+#<init>()V
+#resetInputBlock(Lio/trino/spi/block/Block;)V
+#buildOutputBlock([IIII)Lio/trino/spi/block/Block;

+###io/trino/operator/unnest/ArrayUnnester
@390
+#<init>()V
+#getChannelCount()I
+#resetInput(Lio/trino/spi/block/Block;)V
+#getOutputEntriesPerPosition()[I
+#buildOutputBlocks([IIII)[Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J

+###io/trino/operator/unnest/MapUnnester
@390
+#<init>()V
+#getChannelCount()I
+#resetInput(Lio/trino/spi/block/Block;)V
+#getOutputEntriesPerPosition()[I
+#buildOutputBlocks([IIII)[Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J

+###io/trino/operator/DirectExchangeClient
@369
+#<init>(Ljava/lang/String;Lio/trino/FeaturesConfig$DataIntegrityVerification;Lio/trino/operator/DirectExchangeBuffer;Lio/airlift/units/DataSize;ILio/airlift/units/Duration;ZLio/airlift/http/client/HttpClient;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/memory/context/LocalMemoryContext;Ljava/util/concurrent/Executor;Lio/trino/execution/TaskFailureListener;)V
+#getStatus()Lio/trino/operator/DirectExchangeClientStatus;
+#addLocation(Lio/trino/execution/TaskId;Ljava/net/URI;)V
+#noMoreLocations()V
+#pages()Lio/trino/operator/WorkProcessor;
+#pollPage()Lio/airlift/slice/Slice;
+#isFinished()Z
+#close()V
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/operator/output/RowPositionsAppender
@389
+#createRowAppender(Lio/trino/operator/output/PositionsAppenderFactory;Lio/trino/spi/type/RowType;IJ)Lio/trino/operator/output/RowPositionsAppender;
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/PositionsAppenderFactory
@373
+#<init>()V
+#create(Lio/trino/spi/type/Type;Ljava/lang/Class;)Lio/trino/operator/output/PositionsAppender;
@383
+#<init>(Lio/trino/type/BlockTypeOperators;)V
+#create(Lio/trino/spi/type/Type;IJ)Lio/trino/operator/output/PositionsAppender;
-#<init>()V
-#create(Lio/trino/spi/type/Type;Ljava/lang/Class;)Lio/trino/operator/output/PositionsAppender;

+###io/trino/operator/output/Int128PositionsAppender
@383
+#<init>(I)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/IntPositionsAppender
@383
+#<init>(I)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/SlicePositionsAppender
@383
+#<init>(IJ)V
+#<init>(II)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/LongPositionsAppender
@383
+#<init>(I)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/BytePositionsAppender
@383
+#<init>(I)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/RleAwarePositionsAppender
@383
+#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/operator/output/PositionsAppender;)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V
@408
+#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionIsDistinctFrom;Lio/trino/operator/output/PositionsAppender;)V
-#<init>(Lio/trino/type/BlockTypeOperators$BlockPositionEqual;Lio/trino/operator/output/PositionsAppender;)V

+###io/trino/operator/output/ShortPositionsAppender
@383
+#<init>(I)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/PositionsAppender
@373
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
-#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/UnnestingPositionsAppender
@383
+#<init>(Lio/trino/operator/output/PositionsAppender;)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/Int96PositionsAppender
@383
+#<init>(I)V
+#append(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;)V
+#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
+#build()Lio/trino/spi/block/Block;
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
@397
+#appendRle(Lio/trino/spi/block/Block;I)V
-#appendRle(Lio/trino/spi/block/RunLengthEncodedBlock;)V
@407
+#append(ILio/trino/spi/block/Block;)V

+###io/trino/operator/output/PositionsAppenderPageBuilder
@383
+#withMaxPageSize(ILjava/util/List;Lio/trino/operator/output/PositionsAppenderFactory;)Lio/trino/operator/output/PositionsAppenderPageBuilder;
+#appendToOutputPartition(Lio/trino/spi/Page;Lit/unimi/dsi/fastutil/ints/IntArrayList;)V
+#getRetainedSizeInBytes()J
+#getSizeInBytes()J
+#declarePositions(I)V
+#isFull()Z
+#isEmpty()Z
+#build()Lio/trino/spi/Page;
@407
+#appendToOutputPartition(Lio/trino/spi/Page;I)V

+###io/trino/operator/MergeProcessorOperator
@393
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/TableWriterNode$MergeParadigmAndTypes;IILjava/util/List;Ljava/util/List;Ljava/util/Set;)Lio/trino/operator/OperatorFactory;
+#getOutputPages()Lio/trino/operator/WorkProcessor;
@394
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/TableWriterNode$MergeParadigmAndTypes;IILjava/util/List;Ljava/util/List;)Lio/trino/operator/OperatorFactory;
-#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/TableWriterNode$MergeParadigmAndTypes;IILjava/util/List;Ljava/util/List;Ljava/util/Set;)Lio/trino/operator/OperatorFactory;
@401
+#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/TableWriterNode$MergeParadigmAndTypes;IILjava/util/List;Ljava/util/List;Ljava/util/function/Function;)Lio/trino/operator/OperatorFactory;
-#createOperatorFactory(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/TableWriterNode$MergeParadigmAndTypes;IILjava/util/List;Ljava/util/List;)Lio/trino/operator/OperatorFactory;

+###io/trino/operator/DeduplicatingDirectExchangeBuffer
@369
+#<init>(Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;Lio/trino/operator/RetryPolicy;)V
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#pollPage()Lio/airlift/slice/Slice;
+#addTask(Lio/trino/execution/TaskId;)V
+#addPages(Lio/trino/execution/TaskId;Ljava/util/List;)V
+#taskFinished(Lio/trino/execution/TaskId;)V
+#taskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#noMoreTasks()V
+#isFinished()Z
+#isFailed()Z
+#getRemainingCapacityInBytes()J
+#getRetainedSizeInBytes()J
+#getMaxRetainedSizeInBytes()J
+#getBufferedPageCount()I
+#close()V
@370
+#<init>(Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;Lio/trino/operator/RetryPolicy;Lio/trino/exchange/ExchangeManagerRegistry;Lio/trino/spi/QueryId;Lio/trino/spi/exchange/ExchangeId;)V
+#getSpilledBytes()J
+#getSpilledPageCount()I
-#<init>(Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;Lio/trino/operator/RetryPolicy;)V

+###io/trino/operator/PagesIndexPageSorter
@366
+#<init>(Lio/trino/operator/PagesIndex$Factory;)V
+#sort(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)[J
+#decodePageIndex(J)I
+#decodePositionIndex(J)I

+###io/trino/operator/GroupByHashPageIndexer
@366
+#<init>(Ljava/util/List;Lio/trino/sql/gen/JoinCompiler;Lio/trino/type/BlockTypeOperators;)V
+#<init>(Lio/trino/operator/GroupByHash;)V
+#indexPage(Lio/trino/spi/Page;)[I
+#getMaxIndex()I

+###io/trino/operator/DirectExchangeClientStatus
@369
+#<init>(JJJJIZLjava/util/List;)V
+#getBufferedBytes()J
+#getMaxBufferedBytes()J
+#getAverageBytesPerRequest()J
+#getSuccessfulRequestsCount()J
+#getBufferedPages()I
+#isNoMoreLocations()Z
+#getPageBufferClientStatuses()Ljava/util/List;
+#isFinal()Z
+#toString()Ljava/lang/String;
+#mergeWith(Lio/trino/operator/DirectExchangeClientStatus;)Lio/trino/operator/DirectExchangeClientStatus;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@370
+#<init>(JJJJIIJZLjava/util/List;)V
+#getSpilledPages()I
+#getSpilledBytes()J
-#<init>(JJJJIZLjava/util/List;)V
@406
+#<init>(JJJJIIJZLjava/util/List;Lio/trino/plugin/base/metrics/TDigestHistogram;)V
+#getRequestDuration()Lio/trino/plugin/base/metrics/TDigestHistogram;
-#<init>(JJJJIIJZLjava/util/List;)V

+###io/trino/operator/SimpleTableExecuteOperator
@376
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/metadata/TableExecuteHandle;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#finish()V
+#isFinished()Z

+###io/trino/operator/DeleteAndInsertMergeProcessor
@393
+#<init>(Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;IILjava/util/List;Ljava/util/List;Ljava/util/Set;)V
+#getDataColumnTypes()Ljava/util/List;
+#getRowIdType()Lio/trino/spi/type/Type;
+#transformPage(Lio/trino/spi/Page;)Lio/trino/spi/Page;
@394
+#<init>(Ljava/util/List;Lio/trino/spi/type/Type;IILjava/util/List;Ljava/util/List;)V
-#<init>(Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;IILjava/util/List;Ljava/util/List;Ljava/util/Set;)V

+###io/trino/operator/window/InternalWindowIndex
@367
+#getRawBlock(II)Lio/trino/spi/block/Block;
+#getRawBlockPosition(I)I

+###io/trino/operator/window/AggregationWindowFunctionSupplier
@367
+#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;)V
+#getLambdaInterfaces()Ljava/util/List;
+#createWindowFunction(ZLjava/util/List;)Lio/trino/spi/function/WindowFunction;
@374
+#createWindowAccumulator(Ljava/util/List;)Lio/trino/operator/aggregation/WindowAccumulator;
@395
+#<init>(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/AggregationImplementation;Lio/trino/spi/function/FunctionNullability;)V
-#<init>(Lio/trino/metadata/BoundSignature;Lio/trino/operator/aggregation/AggregationMetadata;Lio/trino/metadata/FunctionNullability;)V

+###io/trino/operator/window/MappedWindowFunction
@367
+#<init>(Lio/trino/spi/function/WindowFunction;Ljava/util/List;)V
+#reset(Lio/trino/spi/function/WindowIndex;)V
+#processRow(Lio/trino/spi/block/BlockBuilder;IIII)V

+###io/trino/operator/window/MappedWindowIndex
@367
+#<init>(Ljava/util/List;)V
+#setDelegate(Lio/trino/operator/window/InternalWindowIndex;)V
+#size()I
+#isNull(II)Z
+#getBoolean(II)Z
+#getLong(II)J
+#getDouble(II)D
+#getSlice(II)Lio/airlift/slice/Slice;
+#getSingleValueBlock(II)Lio/trino/spi/block/Block;
+#getObject(II)Ljava/lang/Object;
+#appendTo(IILio/trino/spi/block/BlockBuilder;)V
+#getRawBlock(II)Lio/trino/spi/block/Block;
+#getRawBlockPosition(I)I

+###io/trino/operator/OperatorFactories$JoinOperatorType
@395
+#ofJoinNodeType(Lio/trino/sql/planner/plan/JoinNode$Type;ZZ)Lio/trino/operator/OperatorFactories$JoinOperatorType;
+#innerJoin(ZZ)Lio/trino/operator/OperatorFactories$JoinOperatorType;
+#probeOuterJoin(Z)Lio/trino/operator/OperatorFactories$JoinOperatorType;
+#lookupOuterJoin(Z)Lio/trino/operator/OperatorFactories$JoinOperatorType;
+#fullOuterJoin()Lio/trino/operator/OperatorFactories$JoinOperatorType;
+#isOutputSingleMatch()Z
+#isWaitForBuild()Z
+#getType()Lio/trino/operator/join/LookupJoinOperatorFactory$JoinType;

+###io/trino/operator/DirectExchangeBuffer
@369
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#pollPage()Lio/airlift/slice/Slice;
+#addTask(Lio/trino/execution/TaskId;)V
+#addPages(Lio/trino/execution/TaskId;Ljava/util/List;)V
+#taskFinished(Lio/trino/execution/TaskId;)V
+#taskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#noMoreTasks()V
+#isFinished()Z
+#isFailed()Z
+#getRemainingCapacityInBytes()J
+#getRetainedSizeInBytes()J
+#getMaxRetainedSizeInBytes()J
+#getBufferedPageCount()I
+#close()V
@370
+#getSpilledBytes()J
+#getSpilledPageCount()I

+###io/trino/operator/DirectExchangeClientConfig
@369
+#<init>()V
+#getMaxBufferSize()Lio/airlift/units/DataSize;
+#setMaxBufferSize(Lio/airlift/units/DataSize;)Lio/trino/operator/DirectExchangeClientConfig;
+#getConcurrentRequestMultiplier()I
+#setConcurrentRequestMultiplier(I)Lio/trino/operator/DirectExchangeClientConfig;
+#getMinErrorDuration()Lio/airlift/units/Duration;[deprecated]
+#setMinErrorDuration(Lio/airlift/units/Duration;)Lio/trino/operator/DirectExchangeClientConfig;[deprecated]
+#getMaxErrorDuration()Lio/airlift/units/Duration;
+#setMaxErrorDuration(Lio/airlift/units/Duration;)Lio/trino/operator/DirectExchangeClientConfig;
+#getMaxResponseSize()Lio/airlift/units/DataSize;
+#setMaxResponseSize(Lio/airlift/units/DataSize;)Lio/trino/operator/DirectExchangeClientConfig;
+#getClientThreads()I
+#setClientThreads(I)Lio/trino/operator/DirectExchangeClientConfig;
+#getPageBufferClientMaxCallbackThreads()I
+#setPageBufferClientMaxCallbackThreads(I)Lio/trino/operator/DirectExchangeClientConfig;
+#isAcknowledgePages()Z
+#setAcknowledgePages(Z)Lio/trino/operator/DirectExchangeClientConfig;
@370
+#getDeduplicationBufferSize()Lio/airlift/units/DataSize;
+#setDeduplicationBufferSize(Lio/airlift/units/DataSize;)Lio/trino/operator/DirectExchangeClientConfig;

+###io/trino/operator/scalar/SpecializedSqlScalarFunction
@395
+#getScalarFunctionImplementation(Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;

+###io/trino/operator/scalar/ChoicesSpecializedSqlScalarFunction$ScalarImplementationChoice
@395
+#<init>(Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#getMethodHandle()Ljava/lang/invoke/MethodHandle;
+#getInstanceFactory()Ljava/util/Optional;
+#getLambdaInterfaces()Ljava/util/List;
+#getInvocationConvention()Lio/trino/spi/function/InvocationConvention;
+#getScore()I

+###io/trino/operator/scalar/json/JsonInputFunctions
@383
+#varcharToJson(Lio/airlift/slice/Slice;Z)Lcom/fasterxml/jackson/databind/JsonNode;
+#varbinaryToJson(Lio/airlift/slice/Slice;Z)Lcom/fasterxml/jackson/databind/JsonNode;
+#varbinaryUtf8ToJson(Lio/airlift/slice/Slice;Z)Lcom/fasterxml/jackson/databind/JsonNode;
+#varbinaryUtf16ToJson(Lio/airlift/slice/Slice;Z)Lcom/fasterxml/jackson/databind/JsonNode;
+#varbinaryUtf32ToJson(Lio/airlift/slice/Slice;Z)Lcom/fasterxml/jackson/databind/JsonNode;

+###io/trino/operator/scalar/json/JsonExistsFunction
@383
+#<init>(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;)V
+#jsonExists(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/spi/type/Type;Lio/trino/json/JsonPathInvocationContext;Lio/trino/spi/connector/ConnectorSession;Lcom/fasterxml/jackson/databind/JsonNode;Lio/trino/json/ir/IrJsonPath;Lio/trino/spi/block/Block;J)Ljava/lang/Boolean;

+###io/trino/operator/scalar/json/JsonOutputConversionError
@383
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###io/trino/operator/scalar/json/JsonOutputFunctions
@383
+#jsonToVarchar(Lcom/fasterxml/jackson/databind/JsonNode;JZ)Lio/airlift/slice/Slice;
+#jsonToVarbinary(Lcom/fasterxml/jackson/databind/JsonNode;JZ)Lio/airlift/slice/Slice;
+#jsonToVarbinaryUtf8(Lcom/fasterxml/jackson/databind/JsonNode;JZ)Lio/airlift/slice/Slice;
+#jsonToVarbinaryUtf16(Lcom/fasterxml/jackson/databind/JsonNode;JZ)Lio/airlift/slice/Slice;
+#jsonToVarbinaryUtf32(Lcom/fasterxml/jackson/databind/JsonNode;JZ)Lio/airlift/slice/Slice;

+###io/trino/operator/scalar/json/JsonInputConversionError
@383
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###io/trino/operator/scalar/json/JsonObjectFunction
@385
+#jsonObject(Lio/trino/spi/type/RowType;Lio/trino/spi/type/RowType;Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;ZZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###io/trino/operator/scalar/json/JsonValueFunction$JsonValueResultError
@383
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/trino/operator/scalar/json/ParameterUtil
@383
+#getParametersArray(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)[Ljava/lang/Object;

+###io/trino/operator/scalar/json/JsonQueryFunction
@383
+#<init>(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;)V
+#jsonQuery(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/spi/type/Type;Lio/trino/json/JsonPathInvocationContext;Lio/trino/spi/connector/ConnectorSession;Lcom/fasterxml/jackson/databind/JsonNode;Lio/trino/json/ir/IrJsonPath;Lio/trino/spi/block/Block;JJJ)Lcom/fasterxml/jackson/databind/JsonNode;

+###io/trino/operator/scalar/json/JsonArrayFunction
@385
+#jsonArray(Lio/trino/spi/type/RowType;Lio/trino/spi/block/Block;Z)Lcom/fasterxml/jackson/databind/JsonNode;

+###io/trino/operator/scalar/json/JsonValueFunction
@383
+#<init>(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;)V
+#jsonValueLong(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/json/JsonPathInvocationContext;Lio/trino/spi/connector/ConnectorSession;Lcom/fasterxml/jackson/databind/JsonNode;Lio/trino/json/ir/IrJsonPath;Lio/trino/spi/block/Block;JLjava/lang/Long;JLjava/lang/Long;)Ljava/lang/Long;
+#jsonValueDouble(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/json/JsonPathInvocationContext;Lio/trino/spi/connector/ConnectorSession;Lcom/fasterxml/jackson/databind/JsonNode;Lio/trino/json/ir/IrJsonPath;Lio/trino/spi/block/Block;JLjava/lang/Double;JLjava/lang/Double;)Ljava/lang/Double;
+#jsonValueBoolean(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/json/JsonPathInvocationContext;Lio/trino/spi/connector/ConnectorSession;Lcom/fasterxml/jackson/databind/JsonNode;Lio/trino/json/ir/IrJsonPath;Lio/trino/spi/block/Block;JLjava/lang/Boolean;JLjava/lang/Boolean;)Ljava/lang/Boolean;
+#jsonValueSlice(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/json/JsonPathInvocationContext;Lio/trino/spi/connector/ConnectorSession;Lcom/fasterxml/jackson/databind/JsonNode;Lio/trino/json/ir/IrJsonPath;Lio/trino/spi/block/Block;JLio/airlift/slice/Slice;JLio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#jsonValue(Lio/trino/metadata/FunctionManager;Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/json/JsonPathInvocationContext;Lio/trino/spi/connector/ConnectorSession;Lcom/fasterxml/jackson/databind/JsonNode;Lio/trino/json/ir/IrJsonPath;Lio/trino/spi/block/Block;JLjava/lang/Object;JLjava/lang/Object;)Ljava/lang/Object;

+###io/trino/operator/scalar/ArrayTrimFunction
@372
+#trim(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;J)Lio/trino/spi/block/Block;

+###io/trino/operator/scalar/ChoicesSpecializedSqlScalarFunction
@395
+#<init>(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/lang/invoke/MethodHandle;)V
+#<init>(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#<init>(Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;Ljava/util/List;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Ljava/util/Optional;)V
+#<init>(Lio/trino/spi/function/BoundSignature;Ljava/util/List;)V
+#getChoices()Ljava/util/List;
+#getScalarFunctionImplementation(Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;

+###io/trino/operator/MergeWriterOperator$MergeWriterOperatorFactory
@393
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSinkManager;Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;Lio/trino/Session;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@401
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSinkManager;Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;Lio/trino/Session;Ljava/util/function/Function;)V
-#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/split/PageSinkManager;Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;Lio/trino/Session;)V

+###io/trino/sql/planner/DynamicFilterSourceConsumer
@383
+#addPartition(Lio/trino/spi/predicate/TupleDomain;)V
+#setPartitionCount(I)V
@392
+#isDomainCollectionComplete()Z

+###io/trino/sql/planner/SplitSourceFactory
@366
+#<init>(Lio/trino/split/SplitManager;Lio/trino/server/DynamicFilterService;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
+#createSplitSources(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;)Ljava/util/Map;
@367
+#<init>(Lio/trino/split/SplitManager;Lio/trino/sql/PlannerContext;Lio/trino/server/DynamicFilterService;Lio/trino/sql/planner/TypeAnalyzer;)V
-#<init>(Lio/trino/split/SplitManager;Lio/trino/server/DynamicFilterService;Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/OptimizerConfig
@373
+#<init>()V
+#getCpuCostWeight()D
+#setCpuCostWeight(D)Lio/trino/sql/planner/OptimizerConfig;
+#getMemoryCostWeight()D
+#setMemoryCostWeight(D)Lio/trino/sql/planner/OptimizerConfig;
+#getNetworkCostWeight()D
+#setNetworkCostWeight(D)Lio/trino/sql/planner/OptimizerConfig;
+#getJoinDistributionType()Lio/trino/sql/planner/OptimizerConfig$JoinDistributionType;
+#setJoinDistributionType(Lio/trino/sql/planner/OptimizerConfig$JoinDistributionType;)Lio/trino/sql/planner/OptimizerConfig;
+#getJoinMaxBroadcastTableSize()Lio/airlift/units/DataSize;
+#setJoinMaxBroadcastTableSize(Lio/airlift/units/DataSize;)Lio/trino/sql/planner/OptimizerConfig;
+#getJoinReorderingStrategy()Lio/trino/sql/planner/OptimizerConfig$JoinReorderingStrategy;
+#setJoinReorderingStrategy(Lio/trino/sql/planner/OptimizerConfig$JoinReorderingStrategy;)Lio/trino/sql/planner/OptimizerConfig;
+#getMaxReorderedJoins()I
+#setMaxReorderedJoins(I)Lio/trino/sql/planner/OptimizerConfig;
+#isEnableStatsCalculator()Z
+#setEnableStatsCalculator(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isStatisticsPrecalculationForPushdownEnabled()Z
+#setStatisticsPrecalculationForPushdownEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isCollectPlanStatisticsForAllQueries()Z
+#setCollectPlanStatisticsForAllQueries(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isIgnoreStatsCalculatorFailures()Z
+#setIgnoreStatsCalculatorFailures(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isDefaultFilterFactorEnabled()Z
+#setDefaultFilterFactorEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isColocatedJoinsEnabled()Z
+#setColocatedJoinsEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isDistributedIndexJoinsEnabled()Z
+#setDistributedIndexJoinsEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isSpatialJoinsEnabled()Z
+#setSpatialJoinsEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isDistributedSortEnabled()Z
+#setDistributedSortEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isUsePreferredWritePartitioning()Z
+#setUsePreferredWritePartitioning(Z)Lio/trino/sql/planner/OptimizerConfig;
+#getPreferredWritePartitioningMinNumberOfPartitions()I
+#setPreferredWritePartitioningMinNumberOfPartitions(I)Lio/trino/sql/planner/OptimizerConfig;
+#getIterativeOptimizerTimeout()Lio/airlift/units/Duration;
+#setIterativeOptimizerTimeout(Lio/airlift/units/Duration;)Lio/trino/sql/planner/OptimizerConfig;
+#isOptimizeMixedDistinctAggregations()Z
+#setOptimizeMixedDistinctAggregations(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isEnableIntermediateAggregations()Z
+#setEnableIntermediateAggregations(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isPushAggregationThroughOuterJoin()Z
+#setPushAggregationThroughOuterJoin(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isPushPartialAggregationThoughJoin()Z
+#setPushPartialAggregationThoughJoin(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isOptimizeMetadataQueries()Z
+#setOptimizeMetadataQueries(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isUseMarkDistinct()Z
+#setUseMarkDistinct(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isPreferPartialAggregation()Z
+#setPreferPartialAggregation(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isEnableForcedExchangeBelowGroupId()Z
+#setEnableForcedExchangeBelowGroupId(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isOptimizeTopNRanking()Z
+#setOptimizeTopNRanking(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isOptimizeHashGeneration()Z
+#setOptimizeHashGeneration(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isPushTableWriteThroughUnion()Z
+#setPushTableWriteThroughUnion(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isDictionaryAggregation()Z
+#setDictionaryAggregation(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isSkipRedundantSort()Z
+#setSkipRedundantSort(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isComplexExpressionPushdownEnabled()Z
+#setComplexExpressionPushdownEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isPredicatePushdownUseTableProperties()Z
+#setPredicatePushdownUseTableProperties(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isIgnoreDownstreamPreferences()Z
+#setIgnoreDownstreamPreferences(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isRewriteFilteringSemiJoinToInnerJoin()Z
+#setRewriteFilteringSemiJoinToInnerJoin(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isOptimizeDuplicateInsensitiveJoins()Z
+#setOptimizeDuplicateInsensitiveJoins(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isUseLegacyWindowFilterPushdown()Z
+#setUseLegacyWindowFilterPushdown(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isUseTableScanNodePartitioning()Z
+#setUseTableScanNodePartitioning(Z)Lio/trino/sql/planner/OptimizerConfig;
+#getTableScanNodePartitioningMinBucketToTaskRatio()D
+#setTableScanNodePartitioningMinBucketToTaskRatio(D)Lio/trino/sql/planner/OptimizerConfig;
+#isMergeProjectWithValues()Z
+#setMergeProjectWithValues(Z)Lio/trino/sql/planner/OptimizerConfig;
+#isForceSingleNodeOutput()Z
+#setForceSingleNodeOutput(Z)Lio/trino/sql/planner/OptimizerConfig;
@374
+#getJoinMultiClauseIndependenceFactor()D
+#setJoinMultiClauseIndependenceFactor(D)Lio/trino/sql/planner/OptimizerConfig;
+#getFilterConjunctionIndependenceFactor()D
+#setFilterConjunctionIndependenceFactor(D)Lio/trino/sql/planner/OptimizerConfig;
+#isAdaptivePartialAggregationEnabled()Z
+#setAdaptivePartialAggregationEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
+#getAdaptivePartialAggregationMinRows()J
+#setAdaptivePartialAggregationMinRows(J)Lio/trino/sql/planner/OptimizerConfig;
+#getAdaptivePartialAggregationUniqueRowsRatioThreshold()D
+#setAdaptivePartialAggregationUniqueRowsRatioThreshold(D)Lio/trino/sql/planner/OptimizerConfig;
@375
+#isNonEstimatablePredicateApproximationEnabled()Z
+#setNonEstimatablePredicateApproximationEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
@382
+#getJoinPartitionedBuildMinRowCount()J
+#setJoinPartitionedBuildMinRowCount(J)Lio/trino/sql/planner/OptimizerConfig;
@388
+#isUseExactPartitioning()Z
+#setUseExactPartitioning(Z)Lio/trino/sql/planner/OptimizerConfig;
@391
+#isPreAggregateCaseAggregationsEnabled()Z
+#setPreAggregateCaseAggregationsEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
@407
+#getMinInputSizePerTask()Lio/airlift/units/DataSize;
+#setMinInputSizePerTask(Lio/airlift/units/DataSize;)Lio/trino/sql/planner/OptimizerConfig;
+#getMinInputRowsPerTask()J
+#setMinInputRowsPerTask(J)Lio/trino/sql/planner/OptimizerConfig;
@409
+#isUseMarkDistinct()Ljava/lang/Boolean;[deprecated]
+#setUseMarkDistinct(Ljava/lang/Boolean;)Lio/trino/sql/planner/OptimizerConfig;[deprecated]
+#getMarkDistinctStrategy()Lio/trino/sql/planner/OptimizerConfig$MarkDistinctStrategy;
+#setMarkDistinctStrategy(Lio/trino/sql/planner/OptimizerConfig$MarkDistinctStrategy;)Lio/trino/sql/planner/OptimizerConfig;
-#isDistributedIndexJoinsEnabled()Z
-#setDistributedIndexJoinsEnabled(Z)Lio/trino/sql/planner/OptimizerConfig;
-#isUseMarkDistinct()Z
-#setUseMarkDistinct(Z)Lio/trino/sql/planner/OptimizerConfig;

+###io/trino/sql/planner/plan/SimpleTableExecuteNode
@376
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/Symbol;Lio/trino/metadata/TableExecuteHandle;)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getOutput()Lio/trino/sql/planner/Symbol;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
+#getExecuteHandle()Lio/trino/metadata/TableExecuteHandle;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/sql/planner/plan/AggregationNode$Builder
@383
+#<init>(Lio/trino/sql/planner/plan/AggregationNode;)V
+#setId(Lio/trino/sql/planner/plan/PlanNodeId;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
+#setSource(Lio/trino/sql/planner/plan/PlanNode;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
+#setAggregations(Ljava/util/Map;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
+#setGroupingSets(Lio/trino/sql/planner/plan/AggregationNode$GroupingSetDescriptor;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
+#setPreGroupedSymbols(Ljava/util/List;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
+#setStep(Lio/trino/sql/planner/plan/AggregationNode$Step;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
+#setHashSymbol(Ljava/util/Optional;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
+#setGroupIdSymbol(Ljava/util/Optional;)Lio/trino/sql/planner/plan/AggregationNode$Builder;
+#build()Lio/trino/sql/planner/plan/AggregationNode;

+###io/trino/sql/planner/plan/DynamicFilterSourceNode
@392
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Ljava/util/Map;)V
+#getOutputSymbols()Ljava/util/List;
+#getDynamicFilters()Ljava/util/Map;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/MergeWriterNode
@393
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;Ljava/util/List;Ljava/util/Optional;Ljava/util/List;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getTarget()Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;
+#getProjectedSymbols()Ljava/util/List;
+#getPartitioningScheme()Ljava/util/Optional;
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/TableWriterNode$MergeParadigmAndTypes
@393
+#<init>(Lio/trino/spi/connector/RowChangeParadigm;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;)V
+#getParadigm()Lio/trino/spi/connector/RowChangeParadigm;
+#getColumnTypes()Ljava/util/List;
+#getColumnNames()Ljava/util/List;
+#getRowIdType()Lio/trino/spi/type/Type;
@394
+#<init>(Lio/trino/spi/connector/RowChangeParadigm;Ljava/util/List;Lio/trino/spi/type/Type;)V
-#<init>(Lio/trino/spi/connector/RowChangeParadigm;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;)V
-#getColumnNames()Ljava/util/List;
@405
+#<init>(Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/Type;)V
+#getParadigm()Ljava/util/Optional;
+#getColumnNames()Ljava/util/List;
-#<init>(Lio/trino/spi/connector/RowChangeParadigm;Ljava/util/List;Lio/trino/spi/type/Type;)V
-#getParadigm()Lio/trino/spi/connector/RowChangeParadigm;

+###io/trino/sql/planner/plan/TableFunctionNode$TableArgumentProperties
@381
+#<init>(ZZZLio/trino/sql/planner/plan/WindowNode$Specification;)V
+#isRowSemantics()Z
+#isPruneWhenEmpty()Z
+#isPassThroughColumns()Z
+#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;
@405
+#<init>(Ljava/lang/String;ZZZLjava/util/List;Ljava/util/Optional;)V
+#getArgumentName()Ljava/lang/String;
+#getRequiredColumns()Ljava/util/List;
+#getSpecification()Ljava/util/Optional;
-#<init>(ZZZLio/trino/sql/planner/plan/WindowNode$Specification;)V
-#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;
@407
+#<init>(Ljava/lang/String;ZZLio/trino/sql/planner/plan/TableFunctionNode$PassThroughSpecification;Ljava/util/List;Ljava/util/Optional;)V
+#getPassThroughSpecification()Lio/trino/sql/planner/plan/TableFunctionNode$PassThroughSpecification;
-#<init>(Ljava/lang/String;ZZZLjava/util/List;Ljava/util/Optional;)V
-#isPassThroughColumns()Z

+###io/trino/sql/planner/plan/MergeProcessorNode
@393
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getTarget()Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;
+#getMergeRowSymbol()Lio/trino/sql/planner/Symbol;
+#getRowIdSymbol()Lio/trino/sql/planner/Symbol;
+#getDataColumnSymbols()Ljava/util/List;
+#getRedistributionColumnSymbols()Ljava/util/List;
+#getNonNullColumnSymbols()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getSources()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@394
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/TableWriterNode$MergeTarget;Lio/trino/sql/planner/Symbol;Lio/trino/sql/planner/Symbol;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
-#getNonNullColumnSymbols()Ljava/util/List;

+###io/trino/sql/planner/plan/TableFunctionNode
@381
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lio/trino/metadata/TableFunctionHandle;)V
+#getName()Ljava/lang/String;
+#getArguments()Ljava/util/Map;
+#getProperOutputs()Ljava/util/List;
+#getTableArgumentProperties()Ljava/util/List;
+#getInputDescriptorMappings()Ljava/util/Map;
+#getHandle()Lio/trino/metadata/TableFunctionHandle;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@399
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/metadata/TableFunctionHandle;)V
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lio/trino/metadata/TableFunctionHandle;)V
-#getInputDescriptorMappings()Ljava/util/Map;
@405
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/metadata/TableFunctionHandle;)V
+#getCopartitioningLists()Ljava/util/List;
-#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/trino/metadata/TableFunctionHandle;)V

+###io/trino/sql/planner/plan/TableWriterNode$MergeTarget
@393
+#<init>(Lio/trino/metadata/TableHandle;Ljava/util/Optional;Lio/trino/spi/connector/SchemaTableName;Lio/trino/sql/planner/plan/TableWriterNode$MergeParadigmAndTypes;)V
+#getHandle()Lio/trino/metadata/TableHandle;
+#getMergeHandle()Ljava/util/Optional;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#getMergeParadigmAndTypes()Lio/trino/sql/planner/plan/TableWriterNode$MergeParadigmAndTypes;
+#toString()Ljava/lang/String;
+#supportsReportingWrittenBytes(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z
@403
+#supportsMultipleWritersPerPartition(Lio/trino/metadata/Metadata;Lio/trino/Session;)Z

+###io/trino/sql/planner/SystemPartitioningHandle$SystemPartitionFunction$RoundRobinBucketFunction
@393
+#<init>(I)V
+#getBucket(Lio/trino/spi/Page;I)I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/planprinter/Anonymizer
@394
+#anonymize(Lio/trino/spi/type/Type;Ljava/lang/String;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/Symbol;)Ljava/lang/String;
+#anonymizeColumn(Ljava/lang/String;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/tree/Expression;)Ljava/lang/String;
+#anonymize(Lio/trino/spi/connector/ColumnHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/QualifiedObjectName;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/Partitioning$ArgumentBinding;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/IndexHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableHandle;Lio/trino/execution/TableInfo;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/PartitioningHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/plan/StatisticsWriterNode$WriteStatisticsTarget;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableExecuteHandle;)Ljava/lang/String;

+###io/trino/sql/planner/planprinter/NoOpAnonymizer
@394
+#<init>()V
+#anonymize(Lio/trino/spi/type/Type;Ljava/lang/String;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/Symbol;)Ljava/lang/String;
+#anonymizeColumn(Ljava/lang/String;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/tree/Expression;)Ljava/lang/String;
+#anonymize(Lio/trino/spi/connector/ColumnHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/QualifiedObjectName;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/Partitioning$ArgumentBinding;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/IndexHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableHandle;Lio/trino/execution/TableInfo;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/PartitioningHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/plan/StatisticsWriterNode$WriteStatisticsTarget;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableExecuteHandle;)Ljava/lang/String;

+###io/trino/sql/planner/planprinter/GraphvizPrinter
@366
+#printLogical(Ljava/util/List;)Ljava/lang/String;
+#printDistributed(Lio/trino/sql/planner/SubPlan;)Ljava/lang/String;

+###io/trino/sql/planner/planprinter/CounterBasedAnonymizer
@394
+#<init>()V
+#anonymize(Lio/trino/spi/type/Type;Ljava/lang/String;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/Symbol;)Ljava/lang/String;
+#anonymizeColumn(Ljava/lang/String;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/tree/Expression;)Ljava/lang/String;
+#anonymize(Lio/trino/spi/connector/ColumnHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/QualifiedObjectName;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/Partitioning$ArgumentBinding;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/IndexHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableHandle;Lio/trino/execution/TableInfo;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/PartitioningHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;)Ljava/lang/String;
+#anonymize(Lio/trino/sql/planner/plan/StatisticsWriterNode$WriteStatisticsTarget;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableHandle;)Ljava/lang/String;
+#anonymize(Lio/trino/metadata/TableExecuteHandle;)Ljava/lang/String;

+###io/trino/sql/planner/MergePartitioningHandle$PartitionFunctionLookup
@393
+#get(Lio/trino/sql/planner/PartitioningScheme;Ljava/util/List;)Lio/trino/operator/PartitionFunction;

+###io/trino/sql/planner/sanity/ValidateScaledWritersUsage
@380
+#<init>()V
+#validate(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/execution/warnings/WarningCollector;)V

+###io/trino/sql/planner/optimizations/ReplicateJoinAndSemiJoinInDelete
@392
+#<init>()V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;
@406
-###io/trino/sql/planner/optimizations/ReplicateJoinAndSemiJoinInDelete

+###io/trino/sql/planner/iterative/rule/PushInequalityFilterExpressionBelowJoinRuleSet
@380
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/sql/planner/TypeAnalyzer;)V
+#rules()Ljava/lang/Iterable;
+#pushParentInequalityFilterExpressionBelowJoinRule()Lio/trino/sql/planner/iterative/Rule;
+#pushJoinInequalityFilterExpressionBelowJoinRule()Lio/trino/sql/planner/iterative/Rule;

+###io/trino/sql/planner/iterative/rule/RewriteTableFunctionToTableScan
@381
+#<init>(Lio/trino/sql/PlannerContext;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableFunctionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@407
+#apply(Lio/trino/sql/planner/plan/TableFunctionProcessorNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
-#apply(Lio/trino/sql/planner/plan/TableFunctionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PruneMergeSourceColumns
@393
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/MergeWriterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/RemoveRedundantPredicateAboveTableScan
@371
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ArraySortAfterArrayDistinct
@375
+#<init>(Lio/trino/sql/PlannerContext;)V
+#rules()Ljava/util/Set;

+###io/trino/sql/planner/iterative/rule/RemoveEmptyUpdate
@394
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableFinishNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@406
-###io/trino/sql/planner/iterative/rule/RemoveEmptyUpdate

+###io/trino/sql/planner/iterative/rule/PushFilterThroughCountAggregation$PushFilterThroughCountAggregationWithoutProject
@378
+#<init>(Lio/trino/sql/PlannerContext;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/UseNonPartitionedJoinLookupSource
@382
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/NormalizeOrExpressionRewriter
@368
+#normalizeOrExpression(Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/iterative/rule/PreAggregateCaseAggregations
@391
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/AddDynamicFilterSource
@392
+#rules()Ljava/util/Set;

+###io/trino/sql/planner/iterative/rule/RemoveEmptyGlobalAggregation
@386
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/AggregationNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushFilterThroughCountAggregation$PushFilterThroughCountAggregationWithProject
@378
+#<init>(Lio/trino/sql/PlannerContext;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/FilterNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushFilterThroughCountAggregation
@378
+#<init>(Lio/trino/sql/PlannerContext;)V
+#rules()Ljava/util/Set;

+###io/trino/sql/planner/OptimizerConfig$JoinReorderingStrategy
@373
+#values()[Lio/trino/sql/planner/OptimizerConfig$JoinReorderingStrategy;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/OptimizerConfig$JoinReorderingStrategy;

+###io/trino/sql/planner/ConnectorExpressionTranslator$SqlToConnectorExpressionTranslator
@372
+#<init>(Lio/trino/Session;Ljava/util/Map;Lio/trino/sql/PlannerContext;)V

+###io/trino/sql/planner/OptimizerConfig$JoinDistributionType
@373
+#values()[Lio/trino/sql/planner/OptimizerConfig$JoinDistributionType;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/OptimizerConfig$JoinDistributionType;
+#canPartition()Z
+#canReplicate()Z

+###io/trino/sql/planner/MergePartitioningHandle
@393
+#<init>(Ljava/util/Optional;Ljava/util/Optional;)V
+#getInsertPartitioning()Ljava/util/Optional;
+#getUpdatePartitioning()Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#getNodePartitioningMap(Ljava/util/function/Function;)Lio/trino/sql/planner/NodePartitionMap;
+#getPartitionFunction(Lio/trino/sql/planner/MergePartitioningHandle$PartitionFunctionLookup;Ljava/util/List;[I)Lio/trino/operator/PartitionFunction;
@401
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@406
+#getFaultTolerantPartitioningScheme(Ljava/util/function/Function;)Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;

+###io/trino/sql/PlannerContext
@367
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/spi/type/TypeManager;)V
+#getMetadata()Lio/trino/metadata/Metadata;
+#getTypeOperators()Lio/trino/spi/type/TypeOperators;
+#getBlockEncodingSerde()Lio/trino/spi/block/BlockEncodingSerde;
+#getTypeManager()Lio/trino/spi/type/TypeManager;
@374
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/spi/type/TypeManager;Lio/trino/metadata/FunctionManager;)V
+#getFunctionManager()Lio/trino/metadata/FunctionManager;
-#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeOperators;Lio/trino/spi/block/BlockEncodingSerde;Lio/trino/spi/type/TypeManager;)V

+###io/trino/sql/analyzer/Analysis$TableFunctionInvocationAnalysis
@381
+#<init>(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getFunctionName()Ljava/lang/String;
+#getArguments()Ljava/util/Map;
+#getConnectorTableFunctionHandle()Lio/trino/spi/ptf/ConnectorTableFunctionHandle;
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
@392
+#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogHandle()Lio/trino/connector/CatalogHandle;
-#<init>(Lio/trino/connector/CatalogName;Ljava/lang/String;Ljava/util/Map;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#getCatalogName()Lio/trino/connector/CatalogName;
@399
+#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getTableArgumentAnalyses()Ljava/util/List;
+#getCopartitioningLists()Ljava/util/List;
-#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
@400
+#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ILio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getProperColumnsCount()I
-#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
@405
+#<init>(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/List;ILio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
+#getRequiredColumns()Ljava/util/Map;
-#<init>(Lio/trino/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ILio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
-#getCatalogHandle()Lio/trino/connector/CatalogHandle;
@407
+#<init>(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/List;ILio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#getSchemaName()Ljava/lang/String;
-#<init>(Lio/trino/spi/connector/CatalogHandle;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/List;ILio/trino/spi/ptf/ConnectorTableFunctionHandle;Lio/trino/spi/connector/ConnectorTransactionHandle;)V

+###io/trino/sql/analyzer/Analysis$MergeAnalysis
@393
+#<init>(Lio/trino/sql/tree/Table;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Map;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Scope;)V
+#getTargetTable()Lio/trino/sql/tree/Table;
+#getDataColumnSchemas()Ljava/util/List;
+#getDataColumnHandles()Ljava/util/List;
+#getRedistributionColumnHandles()Ljava/util/List;
+#getMergeCaseColumnHandles()Ljava/util/List;
+#getNonNullableColumnHandles()Ljava/util/Set;
+#getColumnHandleFieldNumbers()Ljava/util/Map;
+#getInsertPartitioningArgumentIndexes()Ljava/util/List;
+#getInsertLayout()Ljava/util/Optional;
+#getUpdateLayout()Ljava/util/Optional;
+#getJoinScope()Lio/trino/sql/analyzer/Scope;
+#getTargetTableScope()Lio/trino/sql/analyzer/Scope;
@405
+#<init>(Lio/trino/sql/tree/Table;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Map;Lio/trino/spi/type/RowType;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Scope;)V
+#getMergeRowType()Lio/trino/spi/type/RowType;
-#<init>(Lio/trino/sql/tree/Table;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Map;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/sql/analyzer/Scope;Lio/trino/sql/analyzer/Scope;)V

+###io/trino/sql/analyzer/JsonPathAnalyzer
@383
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/Session;Lio/trino/sql/analyzer/ExpressionAnalyzer;)V
+#analyzeJsonPath(Lio/trino/sql/tree/StringLiteral;Ljava/util/Map;)Lio/trino/sql/analyzer/JsonPathAnalyzer$JsonPathAnalysis;

+###io/trino/sql/analyzer/JsonPathAnalyzer$JsonPathAnalysis
@383
+#<init>(Lio/trino/sql/jsonpath/tree/JsonPath;Ljava/util/Map;Ljava/util/Set;)V
+#getPath()Lio/trino/sql/jsonpath/tree/JsonPath;
+#getType(Lio/trino/sql/jsonpath/tree/PathNode;)Lio/trino/spi/type/Type;
+#getTypes()Ljava/util/Map;
+#getJsonParameters()Ljava/util/Set;

+###io/trino/sql/analyzer/StatementAnalyzerFactory
@367
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;)V
+#withSpecializedAccessControl(Lio/trino/security/AccessControl;)Lio/trino/sql/analyzer/StatementAnalyzerFactory;
+#createStatementAnalyzer(Lio/trino/sql/analyzer/Analysis;Lio/trino/Session;Lio/trino/execution/warnings/WarningCollector;Lio/trino/sql/analyzer/CorrelationSupport;)Lio/trino/sql/analyzer/StatementAnalyzer;
+#createTestingStatementAnalyzerFactory(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/AnalyzePropertyManager;)Lio/trino/sql/analyzer/StatementAnalyzerFactory;
@381
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/transaction/TransactionManager;Lio/trino/spi/security/GroupProvider;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/TableFunctionRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;)V
-#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/parser/SqlParser;Lio/trino/security/AccessControl;Lio/trino/spi/security/GroupProvider;Lio/trino/metadata/TableProceduresRegistry;Lio/trino/metadata/SessionPropertyManager;Lio/trino/metadata/TablePropertyManager;Lio/trino/metadata/AnalyzePropertyManager;Lio/trino/metadata/TableProceduresPropertyManager;)V

+###io/trino/split/PageSinkId
@401
+#fromTaskId(Lio/trino/execution/TaskId;)Lio/trino/split/PageSinkId;
+#getId()J

+###io/trino/server/security/jwt/InvalidClaimException
@397
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###io/trino/execution/scheduler/FaultTolerantPartitioningSchemeFactory
@397
+#<init>(Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/Session;I)V
+#get(Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;

+###io/trino/execution/scheduler/ScaledPipelinedOutputBufferManager
@398
+#<init>()V
+#addOutputBuffer(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)V
+#noMoreBuffers()V
+#getOutputBuffers()Lio/trino/execution/buffer/PipelinedOutputBuffers;

+###io/trino/execution/scheduler/EventDrivenFaultTolerantQueryScheduler
@401
+#<init>(Lio/trino/execution/QueryStateMachine;Lio/trino/metadata/Metadata;Lio/trino/execution/RemoteTaskFactory;Lio/trino/execution/scheduler/TaskDescriptorStorage;Lio/trino/execution/scheduler/EventDrivenTaskSourceFactory;ZLio/trino/execution/NodeTaskMap;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ScheduledExecutorService;Lio/trino/execution/scheduler/SplitSchedulerStats;Lio/trino/execution/scheduler/PartitionMemoryEstimatorFactory;Lio/trino/sql/planner/NodePartitioningManager;Lio/trino/spi/exchange/ExchangeManager;Lio/trino/execution/scheduler/NodeAllocatorService;Lio/trino/failuredetector/FailureDetector;Lio/trino/server/DynamicFilterService;Lio/trino/execution/scheduler/TaskExecutionStats;Lio/trino/sql/planner/SubPlan;)V
+#start()V
+#cancelStage(Lio/trino/execution/StageId;)V
+#failTask(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#getBasicStageStats()Lio/trino/execution/BasicStageStats;
+#getStageInfo()Lio/trino/execution/StageInfo;
+#getUserMemoryReservation()J
+#getTotalMemoryReservation()J
+#getTotalCpuTime()Lio/airlift/units/Duration;

+###io/trino/execution/scheduler/EventDrivenTaskSource$SplitLoader$Callback
@401
+#update(Lcom/google/common/collect/ListMultimap;Z)V
+#failed(Ljava/lang/Throwable;)V
@406
-###io/trino/execution/scheduler/EventDrivenTaskSource$SplitLoader$Callback

+###io/trino/execution/scheduler/SplitAssigner$AssignmentResult
@401
+#<init>(Ljava/util/List;ZLjava/util/List;Lcom/google/common/primitives/ImmutableIntArray;)V
+#update(Lio/trino/execution/scheduler/EventDrivenTaskSource$Callback;)V
+#builder()Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#partitionsAdded()Ljava/util/List;
+#noMorePartitions()Z
+#partitionUpdates()Ljava/util/List;
+#sealedPartitions()Lcom/google/common/primitives/ImmutableIntArray;
@406
-#update(Lio/trino/execution/scheduler/EventDrivenTaskSource$Callback;)V

+###io/trino/execution/scheduler/OutputDataSizeEstimate
@401
+#<init>(Lcom/google/common/primitives/ImmutableLongArray;)V
+#getPartitionSizeInBytes(I)J
+#merge(Ljava/util/Collection;)Lio/trino/execution/scheduler/OutputDataSizeEstimate;

+###io/trino/execution/scheduler/FaultTolerantPartitioningScheme
@397
+#getPartitionCount()I
+#getBucketToPartitionMap()Ljava/util/Optional;
+#getPartition(Lio/trino/metadata/Split;)I
+#getNodeRequirement(I)Ljava/util/Optional;
@401
+#isExplicitPartitionToNodeMappingPresent()Z
@406
+#getPartitionToNodeMap()Ljava/util/Optional;

+###io/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder
@401
+#<init>()V
+#addPartition(Lio/trino/execution/scheduler/EventDrivenTaskSource$Partition;)Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;
+#setNoMorePartitions()Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;
+#updatePartition(Lio/trino/execution/scheduler/EventDrivenTaskSource$PartitionUpdate;)Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;
+#sealPartition(I)Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;
+#build()Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult;
@406
+#addPartition(Lio/trino/execution/scheduler/SplitAssigner$Partition;)Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;
+#updatePartition(Lio/trino/execution/scheduler/SplitAssigner$PartitionUpdate;)Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;
-#addPartition(Lio/trino/execution/scheduler/EventDrivenTaskSource$Partition;)Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;
-#updatePartition(Lio/trino/execution/scheduler/EventDrivenTaskSource$PartitionUpdate;)Lio/trino/execution/scheduler/SplitAssigner$AssignmentResult$Builder;

+###io/trino/execution/scheduler/Exchanges
@396
+#getAllSourceHandles(Lio/trino/spi/exchange/ExchangeSourceHandleSource;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/scheduler/EventDrivenTaskSourceFactory
@401
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/concurrent/ExecutorService;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/QueryManagerConfig;)V
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/concurrent/Executor;Lio/trino/metadata/InternalNodeManager;I)V
+#create(Lio/trino/execution/scheduler/EventDrivenTaskSource$Callback;Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/function/LongConsumer;Ljava/util/Map;)Lio/trino/execution/scheduler/EventDrivenTaskSource;
@402
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/concurrent/ExecutorService;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/TableExecuteContextManager;Lio/trino/execution/QueryManagerConfig;)V
+#<init>(Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/concurrent/Executor;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/TableExecuteContextManager;I)V
-#<init>(Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/concurrent/ExecutorService;Lio/trino/metadata/InternalNodeManager;Lio/trino/execution/QueryManagerConfig;)V
-#<init>(Lio/trino/sql/planner/SplitSourceFactory;Ljava/util/concurrent/Executor;Lio/trino/metadata/InternalNodeManager;I)V
@406
+#create(Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/function/LongConsumer;Ljava/util/Map;)Lio/trino/execution/scheduler/EventDrivenTaskSource;
-#create(Lio/trino/execution/scheduler/EventDrivenTaskSource$Callback;Lio/trino/Session;Lio/trino/sql/planner/PlanFragment;Ljava/util/Map;Lio/trino/execution/scheduler/FaultTolerantPartitioningScheme;Ljava/util/function/LongConsumer;Ljava/util/Map;)Lio/trino/execution/scheduler/EventDrivenTaskSource;

+###io/trino/execution/scheduler/PartitionedPipelinedOutputBufferManager
@398
+#<init>(Lio/trino/sql/planner/PartitioningHandle;I)V
+#addOutputBuffer(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;)V
+#noMoreBuffers()V
+#getOutputBuffers()Lio/trino/execution/buffer/PipelinedOutputBuffers;

+###io/trino/execution/buffer/SpoolingOutputBuffers
@398
+#createInitial(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;I)Lio/trino/execution/buffer/SpoolingOutputBuffers;
+#<init>(JLio/trino/spi/exchange/ExchangeSinkInstanceHandle;I)V
+#getExchangeSinkInstanceHandle()Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;
+#getOutputPartitionCount()I
+#checkValidTransition(Lio/trino/execution/buffer/OutputBuffers;)V
@401
+#withExchangeSinkInstanceHandle(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)Lio/trino/execution/buffer/SpoolingOutputBuffers;

+###io/trino/execution/buffer/PipelinedOutputBuffers$BufferType
@398
+#values()[Lio/trino/execution/buffer/PipelinedOutputBuffers$BufferType;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/buffer/PipelinedOutputBuffers$BufferType;

+###io/trino/execution/buffer/SpoolingOutputStats
@398
+#<init>(I)V
+#update(IJ)V
+#finish()V
+#getFinalSnapshot()Ljava/util/Optional;

+###io/trino/execution/buffer/PipelinedBufferInfo
@398
+#<init>(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;JJIJJZ)V
+#getBufferId()Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;
+#getRowsAdded()J
+#getPagesAdded()J
+#getBufferedPages()I
+#getBufferedBytes()J
+#getPagesSent()J
+#isFinished()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId
@398
+#fromString(Ljava/lang/String;)Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;
+#<init>(I)V
+#equals(Ljava/lang/Object;)Z
+#getId()I
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/execution/buffer/PipelinedOutputBuffers
@398
+#createInitial(Lio/trino/execution/buffer/PipelinedOutputBuffers$BufferType;)Lio/trino/execution/buffer/PipelinedOutputBuffers;
+#createInitial(Lio/trino/sql/planner/PartitioningHandle;)Lio/trino/execution/buffer/PipelinedOutputBuffers;
+#<init>(JLio/trino/execution/buffer/PipelinedOutputBuffers$BufferType;Ljava/util/Map;Z)V
+#getType()Lio/trino/execution/buffer/PipelinedOutputBuffers$BufferType;
+#getBuffers()Ljava/util/Map;
+#isNoMoreBufferIds()Z
+#checkValidTransition(Lio/trino/execution/buffer/OutputBuffers;)V
+#withBuffer(Lio/trino/execution/buffer/PipelinedOutputBuffers$OutputBufferId;I)Lio/trino/execution/buffer/PipelinedOutputBuffers;
+#withBuffers(Ljava/util/Map;)Lio/trino/execution/buffer/PipelinedOutputBuffers;
+#withNoMoreBufferIds()Lio/trino/execution/buffer/PipelinedOutputBuffers;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/execution/buffer/OutputBufferStatus
@396
+#<init>(Ljava/util/OptionalLong;ZZ)V
+#getOutputBuffersVersion()Ljava/util/OptionalLong;
+#isOverutilized()Z
+#isExchangeSinkInstanceHandleUpdateRequired()Z
+#initial()Lio/trino/execution/buffer/OutputBufferStatus;
+#builder(J)Lio/trino/execution/buffer/OutputBufferStatus$Builder;

+###io/trino/execution/buffer/SpoolingOutputStats$Snapshot
@398
+#<init>(Lio/airlift/slice/Slice;)V
+#getValues()Lio/airlift/slice/Slice;
+#getPartitionSizeInBytes(I)J

+###io/trino/execution/buffer/OutputBufferStatus$Builder
@396
+#<init>(J)V
+#setOverutilized(Z)Lio/trino/execution/buffer/OutputBufferStatus$Builder;
+#setExchangeSinkInstanceHandleUpdateRequired(Z)Lio/trino/execution/buffer/OutputBufferStatus$Builder;
+#build()Lio/trino/execution/buffer/OutputBufferStatus;

+###io/trino/operator/join/unspilled/JoinProbe
@399
+#getOutputChannels()[I
+#advanceNextPosition()Z
+#isFinished()Z
+#getCurrentJoinPosition()J
+#getPosition()I
+#getPage()Lio/trino/spi/Page;

+###io/trino/operator/join/unspilled/JoinProbe$JoinProbeFactory
@399
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/OptionalInt;)V
+#createJoinProbe(Lio/trino/spi/Page;Lio/trino/operator/join/LookupSource;)Lio/trino/operator/join/unspilled/JoinProbe;

+###io/trino/operator/project/PageProcessorMetrics
@398
+#<init>()V
+#recordFilterTimeSince(J)V
+#recordProjectionTime(J)V
+#getMetrics()Lio/trino/spi/metrics/Metrics;

+###io/trino/sql/planner/plan/StatisticAggregationsDescriptor$ColumnStatisticAggregationsDescriptor
@398
+#<init>(Lio/trino/spi/statistics/ColumnStatisticMetadata;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#metadata()Lio/trino/spi/statistics/ColumnStatisticMetadata;
+#input()Ljava/lang/Object;

+###io/trino/sql/planner/ConnectorExpressionTranslator$ConnectorExpressionTranslation
@396
+#<init>(Lio/trino/spi/expression/ConnectorExpression;Lio/trino/sql/tree/Expression;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#connectorExpression()Lio/trino/spi/expression/ConnectorExpression;
+#remainingExpression()Lio/trino/sql/tree/Expression;

+###io/trino/sql/planner/planprinter/IoPlanPrinter$Constraint
@397
+#<init>(ZLjava/util/Set;)V
+#isNone()Z
+#getColumnConstraints()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/sql/planner/optimizations/Cardinality
@398
+#<init>(Lcom/google/common/collect/Range;)V
+#isEmpty()Z
+#isScalar()Z
+#isAtLeastScalar()Z
+#isAtMostScalar()Z
+#isAtLeast(J)Z
+#isAtMost(J)Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#cardinalityRange()Lcom/google/common/collect/Range;

+###io/trino/sql/planner/iterative/rule/RemoveEmptyMergeWriterRuleSet
@401
+#rules()Ljava/util/Set;

+###io/trino/sql/planner/iterative/rule/UnwrapDateTruncInComparison
@396
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/planner/iterative/rule/RemoveRedundantDateTrunc
@396
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V

+###io/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder
@399
+#withArgumentName(Ljava/lang/String;)Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;
+#withName(Lio/trino/sql/tree/QualifiedName;)Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;
+#withRelation(Lio/trino/sql/tree/Relation;)Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;
+#withPartitionBy(Ljava/util/List;)Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;
+#withOrderBy(Lio/trino/sql/tree/OrderBy;)Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;
+#withPruneWhenEmpty(Z)Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;
+#withRowSemantics(Z)Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;
+#withPassThroughColumns(Z)Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;
+#build()Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis;

+###io/trino/sql/analyzer/Analysis$TableArgumentAnalysis
@399
+#getArgumentName()Ljava/lang/String;
+#getName()Ljava/util/Optional;
+#getRelation()Lio/trino/sql/tree/Relation;
+#getPartitionBy()Ljava/util/Optional;
+#getOrderBy()Ljava/util/Optional;
+#isPruneWhenEmpty()Z
+#isRowSemantics()Z
+#isPassThroughColumns()Z
+#builder()Lio/trino/sql/analyzer/Analysis$TableArgumentAnalysis$Builder;

+###io/trino/split/RemoteSplit$SpoolingExchangeInput
@369
+#<init>(Ljava/util/List;)V
+#getExchangeSourceHandles()Ljava/util/List;
+#toString()Ljava/lang/String;
+#getRetainedSizeInBytes()J
@394
-###io/trino/split/RemoteSplit$SpoolingExchangeInput

+###io/trino/split/RemoteSplit$DirectExchangeInput
@369
+#<init>(Lio/trino/execution/TaskId;Ljava/lang/String;)V
+#getTaskId()Lio/trino/execution/TaskId;
+#getLocation()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getRetainedSizeInBytes()J
@394
-###io/trino/split/RemoteSplit$DirectExchangeInput

+###io/trino/split/RemoteSplit$ExchangeInput
@369
+#getRetainedSizeInBytes()J
@394
-###io/trino/split/RemoteSplit$ExchangeInput

+###io/trino/memory/LowMemoryKiller$QueryMemoryInfo$TaskMemoryInfo
@373
+#<init>(Lio/trino/execution/TaskId;J)V
+#getTaskId()Lio/trino/execution/TaskId;
+#getMemoryReservation()J
+#toString()Ljava/lang/String;
@377
-###io/trino/memory/LowMemoryKiller$QueryMemoryInfo$TaskMemoryInfo

+###io/trino/execution/scheduler/FixedCountNodeAllocator
@369
+#<init>(Lio/trino/execution/scheduler/NodeScheduler;Lio/trino/Session;I)V
+#acquire(Lio/trino/execution/scheduler/NodeRequirements;)Lcom/google/common/util/concurrent/ListenableFuture;
+#release(Lio/trino/metadata/InternalNode;)V
+#updateNodes()V
+#close()V
@374
-###io/trino/execution/scheduler/FixedCountNodeAllocator

+###io/trino/metadata/FunctionNullability
@366
+#<init>(ZLjava/util/List;)V
+#isReturnNullable()Z
+#isArgumentNullable(I)Z
+#getArgumentNullable()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
-###io/trino/metadata/FunctionNullability

+###io/trino/operator/TaskAllocationValidator
@368
+#<init>(Lio/airlift/units/DataSize;)V
+#reserveMemory(Ljava/lang/String;J)V
+#tryReserveMemory(Ljava/lang/String;J)Z
@374
-###io/trino/operator/TaskAllocationValidator

+###io/trino/operator/output/PositionsAppenderFactory$SlicePositionsAppender
@373
+#<init>()V
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/output/PositionsAppenderFactory$SlicePositionsAppender

+###io/trino/operator/output/PositionsAppenderFactory$IntPositionsAppender
@373
+#<init>()V
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/output/PositionsAppenderFactory$IntPositionsAppender

+###io/trino/operator/output/PositionsAppenderFactory$LongPositionsAppender
@373
+#<init>()V
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/output/PositionsAppenderFactory$LongPositionsAppender

+###io/trino/operator/output/PositionsAppenderFactory$SmallintPositionsAppender
@373
+#<init>()V
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/output/PositionsAppenderFactory$SmallintPositionsAppender

+###io/trino/operator/output/PositionsAppenderFactory$Int96PositionsAppender
@373
+#<init>()V
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/output/PositionsAppenderFactory$Int96PositionsAppender

+###io/trino/operator/output/PositionsAppenderFactory$BytePositionsAppender
@373
+#<init>()V
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/output/PositionsAppenderFactory$BytePositionsAppender

+###io/trino/operator/output/PositionsAppender$TypedPositionsAppender
@373
+#<init>(Lio/trino/spi/type/Type;)V
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/output/PositionsAppender$TypedPositionsAppender

+###io/trino/operator/output/PositionsAppenderFactory$Int128PositionsAppender
@373
+#<init>()V
+#appendTo(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lio/trino/spi/block/Block;Lio/trino/spi/block/BlockBuilder;)V
@383
-###io/trino/operator/output/PositionsAppenderFactory$Int128PositionsAppender

+###io/trino/sql/planner/iterative/rule/UnwrapTimestampToDateCastInComparison
@372
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;)V
+#unwrapCasts(Lio/trino/Session;Lio/trino/sql/PlannerContext;Lio/trino/sql/planner/TypeAnalyzer;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/tree/Expression;)Lio/trino/sql/tree/Expression;
@386
-###io/trino/sql/planner/iterative/rule/UnwrapTimestampToDateCastInComparison

+###io/trino/metadata/FunctionMetadata$Builder
@379
+#signature(Lio/trino/metadata/Signature;)Lio/trino/metadata/FunctionMetadata$Builder;
+#canonicalName(Ljava/lang/String;)Lio/trino/metadata/FunctionMetadata$Builder;
+#nullable()Lio/trino/metadata/FunctionMetadata$Builder;
+#argumentNullability([Z)Lio/trino/metadata/FunctionMetadata$Builder;
+#argumentNullability(Ljava/util/List;)Lio/trino/metadata/FunctionMetadata$Builder;
+#hidden()Lio/trino/metadata/FunctionMetadata$Builder;
+#nondeterministic()Lio/trino/metadata/FunctionMetadata$Builder;
+#noDescription()Lio/trino/metadata/FunctionMetadata$Builder;
+#description(Ljava/lang/String;)Lio/trino/metadata/FunctionMetadata$Builder;
+#functionId(Lio/trino/metadata/FunctionId;)Lio/trino/metadata/FunctionMetadata$Builder;
+#deprecated()Lio/trino/metadata/FunctionMetadata$Builder;
+#build()Lio/trino/metadata/FunctionMetadata;
@395
-###io/trino/metadata/FunctionMetadata$Builder

+###io/trino/metadata/SchemaFunctionName
@379
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getSchemaName()Ljava/lang/String;
+#getFunctionName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@395
-###io/trino/metadata/SchemaFunctionName

+###io/trino/metadata/Signature$Builder
@379
+#name(Ljava/lang/String;)Lio/trino/metadata/Signature$Builder;
+#operatorType(Lio/trino/spi/function/OperatorType;)Lio/trino/metadata/Signature$Builder;
+#typeVariable(Ljava/lang/String;)Lio/trino/metadata/Signature$Builder;
+#comparableTypeParameter(Ljava/lang/String;)Lio/trino/metadata/Signature$Builder;
+#orderableTypeParameter(Ljava/lang/String;)Lio/trino/metadata/Signature$Builder;
+#castableToTypeParameter(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/Signature$Builder;
+#castableFromTypeParameter(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/Signature$Builder;
+#variadicTypeParameter(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/Signature$Builder;
+#typeVariableConstraint(Lio/trino/metadata/TypeVariableConstraint;)Lio/trino/metadata/Signature$Builder;
+#typeVariableConstraints(Ljava/util/List;)Lio/trino/metadata/Signature$Builder;
+#returnType(Lio/trino/spi/type/Type;)Lio/trino/metadata/Signature$Builder;
+#returnType(Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/Signature$Builder;
+#longVariable(Ljava/lang/String;Ljava/lang/String;)Lio/trino/metadata/Signature$Builder;
+#argumentType(Lio/trino/spi/type/Type;)Lio/trino/metadata/Signature$Builder;
+#argumentType(Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/Signature$Builder;
+#argumentTypes(Ljava/util/List;)Lio/trino/metadata/Signature$Builder;
+#variableArity()Lio/trino/metadata/Signature$Builder;
+#build()Lio/trino/metadata/Signature;
@395
-###io/trino/metadata/Signature$Builder

+###io/trino/metadata/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder
@379
+#orderSensitive()Lio/trino/metadata/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder;
+#intermediateType(Lio/trino/spi/type/Type;)Lio/trino/metadata/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder;
+#intermediateType(Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder;
+#build()Lio/trino/metadata/AggregationFunctionMetadata;
@395
-###io/trino/metadata/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder

+###io/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder
@379
+#comparableRequired()Lio/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#orderableRequired()Lio/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#variadicBound(Ljava/lang/String;)Lio/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#castableTo(Lio/trino/spi/type/Type;)Lio/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#castableTo(Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#castableFrom(Lio/trino/spi/type/Type;)Lio/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#castableFrom(Lio/trino/spi/type/TypeSignature;)Lio/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#build()Lio/trino/metadata/TypeVariableConstraint;
@395
-###io/trino/metadata/TypeVariableConstraint$TypeVariableConstraintBuilder

+###io/trino/server/PluginManagerConfig
@351
+#<init>()V
+#getInstalledPluginsDir()Ljava/io/File;
+#setInstalledPluginsDir(Ljava/io/File;)Lio/trino/server/PluginManagerConfig;
+#getPlugins()Ljava/util/List;
+#setPlugins(Ljava/util/List;)Lio/trino/server/PluginManagerConfig;
+#setPlugins(Ljava/lang/String;)Lio/trino/server/PluginManagerConfig;
+#getMavenLocalRepository()Ljava/lang/String;
+#setMavenLocalRepository(Ljava/lang/String;)Lio/trino/server/PluginManagerConfig;
+#getMavenRemoteRepository()Ljava/util/List;
+#setMavenRemoteRepository(Ljava/util/List;)Lio/trino/server/PluginManagerConfig;
+#setMavenRemoteRepository(Ljava/lang/String;)Lio/trino/server/PluginManagerConfig;
@353
-###io/trino/server/PluginManagerConfig

+###io/trino/server/RangeJsonSerde
@351
@352
-###io/trino/server/RangeJsonSerde

+###io/trino/server/RangeJsonSerde$Deserializer
@351
+#<init>()V
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lio/trino/spi/predicate/Range;
+#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
@352
-###io/trino/server/RangeJsonSerde$Deserializer

+###io/trino/server/RangeJsonSerde$Serializer
@351
+#<init>()V
+#serialize(Lio/trino/spi/predicate/Range;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
@352
-###io/trino/server/RangeJsonSerde$Serializer

+###io/trino/operator/GroupedTopNRowNumberAccumulator$RowReference
@351
+#compareTo(Lit/unimi/dsi/fastutil/longs/LongComparator;J)I
+#extractRowId()J
@352
-###io/trino/operator/GroupedTopNRowNumberAccumulator$RowReference

+###io/trino/operator/TopNRowNumberOperator$TopNRowNumberOperatorFactory
@351
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;
@352
-###io/trino/operator/TopNRowNumberOperator$TopNRowNumberOperatorFactory

+###io/trino/operator/TopNRowNumberOperator
@351
+#<init>(Lio/trino/operator/OperatorContext;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;IZLjava/util/Optional;ILio/trino/sql/gen/JoinCompiler;Lio/trino/spi/type/TypeOperators;Lio/trino/type/BlockTypeOperators;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;
+#getCapacity()I
@352
-###io/trino/operator/TopNRowNumberOperator

+###io/trino/sql/planner/plan/TopNRowNumberNode
@351
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/sql/planner/plan/PlanNode;Lio/trino/sql/planner/plan/WindowNode$Specification;Lio/trino/sql/planner/Symbol;IZLjava/util/Optional;)V
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#getSource()Lio/trino/sql/planner/plan/PlanNode;
+#getSpecification()Lio/trino/sql/planner/plan/WindowNode$Specification;
+#getPartitionBy()Ljava/util/List;
+#getOrderingScheme()Lio/trino/sql/planner/OrderingScheme;
+#getRowNumberSymbol()Lio/trino/sql/planner/Symbol;
+#getMaxRowCountPerPartition()I
+#isPartial()Z
+#getHashSymbol()Ljava/util/Optional;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;
@352
-###io/trino/sql/planner/plan/TopNRowNumberNode

+###io/trino/sql/planner/optimizations/BeginTableWrite$Context
@351
+#<init>()V
+#addMaterializedHandle(Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;)V
+#getMaterializedHandle(Lio/trino/sql/planner/plan/TableWriterNode$WriterTarget;)Ljava/util/Optional;
@354
-###io/trino/sql/planner/optimizations/BeginTableWrite$Context

+###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughTopNRowNumber
@351
+#<init>(Lio/trino/sql/planner/TypeAnalyzer;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/ProjectNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@352
-###io/trino/sql/planner/iterative/rule/PushDownDereferencesThroughTopNRowNumber

+###io/trino/sql/planner/iterative/rule/PruneTopNRowNumberColumns
@351
+#<init>()V
@352
-###io/trino/sql/planner/iterative/rule/PruneTopNRowNumberColumns

+###io/trino/sql/planner/iterative/rule/RemoveRedundantCrossJoin
@351
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/JoinNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@354
-###io/trino/sql/planner/iterative/rule/RemoveRedundantCrossJoin

+###io/trino/sql/planner/rowpattern/LogicalIndexExtractor$ValuePointer
@356
+#<init>(Lio/trino/sql/planner/rowpattern/LogicalIndexPointer;Lio/trino/sql/planner/Symbol;)V
+#getLogicalIndexPointer()Lio/trino/sql/planner/rowpattern/LogicalIndexPointer;
+#getInputSymbol()Lio/trino/sql/planner/Symbol;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@365
-###io/trino/sql/planner/rowpattern/LogicalIndexExtractor$ValuePointer

+###io/trino/operator/output/PagePartitionerPool
@406
+#<init>(ILjava/util/function/Supplier;)V
+#poll()Lio/trino/operator/output/PagePartitioner;
+#release(Lio/trino/operator/output/PagePartitioner;)V
+#close()V

+###io/trino/operator/exchange/UniformPartitionRebalancer
@405
+#<init>(Ljava/util/List;Ljava/util/function/Supplier;IIJ)V
+#getWriterId(II)I
+#rebalancePartitions()V

+###io/trino/operator/exchange/ScaleWriterPartitioningExchanger
@405
+#<init>(Ljava/util/List;Lio/trino/operator/exchange/LocalExchangeMemoryManager;JLjava/util/function/Function;Lio/trino/operator/PartitionFunction;ILio/trino/operator/exchange/UniformPartitionRebalancer;)V
+#accept(Lio/trino/spi/Page;)V
+#waitForWriting()Lcom/google/common/util/concurrent/ListenableFuture;
+#getAndResetPartitionRowCounts()Lit/unimi/dsi/fastutil/longs/Long2LongMap;

+###io/trino/operator/exchange/UniformPartitionRebalancer$WriterPartitionId
@405
+#<init>(II)V
+#deserialize(J)Lio/trino/operator/exchange/UniformPartitionRebalancer$WriterPartitionId;
+#serialize(Lio/trino/operator/exchange/UniformPartitionRebalancer$WriterPartitionId;)J
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#writerId()I
+#partitionId()I

+###io/trino/util/Ciphers
@403
+#createRandomAesEncryptionKey()Ljavax/crypto/SecretKey;
+#serializeAesEncryptionKey(Ljavax/crypto/SecretKey;)Lio/airlift/slice/Slice;
+#deserializeAesEncryptionKey(Lio/airlift/slice/Slice;)Ljavax/crypto/SecretKey;
@405
+#deserializeAesEncryptionKey(Lio/airlift/slice/Slice;)Ljavax/crypto/spec/SecretKeySpec;
+#is256BitSecretKeySpec(Ljavax/crypto/SecretKey;)Z
-#deserializeAesEncryptionKey(Lio/airlift/slice/Slice;)Ljavax/crypto/SecretKey;

+###io/trino/testing/TestingPageSinkId
@403
+#getId()J

+###io/trino/testing/TestingGroupProviderManager
@406
+#<init>()V
+#setConfiguredGroupProvider(Ljava/lang/String;Ljava/util/Map;)V
+#setConfiguredGroupProvider(Lio/trino/spi/security/GroupProvider;)V

+###io/trino/sql/planner/iterative/rule/RemoveRedundantWindow
@407
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/WindowNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/ImplementTableFunctionSource
@407
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableFunctionNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/iterative/rule/PushMergeWriterDeleteIntoConnector
@405
+#<init>(Lio/trino/metadata/Metadata;)V
+#getPattern()Lio/trino/matching/Pattern;
+#apply(Lio/trino/sql/planner/plan/TableFinishNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;

+###io/trino/sql/planner/plan/DataOrganizationSpecification
@405
+#<init>(Ljava/util/List;Ljava/util/Optional;)V
+#getPartitionBy()Ljava/util/List;
+#getOrderingScheme()Ljava/util/Optional;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/sql/planner/plan/TableFunctionNode$PassThroughColumn
@407
+#<init>(Lio/trino/sql/planner/Symbol;Z)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#symbol()Lio/trino/sql/planner/Symbol;
+#isPartitioningColumn()Z

+###io/trino/sql/planner/plan/TableFunctionProcessorNode
@407
+#<init>(Lio/trino/sql/planner/plan/PlanNodeId;Ljava/lang/String;Ljava/util/List;Ljava/util/Optional;ZLjava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;ILjava/util/Optional;Lio/trino/metadata/TableFunctionHandle;)V
+#getName()Ljava/lang/String;
+#getProperOutputs()Ljava/util/List;
+#getSource()Ljava/util/Optional;
+#isPruneWhenEmpty()Z
+#getPassThroughSpecifications()Ljava/util/List;
+#getRequiredSymbols()Ljava/util/List;
+#getMarkerSymbols()Ljava/util/Optional;
+#getSpecification()Ljava/util/Optional;
+#getPrePartitioned()Ljava/util/Set;
+#getPreSorted()I
+#getHashSymbol()Ljava/util/Optional;
+#getHandle()Lio/trino/metadata/TableFunctionHandle;
+#getSources()Ljava/util/List;
+#getOutputSymbols()Ljava/util/List;
+#accept(Lio/trino/sql/planner/plan/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
+#replaceChildren(Ljava/util/List;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/sql/planner/plan/TableFunctionNode$PassThroughSpecification
@407
+#<init>(ZLjava/util/List;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#declaredAsPassThrough()Z
+#columns()Ljava/util/List;

+###io/trino/sql/planner/optimizations/DeterminePartitionCount
@407
+#<init>(Lio/trino/cost/StatsCalculator;)V
+#optimize(Lio/trino/sql/planner/plan/PlanNode;Lio/trino/Session;Lio/trino/sql/planner/TypeProvider;Lio/trino/sql/planner/SymbolAllocator;Lio/trino/sql/planner/PlanNodeIdAllocator;Lio/trino/execution/warnings/WarningCollector;Lio/trino/cost/TableStatsProvider;)Lio/trino/sql/planner/plan/PlanNode;

+###io/trino/execution/scheduler/SplitAssigner$Partition
@406
+#<init>(ILio/trino/execution/scheduler/NodeRequirements;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#partitionId()I
+#nodeRequirements()Lio/trino/execution/scheduler/NodeRequirements;

+###io/trino/execution/scheduler/EventDrivenTaskSource$IdempotentSplitSource$SplitBatchReference
@406
+#<init>(Lio/trino/execution/scheduler/EventDrivenTaskSource$IdempotentSplitSource;Lio/trino/split/SplitSource$SplitBatch;)V
+#getPlanNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#getSourceFragmentId()Ljava/util/Optional;
+#getSplitBatchAndAdvance()Lio/trino/split/SplitSource$SplitBatch;

+###io/trino/execution/scheduler/SplitAssigner$PartitionUpdate
@406
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Ljava/util/List;Z)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#partitionId()I
+#planNodeId()Lio/trino/sql/planner/plan/PlanNodeId;
+#splits()Ljava/util/List;
+#noMoreSplits()Z

+###io/trino/execution/SetColumnTypeTask
@405
+#<init>(Lio/trino/metadata/Metadata;Lio/trino/spi/type/TypeManager;Lio/trino/security/AccessControl;)V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/SetColumnType;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/buffer/PageSerializer
@405
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;ZLjava/util/Optional;I)V
+#serialize(Lio/trino/spi/Page;)Lio/airlift/slice/Slice;
+#getRetainedSizeInBytes()J

+###io/trino/execution/buffer/PageDeserializer
@405
+#<init>(Lio/trino/spi/block/BlockEncodingSerde;ZLjava/util/Optional;I)V
+#deserialize(Lio/airlift/slice/Slice;)Lio/trino/spi/Page;
+#getRetainedSizeInBytes()J

+###io/trino/execution/SqlTaskManager$SqlTaskWithResults
@407
+#<init>(Lio/trino/execution/SqlTask;Lcom/google/common/util/concurrent/ListenableFuture;)V
+#recordHeartbeat()V
+#getTaskInstanceId()Ljava/lang/String;
+#isTaskFailed()Z
+#getResultsFuture()Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/server/testing/exchange/LocalFileSystemExchangeManager
@369
+#<init>(Ljava/nio/file/Path;)V
+#createExchange(Lio/trino/spi/exchange/ExchangeContext;I)Lio/trino/spi/exchange/Exchange;
+#createSink(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)Lio/trino/spi/exchange/ExchangeSink;
+#createSource(Ljava/util/List;)Lio/trino/spi/exchange/ExchangeSource;
@370
+#createSink(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;Z)Lio/trino/spi/exchange/ExchangeSink;
-#createSink(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)Lio/trino/spi/exchange/ExchangeSink;
@371
-###io/trino/server/testing/exchange/LocalFileSystemExchangeManager

+###io/trino/server/testing/exchange/LocalFileSystemExchangeSinkHandle
@369
+#<init>(Lio/trino/spi/QueryId;II)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getStageId()I
+#getTaskPartitionId()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@370
+#<init>(Lio/trino/spi/QueryId;Lio/trino/spi/exchange/ExchangeId;I)V
+#getExchangeId()Lio/trino/spi/exchange/ExchangeId;
-#<init>(Lio/trino/spi/QueryId;II)V
-#getStageId()I
@371
-###io/trino/server/testing/exchange/LocalFileSystemExchangeSinkHandle

+###io/trino/server/testing/exchange/LocalFileSystemExchangeManagerFactory
@369
+#<init>()V
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;)Lio/trino/spi/exchange/ExchangeManager;
+#getHandleResolver()Lio/trino/spi/exchange/ExchangeManagerHandleResolver;
@371
-###io/trino/server/testing/exchange/LocalFileSystemExchangeManagerFactory

+###io/trino/server/testing/exchange/LocalFileSystemExchangeSourceHandle
@369
+#<init>(ILjava/util/List;)V
+#getPartitionId()I
+#getFiles()Ljava/util/List;
+#getRetainedSizeInBytes()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@371
-###io/trino/server/testing/exchange/LocalFileSystemExchangeSourceHandle

+###io/trino/server/testing/exchange/LocalFileSystemExchangeSink
@369
+#<init>(Ljava/nio/file/Path;I)V
+#isBlocked()Ljava/util/concurrent/CompletableFuture;
+#add(ILio/airlift/slice/Slice;)V
+#getMemoryUsage()J
+#finish()V
+#abort()V
@370
+#finish()Ljava/util/concurrent/CompletableFuture;
+#abort()Ljava/util/concurrent/CompletableFuture;
-#finish()V
-#abort()V
@371
-###io/trino/server/testing/exchange/LocalFileSystemExchangeSink

+###io/trino/server/testing/exchange/LocalFileSystemExchange
@369
+#<init>(Ljava/nio/file/Path;Lio/trino/spi/exchange/ExchangeContext;I)V
+#initialize()V
+#addSink(I)Lio/trino/spi/exchange/ExchangeSinkHandle;
+#noMoreSinks()V
+#instantiateSink(Lio/trino/spi/exchange/ExchangeSinkHandle;I)Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;
+#sinkFinished(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)V
+#getSourceHandles()Ljava/util/concurrent/CompletableFuture;
+#split(Lio/trino/spi/exchange/ExchangeSourceHandle;J)Lio/trino/spi/exchange/ExchangeSourceSplitter;
+#getExchangeSourceStatistics(Lio/trino/spi/exchange/ExchangeSourceHandle;)Lio/trino/spi/exchange/ExchangeSourceStatistics;
+#close()V
@371
-###io/trino/server/testing/exchange/LocalFileSystemExchange

+###io/trino/server/testing/exchange/LocalFileSystemExchangeSource
@369
+#<init>(Ljava/util/List;)V
+#isBlocked()Ljava/util/concurrent/CompletableFuture;
+#isFinished()Z
+#read()Lio/airlift/slice/Slice;
+#getMemoryUsage()J
+#close()V
@371
-###io/trino/server/testing/exchange/LocalFileSystemExchangeSource

+###io/trino/server/testing/exchange/LocalFileSystemExchangeSinkInstanceHandle
@369
+#<init>(Lio/trino/server/testing/exchange/LocalFileSystemExchangeSinkHandle;Ljava/nio/file/Path;I)V
+#getSinkHandle()Lio/trino/server/testing/exchange/LocalFileSystemExchangeSinkHandle;
+#getOutputDirectory()Ljava/nio/file/Path;
+#getOutputPartitionCount()I
@371
-###io/trino/server/testing/exchange/LocalFileSystemExchangeSinkInstanceHandle

+###io/trino/execution/scheduler/FullNodeCapableNodeAllocatorService
@374
+#<init>(Lio/trino/metadata/InternalNodeManager;Lio/trino/memory/ClusterMemoryManager;Lio/trino/execution/scheduler/NodeSchedulerConfig;)V
+#start()V
+#stop()V
+#tryAcquire(Lio/trino/execution/scheduler/NodeRequirements;Lio/trino/execution/scheduler/FullNodeCapableNodeAllocatorService$Candidates;Lio/trino/spi/QueryId;)Ljava/util/Optional;
+#getNodeAllocator(Lio/trino/Session;)Lio/trino/execution/scheduler/NodeAllocator;
@380
-###io/trino/execution/scheduler/FullNodeCapableNodeAllocatorService

+###io/trino/connector/ConnectorManager$ConnectorServices
@388
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Ljava/lang/Runnable;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getConnector()Lio/trino/spi/connector/Connector;
+#getSystemTables()Ljava/util/Set;
+#getProcedures()Lio/trino/metadata/CatalogProcedures;
+#getTableProcedures()Lio/trino/metadata/CatalogTableProcedures;
+#getTableFunctions()Lio/trino/metadata/CatalogTableFunctions;
+#getSplitManager()Ljava/util/Optional;
+#getPageSourceProvider()Ljava/util/Optional;
+#getPageSinkProvider()Ljava/util/Optional;
+#getIndexProvider()Ljava/util/Optional;
+#getPartitioningProvider()Ljava/util/Optional;
+#getSecurityManagement()Lio/trino/metadata/CatalogMetadata$SecurityManagement;
+#getAccessControl()Ljava/util/Optional;
+#getEventListeners()Ljava/util/List;
+#getSessionProperties()Ljava/util/Map;
+#getTableProperties()Ljava/util/Map;
+#getMaterializedViewProperties()Ljava/util/Map;
+#getColumnProperties()Ljava/util/Map;
+#getSchemaProperties()Ljava/util/Map;
+#getAnalyzeProperties()Ljava/util/Map;
+#getCapabilities()Ljava/util/Set;
+#shutdown()V
@392
-###io/trino/connector/ConnectorManager$ConnectorServices

+###io/trino/execution/scheduler/PipelinedStageExecution$State
@366
+#values()[Lio/trino/execution/scheduler/PipelinedStageExecution$State;
+#valueOf(Ljava/lang/String;)Lio/trino/execution/scheduler/PipelinedStageExecution$State;
+#isDone()Z
+#isFailure()Z
+#canScheduleMoreTasks()Z
@368
-###io/trino/execution/scheduler/PipelinedStageExecution$State

+###io/trino/operator/StreamingExchangeClientBuffer
@366
+#<init>(Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;)V
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#pollPage()Lio/trino/execution/buffer/SerializedPage;
+#addTask(Lio/trino/execution/TaskId;)V
+#addPages(Lio/trino/execution/TaskId;Ljava/util/List;)V
+#taskFinished(Lio/trino/execution/TaskId;)V
+#taskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#noMoreTasks()V
+#isFinished()Z
+#getRemainingCapacityInBytes()J
+#getRetainedSizeInBytes()J
+#getMaxRetainedSizeInBytes()J
+#getBufferedPageCount()I
+#close()V
@367
+#isFailed()Z
@368
+#pollPage()Lio/airlift/slice/Slice;
-#pollPage()Lio/trino/execution/buffer/SerializedPage;
@369
-###io/trino/operator/StreamingExchangeClientBuffer

+###io/trino/operator/ExchangeClientBuffer
@366
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#pollPage()Lio/trino/execution/buffer/SerializedPage;
+#addTask(Lio/trino/execution/TaskId;)V
+#addPages(Lio/trino/execution/TaskId;Ljava/util/List;)V
+#taskFinished(Lio/trino/execution/TaskId;)V
+#taskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#noMoreTasks()V
+#isFinished()Z
+#getRemainingCapacityInBytes()J
+#getRetainedSizeInBytes()J
+#getMaxRetainedSizeInBytes()J
+#getBufferedPageCount()I
+#close()V
@367
+#isFailed()Z
@368
+#pollPage()Lio/airlift/slice/Slice;
-#pollPage()Lio/trino/execution/buffer/SerializedPage;
@369
-###io/trino/operator/ExchangeClientBuffer

+###io/trino/operator/DeduplicationExchangeClientBuffer
@366
+#<init>(Ljava/util/concurrent/Executor;Lio/airlift/units/DataSize;Lio/trino/operator/RetryPolicy;)V
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#pollPage()Lio/trino/execution/buffer/SerializedPage;
+#addTask(Lio/trino/execution/TaskId;)V
+#addPages(Lio/trino/execution/TaskId;Ljava/util/List;)V
+#taskFinished(Lio/trino/execution/TaskId;)V
+#taskFailed(Lio/trino/execution/TaskId;Ljava/lang/Throwable;)V
+#noMoreTasks()V
+#isFinished()Z
+#getRemainingCapacityInBytes()J
+#getRetainedSizeInBytes()J
+#getMaxRetainedSizeInBytes()J
+#getBufferedPageCount()I
+#close()V
@367
+#isFailed()Z
@368
+#pollPage()Lio/airlift/slice/Slice;
-#pollPage()Lio/trino/execution/buffer/SerializedPage;
@369
-###io/trino/operator/DeduplicationExchangeClientBuffer

+###io/trino/operator/join/PageJoiner$SavedRow
@358
+#<init>(Lio/trino/spi/Page;IJZI)V
@359
-###io/trino/operator/join/PageJoiner$SavedRow

+###io/trino/metadata/Properties
@369
+#getNonNullProperties()Ljava/util/Map;
+#getNullPropertyNames()Ljava/util/Set;
@370
-###io/trino/metadata/Properties

+###io/trino/operator/aggregation/AggregationMetadata$AggregationParameterKind
@366
+#values()[Lio/trino/operator/aggregation/AggregationMetadata$AggregationParameterKind;
+#valueOf(Ljava/lang/String;)Lio/trino/operator/aggregation/AggregationMetadata$AggregationParameterKind;
@367
-###io/trino/operator/aggregation/AggregationMetadata$AggregationParameterKind

+###io/trino/execution/scheduler/NodeInfo
@374
+#unlimitedMemoryNode(Lio/trino/metadata/InternalNode;)Lio/trino/execution/scheduler/NodeInfo;
+#<init>(Lio/trino/metadata/InternalNode;Lio/airlift/units/DataSize;)V
+#getNode()Lio/trino/metadata/InternalNode;
+#getMaxMemory()Lio/airlift/units/DataSize;
@375
-###io/trino/execution/scheduler/NodeInfo

+###io/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode
@352
+#values()[Lio/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode;
@353
-###io/trino/sql/analyzer/FeaturesConfig$JoinPushdownMode

+###io/trino/connector/FileCatalogStoreConfig
@408
+#<init>()V
+#getCatalogConfigurationDir()Ljava/io/File;
+#setCatalogConfigurationDir(Ljava/io/File;)Lio/trino/connector/FileCatalogStoreConfig;
+#getDisabledCatalogs()Ljava/util/List;
+#setDisabledCatalogs(Ljava/lang/String;)Lio/trino/connector/FileCatalogStoreConfig;
+#setDisabledCatalogs(Ljava/util/List;)Lio/trino/connector/FileCatalogStoreConfig;
+#isReadOnly()Z
+#setReadOnly(Z)Lio/trino/connector/FileCatalogStoreConfig;

+###io/trino/connector/CatalogStore$StoredCatalog
@408
+#getName()Ljava/lang/String;
+#loadProperties()Lio/trino/connector/CatalogProperties;

+###io/trino/connector/InMemoryCatalogStore
@408
+#<init>()V
+#getCatalogs()Ljava/util/Collection;
+#createCatalogProperties(Ljava/lang/String;Lio/trino/connector/ConnectorName;Ljava/util/Map;)Lio/trino/connector/CatalogProperties;
+#addOrReplaceCatalog(Lio/trino/connector/CatalogProperties;)V
+#removeCatalog(Ljava/lang/String;)V

+###io/trino/connector/ConnectorName
@408
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/connector/CatalogPruneTask
@408
+#<init>(Lio/trino/transaction/TransactionManager;Lio/trino/connector/CoordinatorDynamicCatalogManager;Lio/airlift/node/NodeInfo;Lio/airlift/discovery/client/ServiceSelector;Lio/airlift/http/client/HttpClient;Lio/trino/connector/CatalogPruneTaskConfig;Lio/trino/server/InternalCommunicationConfig;)V
+#start()V
+#shutdown()V
+#getExecutor()Lio/airlift/concurrent/ThreadPoolExecutorMBean;

+###io/trino/connector/CatalogPruneTaskConfig
@408
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)Lio/trino/connector/CatalogPruneTaskConfig;
+#getUpdateInterval()Lio/airlift/units/Duration;
+#setUpdateInterval(Lio/airlift/units/Duration;)Lio/trino/connector/CatalogPruneTaskConfig;

+###io/trino/execution/CreateCatalogTask
@408
+#<init>(Lio/trino/sql/PlannerContext;Lio/trino/security/AccessControl;Lio/trino/metadata/CatalogManager;)V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/CreateCatalog;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/DropCatalogTask
@408
+#<init>(Lio/trino/metadata/CatalogManager;Lio/trino/security/AccessControl;)V
+#getName()Ljava/lang/String;
+#execute(Lio/trino/sql/tree/DropCatalog;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;
+#execute(Lio/trino/sql/tree/Statement;Lio/trino/execution/QueryStateMachine;Ljava/util/List;Lio/trino/execution/warnings/WarningCollector;)Lcom/google/common/util/concurrent/ListenableFuture;

+###io/trino/execution/scheduler/ExponentialGrowthPartitionMemoryEstimator
@375
+#<init>()V
+#getInitialMemoryRequirements(Lio/trino/Session;Lio/airlift/units/DataSize;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
+#getNextRetryMemoryRequirements(Lio/trino/Session;Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;Lio/airlift/units/DataSize;Lio/trino/spi/ErrorCode;)Lio/trino/execution/scheduler/PartitionMemoryEstimator$MemoryRequirements;
@377
-###io/trino/execution/scheduler/ExponentialGrowthPartitionMemoryEstimator

+###io/trino/connector/ConnectorManager$MaterializedConnector
@386
+#<init>(Lio/trino/connector/CatalogName;Lio/trino/spi/connector/Connector;Ljava/lang/Runnable;)V
+#getCatalogName()Lio/trino/connector/CatalogName;
+#getConnector()Lio/trino/spi/connector/Connector;
+#getSystemTables()Ljava/util/Set;
+#getProcedures()Ljava/util/Set;
+#getTableProcedures()Ljava/util/Set;
+#getTableFunctions()Ljava/util/Set;
+#getSplitManager()Ljava/util/Optional;
+#getPageSourceProvider()Ljava/util/Optional;
+#getPageSinkProvider()Ljava/util/Optional;
+#getIndexProvider()Ljava/util/Optional;
+#getPartitioningProvider()Ljava/util/Optional;
+#getSecurityManagement()Lio/trino/metadata/CatalogMetadata$SecurityManagement;
+#getAccessControl()Ljava/util/Optional;
+#getEventListeners()Ljava/util/List;
+#getSessionProperties()Ljava/util/List;
+#getTableProperties()Ljava/util/List;
+#getMaterializedViewProperties()Ljava/util/List;
+#getColumnProperties()Ljava/util/List;
+#getSchemaProperties()Ljava/util/List;
+#getAnalyzeProperties()Ljava/util/List;
+#getCapabilities()Ljava/util/Set;
+#shutdown()V
@388
-###io/trino/connector/ConnectorManager$MaterializedConnector

+###io/trino/sql/planner/iterative/rule/DeterminePreferredTableExecutePartitioning
@364
+#<init>()V
+#getPattern()Lio/trino/matching/Pattern;
+#isEnabled(Lio/trino/Session;)Z
+#apply(Lio/trino/sql/planner/plan/TableExecuteNode;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
+#apply(Ljava/lang/Object;Lio/trino/matching/Captures;Lio/trino/sql/planner/iterative/Rule$Context;)Lio/trino/sql/planner/iterative/Rule$Result;
@365
-###io/trino/sql/planner/iterative/rule/DeterminePreferredTableExecutePartitioning

+###io/trino/server/PluginInstaller
@409
+#loadPlugins()V
+#installPlugin(Lio/trino/spi/Plugin;Ljava/util/function/Function;)V

+###io/trino/operator/RegularTableFunctionPartition
@409
+#<init>(Lio/trino/operator/PagesIndex;IILio/trino/spi/ptf/TableFunctionDataProcessor;IILjava/util/List;Ljava/util/Optional;Ljava/util/List;)V
+#toOutputPages()Lio/trino/operator/WorkProcessor;

+###io/trino/operator/EmptyTableFunctionPartition
@409
+#<init>(Lio/trino/spi/ptf/TableFunctionDataProcessor;IILjava/util/List;)V
+#toOutputPages()Lio/trino/operator/WorkProcessor;

+###io/trino/operator/TableFunctionOperator
@409
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/spi/ptf/TableFunctionProcessorProvider;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;IILjava/util/List;Ljava/util/Optional;Ljava/util/List;ZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/util/List;ILio/trino/operator/PagesIndex$Factory;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#finish()V
+#isFinished()Z
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#getOutput()Lio/trino/spi/Page;

+###io/trino/operator/RegularTableFunctionPartition$PassThroughColumnSpecification
@409
+#<init>(ZII)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#isPartitioningColumn()Z
+#inputChannel()I
+#indexChannel()I

+###io/trino/operator/TableFunctionPartition
@409
+#toOutputPages()Lio/trino/operator/WorkProcessor;

+###io/trino/operator/TableFunctionOperator$TableFunctionOperatorFactory
@409
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/spi/ptf/TableFunctionProcessorProvider;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;IILjava/util/List;Ljava/util/Optional;Ljava/util/List;ZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/util/List;ILio/trino/operator/PagesIndex$Factory;)V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;
+#noMoreOperators()V
+#duplicate()Lio/trino/operator/OperatorFactory;

+###io/trino/operator/LeafTableFunctionOperator
@409
+#<init>(Lio/trino/operator/OperatorContext;Lio/trino/sql/planner/plan/PlanNodeId;Lio/trino/spi/ptf/TableFunctionProcessorProvider;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;)V
+#getOperatorContext()Lio/trino/operator/OperatorContext;
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#needsInput()Z
+#addInput(Lio/trino/spi/Page;)V
+#addSplit(Lio/trino/metadata/Split;)V
+#noMoreSplits()V
+#getOutput()Lio/trino/spi/Page;
+#isBlocked()Lcom/google/common/util/concurrent/ListenableFuture;
+#finish()V
+#isFinished()Z
+#close()V

+###io/trino/operator/LeafTableFunctionOperator$LeafTableFunctionOperatorFactory
@409
+#<init>(ILio/trino/sql/planner/plan/PlanNodeId;Lio/trino/spi/ptf/TableFunctionProcessorProvider;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;)V
+#getSourceId()Lio/trino/sql/planner/plan/PlanNodeId;
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/SourceOperator;
+#noMoreOperators()V
+#createOperator(Lio/trino/operator/DriverContext;)Lio/trino/operator/Operator;

+###io/trino/likematcher/Pattern$ZeroOrMore
@409
+#<init>()V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/likematcher/Matcher
@409
+#match([BII)Z

+###io/trino/sql/planner/OptimizerConfig$MarkDistinctStrategy
@409
+#values()[Lio/trino/sql/planner/OptimizerConfig$MarkDistinctStrategy;
+#valueOf(Ljava/lang/String;)Lio/trino/sql/planner/OptimizerConfig$MarkDistinctStrategy;
