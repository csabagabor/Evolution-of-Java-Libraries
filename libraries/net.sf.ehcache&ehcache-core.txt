
+###net/sf/ehcache/Ehcache
@1.6.2
+#put(Lnet/sf/ehcache/Element;)V
+#put(Lnet/sf/ehcache/Element;Z)V
+#putQuiet(Lnet/sf/ehcache/Element;)V
+#get(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#getKeysWithExpiryCheck()Ljava/util/List;
+#getKeysNoDuplicateCheck()Ljava/util/List;
+#remove(Ljava/io/Serializable;)Z
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/io/Serializable;Z)Z
+#remove(Ljava/lang/Object;Z)Z
+#removeQuiet(Ljava/io/Serializable;)Z
+#removeQuiet(Ljava/lang/Object;)Z
+#removeAll()V
+#removeAll(Z)V
+#flush()V
+#getSize()I
+#calculateInMemorySize()J
+#getMemoryStoreSize()J
+#getDiskStoreSize()I
+#getStatus()Lnet/sf/ehcache/Status;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#isExpired(Lnet/sf/ehcache/Element;)Z
+#clone()Ljava/lang/Object;
+#getCacheEventNotificationService()Lnet/sf/ehcache/event/RegisteredEventListeners;
+#isElementInMemory(Ljava/io/Serializable;)Z
+#isElementInMemory(Ljava/lang/Object;)Z
+#isElementOnDisk(Ljava/io/Serializable;)Z
+#isElementOnDisk(Ljava/lang/Object;)Z
+#getGuid()Ljava/lang/String;
+#getCacheManager()Lnet/sf/ehcache/CacheManager;
+#clearStatistics()V
+#getStatisticsAccuracy()I
+#setStatisticsAccuracy(I)V
+#evictExpiredElements()V
+#isKeyInCache(Ljava/lang/Object;)Z
+#isValueInCache(Ljava/lang/Object;)Z
+#getStatistics()Lnet/sf/ehcache/Statistics;
+#setCacheManager(Lnet/sf/ehcache/CacheManager;)V
+#getBootstrapCacheLoader()Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
+#setBootstrapCacheLoader(Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
+#setDiskStorePath(Ljava/lang/String;)V
+#initialise()V
+#bootstrap()V
+#dispose()V
+#getCacheConfiguration()Lnet/sf/ehcache/config/CacheConfiguration;
+#registerCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#unregisterCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#getRegisteredCacheExtensions()Ljava/util/List;
+#getAverageGetTime()F
+#setCacheExceptionHandler(Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;)V
+#getCacheExceptionHandler()Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;
+#registerCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#unregisterCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#getRegisteredCacheLoaders()Ljava/util/List;
+#getWithLoader(Ljava/lang/Object;Lnet/sf/ehcache/loader/CacheLoader;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAllWithLoader(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Map;
+#load(Ljava/lang/Object;)V
+#loadAll(Ljava/util/Collection;Ljava/lang/Object;)V
+#isDisabled()Z
+#setDisabled(Z)V
@1.7.0-beta
+#getSizeBasedOnAccuracy(I)I
+#getLiveCacheStatistics()Lnet/sf/ehcache/statistics/LiveCacheStatistics;
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#getSampledCacheStatistics()Lnet/sf/ehcache/statistics/sampled/SampledCacheStatistics;
+#setSampledStatisticsEnabled(Z)V
+#isSampledStatisticsEnabled()Z
+#getInternalContext()Ljava/lang/Object;
@2.0.0-beta
+#putWithWriter(Lnet/sf/ehcache/Element;)V
+#removeWithWriter(Ljava/lang/Object;)Z
+#registerCacheWriter(Lnet/sf/ehcache/writer/CacheWriter;)V
+#unregisterCacheWriter()V
+#getRegisteredCacheWriter()Lnet/sf/ehcache/writer/CacheWriter;
+#disableDynamicFeatures()V
+#getWriterManager()Lnet/sf/ehcache/writer/CacheWriterManager;
+#isCoherent()Z
+#setCoherent(Z)V
+#waitUntilCoherent()V
+#setTransactionManagerLookup(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
@2.0.0
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
-#isCoherent()Z
-#setCoherent(Z)V
-#waitUntilCoherent()V
@2.1.0-beta
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
@2.3.0
+#calculateOffHeapSize()J
+#getOffHeapStoreSize()J
@2.4.0
*#isClusterCoherent()Z[deprecated]
*#isNodeCoherent()Z[deprecated]
*#setNodeCoherent(Z)V[deprecated]
*#waitUntilClusterCoherent()V[deprecated]
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#createQuery()Lnet/sf/ehcache/search/Query;
+#isSearchable()Z
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#acquireReadLockOnKey(Ljava/lang/Object;)V
+#acquireWriteLockOnKey(Ljava/lang/Object;)V
+#tryReadLockOnKey(Ljava/lang/Object;J)Z
+#tryWriteLockOnKey(Ljava/lang/Object;J)Z
+#releaseReadLockOnKey(Ljava/lang/Object;)V
+#releaseWriteLockOnKey(Ljava/lang/Object;)V
+#isClusterBulkLoadEnabled()Z
+#isNodeBulkLoadEnabled()Z
+#setNodeBulkLoadEnabled(Z)V
+#waitUntilClusterBulkLoadComplete()V
@2.4.1
+#isReadLockedByCurrentThread(Ljava/lang/Object;)Z
+#isWriteLockedByCurrentThread(Ljava/lang/Object;)Z
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#putAll(Ljava/util/Collection;)V
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
*#getKeysNoDuplicateCheck()Ljava/util/List;[deprecated]
+#removeAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;Z)V
+#calculateOnDiskSize()J
+#hasAbortedSizeOf()Z
@2.5.2
+#putIfAbsent(Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/Element;
@2.6.0
-#setDiskStorePath(Ljava/lang/String;)V
@2.6.5
+#registerDynamicAttributesExtractor(Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V

+###net/sf/ehcache/cluster/ClusterScheme
@2.0.0
+#values()[Lnet/sf/ehcache/cluster/ClusterScheme;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/cluster/ClusterScheme;

+###net/sf/ehcache/cluster/CacheCluster
@2.0.0
+#getScheme()Lnet/sf/ehcache/cluster/ClusterScheme;
+#getNodes()Ljava/util/Collection;
+#addTopologyListener(Lnet/sf/ehcache/cluster/ClusterTopologyListener;)Z
+#removeTopologyListener(Lnet/sf/ehcache/cluster/ClusterTopologyListener;)Z
@2.1.0-beta
+#isClusterOnline()Z
@2.2.0
+#getCurrentNode()Lnet/sf/ehcache/cluster/ClusterNode;
+#waitUntilNodeJoinsCluster()Lnet/sf/ehcache/cluster/ClusterNode;
@2.4.0
+#getTopologyListeners()Ljava/util/List;

+###net/sf/ehcache/cluster/ClusterNode
@2.0.0
+#getId()Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#getIp()Ljava/lang/String;

+###net/sf/ehcache/cluster/NoopCacheCluster
@2.0.0
+#<init>()V
+#getNodes()Ljava/util/Collection;
+#getScheme()Lnet/sf/ehcache/cluster/ClusterScheme;
+#addTopologyListener(Lnet/sf/ehcache/cluster/ClusterTopologyListener;)Z
+#removeTopologyListener(Lnet/sf/ehcache/cluster/ClusterTopologyListener;)Z
@2.1.0-beta
+#isClusterOnline()Z
@2.2.0
+#getCurrentNode()Lnet/sf/ehcache/cluster/ClusterNode;
+#waitUntilNodeJoinsCluster()Lnet/sf/ehcache/cluster/ClusterNode;
@2.4.0
+#getTopologyListeners()Ljava/util/List;

+###net/sf/ehcache/cluster/ClusterTopologyListener
@2.0.0
+#nodeJoined(Lnet/sf/ehcache/cluster/ClusterNode;)V
+#nodeLeft(Lnet/sf/ehcache/cluster/ClusterNode;)V
+#clusterOnline(Lnet/sf/ehcache/cluster/ClusterNode;)V
+#clusterOffline(Lnet/sf/ehcache/cluster/ClusterNode;)V
@2.4.0
+#clusterRejoined(Lnet/sf/ehcache/cluster/ClusterNode;Lnet/sf/ehcache/cluster/ClusterNode;)V

+###net/sf/ehcache/util/MemoryEfficientByteArrayOutputStream
@1.6.2
+#<init>(I)V
+#getBytes()[B
+#serialize(Ljava/io/Serializable;I)Lnet/sf/ehcache/util/MemoryEfficientByteArrayOutputStream;
+#serialize(Ljava/io/Serializable;)Lnet/sf/ehcache/util/MemoryEfficientByteArrayOutputStream;

+###net/sf/ehcache/util/NamedThreadFactory
@1.7.2
+#<init>(Ljava/lang/String;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

+###net/sf/ehcache/util/counter/sampled/SampledRateCounter
@1.7.0-beta
+#increment(JJ)V
+#decrement(JJ)V
+#setValue(JJ)V
+#setNumeratorValue(J)V
+#setDenominatorValue(J)V

+###net/sf/ehcache/util/counter/sampled/TimeStampedCounterValue
@1.7.0-beta
+#<init>(JJ)V
+#getCounterValue()J
+#getTimestamp()J
+#toString()Ljava/lang/String;

+###net/sf/ehcache/util/counter/sampled/SampledRateCounterConfig
@1.7.0-beta
+#<init>(IIZ)V
+#<init>(IIZJJ)V
+#createCounter()Lnet/sf/ehcache/util/counter/Counter;

+###net/sf/ehcache/util/counter/sampled/SampledCounterImpl
@1.7.0-beta
+#<init>(Lnet/sf/ehcache/util/counter/sampled/SampledCounterConfig;)V
+#getMostRecentSample()Lnet/sf/ehcache/util/counter/sampled/TimeStampedCounterValue;
+#getAllSampleValues()[Lnet/sf/ehcache/util/counter/sampled/TimeStampedCounterValue;
+#shutdown()V
+#getTimerTask()Ljava/util/TimerTask;
+#getIntervalMillis()J
+#getAndReset()J

+###net/sf/ehcache/util/counter/sampled/SampledCounter
@1.7.0-beta
+#shutdown()V
+#getMostRecentSample()Lnet/sf/ehcache/util/counter/sampled/TimeStampedCounterValue;
+#getAllSampleValues()[Lnet/sf/ehcache/util/counter/sampled/TimeStampedCounterValue;
+#getAndReset()J

+###net/sf/ehcache/util/counter/sampled/SampledCounterConfig
@1.7.0-beta
+#<init>(IIZJ)V
+#getHistorySize()I
+#getIntervalSecs()I
+#isResetOnSample()Z
+#createCounter()Lnet/sf/ehcache/util/counter/Counter;

+###net/sf/ehcache/util/counter/sampled/SampledRateCounterImpl
@1.7.0-beta
+#<init>(Lnet/sf/ehcache/util/counter/sampled/SampledRateCounterConfig;)V
+#setValue(JJ)V
+#increment(JJ)V
+#decrement(JJ)V
+#setDenominatorValue(J)V
+#setNumeratorValue(J)V
+#getValue()J
+#getAndReset()J
+#getAndSet(J)J
+#setValue(J)V
+#decrement()J
+#decrement(J)J
+#getMaxValue()J
+#getMinValue()J
+#increment()J
+#increment(J)J

+###net/sf/ehcache/util/counter/CounterManagerImpl
@1.7.0-beta
+#<init>(Lnet/sf/ehcache/util/FailSafeTimer;)V
+#shutdown()V
+#createCounter(Lnet/sf/ehcache/util/counter/CounterConfig;)Lnet/sf/ehcache/util/counter/Counter;
+#shutdownCounter(Lnet/sf/ehcache/util/counter/Counter;)V
@2.6.0
+#addCounter(Lnet/sf/ehcache/util/counter/Counter;)V

+###net/sf/ehcache/util/counter/CounterImpl
@1.7.0-beta
+#<init>()V
+#<init>(J)V
+#increment()J
+#decrement()J
+#getAndSet(J)J
+#getValue()J
+#increment(J)J
+#decrement(J)J
+#setValue(J)V

+###net/sf/ehcache/util/counter/CounterManager
@1.7.0-beta
+#createCounter(Lnet/sf/ehcache/util/counter/CounterConfig;)Lnet/sf/ehcache/util/counter/Counter;
+#shutdown()V
+#shutdownCounter(Lnet/sf/ehcache/util/counter/Counter;)V
@2.6.0
+#addCounter(Lnet/sf/ehcache/util/counter/Counter;)V

+###net/sf/ehcache/util/counter/Counter
@1.7.0-beta
+#increment()J
+#decrement()J
+#getAndSet(J)J
+#getValue()J
+#increment(J)J
+#decrement(J)J
+#setValue(J)V

+###net/sf/ehcache/util/counter/CounterConfig
@1.7.0-beta
+#<init>(J)V
+#getInitialValue()J
+#createCounter()Lnet/sf/ehcache/util/counter/Counter;

+###net/sf/ehcache/util/PropertyUtil
@1.6.2
+#extractAndLogProperty(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;
+#extractAndLogProperty(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
+#parseProperties(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;
+#parseBoolean(Ljava/lang/String;)Z

+###net/sf/ehcache/util/ProductInfo
@1.7.0-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getBuiltBy()Ljava/lang/String;
+#getBuildJdk()Ljava/lang/String;
+#getBuildTime()Ljava/lang/String;
+#getBuildRevision()Ljava/lang/String;
+#getPatchLevel()Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.4.1
+#<init>(Ljava/io/InputStream;)V
+#getRequiredCoreVersion()Ljava/lang/String;
+#isEnterprise()Z
+#assertRequiredCoreVersionPresent()V
@2.4.6
+#getBuildHostname()Ljava/lang/String;

+###net/sf/ehcache/util/TimeUtil
@1.7.0-beta
+#<init>()V
+#toSecs(J)I
+#toMillis(I)J
@1.7.1
+#convertTimeToInt(J)I

+###net/sf/ehcache/util/CircularLossyQueue
@1.7.0-beta
+#<init>(I)V
+#push(Ljava/lang/Object;)V
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#isEmtpy()Z
+#depth()I

+###net/sf/ehcache/util/UpdateChecker
@1.7.0-beta
+#<init>()V
+#run()V
+#checkForUpdate()V

+###net/sf/ehcache/util/FailSafeTimer
@1.7.0-beta
+#<init>(Ljava/lang/String;)V
+#cancel()V
+#purge()I
+#schedule(Ljava/util/TimerTask;Ljava/util/Date;J)V
+#schedule(Ljava/util/TimerTask;Ljava/util/Date;)V
+#schedule(Ljava/util/TimerTask;JJ)V
+#schedule(Ljava/util/TimerTask;J)V
+#scheduleAtFixedRate(Ljava/util/TimerTask;Ljava/util/Date;J)V
+#scheduleAtFixedRate(Ljava/util/TimerTask;JJ)V

+###net/sf/ehcache/util/ClassLoaderUtil
@1.6.2
+#getStandardClassLoader()Ljava/lang/ClassLoader;
+#getFallbackClassLoader()Ljava/lang/ClassLoader;
+#createNewInstance(Ljava/lang/String;)Ljava/lang/Object;
@1.7.0-beta
+#createNewInstance(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;

+###net/sf/ehcache/DefaultElementEvictionData
@1.7.0-beta
+#<init>(I)V
+#<init>(II)V
+#setCreationTime(I)V
+#getCreationTime()I
+#getLastAccessTime()I
+#updateLastAccessTime(ILnet/sf/ehcache/Element;)V
+#resetLastAccessTime(Lnet/sf/ehcache/Element;)V
+#clone()Lnet/sf/ehcache/ElementEvictionData;
+#canParticipateInSerialization()Z
+#clone()Ljava/lang/Object;
@2.0.0
+#<init>(J)V
+#<init>(JJ)V
+#setCreationTime(J)V
+#getCreationTime()J
+#getLastAccessTime()J
+#updateLastAccessTime(JLnet/sf/ehcache/Element;)V
-#<init>(I)V
-#<init>(II)V
-#setCreationTime(I)V
-#getCreationTime()I
-#getLastAccessTime()I
-#updateLastAccessTime(ILnet/sf/ehcache/Element;)V

+###net/sf/ehcache/event/RegisteredEventListeners
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#notifyElementRemoved(Lnet/sf/ehcache/Element;Z)V
+#notifyElementPut(Lnet/sf/ehcache/Element;Z)V
+#notifyElementUpdated(Lnet/sf/ehcache/Element;Z)V
+#notifyElementExpiry(Lnet/sf/ehcache/Element;Z)V
+#hasCacheEventListeners()Z
+#notifyElementEvicted(Lnet/sf/ehcache/Element;Z)V
+#notifyRemoveAll(Z)V
+#registerListener(Lnet/sf/ehcache/event/CacheEventListener;)Z
+#unregisterListener(Lnet/sf/ehcache/event/CacheEventListener;)Z
+#getCacheEventListeners()Ljava/util/Set;
+#dispose()V
+#toString()Ljava/lang/String;
+#clearCounters()V
+#getElementsRemovedCounter()J
+#getElementsPutCounter()J
+#getElementsUpdatedCounter()J
+#getElementsExpiredCounter()J
+#getElementsEvictedCounter()J
+#getElementsRemoveAllCounter()J
@2.0.0
+#registerListener(Lnet/sf/ehcache/event/CacheEventListener;Lnet/sf/ehcache/event/NotificationScope;)Z
@2.4.4
+#notifyElementRemoved(Lnet/sf/ehcache/event/RegisteredEventListeners$ElementCreationCallback;Z)V
+#notifyElementPut(Lnet/sf/ehcache/event/RegisteredEventListeners$ElementCreationCallback;Z)V
+#notifyElementUpdated(Lnet/sf/ehcache/event/RegisteredEventListeners$ElementCreationCallback;Z)V
+#notifyElementExpiry(Lnet/sf/ehcache/event/RegisteredEventListeners$ElementCreationCallback;Z)V
+#notifyElementEvicted(Lnet/sf/ehcache/event/RegisteredEventListeners$ElementCreationCallback;Z)V
@2.5.0
+#hasCacheReplicators()Z
+#getFrontEndCacheTier()Lnet/sf/ehcache/store/FrontEndCacheTier;

+###net/sf/ehcache/event/CacheEventListenerFactory
@1.6.2
+#<init>()V
+#createCacheEventListener(Ljava/util/Properties;)Lnet/sf/ehcache/event/CacheEventListener;

+###net/sf/ehcache/event/NotificationScope
@2.0.0
+#values()[Lnet/sf/ehcache/event/NotificationScope;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/event/NotificationScope;
+#shouldDeliver(Z)Z

+###net/sf/ehcache/event/CacheManagerEventListener
@1.6.2
+#init()V
+#getStatus()Lnet/sf/ehcache/Status;
+#dispose()V
+#notifyCacheAdded(Ljava/lang/String;)V
+#notifyCacheRemoved(Ljava/lang/String;)V

+###net/sf/ehcache/event/CacheEventListener
@1.6.2
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementExpired(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementEvicted(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#dispose()V
+#clone()Ljava/lang/Object;

+###net/sf/ehcache/event/CacheManagerEventListenerFactory
@1.6.2
+#<init>()V
+#createCacheManagerEventListener(Ljava/util/Properties;)Lnet/sf/ehcache/event/CacheManagerEventListener;
@2.5.0
+#createCacheManagerEventListener(Lnet/sf/ehcache/CacheManager;Ljava/util/Properties;)Lnet/sf/ehcache/event/CacheManagerEventListener;
-#createCacheManagerEventListener(Ljava/util/Properties;)Lnet/sf/ehcache/event/CacheManagerEventListener;

+###net/sf/ehcache/event/TerracottaCacheEventReplicationFactory
@2.0.0
+#<init>()V
+#createCacheEventListener(Ljava/util/Properties;)Lnet/sf/ehcache/event/CacheEventListener;

+###net/sf/ehcache/event/TerracottaCacheEventReplication
@2.0.0
+#<init>()V
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementExpired(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementEvicted(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#clone()Lnet/sf/ehcache/event/TerracottaCacheEventReplication;
+#isReplicateUpdatesViaCopy()Z
+#notAlive()Z
+#alive()Z
+#dispose()V
+#clone()Ljava/lang/Object;
@2.5.0
-#isReplicateUpdatesViaCopy()Z
-#notAlive()Z
-#alive()Z

+###net/sf/ehcache/event/CacheManagerEventListenerRegistry
@1.6.2
+#<init>()V
+#registerListener(Lnet/sf/ehcache/event/CacheManagerEventListener;)Z
+#unregisterListener(Lnet/sf/ehcache/event/CacheManagerEventListener;)Z
+#hasRegisteredListeners()Z
+#getRegisteredListeners()Ljava/util/Set;
+#init()V
+#getStatus()Lnet/sf/ehcache/Status;
+#dispose()V
+#notifyCacheAdded(Ljava/lang/String;)V
+#notifyCacheRemoved(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###net/sf/ehcache/store/Policy
@1.6.2
+#getName()Ljava/lang/String;
+#selectedBasedOnPolicy([Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#compare(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z

+###net/sf/ehcache/store/chm/ConcurrentHashMap
@2.0.0-beta
+#<init>(IFI)V
+#<init>(I)V
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#isEmpty()Z
+#size()I
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#keys()Ljava/util/Enumeration;
+#elements()Ljava/util/Enumeration;
@2.5.0
-###net/sf/ehcache/store/chm/ConcurrentHashMap

+###net/sf/ehcache/store/chm/SelectableConcurrentHashMap
@2.0.0-beta
+#<init>(IFI)V
+#getRandomValues(I)[Lnet/sf/ehcache/Element;
@2.3.0
+#getRandomValues(ILjava/lang/Object;)[Lnet/sf/ehcache/Element;
+#quickSize()I
-#getRandomValues(I)[Lnet/sf/ehcache/Element;
@2.5.0
+#<init>(Lnet/sf/ehcache/pool/PoolAccessor;ZIFIJLnet/sf/ehcache/event/RegisteredEventListeners;)V
+#setMaxSize(J)V
+#storedObject(Lnet/sf/ehcache/Element;)Ljava/lang/Object;
+#size()I
+#lockFor(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#locks()[Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#put(Ljava/lang/Object;Lnet/sf/ehcache/Element;J)Lnet/sf/ehcache/Element;
+#putIfAbsent(Ljava/lang/Object;Lnet/sf/ehcache/Element;J)Lnet/sf/ehcache/Element;
+#unpinAll()V
+#setPinned(Ljava/lang/Object;Z)V
+#isPinned(Ljava/lang/Object;)Z
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#evict()Z
+#recalculateSize(Ljava/lang/Object;)V
+#elements()Ljava/util/Enumeration;
+#keys()Ljava/util/Enumeration;
+#clear()V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#putAll(Ljava/util/Map;)V
+#contains(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#containsKey(Ljava/lang/Object;)Z
+#isEmpty()Z
-#<init>(IFI)V
@2.5.1
+#pinnedSize()I
+#put(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#putIfAbsent(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#pinnedKeySet()Ljava/util/Set;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@2.6.0
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
-#put(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#putIfAbsent(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#elements()Ljava/util/Enumeration;
-#keys()Ljava/util/Enumeration;
-#putAll(Ljava/util/Map;)V
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#contains(Ljava/lang/Object;)Z
@2.6.8
+#<init>(Lnet/sf/ehcache/pool/PoolAccessor;ZIJLnet/sf/ehcache/event/RegisteredEventListeners;)V

+###net/sf/ehcache/store/LfuPolicy
@1.6.2
+#<init>()V
+#getName()Ljava/lang/String;
+#compare(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z

+###net/sf/ehcache/store/DiskStore
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#containsKey(Ljava/lang/Object;)Z
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeyArray()[Ljava/lang/Object;
+#getSize()I
+#getSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#put(Lnet/sf/ehcache/Element;)V
+#bufferFull()Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#dispose()V
+#flush()V
+#expireElements()V
+#toString()Ljava/lang/String;
+#generateUniqueDirectory()Ljava/lang/String;
+#getTotalFileSize()J
+#getDataFileSize()J
+#calculateDataFileSparseness()F
+#getUsedDataSize()J
+#getIndexFileSize()J
+#getDataFileName()Ljava/lang/String;
+#getDataFilePath()Ljava/lang/String;
+#getIndexFileName()Ljava/lang/String;
+#isSpoolThreadAlive()Z
+#leastHit([Lnet/sf/ehcache/store/DiskStore$DiskElement;Lnet/sf/ehcache/store/DiskStore$DiskElement;)Lnet/sf/ehcache/store/DiskStore$DiskElement;
+#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
@1.7.0-beta
+#getTerracottaClusteredSize()I
+#getInternalContext()Ljava/lang/Object;
+#isCacheCoherent()Z
@2.0.0-beta
+#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/Store;
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#timeToIdleChanged(JJ)V
+#timeToLiveChanged(JJ)V
+#diskCapacityChanged(II)V
+#memoryCapacityChanged(II)V
+#loggingEnabledChanged(ZZ)V
+#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#setCoherent(Z)V
+#waitUntilCoherent()V
-#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;)V
@2.0.0
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
-#put(Lnet/sf/ehcache/Element;)V
-#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
-#setCoherent(Z)V
-#waitUntilCoherent()V
@2.1.0-beta
+#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/DiskStore;
+#loggingChanged(ZZ)V
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/Store;
-#loggingEnabledChanged(ZZ)V
-#isCacheCoherent()Z
-#isClusterCoherent()Z
-#isNodeCoherent()Z
-#setNodeCoherent(Z)V
-#waitUntilClusterCoherent()V
@2.3.0
+#create(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;)Lnet/sf/ehcache/store/DiskStore;
+#getKeys()Ljava/util/List;
+#getMBean()Ljava/lang/Object;
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
-#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/DiskStore;
-#getKeyArray()[Ljava/lang/Object;
@2.4.0
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
-#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
@2.5.0
-###net/sf/ehcache/store/DiskStore

+###net/sf/ehcache/store/FifoPolicy
@1.6.2
+#<init>()V
+#getName()Ljava/lang/String;
+#compare(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z

+###net/sf/ehcache/store/MemoryStore
@1.6.2
+#create(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;)Lnet/sf/ehcache/store/MemoryStore;
+#put(Lnet/sf/ehcache/Element;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#dispose()V
+#flush()V
+#getStatus()Lnet/sf/ehcache/Status;
+#getKeyArray()[Ljava/lang/Object;
+#getSize()I
+#containsKey(Ljava/lang/Object;)Z
+#getSizeInBytes()J
+#expireElements()V
+#bufferFull()Z
+#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
@1.7.0-beta
+#getTerracottaClusteredSize()I
+#getInternalContext()Ljava/lang/Object;
+#isCacheCoherent()Z
@2.0.0-beta
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#timeToIdleChanged(JJ)V
+#timeToLiveChanged(JJ)V
+#diskCapacityChanged(II)V
+#loggingEnabledChanged(ZZ)V
+#memoryCapacityChanged(II)V
+#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#setCoherent(Z)V
+#waitUntilCoherent()V
@2.0.0
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#isNodeCoherent()Z
+#isClusterCoherent()Z
+#waitUntilClusterCoherent()V
+#setNodeCoherent(Z)V
-#put(Lnet/sf/ehcache/Element;)V
-#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
-#setCoherent(Z)V
-#waitUntilCoherent()V
@2.1.0-beta
+#loggingChanged(ZZ)V
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#isCacheCoherent()Z
-#loggingEnabledChanged(ZZ)V
-#isNodeCoherent()Z
-#isClusterCoherent()Z
-#waitUntilClusterCoherent()V
-#setNodeCoherent(Z)V
@2.3.0
+#getKeys()Ljava/util/List;
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getMBean()Ljava/lang/Object;
-#getKeyArray()[Ljava/lang/Object;
@2.3.1
+#isFull()Z
@2.4.0
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
-#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
@2.4.6
+#createSilent(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;)Lnet/sf/ehcache/store/MemoryStore;
@2.5.0
+#create(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/MemoryStore;
+#unpinAll()V
+#setPinned(Ljava/lang/Object;Z)V
+#isPinned(Ljava/lang/Object;)Z
+#fill(Lnet/sf/ehcache/Element;)V
+#removeIfTierNotPinned(Ljava/lang/Object;)Z
+#removeNoReturn(Ljava/lang/Object;)V
+#canPutWithoutEvicting(Lnet/sf/ehcache/Element;)Z
+#maxBytesLocalHeapChanged(JJ)V
+#maxBytesLocalDiskChanged(JJ)V
+#hasAbortedSizeOf()Z
+#evictFromOnHeap(IJ)Z
+#evictFromOnDisk(IJ)Z
+#getApproximateDiskHitRate()F
+#getApproximateDiskMissRate()F
+#getApproximateDiskCountSize()J
+#getApproximateDiskByteSize()J
+#getApproximateHeapHitRate()F
+#getApproximateHeapMissRate()F
+#getApproximateHeapCountSize()J
+#getApproximateHeapByteSize()J
+#elementSet()Ljava/util/Collection;
+#recalculateSize(Ljava/lang/Object;)V
-#create(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;)Lnet/sf/ehcache/store/MemoryStore;
-#createSilent(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;)Lnet/sf/ehcache/store/MemoryStore;
-#getSizeInBytes()J
-#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
-#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
@2.5.1
+#isTierPinned()Z
+#getPresentPinnedKeys()Ljava/util/Set;
+#isPersistent()Z
@2.6.0
+#removeIfNotPinned(Ljava/lang/Object;)Z
-#removeIfTierNotPinned(Ljava/lang/Object;)Z

+###net/sf/ehcache/store/AbstractPolicy
@1.6.2
+#<init>()V
+#selectedBasedOnPolicy([Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#generateRandomSample(I)[I
+#generateRandomSampleIndices(I)[I
@2.0.0-beta
+#calculateSampleSize(I)I
-#generateRandomSampleIndices(I)[I

+###net/sf/ehcache/store/LruPolicy
@1.6.2
+#<init>()V
+#getName()Ljava/lang/String;
+#compare(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z

+###net/sf/ehcache/store/MemoryStoreEvictionPolicy
@1.6.2
+#toString()Ljava/lang/String;
+#fromString(Ljava/lang/String;)Lnet/sf/ehcache/store/MemoryStoreEvictionPolicy;

+###net/sf/ehcache/store/Store
@1.6.2
+#put(Lnet/sf/ehcache/Element;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeyArray()[Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#dispose()V
+#getSize()I
+#getSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#containsKey(Ljava/lang/Object;)Z
+#expireElements()V
+#flush()V
+#bufferFull()Z
+#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
@1.7.0-beta
+#getTerracottaClusteredSize()I
+#getInternalContext()Ljava/lang/Object;
+#isCacheCoherent()Z
@2.0.0-beta
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#setCoherent(Z)V
+#waitUntilCoherent()V
@2.0.0
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
-#put(Lnet/sf/ehcache/Element;)V
-#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
-#setCoherent(Z)V
-#waitUntilCoherent()V
@2.1.0-beta
+#addStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#removeStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#getInMemorySize()I
+#getOnDiskSize()I
+#getInMemorySizeInBytes()J
+#getOnDiskSizeInBytes()J
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
-#getSizeInBytes()J
-#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
-#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
@2.3.0
+#getKeys()Ljava/util/List;
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getMBean()Ljava/lang/Object;
-#getKeyArray()[Ljava/lang/Object;
@2.4.0
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#setAttributeExtractors(Ljava/util/Map;)V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
-#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#putAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;)V
+#hasAbortedSizeOf()Z
+#getAllQuiet(Ljava/util/Collection;)Ljava/util/Map;
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#recalculateSize(Ljava/lang/Object;)V

+###net/sf/ehcache/store/XATransactionalStore
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
+#put(Lnet/sf/ehcache/Element;)V
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeyArray()[Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#dispose()V
+#getSize()I
+#getTerracottaClusteredSize()I
+#getSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#containsKey(Ljava/lang/Object;)Z
+#expireElements()V
+#flush()V
+#bufferFull()Z
+#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getInternalContext()Ljava/lang/Object;
+#isCacheCoherent()Z
+#setCoherent(Z)V
+#waitUntilCoherent()V
@2.0.0
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
-#put(Lnet/sf/ehcache/Element;)V
-#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
-#setCoherent(Z)V
-#waitUntilCoherent()V
@2.0.1
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
+#getOrCreateXAResource()Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;
-#<init>(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
@2.1.0-beta
+#getOnDiskSize()I
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getOnDiskSizeInBytes()J
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#getSizeInBytes()J
-#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
-#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
@2.1.0
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Ljavax/transaction/TransactionManager;)V
-#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
@2.3.0
+#getKeys()Ljava/util/List;
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getMBean()Ljava/lang/Object;
-#getKeyArray()[Ljava/lang/Object;
@2.4.0
-###net/sf/ehcache/store/XATransactionalStore

+###net/sf/ehcache/store/LruMemoryStore$SpoolingLinkedHashMap
@1.6.2
+#<init>(Lnet/sf/ehcache/store/LruMemoryStore;)V
@2.5.0
+#setPinning(Ljava/lang/Object;Z)V
+#isPinned(Ljava/lang/Object;)Z
+#unpinAll()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/store/LruMemoryStore
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;)V
+#put(Lnet/sf/ehcache/Element;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#dispose()V
+#flush()V
+#getStatus()Lnet/sf/ehcache/Status;
+#getKeyArray()[Ljava/lang/Object;
+#getSize()I
+#containsKey(Ljava/lang/Object;)Z
+#getSizeInBytes()J
+#expireElements()V
+#bufferFull()Z
+#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
@1.7.0-beta
+#getTerracottaClusteredSize()I
+#getInternalContext()Ljava/lang/Object;
+#isCacheCoherent()Z
@2.0.0-beta
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#setCoherent(Z)V
+#waitUntilCoherent()V
@2.0.0
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#waitUntilClusterCoherent()V
+#setNodeCoherent(Z)V
+#isNodeCoherent()Z
+#isClusterCoherent()Z
-#put(Lnet/sf/ehcache/Element;)V
-#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)V
-#setCoherent(Z)V
-#waitUntilCoherent()V
@2.1.0-beta
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#waitUntilClusterCoherent()V
-#setNodeCoherent(Z)V
-#isNodeCoherent()Z
-#isClusterCoherent()Z
-#isCacheCoherent()Z
@2.3.0
+#getKeys()Ljava/util/List;
+#getMBean()Ljava/lang/Object;
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
-#getKeyArray()[Ljava/lang/Object;
@2.4.0
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
-#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V

+###net/sf/ehcache/concurrent/ConcurrencyUtil
@1.6.2
+#hash(Ljava/lang/Object;)I
+#selectLock(Ljava/lang/Object;I)I

+###net/sf/ehcache/concurrent/LockType
@1.7.0-beta
+#values()[Lnet/sf/ehcache/concurrent/LockType;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/concurrent/LockType;

+###net/sf/ehcache/concurrent/CacheLockProvider
@1.7.0-beta
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
@2.0.0-beta
+#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
@2.0.0
+#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.1.0-beta
+#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
@2.5.0
-#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#unlockWriteLockForAllKeys([Ljava/lang/Object;)V

+###net/sf/ehcache/concurrent/ReadWriteLockSync
@1.7.0-beta
+#<init>()V
+#lock(Lnet/sf/ehcache/concurrent/LockType;)V
+#tryLock(Lnet/sf/ehcache/concurrent/LockType;J)Z
+#unlock(Lnet/sf/ehcache/concurrent/LockType;)V
@2.0.0
+#compareTo(Lnet/sf/ehcache/concurrent/ReadWriteLockSync;)I
+#compareTo(Ljava/lang/Object;)I
@2.1.0-beta
+#isHeldByCurrentThread(Lnet/sf/ehcache/concurrent/LockType;)Z
@2.3.0
+#<init>(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V
@2.5.0
+#getReadWriteLock()Ljava/util/concurrent/locks/ReadWriteLock;
-#compareTo(Lnet/sf/ehcache/concurrent/ReadWriteLockSync;)I
-#compareTo(Ljava/lang/Object;)I

+###net/sf/ehcache/concurrent/StripedReadWriteLockSync
@1.7.0-beta
+#<init>()V
+#<init>(I)V
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
@2.0.0-beta
+#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
@2.0.0
+#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.1.0-beta
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
+#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
@2.5.0
+#getLockForKey(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
+#getAllSyncs()Ljava/util/List;
-#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#unlockWriteLockForAllKeys([Ljava/lang/Object;)V

+###net/sf/ehcache/concurrent/Sync
@1.6.2
+#acquire()V
+#attempt(J)Z
+#release()V
@1.7.0-beta
+#lock(Lnet/sf/ehcache/concurrent/LockType;)V
+#tryLock(Lnet/sf/ehcache/concurrent/LockType;J)Z
+#unlock(Lnet/sf/ehcache/concurrent/LockType;)V
-#acquire()V
-#attempt(J)Z
-#release()V
@2.1.0-beta
+#isHeldByCurrentThread(Lnet/sf/ehcache/concurrent/LockType;)Z

+###net/sf/ehcache/exceptionhandler/CacheExceptionHandler
@1.6.2
+#onException(Lnet/sf/ehcache/Ehcache;Ljava/lang/Object;Ljava/lang/Exception;)V

+###net/sf/ehcache/exceptionhandler/ExceptionHandlingDynamicCacheProxy
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#createProxy(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/Ehcache;
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/exceptionhandler/CacheExceptionHandlerFactory
@1.6.2
+#<init>()V
+#createExceptionHandler(Ljava/util/Properties;)Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;

+###net/sf/ehcache/terracotta/ClusteredInstanceFactory
@2.0.0-beta
+#createStore(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/store/Store;
+#createWriteBehind(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/writer/writebehind/WriteBehind;
+#createXAStore(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;)Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;
@2.0.0
+#getTopology()Lnet/sf/ehcache/cluster/CacheCluster;
+#createEventReplicator(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/event/CacheEventListener;
@2.1.0-beta
+#getUUID()Ljava/lang/String;
@2.1.0
+#createXAStore(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Z)Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;
-#createXAStore(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;)Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;
@2.2.0
+#shutdown()V
@2.4.0
+#createTransactionIDFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/TransactionIDFactory;
+#getOrCreateSoftLockFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/SoftLockFactory;
-#createXAStore(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Z)Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;
@2.5.0
+#getOrCreateSoftLockFactory(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/SoftLockFactory;
-#getOrCreateSoftLockFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/SoftLockFactory;
@2.5.2
+#createTransactionIDFactory(Ljava/lang/String;Ljava/lang/String;)Lnet/sf/ehcache/transaction/TransactionIDFactory;
-#createTransactionIDFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/TransactionIDFactory;
@2.6.0
+#getOrCreateSoftLockManager(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/SoftLockManager;
-#getOrCreateSoftLockFactory(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/SoftLockFactory;

+###net/sf/ehcache/management/CacheConfigurationMBean
@1.6.2
+#getName()Ljava/lang/String;
+#getMaxElementsInMemory()I
+#getMaxElementsOnDisk()I
+#getMemoryStoreEvictionPolicy()Ljava/lang/String;
+#isEternal()Z
+#getTimeToIdleSeconds()J
+#getTimeToLiveSeconds()J
+#isOverflowToDisk()Z
+#isDiskPersistent()Z
+#getDiskExpiryThreadIntervalSeconds()J
@1.7.0-beta
+#isTerracottaClustered()Z
@2.0.0-beta
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#setMaxElementsInMemory(I)V
+#setMaxElementsOnDisk(I)V
+#setMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#setEternal(Z)V
+#setTimeToIdleSeconds(J)V
+#setTimeToLiveSeconds(J)V
+#setOverflowToDisk(Z)V
+#setDiskPersistent(Z)V
+#setDiskExpiryThreadIntervalSeconds(J)V
+#getDiskSpoolBufferSizeMB()I
+#setDiskSpoolBufferSizeMB(I)V
@2.3.0
+#isOverflowToOffHeap()Z
+#getMaxMemoryOffHeapInBytes()J
@2.4.0
+#getTerracottaConsistency()Ljava/lang/String;
@2.5.0
*#getMaxElementsInMemory()I[deprecated]
*#setMaxElementsInMemory(I)V[deprecated]
*#getMaxElementsOnDisk()I[deprecated]
*#setMaxElementsOnDisk(I)V[deprecated]
+#getMaxEntriesLocalDisk()J
+#getMaxEntriesLocalHeap()J
+#setMaxEntriesLocalDisk(J)V
+#setMaxEntriesLocalHeap(J)V
+#getMaxBytesLocalDisk()J
+#getMaxBytesLocalHeap()J
+#getMaxBytesLocalOffHeap()J
*#getMaxMemoryOffHeapInBytes()J[deprecated]

+###net/sf/ehcache/management/CacheStatistics
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#getAssociatedCacheName()Ljava/lang/String;
+#clearStatistics()V
+#getCacheHits()J
+#getInMemoryHits()J
+#getOnDiskHits()J
+#getCacheMisses()J
+#getObjectCount()J
+#getMemoryStoreObjectCount()J
+#getDiskStoreObjectCount()J
+#getEhcache()Lnet/sf/ehcache/Ehcache;
@2.3.0
+#getOffHeapHits()J
@2.4.0
+#getInMemoryMisses()J
+#getOffHeapMisses()J
+#getOnDiskMisses()J
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I
+#getOffHeapStoreObjectCount()J
+#getCacheHitPercentage()D
+#getCacheMissPercentage()D
+#getInMemoryHitPercentage()D
+#getOffHeapHitPercentage()D
+#getOnDiskHitPercentage()D
@2.5.2
+#<init>(Lnet/sf/ehcache/Ehcache;JLjava/util/concurrent/TimeUnit;)V

+###net/sf/ehcache/management/sampled/SampledEhcacheMBeans
@1.7.0-beta
+#<init>()V
+#getCacheManagerObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;
+#getCacheObjectName(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getQueryCacheManagerObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;
+#getQueryCacheManagersObjectName()Ljavax/management/ObjectName;
@1.7.1
+#getCacheManagerObjectName(Lnet/sf/ehcache/store/StoreFactory;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getCacheObjectName(Lnet/sf/ehcache/store/StoreFactory;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getQueryCacheManagerObjectName(Lnet/sf/ehcache/store/StoreFactory;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getQueryCacheManagersObjectName(Lnet/sf/ehcache/store/StoreFactory;)Ljavax/management/ObjectName;
-#getCacheManagerObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;
-#getCacheObjectName(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
-#getQueryCacheManagerObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;
-#getQueryCacheManagersObjectName()Ljavax/management/ObjectName;
@2.0.0-beta
+#getCacheManagerObjectName(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getCacheObjectName(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getQueryCacheManagerObjectName(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getQueryCacheManagersObjectName(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)Ljavax/management/ObjectName;
-#getCacheManagerObjectName(Lnet/sf/ehcache/store/StoreFactory;Ljava/lang/String;)Ljavax/management/ObjectName;
-#getCacheObjectName(Lnet/sf/ehcache/store/StoreFactory;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
-#getQueryCacheManagerObjectName(Lnet/sf/ehcache/store/StoreFactory;Ljava/lang/String;)Ljavax/management/ObjectName;
-#getQueryCacheManagersObjectName(Lnet/sf/ehcache/store/StoreFactory;)Ljavax/management/ObjectName;
@2.4.0
+#getCacheManagerObjectName(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getCacheObjectName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getQueryCacheManagerObjectName(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
+#getQueryCacheManagersObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;
-#getCacheManagerObjectName(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;Ljava/lang/String;)Ljavax/management/ObjectName;
-#getCacheObjectName(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
-#getQueryCacheManagerObjectName(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;Ljava/lang/String;)Ljavax/management/ObjectName;
-#getQueryCacheManagersObjectName(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)Ljavax/management/ObjectName;

+###net/sf/ehcache/management/sampled/SampledMBeanRegistrationProvider
@1.7.0-beta
+#<init>()V
+#initialize(Lnet/sf/ehcache/CacheManager;)V
+#reinitialize()V
+#init()V
+#getStatus()Lnet/sf/ehcache/Status;
+#dispose()V
+#notifyCacheAdded(Ljava/lang/String;)V
+#notifyCacheRemoved(Ljava/lang/String;)V
@1.7.1
+#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/store/StoreFactory;)V
+#isAlive()Z
-#initialize(Lnet/sf/ehcache/CacheManager;)V
@2.0.0-beta
+#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
-#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/store/StoreFactory;)V
@2.1.0
+#reinitialize(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
-#reinitialize()V
@2.4.3
+#isInitialized()Z

+###net/sf/ehcache/management/sampled/SampledCacheMBean
@1.7.0-beta
+#removeAll()V
+#flush()V
+#getStatus()Ljava/lang/String;
+#isTerracottaClustered()Z
+#clearStatistics()V
+#enableStatistics()V
+#disableStatistics()V
+#enableSampledStatistics()V
+#disableSampledStatistics()V
+#getConfigMaxElementsInMemory()I
+#getConfigMaxElementsOnDisk()I
+#getConfigMemoryStoreEvictionPolicy()Ljava/lang/String;
+#isConfigEternal()Z
+#getConfigTimeToIdleSeconds()J
+#getConfigTimeToLiveSeconds()J
+#isConfigOverflowToDisk()Z
+#isConfigDiskPersistent()Z
+#getConfigDiskExpiryThreadIntervalSeconds()J
@2.0.0-beta
+#isEnabled()Z
+#setCoherent(Z)V
+#isCoherent()Z
+#setEnabled(Z)V
+#setConfigMaxElementsInMemory(I)V
+#setConfigMaxElementsOnDisk(I)V
+#setConfigMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#setConfigEternal(Z)V
+#setConfigTimeToIdleSeconds(J)V
+#setConfigTimeToLiveSeconds(J)V
+#setConfigOverflowToDisk(Z)V
+#setConfigDiskPersistent(Z)V
+#setConfigDiskExpiryThreadIntervalSeconds(J)V
+#isConfigLoggingEnabled()Z
+#setConfigLoggingEnabled(Z)V
@2.0.0
+#setNodeCoherent(Z)V
+#isClusterCoherent()Z
+#isNodeCoherent()Z
-#setCoherent(Z)V
-#isCoherent()Z
@2.1.0-beta
+#setStatisticsEnabled(Z)V
@2.4.0
*#setNodeCoherent(Z)V[deprecated]
+#setNodeBulkLoadEnabled(Z)V
*#isClusterCoherent()Z[deprecated]
+#isClusterBulkLoadEnabled()Z
*#isNodeCoherent()Z[deprecated]
+#isNodeBulkLoadEnabled()Z
+#getTerracottaConsistency()Ljava/lang/String;
+#getHasWriteBehindWriter()Z
+#getWriterMaxQueueSize()I
+#getWriterConcurrency()I
+#getTransactional()Z
+#getSearchable()Z
@2.4.1
+#getTerracottaStorageStrategy()Ljava/lang/String;
@2.5.0
+#getMaxEntriesLocalHeap()J
+#setMaxEntriesLocalHeap(J)V
+#getMaxElementsInMemory()I[deprecated]
+#setMaxElementsInMemory(I)V
+#getMaxBytesLocalHeap()J
+#setMaxBytesLocalHeap(J)V
+#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
+#getMaxEntriesLocalDisk()J
+#setMaxEntriesLocalDisk(J)V
+#getMaxElementsOnDisk()I[deprecated]
+#setMaxElementsOnDisk(I)V
+#getMaxBytesLocalDisk()J
+#setMaxBytesLocalDisk(J)V
+#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#getMemoryStoreEvictionPolicy()Ljava/lang/String;
+#setMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#isEternal()Z
+#setEternal(Z)V
+#getTimeToIdleSeconds()J
+#setTimeToIdleSeconds(J)V
+#getTimeToLiveSeconds()J
+#setTimeToLiveSeconds(J)V
+#isOverflowToDisk()Z
+#setOverflowToDisk(Z)V
+#isDiskPersistent()Z
+#setDiskPersistent(Z)V
+#getDiskExpiryThreadIntervalSeconds()J
+#setDiskExpiryThreadIntervalSeconds(J)V
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#isPinned()Z
+#getPinnedToStore()Ljava/lang/String;
+#getWriterQueueLength()J
+#getTransactionCommitRate()J
+#getTransactionRollbackRate()J
+#getCacheSearchRate()J
+#getCacheAverageSearchTime()J
+#getCacheHitRate()J
+#getCacheInMemoryHitRate()J
+#getCacheOffHeapHitRate()J
+#getCacheOnDiskHitRate()J
+#getCacheMissRate()J
+#getCacheInMemoryMissRate()J
+#getCacheOffHeapMissRate()J
+#getCacheOnDiskMissRate()J
+#getCachePutRate()J
+#getCacheUpdateRate()J
+#getCacheRemoveRate()J
+#getCacheEvictionRate()J
+#getCacheExpirationRate()J
+#getCacheAverageGetTime()F
-#getConfigMaxElementsInMemory()I
-#setConfigMaxElementsInMemory(I)V
-#getConfigMaxElementsOnDisk()I
-#setConfigMaxElementsOnDisk(I)V
-#getConfigMemoryStoreEvictionPolicy()Ljava/lang/String;
-#setConfigMemoryStoreEvictionPolicy(Ljava/lang/String;)V
-#isConfigEternal()Z
-#setConfigEternal(Z)V
-#getConfigTimeToIdleSeconds()J
-#setConfigTimeToIdleSeconds(J)V
-#getConfigTimeToLiveSeconds()J
-#setConfigTimeToLiveSeconds(J)V
-#isConfigOverflowToDisk()Z
-#setConfigOverflowToDisk(Z)V
-#isConfigDiskPersistent()Z
-#setConfigDiskPersistent(Z)V
-#getConfigDiskExpiryThreadIntervalSeconds()J
-#setConfigDiskExpiryThreadIntervalSeconds(J)V
-#isConfigLoggingEnabled()Z
-#setConfigLoggingEnabled(Z)V
@2.6.0
*#setMaxElementsInMemory(I)V[deprecated]
-#isEnabled()Z
-#setNodeBulkLoadEnabled(Z)V
-#isClusterBulkLoadEnabled()Z
-#isNodeBulkLoadEnabled()Z
-#setEnabled(Z)V
-#removeAll()V
-#flush()V
-#getStatus()Ljava/lang/String;
-#isTerracottaClustered()Z
-#getTerracottaConsistency()Ljava/lang/String;
-#getTerracottaStorageStrategy()Ljava/lang/String;
-#clearStatistics()V
-#enableStatistics()V
-#disableStatistics()V
-#setStatisticsEnabled(Z)V
-#enableSampledStatistics()V
-#disableSampledStatistics()V
-#getMaxEntriesLocalHeap()J
-#setMaxEntriesLocalHeap(J)V
-#getMaxBytesLocalHeap()J
-#setMaxBytesLocalHeap(J)V
-#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
-#getMaxBytesLocalHeapAsString()Ljava/lang/String;
-#getMaxBytesLocalOffHeap()J
-#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
-#getMaxEntriesLocalDisk()J
-#setMaxEntriesLocalDisk(J)V
-#getMaxElementsOnDisk()I[deprecated]
-#setMaxElementsOnDisk(I)V
-#getMaxBytesLocalDisk()J
-#setMaxBytesLocalDisk(J)V
-#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
-#getMaxBytesLocalDiskAsString()Ljava/lang/String;
-#getMemoryStoreEvictionPolicy()Ljava/lang/String;
-#setMemoryStoreEvictionPolicy(Ljava/lang/String;)V
-#isEternal()Z
-#setEternal(Z)V
-#getTimeToIdleSeconds()J
-#setTimeToIdleSeconds(J)V
-#getTimeToLiveSeconds()J
-#setTimeToLiveSeconds(J)V
-#isOverflowToDisk()Z
-#setOverflowToDisk(Z)V
-#isDiskPersistent()Z
-#setDiskPersistent(Z)V
-#getDiskExpiryThreadIntervalSeconds()J
-#setDiskExpiryThreadIntervalSeconds(J)V
-#isLoggingEnabled()Z
-#setLoggingEnabled(Z)V
-#isPinned()Z
-#getPinnedToStore()Ljava/lang/String;
-#getHasWriteBehindWriter()Z
-#getWriterQueueLength()J
-#getWriterMaxQueueSize()I
-#getWriterConcurrency()I
-#getTransactional()Z
-#getTransactionCommitRate()J
-#getTransactionRollbackRate()J
-#getSearchable()Z
-#getCacheSearchRate()J
-#getCacheAverageSearchTime()J
-#getCacheHitRate()J
-#getCacheInMemoryHitRate()J
-#getCacheOffHeapHitRate()J
-#getCacheOnDiskHitRate()J
-#getCacheMissRate()J
-#getCacheInMemoryMissRate()J
-#getCacheOffHeapMissRate()J
-#getCacheOnDiskMissRate()J
-#getCachePutRate()J
-#getCacheUpdateRate()J
-#getCacheRemoveRate()J
-#getCacheEvictionRate()J
-#getCacheExpirationRate()J
-#getCacheAverageGetTime()F

+###net/sf/ehcache/management/sampled/SampledCacheManager
@1.7.0-beta
+#<init>(Lnet/sf/ehcache/CacheManager;)V
+#clearAll()V
+#getCacheNames()[Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#shutdown()V
+#getCacheMetrics()Ljava/util/Map;
+#getCacheHitRate()J
+#getCacheMissRate()J
+#getCachePutRate()J
+#getCacheUpdateRate()J
+#getCacheEvictionRate()J
+#getCacheExpirationRate()J
+#getName()Ljava/lang/String;
+#getMBeanRegisteredName()Ljava/lang/String;
@2.0.0-beta
+#clearStatistics()V
+#enableStatistics()V
+#disableStatistics()V
+#setStatisticsEnabled(Z)V
+#isStatisticsEnabled()Z
+#generateActiveConfigDeclaration()Ljava/lang/String;
+#generateActiveConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#isEnabled()Z
+#setEnabled(Z)V
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
@2.4.0
+#getCacheSearchRate()J
+#getCacheAverageSearchTime()J
+#getHasWriteBehindWriter()Z
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I
+#getTransactional()Z
+#getSearchable()Z
+#getTransactionCommittedCount()J
+#getTransactionCommitRate()J
+#getTransactionRolledBackCount()J
+#getTransactionRollbackRate()J
+#getTransactionTimedOutCount()J
@2.5.0
+#getCacheInMemoryHitRate()J
+#getCacheOffHeapHitRate()J
+#getCacheOnDiskHitRate()J
+#getCacheInMemoryMissRate()J
+#getCacheOffHeapMissRate()J
+#getCacheOnDiskMissRate()J
+#getCacheRemoveRate()J
+#getCacheAverageGetTime()F
+#getMaxBytesLocalDisk()J
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#setMaxBytesLocalDisk(J)V
+#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
+#getMaxBytesLocalHeap()J
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#setMaxBytesLocalHeap(J)V
+#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
+#getCacheManagerAttributes()Ljava/util/Map;
@2.6.0
+#getClusterUUID()Ljava/lang/String;
-#getCacheManagerAttributes()Ljava/util/Map;

+###net/sf/ehcache/management/sampled/SampledCacheManagerMBean
@1.7.0-beta
+#getName()Ljava/lang/String;
+#getMBeanRegisteredName()Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#shutdown()V
+#clearAll()V
+#getCacheNames()[Ljava/lang/String;
+#getCacheMetrics()Ljava/util/Map;
+#getCacheHitRate()J
+#getCacheMissRate()J
+#getCachePutRate()J
+#getCacheUpdateRate()J
+#getCacheEvictionRate()J
+#getCacheExpirationRate()J
@2.0.0-beta
+#setEnabled(Z)V
+#isEnabled()Z
+#clearStatistics()V
+#enableStatistics()V
+#disableStatistics()V
+#setStatisticsEnabled(Z)V
+#isStatisticsEnabled()Z
+#generateActiveConfigDeclaration()Ljava/lang/String;
+#generateActiveConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
@2.4.0
+#getSearchable()Z
+#getCacheSearchRate()J
+#getCacheAverageSearchTime()J
+#getTransactional()Z
+#getTransactionCommittedCount()J
+#getTransactionCommitRate()J
+#getTransactionRolledBackCount()J
+#getTransactionRollbackRate()J
+#getTransactionTimedOutCount()J
+#getHasWriteBehindWriter()Z
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I
@2.5.0
+#getCacheInMemoryHitRate()J
+#getCacheOffHeapHitRate()J
+#getCacheOnDiskHitRate()J
+#getCacheInMemoryMissRate()J
+#getCacheOffHeapMissRate()J
+#getCacheOnDiskMissRate()J
+#getCacheRemoveRate()J
+#getCacheAverageGetTime()F
+#getMaxBytesLocalDisk()J
+#setMaxBytesLocalDisk(J)V
+#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#getMaxBytesLocalHeap()J
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#setMaxBytesLocalHeap(J)V
+#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
@2.6.0
-#getName()Ljava/lang/String;
-#getStatus()Ljava/lang/String;
-#setEnabled(Z)V
-#isEnabled()Z
-#shutdown()V
-#clearAll()V
-#getCacheNames()[Ljava/lang/String;
-#getCacheMetrics()Ljava/util/Map;
-#getCacheHitRate()J
-#getCacheInMemoryHitRate()J
-#getCacheOffHeapHitRate()J
-#getCacheOnDiskHitRate()J
-#getCacheMissRate()J
-#getCacheInMemoryMissRate()J
-#getCacheOffHeapMissRate()J
-#getCacheOnDiskMissRate()J
-#getCachePutRate()J
-#getCacheUpdateRate()J
-#getCacheRemoveRate()J
-#getCacheEvictionRate()J
-#getCacheExpirationRate()J
-#getCacheAverageGetTime()F
-#getSearchable()Z
-#getCacheSearchRate()J
-#getCacheAverageSearchTime()J
-#clearStatistics()V
-#enableStatistics()V
-#disableStatistics()V
-#setStatisticsEnabled(Z)V
-#isStatisticsEnabled()Z
-#generateActiveConfigDeclaration()Ljava/lang/String;
-#generateActiveConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
-#getTransactional()Z
-#getTransactionCommittedCount()J
-#getTransactionCommitRate()J
-#getTransactionRolledBackCount()J
-#getTransactionRollbackRate()J
-#getTransactionTimedOutCount()J
-#getHasWriteBehindWriter()Z
-#getWriterQueueLength()J
-#getWriterMaxQueueSize()I
-#getMaxBytesLocalDisk()J
-#setMaxBytesLocalDisk(J)V
-#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
-#getMaxBytesLocalDiskAsString()Ljava/lang/String;
-#getMaxBytesLocalHeap()J
-#getMaxBytesLocalHeapAsString()Ljava/lang/String;
-#setMaxBytesLocalHeap(J)V
-#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
-#getMaxBytesLocalOffHeap()J
-#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;

+###net/sf/ehcache/management/sampled/SampledCache
@1.7.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#flush()V
+#getCacheName()Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#removeAll()V
+#getAverageGetTimeMostRecentSample()J
+#getCacheElementEvictedMostRecentSample()J
+#getCacheElementExpiredMostRecentSample()J
+#getCacheElementPutMostRecentSample()J
+#getCacheElementRemovedMostRecentSample()J
+#getCacheElementUpdatedMostRecentSample()J
+#getCacheHitInMemoryMostRecentSample()J
+#getCacheHitMostRecentSample()J
+#getCacheHitOnDiskMostRecentSample()J
+#getCacheMissExpiredMostRecentSample()J
+#getCacheMissMostRecentSample()J
+#getCacheMissNotFoundMostRecentSample()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#clearStatistics()V
+#isStatisticsEnabled()Z
+#isSampledStatisticsEnabled()Z
+#isTerracottaClustered()Z
+#enableStatistics()V
+#disableStatistics()V
+#enableSampledStatistics()V
+#disableSampledStatistics()V
+#getAverageGetTimeMillis()F
+#getCacheHitCount()J
+#getCacheMissCount()J
+#getCacheMissCountExpired()J
+#getConfigDiskExpiryThreadIntervalSeconds()J
+#getConfigMaxElementsInMemory()I
+#getConfigMaxElementsOnDisk()I
+#getConfigMemoryStoreEvictionPolicy()Ljava/lang/String;
+#getConfigTimeToIdleSeconds()J
+#getConfigTimeToLiveSeconds()J
+#getEvictedCount()J
+#getExpiredCount()J
+#getInMemoryHitCount()J
+#getInMemorySize()J
+#getOnDiskHitCount()J
+#getOnDiskSize()J
+#getPutCount()J
+#getRemovedCount()J
+#getSize()J
+#getUpdateCount()J
+#isConfigDiskPersistent()Z
+#isConfigEternal()Z
+#isConfigOverflowToDisk()Z
+#dispose()V
@2.0.0-beta
+#isEnabled()Z
+#setEnabled(Z)V
+#isCoherent()Z
+#setCoherent(Z)V
+#getMaxGetTimeMillis()J
+#getMinGetTimeMillis()J
+#setConfigDiskExpiryThreadIntervalSeconds(J)V
+#setConfigMaxElementsInMemory(I)V
+#setConfigMaxElementsOnDisk(I)V
+#setConfigMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#setConfigTimeToIdleSeconds(J)V
+#setConfigTimeToLiveSeconds(J)V
+#setConfigDiskPersistent(Z)V
+#setConfigEternal(Z)V
+#setConfigOverflowToDisk(Z)V
+#isConfigLoggingEnabled()Z
+#setConfigLoggingEnabled(Z)V
+#getCacheAttributes()Ljava/util/Map;
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
@2.0.0
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#diskCapacityChanged(II)V
+#loggingEnabledChanged(ZZ)V
+#memoryCapacityChanged(II)V
+#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#timeToIdleChanged(JJ)V
+#timeToLiveChanged(JJ)V
-#isCoherent()Z
-#setCoherent(Z)V
@2.1.0-beta
+#setStatisticsEnabled(Z)V
+#loggingChanged(ZZ)V
+#propertyChange(Ljava/beans/PropertyChangeEvent;)V
-#loggingEnabledChanged(ZZ)V
@2.3.0
+#getCacheHitOffHeapMostRecentSample()J
+#getCacheMissInMemoryMostRecentSample()J
+#getCacheMissOffHeapMostRecentSample()J
+#getCacheMissOnDiskMostRecentSample()J
+#getInMemoryMissCount()J
+#getOffHeapMissCount()J
+#getOnDiskMissCount()J
+#getOffHeapHitCount()J
+#getOffHeapSize()J
@2.4.0
*#isClusterCoherent()Z[deprecated]
+#isClusterBulkLoadEnabled()Z
*#isNodeCoherent()Z[deprecated]
+#isNodeBulkLoadEnabled()Z
*#setNodeCoherent(Z)V[deprecated]
+#setNodeBulkLoadEnabled(Z)V
+#getTerracottaConsistency()Ljava/lang/String;
+#getXaCommitCount()J
+#getXaRollbackCount()J
+#getHasWriteBehindWriter()Z
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I
+#getWriterConcurrency()I
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#getTransactional()Z
+#getSearchable()Z
+#getCacheXaCommitsMostRecentSample()J
+#getCacheXaRollbacksMostRecentSample()J
-#dispose()V
@2.4.1
+#getTerracottaStorageStrategy()Ljava/lang/String;
@2.5.0
+#getCacheEvictionRate()J
+#getCacheExpirationRate()J
+#getCachePutRate()J
+#getCacheRemoveRate()J
+#getCacheUpdateRate()J
+#getCacheInMemoryHitRate()J
+#getCacheOffHeapHitRate()J
+#getCacheHitRate()J
+#getCacheOnDiskHitRate()J
+#getCacheMissRate()J
+#getCacheInMemoryMissRate()J
+#getCacheOffHeapMissRate()J
+#getCacheOnDiskMissRate()J
+#getCacheAverageGetTime()F
+#getDiskExpiryThreadIntervalSeconds()J
+#setDiskExpiryThreadIntervalSeconds(J)V
+#getMaxEntriesLocalHeap()J
+#setMaxEntriesLocalHeap(J)V
+#getMaxBytesLocalHeap()J
+#setMaxBytesLocalHeap(J)V
+#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#getMaxElementsInMemory()I
+#setMaxElementsInMemory(I)V
+#getMaxEntriesLocalDisk()J
+#setMaxEntriesLocalDisk(J)V
+#setMaxBytesLocalDisk(J)V
+#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#getMaxElementsOnDisk()I
+#setMaxElementsOnDisk(I)V
+#getMaxBytesLocalDisk()J
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
+#getMemoryStoreEvictionPolicy()Ljava/lang/String;
+#setMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#getTimeToIdleSeconds()J
+#setTimeToIdleSeconds(J)V
+#getTimeToLiveSeconds()J
+#setTimeToLiveSeconds(J)V
+#isDiskPersistent()Z
+#setDiskPersistent(Z)V
+#isEternal()Z
+#setEternal(Z)V
+#isOverflowToDisk()Z
+#setOverflowToDisk(Z)V
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#isPinned()Z
+#getPinnedToStore()Ljava/lang/String;
*#getInMemorySize()J[deprecated]
*#getOffHeapSize()J[deprecated]
*#getOnDiskSize()J[deprecated]
+#getLocalDiskSize()J
+#getLocalHeapSize()J
+#getLocalOffHeapSize()J
+#getLocalDiskSizeInBytes()J
+#getLocalHeapSizeInBytes()J
+#getLocalOffHeapSizeInBytes()J
+#maxBytesLocalHeapChanged(JJ)V
+#maxBytesLocalDiskChanged(JJ)V
+#getCacheSearchRate()J
+#getCacheAverageSearchTime()J
+#getTransactionCommitRate()J
+#getTransactionRollbackRate()J
-#getConfigDiskExpiryThreadIntervalSeconds()J
-#setConfigDiskExpiryThreadIntervalSeconds(J)V
-#getConfigMaxElementsInMemory()I
-#setConfigMaxElementsInMemory(I)V
-#getConfigMaxElementsOnDisk()I
-#setConfigMaxElementsOnDisk(I)V
-#getConfigMemoryStoreEvictionPolicy()Ljava/lang/String;
-#setConfigMemoryStoreEvictionPolicy(Ljava/lang/String;)V
-#getConfigTimeToIdleSeconds()J
-#setConfigTimeToIdleSeconds(J)V
-#getConfigTimeToLiveSeconds()J
-#setConfigTimeToLiveSeconds(J)V
-#isConfigDiskPersistent()Z
-#setConfigDiskPersistent(Z)V
-#isConfigEternal()Z
-#setConfigEternal(Z)V
-#isConfigOverflowToDisk()Z
-#setConfigOverflowToDisk(Z)V
-#isConfigLoggingEnabled()Z
-#setConfigLoggingEnabled(Z)V
@2.6.0
+#getAverageGetTimeNanosMostRecentSample()J
+#getCacheAverageGetTime()J
+#getAverageGetTimeNanos()J
+#getMaxGetTimeNanos()J
+#getMinGetTimeNanos()J
+#getXaRecoveredCount()J
+#getCacheHitRatio()I
+#getCacheHitRatioMostRecentSample()I
-#getTerracottaStorageStrategy()Ljava/lang/String;
-#getCacheAverageGetTime()F
-#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
-#maxBytesLocalHeapChanged(JJ)V
-#maxBytesLocalDiskChanged(JJ)V
-#diskCapacityChanged(II)V
-#loggingChanged(ZZ)V
-#memoryCapacityChanged(II)V
-#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
-#timeToIdleChanged(JJ)V
-#timeToLiveChanged(JJ)V

+###net/sf/ehcache/management/CacheConfiguration
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#getName()Ljava/lang/String;
+#getMaxElementsInMemory()I
+#getMaxElementsOnDisk()I
+#getMemoryStoreEvictionPolicy()Ljava/lang/String;
+#isEternal()Z
+#getTimeToIdleSeconds()J
+#getTimeToLiveSeconds()J
+#isOverflowToDisk()Z
+#isDiskPersistent()Z
+#getDiskSpoolBufferSizeMB()I
+#getDiskExpiryThreadIntervalSeconds()J
@1.7.0-beta
+#isTerracottaClustered()Z
@2.0.0-beta
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#setMaxElementsInMemory(I)V
+#setMaxElementsOnDisk(I)V
+#setMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#setEternal(Z)V
+#setTimeToIdleSeconds(J)V
+#setTimeToLiveSeconds(J)V
+#setOverflowToDisk(Z)V
+#setDiskPersistent(Z)V
+#setDiskSpoolBufferSizeMB(I)V
+#setDiskExpiryThreadIntervalSeconds(J)V
@2.3.0
+#isOverflowToOffHeap()Z
+#getMaxMemoryOffHeapInBytes()J
@2.4.0
+#getTerracottaConsistency()Ljava/lang/String;
@2.5.0
*#getMaxElementsInMemory()I[deprecated]
*#setMaxElementsInMemory(I)V[deprecated]
*#getMaxElementsOnDisk()I[deprecated]
*#setMaxElementsOnDisk(I)V[deprecated]
*#getMaxMemoryOffHeapInBytes()J[deprecated]
+#getMaxEntriesLocalDisk()J
+#getMaxEntriesLocalHeap()J
+#setMaxEntriesLocalDisk(J)V
+#setMaxEntriesLocalHeap(J)V
+#getMaxBytesLocalDisk()J
+#getMaxBytesLocalHeap()J
+#getMaxBytesLocalOffHeap()J

+###net/sf/ehcache/management/Cache
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#removeAll()V
+#flush()V
+#getStatus()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getCacheConfiguration()Lnet/sf/ehcache/management/CacheConfiguration;
+#getStatistics()Lnet/sf/ehcache/management/CacheStatistics;
@1.7.0-beta
+#isTerracottaClustered()Z
@2.5.0
+#hasAbortedSizeOf()Z

+###net/sf/ehcache/management/CacheManager
@1.6.2
+#<init>(Lnet/sf/ehcache/CacheManager;)V
+#getStatus()Ljava/lang/String;
+#shutdown()V
+#clearAll()V
+#getCache(Ljava/lang/String;)Lnet/sf/ehcache/management/Cache;
+#getCacheNames()[Ljava/lang/String;
+#getCaches()Ljava/util/List;
@1.7.0-beta
+#getName()Ljava/lang/String;
@2.4.0
+#getTransactionCommittedCount()J
+#getTransactionRolledBackCount()J
+#getTransactionTimedOutCount()J

+###net/sf/ehcache/management/CacheStatisticsMBean
@1.6.2
+#clearStatistics()V
+#getCacheHits()J
+#getInMemoryHits()J
+#getOnDiskHits()J
+#getCacheMisses()J
+#getObjectCount()J
+#getMemoryStoreObjectCount()J
+#getDiskStoreObjectCount()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#getAssociatedCacheName()Ljava/lang/String;
@2.3.0
+#getOffHeapHits()J
@2.4.0
+#getInMemoryMisses()J
+#getOffHeapMisses()J
+#getOnDiskMisses()J
+#getOffHeapStoreObjectCount()J
+#getCacheHitPercentage()D
+#getCacheMissPercentage()D
+#getInMemoryHitPercentage()D
+#getOffHeapHitPercentage()D
+#getOnDiskHitPercentage()D
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I

+###net/sf/ehcache/management/CacheManagerMBean
@1.6.2
+#getStatus()Ljava/lang/String;
+#shutdown()V
+#clearAll()V
+#getCache(Ljava/lang/String;)Lnet/sf/ehcache/management/Cache;
+#getCacheNames()[Ljava/lang/String;
+#getCaches()Ljava/util/List;
@1.7.0-beta
+#getName()Ljava/lang/String;
@2.4.0
+#getTransactionCommittedCount()J
+#getTransactionRolledBackCount()J
+#getTransactionTimedOutCount()J

+###net/sf/ehcache/management/provider/MBeanRegistrationProviderFactory
@1.7.0-beta
+#createMBeanRegistrationProvider(Lnet/sf/ehcache/config/Configuration;)Lnet/sf/ehcache/management/provider/MBeanRegistrationProvider;

+###net/sf/ehcache/management/provider/MBeanRegistrationProviderImpl
@1.7.1
+#<init>(Lnet/sf/ehcache/config/Configuration;)V
+#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/store/StoreFactory;)V
+#reinitialize()V
@2.0.0-beta
+#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
-#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/store/StoreFactory;)V
@2.1.0
+#reinitialize(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
-#reinitialize()V
@2.4.3
+#isInitialized()Z

+###net/sf/ehcache/management/provider/MBeanRegistrationProvider
@1.7.0-beta
+#initialize(Lnet/sf/ehcache/CacheManager;)V
+#reinitialize()V
@1.7.1
+#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/store/StoreFactory;)V
-#initialize(Lnet/sf/ehcache/CacheManager;)V
@2.0.0-beta
+#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
-#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/store/StoreFactory;)V
@2.1.0
+#reinitialize(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
-#reinitialize()V
@2.4.3
+#isInitialized()Z

+###net/sf/ehcache/management/provider/MBeanRegistrationProviderFactoryImpl
@1.7.0-beta
+#<init>()V
+#createMBeanRegistrationProvider(Lnet/sf/ehcache/config/Configuration;)Lnet/sf/ehcache/management/provider/MBeanRegistrationProvider;

+###net/sf/ehcache/management/provider/MBeanRegistrationProviderException
@1.7.0-beta
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###net/sf/ehcache/management/provider/NullMBeanRegistrationProvider
@1.7.0-beta
+#<init>()V
+#initialize(Lnet/sf/ehcache/CacheManager;)V
+#reinitialize()V
@1.7.1
+#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/store/StoreFactory;)V
-#initialize(Lnet/sf/ehcache/CacheManager;)V
@2.0.0-beta
+#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
-#initialize(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/store/StoreFactory;)V
@2.1.0
+#reinitialize(Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
-#reinitialize()V
@2.4.3
+#isInitialized()Z

+###net/sf/ehcache/management/CacheMBean
@1.6.2
+#removeAll()V
+#flush()V
+#getStatus()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getCacheConfiguration()Lnet/sf/ehcache/management/CacheConfiguration;
+#getStatistics()Lnet/sf/ehcache/management/CacheStatistics;
@1.7.0-beta
+#isTerracottaClustered()Z
@2.5.0
+#hasAbortedSizeOf()Z

+###net/sf/ehcache/management/ManagementService
@1.6.2
+#<init>(Lnet/sf/ehcache/CacheManager;Ljavax/management/MBeanServer;ZZZZ)V
+#registerMBeans(Lnet/sf/ehcache/CacheManager;Ljavax/management/MBeanServer;ZZZZ)V
+#init()V
+#getStatus()Lnet/sf/ehcache/Status;
+#dispose()V
+#notifyCacheAdded(Ljava/lang/String;)V
+#notifyCacheRemoved(Ljava/lang/String;)V
@2.3.0
+#<init>(Lnet/sf/ehcache/CacheManager;Ljavax/management/MBeanServer;ZZZZZ)V
+#registerMBeans(Lnet/sf/ehcache/CacheManager;Ljavax/management/MBeanServer;ZZZZZ)V
-#<init>(Lnet/sf/ehcache/CacheManager;Ljavax/management/MBeanServer;ZZZZ)V
-#registerMBeans(Lnet/sf/ehcache/CacheManager;Ljavax/management/MBeanServer;ZZZZ)V
@2.3.1
+#<init>(Lnet/sf/ehcache/CacheManager;Ljavax/management/MBeanServer;ZZZZ)V
+#registerMBeans(Lnet/sf/ehcache/CacheManager;Ljavax/management/MBeanServer;ZZZZ)V

+###net/sf/ehcache/MimeTypeByteArray
@1.6.2
+#<init>()V
+#<init>(Ljava/lang/String;[B)V
+#getMimeType()Ljava/lang/String;
+#setMimeType(Ljava/lang/String;)V
+#getValue()[B
+#setValue([B)V

+###net/sf/ehcache/ObjectExistsException
@1.6.2
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###net/sf/ehcache/Cache
@1.6.2
+#<init>(Ljava/lang/String;IZZJJ)V
+#<init>(Ljava/lang/String;IZZJJZJ)V
+#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;)V
+#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
+#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;I)V
+#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;II)V
+#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;IIZ)V
+#initialise()V
+#bootstrap()V
+#put(Lnet/sf/ehcache/Element;)V
+#put(Lnet/sf/ehcache/Element;Z)V
+#putQuiet(Lnet/sf/ehcache/Element;)V
+#get(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getWithLoader(Ljava/lang/Object;Lnet/sf/ehcache/loader/CacheLoader;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#load(Ljava/lang/Object;)V
+#getAllWithLoader(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Map;
+#loadAll(Ljava/util/Collection;Ljava/lang/Object;)V
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#getKeysWithExpiryCheck()Ljava/util/List;
+#getKeysNoDuplicateCheck()Ljava/util/List;
+#remove(Ljava/io/Serializable;)Z
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/io/Serializable;Z)Z
+#remove(Ljava/lang/Object;Z)Z
+#removeQuiet(Ljava/io/Serializable;)Z
+#removeQuiet(Ljava/lang/Object;)Z
+#removeAll()V
+#removeAll(Z)V
+#dispose()V
+#getCacheConfiguration()Lnet/sf/ehcache/config/CacheConfiguration;
+#flush()V
+#getSize()I
+#calculateInMemorySize()J
+#getMemoryStoreSize()J
+#getDiskStoreSize()I
+#getStatus()Lnet/sf/ehcache/Status;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#isExpired(Lnet/sf/ehcache/Element;)Z
+#clone()Ljava/lang/Object;
+#getCacheEventNotificationService()Lnet/sf/ehcache/event/RegisteredEventListeners;
+#isElementInMemory(Ljava/io/Serializable;)Z
+#isElementInMemory(Ljava/lang/Object;)Z
+#isElementOnDisk(Ljava/io/Serializable;)Z
+#isElementOnDisk(Ljava/lang/Object;)Z
+#getGuid()Ljava/lang/String;
+#getCacheManager()Lnet/sf/ehcache/CacheManager;
+#clearStatistics()V
+#getStatisticsAccuracy()I
+#setStatisticsAccuracy(I)V
+#evictExpiredElements()V
+#isKeyInCache(Ljava/lang/Object;)Z
+#isValueInCache(Ljava/lang/Object;)Z
+#getStatistics()Lnet/sf/ehcache/Statistics;
+#setCacheManager(Lnet/sf/ehcache/CacheManager;)V
+#getBootstrapCacheLoader()Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
+#setBootstrapCacheLoader(Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
+#setDiskStorePath(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#registerCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#getRegisteredCacheExtensions()Ljava/util/List;
+#unregisterCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#getAverageGetTime()F
+#setCacheExceptionHandler(Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;)V
+#getCacheExceptionHandler()Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;
+#registerCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#unregisterCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#getRegisteredCacheLoaders()Ljava/util/List;
+#isDisabled()Z
+#setDisabled(Z)V
+#getMemoryStoreEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setMemoryStoreEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
@1.7.0-beta
+#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;IIZZLjava/lang/String;Z)V
+#getSizeBasedOnAccuracy(I)I
+#getLiveCacheStatistics()Lnet/sf/ehcache/statistics/LiveCacheStatistics;
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#getSampledCacheStatistics()Lnet/sf/ehcache/statistics/sampled/SampledCacheStatistics;
+#setSampledStatisticsEnabled(Z)V
+#isSampledStatisticsEnabled()Z
+#getInternalContext()Ljava/lang/Object;
@2.0.0-beta
*#<init>(Ljava/lang/String;IZZJJZJ)V[deprecated]
*#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;)V[deprecated]
*#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V[deprecated]
*#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;I)V[deprecated]
*#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;II)V[deprecated]
*#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;IIZ)V[deprecated]
*#<init>(Ljava/lang/String;ILnet/sf/ehcache/store/MemoryStoreEvictionPolicy;ZLjava/lang/String;ZJJZJLnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;IIZZLjava/lang/String;Z)V[deprecated]
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;Lnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
+#getTransactionManagerLookup()Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;
+#setTransactionManagerLookup(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
+#getWriterManager()Lnet/sf/ehcache/writer/CacheWriterManager;
+#isTerracottaClustered()Z
+#putWithWriter(Lnet/sf/ehcache/Element;)V
+#removeWithWriter(Ljava/lang/Object;)Z
+#clone()Lnet/sf/ehcache/Cache;
+#registerCacheWriter(Lnet/sf/ehcache/writer/CacheWriter;)V
+#unregisterCacheWriter()V
+#getRegisteredCacheWriter()Lnet/sf/ehcache/writer/CacheWriter;
+#disableDynamicFeatures()V
+#isCoherent()Z
+#setCoherent(Z)V
+#waitUntilCoherent()V
@2.0.0
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
-#isCoherent()Z
-#setCoherent(Z)V
-#waitUntilCoherent()V
@2.1.0-beta
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#firePropertyChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#clusterCoherent(Z)V
+#nodeCoherent(Z)V
@2.3.0
+#calculateOffHeapSize()J
+#getOffHeapStoreSize()J
+#getStoreMBean()Ljava/lang/Object;
+#isElementOffHeap(Ljava/lang/Object;)Z
@2.4.0
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
*#isClusterCoherent()Z[deprecated]
*#isNodeCoherent()Z[deprecated]
*#setNodeCoherent(Z)V[deprecated]
*#waitUntilClusterCoherent()V[deprecated]
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#createQuery()Lnet/sf/ehcache/search/Query;
+#isSearchable()Z
+#acquireReadLockOnKey(Ljava/lang/Object;)V
+#acquireWriteLockOnKey(Ljava/lang/Object;)V
+#tryReadLockOnKey(Ljava/lang/Object;J)Z
+#tryWriteLockOnKey(Ljava/lang/Object;J)Z
+#releaseReadLockOnKey(Ljava/lang/Object;)V
+#releaseWriteLockOnKey(Ljava/lang/Object;)V
+#isClusterBulkLoadEnabled()Z
+#isNodeBulkLoadEnabled()Z
+#setNodeBulkLoadEnabled(Z)V
+#waitUntilClusterBulkLoadComplete()V
@2.4.1
+#isReadLockedByCurrentThread(Ljava/lang/Object;)Z
+#isWriteLockedByCurrentThread(Ljava/lang/Object;)Z
-#nodeCoherent(Z)V
@2.5.0
+#putAll(Ljava/util/Collection;)V
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#removeAndReturnElement(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;Z)V
+#hasAbortedSizeOf()Z
+#calculateOnDiskSize()J
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#recalculateSize(Ljava/lang/Object;)V
@2.5.2
+#putIfAbsent(Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/Element;
@2.6.0
+#getCacheStatisticsSampler()Lnet/sf/ehcache/statistics/sampled/CacheStatisticsSampler;
-#setDiskStorePath(Ljava/lang/String;)V
@2.6.5
+#registerDynamicAttributesExtractor(Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V

+###net/sf/ehcache/config/CacheConfiguration$BootstrapCacheLoaderFactoryConfiguration
@1.6.2
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
@1.7.1
+#<init>()V
-#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V

+###net/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration
@2.0.0-beta
+#<init>()V
@2.2.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###net/sf/ehcache/config/CacheWriterConfiguration$WriteMode
@2.0.0-beta
+#values()[Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
+#createWriterManager(Lnet/sf/ehcache/Cache;)Lnet/sf/ehcache/writer/CacheWriterManager;

+###net/sf/ehcache/config/CacheConfiguration$CacheEventListenerFactoryConfiguration
@1.6.2
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
@1.7.1
+#<init>()V
-#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
@2.0.0
+#setListenFor(Ljava/lang/String;)V
+#listenFor(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration$CacheEventListenerFactoryConfiguration;
+#getListenFor()Lnet/sf/ehcache/event/NotificationScope;

+###net/sf/ehcache/config/Configuration$Monitoring
@1.7.0-beta
+#values()[Lnet/sf/ehcache/config/Configuration$Monitoring;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/Configuration$Monitoring;

+###net/sf/ehcache/config/CacheConfiguration$TransactionalMode
@2.0.0-beta
+#values()[Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
+#isTransactional()Z

+###net/sf/ehcache/config/CacheWriterConfiguration
@2.0.0-beta
+#<init>()V
+#clone()Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#setWriteMode(Ljava/lang/String;)V
+#writeMode(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#writeMode(Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getWriteMode()Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
+#setNotifyListenersOnException(Z)V
+#notifyListenersOnException(Z)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getNotifyListenersOnException()Z
+#setMinWriteDelay(I)V
+#minWriteDelay(I)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getMinWriteDelay()I
+#setMaxWriteDelay(I)V
+#maxWriteDelay(I)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getMaxWriteDelay()I
+#setRateLimitPerSecond(I)V
+#rateLimitPerSecond(I)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getRateLimitPerSecond()I
+#setWriteCoalescing(Z)V
+#writeCoalescing(Z)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getWriteCoalescing()Z
+#setWriteBatching(Z)V
+#writeBatching(Z)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getWriteBatching()Z
+#setWriteBatchSize(I)V
+#writeBatchSize(I)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getWriteBatchSize()I
+#setRetryAttempts(I)V
+#retryAttempts(I)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getRetryAttempts()I
+#setRetryAttemptDelaySeconds(I)V
+#retryAttemptDelaySeconds(I)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getRetryAttemptDelaySeconds()I
+#addCacheWriterFactory(Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;)V
+#cacheWriterFactory(Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getCacheWriterFactoryConfiguration()Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
+#clone()Ljava/lang/Object;
@2.2.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.4.0
+#setWriteBehindConcurrency(I)V
+#writeBehindConcurrency(I)Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getWriteBehindConcurrency()I
+#setWriteBehindMaxQueueSize(I)V
+#getWriteBehindMaxQueueSize()I
+#writeBehindMaxQueueSize(I)Lnet/sf/ehcache/config/CacheWriterConfiguration;
@2.6.3
+#validate(Ljava/util/Collection;)V

+###net/sf/ehcache/config/FactoryConfiguration
@1.6.2
+#<init>()V
+#setClass(Ljava/lang/String;)V
+#setProperties(Ljava/lang/String;)V
+#getFullyQualifiedClassPath()Ljava/lang/String;
+#getProperties()Ljava/lang/String;
+#getPropertySeparator()Ljava/lang/String;
+#setPropertySeparator(Ljava/lang/String;)V
@2.0.0-beta
+#clone()Lnet/sf/ehcache/config/FactoryConfiguration;
+#className(Ljava/lang/String;)Lnet/sf/ehcache/config/FactoryConfiguration;
+#properties(Ljava/lang/String;)Lnet/sf/ehcache/config/FactoryConfiguration;
+#propertySeparator(Ljava/lang/String;)Lnet/sf/ehcache/config/FactoryConfiguration;
+#clone()Ljava/lang/Object;
@2.2.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###net/sf/ehcache/config/CacheConfiguration$CacheExceptionHandlerFactoryConfiguration
@1.6.2
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
@1.7.1
+#<init>()V
-#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V

+###net/sf/ehcache/config/CacheConfigurationListener
@2.0.0-beta
+#timeToIdleChanged(JJ)V
+#timeToLiveChanged(JJ)V
+#diskCapacityChanged(II)V
+#memoryCapacityChanged(II)V
+#loggingEnabledChanged(ZZ)V
+#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
@2.1.0-beta
+#loggingChanged(ZZ)V
-#loggingEnabledChanged(ZZ)V
@2.5.0
+#maxBytesLocalHeapChanged(JJ)V
+#maxBytesLocalDiskChanged(JJ)V

+###net/sf/ehcache/config/DiskStoreConfiguration
@1.6.2
+#<init>()V
+#getPath()Ljava/lang/String;
+#getDefaultPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#replaceToken(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@2.0.0-beta
+#getOriginalPath()Ljava/lang/String;
@2.2.0
+#path(Ljava/lang/String;)Lnet/sf/ehcache/config/DiskStoreConfiguration;
@2.5.0
-#replaceToken(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###net/sf/ehcache/config/CacheConfiguration
@1.6.2
+#<init>()V
+#clone()Lnet/sf/ehcache/config/CacheConfiguration;
+#setName(Ljava/lang/String;)V
+#setMaxElementsInMemory(I)V
+#setMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#setMemoryStoreEvictionPolicyFromObject(Lnet/sf/ehcache/store/MemoryStoreEvictionPolicy;)V
+#setClearOnFlush(Z)V
+#setEternal(Z)V
+#setTimeToIdleSeconds(J)V
+#setTimeToLiveSeconds(J)V
+#setOverflowToDisk(Z)V
+#setDiskPersistent(Z)V
+#getDiskSpoolBufferSizeMB()I
+#setDiskSpoolBufferSizeMB(I)V
+#setMaxElementsOnDisk(I)V
+#setDiskExpiryThreadIntervalSeconds(J)V
+#addCacheEventListenerFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheEventListenerFactoryConfiguration;)V
+#addCacheExtensionFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheExtensionFactoryConfiguration;)V
+#addBootstrapCacheLoaderFactory(Lnet/sf/ehcache/config/CacheConfiguration$BootstrapCacheLoaderFactoryConfiguration;)V
+#addCacheExceptionHandlerFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheExceptionHandlerFactoryConfiguration;)V
+#addCacheLoaderFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheLoaderFactoryConfiguration;)V
+#getName()Ljava/lang/String;
+#getMaxElementsInMemory()I
+#getMaxElementsOnDisk()I
+#getMemoryStoreEvictionPolicy()Lnet/sf/ehcache/store/MemoryStoreEvictionPolicy;
+#isClearOnFlush()Z
+#isEternal()Z
+#getTimeToIdleSeconds()J
+#getTimeToLiveSeconds()J
+#isOverflowToDisk()Z
+#isDiskPersistent()Z
+#getDiskExpiryThreadIntervalSeconds()J
+#getCacheEventListenerConfigurations()Ljava/util/List;
+#getCacheExtensionConfigurations()Ljava/util/List;
+#getCacheLoaderConfigurations()Ljava/util/List;
+#getBootstrapCacheLoaderFactoryConfiguration()Lnet/sf/ehcache/config/CacheConfiguration$BootstrapCacheLoaderFactoryConfiguration;
+#getCacheExceptionHandlerFactoryConfiguration()Lnet/sf/ehcache/config/CacheConfiguration$CacheExceptionHandlerFactoryConfiguration;
+#clone()Ljava/lang/Object;
@1.7.0-beta
+#addTerracotta(Lnet/sf/ehcache/config/TerracottaConfiguration;)V
+#getTerracottaConfiguration()Lnet/sf/ehcache/config/TerracottaConfiguration;
+#isTerracottaClustered()Z
@2.0.0-beta
+#<init>(Ljava/lang/String;I)V
+#name(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration;
+#setLoggingEnabled(Z)V
+#loggingEnabled(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#maxElementsInMemory(I)Lnet/sf/ehcache/config/CacheConfiguration;
+#memoryStoreEvictionPolicy(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration;
+#memoryStoreEvictionPolicy(Lnet/sf/ehcache/store/MemoryStoreEvictionPolicy;)Lnet/sf/ehcache/config/CacheConfiguration;
+#clearOnFlush(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#eternal(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#timeToIdleSeconds(J)Lnet/sf/ehcache/config/CacheConfiguration;
+#timeToLiveSeconds(J)Lnet/sf/ehcache/config/CacheConfiguration;
+#overflowToDisk(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#diskPersistent(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#setDiskStorePath(Ljava/lang/String;)V
+#diskStorePath(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration;
+#diskSpoolBufferSizeMB(I)Lnet/sf/ehcache/config/CacheConfiguration;
+#maxElementsOnDisk(I)Lnet/sf/ehcache/config/CacheConfiguration;
+#diskExpiryThreadIntervalSeconds(J)Lnet/sf/ehcache/config/CacheConfiguration;
+#freezeConfiguration()V
+#cacheEventListenerFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheEventListenerFactoryConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
+#cacheExtensionFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheExtensionFactoryConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
+#bootstrapCacheLoaderFactory(Lnet/sf/ehcache/config/CacheConfiguration$BootstrapCacheLoaderFactoryConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
+#cacheExceptionHandlerFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheExceptionHandlerFactoryConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
+#cacheLoaderFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheLoaderFactoryConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
+#terracotta(Lnet/sf/ehcache/config/TerracottaConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
+#addCacheWriter(Lnet/sf/ehcache/config/CacheWriterConfiguration;)V
+#cacheWriter(Lnet/sf/ehcache/config/CacheWriterConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
+#setTransactionalMode(Ljava/lang/String;)V
+#transactionalMode(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration;
+#transactionalMode(Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;)Lnet/sf/ehcache/config/CacheConfiguration;
+#getDiskStorePath()Ljava/lang/String;
+#isLoggingEnabled()Z
+#getCacheWriterConfiguration()Lnet/sf/ehcache/config/CacheWriterConfiguration;
+#getTransactionalMode()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
+#isTransactional()Z
+#addConfigurationListener(Lnet/sf/ehcache/config/CacheConfigurationListener;)Z
+#removeConfigurationListener(Lnet/sf/ehcache/config/CacheConfigurationListener;)Z
+#internalSetTimeToIdle(J)V
+#internalSetTimeToLive(J)V
+#internalSetMemCapacity(I)V
+#internalSetDiskCapacity(I)V
+#internalSetCoherent(Z)V
-#<init>()V
@2.0.0
+#setDiskAccessStripes(I)V
+#diskAccessStripes(I)Lnet/sf/ehcache/config/CacheConfiguration;
+#isFrozen()Z
+#setStatistics(Z)V
+#statistics(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#getStatistics()Z
+#getDiskAccessStripes()I
@2.1.0-beta
+#<init>()V
+#setLogging(Z)V
+#logging(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#getCopyStrategy()Lnet/sf/ehcache/store/compound/CopyStrategy;
+#copyOnRead(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#isCopyOnRead()Z
+#setCopyOnRead(Z)V
+#copyOnWrite(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#isCopyOnWrite()Z
+#setCopyOnWrite(Z)V
+#addCopyStrategy(Lnet/sf/ehcache/config/CopyStrategyConfiguration;)V
+#getLogging()Z
+#internalSetLogging(Z)V
-#setLoggingEnabled(Z)V
-#loggingEnabled(Z)Lnet/sf/ehcache/config/CacheConfiguration;
-#isLoggingEnabled()Z
@2.1.0
+#getDefaultTransactionManager()Ljava/lang/Object;
+#setDefaultTransactionManager(Ljava/lang/Object;)V
+#addCacheDecoratorFactory(Lnet/sf/ehcache/config/CacheConfiguration$CacheDecoratorFactoryConfiguration;)V
+#getCacheDecoratorConfigurations()Ljava/util/List;
@2.2.0
+#getCopyStrategyConfiguration()Lnet/sf/ehcache/config/CopyStrategyConfiguration;
@2.3.0
+#setOverflowToOffHeap(Z)V
+#overflowToOffHeap(Z)Lnet/sf/ehcache/config/CacheConfiguration;
+#setMaxMemoryOffHeap(Ljava/lang/String;)V
+#maxMemoryOffHeap(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration;
+#setCacheLoaderTimeoutMillis(J)V
+#timeoutMillis(J)Lnet/sf/ehcache/config/CacheConfiguration;
+#validateCompleteConfiguration()V
+#validateConfiguration()V
+#getCacheLoaderTimeoutMillis()J
+#isOverflowToOffHeap()Z
+#getMaxMemoryOffHeap()Ljava/lang/String;
+#getMaxMemoryOffHeapInBytes()J
@2.4.0
+#getCopyStrategy()Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
+#addElementValueComparator(Lnet/sf/ehcache/config/ElementValueComparatorConfiguration;)V
+#addSearchable(Lnet/sf/ehcache/config/Searchable;)V
+#getElementValueComparatorConfiguration()Lnet/sf/ehcache/config/ElementValueComparatorConfiguration;
+#searchable(Lnet/sf/ehcache/config/Searchable;)Lnet/sf/ehcache/config/CacheConfiguration;
+#isSearchable()Z
+#getTerracottaConsistency()Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
+#isXaStrictTransactional()Z
+#isLocalTransactional()Z
+#isXaTransactional()Z
+#getSearchAttributes()Ljava/util/Map;
+#getSearchable()Lnet/sf/ehcache/config/Searchable;
-#getCopyStrategy()Lnet/sf/ehcache/store/compound/CopyStrategy;
-#getDefaultTransactionManager()Ljava/lang/Object;
-#setDefaultTransactionManager(Ljava/lang/Object;)V
-#isTransactional()Z
-#internalSetCoherent(Z)V
@2.4.1
+#getTerracottaStorageStrategy()Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;
@2.5.0
+#addSizeOfPolicy(Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;)V
+#sizeOfPolicy(Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
*#setMaxElementsInMemory(I)V[deprecated]
+#setMaxEntriesLocalHeap(J)V
*#maxElementsInMemory(I)Lnet/sf/ehcache/config/CacheConfiguration;[deprecated]
+#maxEntriesLocalHeap(I)Lnet/sf/ehcache/config/CacheConfiguration;
+#setMaxEntriesLocalDisk(J)V
+#maxEntriesLocalDisk(I)Lnet/sf/ehcache/config/CacheConfiguration;
+#getMaxBytesLocalHeap()J
+#setMaxBytesLocalHeap(Ljava/lang/String;)V
+#setMaxBytesLocalHeap(Ljava/lang/Long;)V
+#maxBytesLocalHeap(JLnet/sf/ehcache/config/MemoryUnit;)Lnet/sf/ehcache/config/CacheConfiguration;
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
+#setMaxBytesLocalOffHeap(Ljava/lang/String;)V
+#getMaxBytesLocalOffHeapPercentage()Ljava/lang/Integer;
+#getMaxBytesLocalHeapPercentage()Ljava/lang/Integer;
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#getMaxBytesLocalDiskPercentage()Ljava/lang/Integer;
+#setMaxBytesLocalOffHeap(Ljava/lang/Long;)V
+#maxBytesLocalOffHeap(JLnet/sf/ehcache/config/MemoryUnit;)Lnet/sf/ehcache/config/CacheConfiguration;
+#getMaxBytesLocalDisk()J
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#setMaxBytesLocalDisk(Ljava/lang/String;)V
+#setMaxBytesLocalDisk(Ljava/lang/Long;)V
+#maxBytesLocalDisk(JLnet/sf/ehcache/config/MemoryUnit;)Lnet/sf/ehcache/config/CacheConfiguration;
+#isMaxBytesLocalHeapPercentageSet()Z
+#isMaxBytesLocalOffHeapPercentageSet()Z
+#isMaxBytesLocalDiskPercentageSet()Z
+#setupFor(Lnet/sf/ehcache/CacheManager;)V
+#setupFor(Lnet/sf/ehcache/CacheManager;Z)V
+#validate(Lnet/sf/ehcache/config/Configuration;)Ljava/util/Collection;
+#isCountBasedTuned()Z
+#isOverflowToOffHeapSet()Z
+#addPinning(Lnet/sf/ehcache/config/PinningConfiguration;)V
+#pinning(Lnet/sf/ehcache/config/PinningConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
*#getMaxElementsInMemory()I[deprecated]
+#getMaxEntriesLocalDisk()J
+#getMaxEntriesLocalHeap()J
+#getSizeOfPolicyConfiguration()Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
+#getPinningConfiguration()Lnet/sf/ehcache/config/PinningConfiguration;
+#internalSetMemCapacityInBytes(J)V
@2.6.0
+#addPersistence(Lnet/sf/ehcache/config/PersistenceConfiguration;)V
+#persistence(Lnet/sf/ehcache/config/PersistenceConfiguration;)Lnet/sf/ehcache/config/CacheConfiguration;
*#setOverflowToDisk(Z)V[deprecated]
*#overflowToDisk(Z)Lnet/sf/ehcache/config/CacheConfiguration;[deprecated]
*#setDiskPersistent(Z)V[deprecated]
*#diskPersistent(Z)Lnet/sf/ehcache/config/CacheConfiguration;[deprecated]
*#isOverflowToDisk()Z[deprecated]
*#isDiskPersistent()Z[deprecated]
+#getPersistenceConfiguration()Lnet/sf/ehcache/config/PersistenceConfiguration;
-#setDiskStorePath(Ljava/lang/String;)V
-#diskStorePath(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration;
-#getDiskStorePath()Ljava/lang/String;
-#getTerracottaStorageStrategy()Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;
@2.6.2
*#setMaxMemoryOffHeap(Ljava/lang/String;)V[deprecated]
*#maxMemoryOffHeap(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration;[deprecated]
*#getMaxMemoryOffHeap()Ljava/lang/String;[deprecated]
*#getMaxMemoryOffHeapInBytes()J[deprecated]
@2.6.5
+#setDynamicAttributesExtractor(Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V
+#dynamicAttributeExtractor(Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)Lnet/sf/ehcache/config/CacheConfiguration;
+#getDynamicExtractor()Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;
+#addDynamicSearchListener(Lnet/sf/ehcache/config/DynamicSearchListener;)Z

+###net/sf/ehcache/config/InvalidConfigurationException
@1.7.0-beta
+#<init>(Ljava/lang/String;)V
@2.5.0
+#<init>(Ljava/util/Collection;)V
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V

+###net/sf/ehcache/config/TerracottaConfiguration$ValueMode
@1.7.0-beta
+#values()[Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;

+###net/sf/ehcache/config/generator/ConfigurationSource
@2.0.0-beta
+#getConfigurationSource(Ljava/io/File;)Lnet/sf/ehcache/config/generator/ConfigurationSource;
+#getConfigurationSource(Ljava/net/URL;)Lnet/sf/ehcache/config/generator/ConfigurationSource;
+#getConfigurationSource(Ljava/io/InputStream;)Lnet/sf/ehcache/config/generator/ConfigurationSource;
+#getConfigurationSource()Lnet/sf/ehcache/config/generator/ConfigurationSource;
+#createConfiguration()Lnet/sf/ehcache/config/Configuration;

+###net/sf/ehcache/config/generator/ConfigurationGenerator
@2.0.0-beta
+#<init>()V
+#generate(Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/config/CacheConfiguration;Ljava/util/Map;)Ljava/lang/String;
+#generate(Lnet/sf/ehcache/config/CacheConfiguration;)Ljava/lang/String;
@2.4.0
*#generate(Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/config/CacheConfiguration;Ljava/util/Map;)Ljava/lang/String;[deprecated]
*#generate(Lnet/sf/ehcache/config/CacheConfiguration;)Ljava/lang/String;[deprecated]
@2.5.0
+#generate(Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/config/CacheConfiguration;)Ljava/lang/String;[deprecated]
-#generate(Lnet/sf/ehcache/config/CacheConfiguration;)Ljava/lang/String;[deprecated]

+###net/sf/ehcache/config/generator/ConfigurationUtil
@2.0.0-beta
+#<init>()V
+#generateConfigurationTextFromSource(Lnet/sf/ehcache/config/generator/ConfigurationSource;)Ljava/lang/String;
+#generateConfigurationTextFromConfiguration(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/config/Configuration;)Ljava/lang/String;
+#generateConfigurationTextForCacheFromSource(Lnet/sf/ehcache/config/generator/ConfigurationSource;Ljava/lang/String;)Ljava/lang/String;
+#generateConfigurationTextForCache(Lnet/sf/ehcache/CacheManager;Ljava/lang/String;)Ljava/lang/String;
@2.2.0
+#generateCacheManagerConfigurationText(Lnet/sf/ehcache/config/Configuration;)Ljava/lang/String;
+#generateCacheConfigurationText(Lnet/sf/ehcache/config/CacheConfiguration;)Ljava/lang/String;
-#generateConfigurationTextFromSource(Lnet/sf/ehcache/config/generator/ConfigurationSource;)Ljava/lang/String;
-#generateConfigurationTextFromConfiguration(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/config/Configuration;)Ljava/lang/String;
-#generateConfigurationTextForCacheFromSource(Lnet/sf/ehcache/config/generator/ConfigurationSource;Ljava/lang/String;)Ljava/lang/String;
-#generateConfigurationTextForCache(Lnet/sf/ehcache/CacheManager;Ljava/lang/String;)Ljava/lang/String;
@2.5.0
+#generateCacheManagerConfigurationText(Lnet/sf/ehcache/CacheManager;)Ljava/lang/String;
+#generateCacheConfigurationText(Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/config/CacheConfiguration;)Ljava/lang/String;
-#generateCacheConfigurationText(Lnet/sf/ehcache/config/CacheConfiguration;)Ljava/lang/String;

+###net/sf/ehcache/config/CacheConfiguration$CacheLoaderFactoryConfiguration
@1.6.2
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
@1.7.1
+#<init>()V
-#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V

+###net/sf/ehcache/config/Configuration
@1.6.2
+#<init>()V
+#addDiskStore(Lnet/sf/ehcache/config/DiskStoreConfiguration;)V
+#addCacheManagerEventListenerFactory(Lnet/sf/ehcache/config/FactoryConfiguration;)V
+#addCacheManagerPeerProviderFactory(Lnet/sf/ehcache/config/FactoryConfiguration;)V
+#addCacheManagerPeerListenerFactory(Lnet/sf/ehcache/config/FactoryConfiguration;)V
+#addDefaultCache(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#addCache(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#getCacheConfigurationsKeySet()Ljava/util/Set;
+#getDefaultCacheConfiguration()Lnet/sf/ehcache/config/CacheConfiguration;
+#setDefaultCacheConfiguration(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#getDiskStoreConfiguration()Lnet/sf/ehcache/config/DiskStoreConfiguration;
+#getCacheManagerPeerProviderFactoryConfiguration()Ljava/util/List;
+#getCacheManagerPeerListenerFactoryConfigurations()Ljava/util/List;
+#getCacheManagerEventListenerFactoryConfiguration()Lnet/sf/ehcache/config/FactoryConfiguration;
+#getCacheConfigurations()Ljava/util/Map;
+#setSource(Ljava/lang/String;)V
+#getConfigurationSource()Ljava/lang/String;
@1.7.0-beta
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setUpdateCheck(Z)V
+#getUpdateCheck()Z
+#setMonitoring(Ljava/lang/String;)V
+#getMonitoring()Lnet/sf/ehcache/config/Configuration$Monitoring;
+#addTerracottaConfig(Lnet/sf/ehcache/config/TerracottaConfigConfiguration;)V
+#getTerracottaConfiguration()Lnet/sf/ehcache/config/TerracottaConfigConfiguration;
@2.0.0-beta
+#setDynamicConfig(Z)V
+#getDynamicConfig()Z
+#addTransactionManagerLookup(Lnet/sf/ehcache/config/FactoryConfiguration;)V
+#getTransactionManagerLookupConfiguration()Lnet/sf/ehcache/config/FactoryConfiguration;
+#setSource(Lnet/sf/ehcache/config/generator/ConfigurationSource;)V
+#getConfigurationSource()Lnet/sf/ehcache/config/generator/ConfigurationSource;
-#setSource(Ljava/lang/String;)V
-#getConfigurationSource()Ljava/lang/String;
@2.1.0
+#setDefaultTransactionManager(Ljava/lang/Object;)V
+#getDefaultTransactionManager()Ljava/lang/Object;
@2.2.0
+#name(Ljava/lang/String;)Lnet/sf/ehcache/config/Configuration;
+#updateCheck(Z)Lnet/sf/ehcache/config/Configuration;
+#monitoring(Lnet/sf/ehcache/config/Configuration$Monitoring;)Lnet/sf/ehcache/config/Configuration;
+#dynamicConfig(Z)Lnet/sf/ehcache/config/Configuration;
+#diskStore(Lnet/sf/ehcache/config/DiskStoreConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#transactionManagerLookup(Lnet/sf/ehcache/config/FactoryConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#cacheManagerEventListenerFactory(Lnet/sf/ehcache/config/FactoryConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#cacheManagerPeerProviderFactory(Lnet/sf/ehcache/config/FactoryConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#cacheManagerPeerListenerFactory(Lnet/sf/ehcache/config/FactoryConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#terracotta(Lnet/sf/ehcache/config/TerracottaClientConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#addTerracottaConfig(Lnet/sf/ehcache/config/TerracottaClientConfiguration;)V
+#defaultCache(Lnet/sf/ehcache/config/CacheConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#cache(Lnet/sf/ehcache/config/CacheConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#getTerracottaConfiguration()Lnet/sf/ehcache/config/TerracottaClientConfiguration;
+#source(Lnet/sf/ehcache/config/generator/ConfigurationSource;)Lnet/sf/ehcache/config/Configuration;
+#defaultTransactionManager(Ljava/lang/Object;)Lnet/sf/ehcache/config/Configuration;
-#addTerracottaConfig(Lnet/sf/ehcache/config/TerracottaConfigConfiguration;)V
-#getTerracottaConfiguration()Lnet/sf/ehcache/config/TerracottaConfigConfiguration;
@2.4.0
-#defaultTransactionManager(Ljava/lang/Object;)Lnet/sf/ehcache/config/Configuration;
-#setDefaultTransactionManager(Ljava/lang/Object;)V
-#getDefaultTransactionManager()Ljava/lang/Object;
@2.4.1
+#defaultTransactionTimeoutInSeconds(I)Lnet/sf/ehcache/config/Configuration;
+#setDefaultTransactionTimeoutInSeconds(I)V
+#getDefaultTransactionTimeoutInSeconds()I
@2.5.0
+#setupFor(Lnet/sf/ehcache/CacheManager;Ljava/lang/String;)Lnet/sf/ehcache/config/Configuration$RuntimeCfg;
+#validate()Ljava/util/Collection;
+#isMaxBytesLocalDiskSet()Z
+#isMaxBytesLocalOffHeapSet()Z
+#isMaxBytesLocalHeapSet()Z
+#getMaxBytesLocalHeap()J
+#setMaxBytesLocalHeap(Ljava/lang/String;)V
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#setMaxBytesLocalHeap(Ljava/lang/Long;)V
+#maxBytesLocalHeap(JLnet/sf/ehcache/config/MemoryUnit;)Lnet/sf/ehcache/config/Configuration;
+#getMaxBytesLocalOffHeap()J
+#setMaxBytesLocalOffHeap(Ljava/lang/String;)V
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
+#setMaxBytesLocalOffHeap(Ljava/lang/Long;)V
+#maxBytesLocalOffHeap(JLnet/sf/ehcache/config/MemoryUnit;)Lnet/sf/ehcache/config/Configuration;
+#getMaxBytesLocalDisk()J
+#setMaxBytesLocalDisk(Ljava/lang/String;)V
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#setMaxBytesLocalDisk(Ljava/lang/Long;)V
+#maxBytesLocalDisk(JLnet/sf/ehcache/config/MemoryUnit;)Lnet/sf/ehcache/config/Configuration;
+#sizeOfPolicy(Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#addSizeOfPolicy(Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;)V
+#getSizeOfPolicyConfiguration()Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)Z
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)Z
@2.6.0
+#managementRESTService(Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;)Lnet/sf/ehcache/config/Configuration;
+#addManagementRESTService(Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;)V
+#getManagementRESTService()Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;
@2.6.2
+#getTotalConfiguredOffheap()J

+###net/sf/ehcache/config/TerracottaConfiguration
@1.7.0-beta
+#<init>()V
+#clone()Lnet/sf/ehcache/config/TerracottaConfiguration;
+#setClustered(Z)V
+#isClustered()Z
+#setCoherentReads(Z)V
+#getCoherentReads()Z
+#setValueMode(Ljava/lang/String;)V
+#getValueMode()Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
+#clone()Ljava/lang/Object;
@2.0.0-beta
+#clustered(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#setCopyOnRead(Z)V
+#copyOnRead(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#isCopyOnRead()Z
+#coherentReads(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#valueMode(Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#valueMode(Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#setOrphanEviction(Z)V
+#orphanEviction(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#getOrphanEviction()Z
+#setOrphanEvictionPeriod(I)V
+#orphanEvictionPeriod(I)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#getOrphanEvictionPeriod()I
+#setLocalKeyCache(Z)V
+#localKeyCache(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#getLocalKeyCache()Z
+#setLocalKeyCacheSize(I)V
+#localKeyCacheSize(I)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#getLocalKeyCacheSize()I
+#setCoherent(Z)V
+#coherent(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#isCoherent()Z
+#isSynchronousWrite()Z
+#setSynchronousWrite(Z)V
+#synchronousWrite(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
@2.0.0
+#isCacheXA()Z
+#setCacheXA(Z)V
+#cacheXA(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#isSynchronousWrites()Z
+#setSynchronousWrites(Z)V
+#synchronousWrites(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
-#isSynchronousWrite()Z
-#setSynchronousWrite(Z)V
-#synchronousWrite(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
@2.2.0
+#setStorageStrategy(Ljava/lang/String;)V
+#storageStrategy(Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#storageStrategy(Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#getStorageStrategy()Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;
+#concurrency(I)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#setConcurrency(I)V
+#getConcurrency()I
@2.3.0
+#isStorageStrategySet()Z
@2.4.0
*#setCoherent(Z)V[deprecated]
*#coherent(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;[deprecated]
*#isCoherent()Z[deprecated]
+#addNonstop(Lnet/sf/ehcache/config/NonstopConfiguration;)V
+#nonstop(Lnet/sf/ehcache/config/NonstopConfiguration;)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#getNonstopConfiguration()Lnet/sf/ehcache/config/NonstopConfiguration;
+#isNonstopEnabled()Z
+#consistency(Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#setConsistency(Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;)V
+#setConsistency(Ljava/lang/String;)V
+#getConsistency()Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
@2.5.0
+#isLocalCacheEnabled()Z
+#setLocalCacheEnabled(Z)V
+#localCacheEnabled(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
@2.5.1
+#setCompressionEnabled(Z)V
+#compressionEnabled(Z)Lnet/sf/ehcache/config/TerracottaConfiguration;
+#isCompressionEnabled()Z
@2.6.0
-#setStorageStrategy(Ljava/lang/String;)V
-#storageStrategy(Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaConfiguration;
-#storageStrategy(Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;)Lnet/sf/ehcache/config/TerracottaConfiguration;
-#isStorageStrategySet()Z
-#getStorageStrategy()Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;

+###net/sf/ehcache/config/ConfigurationHelper
@1.6.2
+#<init>(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/config/Configuration;)V
+#createBootstrapCacheLoader(Lnet/sf/ehcache/config/CacheConfiguration$BootstrapCacheLoaderFactoryConfiguration;)Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
+#createCacheExceptionHandler(Lnet/sf/ehcache/config/CacheConfiguration$CacheExceptionHandlerFactoryConfiguration;)Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;
+#createCachePeerProviders()Ljava/util/Map;
+#createCachePeerListeners()Ljava/util/Map;
+#createCacheManagerEventListener()Lnet/sf/ehcache/event/CacheManagerEventListener;
+#getDiskStorePath()Ljava/lang/String;
+#createDefaultCache()Lnet/sf/ehcache/Ehcache;
+#createCaches()Ljava/util/Set;
+#numberOfCachesThatOverflowToDisk()Ljava/lang/Integer;
+#numberOfCachesThatAreDiskPersistent()Ljava/lang/Integer;
+#getConfigurationBean()Lnet/sf/ehcache/config/Configuration;
@2.0.0-beta
-#createBootstrapCacheLoader(Lnet/sf/ehcache/config/CacheConfiguration$BootstrapCacheLoaderFactoryConfiguration;)Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
@2.1.0
+#createCacheDecorators(Lnet/sf/ehcache/Ehcache;)Ljava/util/List;
@2.3.0
+#createDefaultCacheDecorators(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/config/CacheConfiguration;)Ljava/util/List;
@2.5.0
+#createCacheManagerEventListener(Lnet/sf/ehcache/CacheManager;)Lnet/sf/ehcache/event/CacheManagerEventListener;
-#createCacheManagerEventListener()Lnet/sf/ehcache/event/CacheManagerEventListener;
@2.6.0
+#numberOfCachesThatUseDiskStorage()I
-#numberOfCachesThatOverflowToDisk()Ljava/lang/Integer;
-#numberOfCachesThatAreDiskPersistent()Ljava/lang/Integer;

+###net/sf/ehcache/config/TerracottaConfigConfiguration
@1.7.0-beta
+#<init>()V
+#clone()Lnet/sf/ehcache/config/TerracottaConfigConfiguration;
+#setUrl(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#extractTcconfig(Ljava/lang/String;)V
+#getEmbeddedConfig()Ljava/lang/String;
+#isUrlConfig()Z
+#clone()Ljava/lang/Object;
@2.0.0-beta
+#getOriginalEmbeddedConfig()Ljava/lang/String;
@2.2.0
-###net/sf/ehcache/config/TerracottaConfigConfiguration

+###net/sf/ehcache/config/ConfigurationFactory
@1.6.2
+#parseConfiguration(Ljava/io/File;)Lnet/sf/ehcache/config/Configuration;
+#parseConfiguration(Ljava/net/URL;)Lnet/sf/ehcache/config/Configuration;
+#parseConfiguration()Lnet/sf/ehcache/config/Configuration;
+#parseConfiguration(Ljava/io/InputStream;)Lnet/sf/ehcache/config/Configuration;
@2.6.0
+#parseCacheConfiguration(Ljava/lang/String;)Lnet/sf/ehcache/config/CacheConfiguration;

+###net/sf/ehcache/config/CacheConfiguration$CacheExtensionFactoryConfiguration
@1.6.2
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
@1.7.1
+#<init>()V
-#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V

+###net/sf/ehcache/Status
@1.6.2
+#toString()Ljava/lang/String;
+#convertIntToStatus(I)Lnet/sf/ehcache/Status;
+#intValue()I
+#equals(Ljava/lang/Object;)Z
+#equals(Lnet/sf/ehcache/Status;)Z
+#hashCode()I

+###net/sf/ehcache/constructs/web/ShutdownListener
@1.7.1
+#<init>()V
+#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V

+###net/sf/ehcache/constructs/blocking/UpdatingCacheEntryFactory
@1.6.2
+#updateEntryValue(Ljava/lang/Object;Ljava/lang/Object;)V

+###net/sf/ehcache/constructs/blocking/SelfPopulatingCache
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/constructs/blocking/CacheEntryFactory;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#refresh()V
+#refresh(Z)V
+#refresh(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#refresh(Ljava/lang/Object;Z)Lnet/sf/ehcache/Element;

+###net/sf/ehcache/constructs/blocking/UpdatingSelfPopulatingCache
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/constructs/blocking/UpdatingCacheEntryFactory;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#refresh()V

+###net/sf/ehcache/constructs/blocking/CacheEntryFactory
@1.6.2
+#createEntry(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/constructs/blocking/LockTimeoutException
@1.6.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###net/sf/ehcache/constructs/blocking/BlockingCache
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;I)V
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isExpired(Lnet/sf/ehcache/Element;)Z
+#clone()Ljava/lang/Object;
+#getCacheEventNotificationService()Lnet/sf/ehcache/event/RegisteredEventListeners;
+#isElementInMemory(Ljava/io/Serializable;)Z
+#isElementInMemory(Ljava/lang/Object;)Z
+#isElementOnDisk(Ljava/io/Serializable;)Z
+#isElementOnDisk(Ljava/lang/Object;)Z
+#getGuid()Ljava/lang/String;
+#getCacheManager()Lnet/sf/ehcache/CacheManager;
+#clearStatistics()V
+#getStatisticsAccuracy()I
+#setStatisticsAccuracy(I)V
+#evictExpiredElements()V
+#isKeyInCache(Ljava/lang/Object;)Z
+#isValueInCache(Ljava/lang/Object;)Z
+#getStatistics()Lnet/sf/ehcache/Statistics;
+#setCacheManager(Lnet/sf/ehcache/CacheManager;)V
+#getBootstrapCacheLoader()Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
+#setBootstrapCacheLoader(Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
+#setDiskStorePath(Ljava/lang/String;)V
+#initialise()V
+#bootstrap()V
+#dispose()V
+#getCacheConfiguration()Lnet/sf/ehcache/config/CacheConfiguration;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#put(Lnet/sf/ehcache/Element;)V
+#put(Lnet/sf/ehcache/Element;Z)V
+#putQuiet(Lnet/sf/ehcache/Element;)V
+#get(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#getKeysWithExpiryCheck()Ljava/util/List;
+#getKeysNoDuplicateCheck()Ljava/util/List;
+#remove(Ljava/io/Serializable;)Z
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/io/Serializable;Z)Z
+#remove(Ljava/lang/Object;Z)Z
+#removeQuiet(Ljava/io/Serializable;)Z
+#removeQuiet(Ljava/lang/Object;)Z
+#removeAll()V
+#removeAll(Z)V
+#flush()V
+#getSize()I
+#calculateInMemorySize()J
+#getMemoryStoreSize()J
+#getDiskStoreSize()I
+#getStatus()Lnet/sf/ehcache/Status;
+#liveness()Ljava/lang/String;
+#setTimeoutMillis(I)V
+#getTimeoutMillis()I
+#registerCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#unregisterCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#getRegisteredCacheExtensions()Ljava/util/List;
+#getAverageGetTime()F
+#setCacheExceptionHandler(Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;)V
+#getCacheExceptionHandler()Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;
+#registerCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#unregisterCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#getRegisteredCacheLoaders()Ljava/util/List;
+#getWithLoader(Ljava/lang/Object;Lnet/sf/ehcache/loader/CacheLoader;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAllWithLoader(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Map;
+#load(Ljava/lang/Object;)V
+#loadAll(Ljava/util/Collection;Ljava/lang/Object;)V
+#isDisabled()Z
+#setDisabled(Z)V
@1.7.0-beta
+#getLiveCacheStatistics()Lnet/sf/ehcache/statistics/LiveCacheStatistics;
+#getSizeBasedOnAccuracy(I)I
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#getSampledCacheStatistics()Lnet/sf/ehcache/statistics/sampled/SampledCacheStatistics;
+#setSampledStatisticsEnabled(Z)V
+#isSampledStatisticsEnabled()Z
+#getInternalContext()Ljava/lang/Object;
@2.0.0-beta
+#getWriterManager()Lnet/sf/ehcache/writer/CacheWriterManager;
+#putWithWriter(Lnet/sf/ehcache/Element;)V
+#removeWithWriter(Ljava/lang/Object;)Z
+#registerCacheWriter(Lnet/sf/ehcache/writer/CacheWriter;)V
+#unregisterCacheWriter()V
+#getRegisteredCacheWriter()Lnet/sf/ehcache/writer/CacheWriter;
+#disableDynamicFeatures()V
+#isCoherent()Z
+#setCoherent(Z)V
+#waitUntilCoherent()V
+#setTransactionManagerLookup(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
@2.0.0
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
-#isCoherent()Z
-#setCoherent(Z)V
-#waitUntilCoherent()V
@2.1.0-beta
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
@2.1.0
+#toString()Ljava/lang/String;
@2.3.0
-#getName()Ljava/lang/String;
-#setName(Ljava/lang/String;)V
-#isExpired(Lnet/sf/ehcache/Element;)Z
-#clone()Ljava/lang/Object;
-#getCacheEventNotificationService()Lnet/sf/ehcache/event/RegisteredEventListeners;
-#isElementInMemory(Ljava/io/Serializable;)Z
-#isElementInMemory(Ljava/lang/Object;)Z
-#isElementOnDisk(Ljava/io/Serializable;)Z
-#isElementOnDisk(Ljava/lang/Object;)Z
-#getGuid()Ljava/lang/String;
-#getCacheManager()Lnet/sf/ehcache/CacheManager;
-#clearStatistics()V
-#getStatisticsAccuracy()I
-#setStatisticsAccuracy(I)V
-#evictExpiredElements()V
-#isKeyInCache(Ljava/lang/Object;)Z
-#isValueInCache(Ljava/lang/Object;)Z
-#getStatistics()Lnet/sf/ehcache/Statistics;
-#getLiveCacheStatistics()Lnet/sf/ehcache/statistics/LiveCacheStatistics;
-#setCacheManager(Lnet/sf/ehcache/CacheManager;)V
-#getBootstrapCacheLoader()Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
-#setBootstrapCacheLoader(Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
-#setDiskStorePath(Ljava/lang/String;)V
-#initialise()V
-#bootstrap()V
-#dispose()V
-#getCacheConfiguration()Lnet/sf/ehcache/config/CacheConfiguration;
-#getWriterManager()Lnet/sf/ehcache/writer/CacheWriterManager;
-#put(Lnet/sf/ehcache/Element;Z)V
-#putQuiet(Lnet/sf/ehcache/Element;)V
-#putWithWriter(Lnet/sf/ehcache/Element;)V
-#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
-#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
-#getKeys()Ljava/util/List;
-#getKeysWithExpiryCheck()Ljava/util/List;
-#getKeysNoDuplicateCheck()Ljava/util/List;
-#remove(Ljava/io/Serializable;)Z
-#remove(Ljava/lang/Object;)Z
-#remove(Ljava/io/Serializable;Z)Z
-#remove(Ljava/lang/Object;Z)Z
-#removeQuiet(Ljava/io/Serializable;)Z
-#removeQuiet(Ljava/lang/Object;)Z
-#removeWithWriter(Ljava/lang/Object;)Z
-#removeAll()V
-#removeAll(Z)V
-#flush()V
-#getSize()I
-#getSizeBasedOnAccuracy(I)I
-#calculateInMemorySize()J
-#getMemoryStoreSize()J
-#getDiskStoreSize()I
-#getStatus()Lnet/sf/ehcache/Status;
-#registerCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
-#unregisterCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
-#getRegisteredCacheExtensions()Ljava/util/List;
-#getAverageGetTime()F
-#setCacheExceptionHandler(Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;)V
-#getCacheExceptionHandler()Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;
-#getRegisteredCacheLoaders()Ljava/util/List;
-#registerCacheWriter(Lnet/sf/ehcache/writer/CacheWriter;)V
-#unregisterCacheWriter()V
-#getRegisteredCacheWriter()Lnet/sf/ehcache/writer/CacheWriter;
-#isDisabled()Z
-#setDisabled(Z)V
-#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
-#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
-#isStatisticsEnabled()Z
-#setStatisticsEnabled(Z)V
-#getSampledCacheStatistics()Lnet/sf/ehcache/statistics/sampled/SampledCacheStatistics;
-#setSampledStatisticsEnabled(Z)V
-#isSampledStatisticsEnabled()Z
-#getInternalContext()Ljava/lang/Object;
-#disableDynamicFeatures()V
-#isClusterCoherent()Z
-#isNodeCoherent()Z
-#setNodeCoherent(Z)V
-#waitUntilClusterCoherent()V
-#setTransactionManagerLookup(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
-#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#removeElement(Lnet/sf/ehcache/Element;)Z
-#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
-#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
-#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
-#toString()Ljava/lang/String;
@2.5.4
+#put(Lnet/sf/ehcache/Element;Z)V
+#putQuiet(Lnet/sf/ehcache/Element;)V
+#putWithWriter(Lnet/sf/ehcache/Element;)V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#putIfAbsent(Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/Element;

+###net/sf/ehcache/Statistics
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;IJJJJJFJJJ)V
+#clearStatistics()V
+#getCacheHits()J
+#getInMemoryHits()J
+#getOnDiskHits()J
+#getCacheMisses()J
+#getObjectCount()J
+#getMemoryStoreObjectCount()J
+#getDiskStoreObjectCount()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#getAssociatedCacheName()Ljava/lang/String;
+#getAssociatedCache()Lnet/sf/ehcache/Ehcache;
+#toString()Ljava/lang/String;
+#getAverageGetTime()F
+#getEvictionCount()J
@1.7.0-beta
+#isValidStatisticsAccuracy(I)Z
@2.3.0
+#<init>(Lnet/sf/ehcache/Ehcache;IJJJJJJJJJFJJJJ)V
+#getOffHeapHits()J
+#getInMemoryMisses()J
+#getOffHeapMisses()J
+#getOnDiskMisses()J
+#getOffHeapStoreObjectCount()J
-#<init>(Lnet/sf/ehcache/Ehcache;IJJJJJFJJJ)V
@2.4.0
+#<init>(Lnet/sf/ehcache/Ehcache;IJJJJJJJJJFJJJJJJJ)V
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#getWriterQueueSize()J
-#<init>(Lnet/sf/ehcache/Ehcache;IJJJJJJJJJFJJJJ)V

+###net/sf/ehcache/loader/CacheLoader
@1.6.2
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/util/Collection;)Ljava/util/Map;
+#load(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Map;
+#getName()Ljava/lang/String;
+#clone(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/loader/CacheLoader;
+#init()V
+#dispose()V
+#getStatus()Lnet/sf/ehcache/Status;

+###net/sf/ehcache/loader/CacheLoaderFactory
@1.6.2
+#<init>()V
+#createCacheLoader(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)Lnet/sf/ehcache/loader/CacheLoader;

+###net/sf/ehcache/CacheManager
@1.6.2
+#<init>(Lnet/sf/ehcache/config/Configuration;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/net/URL;)V
+#<init>(Ljava/io/InputStream;)V
+#<init>()V
+#create()Lnet/sf/ehcache/CacheManager;
+#getInstance()Lnet/sf/ehcache/CacheManager;
+#create(Ljava/lang/String;)Lnet/sf/ehcache/CacheManager;
+#create(Ljava/net/URL;)Lnet/sf/ehcache/CacheManager;
+#create(Ljava/io/InputStream;)Lnet/sf/ehcache/CacheManager;
+#getCache(Ljava/lang/String;)Lnet/sf/ehcache/Cache;
+#getEhcache(Ljava/lang/String;)Lnet/sf/ehcache/Ehcache;
+#addCache(Ljava/lang/String;)V
+#addCache(Lnet/sf/ehcache/Cache;)V
+#addCache(Lnet/sf/ehcache/Ehcache;)V
+#cacheExists(Ljava/lang/String;)Z
+#removalAll()V
+#removeCache(Ljava/lang/String;)V
+#shutdown()V
+#getCacheNames()[Ljava/lang/String;
+#getStatus()Lnet/sf/ehcache/Status;
+#clearAll()V
+#getCacheManagerPeerProvider(Ljava/lang/String;)Lnet/sf/ehcache/distribution/CacheManagerPeerProvider;
+#getCachePeerListener(Ljava/lang/String;)Lnet/sf/ehcache/distribution/CacheManagerPeerListener;
+#getCacheManagerEventListener()Lnet/sf/ehcache/event/CacheManagerEventListener;
+#setCacheManagerEventListener(Lnet/sf/ehcache/event/CacheManagerEventListener;)V
+#getCacheManagerEventListenerRegistry()Lnet/sf/ehcache/event/CacheManagerEventListenerRegistry;
+#replaceCacheWithDecoratedCache(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Ehcache;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#getDiskStorePath()Ljava/lang/String;
@1.7.0-beta
+#isNamed()Z
+#getTimer()Lnet/sf/ehcache/util/FailSafeTimer;
@1.7.2
+#clearAllStartingWith(Ljava/lang/String;)V
@2.0.0-beta
+#getClusterUUID()Ljava/lang/String;
+#createTerracottaStore(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/store/Store;
+#createTerracottaWriteBehind(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/writer/writebehind/WriteBehind;
+#getOriginalConfigurationText()Ljava/lang/String;
+#getActiveConfigurationText()Ljava/lang/String;
+#getOriginalConfigurationText(Ljava/lang/String;)Ljava/lang/String;
+#getActiveConfigurationText(Ljava/lang/String;)Ljava/lang/String;
+#hashCode()I
@2.0.0
+#createTerracottaEventReplicator(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/event/CacheEventListener;
+#getCluster(Lnet/sf/ehcache/cluster/ClusterScheme;)Lnet/sf/ehcache/cluster/CacheCluster;
@2.1.0-beta
+#addCacheIfAbsent(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/Ehcache;
+#addCacheIfAbsent(Ljava/lang/String;)Lnet/sf/ehcache/Ehcache;
@2.1.0
+#create(Lnet/sf/ehcache/config/Configuration;)Lnet/sf/ehcache/CacheManager;
+#addDecoratedCache(Lnet/sf/ehcache/Ehcache;)V
@2.3.0
+#addDecoratedCacheIfAbsent(Lnet/sf/ehcache/Ehcache;)V
+#getCacheManagerPeerProviders()Ljava/util/Map;
@2.4.0
+#getTransactionController()Lnet/sf/ehcache/TransactionController;
@2.5.0
+#getOnHeapPool()Lnet/sf/ehcache/pool/Pool;
+#getOnDiskPool()Lnet/sf/ehcache/pool/Pool;
+#getCacheManager(Ljava/lang/String;)Lnet/sf/ehcache/CacheManager;
+#getConfiguration()Lnet/sf/ehcache/config/Configuration;
+#getSoftLockFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/SoftLockFactory;
-#hashCode()I
@2.5.2
+#newInstance()Lnet/sf/ehcache/CacheManager;
+#newInstance(Ljava/lang/String;)Lnet/sf/ehcache/CacheManager;
+#newInstance(Ljava/net/URL;)Lnet/sf/ehcache/CacheManager;
+#newInstance(Ljava/io/InputStream;)Lnet/sf/ehcache/CacheManager;
+#newInstance(Lnet/sf/ehcache/config/Configuration;)Lnet/sf/ehcache/CacheManager;
+#getOrCreateTransactionIDFactory()Lnet/sf/ehcache/transaction/TransactionIDFactory;
@2.6.0
+#getDiskStorePathManager()Lnet/sf/ehcache/DiskStorePathManager;
+#getFeaturesManager()Lnet/sf/ehcache/FeaturesManager;
-#getDiskStorePath()Ljava/lang/String;
-#getSoftLockFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/SoftLockFactory;

+###net/sf/ehcache/CacheEntry
@2.0.0
+#<init>(Ljava/lang/Object;Lnet/sf/ehcache/Element;)V
+#getKey()Ljava/lang/Object;
+#getElement()Lnet/sf/ehcache/Element;

+###net/sf/ehcache/transaction/xa/EhcacheXAResource
@2.0.0-beta
+#getCacheName()Ljava/lang/String;
+#getStore()Lnet/sf/ehcache/store/Store;
+#getOrCreateTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
@2.0.1
+#addTwoPcExecutionListener(Lnet/sf/ehcache/transaction/xa/TwoPcExecutionListener;)V
+#createTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
-#getStore()Lnet/sf/ehcache/store/Store;
-#getOrCreateTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
-#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
-#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
@2.1.0
+#getCurrentTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
@2.4.0
+#addTwoPcExecutionListener(Lnet/sf/ehcache/transaction/xa/XAExecutionListener;)V
+#createTransactionContext()Lnet/sf/ehcache/transaction/xa/XATransactionContext;
+#getCurrentTransactionContext()Lnet/sf/ehcache/transaction/xa/XATransactionContext;
-#addTwoPcExecutionListener(Lnet/sf/ehcache/transaction/xa/TwoPcExecutionListener;)V
-#createTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
-#getCurrentTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;

+###net/sf/ehcache/transaction/xa/TwoPcExecutionListener
@2.0.1
+#beforePrepare(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
+#afterCommitOrRollback(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
@2.4.0
-###net/sf/ehcache/transaction/xa/TwoPcExecutionListener

+###net/sf/ehcache/transaction/xa/EhcacheXAStoreImpl$VersionTable
@2.0.0-beta
+#<init>()V
+#valid(Ljava/lang/Object;J)Z
+#checkout(Ljava/lang/Object;Ljavax/transaction/xa/Xid;)J
+#checkin(Ljava/lang/Object;Ljavax/transaction/xa/Xid;Z)V
@2.0.0
+#valid(Ljava/lang/Object;JLjavax/transaction/xa/Xid;)Z
-#valid(Ljava/lang/Object;J)Z
@2.1.0-beta
+#valid(Ljava/lang/Object;J)Z
-#valid(Ljava/lang/Object;JLjavax/transaction/xa/Xid;)Z
@2.4.0
-###net/sf/ehcache/transaction/xa/EhcacheXAStoreImpl$VersionTable

+###net/sf/ehcache/transaction/xa/PreparedContext
@2.0.0
+#addCommand(Lnet/sf/ehcache/transaction/xa/VersionAwareCommand;)V
+#getPreparedCommands()Ljava/util/List;
+#getUpdatedKeys()Ljava/util/Set;
+#isRolledBack()Z
+#isCommitted()Z
+#setRolledBack(Z)V
+#setCommitted(Z)V
@2.1.0-beta
+#getUpdatedKeys()[Ljava/lang/Object;
-#getUpdatedKeys()Ljava/util/Set;
@2.4.0
-###net/sf/ehcache/transaction/xa/PreparedContext

+###net/sf/ehcache/transaction/xa/EhcacheXAStore
@2.0.0-beta
+#storeXid2Transaction(Ljavax/transaction/xa/Xid;Ljavax/transaction/Transaction;)Ljavax/transaction/xa/Xid;
+#createTransactionContext(Ljavax/transaction/Transaction;)Lnet/sf/ehcache/transaction/TransactionContext;
+#getTransactionContext(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/TransactionContext;
+#getTransactionContext(Ljavax/transaction/Transaction;)Lnet/sf/ehcache/transaction/TransactionContext;
+#checkin(Ljava/lang/Object;Ljavax/transaction/xa/Xid;Z)V
+#checkout(Ljava/lang/Object;Ljavax/transaction/xa/Xid;)J
+#isValid(Lnet/sf/ehcache/transaction/xa/VersionAwareCommand;)Z
+#prepared(Ljavax/transaction/xa/Xid;)V
+#getPreparedXids()[Ljavax/transaction/xa/Xid;
+#getUnderlyingStore()Lnet/sf/ehcache/store/Store;
+#getOldVersionStore()Lnet/sf/ehcache/store/Store;
+#isPrepared(Ljavax/transaction/xa/Xid;)Z
+#removeData(Ljavax/transaction/xa/Xid;)V
@2.0.0
+#createTransactionContext(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/TransactionContext;
+#isValid(Lnet/sf/ehcache/transaction/xa/VersionAwareCommand;Ljavax/transaction/xa/Xid;)Z
+#prepare(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/transaction/xa/PreparedContext;)V
+#createPreparedContext()Lnet/sf/ehcache/transaction/xa/PreparedContext;
+#getPreparedContext(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/xa/PreparedContext;
-#storeXid2Transaction(Ljavax/transaction/xa/Xid;Ljavax/transaction/Transaction;)Ljavax/transaction/xa/Xid;
-#createTransactionContext(Ljavax/transaction/Transaction;)Lnet/sf/ehcache/transaction/TransactionContext;
-#getTransactionContext(Ljavax/transaction/Transaction;)Lnet/sf/ehcache/transaction/TransactionContext;
-#isValid(Lnet/sf/ehcache/transaction/xa/VersionAwareCommand;)Z
-#prepared(Ljavax/transaction/xa/Xid;)V
@2.1.0
+#isBypassingValidation()Z
@2.4.0
-###net/sf/ehcache/transaction/xa/EhcacheXAStore

+###net/sf/ehcache/transaction/xa/XARequest$RequestType
@2.0.0
+#values()[Lnet/sf/ehcache/transaction/xa/XARequest$RequestType;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/transaction/xa/XARequest$RequestType;
@2.4.0
-###net/sf/ehcache/transaction/xa/XARequest$RequestType

+###net/sf/ehcache/transaction/xa/EhcacheXAException
@2.0.0-beta
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ILjava/lang/Throwable;)V

+###net/sf/ehcache/transaction/xa/XARequest
@2.0.0
+#<init>(Lnet/sf/ehcache/transaction/xa/XARequest$RequestType;Ljavax/transaction/Transaction;Ljavax/transaction/xa/Xid;)V
+#<init>(Lnet/sf/ehcache/transaction/xa/XARequest$RequestType;Ljavax/transaction/Transaction;Ljavax/transaction/xa/Xid;I)V
+#<init>(Lnet/sf/ehcache/transaction/xa/XARequest$RequestType;Ljavax/transaction/Transaction;Ljavax/transaction/xa/Xid;IZ)V
+#getRequestType()Lnet/sf/ehcache/transaction/xa/XARequest$RequestType;
+#getXid()Ljavax/transaction/xa/Xid;
+#getFlags()I
+#isOnePhase()Z
+#getTransaction()Ljavax/transaction/Transaction;
@2.4.0
-###net/sf/ehcache/transaction/xa/XARequest

+###net/sf/ehcache/transaction/xa/VersionAwareWrapper
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/transaction/Command;)V
+#<init>(Lnet/sf/ehcache/transaction/Command;JLjava/lang/Object;)V
+#isWriteCommand()Z
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
+#isVersionAware()Z
+#getVersion()J
+#getKey()Ljava/lang/Object;
+#getCommandName()Ljava/lang/String;
@2.0.0
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
@2.4.0
-###net/sf/ehcache/transaction/xa/VersionAwareWrapper

+###net/sf/ehcache/transaction/xa/VersionAwareCommand
@2.0.0-beta
+#isWriteCommand()Z
+#isVersionAware()Z
+#getVersion()J
+#getKey()Ljava/lang/Object;
@2.4.0
-###net/sf/ehcache/transaction/xa/VersionAwareCommand

+###net/sf/ehcache/transaction/xa/SyncAwareStore
@2.0.0
+#<init>(Lnet/sf/ehcache/store/Store;)V
+#put(Lnet/sf/ehcache/Element;)Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#bufferFull()Z
+#containsKey(Ljava/lang/Object;)Z
+#dispose()V
+#expireElements()V
+#flush()V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInternalContext()Ljava/lang/Object;
+#getKeyArray()[Ljava/lang/Object;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getSize()I
+#getSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#getTerracottaClusteredSize()I
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#removeAll()V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
@2.1.0-beta
-###net/sf/ehcache/transaction/xa/SyncAwareStore

+###net/sf/ehcache/transaction/xa/TransactionXARequestProcessor
@2.0.0
+#<init>(Lnet/sf/ehcache/transaction/xa/EhcacheXAResourceImpl;)V
+#process(Lnet/sf/ehcache/transaction/xa/XARequest;)I
@2.4.0
-###net/sf/ehcache/transaction/xa/TransactionXARequestProcessor

+###net/sf/ehcache/transaction/xa/PreparedCommandImpl
@2.0.0
+#<init>(Ljava/lang/Object;Z)V
+#getKey()Ljava/lang/Object;
+#isWriteCommand()Z
@2.4.0
-###net/sf/ehcache/transaction/xa/PreparedCommandImpl

+###net/sf/ehcache/transaction/xa/XARequestProcessor
@2.0.0
+#process(Lnet/sf/ehcache/transaction/xa/XARequest;)I
@2.4.0
-###net/sf/ehcache/transaction/xa/XARequestProcessor

+###net/sf/ehcache/transaction/xa/EhcacheXAResourceImpl
@2.0.0-beta
+#<init>(Ljava/lang/String;Lnet/sf/ehcache/store/Store;Ljavax/transaction/TransactionManager;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;)V
+#getCacheName()Ljava/lang/String;
+#start(Ljavax/transaction/xa/Xid;I)V
+#commit(Ljavax/transaction/xa/Xid;Z)V
+#end(Ljavax/transaction/xa/Xid;I)V
+#forget(Ljavax/transaction/xa/Xid;)V
+#prepare(Ljavax/transaction/xa/Xid;)I
+#recover(I)[Ljavax/transaction/xa/Xid;
+#rollback(Ljavax/transaction/xa/Xid;)V
+#isSameRM(Ljavax/transaction/xa/XAResource;)Z
+#setTransactionTimeout(I)Z
+#getTransactionTimeout()I
+#getStore()Lnet/sf/ehcache/store/Store;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getOrCreateTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
@2.0.0
+#<init>(Lnet/sf/ehcache/Ehcache;Ljavax/transaction/TransactionManager;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;)V
+#toString()Ljava/lang/String;
-#<init>(Ljava/lang/String;Lnet/sf/ehcache/store/Store;Ljavax/transaction/TransactionManager;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;)V
@2.0.1
+#addTwoPcExecutionListener(Lnet/sf/ehcache/transaction/xa/TwoPcExecutionListener;)V
+#createTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
-#getStore()Lnet/sf/ehcache/store/Store;
-#getOrCreateTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
-#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
-#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
-#toString()Ljava/lang/String;
@2.1.0
+#getCurrentTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
@2.4.0
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/TransactionIDFactory;)V
+#forgetInternal(Ljavax/transaction/xa/Xid;)V
+#prepareInternal(Ljavax/transaction/xa/Xid;)I
+#commitInternal(Ljavax/transaction/xa/Xid;Z)V
+#rollbackInternal(Ljavax/transaction/xa/Xid;)V
+#addTwoPcExecutionListener(Lnet/sf/ehcache/transaction/xa/XAExecutionListener;)V
+#createTransactionContext()Lnet/sf/ehcache/transaction/xa/XATransactionContext;
+#getCurrentTransactionContext()Lnet/sf/ehcache/transaction/xa/XATransactionContext;
+#toString()Ljava/lang/String;
-#<init>(Lnet/sf/ehcache/Ehcache;Ljavax/transaction/TransactionManager;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;)V
-#addTwoPcExecutionListener(Lnet/sf/ehcache/transaction/xa/TwoPcExecutionListener;)V
-#createTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
-#getCurrentTransactionContext()Lnet/sf/ehcache/transaction/TransactionContext;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@2.5.0
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/TransactionIDFactory;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
-#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/TransactionIDFactory;)V
@2.6.0
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/transaction/SoftLockManager;Lnet/sf/ehcache/transaction/TransactionIDFactory;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
-#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/TransactionIDFactory;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V

+###net/sf/ehcache/transaction/xa/XATransactionContext
@2.0.0-beta
+#<init>(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/transaction/xa/EhcacheXAStoreImpl;)V
+#initializeTransients(Ljavax/transaction/Transaction;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getTransaction()Ljavax/transaction/Transaction;
+#isRemoved(Ljava/lang/Object;)Z
+#getAddedKeys()Ljava/util/Collection;
+#getRemovedKeys()Ljava/util/Collection;
+#addCommand(Lnet/sf/ehcache/transaction/Command;Lnet/sf/ehcache/Element;)V
+#getCommands()Ljava/util/List;
+#getUpdatedKeys()Ljava/util/Set;
+#getSizeModifier()I
@2.0.0
+#<init>(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;)V
-#<init>(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/transaction/xa/EhcacheXAStoreImpl;)V
-#initializeTransients(Ljavax/transaction/Transaction;)V
-#getTransaction()Ljavax/transaction/Transaction;
@2.1.0-beta
+#getUpdatedKeys()[Ljava/lang/Object;
-#getUpdatedKeys()Ljava/util/Set;
@2.4.0
+#<init>(Lnet/sf/ehcache/store/Store;)V
+#addCommand(Lnet/sf/ehcache/transaction/xa/commands/Command;Lnet/sf/ehcache/Element;)V
+#toString()Ljava/lang/String;
-#<init>(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/transaction/xa/EhcacheXAStore;)V
-#addCommand(Lnet/sf/ehcache/transaction/Command;Lnet/sf/ehcache/Element;)V
-#getUpdatedKeys()[Ljava/lang/Object;

+###net/sf/ehcache/transaction/xa/EhcacheXAStoreImpl$Version
@2.0.0-beta
+#<init>()V
+#getCurrentVersion()J
+#hasTransaction(Ljavax/transaction/xa/Xid;)Z
+#getVersion(Ljavax/transaction/xa/Xid;)J
+#checkout(Ljavax/transaction/xa/Xid;)J
+#checkinRead(Ljavax/transaction/xa/Xid;)Z
+#checkinWrite(Ljavax/transaction/xa/Xid;)Z
@2.0.0
+#getVersion()J
-#getCurrentVersion()J
@2.4.0
-###net/sf/ehcache/transaction/xa/EhcacheXAStoreImpl$Version

+###net/sf/ehcache/transaction/xa/PreparedCommand
@2.0.0
+#getKey()Ljava/lang/Object;
+#isWriteCommand()Z
@2.4.0
-###net/sf/ehcache/transaction/xa/PreparedCommand

+###net/sf/ehcache/transaction/xa/EhcacheXAStoreImpl
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/Store;)V
+#getOldVersionStore()Lnet/sf/ehcache/store/Store;
+#isPrepared(Ljavax/transaction/xa/Xid;)Z
+#removeData(Ljavax/transaction/xa/Xid;)V
+#checkin(Ljava/lang/Object;Ljavax/transaction/xa/Xid;Z)V
+#checkout(Ljava/lang/Object;Ljavax/transaction/xa/Xid;)J
+#storeXid2Transaction(Ljavax/transaction/xa/Xid;Ljavax/transaction/Transaction;)Ljavax/transaction/xa/Xid;
+#createTransactionContext(Ljavax/transaction/Transaction;)Lnet/sf/ehcache/transaction/TransactionContext;
+#getPreparedXids()[Ljavax/transaction/xa/Xid;
+#getTransactionContext(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/TransactionContext;
+#getTransactionContext(Ljavax/transaction/Transaction;)Lnet/sf/ehcache/transaction/TransactionContext;
+#isValid(Lnet/sf/ehcache/transaction/xa/VersionAwareCommand;)Z
+#prepared(Ljavax/transaction/xa/Xid;)V
+#getUnderlyingStore()Lnet/sf/ehcache/store/Store;
@2.0.0
+#createTransactionContext(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/TransactionContext;
+#isValid(Lnet/sf/ehcache/transaction/xa/VersionAwareCommand;Ljavax/transaction/xa/Xid;)Z
+#prepare(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/transaction/xa/PreparedContext;)V
+#getPreparedContext(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/xa/PreparedContext;
+#createPreparedContext()Lnet/sf/ehcache/transaction/xa/PreparedContext;
-#storeXid2Transaction(Ljavax/transaction/xa/Xid;Ljavax/transaction/Transaction;)Ljavax/transaction/xa/Xid;
-#createTransactionContext(Ljavax/transaction/Transaction;)Lnet/sf/ehcache/transaction/TransactionContext;
-#getTransactionContext(Ljavax/transaction/Transaction;)Lnet/sf/ehcache/transaction/TransactionContext;
-#isValid(Lnet/sf/ehcache/transaction/xa/VersionAwareCommand;)Z
-#prepared(Ljavax/transaction/xa/Xid;)V
@2.1.0
+#<init>(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/Store;Z)V
+#isBypassingValidation()Z
-#<init>(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/Store;)V
@2.4.0
-###net/sf/ehcache/transaction/xa/EhcacheXAStoreImpl

+###net/sf/ehcache/transaction/xa/PreparedContextImpl
@2.0.0
+#<init>()V
+#addCommand(Lnet/sf/ehcache/transaction/xa/VersionAwareCommand;)V
+#getPreparedCommands()Ljava/util/List;
+#getUpdatedKeys()Ljava/util/Set;
+#isRolledBack()Z
+#isCommitted()Z
+#setRolledBack(Z)V
+#setCommitted(Z)V
@2.1.0-beta
+#getUpdatedKeys()[Ljava/lang/Object;
-#getUpdatedKeys()Ljava/util/Set;
@2.4.0
-###net/sf/ehcache/transaction/xa/PreparedContextImpl

+###net/sf/ehcache/transaction/StoreRemoveWithWriterCommand
@2.0.0
+#<init>(Lnet/sf/ehcache/CacheEntry;)V
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#getCommandName()Ljava/lang/String;
@2.4.0
-###net/sf/ehcache/transaction/StoreRemoveWithWriterCommand

+###net/sf/ehcache/transaction/TransactionContext
@2.0.0-beta
+#addCommand(Lnet/sf/ehcache/transaction/Command;Lnet/sf/ehcache/Element;)V
+#getTransaction()Ljavax/transaction/Transaction;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#isRemoved(Ljava/lang/Object;)Z
+#getAddedKeys()Ljava/util/Collection;
+#getRemovedKeys()Ljava/util/Collection;
+#getSizeModifier()I
+#getCommands()Ljava/util/List;
+#getUpdatedKeys()Ljava/util/Set;
@2.0.0
-#getTransaction()Ljavax/transaction/Transaction;
@2.1.0-beta
+#getUpdatedKeys()[Ljava/lang/Object;
-#getUpdatedKeys()Ljava/util/Set;
@2.4.0
-###net/sf/ehcache/transaction/TransactionContext

+###net/sf/ehcache/transaction/StoreRemoveAllCommand
@2.0.0-beta
+#<init>()V
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
+#getCommandName()Ljava/lang/String;
@2.0.0
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
@2.4.0
-###net/sf/ehcache/transaction/StoreRemoveAllCommand

+###net/sf/ehcache/transaction/manager/btm/EhCacheXAResourceProducer
@2.0.1
+#registerXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#unregisterXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#startRecovery()Lbitronix/tm/internal/XAResourceHolderState;
+#endRecovery()V
+#setFailed(Z)V
+#findXAResourceHolder(Ljavax/transaction/xa/XAResource;)Lbitronix/tm/resource/common/XAResourceHolder;
+#init()V
+#close()V
+#createPooledConnection(Ljava/lang/Object;Lbitronix/tm/resource/common/ResourceBean;)Lbitronix/tm/resource/common/XAStatefulHolder;
+#getReference()Ljavax/naming/Reference;
@2.3.0
-###net/sf/ehcache/transaction/manager/btm/EhCacheXAResourceProducer

+###net/sf/ehcache/transaction/manager/btm/EhCacheXAResourceHolder
@2.0.1
+#<init>(Ljavax/transaction/xa/XAResource;Lbitronix/tm/resource/common/ResourceBean;)V
+#getXAResource()Ljavax/transaction/xa/XAResource;
+#getResourceBean()Lbitronix/tm/resource/common/ResourceBean;[deprecated]
+#close()V
+#getConnectionHandle()Ljava/lang/Object;
+#getLastReleaseDate()Ljava/util/Date;
+#getXAResourceHolders()Ljava/util/List;
@2.3.0
-###net/sf/ehcache/transaction/manager/btm/EhCacheXAResourceHolder

+###net/sf/ehcache/transaction/manager/DefaultTransactionManagerLookup
@2.0.0-beta
+#<init>()V
+#getTransactionManager()Ljavax/transaction/TransactionManager;
+#register(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
+#setProperties(Ljava/util/Properties;)V
@2.0.1
+#unregister(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
@2.6.0
+#init()V
+#register(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V
+#unregister(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V
-#register(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
-#unregister(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V

+###net/sf/ehcache/transaction/manager/TransactionManagerLookup
@2.0.0-beta
+#getTransactionManager()Ljavax/transaction/TransactionManager;
+#register(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
+#setProperties(Ljava/util/Properties;)V
@2.0.1
+#unregister(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
@2.6.0
+#init()V
+#register(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V
+#unregister(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V
-#register(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
-#unregister(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V

+###net/sf/ehcache/transaction/StoreWriteCommand
@2.0.0-beta
@2.4.0
-###net/sf/ehcache/transaction/StoreWriteCommand

+###net/sf/ehcache/transaction/StorePutWithWriterCommandImpl
@2.0.0
+#<init>(Lnet/sf/ehcache/Element;)V
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#getCommandName()Ljava/lang/String;
@2.4.0
-###net/sf/ehcache/transaction/StorePutWithWriterCommandImpl

+###net/sf/ehcache/transaction/StoreRemoveCommand
@2.0.0-beta
+#<init>(Ljava/lang/Object;)V
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
+#getCommandName()Ljava/lang/String;
@2.0.0
+#<init>(Lnet/sf/ehcache/CacheEntry;)V
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#getKey()Ljava/lang/Object;
+#getEntry()Lnet/sf/ehcache/CacheEntry;
-#<init>(Ljava/lang/Object;)V
@2.4.0
-###net/sf/ehcache/transaction/StoreRemoveCommand

+###net/sf/ehcache/transaction/StoreExpireAllElementsCommand
@2.0.0-beta
+#<init>()V
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
+#getCommandName()Ljava/lang/String;
@2.0.0
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
@2.4.0
-###net/sf/ehcache/transaction/StoreExpireAllElementsCommand

+###net/sf/ehcache/transaction/StorePutCommand
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/Element;)V
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
+#getElement()Lnet/sf/ehcache/Element;
+#getCommandName()Ljava/lang/String;
@2.0.0
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
@2.4.0
-###net/sf/ehcache/transaction/StorePutCommand

+###net/sf/ehcache/transaction/Command
@2.0.0-beta
+#getCommandName()Ljava/lang/String;
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
@2.0.0
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
@2.4.0
-###net/sf/ehcache/transaction/Command

+###net/sf/ehcache/ElementEvictionData
@1.7.0-beta
+#setCreationTime(I)V
+#getCreationTime()I
+#getLastAccessTime()I
+#updateLastAccessTime(ILnet/sf/ehcache/Element;)V
+#resetLastAccessTime(Lnet/sf/ehcache/Element;)V
+#clone()Lnet/sf/ehcache/ElementEvictionData;
+#canParticipateInSerialization()Z
@2.0.0
+#setCreationTime(J)V
+#getCreationTime()J
+#getLastAccessTime()J
+#updateLastAccessTime(JLnet/sf/ehcache/Element;)V
-#setCreationTime(I)V
-#getCreationTime()I
-#getLastAccessTime()I
-#updateLastAccessTime(ILnet/sf/ehcache/Element;)V

+###net/sf/ehcache/extension/CacheExtensionFactory
@1.6.2
+#<init>()V
+#createCacheExtension(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)Lnet/sf/ehcache/extension/CacheExtension;

+###net/sf/ehcache/extension/CacheExtension
@1.6.2
+#init()V
+#dispose()V
+#clone(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/extension/CacheExtension;
+#getStatus()Lnet/sf/ehcache/Status;

+###net/sf/ehcache/statistics/LiveCacheStatisticsImpl
@1.7.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#clearStatistics()V
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#addGetTimeMillis(J)V
+#cacheHitInMemory()V
+#cacheHitOnDisk()V
+#cacheMissExpired()V
+#cacheMissNotFound()V
+#setStatisticsAccuracy(I)V
+#dispose()V
+#notifyElementEvicted(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementExpired(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#clone()Ljava/lang/Object;
+#getAverageGetTimeMillis()F
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#getCacheHitCount()J
+#getCacheMissCount()J
+#getCacheMissCountExpired()J
+#getEvictedCount()J
+#getInMemoryHitCount()J
+#getOnDiskHitCount()J
+#getSize()J
+#getInMemorySize()J
+#getOnDiskSize()J
+#getCacheName()Ljava/lang/String;
+#getStatisticsAccuracy()I
+#getExpiredCount()J
+#getPutCount()J
+#getRemovedCount()J
+#getUpdateCount()J
+#getStatisticsAccuracyDescription()Ljava/lang/String;
@2.0.0-beta
+#getMaxGetTimeMillis()J
+#getMinGetTimeMillis()J
@2.3.0
+#cacheHitOffHeap()V
+#cacheMissInMemory()V
+#cacheMissOffHeap()V
+#cacheMissOnDisk()V
+#getInMemoryMissCount()J
+#getOffHeapMissCount()J
+#getOnDiskMissCount()J
+#getOffHeapHitCount()J
+#getOffHeapSize()J
@2.4.0
+#xaCommit()V
+#xaRollback()V
+#getXaCommitCount()J
+#getXaRollbackCount()J
+#getWriterQueueLength()J
@2.5.0
*#getInMemorySize()J[deprecated]
*#getOffHeapSize()J[deprecated]
*#getOnDiskSize()J[deprecated]
+#getLocalHeapSize()J
+#getLocalOffHeapSize()J
+#getLocalDiskSize()J
+#getLocalDiskSizeInBytes()J
+#getLocalHeapSizeInBytes()J
+#getLocalOffHeapSizeInBytes()J
@2.6.0
+#xaRecovered(I)V
+#addGetTimeNanos(J)V
+#getAverageGetTimeNanos()J
+#getCacheHitRatio()I
+#getMaxGetTimeNanos()J
+#getMinGetTimeNanos()J
+#getXaRecoveredCount()J

+###net/sf/ehcache/statistics/LiveCacheStatisticsWrapper
@1.7.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#setStatisticsEnabled(Z)V
+#isStatisticsEnabled()Z
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#setStatisticsAccuracy(I)V
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#getCacheName()Ljava/lang/String;
+#getSize()J
+#getInMemorySize()J
+#getOnDiskSize()J
+#getAverageGetTimeMillis()F
+#getCacheHitCount()J
+#getCacheMissCount()J
+#getCacheMissCountExpired()J
+#getEvictedCount()J
+#getExpiredCount()J
+#getInMemoryHitCount()J
+#getOnDiskHitCount()J
+#getPutCount()J
+#getRemovedCount()J
+#getUpdateCount()J
+#addGetTimeMillis(J)V
+#cacheHitInMemory()V
+#cacheHitOnDisk()V
+#cacheMissExpired()V
+#cacheMissNotFound()V
+#clearStatistics()V
+#dispose()V
+#notifyElementEvicted(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementExpired(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#clone()Ljava/lang/Object;
@2.0.0-beta
+#getMaxGetTimeMillis()J
+#getMinGetTimeMillis()J
@2.3.0
+#getOffHeapSize()J
+#getInMemoryMissCount()J
+#getOffHeapMissCount()J
+#getOnDiskMissCount()J
+#getOffHeapHitCount()J
+#cacheHitOffHeap()V
+#cacheMissInMemory()V
+#cacheMissOffHeap()V
+#cacheMissOnDisk()V
@2.4.0
+#getXaCommitCount()J
+#getXaRollbackCount()J
+#getWriterQueueLength()J
+#xaCommit()V
+#xaRollback()V
@2.5.0
*#getInMemorySize()J[deprecated]
*#getOffHeapSize()J[deprecated]
*#getOnDiskSize()J[deprecated]
+#getLocalHeapSize()J
+#getLocalOffHeapSize()J
+#getLocalDiskSize()J
+#getLocalHeapSizeInBytes()J
+#getLocalOffHeapSizeInBytes()J
+#getLocalDiskSizeInBytes()J
@2.6.0
+#getAverageGetTimeNanos()J
+#getCacheHitRatio()I
+#addGetTimeNanos(J)V
*#getMaxGetTimeMillis()J[deprecated]
*#getMinGetTimeMillis()J[deprecated]
+#getMaxGetTimeNanos()J
+#getMinGetTimeNanos()J
+#getXaRecoveredCount()J
+#xaRecovered(I)V

+###net/sf/ehcache/statistics/sampled/NullSampledCacheStatistics
@1.7.0-beta
+#<init>()V
+#getAverageGetTimeMostRecentSample()J
+#getCacheElementEvictedMostRecentSample()J
+#getCacheElementExpiredMostRecentSample()J
+#getCacheElementPutMostRecentSample()J
+#getCacheElementRemovedMostRecentSample()J
+#getCacheElementUpdatedMostRecentSample()J
+#getCacheHitInMemoryMostRecentSample()J
+#getCacheHitMostRecentSample()J
+#getCacheHitOnDiskMostRecentSample()J
+#getCacheMissExpiredMostRecentSample()J
+#getCacheMissMostRecentSample()J
+#getCacheMissNotFoundMostRecentSample()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#isSampledStatisticsEnabled()Z
+#dispose()V
+#notifyCacheElementEvicted()V
+#notifyCacheElementExpired()V
+#notifyCacheElementPut()V
+#notifyCacheElementRemoved()V
+#notifyCacheElementUpdated()V
+#notifyCacheHitInMemory()V
+#notifyCacheHitOnDisk()V
+#notifyCacheMissedWithExpired()V
+#notifyCacheMissedWithNotFound()V
+#notifyRemoveAll()V
+#notifyStatisticsAccuracyChanged(I)V
+#notifyStatisticsCleared()V
+#notifyStatisticsEnabledChanged(Z)V
+#notifyTimeTakenForGet(J)V
@2.0.0-beta
+#clearStatistics()V
@2.3.0
+#getCacheHitOffHeapMostRecentSample()J
+#getCacheMissInMemoryMostRecentSample()J
+#getCacheMissOffHeapMostRecentSample()J
+#getCacheMissOnDiskMostRecentSample()J
+#notifyCacheHitOffHeap()V
+#notifyCacheMissInMemory()V
+#notifyCacheMissOffHeap()V
+#notifyCacheMissOnDisk()V
@2.4.0
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#notifyCacheSearch(J)V
+#notifyXaCommit()V
+#notifyXaRollback()V
+#getCacheXaCommitsMostRecentSample()J
+#getCacheXaRollbacksMostRecentSample()J
@2.6.0
+#getAverageGetTimeNanosMostRecentSample()J
+#notifyGetTimeNanos(J)V
+#getCacheHitRatioMostRecentSample()I

+###net/sf/ehcache/statistics/sampled/SampledCacheStatisticsImpl
@1.7.0-beta
+#<init>(Lnet/sf/ehcache/util/FailSafeTimer;)V
+#notifyCacheElementEvicted()V
+#notifyCacheHitInMemory()V
+#notifyCacheHitOnDisk()V
+#notifyCacheMissedWithExpired()V
+#notifyCacheMissedWithNotFound()V
+#dispose()V
+#notifyCacheElementExpired()V
+#notifyCacheElementPut()V
+#notifyCacheElementRemoved()V
+#notifyCacheElementUpdated()V
+#notifyTimeTakenForGet(J)V
+#notifyRemoveAll()V
+#clone()Ljava/lang/Object;
+#notifyStatisticsEnabledChanged(Z)V
+#notifyStatisticsAccuracyChanged(I)V
+#notifyStatisticsCleared()V
+#getCacheHitMostRecentSample()J
+#getAverageGetTimeMostRecentSample()J
+#getCacheElementEvictedMostRecentSample()J
+#getCacheHitInMemoryMostRecentSample()J
+#getCacheHitOnDiskMostRecentSample()J
+#getCacheMissExpiredMostRecentSample()J
+#getCacheMissMostRecentSample()J
+#getCacheMissNotFoundMostRecentSample()J
+#getCacheElementExpiredMostRecentSample()J
+#getCacheElementPutMostRecentSample()J
+#getCacheElementRemovedMostRecentSample()J
+#getCacheElementUpdatedMostRecentSample()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#isSampledStatisticsEnabled()Z
@2.0.0-beta
+#clearStatistics()V
@2.3.0
+#notifyCacheHitOffHeap()V
+#notifyCacheMissInMemory()V
+#notifyCacheMissOffHeap()V
+#notifyCacheMissOnDisk()V
+#getCacheHitOffHeapMostRecentSample()J
+#getCacheMissInMemoryMostRecentSample()J
+#getCacheMissOffHeapMostRecentSample()J
+#getCacheMissOnDiskMostRecentSample()J
@2.4.0
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#notifyCacheSearch(J)V
+#getCacheXaCommitsMostRecentSample()J
+#notifyXaCommit()V
+#getCacheXaRollbacksMostRecentSample()J
+#notifyXaRollback()V
@2.6.0
+#<init>(Lnet/sf/ehcache/util/FailSafeTimer;Lnet/sf/ehcache/util/counter/sampled/SampledCounterConfig;)V
+#<init>(Lnet/sf/ehcache/util/FailSafeTimer;Lnet/sf/ehcache/util/counter/sampled/SampledCounterConfig;Lnet/sf/ehcache/util/counter/sampled/SampledRateCounterConfig;Lnet/sf/ehcache/util/counter/sampled/SampledRateCounterConfig;)V
+#notifyGetTimeNanos(J)V
+#getAverageGetTimeNanosMostRecentSample()J
+#getCacheHitRatioMostRecentSample()I
+#getCacheHitSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissNotFoundSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitRatioSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementEvictedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementRemovedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementPutSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementUpdatedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getAverageGetTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageGetTimeNanosSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageSearchTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getSearchesPerSecondSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaCommitsSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaRollbacksSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;

+###net/sf/ehcache/statistics/sampled/SampledCacheStatisticsWrapper
@1.7.0-beta
+#<init>()V
+#enableSampledStatistics(Lnet/sf/ehcache/util/FailSafeTimer;)V
+#disableSampledStatistics()V
+#isSampledStatisticsEnabled()Z
+#dispose()V
+#getAverageGetTimeMostRecentSample()J
+#getCacheElementEvictedMostRecentSample()J
+#getCacheElementExpiredMostRecentSample()J
+#getCacheElementPutMostRecentSample()J
+#getCacheElementRemovedMostRecentSample()J
+#getCacheElementUpdatedMostRecentSample()J
+#getCacheHitInMemoryMostRecentSample()J
+#getCacheHitMostRecentSample()J
+#getCacheHitOnDiskMostRecentSample()J
+#getCacheMissExpiredMostRecentSample()J
+#getCacheMissMostRecentSample()J
+#getCacheMissNotFoundMostRecentSample()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#notifyCacheElementEvicted()V
+#notifyCacheElementExpired()V
+#notifyCacheElementPut()V
+#notifyCacheElementRemoved()V
+#notifyCacheElementUpdated()V
+#notifyCacheHitInMemory()V
+#notifyCacheHitOnDisk()V
+#notifyCacheMissedWithExpired()V
+#notifyCacheMissedWithNotFound()V
+#notifyRemoveAll()V
+#notifyStatisticsAccuracyChanged(I)V
+#notifyStatisticsCleared()V
+#notifyStatisticsEnabledChanged(Z)V
+#notifyTimeTakenForGet(J)V
@2.0.0-beta
+#clearStatistics()V
@2.3.0
+#getCacheHitOffHeapMostRecentSample()J
+#getCacheMissInMemoryMostRecentSample()J
+#getCacheMissOffHeapMostRecentSample()J
+#getCacheMissOnDiskMostRecentSample()J
+#notifyCacheHitOffHeap()V
+#notifyCacheMissInMemory()V
+#notifyCacheMissOffHeap()V
+#notifyCacheMissOnDisk()V
@2.4.0
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#notifyCacheSearch(J)V
+#notifyXaCommit()V
+#notifyXaRollback()V
+#getCacheXaCommitsMostRecentSample()J
+#getCacheXaRollbacksMostRecentSample()J
@2.6.0
+#enableSampledStatistics(Lnet/sf/ehcache/util/FailSafeTimer;Lnet/sf/ehcache/util/counter/sampled/SampledCounterConfig;Lnet/sf/ehcache/util/counter/sampled/SampledRateCounterConfig;Lnet/sf/ehcache/util/counter/sampled/SampledRateCounterConfig;)V
+#getAverageGetTimeNanosMostRecentSample()J
+#notifyGetTimeNanos(J)V
+#getCacheHitSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissNotFoundSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementEvictedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementRemovedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementPutSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementUpdatedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getAverageGetTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageGetTimeNanosSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageSearchTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getSearchesPerSecondSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaCommitsSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaRollbacksSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitRatioMostRecentSample()I
+#getCacheHitRatioSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;

+###net/sf/ehcache/statistics/sampled/SampledCacheStatistics
@1.7.0-beta
+#getCacheHitMostRecentSample()J
+#getCacheHitInMemoryMostRecentSample()J
+#getCacheHitOnDiskMostRecentSample()J
+#getCacheMissMostRecentSample()J
+#getCacheMissExpiredMostRecentSample()J
+#getCacheMissNotFoundMostRecentSample()J
+#getCacheElementEvictedMostRecentSample()J
+#getCacheElementRemovedMostRecentSample()J
+#getCacheElementExpiredMostRecentSample()J
+#getCacheElementPutMostRecentSample()J
+#getCacheElementUpdatedMostRecentSample()J
+#getAverageGetTimeMostRecentSample()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#isSampledStatisticsEnabled()Z
+#dispose()V
@2.0.0-beta
+#clearStatistics()V
@2.3.0
+#getCacheHitOffHeapMostRecentSample()J
+#getCacheMissInMemoryMostRecentSample()J
+#getCacheMissOffHeapMostRecentSample()J
+#getCacheMissOnDiskMostRecentSample()J
@2.4.0
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#getCacheXaCommitsMostRecentSample()J
+#getCacheXaRollbacksMostRecentSample()J
@2.6.0
+#getCacheHitRatioMostRecentSample()I
*#getAverageGetTimeMostRecentSample()J[deprecated]
+#getAverageGetTimeNanosMostRecentSample()J

+###net/sf/ehcache/statistics/LiveCacheStatisticsData
@1.7.0-beta
+#setStatisticsEnabled(Z)V
+#clearStatistics()V
+#cacheHitInMemory()V
+#cacheHitOnDisk()V
+#cacheMissNotFound()V
+#cacheMissExpired()V
+#addGetTimeMillis(J)V
+#setStatisticsAccuracy(I)V
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
@2.3.0
+#cacheHitOffHeap()V
+#cacheMissInMemory()V
+#cacheMissOffHeap()V
+#cacheMissOnDisk()V
@2.4.0
+#xaCommit()V
+#xaRollback()V
@2.6.0
+#xaRecovered(I)V
*#addGetTimeMillis(J)V[deprecated]
+#addGetTimeNanos(J)V

+###net/sf/ehcache/statistics/LiveCacheStatistics
@1.7.0-beta
+#isStatisticsEnabled()Z
+#getCacheHitCount()J
+#getInMemoryHitCount()J
+#getOnDiskHitCount()J
+#getCacheMissCount()J
+#getCacheMissCountExpired()J
+#getSize()J
+#getInMemorySize()J
+#getOnDiskSize()J
+#getAverageGetTimeMillis()F
+#getEvictedCount()J
+#getPutCount()J
+#getUpdateCount()J
+#getExpiredCount()J
+#getRemovedCount()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#getCacheName()Ljava/lang/String;
@2.0.0-beta
+#clearStatistics()V
+#getMinGetTimeMillis()J
+#getMaxGetTimeMillis()J
@2.3.0
+#getOffHeapHitCount()J
+#getInMemoryMissCount()J
+#getOffHeapMissCount()J
+#getOnDiskMissCount()J
+#getOffHeapSize()J
@2.4.0
+#getWriterQueueLength()J
+#getXaCommitCount()J
+#getXaRollbackCount()J
@2.5.0
*#getInMemorySize()J[deprecated]
*#getOffHeapSize()J[deprecated]
*#getOnDiskSize()J[deprecated]
+#getLocalHeapSize()J
+#getLocalOffHeapSize()J
+#getLocalDiskSize()J
+#getLocalHeapSizeInBytes()J
+#getLocalOffHeapSizeInBytes()J
+#getLocalDiskSizeInBytes()J
@2.6.0
+#getCacheHitRatio()I
+#getAverageGetTimeNanos()J
*#getMinGetTimeMillis()J[deprecated]
*#getMaxGetTimeMillis()J[deprecated]
+#getMaxGetTimeNanos()J
+#getMinGetTimeNanos()J
+#getXaRecoveredCount()J

+###net/sf/ehcache/statistics/NullLiveCacheStatisticsData
@1.7.0-beta
+#<init>()V
+#getCacheName()Ljava/lang/String;
+#getAverageGetTimeMillis()F
+#getCacheHitCount()J
+#getCacheMissCount()J
+#getCacheMissCountExpired()J
+#getEvictedCount()J
+#getExpiredCount()J
+#getInMemoryHitCount()J
+#getInMemorySize()J
+#getOnDiskHitCount()J
+#getOnDiskSize()J
+#getPutCount()J
+#getRemovedCount()J
+#getSize()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#getUpdateCount()J
+#isStatisticsEnabled()Z
+#addGetTimeMillis(J)V
+#cacheHitInMemory()V
+#cacheHitOnDisk()V
+#cacheMissExpired()V
+#cacheMissNotFound()V
+#clearStatistics()V
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#setStatisticsAccuracy(I)V
+#setStatisticsEnabled(Z)V
+#dispose()V
+#notifyElementEvicted(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementExpired(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#clone()Ljava/lang/Object;
@2.0.0-beta
+#getMaxGetTimeMillis()J
+#getMinGetTimeMillis()J
@2.3.0
+#getInMemoryMissCount()J
+#getOffHeapMissCount()J
+#getOnDiskMissCount()J
+#getOffHeapHitCount()J
+#getOffHeapSize()J
+#cacheHitOffHeap()V
+#cacheMissInMemory()V
+#cacheMissOffHeap()V
+#cacheMissOnDisk()V
@2.4.0
+#xaCommit()V
+#xaRollback()V
+#getWriterQueueLength()J
+#getXaCommitCount()J
+#getXaRollbackCount()J
@2.5.0
*#getInMemorySize()J[deprecated]
*#getOffHeapSize()J[deprecated]
*#getOnDiskSize()J[deprecated]
+#getLocalHeapSize()J
+#getLocalOffHeapSize()J
+#getLocalDiskSize()J
+#getLocalHeapSizeInBytes()J
+#getLocalOffHeapSizeInBytes()J
+#getLocalDiskSizeInBytes()J
@2.6.0
+#xaRecovered(I)V
+#getXaRecoveredCount()J
+#addGetTimeNanos(J)V
+#getCacheHitRatio()I
+#getAverageGetTimeNanos()J
+#getMaxGetTimeNanos()J
+#getMinGetTimeNanos()J

+###net/sf/ehcache/statistics/CacheUsageListener
@1.7.0-beta
+#notifyStatisticsEnabledChanged(Z)V
+#notifyStatisticsCleared()V
+#notifyCacheHitInMemory()V
+#notifyCacheHitOnDisk()V
+#notifyCacheElementPut()V
+#notifyCacheElementUpdated()V
+#notifyCacheMissedWithNotFound()V
+#notifyCacheMissedWithExpired()V
+#notifyTimeTakenForGet(J)V
+#notifyCacheElementEvicted()V
+#notifyCacheElementExpired()V
+#notifyCacheElementRemoved()V
+#notifyRemoveAll()V
+#notifyStatisticsAccuracyChanged(I)V
+#dispose()V
@2.3.0
+#notifyCacheHitOffHeap()V
+#notifyCacheMissInMemory()V
+#notifyCacheMissOffHeap()V
+#notifyCacheMissOnDisk()V
@2.4.0
+#notifyCacheSearch(J)V
+#notifyXaCommit()V
+#notifyXaRollback()V
@2.6.0
*#notifyTimeTakenForGet(J)V[deprecated]
+#notifyGetTimeNanos(J)V

+###net/sf/ehcache/writer/writebehind/CoalesceKeysFilter
@2.0.0-beta
+#<init>()V
+#filter(Ljava/util/List;Lnet/sf/ehcache/writer/writebehind/OperationConverter;)V

+###net/sf/ehcache/writer/writebehind/operations/WriteOperation
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/Element;)V
+#<init>(Lnet/sf/ehcache/Element;J)V
+#performSingleOperation(Lnet/sf/ehcache/writer/CacheWriter;)V
+#createBatchOperation(Ljava/util/List;)Lnet/sf/ehcache/writer/writebehind/operations/BatchOperation;
+#getKey()Ljava/lang/Object;
+#getCreationTime()J
+#getElement()Lnet/sf/ehcache/Element;
@2.0.0
+#getType()Lnet/sf/ehcache/writer/writebehind/operations/SingleOperationType;
@2.5.0
+#throwAway(Lnet/sf/ehcache/writer/CacheWriter;Ljava/lang/RuntimeException;)V
@2.6.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###net/sf/ehcache/writer/writebehind/operations/SingleOperation
@2.0.0-beta
+#performSingleOperation(Lnet/sf/ehcache/writer/CacheWriter;)V
+#createBatchOperation(Ljava/util/List;)Lnet/sf/ehcache/writer/writebehind/operations/BatchOperation;
@2.0.0
+#getType()Lnet/sf/ehcache/writer/writebehind/operations/SingleOperationType;
@2.5.0
+#throwAway(Lnet/sf/ehcache/writer/CacheWriter;Ljava/lang/RuntimeException;)V

+###net/sf/ehcache/writer/writebehind/operations/KeyBasedOperation
@2.0.0-beta
+#getKey()Ljava/lang/Object;
+#getCreationTime()J

+###net/sf/ehcache/writer/writebehind/operations/SingleOperationType
@2.0.0
+#values()[Lnet/sf/ehcache/writer/writebehind/operations/SingleOperationType;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/writer/writebehind/operations/SingleOperationType;

+###net/sf/ehcache/writer/writebehind/operations/DeleteOperation
@2.0.0-beta
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;J)V
+#performSingleOperation(Lnet/sf/ehcache/writer/CacheWriter;)V
+#createBatchOperation(Ljava/util/List;)Lnet/sf/ehcache/writer/writebehind/operations/BatchOperation;
+#getKey()Ljava/lang/Object;
+#getCreationTime()J
@2.0.0
+#<init>(Lnet/sf/ehcache/CacheEntry;)V
+#<init>(Lnet/sf/ehcache/CacheEntry;J)V
+#getEntry()Lnet/sf/ehcache/CacheEntry;
+#getType()Lnet/sf/ehcache/writer/writebehind/operations/SingleOperationType;
-#<init>(Ljava/lang/Object;)V
-#<init>(Ljava/lang/Object;J)V
@2.5.0
+#throwAway(Lnet/sf/ehcache/writer/CacheWriter;Ljava/lang/RuntimeException;)V
@2.6.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###net/sf/ehcache/writer/writebehind/operations/DeleteAllOperation
@2.0.0-beta
+#<init>(Ljava/util/List;)V
+#performBatchOperation(Lnet/sf/ehcache/writer/CacheWriter;)V

+###net/sf/ehcache/writer/writebehind/operations/WriteAllOperation
@2.0.0-beta
+#<init>(Ljava/util/List;)V
+#performBatchOperation(Lnet/sf/ehcache/writer/CacheWriter;)V

+###net/sf/ehcache/writer/writebehind/operations/BatchOperation
@2.0.0-beta
+#performBatchOperation(Lnet/sf/ehcache/writer/CacheWriter;)V

+###net/sf/ehcache/writer/writebehind/WriteBehindManager
@2.0.0-beta
+#<init>()V
+#init(Lnet/sf/ehcache/Cache;)V
+#put(Lnet/sf/ehcache/Element;)V
+#remove(Ljava/lang/Object;)V
+#dispose()V
@2.0.0
+#remove(Lnet/sf/ehcache/CacheEntry;)V
-#remove(Ljava/lang/Object;)V
@2.4.0
+#getQueueSize()J
@2.6.0
+#<init>(Lnet/sf/ehcache/Cache;)V
-#<init>()V

+###net/sf/ehcache/writer/writebehind/OperationConverter
@2.0.0-beta
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/writer/writebehind/WriteBehindQueue
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#start(Lnet/sf/ehcache/writer/CacheWriter;)V
+#setOperationsFilter(Lnet/sf/ehcache/writer/writebehind/OperationsFilter;)V
+#write(Lnet/sf/ehcache/Element;)V
+#delete(Ljava/lang/Object;)V
+#stop()V
@2.0.0
+#delete(Lnet/sf/ehcache/CacheEntry;)V
-#delete(Ljava/lang/Object;)V
@2.4.0
-###net/sf/ehcache/writer/writebehind/WriteBehindQueue

+###net/sf/ehcache/writer/writebehind/OperationsFilter
@2.0.0-beta
+#filter(Ljava/util/List;Lnet/sf/ehcache/writer/writebehind/OperationConverter;)V

+###net/sf/ehcache/writer/writebehind/WriteBehind
@2.0.0-beta
+#start(Lnet/sf/ehcache/writer/CacheWriter;)V
+#write(Lnet/sf/ehcache/Element;)V
+#delete(Ljava/lang/Object;)V
+#setOperationsFilter(Lnet/sf/ehcache/writer/writebehind/OperationsFilter;)V
+#stop()V
@2.0.0
+#delete(Lnet/sf/ehcache/CacheEntry;)V
-#delete(Ljava/lang/Object;)V
@2.4.0
+#getQueueSize()J

+###net/sf/ehcache/writer/writebehind/CastingOperationConverter
@2.0.0-beta
+#getInstance()Lnet/sf/ehcache/writer/writebehind/CastingOperationConverter;
+#convert(Ljava/lang/Object;)Lnet/sf/ehcache/writer/writebehind/operations/KeyBasedOperation;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/writer/CacheWriterManager
@2.0.0-beta
+#init(Lnet/sf/ehcache/Cache;)V
+#put(Lnet/sf/ehcache/Element;)V
+#remove(Ljava/lang/Object;)V
+#dispose()V
@2.0.0
+#remove(Lnet/sf/ehcache/CacheEntry;)V
-#remove(Ljava/lang/Object;)V

+###net/sf/ehcache/writer/CacheWriterManagerException
@2.0.0-beta
+#<init>(Ljava/lang/RuntimeException;)V
+#getCause()Ljava/lang/RuntimeException;
+#getCause()Ljava/lang/Throwable;

+###net/sf/ehcache/writer/writethrough/WriteThroughManager
@2.0.0-beta
+#<init>()V
+#init(Lnet/sf/ehcache/Cache;)V
+#put(Lnet/sf/ehcache/Element;)V
+#remove(Ljava/lang/Object;)V
+#dispose()V
@2.0.0
+#remove(Lnet/sf/ehcache/CacheEntry;)V
-#remove(Ljava/lang/Object;)V

+###net/sf/ehcache/writer/CacheWriter
@2.0.0-beta
+#clone(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/writer/CacheWriter;
+#init()V
+#dispose()V
+#write(Lnet/sf/ehcache/Element;)V
+#writeAll(Ljava/util/Collection;)V
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/util/Collection;)V
@2.0.0
+#delete(Lnet/sf/ehcache/CacheEntry;)V
-#delete(Ljava/lang/Object;)V
@2.5.0
+#throwAway(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/writebehind/operations/SingleOperationType;Ljava/lang/RuntimeException;)V

+###net/sf/ehcache/writer/AbstractCacheWriter
@2.0.0
+#<init>()V
+#write(Lnet/sf/ehcache/Element;)V
+#writeAll(Ljava/util/Collection;)V
+#delete(Lnet/sf/ehcache/CacheEntry;)V
+#deleteAll(Ljava/util/Collection;)V
+#clone(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/writer/CacheWriter;
+#init()V
+#dispose()V
@2.5.0
+#throwAway(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/writebehind/operations/SingleOperationType;Ljava/lang/RuntimeException;)V

+###net/sf/ehcache/writer/CacheWriterFactory
@2.0.0-beta
+#<init>()V
+#createCacheWriter(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)Lnet/sf/ehcache/writer/CacheWriter;

+###net/sf/ehcache/hibernate/ccs/EhcacheReadOnlyCache
@2.0.0-beta
+#<init>()V
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#lock(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#put(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Ljava/util/Comparator;Z)Z
+#release(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#afterUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)Z
+#afterInsert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;)V
+#insert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###net/sf/ehcache/hibernate/ccs/EhcacheNonstrictReadWriteCache
@2.0.0-beta
+#<init>()V
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Ljava/util/Comparator;Z)Z
+#lock(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#evict(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#insert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#release(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#afterUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)Z
+#afterInsert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache
@2.0.0-beta
+#<init>()V
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Ljava/util/Comparator;Z)Z
+#lock(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#release(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#afterUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)Z
+#afterInsert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#insert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

+###net/sf/ehcache/hibernate/regions/EhcacheQueryResultsRegion
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)V
+#evictAll()V
+#evict(Ljava/lang/Object;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.4.0
+#<init>(Lnet/sf/ehcache/hibernate/strategy/EhcacheAccessStrategyFactory;Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)V
-#<init>(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)V

+###net/sf/ehcache/hibernate/regions/EhcacheTimestampsRegion
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)V
+#evictAll()V
+#evict(Ljava/lang/Object;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.4.0
+#<init>(Lnet/sf/ehcache/hibernate/strategy/EhcacheAccessStrategyFactory;Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)V
-#<init>(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)V

+###net/sf/ehcache/hibernate/regions/EhcacheTransactionalDataRegion
@2.0.0-beta
+#isTransactionAware()Z
+#getCacheDataDescription()Lorg/hibernate/cache/CacheDataDescription;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)V
+#clear()V
+#writeLock(Ljava/lang/Object;)V
+#writeUnlock(Ljava/lang/Object;)V
+#readLock(Ljava/lang/Object;)V
+#readUnlock(Ljava/lang/Object;)V
+#locksAreIndependentOfCache()Z
@2.4.0
+#getSettings()Lorg/hibernate/cfg/Settings;
@2.5.2
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)V

+###net/sf/ehcache/hibernate/regions/EhcacheDataRegion
@2.0.0-beta
+#getName()Ljava/lang/String;
+#destroy()V
+#getSizeInMemory()J
+#getElementCountInMemory()J
+#getElementCountOnDisk()J
+#toMap()Ljava/util/Map;
+#nextTimestamp()J
+#getTimeout()I
+#getEhcache()Lnet/sf/ehcache/Ehcache;
@2.0.0
+#contains(Ljava/lang/Object;)Z

+###net/sf/ehcache/hibernate/regions/EhcacheEntityRegion
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;Lorg/hibernate/cfg/Settings;Lorg/hibernate/cache/CacheDataDescription;Ljava/util/Properties;)V
+#buildAccessStrategy(Lorg/hibernate/cache/access/AccessType;)Lorg/hibernate/cache/access/EntityRegionAccessStrategy;
@2.4.0
+#<init>(Lnet/sf/ehcache/hibernate/strategy/EhcacheAccessStrategyFactory;Lnet/sf/ehcache/Ehcache;Lorg/hibernate/cfg/Settings;Lorg/hibernate/cache/CacheDataDescription;Ljava/util/Properties;)V
-#<init>(Lnet/sf/ehcache/Ehcache;Lorg/hibernate/cfg/Settings;Lorg/hibernate/cache/CacheDataDescription;Ljava/util/Properties;)V

+###net/sf/ehcache/hibernate/regions/EhcacheCollectionRegion
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;Lorg/hibernate/cfg/Settings;Lorg/hibernate/cache/CacheDataDescription;Ljava/util/Properties;)V
+#buildAccessStrategy(Lorg/hibernate/cache/access/AccessType;)Lorg/hibernate/cache/access/CollectionRegionAccessStrategy;
@2.4.0
+#<init>(Lnet/sf/ehcache/hibernate/strategy/EhcacheAccessStrategyFactory;Lnet/sf/ehcache/Ehcache;Lorg/hibernate/cfg/Settings;Lorg/hibernate/cache/CacheDataDescription;Ljava/util/Properties;)V
-#<init>(Lnet/sf/ehcache/Ehcache;Lorg/hibernate/cfg/Settings;Lorg/hibernate/cache/CacheDataDescription;Ljava/util/Properties;)V

+###net/sf/ehcache/hibernate/management/api/HibernateStats
@2.0.0-beta
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#enableStats()V
+#disableStats()V
+#clearStats()V
+#getQueryExecutionCount()J
+#getQueryExecutionSample()J
+#getQueryExecutionRate()D
+#getCloseStatementCount()J
+#getConnectCount()J
+#getFlushCount()J
+#getOptimisticFailureCount()J
+#getPrepareStatementCount()J
+#getSessionCloseCount()J
+#getSessionOpenCount()J
+#getSuccessfulTransactionCount()J
+#getTransactionCount()J
+#getEntityStats()Ljavax/management/openmbean/TabularData;
+#getCollectionStats()Ljavax/management/openmbean/TabularData;
+#getQueryStats()Ljavax/management/openmbean/TabularData;
+#getCacheRegionStats()Ljavax/management/openmbean/TabularData;

+###net/sf/ehcache/hibernate/management/api/EhcacheStats
@2.0.0-beta
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#enableStats()V
+#disableStats()V
+#clearStats()V
+#getOriginalConfigDeclaration()Ljava/lang/String;
+#getOriginalConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#generateActiveConfigDeclaration()Ljava/lang/String;
+#generateActiveConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#isTerracottaHibernateCache(Ljava/lang/String;)Z
+#getTerracottaHibernateCacheRegionNames()[Ljava/lang/String;
+#getRegionCacheAttributes(Ljava/lang/String;)Ljava/util/Map;
+#getRegionCacheAttributes()Ljava/util/Map;
+#isRegionCacheEnabled(Ljava/lang/String;)Z
+#setRegionCacheEnabled(Ljava/lang/String;Z)V
+#isRegionCachesEnabled()Z
+#setRegionCachesEnabled(Z)V
+#getRegionCacheMaxTTISeconds(Ljava/lang/String;)I
+#setRegionCacheMaxTTISeconds(Ljava/lang/String;I)V
+#getRegionCacheMaxTTLSeconds(Ljava/lang/String;)I
+#setRegionCacheMaxTTLSeconds(Ljava/lang/String;I)V
+#getRegionCacheTargetMaxInMemoryCount(Ljava/lang/String;)I
+#setRegionCacheTargetMaxInMemoryCount(Ljava/lang/String;I)V
+#getRegionCacheTargetMaxTotalCount(Ljava/lang/String;)I
+#setRegionCacheTargetMaxTotalCount(Ljava/lang/String;I)V
+#isRegionCacheLoggingEnabled(Ljava/lang/String;)Z
+#setRegionCacheLoggingEnabled(Ljava/lang/String;Z)V
+#isRegionCacheOrphanEvictionEnabled(Ljava/lang/String;)Z
+#getRegionCacheOrphanEvictionPeriod(Ljava/lang/String;)I
+#flushRegionCache(Ljava/lang/String;)V
+#flushRegionCaches()V
+#getCacheHitCount()J
+#getCacheHitSample()J
+#getCacheHitRate()D
+#getCacheMissCount()J
+#getCacheMissSample()J
+#getCacheMissRate()D
+#getCachePutSample()J
+#getCachePutCount()J
+#getCachePutRate()D
+#getRegionCacheSamples()Ljava/util/Map;
+#getNumberOfElementsInMemory(Ljava/lang/String;)I
+#getNumberOfElementsOnDisk(Ljava/lang/String;)I
+#getMinGetTimeMillis()J
+#getMaxGetTimeMillis()J
+#getAverageGetTimeMillis(Ljava/lang/String;)F
+#getMinGetTimeMillis(Ljava/lang/String;)J
+#getMaxGetTimeMillis(Ljava/lang/String;)J
@2.3.0
+#getNumberOfElementsOffHeap(Ljava/lang/String;)I

+###net/sf/ehcache/hibernate/management/api/EhcacheHibernateMBean
@2.0.0-beta
+#isHibernateStatisticsSupported()Z

+###net/sf/ehcache/hibernate/management/impl/CacheRegionStats
@2.0.0-beta
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/hibernate/stat/SecondLevelCacheStatistics;)V
+#<init>(Ljavax/management/openmbean/CompositeData;)V
+#toString()Ljava/lang/String;
+#getRegion()Ljava/lang/String;
+#getShortName()Ljava/lang/String;
+#getHitCount()J
+#getMissCount()J
+#getPutCount()J
+#getHitRatio()D
+#getElementCountInMemory()J
+#getElementCountOnDisk()J
+#getElementCountTotal()J
+#getHitLatency()J
+#getLoadLatency()J
+#getLatencyCacheHit()J
+#getLatencyCacheTime()J
+#getLatencyDbHit()J
+#getLatencyDbTime()J
+#toCompositeData()Ljavax/management/openmbean/CompositeData;
+#newTabularDataInstance()Ljavax/management/openmbean/TabularData;
+#fromTabularData(Ljavax/management/openmbean/TabularData;)[Lnet/sf/ehcache/hibernate/management/impl/CacheRegionStats;
@2.1.0-beta
-#getHitLatency()J
-#getLoadLatency()J
-#getLatencyCacheHit()J
-#getLatencyCacheTime()J
-#getLatencyDbHit()J
-#getLatencyDbTime()J

+###net/sf/ehcache/hibernate/management/impl/EntityStats
@2.0.0-beta
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/hibernate/stat/EntityStatistics;)V
+#<init>(Ljavax/management/openmbean/CompositeData;)V
+#add(Lnet/sf/ehcache/hibernate/management/impl/EntityStats;)V
+#toString()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getShortName()Ljava/lang/String;
+#getLoadCount()J
+#getUpdateCount()J
+#getInsertCount()J
+#getDeleteCount()J
+#getFetchCount()J
+#getOptimisticFailureCount()J
+#toCompositeData()Ljavax/management/openmbean/CompositeData;
+#newTabularDataInstance()Ljavax/management/openmbean/TabularData;
+#fromTabularData(Ljavax/management/openmbean/TabularData;)[Lnet/sf/ehcache/hibernate/management/impl/EntityStats;

+###net/sf/ehcache/hibernate/management/impl/CollectionStats
@2.0.0-beta
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/hibernate/stat/CollectionStatistics;)V
+#<init>(Ljavax/management/openmbean/CompositeData;)V
+#add(Lnet/sf/ehcache/hibernate/management/impl/CollectionStats;)V
+#toString()Ljava/lang/String;
+#getRoleName()Ljava/lang/String;
+#getShortName()Ljava/lang/String;
+#getLoadCount()J
+#getFetchCount()J
+#getUpdateCount()J
+#getRemoveCount()J
+#getRecreateCount()J
+#toCompositeData()Ljavax/management/openmbean/CompositeData;
+#newTabularDataInstance()Ljavax/management/openmbean/TabularData;
+#fromTabularData(Ljavax/management/openmbean/TabularData;)[Lnet/sf/ehcache/hibernate/management/impl/CollectionStats;

+###net/sf/ehcache/hibernate/management/impl/EhcacheHibernate
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/CacheManager;)V
+#enableHibernateStatistics(Lorg/hibernate/SessionFactory;)V
+#isHibernateStatisticsSupported()Z
+#setStatisticsEnabled(Z)V
+#isStatisticsEnabled()Z
+#clearStats()V
+#disableStats()V
+#enableStats()V
+#flushRegionCache(Ljava/lang/String;)V
+#flushRegionCaches()V
+#generateActiveConfigDeclaration()Ljava/lang/String;
+#generateActiveConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#getCacheHitCount()J
+#getCacheHitRate()D
+#getCacheHitSample()J
+#getCacheMissCount()J
+#getCacheMissRate()D
+#getCacheMissSample()J
+#getCachePutCount()J
+#getCachePutRate()D
+#getCachePutSample()J
+#getCacheRegionStats()Ljavax/management/openmbean/TabularData;
+#getCloseStatementCount()J
+#getCollectionStats()Ljavax/management/openmbean/TabularData;
+#getConnectCount()J
+#getEntityStats()Ljavax/management/openmbean/TabularData;
+#getFlushCount()J
+#getOptimisticFailureCount()J
+#getOriginalConfigDeclaration()Ljava/lang/String;
+#getOriginalConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#getPrepareStatementCount()J
+#getQueryExecutionCount()J
+#getQueryExecutionRate()D
+#getQueryExecutionSample()J
+#getQueryStats()Ljavax/management/openmbean/TabularData;
+#getRegionCacheAttributes()Ljava/util/Map;
+#getRegionCacheAttributes(Ljava/lang/String;)Ljava/util/Map;
+#getRegionCacheMaxTTISeconds(Ljava/lang/String;)I
+#getRegionCacheMaxTTLSeconds(Ljava/lang/String;)I
+#getRegionCacheOrphanEvictionPeriod(Ljava/lang/String;)I
+#getRegionCacheSamples()Ljava/util/Map;
+#getRegionCacheTargetMaxInMemoryCount(Ljava/lang/String;)I
+#getRegionCacheTargetMaxTotalCount(Ljava/lang/String;)I
+#getSessionCloseCount()J
+#getSessionOpenCount()J
+#getSuccessfulTransactionCount()J
+#getTerracottaHibernateCacheRegionNames()[Ljava/lang/String;
+#getTransactionCount()J
+#isRegionCacheEnabled(Ljava/lang/String;)Z
+#setRegionCachesEnabled(Z)V
+#setRegionCacheEnabled(Ljava/lang/String;Z)V
+#isRegionCacheLoggingEnabled(Ljava/lang/String;)Z
+#isRegionCacheOrphanEvictionEnabled(Ljava/lang/String;)Z
+#isRegionCachesEnabled()Z
+#isTerracottaHibernateCache(Ljava/lang/String;)Z
+#setRegionCacheLoggingEnabled(Ljava/lang/String;Z)V
+#setRegionCacheMaxTTISeconds(Ljava/lang/String;I)V
+#setRegionCacheMaxTTLSeconds(Ljava/lang/String;I)V
+#setRegionCacheTargetMaxInMemoryCount(Ljava/lang/String;I)V
+#setRegionCacheTargetMaxTotalCount(Ljava/lang/String;I)V
+#getNumberOfElementsInMemory(Ljava/lang/String;)I
+#getNumberOfElementsOnDisk(Ljava/lang/String;)I
+#getMaxGetTimeMillis()J
+#getMaxGetTimeMillis(Ljava/lang/String;)J
+#getMinGetTimeMillis()J
+#getMinGetTimeMillis(Ljava/lang/String;)J
+#getAverageGetTimeMillis(Ljava/lang/String;)F
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
@2.3.0
+#getNumberOfElementsOffHeap(Ljava/lang/String;)I

+###net/sf/ehcache/hibernate/management/impl/CacheRegionUtils
@2.0.0-beta
+#<init>()V
+#determineShortName(Ljava/lang/String;)Ljava/lang/String;

+###net/sf/ehcache/hibernate/management/impl/BaseEmitterBean
@2.0.0-beta
+#sendNotification(Ljava/lang/String;)V
+#sendNotification(Ljava/lang/String;Ljava/lang/Object;)V
+#sendNotification(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
+#addNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
+#removeNotificationListener(Ljavax/management/NotificationListener;)V
+#removeNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
@2.4.0
+#dispose()V

+###net/sf/ehcache/hibernate/management/impl/QueryStats
@2.0.0-beta
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/hibernate/stat/QueryStatistics;)V
+#<init>(Ljavax/management/openmbean/CompositeData;)V
+#add(Lnet/sf/ehcache/hibernate/management/impl/QueryStats;)V
+#toString()Ljava/lang/String;
+#getQuery()Ljava/lang/String;
+#getCacheHitCount()J
+#getCacheMissCount()J
+#getCachePutCount()J
+#getExecutionCount()J
+#getExecutionRowCount()J
+#getExecutionAvgTime()J
+#getExecutionMaxTime()J
+#getExecutionMinTime()J
+#toCompositeData()Ljavax/management/openmbean/CompositeData;
+#newTabularDataInstance()Ljavax/management/openmbean/TabularData;
+#fromTabularData(Ljavax/management/openmbean/TabularData;)[Lnet/sf/ehcache/hibernate/management/impl/QueryStats;

+###net/sf/ehcache/hibernate/management/impl/NullHibernateStats
@2.0.0-beta
+#clearStats()V
+#disableStats()V
+#enableStats()V
+#getCloseStatementCount()J
+#getCollectionStats()Ljavax/management/openmbean/TabularData;
+#getConnectCount()J
+#getDBSQLExecutionSample()J
+#getEntityStats()Ljavax/management/openmbean/TabularData;
+#getFlushCount()J
+#getOptimisticFailureCount()J
+#getPrepareStatementCount()J
+#getQueryExecutionCount()J
+#getQueryExecutionRate()D
+#getQueryExecutionSample()J
+#getQueryStats()Ljavax/management/openmbean/TabularData;
+#getSessionCloseCount()J
+#getSessionOpenCount()J
+#getSuccessfulTransactionCount()J
+#getTransactionCount()J
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#getCacheRegionStats()Ljavax/management/openmbean/TabularData;
+#removeNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#addNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
+#removeNotificationListener(Ljavax/management/NotificationListener;)V

+###net/sf/ehcache/hibernate/management/impl/EhcacheStatsImpl
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/CacheManager;)V
+#isStatisticsEnabled()Z
+#clearStats()V
+#disableStats()V
+#enableStats()V
+#flushRegionCache(Ljava/lang/String;)V
+#flushRegionCaches()V
+#generateActiveConfigDeclaration()Ljava/lang/String;
+#generateActiveConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#getCacheHitCount()J
+#getCacheHitRate()D
+#getCacheHitSample()J
+#getCacheMissCount()J
+#getCacheMissRate()D
+#getCacheMissSample()J
+#getCachePutCount()J
+#getCachePutRate()D
+#getCachePutSample()J
+#getOriginalConfigDeclaration()Ljava/lang/String;
+#getOriginalConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#getRegionCacheAttributes()Ljava/util/Map;
+#getRegionCacheAttributes(Ljava/lang/String;)Ljava/util/Map;
+#getRegionCacheMaxTTISeconds(Ljava/lang/String;)I
+#getRegionCacheMaxTTLSeconds(Ljava/lang/String;)I
+#getRegionCacheOrphanEvictionPeriod(Ljava/lang/String;)I
+#getRegionCacheSamples()Ljava/util/Map;
+#getRegionCacheTargetMaxInMemoryCount(Ljava/lang/String;)I
+#getRegionCacheTargetMaxTotalCount(Ljava/lang/String;)I
+#getTerracottaHibernateCacheRegionNames()[Ljava/lang/String;
+#isRegionCacheEnabled(Ljava/lang/String;)Z
+#setRegionCacheEnabled(Ljava/lang/String;Z)V
+#isRegionCachesEnabled()Z
+#setRegionCachesEnabled(Z)V
+#isRegionCacheLoggingEnabled(Ljava/lang/String;)Z
+#isRegionCacheOrphanEvictionEnabled(Ljava/lang/String;)Z
+#isTerracottaHibernateCache(Ljava/lang/String;)Z
+#setRegionCacheLoggingEnabled(Ljava/lang/String;Z)V
+#setRegionCacheMaxTTISeconds(Ljava/lang/String;I)V
+#setRegionCacheMaxTTLSeconds(Ljava/lang/String;I)V
+#setRegionCacheTargetMaxInMemoryCount(Ljava/lang/String;I)V
+#setRegionCacheTargetMaxTotalCount(Ljava/lang/String;I)V
+#getNumberOfElementsInMemory(Ljava/lang/String;)I
+#getNumberOfElementsOnDisk(Ljava/lang/String;)I
+#setStatisticsEnabled(Z)V
+#getMaxGetTimeMillis()J
+#getMinGetTimeMillis()J
+#getMaxGetTimeMillis(Ljava/lang/String;)J
+#getMinGetTimeMillis(Ljava/lang/String;)J
+#getAverageGetTimeMillis(Ljava/lang/String;)F
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
@2.3.0
+#getNumberOfElementsOffHeap(Ljava/lang/String;)I

+###net/sf/ehcache/hibernate/management/impl/EhcacheHibernateMbeanNames
@2.0.0-beta
+#<init>()V
+#getCacheManagerObjectName(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
@2.1.0-beta
+#mbeanSafe(Ljava/lang/String;)Ljava/lang/String;

+###net/sf/ehcache/hibernate/management/impl/ProviderMBeanRegistrationHelper
@2.0.0-beta
+#<init>()V
+#registerMBean(Lnet/sf/ehcache/CacheManager;Ljava/util/Properties;)V
@2.4.0
+#unregisterMBean()V

+###net/sf/ehcache/hibernate/management/impl/HibernateStatsImpl
@2.0.0-beta
+#<init>(Lorg/hibernate/SessionFactory;)V
+#clearStats()V
+#disableStats()V
+#enableStats()V
+#getCloseStatementCount()J
+#getConnectCount()J
+#getDBSQLExecutionSample()J
+#getFlushCount()J
+#getOptimisticFailureCount()J
+#getPrepareStatementCount()J
+#getQueryExecutionCount()J
+#getQueryExecutionRate()D
+#getQueryExecutionSample()J
+#getSessionCloseCount()J
+#getSessionOpenCount()J
+#getSuccessfulTransactionCount()J
+#getTransactionCount()J
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#getEntityStats()Ljavax/management/openmbean/TabularData;
+#getCollectionStats()Ljavax/management/openmbean/TabularData;
+#getQueryStats()Ljavax/management/openmbean/TabularData;
+#getCacheRegionStats()Ljavax/management/openmbean/TabularData;
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;

+###net/sf/ehcache/hibernate/management/impl/EhcacheHibernateMBeanRegistrationImpl
@2.0.0-beta
+#<init>()V
+#registerMBeanForCacheManager(Lnet/sf/ehcache/CacheManager;Ljava/util/Properties;)V
+#enableHibernateStatisticsSupport(Lorg/hibernate/SessionFactory;)V
+#dispose()V
+#getStatus()Lnet/sf/ehcache/Status;
+#init()V
+#notifyCacheAdded(Ljava/lang/String;)V
+#notifyCacheRemoved(Ljava/lang/String;)V

+###net/sf/ehcache/hibernate/management/impl/EhcacheHibernateMBeanRegistration
@2.0.0-beta
+#registerMBeanForCacheManager(Lnet/sf/ehcache/CacheManager;Ljava/util/Properties;)V
+#enableHibernateStatisticsSupport(Lorg/hibernate/SessionFactory;)V

+###net/sf/ehcache/hibernate/management/impl/AggregateCacheRegionStats
@2.0.0-beta
+#<init>(Ljava/lang/String;)V
+#aggregate(Lnet/sf/ehcache/hibernate/management/impl/CacheRegionStats;)V
+#getElementCountInMemory()J

+###net/sf/ehcache/hibernate/SingletonEhCacheRegionFactory
@2.0.0-beta
+#<init>(Ljava/util/Properties;)V
+#start(Lorg/hibernate/cfg/Settings;Ljava/util/Properties;)V
+#stop()V
+#buildTimestampsRegion(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/TimestampsRegion;
+#buildQueryResultsRegion(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/QueryResultsRegion;
+#buildCollectionRegion(Ljava/lang/String;Ljava/util/Properties;Lorg/hibernate/cache/CacheDataDescription;)Lorg/hibernate/cache/CollectionRegion;
+#buildEntityRegion(Ljava/lang/String;Ljava/util/Properties;Lorg/hibernate/cache/CacheDataDescription;)Lorg/hibernate/cache/EntityRegion;
+#nextTimestamp()J
+#isMinimalPutsEnabledByDefault()Z
@2.0.0
+#getDefaultAccessType()Lorg/hibernate/cache/access/AccessType;

+###net/sf/ehcache/hibernate/HibernateUtil
@2.0.0-beta

+###net/sf/ehcache/hibernate/SingletonEhCacheProvider
@1.6.2
+#<init>()V
+#buildCache(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/Cache;
+#nextTimestamp()J
+#start(Ljava/util/Properties;)V
+#stop()V
+#isMinimalPutsEnabledByDefault()Z
@2.0.0-beta
-#buildCache(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/Cache;
-#nextTimestamp()J
-#isMinimalPutsEnabledByDefault()Z

+###net/sf/ehcache/hibernate/EhCacheProvider
@1.6.2
+#<init>()V
+#buildCache(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/Cache;
+#nextTimestamp()J
+#start(Ljava/util/Properties;)V
+#stop()V
+#isMinimalPutsEnabledByDefault()Z
@2.0.0-beta
-#buildCache(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/Cache;
-#nextTimestamp()J
-#isMinimalPutsEnabledByDefault()Z

+###net/sf/ehcache/hibernate/EhCache
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#read(Ljava/lang/Object;)Ljava/lang/Object;
+#update(Ljava/lang/Object;Ljava/lang/Object;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)V
+#clear()V
+#destroy()V
+#lock(Ljava/lang/Object;)V
+#unlock(Ljava/lang/Object;)V
+#nextTimestamp()J
+#getTimeout()I
+#getRegionName()Ljava/lang/String;
+#getSizeInMemory()J
+#getElementCountInMemory()J
+#getElementCountOnDisk()J
+#toMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
@2.0.0-beta
+#canLockEntries()Z

+###net/sf/ehcache/hibernate/EhCacheRegionFactory
@2.0.0-beta
+#<init>(Ljava/util/Properties;)V
+#start(Lorg/hibernate/cfg/Settings;Ljava/util/Properties;)V
+#stop()V
+#buildTimestampsRegion(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/TimestampsRegion;
+#buildQueryResultsRegion(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/QueryResultsRegion;
+#buildCollectionRegion(Ljava/lang/String;Ljava/util/Properties;Lorg/hibernate/cache/CacheDataDescription;)Lorg/hibernate/cache/CollectionRegion;
+#buildEntityRegion(Ljava/lang/String;Ljava/util/Properties;Lorg/hibernate/cache/CacheDataDescription;)Lorg/hibernate/cache/EntityRegion;
+#nextTimestamp()J
+#isMinimalPutsEnabledByDefault()Z
@2.0.0
+#getDefaultAccessType()Lorg/hibernate/cache/access/AccessType;

+###net/sf/ehcache/hibernate/strategy/ReadOnlyEhcacheCollectionRegionAccessStrategy
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/hibernate/regions/EhcacheCollectionRegion;Lorg/hibernate/cfg/Settings;)V
+#getRegion()Lorg/hibernate/cache/CollectionRegion;
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Z)Z
+#lockItem(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#unlockItem(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#remove(Ljava/lang/Object;)V

+###net/sf/ehcache/hibernate/strategy/AbstractReadWriteEhcacheAccessStrategy$Lock
@2.0.0-beta
+#isReadable(J)Z
+#isWriteable(JLjava/lang/Object;Ljava/util/Comparator;)Z
+#getValue()Ljava/lang/Object;
+#isUnlockable(Lorg/hibernate/cache/access/SoftLock;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#wasLockedConcurrently()Z
+#lock(JLjava/util/UUID;J)Lnet/sf/ehcache/hibernate/strategy/AbstractReadWriteEhcacheAccessStrategy$Lock;
+#unlock(J)V
@2.3.0
+#toString()Ljava/lang/String;
@2.5.2
+#isLocked()Z

+###net/sf/ehcache/hibernate/strategy/ReadOnlyEhcacheEntityRegionAccessStrategy
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/hibernate/regions/EhcacheEntityRegion;Lorg/hibernate/cfg/Settings;)V
+#getRegion()Lorg/hibernate/cache/EntityRegion;
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Z)Z
+#lockItem(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#unlockItem(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#insert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#afterInsert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#afterUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)Z
+#remove(Ljava/lang/Object;)V

+###net/sf/ehcache/hibernate/strategy/AbstractReadWriteEhcacheAccessStrategy$Lockable
@2.0.0-beta
+#isReadable(J)Z
+#isWriteable(JLjava/lang/Object;Ljava/util/Comparator;)Z
+#getValue()Ljava/lang/Object;
+#isUnlockable(Lorg/hibernate/cache/access/SoftLock;)Z
+#lock(JLjava/util/UUID;J)Lnet/sf/ehcache/hibernate/strategy/AbstractReadWriteEhcacheAccessStrategy$Lock;

+###net/sf/ehcache/hibernate/strategy/NonStrictReadWriteEhcacheCollectionRegionAccessStrategy
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/hibernate/regions/EhcacheCollectionRegion;Lorg/hibernate/cfg/Settings;)V
+#getRegion()Lorg/hibernate/cache/CollectionRegion;
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Z)Z
+#lockItem(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#unlockItem(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#remove(Ljava/lang/Object;)V

+###net/sf/ehcache/hibernate/strategy/ReadWriteEhcacheCollectionRegionAccessStrategy
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/hibernate/regions/EhcacheCollectionRegion;Lorg/hibernate/cfg/Settings;)V
+#getRegion()Lorg/hibernate/cache/CollectionRegion;
+#remove(Ljava/lang/Object;)V

+###net/sf/ehcache/hibernate/strategy/AbstractReadWriteEhcacheAccessStrategy$Item
@2.0.0-beta
+#isReadable(J)Z
+#isWriteable(JLjava/lang/Object;Ljava/util/Comparator;)Z
+#getValue()Ljava/lang/Object;
+#isUnlockable(Lorg/hibernate/cache/access/SoftLock;)Z
+#lock(JLjava/util/UUID;J)Lnet/sf/ehcache/hibernate/strategy/AbstractReadWriteEhcacheAccessStrategy$Lock;

+###net/sf/ehcache/hibernate/strategy/NonStrictReadWriteEhcacheEntityRegionAccessStrategy
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/hibernate/regions/EhcacheEntityRegion;Lorg/hibernate/cfg/Settings;)V
+#getRegion()Lorg/hibernate/cache/EntityRegion;
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Z)Z
+#lockItem(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#unlockItem(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#insert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#afterInsert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#afterUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)Z
+#remove(Ljava/lang/Object;)V

+###net/sf/ehcache/hibernate/strategy/ReadWriteEhcacheEntityRegionAccessStrategy
@2.0.0-beta
+#<init>(Lnet/sf/ehcache/hibernate/regions/EhcacheEntityRegion;Lorg/hibernate/cfg/Settings;)V
+#getRegion()Lorg/hibernate/cache/EntityRegion;
+#insert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#afterInsert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#afterUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)Z
+#remove(Ljava/lang/Object;)V

+###net/sf/ehcache/CacheException
@1.6.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###net/sf/ehcache/Element
@1.6.2
+#<init>(Ljava/io/Serializable;Ljava/io/Serializable;J)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;J)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;JJJJJJ)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V
+#<init>(Ljava/io/Serializable;Ljava/io/Serializable;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getKey()Ljava/io/Serializable;
+#getObjectKey()Ljava/lang/Object;
+#getValue()Ljava/io/Serializable;
+#getObjectValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#setTimeToLive(I)V
+#setTimeToIdle(I)V
+#hashCode()I
+#setVersion(J)V
+#getCreationTime()J
+#getLatestOfCreationAndUpdateTime()J
+#setCreateTime()V
+#getVersion()J
+#getLastAccessTime()J
+#getNextToLastAccessTime()J
+#getHitCount()J
+#resetAccessStatistics()V
+#updateAccessStatistics()V
+#updateUpdateStatistics()V
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#getSerializedSize()J
+#isSerializable()Z
+#isKeySerializable()Z
+#getLastUpdateTime()J
+#isExpired()Z
+#getExpirationTime()J
+#isEternal()Z
+#setEternal(Z)V
+#isLifespanSet()Z
+#getTimeToLive()I
+#getTimeToIdle()I
@1.7.0-beta
*#<init>(Ljava/lang/Object;Ljava/lang/Object;JJJJJJ)V[deprecated]
+#<init>(Ljava/lang/Object;Ljava/lang/Object;JJJJJ)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;JJJJIIJ)V
*#setCreateTime()V[deprecated]
*#getNextToLastAccessTime()J[deprecated]
+#getElementEvictionData()Lnet/sf/ehcache/ElementEvictionData;
+#setElementEvictionData(Lnet/sf/ehcache/ElementEvictionData;)V
@2.0.0-beta
+#<init>(Ljava/lang/Object;Ljava/lang/Object;JJJJZIIJ)V
+#isExpired(Lnet/sf/ehcache/config/CacheConfiguration;)Z
+#usesCacheDefaultLifespan()Z
-#<init>(Ljava/lang/Object;Ljava/lang/Object;JJJJIIJ)V
@2.6.2
*#getKey()Ljava/io/Serializable;[deprecated]
*#getValue()Ljava/io/Serializable;[deprecated]

+###net/sf/ehcache/distribution/CacheManagerPeerListenerFactory
@1.6.2
+#<init>()V
+#createCachePeerListener(Lnet/sf/ehcache/CacheManager;Ljava/util/Properties;)Lnet/sf/ehcache/distribution/CacheManagerPeerListener;

+###net/sf/ehcache/distribution/RMIAsynchronousCacheReplicator
@1.6.2
+#<init>(ZZZZZI)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#dispose()V
+#clone()Ljava/lang/Object;
@2.4.8
+#<init>(ZZZZZII)V
-#<init>(ZZZZZI)V
@2.5.0
+#<init>(ZZZZZI)V
-#<init>(ZZZZZII)V
@2.5.2
+#<init>(ZZZZZII)V
-#<init>(ZZZZZI)V

+###net/sf/ehcache/distribution/CachePeer
@1.6.2
+#put(Lnet/sf/ehcache/Element;)V
+#remove(Ljava/io/Serializable;)Z
+#removeAll()V
+#send(Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getGuid()Ljava/lang/String;
+#getUrl()Ljava/lang/String;
+#getUrlBase()Ljava/lang/String;
+#getKeys()Ljava/util/List;
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getElements(Ljava/util/List;)Ljava/util/List;

+###net/sf/ehcache/distribution/RMICacheManagerPeerProviderFactory
@1.6.2
+#<init>()V
+#createCachePeerProvider(Lnet/sf/ehcache/CacheManager;Ljava/util/Properties;)Lnet/sf/ehcache/distribution/CacheManagerPeerProvider;

+###net/sf/ehcache/distribution/ConfigurableRMIClientSocketFactory
@1.6.2
+#<init>(Ljava/lang/Integer;)V
+#createSocket(Ljava/lang/String;I)Ljava/net/Socket;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.4.4
+#getConfiguredRMISocketFactory()Ljava/rmi/server/RMISocketFactory;

+###net/sf/ehcache/distribution/RMICacheReplicatorFactory
@1.6.2
+#<init>()V
+#createCacheEventListener(Ljava/util/Properties;)Lnet/sf/ehcache/event/CacheEventListener;

+###net/sf/ehcache/distribution/RMIBootstrapCacheLoader
@1.6.2
+#<init>(ZI)V
+#load(Lnet/sf/ehcache/Ehcache;)V
+#isAsynchronous()Z
+#doLoad(Lnet/sf/ehcache/Ehcache;)V
+#getMaximumChunkSizeBytes()I
+#clone()Ljava/lang/Object;

+###net/sf/ehcache/distribution/CacheReplicator
@1.6.2
+#isReplicateUpdatesViaCopy()Z
+#notAlive()Z
+#alive()Z

+###net/sf/ehcache/distribution/RMICacheManagerPeerListenerFactory
@1.6.2
+#<init>()V
+#createCachePeerListener(Lnet/sf/ehcache/CacheManager;Ljava/util/Properties;)Lnet/sf/ehcache/distribution/CacheManagerPeerListener;

+###net/sf/ehcache/distribution/RMICachePeer
@1.6.2
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V
+#getUrl()Ljava/lang/String;
+#getUrlBase()Ljava/lang/String;
+#getKeys()Ljava/util/List;
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getElements(Ljava/util/List;)Ljava/util/List;
+#put(Lnet/sf/ehcache/Element;)V
+#remove(Ljava/io/Serializable;)Z
+#removeAll()V
+#send(Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getGuid()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###net/sf/ehcache/distribution/RMICachePeer_Skel
@1.6.2
+#<init>()V
+#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;IJ)V
+#getOperations()[Ljava/rmi/server/Operation;
@2.4.5
-###net/sf/ehcache/distribution/RMICachePeer_Skel

+###net/sf/ehcache/distribution/RMICacheManagerPeerProvider
@1.6.2
+#<init>(Lnet/sf/ehcache/CacheManager;)V
+#<init>()V
+#init()V
+#registerPeer(Ljava/lang/String;)V
+#unregisterPeer(Ljava/lang/String;)V
+#listRemoteCachePeers(Lnet/sf/ehcache/Ehcache;)Ljava/util/List;
+#lookupRemoteCachePeer(Ljava/lang/String;)Lnet/sf/ehcache/distribution/CachePeer;
+#dispose()V
+#getCacheManager()Lnet/sf/ehcache/CacheManager;
+#getScheme()Ljava/lang/String;

+###net/sf/ehcache/distribution/MulticastRMICacheManagerPeerProvider
@1.6.2
+#<init>(Lnet/sf/ehcache/CacheManager;Ljava/net/InetAddress;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/net/InetAddress;)V
+#init()V
+#registerPeer(Ljava/lang/String;)V
+#listRemoteCachePeers(Lnet/sf/ehcache/Ehcache;)Ljava/util/List;
+#dispose()V
+#getTimeForClusterToForm()J
+#getHeartBeatReceiver()Lnet/sf/ehcache/distribution/MulticastKeepaliveHeartbeatReceiver;
+#getHeartBeatSender()Lnet/sf/ehcache/distribution/MulticastKeepaliveHeartbeatSender;

+###net/sf/ehcache/distribution/CacheManagerPeerProvider
@1.6.2
+#registerPeer(Ljava/lang/String;)V
+#unregisterPeer(Ljava/lang/String;)V
+#listRemoteCachePeers(Lnet/sf/ehcache/Ehcache;)Ljava/util/List;
+#init()V
+#dispose()V
+#getTimeForClusterToForm()J
+#getScheme()Ljava/lang/String;

+###net/sf/ehcache/distribution/MulticastKeepaliveHeartbeatSender
@1.6.2
+#<init>(Lnet/sf/ehcache/CacheManager;Ljava/net/InetAddress;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/net/InetAddress;)V
+#init()V
+#dispose()V
+#setHeartBeatInterval(J)V
+#getHeartBeatInterval()J
+#getTimeToLive()Ljava/lang/Integer;
@2.5.7
+#setHeartBeatStaleTime(J)V
+#getHeartBeatStaleTime()J
@2.6.0
-#setHeartBeatStaleTime(J)V
-#getHeartBeatStaleTime()J
@2.6.3
+#setHeartBeatStaleTime(J)V
+#getHeartBeatStaleTime()J

+###net/sf/ehcache/distribution/MulticastKeepaliveHeartbeatReceiver
@1.6.2
+#<init>(Lnet/sf/ehcache/distribution/MulticastRMICacheManagerPeerProvider;Ljava/net/InetAddress;Ljava/lang/Integer;Ljava/net/InetAddress;)V
+#dispose()V

+###net/sf/ehcache/distribution/RMICacheManagerPeerListener
@1.6.2
+#<init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Lnet/sf/ehcache/CacheManager;Ljava/lang/Integer;)V
+#init()V
+#dispose()V
+#getBoundCachePeers()Ljava/util/List;
+#getStatus()Lnet/sf/ehcache/Status;
+#getUniqueResourceIdentifier()Ljava/lang/String;
+#attemptResolutionOfUniqueResourceConflict()V
+#getScheme()Ljava/lang/String;
+#notifyCacheAdded(Ljava/lang/String;)V
+#notifyCacheRemoved(Ljava/lang/String;)V

+###net/sf/ehcache/distribution/EventMessage
@1.6.2
+#<init>(ILjava/io/Serializable;Lnet/sf/ehcache/Element;)V
+#getEvent()I
+#getElement()Lnet/sf/ehcache/Element;
+#getSerializableKey()Ljava/io/Serializable;
+#isValid()Z
@2.4.8
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/distribution/EventMessage$EventType;Ljava/io/Serializable;Lnet/sf/ehcache/Element;)V
+#getEhcache()Lnet/sf/ehcache/Ehcache;
+#getType()Lnet/sf/ehcache/distribution/EventMessage$EventType;
-#<init>(ILjava/io/Serializable;Lnet/sf/ehcache/Element;)V
-#getEvent()I
-#isValid()Z
@2.5.0
+#<init>(ILjava/io/Serializable;Lnet/sf/ehcache/Element;)V
+#getEvent()I
+#isValid()Z
-#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/distribution/EventMessage$EventType;Ljava/io/Serializable;Lnet/sf/ehcache/Element;)V
-#getEhcache()Lnet/sf/ehcache/Ehcache;
-#getType()Lnet/sf/ehcache/distribution/EventMessage$EventType;
@2.5.2
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/io/Serializable;)V
+#getEhcache()Lnet/sf/ehcache/Ehcache;
-#<init>(ILjava/io/Serializable;Lnet/sf/ehcache/Element;)V
-#getEvent()I
-#getElement()Lnet/sf/ehcache/Element;
-#isValid()Z

+###net/sf/ehcache/distribution/MulticastRMICacheManagerPeerProvider$CachePeerEntry
@1.6.2
+#<init>(Lnet/sf/ehcache/distribution/CachePeer;Ljava/util/Date;)V
+#getCachePeer()Lnet/sf/ehcache/distribution/CachePeer;
+#getDate()Ljava/util/Date;

+###net/sf/ehcache/distribution/CacheManagerPeerListener
@1.6.2
+#getBoundCachePeers()Ljava/util/List;
+#getUniqueResourceIdentifier()Ljava/lang/String;
+#attemptResolutionOfUniqueResourceConflict()V
+#getScheme()Ljava/lang/String;

+###net/sf/ehcache/distribution/RMICachePeer_Stub
@1.6.2
+#<init>()V
+#<init>(Ljava/rmi/server/RemoteRef;)V
+#getElements(Ljava/util/List;)Ljava/util/List;
+#getGuid()Ljava/lang/String;
+#getKeys()Ljava/util/List;
+#getName()Ljava/lang/String;
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getUrl()Ljava/lang/String;
+#getUrlBase()Ljava/lang/String;
+#put(Lnet/sf/ehcache/Element;)V
+#remove(Ljava/io/Serializable;)Z
+#removeAll()V
+#send(Ljava/util/List;)V
@2.4.5
-#<init>()V

+###net/sf/ehcache/distribution/RMIBootstrapCacheLoaderFactory
@1.6.2
+#<init>()V
+#createBootstrapCacheLoader(Ljava/util/Properties;)Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
@2.5.0
+#createBootstrapCacheLoader(Ljava/util/Properties;)Lnet/sf/ehcache/distribution/RMIBootstrapCacheLoader;

+###net/sf/ehcache/distribution/ManualRMICacheManagerPeerProvider
@1.6.2
+#<init>()V
+#init()V
+#getTimeForClusterToForm()J
+#registerPeer(Ljava/lang/String;)V
+#listRemoteCachePeers(Lnet/sf/ehcache/Ehcache;)Ljava/util/List;

+###net/sf/ehcache/distribution/RMISynchronousCacheReplicator
@1.6.2
+#<init>(ZZZZZ)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementExpired(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementEvicted(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#isReplicateUpdatesViaCopy()Z
+#notAlive()Z
+#alive()Z
+#dispose()V
+#clone()Ljava/lang/Object;

+###net/sf/ehcache/distribution/RemoteCacheException
@1.6.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###net/sf/ehcache/distribution/CacheManagerPeerProviderFactory
@1.6.2
+#<init>()V
+#createCachePeerProvider(Lnet/sf/ehcache/CacheManager;Ljava/util/Properties;)Lnet/sf/ehcache/distribution/CacheManagerPeerProvider;

+###net/sf/ehcache/bootstrap/BootstrapCacheLoader
@1.6.2
+#load(Lnet/sf/ehcache/Ehcache;)V
+#isAsynchronous()Z
+#clone()Ljava/lang/Object;

+###net/sf/ehcache/bootstrap/BootstrapCacheLoaderFactory
@1.6.2
+#<init>()V
+#createBootstrapCacheLoader(Ljava/util/Properties;)Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;

+###net/sf/ehcache/terracotta/TerracottaClientRejoinListener
@2.4.0
+#clusterRejoinStarted()V
+#clusterRejoinComplete()V

+###net/sf/ehcache/terracotta/ClusteredInstanceFactoryWrapper
@2.4.0
+#<init>(Lnet/sf/ehcache/terracotta/TerracottaClient;Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;)V
+#getTopology()Lnet/sf/ehcache/cluster/CacheCluster;
+#getUUID()Ljava/lang/String;
+#createEventReplicator(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/event/CacheEventListener;
+#createStore(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/store/Store;
+#createTransactionIDFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/TransactionIDFactory;
+#createWriteBehind(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/writer/writebehind/WriteBehind;
+#getOrCreateSoftLockFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/SoftLockFactory;
+#shutdown()V
@2.5.0
+#getOrCreateSoftLockFactory(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/SoftLockFactory;
-#getOrCreateSoftLockFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/SoftLockFactory;
@2.5.2
+#createTransactionIDFactory(Ljava/lang/String;Ljava/lang/String;)Lnet/sf/ehcache/transaction/TransactionIDFactory;
-#createTransactionIDFactory(Ljava/lang/String;)Lnet/sf/ehcache/transaction/TransactionIDFactory;
@2.6.0
+#getOrCreateSoftLockManager(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/SoftLockManager;
-#getOrCreateSoftLockFactory(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/SoftLockFactory;

+###net/sf/ehcache/terracotta/TerracottaCacheCluster
@2.4.0
+#<init>()V
+#setUnderlyingCacheCluster(Lnet/sf/ehcache/cluster/CacheCluster;)V
+#addTopologyListener(Lnet/sf/ehcache/cluster/ClusterTopologyListener;)Z
+#removeTopologyListener(Lnet/sf/ehcache/cluster/ClusterTopologyListener;)Z
+#getCurrentNode()Lnet/sf/ehcache/cluster/ClusterNode;
+#getNodes()Ljava/util/Collection;
+#getScheme()Lnet/sf/ehcache/cluster/ClusterScheme;
+#isClusterOnline()Z
+#waitUntilNodeJoinsCluster()Lnet/sf/ehcache/cluster/ClusterNode;
+#getTopologyListeners()Ljava/util/List;

+###net/sf/ehcache/terracotta/TerracottaClient
@2.4.0
+#<init>(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/terracotta/TerracottaClientRejoinListener;Lnet/sf/ehcache/config/TerracottaClientConfiguration;)V
+#getTerracottaDefaultStrategyForCurrentRuntime(Lnet/sf/ehcache/config/CacheConfiguration;)Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;
+#getClusteredInstanceFactory()Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;
+#createClusteredInstanceFactory(Ljava/util/Map;)Z
+#getCacheCluster()Lnet/sf/ehcache/terracotta/TerracottaCacheCluster;
+#shutdown()V
@2.6.0
-#getTerracottaDefaultStrategyForCurrentRuntime(Lnet/sf/ehcache/config/CacheConfiguration;)Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;

+###net/sf/ehcache/terracotta/TerracottaNotRunningException
@2.4.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###net/sf/ehcache/management/Store
@2.3.0
+#getObjectName()Ljavax/management/ObjectName;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljavax/management/Attribute;)V
+#getAttributes([Ljava/lang/String;)Ljavax/management/AttributeList;
+#setAttributes(Ljavax/management/AttributeList;)Ljavax/management/AttributeList;
+#invoke(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;
+#getMBeanInfo()Ljavax/management/MBeanInfo;

+###net/sf/ehcache/management/ManagedCacheManagerPeerProvider
@2.3.0
+#register(Ljavax/management/MBeanServer;)V

+###net/sf/ehcache/config/TimeoutBehaviorConfiguration
@2.4.0
+#<init>()V
+#getType()Ljava/lang/String;
+#getTimeoutBehaviorType()Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;
+#setType(Ljava/lang/String;)V
+#type(Ljava/lang/String;)Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration;
+#getProperties()Ljava/lang/String;
+#setProperties(Ljava/lang/String;)V
+#properties(Ljava/lang/String;)Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration;
+#getPropertySeparator()Ljava/lang/String;
+#setPropertySeparator(Ljava/lang/String;)V
+#propertySeparator(Ljava/lang/String;)Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration;
+#clone()Ljava/lang/Object;
+#getNonstopTimeoutBehaviorFactory()Lnet/sf/ehcache/constructs/nonstop/NonstopTimeoutBehaviorFactory;
@2.5.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###net/sf/ehcache/config/generator/model/AbstractDepthFirstVisitor
@2.2.0
+#<init>()V
+#visit(Lnet/sf/ehcache/config/generator/model/NodeElement;)V

+###net/sf/ehcache/config/generator/model/NodeElement
@2.2.0
+#getName()Ljava/lang/String;
+#getFQName()Ljava/lang/String;
+#getFQName(Ljava/lang/String;)Ljava/lang/String;
+#getAttributes()Ljava/util/List;
+#getParent()Lnet/sf/ehcache/config/generator/model/NodeElement;
+#getChildElements()Ljava/util/List;
+#hasChildren()Z
+#getInnerContent()Ljava/lang/String;
+#addAttribute(Lnet/sf/ehcache/config/generator/model/NodeAttribute;)V
+#addChildElement(Lnet/sf/ehcache/config/generator/model/NodeElement;)V
+#accept(Lnet/sf/ehcache/config/generator/model/NodeElementVisitor;)V
+#isOptional()Z
+#setOptional(Z)V
+#setInnerContent(Ljava/lang/String;)V

+###net/sf/ehcache/config/generator/model/XMLGeneratorVisitor$OutputBehavior
@2.2.0
+#values()[Lnet/sf/ehcache/config/generator/model/XMLGeneratorVisitor$OutputBehavior;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/generator/model/XMLGeneratorVisitor$OutputBehavior;

+###net/sf/ehcache/config/generator/model/NodeAttribute
@2.2.0
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#isOptional()Z
+#getDefaultValue()Ljava/lang/String;
+#setOptional(Z)V
+#setDefaultValue(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#optional(Z)Lnet/sf/ehcache/config/generator/model/NodeAttribute;
+#defaultValue(Ljava/lang/String;)Lnet/sf/ehcache/config/generator/model/NodeAttribute;

+###net/sf/ehcache/config/generator/model/AbstractNodeElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;)V
+#getName()Ljava/lang/String;
+#getParent()Lnet/sf/ehcache/config/generator/model/NodeElement;
+#getAttributes()Ljava/util/List;
+#getChildElements()Ljava/util/List;
+#addAttribute(Lnet/sf/ehcache/config/generator/model/NodeAttribute;)V
+#addChildElement(Lnet/sf/ehcache/config/generator/model/NodeElement;)V
+#isOptional()Z
+#setOptional(Z)V
+#hasChildren()Z
+#getInnerContent()Ljava/lang/String;
+#setInnerContent(Ljava/lang/String;)V
+#addAllFactoryConfigsAsChildElements(Lnet/sf/ehcache/config/generator/model/NodeElement;Ljava/lang/String;Ljava/util/Collection;)V
+#getAllFactoryElements(Lnet/sf/ehcache/config/generator/model/NodeElement;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/List;
+#getFQName()Ljava/lang/String;
+#getFQName(Ljava/lang/String;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#accept(Lnet/sf/ehcache/config/generator/model/NodeElementVisitor;)V

+###net/sf/ehcache/config/generator/model/SimpleNodeAttribute
@2.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Enum;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;J)V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#isOptional()Z
+#setOptional(Z)V
+#getDefaultValue()Ljava/lang/String;
+#setDefaultValue(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#optional(Z)Lnet/sf/ehcache/config/generator/model/SimpleNodeAttribute;
+#defaultValue(Ljava/lang/String;)Lnet/sf/ehcache/config/generator/model/SimpleNodeAttribute;
+#defaultValue(Z)Lnet/sf/ehcache/config/generator/model/SimpleNodeAttribute;
+#defaultValue(I)Lnet/sf/ehcache/config/generator/model/SimpleNodeAttribute;
+#defaultValue(Ljava/lang/Enum;)Lnet/sf/ehcache/config/generator/model/SimpleNodeAttribute;
+#defaultValue(J)Lnet/sf/ehcache/config/generator/model/SimpleNodeAttribute;
+#defaultValue(Ljava/lang/String;)Lnet/sf/ehcache/config/generator/model/NodeAttribute;
+#optional(Z)Lnet/sf/ehcache/config/generator/model/NodeAttribute;

+###net/sf/ehcache/config/generator/model/elements/SearchableConfigurationElement
@2.4.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/Searchable;)V

+###net/sf/ehcache/config/generator/model/elements/TimeoutBehaviorConfigurationElement
@2.4.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/TerracottaConfigConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/TerracottaClientConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/CacheWriterConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CacheWriterConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/CopyStrategyConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CopyStrategyConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/ElementValueComparatorConfigurationElement
@2.4.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/ElementValueComparatorConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/DefaultCacheConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CacheConfiguration;)V
@2.5.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/config/CacheConfiguration;)V
-#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CacheConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/FactoryConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Ljava/lang/String;Lnet/sf/ehcache/config/FactoryConfiguration;)V
+#getFactoryConfiguration()Lnet/sf/ehcache/config/FactoryConfiguration;

+###net/sf/ehcache/config/generator/model/elements/ConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/Configuration;)V
@2.5.0
+#<init>(Lnet/sf/ehcache/CacheManager;)V

+###net/sf/ehcache/config/generator/model/elements/TerracottaConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/TerracottaConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/CacheConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CacheConfiguration;)V
+#addCommonAttributesWithDefaultCache(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CacheConfiguration;)V
+#addCommonChildElementsWithDefaultCache(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CacheConfiguration;)V
@2.5.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/config/CacheConfiguration;)V
+#addCommonAttributesWithDefaultCache(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/config/CacheConfiguration;)V
-#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CacheConfiguration;)V
-#addCommonAttributesWithDefaultCache(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/CacheConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/NonstopConfigurationElement
@2.4.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/NonstopConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/DiskStoreConfigurationElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/elements/ConfigurationElement;Lnet/sf/ehcache/config/DiskStoreConfiguration;)V

+###net/sf/ehcache/config/generator/model/SimpleNodeElement
@2.2.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###net/sf/ehcache/config/generator/model/NodeElementVisitor
@2.2.0
+#visit(Lnet/sf/ehcache/config/generator/model/NodeElement;)V

+###net/sf/ehcache/config/generator/model/XMLGeneratorVisitor
@2.2.0
+#<init>(Ljava/io/PrintWriter;)V
+#enableAllOutputBehaviors()V
+#disableAllOutputBehaviors()V
+#enableOutputBehavior(Lnet/sf/ehcache/config/generator/model/XMLGeneratorVisitor$OutputBehavior;)V
+#disableOutputBehavior(Lnet/sf/ehcache/config/generator/model/XMLGeneratorVisitor$OutputBehavior;)V
+#isOutputBehaviorEnabled(Lnet/sf/ehcache/config/generator/model/XMLGeneratorVisitor$OutputBehavior;)Z

+###net/sf/ehcache/config/TerracottaConfiguration$StorageStrategy
@2.2.0
+#values()[Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaConfiguration$StorageStrategy;
@2.6.0
-###net/sf/ehcache/config/TerracottaConfiguration$StorageStrategy

+###net/sf/ehcache/config/ElementValueComparatorConfiguration
@2.4.0
+#<init>()V
+#getClassName()Ljava/lang/String;
+#setClass(Ljava/lang/String;)V
+#getElementComparatorInstance()Lnet/sf/ehcache/store/ElementValueComparator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.5.0
+#getElementComparatorInstance(Lnet/sf/ehcache/config/CacheConfiguration;)Lnet/sf/ehcache/store/ElementValueComparator;
-#getElementComparatorInstance()Lnet/sf/ehcache/store/ElementValueComparator;
@2.6.2
+#createElementComparatorInstance(Lnet/sf/ehcache/config/CacheConfiguration;)Lnet/sf/ehcache/store/ElementValueComparator;
-#getElementComparatorInstance(Lnet/sf/ehcache/config/CacheConfiguration;)Lnet/sf/ehcache/store/ElementValueComparator;

+###net/sf/ehcache/config/CopyStrategyConfiguration
@2.1.0-beta
+#<init>()V
+#getClassName()Ljava/lang/String;
+#setClass(Ljava/lang/String;)V
+#getCopyStrategyInstance()Lnet/sf/ehcache/store/compound/CopyStrategy;
@2.2.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.4.0
+#setCopyStrategyInstance(Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
+#getCopyStrategyInstance()Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
-#getCopyStrategyInstance()Lnet/sf/ehcache/store/compound/CopyStrategy;

+###net/sf/ehcache/config/NonstopConfiguration
@2.4.0
+#<init>()V
+#freezeConfig()V
+#isEnabled()Z
+#setEnabled(Z)V
+#enabled(Z)Lnet/sf/ehcache/config/NonstopConfiguration;
+#isImmediateTimeout()Z
+#setImmediateTimeout(Z)V
+#immediateTimeout(Z)Lnet/sf/ehcache/config/NonstopConfiguration;
+#getTimeoutMillis()J
+#setTimeoutMillis(J)V
+#getBulkOpsTimeoutMultiplyFactor()I
+#setBulkOpsTimeoutMultiplyFactor(I)V
+#timeoutMillis(J)Lnet/sf/ehcache/config/NonstopConfiguration;
+#getTimeoutBehavior()Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration;
+#addTimeoutBehavior(Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration;)V
+#timeoutBehavior(Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration;)Lnet/sf/ehcache/config/NonstopConfiguration;
+#clone()Lnet/sf/ehcache/config/NonstopConfiguration;
+#clone()Ljava/lang/Object;
@2.5.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###net/sf/ehcache/config/TerracottaConfiguration$Consistency
@2.4.0
+#values()[Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;

+###net/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType
@2.4.0
+#values()[Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;
+#getTypeName()Ljava/lang/String;
+#getTimeoutBehaviorFactory(Ljava/util/Properties;)Lnet/sf/ehcache/constructs/nonstop/NonstopTimeoutBehaviorFactory;
+#isValidTimeoutBehaviorType(Ljava/lang/String;)Z
+#getTimeoutBehaviorTypeFromName(Ljava/lang/String;)Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;

+###net/sf/ehcache/config/Searchable
@2.4.0
+#<init>()V
+#addSearchAttribute(Lnet/sf/ehcache/config/SearchAttribute;)V
+#getSearchAttributes()Ljava/util/Map;
+#searchAttribute(Lnet/sf/ehcache/config/SearchAttribute;)Lnet/sf/ehcache/config/Searchable;
+#freezeConfiguration()V
+#getUserDefinedSearchAttributes()Ljava/util/Map;
@2.4.1
+#keys()Z
+#values()Z
+#values(Z)V
+#keys(Z)V
+#setKeys(Z)V
+#setValues(Z)V
@2.6.5
+#isDynamicIndexingAllowed()Z
+#setAllowDynamicIndexing(Z)V
+#allowDynamicIndexing(Z)V

+###net/sf/ehcache/config/TerracottaClientConfiguration
@2.2.0
+#<init>()V
+#clone()Lnet/sf/ehcache/config/TerracottaClientConfiguration;
+#url(Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaClientConfiguration;
+#url(Ljava/lang/String;Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaClientConfiguration;
+#setUrl(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#extractTcconfig(Ljava/lang/String;)V
+#getEmbeddedConfig()Ljava/lang/String;
+#getOriginalEmbeddedConfig()Ljava/lang/String;
+#isUrlConfig()Z
+#clone()Ljava/lang/Object;
@2.4.0
+#isRejoin()Z
+#setRejoin(Z)V
+#rejoin(Z)Lnet/sf/ehcache/config/TerracottaClientConfiguration;
+#freezeConfig()V

+###net/sf/ehcache/config/SearchAttribute
@2.4.0
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setClass(Ljava/lang/String;)V
+#setExpression(Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#getExpression()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#constructExtractor()Lnet/sf/ehcache/search/attribute/AttributeExtractor;
+#name(Ljava/lang/String;)Lnet/sf/ehcache/config/SearchAttribute;
+#className(Ljava/lang/String;)Lnet/sf/ehcache/config/SearchAttribute;
+#expression(Ljava/lang/String;)Lnet/sf/ehcache/config/SearchAttribute;
+#asConfigElement(Lnet/sf/ehcache/config/generator/model/NodeElement;)Lnet/sf/ehcache/config/generator/model/NodeElement;
@2.4.3
+#setProperties(Ljava/lang/String;)V
+#setPropertySeparator(Ljava/lang/String;)V
+#propertySeparator(Ljava/lang/String;)Lnet/sf/ehcache/config/SearchAttribute;
+#properties(Ljava/lang/String;)Lnet/sf/ehcache/config/SearchAttribute;

+###net/sf/ehcache/config/CacheConfiguration$CacheDecoratorFactoryConfiguration
@2.1.0
+#<init>()V

+###net/sf/ehcache/distribution/TransactionalRMICachePeer
@2.4.1
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V
+#getKeys()Ljava/util/List;
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getElements(Ljava/util/List;)Ljava/util/List;
+#put(Lnet/sf/ehcache/Element;)V
+#remove(Ljava/io/Serializable;)Z
+#removeAll()V
+#send(Ljava/util/List;)V

+###net/sf/ehcache/writer/writebehind/WriteBehindQueueManager
@2.4.0
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#start(Lnet/sf/ehcache/writer/CacheWriter;)V
+#write(Lnet/sf/ehcache/Element;)V
+#delete(Lnet/sf/ehcache/CacheEntry;)V
+#setOperationsFilter(Lnet/sf/ehcache/writer/writebehind/OperationsFilter;)V
+#stop()V
+#getQueueSize()J

+###net/sf/ehcache/store/TerracottaStore
@2.1.0-beta
+#unsafeGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
@2.3.0
+#getLocalKeys()Ljava/util/Set;
@2.5.0
+#getTransactionalMode()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;

+###net/sf/ehcache/store/MemoryStoreEvictionPolicy$MemoryStoreEvictionPolicyEnum
@2.2.0
+#values()[Lnet/sf/ehcache/store/MemoryStoreEvictionPolicy$MemoryStoreEvictionPolicyEnum;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/store/MemoryStoreEvictionPolicy$MemoryStoreEvictionPolicyEnum;

+###net/sf/ehcache/store/LegacyStoreWrapper
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/event/RegisteredEventListeners;Lnet/sf/ehcache/config/CacheConfiguration;)V
+#bufferFull()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#dispose()V
+#expireElements()V
+#flush()V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getInternalContext()Ljava/lang/Object;
+#getKeyArray()[Ljava/lang/Object;
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getSize()I
+#getStatus()Lnet/sf/ehcache/Status;
+#getTerracottaClusteredSize()I
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getDiskStore()Lnet/sf/ehcache/store/Store;
+#getMemoryStore()Lnet/sf/ehcache/store/Store;
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
@2.3.0
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getKeys()Ljava/util/List;
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getMBean()Ljava/lang/Object;
-#getKeyArray()[Ljava/lang/Object;
@2.4.0
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
-#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V

+###net/sf/ehcache/store/ElementValueComparator
@2.4.0
+#equals(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z

+###net/sf/ehcache/store/compound/impl/MemoryOnlyStore
@2.1.0-beta
+#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/compound/impl/MemoryOnlyStore;
+#bufferFull()Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#expireElements()V
+#flush()V
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getTerracottaClusteredSize()I
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#diskCapacityChanged(II)V
+#loggingChanged(ZZ)V
+#memoryCapacityChanged(II)V
+#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#timeToIdleChanged(JJ)V
+#timeToLiveChanged(JJ)V
@2.3.0
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getMBean()Ljava/lang/Object;
@2.4.0
+#setAttributeExtractors(Ljava/util/Map;)V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
@2.5.0
-###net/sf/ehcache/store/compound/impl/MemoryOnlyStore

+###net/sf/ehcache/store/compound/impl/OverflowToDiskStore
@2.1.0-beta
+#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/compound/impl/OverflowToDiskStore;
+#bufferFull()Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#diskCapacityChanged(II)V
+#memoryCapacityChanged(II)V
+#loggingChanged(ZZ)V
+#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#timeToIdleChanged(JJ)V
+#timeToLiveChanged(JJ)V
+#expireElements()V
+#flush()V
+#getTerracottaClusteredSize()I
+#getDataFile()Ljava/io/File;
@2.3.0
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getMBean()Ljava/lang/Object;
@2.5.0
-###net/sf/ehcache/store/compound/impl/OverflowToDiskStore

+###net/sf/ehcache/store/compound/impl/DiskPersistentStore
@2.1.0-beta
+#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/compound/impl/DiskPersistentStore;
+#bufferFull()Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#expireElements()V
+#flush()V
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getTerracottaClusteredSize()I
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#diskCapacityChanged(II)V
+#loggingChanged(ZZ)V
+#memoryCapacityChanged(II)V
+#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#timeToIdleChanged(JJ)V
+#timeToLiveChanged(JJ)V
+#getDataFile()Ljava/io/File;
+#getIndexFile()Ljava/io/File;
@2.3.0
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getMBean()Ljava/lang/Object;
@2.5.0
-###net/sf/ehcache/store/compound/impl/DiskPersistentStore

+###net/sf/ehcache/store/compound/HashEntry
@2.3.0
@2.5.0
-###net/sf/ehcache/store/compound/HashEntry

+###net/sf/ehcache/store/compound/StoreUpdateException
@2.4.0
+#<init>(Ljava/lang/RuntimeException;Z)V
+#isUpdate()Z
@2.5.0
-###net/sf/ehcache/store/compound/StoreUpdateException

+###net/sf/ehcache/store/compound/ElementSubstitute
@2.1.0-beta
+#installed()V
+#getFactory()Lnet/sf/ehcache/store/compound/ElementSubstituteFactory;
@2.5.0
-###net/sf/ehcache/store/compound/ElementSubstitute

+###net/sf/ehcache/store/compound/ReadWriteCopyStrategy
@2.4.0
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/store/compound/ElementSubstituteFilter
@2.1.0-beta
+#allows(Ljava/lang/Object;)Z
@2.5.0
-###net/sf/ehcache/store/compound/ElementSubstituteFilter

+###net/sf/ehcache/store/compound/ElementSubstituteFactory
@2.1.0-beta
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/store/compound/ElementSubstitute;
+#retrieve(Ljava/lang/Object;Lnet/sf/ehcache/store/compound/ElementSubstitute;)Lnet/sf/ehcache/Element;
+#free(Ljava/util/concurrent/locks/Lock;Lnet/sf/ehcache/store/compound/ElementSubstitute;)V
@2.5.0
-###net/sf/ehcache/store/compound/ElementSubstituteFactory

+###net/sf/ehcache/store/compound/SerializationCopyStrategy
@2.1.0-beta
+#<init>()V
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@2.4.0
+#copyForWrite(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;
-#copy(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/store/compound/factories/AATreeSet$Node
@2.3.3
+#compareTo(Ljava/lang/Object;)I
+#setLeft(Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;)V
+#setRight(Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;)V
+#getLeft()Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;
+#getRight()Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I
+#swapPayload(Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;)V
+#getPayload()Ljava/lang/Object;
@2.5.0
-###net/sf/ehcache/store/compound/factories/AATreeSet$Node

+###net/sf/ehcache/store/compound/factories/AATreeSet
@2.3.3
+#<init>()V
+#add(Ljava/lang/Comparable;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;
+#clear()V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isEmpty()Z
+#comparator()Ljava/util/Comparator;
+#subSet(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#first()Ljava/lang/Comparable;
+#last()Ljava/lang/Comparable;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#add(Ljava/lang/Object;)Z
+#last()Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
@2.5.0
-###net/sf/ehcache/store/compound/factories/AATreeSet

+###net/sf/ehcache/store/compound/factories/Region
@2.3.3
+#<init>(J)V
+#<init>(JJ)V
+#<init>(Lnet/sf/ehcache/store/compound/factories/Region;)V
+#contiguous()J
+#setLeft(Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;)V
+#setRight(Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;)V
+#toString()Ljava/lang/String;
+#size()J
+#compareTo(Ljava/lang/Comparable;)I
+#swapPayload(Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;)V
+#getPayload()Lnet/sf/ehcache/store/compound/factories/Region;
+#start()J
+#end()J
+#getPayload()Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I
@2.5.0
-###net/sf/ehcache/store/compound/factories/Region

+###net/sf/ehcache/store/compound/factories/CapacityLimitedInMemoryFactory
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/store/compound/factories/DiskOverflowStorageFactory;ILnet/sf/ehcache/store/Policy;Lnet/sf/ehcache/event/RegisteredEventListeners;)V
+#bind(Lnet/sf/ehcache/store/compound/CompoundStore;)V
+#unbind(Lnet/sf/ehcache/store/compound/CompoundStore;)V
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#retrieve(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#free(Ljava/util/concurrent/locks/Lock;Lnet/sf/ehcache/Element;)V
+#getSize()I
+#getSizeInBytes()J
+#getEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#setCapacity(I)V
+#created(Ljava/lang/Object;)Z
+#expireElements()V
+#free(Ljava/util/concurrent/locks/Lock;Ljava/lang/Object;)V
+#retrieve(Ljava/lang/Object;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.5.0
-###net/sf/ehcache/store/compound/factories/CapacityLimitedInMemoryFactory

+###net/sf/ehcache/store/compound/factories/AATreeSet$AbstractTreeNode
@2.3.3
+#<init>()V
+#setLeft(Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;)V
+#setRight(Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;)V
+#getLeft()Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;
+#getRight()Lnet/sf/ehcache/store/compound/factories/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I
@2.5.0
-###net/sf/ehcache/store/compound/factories/AATreeSet$AbstractTreeNode

+###net/sf/ehcache/store/compound/factories/InMemoryFactory
@2.1.0-beta
+#<init>()V
+#bind(Lnet/sf/ehcache/store/compound/CompoundStore;)V
+#unbind(Lnet/sf/ehcache/store/compound/CompoundStore;)V
+#retrieve(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#free(Ljava/util/concurrent/locks/Lock;Lnet/sf/ehcache/Element;)V
+#created(Ljava/lang/Object;)Z
+#free(Ljava/util/concurrent/locks/Lock;Ljava/lang/Object;)V
+#retrieve(Ljava/lang/Object;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.5.0
-###net/sf/ehcache/store/compound/factories/InMemoryFactory

+###net/sf/ehcache/store/compound/factories/DiskOverflowStorageFactory
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;)V
+#primary(Lnet/sf/ehcache/store/compound/factories/CapacityLimitedInMemoryFactory;)V
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/store/compound/ElementSubstitute;
+#retrieve(Ljava/lang/Object;Lnet/sf/ehcache/store/compound/ElementSubstitute;)Lnet/sf/ehcache/Element;
+#free(Ljava/util/concurrent/locks/Lock;Lnet/sf/ehcache/store/compound/ElementSubstitute;)V
+#unbind(Lnet/sf/ehcache/store/compound/CompoundStore;)V
+#getSize()I
+#setCapacity(I)V
+#created(Ljava/lang/Object;)Z
+#expireElements()V
+#getDataFile()Ljava/io/File;
+#bufferFull()Z
+#bind(Lnet/sf/ehcache/store/compound/CompoundStore;)V
+#getSizeInBytes()J
+#free(Ljava/util/concurrent/locks/Lock;Ljava/lang/Object;)V
+#retrieve(Ljava/lang/Object;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.4.0
+#getOnDiskSizeInBytes()J
-#getSizeInBytes()J
@2.5.0
-###net/sf/ehcache/store/compound/factories/DiskOverflowStorageFactory

+###net/sf/ehcache/store/compound/factories/DiskPersistentStorageFactory
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;)V
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/store/compound/ElementSubstitute;
+#free(Ljava/util/concurrent/locks/Lock;Lnet/sf/ehcache/store/compound/ElementSubstitute;)V
+#retrieve(Ljava/lang/Object;Lnet/sf/ehcache/store/compound/ElementSubstitute;)Lnet/sf/ehcache/Element;
+#created(Ljava/lang/Object;)Z
+#bind(Lnet/sf/ehcache/store/compound/CompoundStore;)V
+#unbind(Lnet/sf/ehcache/store/compound/CompoundStore;)V
+#flush()Ljava/util/concurrent/Future;
+#isInMemory(Ljava/lang/Object;)Z
+#isOnDisk(Ljava/lang/Object;)Z
+#getInMemorySize()I
+#getOnDiskSize()I
+#setInMemoryCapacity(I)V
+#setOnDiskCapacity(I)V
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getIndexFile()Ljava/io/File;
+#expireElements()V
+#getDataFile()Ljava/io/File;
+#bufferFull()Z
+#getSizeInBytes()J
+#free(Ljava/util/concurrent/locks/Lock;Ljava/lang/Object;)V
+#retrieve(Ljava/lang/Object;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#create(Ljava/lang/Object;Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.4.0
+#getInMemorySizeInBytes()J
+#getOnDiskSizeInBytes()J
-#getSizeInBytes()J
@2.5.0
-###net/sf/ehcache/store/compound/factories/DiskPersistentStorageFactory

+###net/sf/ehcache/store/compound/ImmutableValueElementCopyStrategy
@2.1.0
+#<init>()V
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@2.4.0
+#copyForWrite(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;
-#copy(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/store/compound/ReadWriteSerializationCopyStrategy
@2.4.0
+#<init>()V
+#copyForWrite(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#duplicateElementWithNewValue(Lnet/sf/ehcache/Element;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/store/compound/NullReadWriteCopyStrategy
@2.4.2
+#<init>()V
+#copyForWrite(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/store/compound/CompoundStore
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;)V
+#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;Lnet/sf/ehcache/store/compound/IdentityElementSubstituteFactory;)V
+#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;Lnet/sf/ehcache/store/compound/IdentityElementSubstituteFactory;ZZLnet/sf/ehcache/store/compound/CopyStrategy;)V
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unretrievedGet(Ljava/lang/Object;)Ljava/lang/Object;
+#putRawIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Z
+#getKeyArray()[Ljava/lang/Object;
+#keySet()Ljava/util/Set;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#dispose()V
+#getSize()I
+#getStatus()Lnet/sf/ehcache/Status;
+#containsKey(Ljava/lang/Object;)Z
+#getInternalContext()Ljava/lang/Object;
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#fault(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRandomSample(Lnet/sf/ehcache/store/compound/ElementSubstituteFilter;ILjava/lang/Object;)Ljava/util/List;
@2.1.0
+#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;ZZLnet/sf/ehcache/store/compound/CopyStrategy;)V
-#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;)V
@2.3.0
+#getKeys()Ljava/util/List;
-#getKeyArray()[Ljava/lang/Object;
@2.4.0
+#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;ZZLnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
+#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;Lnet/sf/ehcache/store/compound/IdentityElementSubstituteFactory;ZZLnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
+#elementSet()Ljava/util/Set;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#tryFault(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;ZZLnet/sf/ehcache/store/compound/CopyStrategy;)V
-#<init>(Lnet/sf/ehcache/store/compound/InternalElementSubstituteFactory;Lnet/sf/ehcache/store/compound/IdentityElementSubstituteFactory;ZZLnet/sf/ehcache/store/compound/CopyStrategy;)V
-#removeElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
@2.5.0
-###net/sf/ehcache/store/compound/CompoundStore

+###net/sf/ehcache/store/compound/IdentityElementSubstituteFactory
@2.1.0-beta
@2.5.0
-###net/sf/ehcache/store/compound/IdentityElementSubstituteFactory

+###net/sf/ehcache/store/compound/CopyStrategy
@2.1.0-beta
+#copy(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/store/compound/LegacyCopyStrategyAdapter
@2.4.0
+#<init>(Lnet/sf/ehcache/store/compound/CopyStrategy;)V
+#copyForWrite(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;

+###net/sf/ehcache/store/StoreListener
@2.1.0-beta
+#nodeCoherent(Z)V
+#clusterCoherent(Z)V
@2.4.1
-#nodeCoherent(Z)V

+###net/sf/ehcache/store/DiskStore$DiskElement
@2.1.0-beta
+#<init>()V
+#getObjectKey()Ljava/lang/Object;
+#getHitCount()J
+#getExpiry()J
+#getSize()I
+#getPosition()J
@2.2.0
+#free()V
+#isValid()Z
@2.5.0
-###net/sf/ehcache/store/DiskStore$DiskElement

+###net/sf/ehcache/store/StoreQuery$Ordering
@2.4.0
+#getAttribute()Lnet/sf/ehcache/search/Attribute;
+#getDirection()Lnet/sf/ehcache/search/Direction;

+###net/sf/ehcache/store/StoreQuery
@2.4.0
+#getCriteria()Lnet/sf/ehcache/search/expression/Criteria;
+#requestsKeys()Z
+#requestsValues()Z
+#getCache()Lnet/sf/ehcache/Cache;
+#requestedAttributes()Ljava/util/Set;
+#getOrdering()Ljava/util/List;
+#maxResults()I
+#getAggregatorInstances()Ljava/util/List;
@2.6.0
+#groupByAttributes()Ljava/util/Set;

+###net/sf/ehcache/store/DefaultElementValueComparator
@2.4.0
+#<init>()V
+#equals(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
@2.5.0
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
-#<init>()V

+###net/sf/ehcache/store/AbstractStore
@2.1.0-beta
+#<init>()V
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
+#addStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#removeStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#fireNodeCoherent(Z)V
+#fireClusterCoherent(Z)V
@2.4.0
+#setAttributeExtractors(Ljava/util/Map;)V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
@2.4.1
-#fireNodeCoherent(Z)V
-#fireClusterCoherent(Z)V
@2.5.0
+#putAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;)V
+#getAllQuiet(Ljava/util/Collection;)Ljava/util/Map;
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#hasAbortedSizeOf()Z
+#recalculateSize(Ljava/lang/Object;)V
@2.6.0
-#<init>()V

+###net/sf/ehcache/hibernate/management/impl/BeanUtils
@2.1.0-beta
+#<init>()V
+#getBeanProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#getLongBeanProperty(Ljava/lang/Object;Ljava/lang/String;)J

+###net/sf/ehcache/hibernate/strategy/EhcacheAccessStrategyFactory
@2.4.0
+#createEntityRegionAccessStrategy(Lnet/sf/ehcache/hibernate/regions/EhcacheEntityRegion;Lorg/hibernate/cache/access/AccessType;)Lorg/hibernate/cache/access/EntityRegionAccessStrategy;
+#createCollectionRegionAccessStrategy(Lnet/sf/ehcache/hibernate/regions/EhcacheCollectionRegion;Lorg/hibernate/cache/access/AccessType;)Lorg/hibernate/cache/access/CollectionRegionAccessStrategy;

+###net/sf/ehcache/hibernate/strategy/EhcacheAccessStrategyFactoryImpl
@2.4.0
+#<init>()V
+#createEntityRegionAccessStrategy(Lnet/sf/ehcache/hibernate/regions/EhcacheEntityRegion;Lorg/hibernate/cache/access/AccessType;)Lorg/hibernate/cache/access/EntityRegionAccessStrategy;
+#createCollectionRegionAccessStrategy(Lnet/sf/ehcache/hibernate/regions/EhcacheCollectionRegion;Lorg/hibernate/cache/access/AccessType;)Lorg/hibernate/cache/access/CollectionRegionAccessStrategy;

+###net/sf/ehcache/hibernate/strategy/TransactionalEhcacheEntityRegionAccessStrategy
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/hibernate/regions/EhcacheEntityRegion;Lnet/sf/ehcache/Ehcache;Lorg/hibernate/cfg/Settings;)V
+#afterInsert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#afterUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)Z
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#getRegion()Lorg/hibernate/cache/EntityRegion;
+#insert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#lockItem(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Z)Z
+#remove(Ljava/lang/Object;)V
+#unlockItem(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

+###net/sf/ehcache/hibernate/strategy/TransactionalEhcacheCollectionRegionAccessStrategy
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/hibernate/regions/EhcacheCollectionRegion;Lnet/sf/ehcache/Ehcache;Lorg/hibernate/cfg/Settings;)V
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#getRegion()Lorg/hibernate/cache/CollectionRegion;
+#lockItem(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Z)Z
+#remove(Ljava/lang/Object;)V
+#unlockItem(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V

+###net/sf/ehcache/hibernate/EhcacheJtaTransactionManagerLookup
@2.1.0-beta
+#<init>()V
+#getTransactionManager(Ljava/util/Properties;)Ljavax/transaction/TransactionManager;
+#getUserTransactionName()Ljava/lang/String;
+#getTransactionIdentifier(Ljavax/transaction/Transaction;)Ljava/lang/Object;

+###net/sf/ehcache/hibernate/nonstop/HibernateNonstopCacheExceptionHandler
@2.4.0
+#getInstance()Lnet/sf/ehcache/hibernate/nonstop/HibernateNonstopCacheExceptionHandler;
+#handleNonstopCacheException(Lnet/sf/ehcache/constructs/nonstop/NonStopCacheException;)V

+###net/sf/ehcache/hibernate/nonstop/NonstopAwareCollectionRegionAccessStrategy
@2.4.0
+#<init>(Lorg/hibernate/cache/access/CollectionRegionAccessStrategy;Lnet/sf/ehcache/hibernate/nonstop/HibernateNonstopCacheExceptionHandler;)V
+#getRegion()Lorg/hibernate/cache/CollectionRegion;
+#evict(Ljava/lang/Object;)V
+#evictAll()V
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#lockItem(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#lockRegion()Lorg/hibernate/cache/access/SoftLock;
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Z)Z
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#removeAll()V
+#unlockItem(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#unlockRegion(Lorg/hibernate/cache/access/SoftLock;)V

+###net/sf/ehcache/hibernate/nonstop/NonstopAwareEntityRegionAccessStrategy
@2.4.0
+#<init>(Lorg/hibernate/cache/access/EntityRegionAccessStrategy;Lnet/sf/ehcache/hibernate/nonstop/HibernateNonstopCacheExceptionHandler;)V
+#getRegion()Lorg/hibernate/cache/EntityRegion;
+#afterInsert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#afterUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)Z
+#evict(Ljava/lang/Object;)V
+#evictAll()V
+#get(Ljava/lang/Object;J)Ljava/lang/Object;
+#insert(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#lockItem(Ljava/lang/Object;Ljava/lang/Object;)Lorg/hibernate/cache/access/SoftLock;
+#lockRegion()Lorg/hibernate/cache/access/SoftLock;
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;Z)Z
+#putFromLoad(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#removeAll()V
+#unlockItem(Ljava/lang/Object;Lorg/hibernate/cache/access/SoftLock;)V
+#unlockRegion(Lorg/hibernate/cache/access/SoftLock;)V
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

+###net/sf/ehcache/hibernate/nonstop/NonstopAccessStrategyFactory
@2.4.0
+#<init>(Lnet/sf/ehcache/hibernate/strategy/EhcacheAccessStrategyFactory;)V
+#createEntityRegionAccessStrategy(Lnet/sf/ehcache/hibernate/regions/EhcacheEntityRegion;Lorg/hibernate/cache/access/AccessType;)Lorg/hibernate/cache/access/EntityRegionAccessStrategy;
+#createCollectionRegionAccessStrategy(Lnet/sf/ehcache/hibernate/regions/EhcacheCollectionRegion;Lorg/hibernate/cache/access/AccessType;)Lorg/hibernate/cache/access/CollectionRegionAccessStrategy;

+###net/sf/ehcache/search/Result
@2.4.0
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#getAttribute(Lnet/sf/ehcache/search/Attribute;)Ljava/lang/Object;
+#getAggregatorResults()Ljava/util/List;

+###net/sf/ehcache/search/Direction
@2.4.0
+#values()[Lnet/sf/ehcache/search/Direction;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/search/Direction;

+###net/sf/ehcache/search/impl/ResultImpl
@2.4.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lnet/sf/ehcache/store/StoreQuery;Ljava/util/Map;[Ljava/lang/Object;)V

+###net/sf/ehcache/search/impl/AggregateOnlyResult
@2.4.0
+#<init>(Lnet/sf/ehcache/store/StoreQuery;)V

+###net/sf/ehcache/search/impl/OrderComparator
@2.4.0
+#<init>(Ljava/util/List;)V
+#compare(Lnet/sf/ehcache/search/Result;Lnet/sf/ehcache/search/Result;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.6.0
+#compare(Lnet/sf/ehcache/search/impl/BaseResult;Lnet/sf/ehcache/search/impl/BaseResult;)I
-#compare(Lnet/sf/ehcache/search/Result;Lnet/sf/ehcache/search/Result;)I

+###net/sf/ehcache/search/impl/BaseResult
@2.4.0
+#<init>(Lnet/sf/ehcache/store/StoreQuery;)V
+#setAggregateResults(Ljava/util/List;)V
+#getKey()Ljava/lang/Object;
+#getAggregatorResults()Ljava/util/List;
+#getValue()Ljava/lang/Object;
+#getAttribute(Lnet/sf/ehcache/search/Attribute;)Ljava/lang/Object;
@2.4.1
+#toString()Ljava/lang/String;

+###net/sf/ehcache/search/impl/ResultsImpl
@2.4.0
+#<init>(Ljava/util/List;ZZZZ)V
+#discard()V
+#all()Ljava/util/List;
+#range(II)Ljava/util/List;
+#size()I
+#hasKeys()Z
+#hasValues()Z
+#hasAttributes()Z
+#hasAggregators()Z
@2.4.1
+#toString()Ljava/lang/String;

+###net/sf/ehcache/search/Results
@2.4.0
+#discard()V
+#all()Ljava/util/List;
+#range(II)Ljava/util/List;
+#size()I
+#hasKeys()Z
+#hasValues()Z
+#hasAttributes()Z
+#hasAggregators()Z

+###net/sf/ehcache/search/Query
@2.4.0
+#includeKeys()Lnet/sf/ehcache/search/Query;
+#includeValues()Lnet/sf/ehcache/search/Query;
+#includeAttribute([Lnet/sf/ehcache/search/Attribute;)Lnet/sf/ehcache/search/Query;
+#includeAggregator([Lnet/sf/ehcache/search/aggregator/Aggregator;)Lnet/sf/ehcache/search/Query;
+#addOrderBy(Lnet/sf/ehcache/search/Attribute;Lnet/sf/ehcache/search/Direction;)Lnet/sf/ehcache/search/Query;
+#maxResults(I)Lnet/sf/ehcache/search/Query;
+#addCriteria(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/Query;
+#execute()Lnet/sf/ehcache/search/Results;
+#end()Lnet/sf/ehcache/search/Query;
@2.6.0
+#addGroupBy([Lnet/sf/ehcache/search/Attribute;)Lnet/sf/ehcache/search/Query;

+###net/sf/ehcache/search/aggregator/AggregatorInstance
@2.4.0
+#accept(Ljava/lang/Object;)V
+#aggregateResult()Ljava/lang/Object;
+#getAttribute()Lnet/sf/ehcache/search/Attribute;
@2.6.0
+#createClone()Lnet/sf/ehcache/search/aggregator/AggregatorInstance;

+###net/sf/ehcache/search/aggregator/Count
@2.4.0
+#<init>()V
+#accept(Ljava/lang/Object;)V
+#aggregateResult()Ljava/lang/Integer;
+#getAttribute()Lnet/sf/ehcache/search/Attribute;
+#aggregateResult()Ljava/lang/Object;
@2.6.0
+#createClone()Lnet/sf/ehcache/search/aggregator/Count;
+#createClone()Lnet/sf/ehcache/search/aggregator/AggregatorInstance;

+###net/sf/ehcache/search/aggregator/Average
@2.4.0
+#<init>(Lnet/sf/ehcache/search/Attribute;)V
+#accept(Ljava/lang/Object;)V
+#aggregateResult()Ljava/lang/Number;
+#getAttribute()Lnet/sf/ehcache/search/Attribute;
+#aggregateResult()Ljava/lang/Object;
@2.6.0
+#createClone()Lnet/sf/ehcache/search/aggregator/Average;
+#createClone()Lnet/sf/ehcache/search/aggregator/AggregatorInstance;

+###net/sf/ehcache/search/aggregator/AggregatorException
@2.4.0
+#<init>(Ljava/lang/String;)V

+###net/sf/ehcache/search/aggregator/Min
@2.4.0
+#<init>(Lnet/sf/ehcache/search/Attribute;)V
+#aggregateResult()Ljava/lang/Object;
+#accept(Ljava/lang/Object;)V
+#getAttribute()Lnet/sf/ehcache/search/Attribute;
@2.6.0
+#createClone()Lnet/sf/ehcache/search/aggregator/Min;
+#createClone()Lnet/sf/ehcache/search/aggregator/AggregatorInstance;

+###net/sf/ehcache/search/aggregator/Aggregator
@2.4.0
+#createInstance()Lnet/sf/ehcache/search/aggregator/AggregatorInstance;

+###net/sf/ehcache/search/aggregator/Aggregators
@2.4.0
+#min(Lnet/sf/ehcache/search/Attribute;)Lnet/sf/ehcache/search/aggregator/Aggregator;
+#max(Lnet/sf/ehcache/search/Attribute;)Lnet/sf/ehcache/search/aggregator/Aggregator;
+#average(Lnet/sf/ehcache/search/Attribute;)Lnet/sf/ehcache/search/aggregator/Aggregator;
+#sum(Lnet/sf/ehcache/search/Attribute;)Lnet/sf/ehcache/search/aggregator/Aggregator;
+#count()Lnet/sf/ehcache/search/aggregator/Aggregator;

+###net/sf/ehcache/search/aggregator/Max
@2.4.0
+#<init>(Lnet/sf/ehcache/search/Attribute;)V
+#aggregateResult()Ljava/lang/Object;
+#accept(Ljava/lang/Object;)V
+#getAttribute()Lnet/sf/ehcache/search/Attribute;
@2.6.0
+#createClone()Lnet/sf/ehcache/search/aggregator/Max;
+#createClone()Lnet/sf/ehcache/search/aggregator/AggregatorInstance;

+###net/sf/ehcache/search/aggregator/Sum
@2.4.0
+#<init>(Lnet/sf/ehcache/search/Attribute;)V
+#accept(Ljava/lang/Object;)V
+#aggregateResult()Ljava/lang/Number;
+#getAttribute()Lnet/sf/ehcache/search/Attribute;
+#aggregateResult()Ljava/lang/Object;
@2.6.0
+#createClone()Lnet/sf/ehcache/search/aggregator/Sum;
+#createClone()Lnet/sf/ehcache/search/aggregator/AggregatorInstance;

+###net/sf/ehcache/search/Attribute
@2.4.0
+#<init>(Ljava/lang/String;)V
+#getAttributeName()Ljava/lang/String;
+#between(Ljava/lang/Object;Ljava/lang/Object;)Lnet/sf/ehcache/search/expression/Criteria;
+#between(Ljava/lang/Object;Ljava/lang/Object;ZZ)Lnet/sf/ehcache/search/expression/Criteria;
+#in(Ljava/util/Collection;)Lnet/sf/ehcache/search/expression/Criteria;
+#ne(Ljava/lang/Object;)Lnet/sf/ehcache/search/expression/Criteria;
+#lt(Ljava/lang/Object;)Lnet/sf/ehcache/search/expression/Criteria;
+#le(Ljava/lang/Object;)Lnet/sf/ehcache/search/expression/Criteria;
+#gt(Ljava/lang/Object;)Lnet/sf/ehcache/search/expression/Criteria;
+#ge(Ljava/lang/Object;)Lnet/sf/ehcache/search/expression/Criteria;
+#eq(Ljava/lang/Object;)Lnet/sf/ehcache/search/expression/Criteria;
+#ilike(Ljava/lang/String;)Lnet/sf/ehcache/search/expression/Criteria;
+#count()Lnet/sf/ehcache/search/aggregator/Aggregator;
+#max()Lnet/sf/ehcache/search/aggregator/Aggregator;
+#min()Lnet/sf/ehcache/search/aggregator/Aggregator;
+#sum()Lnet/sf/ehcache/search/aggregator/Aggregator;
+#average()Lnet/sf/ehcache/search/aggregator/Aggregator;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###net/sf/ehcache/search/expression/ILike
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getAttributeName()Ljava/lang/String;
+#getRegex()Ljava/lang/String;
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z

+###net/sf/ehcache/search/expression/GreaterThanOrEqual
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#getComparableValue()Ljava/lang/Comparable;

+###net/sf/ehcache/search/expression/Between
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;ZZ)V
+#getMin()Ljava/lang/Comparable;
+#getMax()Ljava/lang/Comparable;
+#isMinInclusive()Z
+#isMaxInclusive()Z

+###net/sf/ehcache/search/expression/InCollection
@2.4.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#getAttributeName()Ljava/lang/String;
+#values()Ljava/util/Collection;
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z

+###net/sf/ehcache/search/expression/LessThanOrEqual
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#getComparableValue()Ljava/lang/Comparable;

+###net/sf/ehcache/search/expression/LessThan
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#getComparableValue()Ljava/lang/Comparable;

+###net/sf/ehcache/search/expression/BaseCriteria
@2.4.0
+#<init>()V
+#and(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/expression/Criteria;
+#not()Lnet/sf/ehcache/search/expression/Criteria;
+#or(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/expression/Criteria;
@2.6.2
+#getExtractor(Ljava/lang/String;Ljava/util/Map;)Lnet/sf/ehcache/search/attribute/AttributeExtractor;

+###net/sf/ehcache/search/expression/And
@2.4.0
+#<init>(Lnet/sf/ehcache/search/expression/Criteria;Lnet/sf/ehcache/search/expression/Criteria;)V
+#and(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/expression/Criteria;
+#getCriterion()[Lnet/sf/ehcache/search/expression/Criteria;
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z

+###net/sf/ehcache/search/expression/NotEqualTo
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z

+###net/sf/ehcache/search/expression/GreaterThan
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#getComparableValue()Ljava/lang/Comparable;

+###net/sf/ehcache/search/expression/AlwaysMatch
@2.4.0
+#<init>()V
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z
+#and(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/expression/Criteria;
+#or(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/expression/Criteria;

+###net/sf/ehcache/search/expression/Not
@2.4.0
+#<init>(Lnet/sf/ehcache/search/expression/Criteria;)V
+#getCriteria()Lnet/sf/ehcache/search/expression/Criteria;
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z

+###net/sf/ehcache/search/expression/Criteria
@2.4.0
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z
+#and(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/expression/Criteria;
+#or(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/expression/Criteria;
+#not()Lnet/sf/ehcache/search/expression/Criteria;

+###net/sf/ehcache/search/expression/ComparableValue
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Lnet/sf/ehcache/search/attribute/AttributeType;)V
+#getAttributeName()Ljava/lang/String;
+#getType()Lnet/sf/ehcache/search/attribute/AttributeType;
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z

+###net/sf/ehcache/search/expression/EqualTo
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
+#getAttributeName()Ljava/lang/String;
+#getType()Lnet/sf/ehcache/search/attribute/AttributeType;
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z

+###net/sf/ehcache/search/expression/Or
@2.4.0
+#<init>(Lnet/sf/ehcache/search/expression/Criteria;Lnet/sf/ehcache/search/expression/Criteria;)V
+#or(Lnet/sf/ehcache/search/expression/Criteria;)Lnet/sf/ehcache/search/expression/Criteria;
+#getCriterion()[Lnet/sf/ehcache/search/expression/Criteria;
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z

+###net/sf/ehcache/search/NullResults
@2.4.1
+#<init>()V
+#discard()V
+#all()Ljava/util/List;
+#range(II)Ljava/util/List;
+#size()I
+#hasKeys()Z
+#hasValues()Z
+#hasAttributes()Z
+#hasAggregators()Z

+###net/sf/ehcache/search/attribute/AttributeExtractorException
@2.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###net/sf/ehcache/search/attribute/AttributeExtractor
@2.4.0
+#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.4.3
+#attributeFor(Lnet/sf/ehcache/Element;Ljava/lang/String;)Ljava/lang/Object;
-#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;

+###net/sf/ehcache/search/attribute/ReflectionAttributeExtractor
@2.4.0
+#<init>(Ljava/lang/String;)V
+#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.4.3
+#attributeFor(Lnet/sf/ehcache/Element;Ljava/lang/String;)Ljava/lang/Object;
-#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;

+###net/sf/ehcache/search/attribute/JavaBeanAttributeExtractor
@2.4.0
+#<init>(Ljava/lang/String;)V
+#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.4.3
+#attributeFor(Lnet/sf/ehcache/Element;Ljava/lang/String;)Ljava/lang/Object;
-#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;

+###net/sf/ehcache/search/attribute/AttributeType
@2.4.0
+#values()[Lnet/sf/ehcache/search/attribute/AttributeType;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/search/attribute/AttributeType;
+#typeFor(Ljava/lang/String;Ljava/lang/Object;)Lnet/sf/ehcache/search/attribute/AttributeType;
+#isSupportedType(Ljava/lang/Object;)Z
+#validateValue(Ljava/lang/String;Ljava/lang/Object;)V
+#isComparable()Z

+###net/sf/ehcache/search/attribute/KeyObjectAttributeExtractor
@2.4.0
+#<init>()V
+#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.4.3
+#attributeFor(Lnet/sf/ehcache/Element;Ljava/lang/String;)Ljava/lang/Object;
-#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;

+###net/sf/ehcache/search/attribute/ValueObjectAttributeExtractor
@2.4.0
+#<init>()V
+#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.4.3
+#attributeFor(Lnet/sf/ehcache/Element;Ljava/lang/String;)Ljava/lang/Object;
-#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;

+###net/sf/ehcache/search/SearchException
@2.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###net/sf/ehcache/constructs/CacheDecoratorFactory
@2.1.0
+#<init>()V
+#createDecoratedEhcache(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)Lnet/sf/ehcache/Ehcache;
@2.3.0
+#createDefaultDecoratedEhcache(Lnet/sf/ehcache/Ehcache;Ljava/util/Properties;)Lnet/sf/ehcache/Ehcache;
+#generateDefaultDecoratedCacheName(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;)Ljava/lang/String;

+###net/sf/ehcache/constructs/EhcacheDecoratorAdapter
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#get(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#put(Lnet/sf/ehcache/Element;Z)V
+#put(Lnet/sf/ehcache/Element;)V
+#putQuiet(Lnet/sf/ehcache/Element;)V
+#putWithWriter(Lnet/sf/ehcache/Element;)V
+#remove(Ljava/lang/Object;Z)Z
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/io/Serializable;Z)Z
+#remove(Ljava/io/Serializable;)Z
+#removeAll()V
+#removeAll(Z)V
+#bootstrap()V
+#calculateInMemorySize()J
+#clearStatistics()V
+#disableDynamicFeatures()V
+#dispose()V
+#evictExpiredElements()V
+#flush()V
+#getWithLoader(Ljava/lang/Object;Lnet/sf/ehcache/loader/CacheLoader;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAllWithLoader(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Map;
+#registerCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#unregisterCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#load(Ljava/lang/Object;)V
+#loadAll(Ljava/util/Collection;Ljava/lang/Object;)V
+#getAverageGetTime()F
+#getBootstrapCacheLoader()Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
+#getCacheConfiguration()Lnet/sf/ehcache/config/CacheConfiguration;
+#getCacheEventNotificationService()Lnet/sf/ehcache/event/RegisteredEventListeners;
+#getCacheExceptionHandler()Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;
+#getCacheManager()Lnet/sf/ehcache/CacheManager;
+#getDiskStoreSize()I
+#getGuid()Ljava/lang/String;
+#getInternalContext()Ljava/lang/Object;
+#getKeys()Ljava/util/List;
+#getKeysNoDuplicateCheck()Ljava/util/List;
+#getKeysWithExpiryCheck()Ljava/util/List;
+#getLiveCacheStatistics()Lnet/sf/ehcache/statistics/LiveCacheStatistics;
+#getMemoryStoreSize()J
+#getName()Ljava/lang/String;
+#getRegisteredCacheExtensions()Ljava/util/List;
+#getRegisteredCacheLoaders()Ljava/util/List;
+#getRegisteredCacheWriter()Lnet/sf/ehcache/writer/CacheWriter;
+#getSampledCacheStatistics()Lnet/sf/ehcache/statistics/sampled/SampledCacheStatistics;
+#getSize()I
+#getSizeBasedOnAccuracy(I)I
+#getStatistics()Lnet/sf/ehcache/Statistics;
+#getStatisticsAccuracy()I
+#getStatus()Lnet/sf/ehcache/Status;
+#getWriterManager()Lnet/sf/ehcache/writer/CacheWriterManager;
+#initialise()V
+#isClusterCoherent()Z
+#isDisabled()Z
+#isElementInMemory(Ljava/lang/Object;)Z
+#isElementInMemory(Ljava/io/Serializable;)Z
+#isElementOnDisk(Ljava/lang/Object;)Z
+#isElementOnDisk(Ljava/io/Serializable;)Z
+#isExpired(Lnet/sf/ehcache/Element;)Z
+#isKeyInCache(Ljava/lang/Object;)Z
+#isNodeCoherent()Z
+#isSampledStatisticsEnabled()Z
+#isStatisticsEnabled()Z
+#isValueInCache(Ljava/lang/Object;)Z
+#registerCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#registerCacheWriter(Lnet/sf/ehcache/writer/CacheWriter;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeQuiet(Ljava/lang/Object;)Z
+#removeQuiet(Ljava/io/Serializable;)Z
+#removeWithWriter(Ljava/lang/Object;)Z
+#setBootstrapCacheLoader(Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
+#setCacheExceptionHandler(Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;)V
+#setCacheManager(Lnet/sf/ehcache/CacheManager;)V
+#setDisabled(Z)V
+#setDiskStorePath(Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#setNodeCoherent(Z)V
+#setSampledStatisticsEnabled(Z)V
+#setStatisticsAccuracy(I)V
+#setStatisticsEnabled(Z)V
+#setTransactionManagerLookup(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
+#unregisterCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#unregisterCacheWriter()V
+#waitUntilClusterCoherent()V
+#clone()Ljava/lang/Object;
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
@2.3.0
+#calculateOffHeapSize()J
+#getOffHeapStoreSize()J
+#toString()Ljava/lang/String;
@2.4.0
*#isClusterCoherent()Z[deprecated]
*#isNodeCoherent()Z[deprecated]
*#setNodeCoherent(Z)V[deprecated]
*#waitUntilClusterCoherent()V[deprecated]
+#createQuery()Lnet/sf/ehcache/search/Query;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#isSearchable()Z
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#acquireReadLockOnKey(Ljava/lang/Object;)V
+#acquireWriteLockOnKey(Ljava/lang/Object;)V
+#releaseReadLockOnKey(Ljava/lang/Object;)V
+#releaseWriteLockOnKey(Ljava/lang/Object;)V
+#tryReadLockOnKey(Ljava/lang/Object;J)Z
+#tryWriteLockOnKey(Ljava/lang/Object;J)Z
+#isClusterBulkLoadEnabled()Z
+#isNodeBulkLoadEnabled()Z
+#setNodeBulkLoadEnabled(Z)V
+#waitUntilClusterBulkLoadComplete()V
@2.4.1
+#isReadLockedByCurrentThread(Ljava/lang/Object;)Z
+#isWriteLockedByCurrentThread(Ljava/lang/Object;)Z
@2.5.0
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#putAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;Z)V
+#calculateOnDiskSize()J
+#hasAbortedSizeOf()Z
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#removeAndReturnElement(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#recalculateSize(Ljava/lang/Object;)V
@2.5.2
+#putIfAbsent(Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/Element;
@2.6.0
-#setDiskStorePath(Ljava/lang/String;)V
@2.6.5
+#registerDynamicAttributesExtractor(Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V

+###net/sf/ehcache/constructs/nonstop/TaskNotSubmittedTimeoutException
@2.4.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#getSubmitAttemptCount()I

+###net/sf/ehcache/constructs/nonstop/ClusterOperation
@2.4.0
+#performClusterOperation()Ljava/lang/Object;
+#performClusterOperationTimedOut(Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;)Ljava/lang/Object;

+###net/sf/ehcache/constructs/nonstop/store/NonstopStore
@2.4.0
+#executeClusterOperation(Lnet/sf/ehcache/constructs/nonstop/ClusterOperation;)Ljava/lang/Object;

+###net/sf/ehcache/constructs/nonstop/store/ExceptionOnTimeoutStore
@2.4.0
+#getInstance()Lnet/sf/ehcache/constructs/nonstop/store/ExceptionOnTimeoutStore;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#put(Lnet/sf/ehcache/Element;)Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#flush()V
+#getInternalContext()Ljava/lang/Object;
+#getSize()I
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#addStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#bufferFull()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#dispose()V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#expireElements()V
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getMBean()Ljava/lang/Object;
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#getTerracottaClusteredSize()I
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#removeStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#setAttributeExtractors(Ljava/util/Map;)V
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#getLocalKeys()Ljava/util/Set;
+#unlockedGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
+#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
+#executeClusterOperation(Lnet/sf/ehcache/constructs/nonstop/ClusterOperation;)Ljava/lang/Object;
@2.4.1
-#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
-#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#getAllQuiet(Ljava/util/Collection;)Ljava/util/Map;
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#putAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;)V
+#hasAbortedSizeOf()Z
+#getTransactionalMode()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
+#recalculateSize(Ljava/lang/Object;)V

+###net/sf/ehcache/constructs/nonstop/store/NonstopTimeoutBehaviorStoreResolver
@2.4.0
+#resolveTimeoutBehaviorStore()Lnet/sf/ehcache/constructs/nonstop/store/NonstopStore;

+###net/sf/ehcache/constructs/nonstop/store/LocalReadsOnTimeoutStore
@2.4.0
+#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#put(Lnet/sf/ehcache/Element;)Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#flush()V
+#getInternalContext()Ljava/lang/Object;
+#getSize()I
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#addStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#bufferFull()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#dispose()V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#expireElements()V
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getMBean()Ljava/lang/Object;
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#getTerracottaClusteredSize()I
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#removeStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#setAttributeExtractors(Ljava/util/Map;)V
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#getLocalKeys()Ljava/util/Set;
+#unlockedGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
+#executeClusterOperation(Lnet/sf/ehcache/constructs/nonstop/ClusterOperation;)Ljava/lang/Object;
+#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.4.1
-#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
-#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#getAllQuiet(Ljava/util/Collection;)Ljava/util/Map;
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#putAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;)V
+#hasAbortedSizeOf()Z
+#getTransactionalMode()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
+#recalculateSize(Ljava/lang/Object;)V

+###net/sf/ehcache/constructs/nonstop/store/NoOpOnTimeoutStore
@2.4.0
+#getInstance()Lnet/sf/ehcache/constructs/nonstop/store/NoOpOnTimeoutStore;
+#addStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#bufferFull()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#dispose()V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#expireElements()V
+#flush()V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getInternalContext()Ljava/lang/Object;
+#getKeys()Ljava/util/List;
+#getMBean()Ljava/lang/Object;
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getSize()I
+#getStatus()Lnet/sf/ehcache/Status;
+#getTerracottaClusteredSize()I
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#put(Lnet/sf/ehcache/Element;)Z
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#removeStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#setAttributeExtractors(Ljava/util/Map;)V
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#getLocalKeys()Ljava/util/Set;
+#unlockedGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
+#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
+#executeClusterOperation(Lnet/sf/ehcache/constructs/nonstop/ClusterOperation;)Ljava/lang/Object;
@2.4.1
-#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
-#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#hasAbortedSizeOf()Z
+#getAllQuiet(Ljava/util/Collection;)Ljava/util/Map;
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#putAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;)V
+#getTransactionalMode()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
+#recalculateSize(Ljava/lang/Object;)V

+###net/sf/ehcache/constructs/nonstop/store/RejoinAwareBlockingOperation
@2.4.1
+#<init>(Lnet/sf/ehcache/constructs/nonstop/store/ExecutorServiceStore;Ljava/util/concurrent/Callable;)V
+#call()Ljava/lang/Object;
+#clusterRejoined()V

+###net/sf/ehcache/constructs/nonstop/store/NonstopStoreImpl
@2.4.0
+#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/cluster/CacheCluster;Lnet/sf/ehcache/config/NonstopConfiguration;)V
+#resolveTimeoutBehaviorStore()Lnet/sf/ehcache/constructs/nonstop/store/NonstopStore;
+#getInternalContext()Ljava/lang/Object;
+#waitUntilClusterCoherent()V
+#bufferFull()Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getMBean()Ljava/lang/Object;
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#expireElements()V
+#addStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#removeStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#setAttributeExtractors(Ljava/util/Map;)V
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#dispose()V
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#flush()V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getKeys()Ljava/util/List;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getSize()I
+#getTerracottaClusteredSize()I
+#put(Lnet/sf/ehcache/Element;)Z
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#getLocalKeys()Ljava/util/Set;
+#unlockedGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
+#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
+#executeClusterOperation(Lnet/sf/ehcache/constructs/nonstop/ClusterOperation;)Ljava/lang/Object;
@2.4.1
+#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/cluster/CacheCluster;Lnet/sf/ehcache/config/NonstopConfiguration;Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
+#clusterRejoined()V
-#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/cluster/CacheCluster;Lnet/sf/ehcache/config/NonstopConfiguration;)V
-#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
-#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.5.0
+#hasAbortedSizeOf()Z
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#getAllQuiet(Ljava/util/Collection;)Ljava/util/Map;
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#putAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;)V
+#getTransactionalMode()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
+#recalculateSize(Ljava/lang/Object;)V

+###net/sf/ehcache/constructs/nonstop/store/RejoinAwareNonstopStore
@2.4.1
+#clusterRejoined()V

+###net/sf/ehcache/constructs/nonstop/store/TransactionalExecutorServiceStore
@2.4.1
+#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/config/NonstopConfiguration;Lnet/sf/ehcache/constructs/nonstop/store/NonstopTimeoutBehaviorStoreResolver;Lnet/sf/ehcache/cluster/CacheCluster;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContextThreadLocal;)V
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#getSize()I
+#getTerracottaClusteredSize()I
+#containsKey(Ljava/lang/Object;)Z

+###net/sf/ehcache/constructs/nonstop/store/ExecutorServiceStore
@2.4.0
+#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/config/NonstopConfiguration;Lnet/sf/ehcache/constructs/nonstop/store/NonstopTimeoutBehaviorStoreResolver;Lnet/sf/ehcache/cluster/CacheCluster;)V
+#dispose()V
+#setNodeCoherent(Z)V
+#setAttributeExtractors(Ljava/util/Map;)V
+#addStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#removeStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#getSize()I
+#getInMemorySize()I
+#getOffHeapSize()I
+#getOnDiskSize()I
+#getTerracottaClusteredSize()I
+#getInMemorySizeInBytes()J
+#getOffHeapSizeInBytes()J
+#getOnDiskSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#expireElements()V
+#flush()V
+#bufferFull()Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getInternalContext()Ljava/lang/Object;
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#waitUntilClusterCoherent()V
+#getMBean()Ljava/lang/Object;
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#getLocalKeys()Ljava/util/Set;
+#unlockedGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
+#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
+#executeClusterOperation(Lnet/sf/ehcache/constructs/nonstop/ClusterOperation;)Ljava/lang/Object;
@2.4.1
+#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/config/NonstopConfiguration;Lnet/sf/ehcache/constructs/nonstop/store/NonstopTimeoutBehaviorStoreResolver;Lnet/sf/ehcache/cluster/CacheCluster;Lnet/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContextThreadLocal;)V
+#clusterRejoined()V
-#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/config/NonstopConfiguration;Lnet/sf/ehcache/constructs/nonstop/store/NonstopTimeoutBehaviorStoreResolver;Lnet/sf/ehcache/cluster/CacheCluster;)V
-#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
-#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#putAll(Ljava/util/Collection;)V
+#getAllQuiet(Ljava/util/Collection;)Ljava/util/Map;
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#removeAll(Ljava/util/Collection;)V
+#hasAbortedSizeOf()Z
+#getTransactionalMode()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
+#recalculateSize(Ljava/lang/Object;)V

+###net/sf/ehcache/constructs/nonstop/NonStopCacheException
@2.4.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###net/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContextThreadLocal
@2.4.1
+#<init>()V
+#areAnyExplicitLocksAcquired()Z
+#getCurrentThreadLockContext()Lnet/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContext;

+###net/sf/ehcache/constructs/nonstop/concurrency/InvalidLockStateAfterRejoinException
@2.4.1
+#<init>()V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###net/sf/ehcache/constructs/nonstop/concurrency/CacheOperationUnderExplicitLockCallable
@2.4.1
+#<init>(Lnet/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContext;Lnet/sf/ehcache/config/NonstopConfiguration;Ljava/util/concurrent/Callable;)V
+#call()Ljava/lang/Object;

+###net/sf/ehcache/constructs/nonstop/concurrency/NonstopCacheLockProvider
@2.4.1
+#<init>(Lnet/sf/ehcache/constructs/nonstop/store/NonstopStore;Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContextThreadLocal;)V
+#getSyncForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
+#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
+#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.5.0
-#getAndWriteLockAllSyncForKeys([Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#getAndWriteLockAllSyncForKeys(J[Ljava/lang/Object;)[Lnet/sf/ehcache/concurrent/Sync;
-#unlockWriteLockForAllKeys([Ljava/lang/Object;)V
@2.5.2
+#<init>(Lnet/sf/ehcache/constructs/nonstop/store/NonstopStore;Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContextThreadLocal;Lnet/sf/ehcache/config/NonstopConfiguration;)V
-#<init>(Lnet/sf/ehcache/constructs/nonstop/store/NonstopStore;Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContextThreadLocal;)V

+###net/sf/ehcache/constructs/nonstop/NonstopTimeoutBehaviorFactory
@2.4.0
+#createNonstopTimeoutBehaviorStore(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;)Lnet/sf/ehcache/constructs/nonstop/store/NonstopStore;

+###net/sf/ehcache/constructs/nonstop/ClusterOperationCallable
@2.4.1
+#getClusterOperation()Lnet/sf/ehcache/constructs/nonstop/ClusterOperation;

+###net/sf/ehcache/constructs/nonstop/CacheManagerExecutorServiceFactory
@2.4.0
+#getInstance()Lnet/sf/ehcache/constructs/nonstop/CacheManagerExecutorServiceFactory;
+#getOrCreateNonstopExecutorService(Lnet/sf/ehcache/CacheManager;)Lnet/sf/ehcache/constructs/nonstop/NonstopExecutorService;
+#shutdown(Lnet/sf/ehcache/CacheManager;)V

+###net/sf/ehcache/constructs/nonstop/NonstopExecutorServiceImpl
@2.4.0
+#<init>(Ljava/util/concurrent/ThreadFactory;)V
+#execute(Ljava/util/concurrent/Callable;J)Ljava/lang/Object;
+#shutdown()V

+###net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder
@2.4.0
+#terracottaStoreInitialized(Lnet/sf/ehcache/store/TerracottaStore;)V
+#getUnderlyingTerracottaStore()Lnet/sf/ehcache/store/TerracottaStore;
+#getNonstopExecutorService()Lnet/sf/ehcache/constructs/nonstop/NonstopExecutorService;
+#getUnderlyingCacheLockProvider()Lnet/sf/ehcache/concurrent/CacheLockProvider;
@2.4.6
+#getNonstopStore()Lnet/sf/ehcache/constructs/nonstop/store/NonstopStore;
+#getCacheEventReplicator()Lnet/sf/ehcache/event/CacheEventListener;

+###net/sf/ehcache/constructs/nonstop/NonstopThreadPool
@2.4.0
+#<init>(Ljava/util/concurrent/ThreadFactory;)V
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#shutdownNow()V
@2.4.8
+#getNonstopThreadStackTrace()[Ljava/lang/StackTraceElement;
@2.5.0
-#getNonstopThreadStackTrace()[Ljava/lang/StackTraceElement;
@2.5.2
+#getNonstopThreadStackTrace()[Ljava/lang/StackTraceElement;

+###net/sf/ehcache/constructs/nonstop/NonstopExecutorService
@2.4.0
+#execute(Ljava/util/concurrent/Callable;J)Ljava/lang/Object;
+#shutdown()V

+###net/sf/ehcache/constructs/nonstop/ThrowTimeoutException
@2.4.1
+#<init>()V

+###net/sf/ehcache/constructs/nonstop/NonstopExecutorServiceFactory
@2.4.0
+#getOrCreateNonstopExecutorService(Lnet/sf/ehcache/CacheManager;)Lnet/sf/ehcache/constructs/nonstop/NonstopExecutorService;
+#shutdown(Lnet/sf/ehcache/CacheManager;)V

+###net/sf/ehcache/constructs/nonstop/util/OverrideCheck
@2.4.0
+#check(Ljava/lang/Class;Ljava/lang/Class;)V

+###net/sf/ehcache/constructs/nonstop/util/CountingThreadFactory
@2.4.0
+#<init>(Ljava/util/concurrent/ThreadFactory;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
+#getNumberOfThreads()I

+###net/sf/ehcache/LoaderTimeoutException
@2.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###net/sf/ehcache/cluster/ClusterSchemeNotAvailableException
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/cluster/ClusterScheme;)V
+#<init>(Lnet/sf/ehcache/cluster/ClusterScheme;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lnet/sf/ehcache/cluster/ClusterScheme;Ljava/lang/String;)V
+#<init>(Lnet/sf/ehcache/cluster/ClusterScheme;Ljava/lang/Throwable;)V
+#getUnavailableClusterScheme()Lnet/sf/ehcache/cluster/ClusterScheme;

+###net/sf/ehcache/transaction/DeadLockException
@2.4.0
+#<init>(Ljava/lang/String;)V

+###net/sf/ehcache/transaction/TransactionException
@2.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###net/sf/ehcache/transaction/local/TransactionListener
@2.4.0
+#beforeCommit()V
+#afterCommit()V
+#afterRollback()V

+###net/sf/ehcache/transaction/local/LocalTransactionStore
@2.4.0
+#<init>(Lnet/sf/ehcache/TransactionController;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
+#put(Lnet/sf/ehcache/Element;)Z
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#getSize()I
+#getTerracottaClusteredSize()I
+#containsKey(Ljava/lang/Object;)Z
+#removeAll()V
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#setAttributeExtractors(Ljava/util/Map;)V
@2.6.0
+#<init>(Lnet/sf/ehcache/TransactionController;Lnet/sf/ehcache/transaction/TransactionIDFactory;Lnet/sf/ehcache/transaction/SoftLockManager;Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
+#dispose()V
+#recover()Ljava/util/Set;
-#<init>(Lnet/sf/ehcache/TransactionController;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V

+###net/sf/ehcache/transaction/local/JtaLocalTransactionStore
@2.4.0
+#<init>(Lnet/sf/ehcache/transaction/local/LocalTransactionStore;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/TransactionController;)V
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#getSize()I
+#getTerracottaClusteredSize()I
+#containsKey(Ljava/lang/Object;)Z
@2.5.0
+#putAll(Ljava/util/Collection;)V
+#removeAll(Ljava/util/Collection;)V

+###net/sf/ehcache/transaction/local/LocalTransactionContext
@2.4.0
+#<init>(ILnet/sf/ehcache/transaction/TransactionID;)V
+#getExpirationTimestamp()J
+#timedOut()Z
+#setRollbackOnly()V
+#registerSoftLock(Ljava/lang/String;Lnet/sf/ehcache/transaction/local/LocalTransactionStore;Lnet/sf/ehcache/transaction/SoftLock;)V
+#updateSoftLock(Ljava/lang/String;Lnet/sf/ehcache/transaction/SoftLock;)V
+#getSoftLocksForCache(Ljava/lang/String;)Ljava/util/List;
+#commit(Z)V
+#rollback()V
+#getTransactionId()Lnet/sf/ehcache/transaction/TransactionID;
+#addListener(Lnet/sf/ehcache/transaction/local/TransactionListener;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.4.7
+#hasLockedAnything()Z
@2.4.8
+#timeBeforeTimeout()J
-#getExpirationTimestamp()J
@2.5.0
+#getExpirationTimestamp()J
-#timeBeforeTimeout()J
@2.5.1
+#timeBeforeTimeout()J
-#getExpirationTimestamp()J
@2.6.0
+#<init>(ILnet/sf/ehcache/transaction/TransactionIDFactory;)V
-#<init>(ILnet/sf/ehcache/transaction/TransactionID;)V

+###net/sf/ehcache/transaction/TransactionIDFactory
@2.4.0
+#createTransactionID()Lnet/sf/ehcache/transaction/TransactionID;
+#createXidTransactionID(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
@2.5.2
+#restoreTransactionID(Lnet/sf/ehcache/transaction/TransactionIDSerializedForm;)Lnet/sf/ehcache/transaction/TransactionID;
+#restoreXidTransactionID(Lnet/sf/ehcache/transaction/XidTransactionIDSerializedForm;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
@2.6.0
+#createXidTransactionID(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
+#markForCommit(Lnet/sf/ehcache/transaction/TransactionID;)V
+#markForRollback(Lnet/sf/ehcache/transaction/xa/XidTransactionID;)V
+#isDecisionCommit(Lnet/sf/ehcache/transaction/TransactionID;)Z
+#clear(Lnet/sf/ehcache/transaction/TransactionID;)V
+#getAllXidTransactionIDsFor(Lnet/sf/ehcache/Ehcache;)Ljava/util/Set;
+#getAllTransactionIDs()Ljava/util/Set;
+#isPersistent()Ljava/lang/Boolean;
+#isExpired(Lnet/sf/ehcache/transaction/TransactionID;)Z
-#createXidTransactionID(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;

+###net/sf/ehcache/transaction/SoftLock
@2.4.0
+#getKey()Ljava/lang/Object;
+#getTransactionID()Lnet/sf/ehcache/transaction/TransactionID;
+#getElement(Lnet/sf/ehcache/transaction/TransactionID;)Lnet/sf/ehcache/Element;
+#updateElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#lock()V
+#tryLock(J)Z
+#clearTryLock()V
+#unlock()V
+#freeze()V
+#unfreeze()V
+#isExpired()Z
+#getFrozenElement()Lnet/sf/ehcache/Element;
@2.5.0
+#wasPinned()Z
@2.6.0
+#getElement(Lnet/sf/ehcache/transaction/TransactionID;Lnet/sf/ehcache/transaction/SoftLockID;)Lnet/sf/ehcache/Element;
-#getTransactionID()Lnet/sf/ehcache/transaction/TransactionID;
-#wasPinned()Z
-#getElement(Lnet/sf/ehcache/transaction/TransactionID;)Lnet/sf/ehcache/Element;
-#updateElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#getFrozenElement()Lnet/sf/ehcache/Element;

+###net/sf/ehcache/transaction/ReadCommittedSoftLockImpl
@2.4.0
+#getKey()Ljava/lang/Object;
+#getElement(Lnet/sf/ehcache/transaction/TransactionID;)Lnet/sf/ehcache/Element;
+#updateElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#getTransactionID()Lnet/sf/ehcache/transaction/TransactionID;
+#lock()V
+#tryLock(J)Z
+#clearTryLock()V
+#unlock()V
+#freeze()V
+#getFrozenElement()Lnet/sf/ehcache/Element;
+#unfreeze()V
+#isExpired()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0
+#wasPinned()Z
@2.6.0
+#getElement(Lnet/sf/ehcache/transaction/TransactionID;Lnet/sf/ehcache/transaction/SoftLockID;)Lnet/sf/ehcache/Element;
-#getElement(Lnet/sf/ehcache/transaction/TransactionID;)Lnet/sf/ehcache/Element;
-#updateElement(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
-#getTransactionID()Lnet/sf/ehcache/transaction/TransactionID;
-#wasPinned()Z
-#getFrozenElement()Lnet/sf/ehcache/Element;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###net/sf/ehcache/transaction/TransactionAwareAttributeExtractor
@2.4.0
+#<init>(Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;Lnet/sf/ehcache/search/attribute/AttributeExtractor;)V
+#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;
@2.4.3
+#attributeFor(Lnet/sf/ehcache/Element;Ljava/lang/String;)Ljava/lang/Object;
-#attributeFor(Lnet/sf/ehcache/Element;)Ljava/lang/Object;

+###net/sf/ehcache/transaction/TransactionInterruptedException
@2.4.0
+#<init>(Ljava/lang/String;)V

+###net/sf/ehcache/transaction/TransactionID
@2.4.0
+#isDecisionCommit()Z
+#markForCommit()V
@2.6.0
-#isDecisionCommit()Z
-#markForCommit()V

+###net/sf/ehcache/transaction/TransactionIDFactoryImpl
@2.4.0
+#<init>()V
+#createTransactionID()Lnet/sf/ehcache/transaction/TransactionID;
+#createXidTransactionID(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
@2.5.2
+#restoreTransactionID(Lnet/sf/ehcache/transaction/TransactionIDSerializedForm;)Lnet/sf/ehcache/transaction/TransactionID;
+#restoreXidTransactionID(Lnet/sf/ehcache/transaction/XidTransactionIDSerializedForm;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
@2.6.0
+#createXidTransactionID(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
+#isPersistent()Ljava/lang/Boolean;
+#isExpired(Lnet/sf/ehcache/transaction/TransactionID;)Z
-#createXidTransactionID(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;

+###net/sf/ehcache/transaction/xa/XAExecutionListener
@2.4.0
+#beforePrepare(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V
+#afterCommitOrRollback(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;)V

+###net/sf/ehcache/transaction/xa/processor/XAThreadPool
@2.4.0
+#<init>()V
+#getMultiRunner()Lnet/sf/ehcache/transaction/xa/processor/XAThreadPool$MultiRunner;
+#shutdown()V

+###net/sf/ehcache/transaction/xa/processor/XARequestProcessor
@2.4.0
+#<init>(Lnet/sf/ehcache/transaction/xa/EhcacheXAResourceImpl;)V
+#shutdown()V
+#process(Lnet/sf/ehcache/transaction/xa/processor/XARequest;)I

+###net/sf/ehcache/transaction/xa/processor/XAThreadPool$MultiRunner
@2.4.0
+#execute(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#release()V
+#run()V

+###net/sf/ehcache/transaction/xa/processor/XARequest
@2.4.0
+#<init>(Lnet/sf/ehcache/transaction/xa/processor/XARequest$RequestType;Ljavax/transaction/xa/Xid;)V
+#<init>(Lnet/sf/ehcache/transaction/xa/processor/XARequest$RequestType;Ljavax/transaction/xa/Xid;Z)V
+#getRequestType()Lnet/sf/ehcache/transaction/xa/processor/XARequest$RequestType;
+#getXid()Ljavax/transaction/xa/Xid;
+#isOnePhase()Z

+###net/sf/ehcache/transaction/xa/processor/XARequest$RequestType
@2.4.0
+#values()[Lnet/sf/ehcache/transaction/xa/processor/XARequest$RequestType;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/transaction/xa/processor/XARequest$RequestType;

+###net/sf/ehcache/transaction/xa/commands/StorePutCommand
@2.4.0
+#<init>(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)V
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
+#getElement()Lnet/sf/ehcache/Element;
+#getObjectKey()Ljava/lang/Object;

+###net/sf/ehcache/transaction/xa/commands/Command
@2.4.0
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
+#prepare(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/xa/XidTransactionID;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#rollback(Lnet/sf/ehcache/store/Store;)V
+#getObjectKey()Ljava/lang/Object;
@2.6.0
+#prepare(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockManager;Lnet/sf/ehcache/transaction/xa/XidTransactionID;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#rollback(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockManager;)V
-#prepare(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/xa/XidTransactionID;Lnet/sf/ehcache/store/ElementValueComparator;)Z
-#rollback(Lnet/sf/ehcache/store/Store;)V
@2.6.9
+#rollback(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockManager;Lnet/sf/ehcache/store/ElementValueComparator;)V
-#rollback(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockManager;)V

+###net/sf/ehcache/transaction/xa/commands/StoreRemoveCommand
@2.4.0
+#<init>(Ljava/lang/Object;Lnet/sf/ehcache/Element;)V
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
+#getObjectKey()Ljava/lang/Object;
+#getEntry()Lnet/sf/ehcache/CacheEntry;

+###net/sf/ehcache/transaction/xa/commands/AbstractStoreCommand
@2.4.0
+#<init>(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)V
+#prepare(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/xa/XidTransactionID;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#rollback(Lnet/sf/ehcache/store/Store;)V
@2.6.0
+#prepare(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockManager;Lnet/sf/ehcache/transaction/xa/XidTransactionID;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#rollback(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockManager;)V
-#prepare(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/xa/XidTransactionID;Lnet/sf/ehcache/store/ElementValueComparator;)Z
-#rollback(Lnet/sf/ehcache/store/Store;)V
@2.6.9
+#rollback(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockManager;Lnet/sf/ehcache/store/ElementValueComparator;)V
-#rollback(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/transaction/SoftLockManager;)V

+###net/sf/ehcache/transaction/xa/OptimisticLockFailureException
@2.4.0
+#<init>()V

+###net/sf/ehcache/transaction/xa/XidTransactionID
@2.4.0
+#getXid()Ljavax/transaction/xa/Xid;
+#markForRollback()V
+#isDecisionRollback()Z
@2.6.0
+#getCacheName()Ljava/lang/String;
-#markForRollback()V
-#isDecisionRollback()Z

+###net/sf/ehcache/transaction/xa/XidTransactionIDImpl
@2.4.0
+#<init>(Ljavax/transaction/xa/Xid;)V
+#isDecisionCommit()Z
+#markForCommit()V
+#isDecisionRollback()Z
+#markForRollback()V
+#getXid()Ljavax/transaction/xa/Xid;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.6.0
+#<init>(Ljavax/transaction/xa/Xid;Ljava/lang/String;)V
+#getCacheName()Ljava/lang/String;
-#<init>(Ljavax/transaction/xa/Xid;)V
-#isDecisionCommit()Z
-#markForCommit()V
-#isDecisionRollback()Z
-#markForRollback()V

+###net/sf/ehcache/transaction/xa/XATransactionStore
@2.4.0
+#<init>(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/TransactionIDFactory;Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
+#getOrCreateXAResource()Lnet/sf/ehcache/transaction/xa/EhcacheXAResourceImpl;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getSize()I
+#getTerracottaClusteredSize()I
+#containsKey(Ljava/lang/Object;)Z
+#getKeys()Ljava/util/List;
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#setAttributeExtractors(Ljava/util/Map;)V
@2.6.0
+#<init>(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/transaction/SoftLockManager;Lnet/sf/ehcache/transaction/TransactionIDFactory;Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V
-#<init>(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;Lnet/sf/ehcache/transaction/SoftLockFactory;Lnet/sf/ehcache/transaction/TransactionIDFactory;Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;)V

+###net/sf/ehcache/transaction/TransactionIDImpl
@2.4.0
+#isDecisionCommit()Z
+#markForCommit()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.6.0
+#<init>()V
-#isDecisionCommit()Z
-#markForCommit()V

+###net/sf/ehcache/transaction/ReadCommittedSoftLockFactoryImpl
@2.4.0
+#<init>(Ljava/lang/String;)V
+#createSoftLock(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/transaction/SoftLock;
+#getKeysInvisibleInContext(Lnet/sf/ehcache/transaction/local/LocalTransactionContext;)Ljava/util/Set;
+#collectExpiredTransactionIDs()Ljava/util/Set;
+#collectAllSoftLocksForTransactionID(Lnet/sf/ehcache/transaction/TransactionID;)Ljava/util/Set;
@2.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#createSoftLock(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/transaction/SoftLock;
-#<init>(Ljava/lang/String;)V
-#createSoftLock(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/transaction/SoftLock;
@2.6.0
-###net/sf/ehcache/transaction/ReadCommittedSoftLockFactoryImpl

+###net/sf/ehcache/transaction/TransactionTimeoutException
@2.4.0
+#<init>(Ljava/lang/String;)V

+###net/sf/ehcache/transaction/AbstractTransactionStore
@2.4.0
+#getInMemorySize()I
+#getOffHeapSize()I
+#getOnDiskSize()I
+#getInMemorySizeInBytes()J
+#getOffHeapSizeInBytes()J
+#getOnDiskSizeInBytes()J
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#dispose()V
+#getStatus()Lnet/sf/ehcache/Status;
+#expireElements()V
+#flush()V
+#bufferFull()Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getInternalContext()Ljava/lang/Object;
+#getMBean()Ljava/lang/Object;
+#setNodeCoherent(Z)V
+#isNodeCoherent()Z
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#waitUntilClusterCoherent()V
+#setAttributeExtractors(Ljava/util/Map;)V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
@2.4.1
+#unsafeGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unsafeGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unlockedGetQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getLocalKeys()Ljava/util/Set;
@2.5.0
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#hasAbortedSizeOf()Z
+#getTransactionalMode()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;

+###net/sf/ehcache/transaction/SoftLockFactory
@2.4.0
+#createSoftLock(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/transaction/SoftLock;
+#getKeysInvisibleInContext(Lnet/sf/ehcache/transaction/local/LocalTransactionContext;)Ljava/util/Set;
+#collectExpiredTransactionIDs()Ljava/util/Set;
+#collectAllSoftLocksForTransactionID(Lnet/sf/ehcache/transaction/TransactionID;)Ljava/util/Set;
@2.5.0
+#createSoftLock(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/transaction/SoftLock;
-#createSoftLock(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/transaction/SoftLock;
@2.6.0
+#newSoftLock(Lnet/sf/ehcache/transaction/SoftLockManager;Ljava/lang/Object;)Lnet/sf/ehcache/transaction/SoftLock;
-#createSoftLock(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/transaction/SoftLock;
-#getKeysInvisibleInContext(Lnet/sf/ehcache/transaction/local/LocalTransactionContext;)Ljava/util/Set;
-#collectExpiredTransactionIDs()Ljava/util/Set;
-#collectAllSoftLocksForTransactionID(Lnet/sf/ehcache/transaction/TransactionID;)Ljava/util/Set;

+###net/sf/ehcache/TransactionController
@2.4.0
+#getDefaultTransactionTimeout()I
+#setDefaultTransactionTimeout(I)V
+#begin()V
+#begin(I)V
+#commit()V
+#commit(Z)V
+#rollback()V
+#setRollbackOnly()V
+#getCurrentTransactionContext()Lnet/sf/ehcache/transaction/local/LocalTransactionContext;
+#getTransactionCommittedCount()J
+#getTransactionRolledBackCount()J
+#getTransactionTimedOutCount()J
@2.6.0
+#getRecoveryManager()Lnet/sf/ehcache/transaction/local/LocalRecoveryManager;

+###net/sf/ehcache/event/RegisteredEventListeners$ElementCreationCallback
@2.4.4
+#createElement(Ljava/lang/ClassLoader;)Lnet/sf/ehcache/Element;

+###net/sf/ehcache/util/MemorySizeParser
@2.3.0
+#<init>()V
+#parse(Ljava/lang/String;)J

+###net/sf/ehcache/util/Timestamper
@2.4.0
+#next()J

+###net/sf/ehcache/util/AggregateIterator
@2.3.0
+#<init>(Ljava/util/Collection;Ljava/util/List;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###net/sf/ehcache/util/lang/VicariousThreadLocal
@2.4.3
+#<init>()V
+#get()Ljava/lang/Object;
+#set(Ljava/lang/Object;)V
+#remove()V
+#poll()V

+###net/sf/ehcache/util/CacheTransactionHelper
@2.4.1
+#<init>()V
+#beginTransactionIfNeeded(Lnet/sf/ehcache/Ehcache;)V
+#commitTransactionIfNeeded(Lnet/sf/ehcache/Ehcache;)V
+#isTransactionStarted(Lnet/sf/ehcache/Ehcache;)Z

+###net/sf/ehcache/util/VmUtils
@2.3.0
+#<init>()V
+#isInGoogleAppEngine()Z

+###net/sf/ehcache/util/LargeCollection
@2.3.0
+#<init>()V
+#add(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#iterator()Ljava/util/Iterator;
+#size()I
+#sourceIterator()Ljava/util/Iterator;
+#sourceSize()I

+###net/sf/ehcache/util/SetWrapperList
@2.3.0
+#<init>(Ljava/util/Collection;)V
+#add(Ljava/lang/Object;)Z
+#add(ILjava/lang/Object;)V
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#get(I)Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#remove(Ljava/lang/Object;)Z
+#remove(I)Ljava/lang/Object;
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#size()I
+#subList(II)Ljava/util/List;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
@2.5.1
-###net/sf/ehcache/util/SetWrapperList

+###net/sf/ehcache/util/LargeSet
@2.3.0
+#<init>()V

+###net/sf/ehcache/CacheStoreHelper
@2.4.0
+#<init>(Lnet/sf/ehcache/Cache;)V
+#getStore()Lnet/sf/ehcache/store/Store;

+###net/sf/ehcache/terracotta/TerracottaBootstrapCacheLoaderFactory
@2.5.0
+#<init>()V
+#createBootstrapCacheLoader(Ljava/util/Properties;)Lnet/sf/ehcache/terracotta/TerracottaBootstrapCacheLoader;
+#createBootstrapCacheLoader(Ljava/util/Properties;)Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;

+###net/sf/ehcache/terracotta/DisconnectedClusterNode
@2.4.7
+#<init>(Lnet/sf/ehcache/cluster/ClusterNode;)V
+#getId()Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#getIp()Ljava/lang/String;
@2.5.0
-###net/sf/ehcache/terracotta/DisconnectedClusterNode

+###net/sf/ehcache/terracotta/TerracottaBootstrapCacheLoader
@2.5.0
+#<init>(ZLjava/lang/String;Z)V
+#<init>(ZLjava/lang/String;J)V
+#<init>(ZLjava/lang/String;JZ)V
+#isImmediateShutdown()Z
+#setImmediateShutdown(Z)V
+#load(Lnet/sf/ehcache/Ehcache;)V
+#isAsynchronous()Z
+#dispose()V
+#doLocalKeySnapshot()V
+#clone()Ljava/lang/Object;
+#setSnapshotOnDispose(Z)V

+###net/sf/ehcache/terracotta/InternalEhcache
@2.5.0
+#removeAndReturnElement(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#recalculateSize(Ljava/lang/Object;)V

+###net/sf/ehcache/config/CacheConfigError
@2.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getCacheName()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###net/sf/ehcache/config/PinningConfiguration
@2.5.0
+#<init>()V
+#setStore(Ljava/lang/String;)V
+#store(Ljava/lang/String;)Lnet/sf/ehcache/config/PinningConfiguration;
+#store(Lnet/sf/ehcache/config/PinningConfiguration$Store;)Lnet/sf/ehcache/config/PinningConfiguration;
+#getStore()Lnet/sf/ehcache/config/PinningConfiguration$Store;

+###net/sf/ehcache/config/generator/model/elements/SizeOfPolicyConfigurationElement
@2.5.0
+#<init>(Lnet/sf/ehcache/config/generator/model/elements/ConfigurationElement;Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;)V
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/PinningConfigurationElement
@2.5.0
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/PinningConfiguration;)V

+###net/sf/ehcache/config/ConfigError
@2.5.0
+#<init>(Ljava/lang/String;)V
+#getError()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###net/sf/ehcache/config/Configuration$RuntimeCfg
@2.5.0
+#<init>(Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/CacheManager;Ljava/lang/String;)V
+#getCacheManagerName()Ljava/lang/String;
+#allowsDynamicCacheConfig()Z
+#isNamed()Z
+#getConfiguration()Lnet/sf/ehcache/config/Configuration;
+#isTerracottaRejoin()Z
+#getTransactionManagerLookup()Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;
+#removeCache(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#propertyChange(Ljava/beans/PropertyChangeEvent;)V
+#hasOffHeapPool()Z

+###net/sf/ehcache/config/PinningConfiguration$Store
@2.5.0
+#values()[Lnet/sf/ehcache/config/PinningConfiguration$Store;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/PinningConfiguration$Store;

+###net/sf/ehcache/config/SizeOfPolicyConfiguration$MaxDepthExceededBehavior
@2.5.0
+#values()[Lnet/sf/ehcache/config/SizeOfPolicyConfiguration$MaxDepthExceededBehavior;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/SizeOfPolicyConfiguration$MaxDepthExceededBehavior;
+#isAbort()Z
+#isContinue()Z

+###net/sf/ehcache/config/SizeOfPolicyConfiguration
@2.5.0
+#<init>()V
+#getMaxDepth()I
+#setMaxDepth(I)V
+#maxDepth(I)Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
+#getMaxDepthExceededBehavior()Lnet/sf/ehcache/config/SizeOfPolicyConfiguration$MaxDepthExceededBehavior;
+#setMaxDepthExceededBehavior(Ljava/lang/String;)V
+#maxDepthExceededBehavior(Lnet/sf/ehcache/config/SizeOfPolicyConfiguration$MaxDepthExceededBehavior;)Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
+#maxDepthExceededBehavior(Ljava/lang/String;)Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
+#resolveMaxDepth(Lnet/sf/ehcache/Ehcache;)I
+#resolveBehavior(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/config/SizeOfPolicyConfiguration$MaxDepthExceededBehavior;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###net/sf/ehcache/config/MemoryUnit
@2.5.0
+#values()[Lnet/sf/ehcache/config/MemoryUnit;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/MemoryUnit;
+#getUnit()C
+#toBytes(J)J
+#toKiloBytes(J)J
+#toMegaBytes(J)J
+#toGigaBytes(J)J
+#toString(J)Ljava/lang/String;
+#forUnit(C)Lnet/sf/ehcache/config/MemoryUnit;
+#parseUnit(Ljava/lang/String;)Lnet/sf/ehcache/config/MemoryUnit;
+#parseAmount(Ljava/lang/String;)J
+#parseSizeInBytes(Ljava/lang/String;)J

+###net/sf/ehcache/distribution/RmiEventMessage$RmiEventType
@2.5.2
+#values()[Lnet/sf/ehcache/distribution/RmiEventMessage$RmiEventType;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/distribution/RmiEventMessage$RmiEventType;

+###net/sf/ehcache/distribution/RmiEventMessage
@2.5.2
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/distribution/RmiEventMessage$RmiEventType;Ljava/io/Serializable;Lnet/sf/ehcache/Element;)V
+#getType()Lnet/sf/ehcache/distribution/RmiEventMessage$RmiEventType;
+#getElement()Lnet/sf/ehcache/Element;

+###net/sf/ehcache/distribution/LegacyEventMessage
@2.5.2
+#<init>(ILjava/io/Serializable;Lnet/sf/ehcache/Element;)V
+#getEvent()I
+#getElement()Lnet/sf/ehcache/Element;
+#isValid()Z

+###net/sf/ehcache/pool/PoolEvictor
@2.5.0
+#freeSpace(Ljava/util/Collection;J)Z

+###net/sf/ehcache/pool/impl/UnboundedPool
@2.5.0
+#<init>()V
+#getSize()J
+#getMaxSize()J
+#setMaxSize(J)V
+#createPoolAccessor(Lnet/sf/ehcache/pool/PoolableStore;IZ)Lnet/sf/ehcache/pool/PoolAccessor;
+#createPoolAccessor(Lnet/sf/ehcache/pool/PoolableStore;Lnet/sf/ehcache/pool/SizeOfEngine;)Lnet/sf/ehcache/pool/PoolAccessor;
+#registerPoolAccessor(Lnet/sf/ehcache/pool/PoolAccessor;)V
+#removePoolAccessor(Lnet/sf/ehcache/pool/PoolAccessor;)V
+#getPoolableStores()Ljava/util/Collection;
+#getEvictor()Lnet/sf/ehcache/pool/PoolEvictor;
+#createPoolAccessor(Ljava/lang/Object;Lnet/sf/ehcache/pool/SizeOfEngine;)Lnet/sf/ehcache/pool/PoolAccessor;
+#createPoolAccessor(Ljava/lang/Object;IZ)Lnet/sf/ehcache/pool/PoolAccessor;

+###net/sf/ehcache/pool/impl/FromLargestCacheOnDiskPoolEvictor
@2.5.0
+#<init>()V

+###net/sf/ehcache/pool/impl/AbstractPool
@2.5.0
+#<init>(JLnet/sf/ehcache/pool/PoolEvictor;Lnet/sf/ehcache/pool/SizeOfEngine;)V
+#getSize()J
+#getMaxSize()J
+#setMaxSize(J)V
+#createPoolAccessor(Ljava/lang/Object;IZ)Lnet/sf/ehcache/pool/PoolAccessor;
+#registerPoolAccessor(Lnet/sf/ehcache/pool/PoolAccessor;)V
+#removePoolAccessor(Lnet/sf/ehcache/pool/PoolAccessor;)V
+#getPoolableStores()Ljava/util/Collection;
+#getEvictor()Lnet/sf/ehcache/pool/PoolEvictor;

+###net/sf/ehcache/pool/impl/DefaultSizeOfEngine
@2.5.0
+#<init>(IZ)V
+#copyWith(IZ)Lnet/sf/ehcache/pool/SizeOfEngine;
+#sizeOf(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lnet/sf/ehcache/pool/Size;

+###net/sf/ehcache/pool/impl/AbstractFromLargestCachePoolEvictor
@2.5.0
+#<init>()V
+#freeSpace(Ljava/util/Collection;J)Z

+###net/sf/ehcache/pool/impl/BalancedAccessOnDiskPoolEvictor
@2.5.0
+#<init>()V

+###net/sf/ehcache/pool/impl/AbstractPoolAccessor
@2.5.0
+#<init>(Lnet/sf/ehcache/pool/Pool;Ljava/lang/Object;Lnet/sf/ehcache/pool/SizeOfEngine;)V
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Z)J
+#canAddWithoutEvicting(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Z)J
+#clear()V
+#unlink()V
+#getStore()Ljava/lang/Object;
+#setMaxSize(J)V
+#hasAbortedSizeOf()Z

+###net/sf/ehcache/pool/impl/AbstractBalancedAccessEvictor
@2.5.0
+#<init>()V
+#freeSpace(Ljava/util/Collection;J)Z

+###net/sf/ehcache/pool/impl/FromLargestCacheOnHeapPoolEvictor
@2.5.0
+#<init>()V

+###net/sf/ehcache/pool/impl/BalancedAccessOnHeapPoolEvictor
@2.5.0
+#<init>()V

+###net/sf/ehcache/pool/impl/StrictlyBoundedPool
@2.5.0
+#<init>(JLnet/sf/ehcache/pool/PoolEvictor;Lnet/sf/ehcache/pool/SizeOfEngine;)V
+#createPoolAccessor(Lnet/sf/ehcache/pool/PoolableStore;Lnet/sf/ehcache/pool/SizeOfEngine;)Lnet/sf/ehcache/pool/PoolAccessor;
+#createPoolAccessor(Ljava/lang/Object;Lnet/sf/ehcache/pool/SizeOfEngine;)Lnet/sf/ehcache/pool/PoolAccessor;

+###net/sf/ehcache/pool/impl/BoundedPool
@2.5.0
+#<init>(JLnet/sf/ehcache/pool/PoolEvictor;Lnet/sf/ehcache/pool/SizeOfEngine;)V
+#createPoolAccessor(Lnet/sf/ehcache/pool/PoolableStore;Lnet/sf/ehcache/pool/SizeOfEngine;)Lnet/sf/ehcache/pool/PoolAccessor;
+#createPoolAccessor(Ljava/lang/Object;Lnet/sf/ehcache/pool/SizeOfEngine;)Lnet/sf/ehcache/pool/PoolAccessor;

+###net/sf/ehcache/pool/Size
@2.5.0
+#<init>(JZ)V
+#getCalculated()J
+#isExact()Z

+###net/sf/ehcache/pool/PoolAccessor
@2.5.0
+#add(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Z)J
+#canAddWithoutEvicting(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#delete(J)J
+#replace(JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Z)J
+#getSize()J
+#unlink()V
+#clear()V
+#getStore()Ljava/lang/Object;
+#setMaxSize(J)V
+#hasAbortedSizeOf()Z

+###net/sf/ehcache/pool/Pool
@2.5.0
+#getSize()J
+#getMaxSize()J
+#setMaxSize(J)V
+#createPoolAccessor(Ljava/lang/Object;IZ)Lnet/sf/ehcache/pool/PoolAccessor;
+#registerPoolAccessor(Lnet/sf/ehcache/pool/PoolAccessor;)V
+#removePoolAccessor(Lnet/sf/ehcache/pool/PoolAccessor;)V
+#createPoolAccessor(Ljava/lang/Object;Lnet/sf/ehcache/pool/SizeOfEngine;)Lnet/sf/ehcache/pool/PoolAccessor;
+#getPoolableStores()Ljava/util/Collection;
+#getEvictor()Lnet/sf/ehcache/pool/PoolEvictor;

+###net/sf/ehcache/pool/sizeof/annotations/IgnoreSizeOf
@2.5.0
@2.5.1
+#inherited()Z

+###net/sf/ehcache/pool/sizeof/MaxDepthExceededException
@2.5.0
+#<init>(Ljava/lang/String;)V
+#addToMeasuredSize(J)V
+#getMeasuredSize()J

+###net/sf/ehcache/pool/sizeof/SizeOf
@2.5.0
+#<init>(Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;Z)V
+#sizeOf(Ljava/lang/Object;)J
+#deepSizeOf(IZ[Ljava/lang/Object;)Lnet/sf/ehcache/pool/Size;

+###net/sf/ehcache/pool/sizeof/JvmInformation
@2.5.0
+#values()[Lnet/sf/ehcache/pool/sizeof/JvmInformation;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/pool/sizeof/JvmInformation;
+#getPointerSize()I
+#getJavaPointerSize()I
+#getMinimumObjectSize()I
+#getObjectAlignment()I
+#getObjectHeaderSize()I
+#getFieldOffsetAdjustment()I
+#getAgentSizeOfAdjustment()I
+#supportsAgentSizeOf()Z
+#supportsUnsafeSizeOf()Z
+#supportsReflectionSizeOf()Z
+#getJvmDescription()Ljava/lang/String;
+#isJRockit()Z
+#isHotspot()Z
+#isIBM()Z
@2.5.1
+#isOSX()Z

+###net/sf/ehcache/pool/sizeof/UnsafeSizeOf
@2.5.0
+#<init>()V
+#<init>(Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;)V
+#<init>(Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;Z)V
@2.5.1
+#sizeOf(Ljava/lang/Object;)J

+###net/sf/ehcache/pool/sizeof/filter/SizeOfFilter
@2.5.0
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###net/sf/ehcache/pool/sizeof/filter/CombinationSizeOfFilter
@2.5.0
+#<init>([Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;)V
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###net/sf/ehcache/pool/sizeof/filter/PassThroughFilter
@2.5.0
+#<init>()V
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###net/sf/ehcache/pool/sizeof/filter/AnnotationSizeOfFilter
@2.5.0
+#<init>()V
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###net/sf/ehcache/pool/sizeof/filter/ResourceSizeOfFilter
@2.5.0
+#<init>(Ljava/net/URL;)V
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###net/sf/ehcache/pool/sizeof/AgentSizeOf
@2.5.0
+#<init>()V
+#<init>(Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;)V
+#<init>(Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;Z)V
@2.5.1
+#sizeOf(Ljava/lang/Object;)J

+###net/sf/ehcache/pool/sizeof/ReflectionSizeOf
@2.5.0
+#<init>()V
+#<init>(Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;)V
+#<init>(Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;Z)V
@2.5.1
+#sizeOf(Ljava/lang/Object;)J

+###net/sf/ehcache/pool/SizeOfEngine
@2.5.0
+#sizeOf(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lnet/sf/ehcache/pool/Size;
+#copyWith(IZ)Lnet/sf/ehcache/pool/SizeOfEngine;

+###net/sf/ehcache/pool/PoolableStore
@2.5.0
+#evictFromOnHeap(IJ)Z
+#evictFromOnDisk(IJ)Z
+#getApproximateDiskHitRate()F
+#getApproximateDiskMissRate()F
+#getApproximateDiskCountSize()J
+#getApproximateDiskByteSize()J
+#getApproximateHeapHitRate()F
+#getApproximateHeapMissRate()F
+#getApproximateHeapCountSize()J
+#getApproximateHeapByteSize()J

+###net/sf/ehcache/store/DiskStoreBootstrapCacheLoader
@2.5.0
+#<init>(Z)V
+#load(Lnet/sf/ehcache/Ehcache;)V
+#isAsynchronous()Z
+#clone()Ljava/lang/Object;

+###net/sf/ehcache/store/StripedReadWriteLockProvider
@2.5.0
+#createStripedReadWriteLock()Lnet/sf/ehcache/concurrent/StripedReadWriteLock;

+###net/sf/ehcache/store/NullStore
@2.5.0
+#create()Lnet/sf/ehcache/store/NullStore;
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeNoReturn(Ljava/lang/Object;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#dispose()V
+#getSize()I
+#getInMemorySize()I
+#getOffHeapSize()I
+#getOnDiskSize()I
+#getTerracottaClusteredSize()I
+#getInMemorySizeInBytes()J
+#getOffHeapSizeInBytes()J
+#getOnDiskSizeInBytes()J
+#getStatus()Lnet/sf/ehcache/Status;
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#expireElements()V
+#flush()V
+#bufferFull()Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getInternalContext()Ljava/lang/Object;
+#getMBean()Ljava/lang/Object;
+#fill(Lnet/sf/ehcache/Element;)V
+#removeIfTierNotPinned(Ljava/lang/Object;)Z
+#recalculateSize(Ljava/lang/Object;)V
@2.5.1
+#isTierPinned()Z
+#getPresentPinnedKeys()Ljava/util/Set;
+#isPersistent()Z
@2.6.0
+#removeIfNotPinned(Ljava/lang/Object;)Z
-#removeIfTierNotPinned(Ljava/lang/Object;)Z

+###net/sf/ehcache/store/TierableStore
@2.5.0
+#fill(Lnet/sf/ehcache/Element;)V
+#removeIfTierNotPinned(Ljava/lang/Object;)Z
+#removeNoReturn(Ljava/lang/Object;)V
@2.5.1
+#isTierPinned()Z
+#getPresentPinnedKeys()Ljava/util/Set;
+#isPersistent()Z
@2.6.0
+#removeIfNotPinned(Ljava/lang/Object;)Z
-#removeIfTierNotPinned(Ljava/lang/Object;)Z

+###net/sf/ehcache/store/DiskBackedMemoryStore
@2.5.0
+#create(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/Store;
+#getMBean()Ljava/lang/Object;
+#notifyEvictionFromCache(Ljava/io/Serializable;)Z
@2.6.0
+#create(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/Store;
-#create(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/Store;

+###net/sf/ehcache/store/FrontEndCacheTier
@2.5.0
+#<init>(Lnet/sf/ehcache/store/TierableStore;Lnet/sf/ehcache/store/TierableStore;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;ZZ)V
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#getKeys()Ljava/util/List;
+#removeAll()V
+#dispose()V
+#getSize()I
+#getInMemorySize()I
+#getOffHeapSize()I
+#getOnDiskSize()I
+#getTerracottaClusteredSize()I
+#getInMemorySizeInBytes()J
+#getOffHeapSizeInBytes()J
+#getOnDiskSizeInBytes()J
+#expireElements()V
+#flush()V
+#bufferFull()Z
+#getLockFor(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
+#getStatus()Lnet/sf/ehcache/Status;
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getInternalContext()Ljava/lang/Object;
+#isEvictionCandidate(Lnet/sf/ehcache/Element;)Z
+#isCached(Ljava/lang/Object;)Z
+#notifyEvictionFromCache(Ljava/io/Serializable;)Z
+#hasAbortedSizeOf()Z
+#recalculateSize(Ljava/lang/Object;)V
@2.6.0
+#<init>(Lnet/sf/ehcache/store/TierableStore;Lnet/sf/ehcache/store/TierableStore;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;Lnet/sf/ehcache/search/impl/SearchManager;ZZ)V
-#<init>(Lnet/sf/ehcache/store/TierableStore;Lnet/sf/ehcache/store/TierableStore;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;ZZ)V

+###net/sf/ehcache/store/DiskStoreBootstrapCacheLoaderFactory
@2.5.0
+#<init>()V
+#createBootstrapCacheLoader(Ljava/util/Properties;)Lnet/sf/ehcache/store/DiskStoreBootstrapCacheLoader;
+#createBootstrapCacheLoader(Ljava/util/Properties;)Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;

+###net/sf/ehcache/store/disk/DiskStorageFactory$DiskSubstitute
@2.5.0
+#<init>()V
+#getFactory()Lnet/sf/ehcache/store/disk/DiskStorageFactory;

+###net/sf/ehcache/store/disk/DiskStorageFactory$DiskMarker
@2.5.0
+#getSize()I
+#installed()V

+###net/sf/ehcache/store/disk/DiskStorageFactory
@2.5.0
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Lnet/sf/ehcache/event/RegisteredEventListeners;)V
+#getOnDiskSizeInBytes()J
+#bind(Lnet/sf/ehcache/store/disk/DiskStore;)V
+#free(Ljava/util/concurrent/locks/Lock;Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskSubstitute;)V
+#free(Ljava/util/concurrent/locks/Lock;Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskSubstitute;Z)V
+#bufferFull()Z
+#getDataFile()Ljava/io/File;
+#expireElements()V
+#create(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskSubstitute;
+#retrieve(Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskSubstitute;)Lnet/sf/ehcache/Element;
+#retrieve(Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskSubstitute;Lnet/sf/ehcache/store/disk/Segment;)Lnet/sf/ehcache/Element;
+#created(Ljava/lang/Object;)Z
+#unbind()V
+#flush()Ljava/util/concurrent/Future;
+#getOnDiskSize()I
+#setOnDiskCapacity(I)V
+#getIndexFile()Ljava/io/File;
@2.6.0
+#<init>(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/event/RegisteredEventListeners;)V
-#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Lnet/sf/ehcache/event/RegisteredEventListeners;)V

+###net/sf/ehcache/store/disk/DiskSizeOfEngine
@2.5.0
+#<init>()V
+#sizeOf(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lnet/sf/ehcache/pool/Size;
+#copyWith(IZ)Lnet/sf/ehcache/pool/SizeOfEngine;

+###net/sf/ehcache/store/disk/StoreUpdateException
@2.5.0
+#<init>(Ljava/lang/RuntimeException;Z)V
+#isUpdate()Z

+###net/sf/ehcache/store/disk/ElementSubstituteFilter
@2.5.0
+#allows(Ljava/lang/Object;)Z

+###net/sf/ehcache/store/disk/Segment
@2.5.0
+#<init>(IFLnet/sf/ehcache/store/disk/DiskStorageFactory;Lnet/sf/ehcache/config/CacheConfiguration;Lnet/sf/ehcache/pool/PoolAccessor;Lnet/sf/ehcache/pool/PoolAccessor;)V
+#toString()Ljava/lang/String;
+#getDiskHitRate()F
+#getDiskMissRate()F
@2.6.0
+#<init>(IFLnet/sf/ehcache/store/disk/DiskStorageFactory;Lnet/sf/ehcache/config/CacheConfiguration;Lnet/sf/ehcache/pool/PoolAccessor;Lnet/sf/ehcache/pool/PoolAccessor;Lnet/sf/ehcache/event/RegisteredEventListeners;)V
-#<init>(IFLnet/sf/ehcache/store/disk/DiskStorageFactory;Lnet/sf/ehcache/config/CacheConfiguration;Lnet/sf/ehcache/pool/PoolAccessor;Lnet/sf/ehcache/pool/PoolAccessor;)V

+###net/sf/ehcache/store/disk/ods/AATreeSet$Node
@2.5.0
+#compareTo(Ljava/lang/Object;)I
+#setLeft(Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;)V
+#setRight(Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;)V
+#getLeft()Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;
+#getRight()Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I
+#swapPayload(Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;)V
+#getPayload()Ljava/lang/Object;

+###net/sf/ehcache/store/disk/ods/AATreeSet
@2.5.0
+#<init>()V
+#add(Ljava/lang/Comparable;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;
+#clear()V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isEmpty()Z
+#comparator()Ljava/util/Comparator;
+#subSet(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#first()Ljava/lang/Comparable;
+#last()Ljava/lang/Comparable;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#add(Ljava/lang/Object;)Z
+#last()Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;

+###net/sf/ehcache/store/disk/ods/Region
@2.5.0
+#<init>(J)V
+#<init>(JJ)V
+#<init>(Lnet/sf/ehcache/store/disk/ods/Region;)V
+#contiguous()J
+#setLeft(Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;)V
+#setRight(Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;)V
+#toString()Ljava/lang/String;
+#size()J
+#compareTo(Ljava/lang/Comparable;)I
+#swapPayload(Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;)V
+#getPayload()Lnet/sf/ehcache/store/disk/ods/Region;
+#start()J
+#end()J
+#getPayload()Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I

+###net/sf/ehcache/store/disk/ods/AATreeSet$AbstractTreeNode
@2.5.0
+#<init>()V
+#setLeft(Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;)V
+#setRight(Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;)V
+#getLeft()Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;
+#getRight()Lnet/sf/ehcache/store/disk/ods/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I

+###net/sf/ehcache/store/disk/ods/FileAllocationTree
@2.5.0
+#<init>(JLjava/io/RandomAccessFile;)V
+#alloc(J)Lnet/sf/ehcache/store/disk/ods/Region;
+#mark(Lnet/sf/ehcache/store/disk/ods/Region;)V
+#free(Lnet/sf/ehcache/store/disk/ods/Region;)V
+#clear()V
+#getFileSize()J
+#find(J)Lnet/sf/ehcache/store/disk/ods/Region;
+#find(Ljava/lang/Object;)Lnet/sf/ehcache/store/disk/ods/Region;
+#removeAndReturn(Ljava/lang/Object;)Lnet/sf/ehcache/store/disk/ods/Region;

+###net/sf/ehcache/store/disk/DiskStore
@2.5.0
+#create(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/disk/DiskStore;
+#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/disk/DiskStore;
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#generateUniqueDirectory()Ljava/lang/String;
+#cleanUpFailedMarker(Ljava/io/Serializable;)Z
+#createStripedReadWriteLock()Lnet/sf/ehcache/concurrent/StripedReadWriteLock;
+#changeDiskCapacity(I)V
+#bufferFull()Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#expireElements()V
+#flush()V
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#getInMemorySize()I
+#getInMemorySizeInBytes()J
+#getOffHeapSize()I
+#getOffHeapSizeInBytes()J
+#getOnDiskSize()I
+#getOnDiskSizeInBytes()J
+#getTerracottaClusteredSize()I
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getDataFile()Ljava/io/File;
+#getIndexFile()Ljava/io/File;
+#getMBean()Ljava/lang/Object;
+#fill(Lnet/sf/ehcache/Element;)V
+#removeIfTierNotPinned(Ljava/lang/Object;)Z
+#put(Lnet/sf/ehcache/Element;)Z
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#unretrievedGet(Ljava/lang/Object;)Ljava/lang/Object;
+#putRawIfAbsent(Ljava/lang/Object;Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskMarker;)Z
+#getKeys()Ljava/util/List;
+#keySet()Ljava/util/Set;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeNoReturn(Ljava/lang/Object;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#dispose()V
+#getSize()I
+#getStatus()Lnet/sf/ehcache/Status;
+#evictFromOnHeap(IJ)Z
+#evictFromOnDisk(IJ)Z
+#getApproximateDiskHitRate()F
+#getApproximateDiskMissRate()F
+#getApproximateDiskCountSize()J
+#getApproximateDiskByteSize()J
+#getApproximateHeapHitRate()F
+#getApproximateHeapMissRate()F
+#getApproximateHeapCountSize()J
+#getApproximateHeapByteSize()J
+#containsKey(Ljava/lang/Object;)Z
+#getInternalContext()Ljava/lang/Object;
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#fault(Ljava/lang/Object;Lnet/sf/ehcache/store/disk/DiskStorageFactory$Placeholder;Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskMarker;)Z
+#evict(Ljava/lang/Object;Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskSubstitute;)Z
+#evictElement(Ljava/lang/Object;Lnet/sf/ehcache/store/disk/DiskStorageFactory$DiskSubstitute;)Lnet/sf/ehcache/Element;
+#getRandomSample(Lnet/sf/ehcache/store/disk/ElementSubstituteFilter;ILjava/lang/Object;)Ljava/util/List;
@2.5.1
+#isTierPinned()Z
+#getPresentPinnedKeys()Ljava/util/Set;
+#isPersistent()Z
@2.6.0
+#create(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/disk/DiskStore;
+#create(Lnet/sf/ehcache/Cache;)Lnet/sf/ehcache/store/disk/DiskStore;
+#removeIfNotPinned(Ljava/lang/Object;)Z
-#create(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/disk/DiskStore;
-#create(Lnet/sf/ehcache/Cache;Ljava/lang/String;)Lnet/sf/ehcache/store/disk/DiskStore;
-#generateUniqueDirectory()Ljava/lang/String;
-#removeIfTierNotPinned(Ljava/lang/Object;)Z

+###net/sf/ehcache/store/CacheKeySet
@2.5.1
+#<init>([Ljava/util/Collection;)V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V

+###net/sf/ehcache/store/NotifyingMemoryStore
@2.5.0
+#create(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/NotifyingMemoryStore;
+#expireElements()V

+###net/sf/ehcache/store/MemoryOnlyStore
@2.5.0
+#create(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/Store;
+#setAttributeExtractors(Ljava/util/Map;)V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#getMBean()Ljava/lang/Object;
@2.5.1
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
@2.5.4
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
@2.6.0
-#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
-#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
-#setAttributeExtractors(Ljava/util/Map;)V
-#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
-#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
@2.6.2
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;

+###net/sf/ehcache/store/MemoryLimitedCacheLoader
@2.5.0
+#<init>()V
+#clone()Ljava/lang/Object;

+###net/sf/ehcache/constructs/classloader/InternalClassLoaderAwareCache
@2.5.0
+#<init>(Lnet/sf/ehcache/terracotta/InternalEhcache;Ljava/lang/ClassLoader;)V
+#removeAndReturnElement(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#recalculateSize(Ljava/lang/Object;)V

+###net/sf/ehcache/constructs/classloader/ClassLoaderAwareCache
@2.5.0
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/ClassLoader;)V
+#main([Ljava/lang/String;)V
+#putQuiet(Lnet/sf/ehcache/Element;)V
+#putWithWriter(Lnet/sf/ehcache/Element;)V
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#getQuiet(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeysWithExpiryCheck()Ljava/util/List;
+#getKeysNoDuplicateCheck()Ljava/util/List;
+#removeQuiet(Ljava/io/Serializable;)Z
+#removeQuiet(Ljava/lang/Object;)Z
+#removeWithWriter(Ljava/lang/Object;)Z
+#getSizeBasedOnAccuracy(I)I
+#calculateInMemorySize()J
+#calculateOffHeapSize()J
+#calculateOnDiskSize()J
+#hasAbortedSizeOf()Z
+#getMemoryStoreSize()J
+#getOffHeapStoreSize()J
+#getDiskStoreSize()I
+#isExpired(Lnet/sf/ehcache/Element;)Z
+#getCacheEventNotificationService()Lnet/sf/ehcache/event/RegisteredEventListeners;
+#isElementInMemory(Ljava/lang/Object;)Z
+#isElementInMemory(Ljava/io/Serializable;)Z
+#isElementOnDisk(Ljava/lang/Object;)Z
+#isElementOnDisk(Ljava/io/Serializable;)Z
+#getGuid()Ljava/lang/String;
+#getCacheManager()Lnet/sf/ehcache/CacheManager;
+#clearStatistics()V
+#getStatisticsAccuracy()I
+#setStatisticsAccuracy(I)V
+#evictExpiredElements()V
+#isKeyInCache(Ljava/lang/Object;)Z
+#isValueInCache(Ljava/lang/Object;)Z
+#getStatistics()Lnet/sf/ehcache/Statistics;
+#getLiveCacheStatistics()Lnet/sf/ehcache/statistics/LiveCacheStatistics;
+#registerCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#removeCacheUsageListener(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
+#setCacheManager(Lnet/sf/ehcache/CacheManager;)V
+#getBootstrapCacheLoader()Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
+#setBootstrapCacheLoader(Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
+#setDiskStorePath(Ljava/lang/String;)V
+#initialise()V
+#bootstrap()V
+#getCacheConfiguration()Lnet/sf/ehcache/config/CacheConfiguration;
+#registerCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#unregisterCacheExtension(Lnet/sf/ehcache/extension/CacheExtension;)V
+#getRegisteredCacheExtensions()Ljava/util/List;
+#getAverageGetTime()F
+#setCacheExceptionHandler(Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;)V
+#getCacheExceptionHandler()Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;
+#registerCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#unregisterCacheLoader(Lnet/sf/ehcache/loader/CacheLoader;)V
+#getRegisteredCacheLoaders()Ljava/util/List;
+#registerCacheWriter(Lnet/sf/ehcache/writer/CacheWriter;)V
+#unregisterCacheWriter()V
+#getRegisteredCacheWriter()Lnet/sf/ehcache/writer/CacheWriter;
+#getWithLoader(Ljava/lang/Object;Lnet/sf/ehcache/loader/CacheLoader;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getAllWithLoader(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Map;
+#isDisabled()Z
+#setDisabled(Z)V
+#isStatisticsEnabled()Z
+#setStatisticsEnabled(Z)V
+#getSampledCacheStatistics()Lnet/sf/ehcache/statistics/sampled/SampledCacheStatistics;
+#setSampledStatisticsEnabled(Z)V
+#isSampledStatisticsEnabled()Z
+#getInternalContext()Ljava/lang/Object;
+#disableDynamicFeatures()V
+#getWriterManager()Lnet/sf/ehcache/writer/CacheWriterManager;
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
+#setTransactionManagerLookup(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#createQuery()Lnet/sf/ehcache/search/Query;
+#isSearchable()Z
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#acquireReadLockOnKey(Ljava/lang/Object;)V
+#acquireWriteLockOnKey(Ljava/lang/Object;)V
+#tryReadLockOnKey(Ljava/lang/Object;J)Z
+#tryWriteLockOnKey(Ljava/lang/Object;J)Z
+#releaseReadLockOnKey(Ljava/lang/Object;)V
+#releaseWriteLockOnKey(Ljava/lang/Object;)V
+#isReadLockedByCurrentThread(Ljava/lang/Object;)Z
+#isWriteLockedByCurrentThread(Ljava/lang/Object;)Z
+#isClusterBulkLoadEnabled()Z
+#isNodeBulkLoadEnabled()Z
+#setNodeBulkLoadEnabled(Z)V
+#waitUntilClusterBulkLoadComplete()V
+#loadAll(Ljava/util/Collection;Ljava/lang/Object;)V
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#toString()Ljava/lang/String;
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#get(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
+#put(Lnet/sf/ehcache/Element;)V
+#put(Lnet/sf/ehcache/Element;Z)V
+#clone()Ljava/lang/Object;
+#getName()Ljava/lang/String;
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
+#putAll(Ljava/util/Collection;)V
+#remove(Ljava/io/Serializable;Z)Z
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/io/Serializable;)Z
+#remove(Ljava/lang/Object;Z)Z
+#load(Ljava/lang/Object;)V
+#setName(Ljava/lang/String;)V
+#flush()V
+#getSize()I
+#removeElement(Lnet/sf/ehcache/Element;)Z
+#removeAll(Z)V
+#removeAll()V
+#removeAll(Ljava/util/Collection;Z)V
+#removeAll(Ljava/util/Collection;)V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#dispose()V
+#getKeys()Ljava/util/List;
+#getStatus()Lnet/sf/ehcache/Status;
@2.5.2
+#putIfAbsent(Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/Element;
@2.6.0
-#setDiskStorePath(Ljava/lang/String;)V
@2.6.5
+#registerDynamicAttributesExtractor(Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V

+###net/sf/ehcache/constructs/nonstop/concurrency/NonStopCacheKeySet
@2.4.7
+#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Ljava/util/List;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#get(I)Ljava/lang/Object;

+###net/sf/ehcache/constructs/nonstop/concurrency/LockOperationTimedOutNonstopException
@2.5.0
+#<init>(Ljava/lang/String;)V

+###net/sf/ehcache/concurrent/StripedReadWriteLock
@2.5.0
+#getLockForKey(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
+#getAllSyncs()Ljava/util/List;

+###net/sf/ehcache/Disposable
@2.5.0
+#dispose()V

+###net/sf/ehcache/transaction/XidTransactionIDSerializedForm
@2.5.2
+#<init>(Ljava/lang/String;Ljavax/transaction/xa/Xid;Ljava/lang/String;)V
+#getCacheManagerName()Ljava/lang/String;
+#getXid()Ljavax/transaction/xa/Xid;
+#getDecision()Ljava/lang/String;
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/transaction/xa/Xid;)V
+#getCacheName()Ljava/lang/String;
+#getOwnerID()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljavax/transaction/xa/Xid;Ljava/lang/String;)V
-#getDecision()Ljava/lang/String;

+###net/sf/ehcache/transaction/TransactionIDSerializedForm
@2.5.2
+#<init>(Ljava/lang/String;Ljava/lang/String;JIZ)V
+#getCacheManagerName()Ljava/lang/String;
+#getClusterUUID()Ljava/lang/String;
+#getCreationTime()J
+#getId()I
+#isCommit()Z
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JI)V
+#getOwnerID()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/lang/String;JIZ)V
-#isCommit()Z

+###net/sf/ehcache/transaction/DelegatingTransactionIDFactory
@2.4.7
+#<init>(Lnet/sf/ehcache/terracotta/TerracottaClient;)V
+#createTransactionID()Lnet/sf/ehcache/transaction/TransactionID;
+#createXidTransactionID(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
@2.5.2
+#<init>(Lnet/sf/ehcache/terracotta/TerracottaClient;Ljava/lang/String;)V
+#restoreTransactionID(Lnet/sf/ehcache/transaction/TransactionIDSerializedForm;)Lnet/sf/ehcache/transaction/TransactionID;
+#restoreXidTransactionID(Lnet/sf/ehcache/transaction/XidTransactionIDSerializedForm;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
-#<init>(Lnet/sf/ehcache/terracotta/TerracottaClient;)V
@2.6.0
+#<init>(Lnet/sf/ehcache/FeaturesManager;Lnet/sf/ehcache/terracotta/TerracottaClient;Ljava/lang/String;)V
+#createXidTransactionID(Ljavax/transaction/xa/Xid;Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;
+#markForCommit(Lnet/sf/ehcache/transaction/TransactionID;)V
+#markForRollback(Lnet/sf/ehcache/transaction/xa/XidTransactionID;)V
+#isDecisionCommit(Lnet/sf/ehcache/transaction/TransactionID;)Z
+#clear(Lnet/sf/ehcache/transaction/TransactionID;)V
+#getAllXidTransactionIDsFor(Lnet/sf/ehcache/Ehcache;)Ljava/util/Set;
+#getAllTransactionIDs()Ljava/util/Set;
+#isExpired(Lnet/sf/ehcache/transaction/TransactionID;)Z
+#isPersistent()Ljava/lang/Boolean;
-#<init>(Lnet/sf/ehcache/terracotta/TerracottaClient;Ljava/lang/String;)V
-#createXidTransactionID(Ljavax/transaction/xa/Xid;)Lnet/sf/ehcache/transaction/xa/XidTransactionID;

+###net/sf/ehcache/transaction/xa/SerializableXid
@2.5.0
+#<init>(Ljavax/transaction/xa/Xid;)V
+#getFormatId()I
+#getBranchQualifier()[B
+#getGlobalTransactionId()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###net/sf/ehcache/event/NonstopCacheEventListener
@2.4.6
+#<init>(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;)V
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementExpired(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementEvicted(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#dispose()V
+#clone()Ljava/lang/Object;

+###net/sf/ehcache/event/CacheEventListenerAdapter
@2.4.6
+#<init>()V
+#clone()Ljava/lang/Object;
+#notifyElementRemoved(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementPut(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementUpdated(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementExpired(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyElementEvicted(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/Element;)V
+#notifyRemoveAll(Lnet/sf/ehcache/Ehcache;)V
+#dispose()V

+###net/sf/ehcache/util/WeakIdentityConcurrentMap$CleanUpTask
@2.5.0
+#cleanUp(Ljava/lang/Object;)V

+###net/sf/ehcache/util/ratestatistics/UnlockedRateStatistic
@2.5.0
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#event()V
+#getCount()J
+#getRate()F

+###net/sf/ehcache/util/ratestatistics/AtomicRateStatistic
@2.5.0
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#event()V
+#getCount()J
+#getRate()F

+###net/sf/ehcache/util/ratestatistics/RateStatistic
@2.5.0
+#event()V
+#getCount()J
+#getRate()F

+###net/sf/ehcache/util/SetAsList
@2.5.1
+#<init>(Ljava/util/Set;)V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
+#get(I)Ljava/lang/Object;
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#add(ILjava/lang/Object;)V
+#remove(I)Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#subList(II)Ljava/util/List;

+###net/sf/ehcache/util/PreferTCCLObjectInputStream
@2.4.6
+#<init>(Ljava/io/InputStream;)V

+###net/sf/ehcache/util/WeakIdentityConcurrentMap
@2.5.0
+#<init>()V
+#<init>(Lnet/sf/ehcache/util/WeakIdentityConcurrentMap$CleanUpTask;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#cleanUp()V
+#keySet()Ljava/util/Set;
@2.6.0
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###net/sf/ehcache/util/FindBugsSuppressWarnings
@2.5.0
+#value()[Ljava/lang/String;

+###net/sf/ehcache/CacheInitializationHelper
@2.5.0
+#<init>(Lnet/sf/ehcache/CacheManager;)V
+#initializeEhcache(Lnet/sf/ehcache/Ehcache;)V

+###net/sf/ehcache/management/sampled/CacheSampler
@2.6.0
+#isEnabled()Z
+#setNodeBulkLoadEnabled(Z)V
+#isClusterBulkLoadEnabled()Z
+#isNodeBulkLoadEnabled()Z
+#setEnabled(Z)V
+#removeAll()V
+#flush()V
+#getStatus()Ljava/lang/String;
+#isTerracottaClustered()Z
+#getTerracottaConsistency()Ljava/lang/String;
+#clearStatistics()V
+#enableStatistics()V
+#disableStatistics()V
+#setStatisticsEnabled(Z)V
+#enableSampledStatistics()V
+#disableSampledStatistics()V
+#getMaxEntriesLocalHeap()J
+#setMaxEntriesLocalHeap(J)V
+#getMaxBytesLocalHeap()J
+#setMaxBytesLocalHeap(J)V
+#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
+#getMaxEntriesLocalDisk()J
+#setMaxEntriesLocalDisk(J)V
+#getMaxElementsOnDisk()I
+#setMaxElementsOnDisk(I)V
+#getMaxBytesLocalDisk()J
+#setMaxBytesLocalDisk(J)V
+#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#getMemoryStoreEvictionPolicy()Ljava/lang/String;
+#setMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#isEternal()Z
+#setEternal(Z)V
+#getTimeToIdleSeconds()J
+#setTimeToIdleSeconds(J)V
+#getTimeToLiveSeconds()J
+#setTimeToLiveSeconds(J)V
+#isOverflowToDisk()Z
+#setOverflowToDisk(Z)V
+#isDiskPersistent()Z
+#setDiskPersistent(Z)V
+#getDiskExpiryThreadIntervalSeconds()J
+#setDiskExpiryThreadIntervalSeconds(J)V
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#isPinned()Z
+#getPinnedToStore()Ljava/lang/String;
+#getHasWriteBehindWriter()Z
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I
+#getWriterConcurrency()I
+#getTransactional()Z
+#getTransactionCommitRate()J
+#getTransactionRollbackRate()J
+#getSearchable()Z
+#getCacheSearchRate()J
+#getCacheAverageSearchTime()J
+#getCacheHitRate()J
+#getCacheInMemoryHitRate()J
+#getCacheOffHeapHitRate()J
+#getCacheOnDiskHitRate()J
+#getCacheMissRate()J
+#getCacheInMemoryMissRate()J
+#getCacheOffHeapMissRate()J
+#getCacheOnDiskMissRate()J
+#getCachePutRate()J
+#getCacheUpdateRate()J
+#getCacheRemoveRate()J
+#getCacheEvictionRate()J
+#getCacheExpirationRate()J
+#getCacheAverageGetTime()J

+###net/sf/ehcache/management/sampled/CacheManagerSamplerImpl
@2.6.0
+#<init>(Lnet/sf/ehcache/CacheManager;)V
+#clearAll()V
+#getCacheNames()[Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#shutdown()V
+#getCacheMetrics()Ljava/util/Map;
+#getCacheHitRate()J
+#getCacheInMemoryHitRate()J
+#getCacheOffHeapHitRate()J
+#getCacheOnDiskHitRate()J
+#getCacheMissRate()J
+#getCacheInMemoryMissRate()J
+#getCacheOffHeapMissRate()J
+#getCacheOnDiskMissRate()J
+#getCachePutRate()J
+#getCacheUpdateRate()J
+#getCacheRemoveRate()J
+#getCacheEvictionRate()J
+#getCacheExpirationRate()J
+#getCacheAverageGetTime()F
+#getCacheSearchRate()J
+#getCacheAverageSearchTime()J
+#getHasWriteBehindWriter()Z
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I
+#getMaxBytesLocalDisk()J
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#setMaxBytesLocalDisk(J)V
+#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
+#getMaxBytesLocalHeap()J
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#setMaxBytesLocalHeap(J)V
+#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getClusterUUID()Ljava/lang/String;
+#clearStatistics()V
+#enableStatistics()V
+#disableStatistics()V
+#setStatisticsEnabled(Z)V
+#isStatisticsEnabled()Z
+#generateActiveConfigDeclaration()Ljava/lang/String;
+#generateActiveConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#getTransactional()Z
+#getSearchable()Z
+#getTransactionCommittedCount()J
+#getTransactionCommitRate()J
+#getTransactionRolledBackCount()J
+#getTransactionRollbackRate()J
+#getTransactionTimedOutCount()J
+#isEnabled()Z
+#setEnabled(Z)V

+###net/sf/ehcache/management/sampled/CacheSamplerImpl
@2.6.0
+#<init>(Lnet/sf/ehcache/Ehcache;)V
+#isEnabled()Z
+#setEnabled(Z)V
+#isClusterBulkLoadEnabled()Z
+#isNodeBulkLoadEnabled()Z
+#setNodeBulkLoadEnabled(Z)V
+#flush()V
+#getCacheName()Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#removeAll()V
+#getAverageGetTimeMostRecentSample()J
+#getAverageGetTimeNanosMostRecentSample()J
+#getCacheEvictionRate()J
+#getCacheElementEvictedMostRecentSample()J
+#getCacheExpirationRate()J
+#getCacheElementExpiredMostRecentSample()J
+#getCachePutRate()J
+#getCacheElementPutMostRecentSample()J
+#getCacheRemoveRate()J
+#getCacheElementRemovedMostRecentSample()J
+#getCacheUpdateRate()J
+#getCacheElementUpdatedMostRecentSample()J
+#getCacheInMemoryHitRate()J
+#getCacheHitInMemoryMostRecentSample()J
+#getCacheOffHeapHitRate()J
+#getCacheHitOffHeapMostRecentSample()J
+#getCacheHitRate()J
+#getCacheHitMostRecentSample()J
+#getCacheOnDiskHitRate()J
+#getCacheHitOnDiskMostRecentSample()J
+#getCacheMissExpiredMostRecentSample()J
+#getCacheMissRate()J
+#getCacheMissMostRecentSample()J
+#getCacheInMemoryMissRate()J
+#getCacheMissInMemoryMostRecentSample()J
+#getCacheOffHeapMissRate()J
+#getCacheMissOffHeapMostRecentSample()J
+#getCacheOnDiskMissRate()J
+#getCacheMissOnDiskMostRecentSample()J
+#getCacheMissNotFoundMostRecentSample()J
+#getStatisticsAccuracy()I
+#getStatisticsAccuracyDescription()Ljava/lang/String;
+#clearStatistics()V
+#isStatisticsEnabled()Z
+#isSampledStatisticsEnabled()Z
+#dispose()V
+#isTerracottaClustered()Z
+#getTerracottaConsistency()Ljava/lang/String;
+#enableStatistics()V
+#disableStatistics()V
+#setStatisticsEnabled(Z)V
+#enableSampledStatistics()V
+#disableSampledStatistics()V
+#getCacheAverageGetTime()J
+#getAverageGetTimeMillis()F
+#getAverageGetTimeNanos()J
+#getMaxGetTimeMillis()J
+#getMinGetTimeMillis()J
+#getMaxGetTimeNanos()J
+#getMinGetTimeNanos()J
+#getXaCommitCount()J
+#getXaRollbackCount()J
+#getXaRecoveredCount()J
+#getHasWriteBehindWriter()Z
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I
+#getWriterConcurrency()I
+#getCacheHitCount()J
+#getCacheMissCount()J
+#getInMemoryMissCount()J
+#getOffHeapMissCount()J
+#getOnDiskMissCount()J
+#getCacheMissCountExpired()J
+#getDiskExpiryThreadIntervalSeconds()J
+#setDiskExpiryThreadIntervalSeconds(J)V
+#getMaxEntriesLocalHeap()J
+#setMaxEntriesLocalHeap(J)V
+#getMaxBytesLocalHeap()J
+#setMaxBytesLocalHeap(J)V
+#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#getMaxEntriesLocalDisk()J
+#setMaxEntriesLocalDisk(J)V
+#setMaxBytesLocalDisk(J)V
+#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#getMaxElementsOnDisk()I
+#setMaxElementsOnDisk(I)V
+#getMaxBytesLocalDisk()J
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;
+#getMemoryStoreEvictionPolicy()Ljava/lang/String;
+#setMemoryStoreEvictionPolicy(Ljava/lang/String;)V
+#getTimeToIdleSeconds()J
+#setTimeToIdleSeconds(J)V
+#getTimeToLiveSeconds()J
+#setTimeToLiveSeconds(J)V
+#isDiskPersistent()Z
+#setDiskPersistent(Z)V
+#isEternal()Z
+#setEternal(Z)V
+#isOverflowToDisk()Z
+#setOverflowToDisk(Z)V
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#isPinned()Z
+#getPinnedToStore()Ljava/lang/String;
+#getEvictedCount()J
+#getExpiredCount()J
+#getInMemoryHitCount()J
+#getOffHeapHitCount()J
+#getOffHeapSize()J[deprecated]
+#getOnDiskHitCount()J
+#getOnDiskSize()J[deprecated]
+#getLocalDiskSize()J
+#getLocalHeapSize()J
+#getLocalOffHeapSize()J
+#getLocalDiskSizeInBytes()J
+#getLocalHeapSizeInBytes()J
+#getLocalOffHeapSizeInBytes()J
+#getPutCount()J
+#getRemovedCount()J
+#getSize()J
+#getInMemorySize()J
+#getUpdateCount()J
+#deregistered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#maxBytesLocalHeapChanged(JJ)V
+#maxBytesLocalDiskChanged(JJ)V
+#diskCapacityChanged(II)V
+#loggingChanged(ZZ)V
+#memoryCapacityChanged(II)V
+#registered(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#timeToIdleChanged(JJ)V
+#timeToLiveChanged(JJ)V
+#getAverageSearchTime()J
+#getSearchesPerSecond()J
+#getTransactional()Z
+#getSearchable()Z
+#getCacheSearchRate()J
+#getCacheAverageSearchTime()J
+#getTransactionCommitRate()J
+#getCacheXaCommitsMostRecentSample()J
+#getTransactionRollbackRate()J
+#getCacheXaRollbacksMostRecentSample()J
+#getCacheHitRatio()I
+#getCacheHitRatioMostRecentSample()I

+###net/sf/ehcache/management/sampled/ComprehensiveCacheSampler
@2.6.0
+#getCacheHitSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitRatioSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissNotFoundSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementEvictedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementRemovedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementPutSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementUpdatedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getAverageGetTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageGetTimeNanosSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageSearchTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getSearchesPerSecondSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaCommitsSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaRollbacksSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;

+###net/sf/ehcache/management/sampled/CacheManagerSampler
@2.6.0
+#getName()Ljava/lang/String;
+#getClusterUUID()Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#setEnabled(Z)V
+#isEnabled()Z
+#shutdown()V
+#clearAll()V
+#getCacheNames()[Ljava/lang/String;
+#getCacheMetrics()Ljava/util/Map;
+#getCacheHitRate()J
+#getCacheInMemoryHitRate()J
+#getCacheOffHeapHitRate()J
+#getCacheOnDiskHitRate()J
+#getCacheMissRate()J
+#getCacheInMemoryMissRate()J
+#getCacheOffHeapMissRate()J
+#getCacheOnDiskMissRate()J
+#getCachePutRate()J
+#getCacheUpdateRate()J
+#getCacheRemoveRate()J
+#getCacheEvictionRate()J
+#getCacheExpirationRate()J
+#getCacheAverageGetTime()F
+#getSearchable()Z
+#getCacheSearchRate()J
+#getCacheAverageSearchTime()J
+#clearStatistics()V
+#enableStatistics()V
+#disableStatistics()V
+#setStatisticsEnabled(Z)V
+#isStatisticsEnabled()Z
+#generateActiveConfigDeclaration()Ljava/lang/String;
+#generateActiveConfigDeclaration(Ljava/lang/String;)Ljava/lang/String;
+#getTransactional()Z
+#getTransactionCommittedCount()J
+#getTransactionCommitRate()J
+#getTransactionRolledBackCount()J
+#getTransactionRollbackRate()J
+#getTransactionTimedOutCount()J
+#getHasWriteBehindWriter()Z
+#getWriterQueueLength()J
+#getWriterMaxQueueSize()I
+#getMaxBytesLocalDisk()J
+#setMaxBytesLocalDisk(J)V
+#setMaxBytesLocalDiskAsString(Ljava/lang/String;)V
+#getMaxBytesLocalDiskAsString()Ljava/lang/String;
+#getMaxBytesLocalHeap()J
+#getMaxBytesLocalHeapAsString()Ljava/lang/String;
+#setMaxBytesLocalHeap(J)V
+#setMaxBytesLocalHeapAsString(Ljava/lang/String;)V
+#getMaxBytesLocalOffHeap()J
+#getMaxBytesLocalOffHeapAsString()Ljava/lang/String;

+###net/sf/ehcache/management/sampled/ComprehensiveCacheSamplerImpl
@2.6.0
+#<init>(Lnet/sf/ehcache/Cache;)V
+#getCacheHitSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitRatioSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissNotFoundSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementEvictedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementRemovedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementPutSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementUpdatedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getAverageGetTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageGetTimeNanosSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageSearchTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getSearchesPerSecondSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaCommitsSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaRollbacksSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;

+###net/sf/ehcache/management/ResourceClassLoader
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
+#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
@2.6.2
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;

+###net/sf/ehcache/management/ManagementServer
@2.6.0
+#start()V
+#stop()V
+#register(Lnet/sf/ehcache/CacheManager;)V
+#unregister(Lnet/sf/ehcache/CacheManager;)V
+#hasRegistered()Z

+###net/sf/ehcache/management/ManagementServerLoader
@2.6.0
+#<init>()V
+#register(Lnet/sf/ehcache/CacheManager;Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;)V
+#unregister(Ljava/lang/String;Lnet/sf/ehcache/CacheManager;)V

+###net/sf/ehcache/config/generator/model/elements/PersistenceConfigurationElement
@2.6.0
+#<init>(Lnet/sf/ehcache/config/generator/model/elements/ConfigurationElement;Lnet/sf/ehcache/config/PersistenceConfiguration;)V
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/PersistenceConfiguration;)V

+###net/sf/ehcache/config/generator/model/elements/ManagementRESTServiceConfigurationElement
@2.6.0
+#<init>(Lnet/sf/ehcache/config/generator/model/elements/ConfigurationElement;Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;)V
+#<init>(Lnet/sf/ehcache/config/generator/model/NodeElement;Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;)V

+###net/sf/ehcache/config/PersistenceConfiguration$Strategy
@2.6.0
+#values()[Lnet/sf/ehcache/config/PersistenceConfiguration$Strategy;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/config/PersistenceConfiguration$Strategy;

+###net/sf/ehcache/config/PersistenceConfiguration
@2.6.0
+#<init>()V
+#getStrategy()Lnet/sf/ehcache/config/PersistenceConfiguration$Strategy;
+#setStrategy(Ljava/lang/String;)V
+#strategy(Lnet/sf/ehcache/config/PersistenceConfiguration$Strategy;)Lnet/sf/ehcache/config/PersistenceConfiguration;
+#strategy(Ljava/lang/String;)Lnet/sf/ehcache/config/PersistenceConfiguration;
+#getSynchronousWrites()Z
+#setSynchronousWrites(Z)V
+#synchronousWrites(Z)Lnet/sf/ehcache/config/PersistenceConfiguration;

+###net/sf/ehcache/config/ManagementRESTServiceConfiguration
@2.6.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getSecurityServiceLocation()Ljava/lang/String;
+#setSecurityServiceLocation(Ljava/lang/String;)V
+#getSecurityServiceTimeout()I
+#setSecurityServiceTimeout(I)V
+#getBind()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#getPort()I
+#isSslEnabled()Z
+#setSslEnabled(Z)V
+#isNeedClientAuth()Z
+#setNeedClientAuth(Z)V
+#setBind(Ljava/lang/String;)V
+#getSampleHistorySize()I
+#setSampleHistorySize(I)V
+#getSampleIntervalSeconds()I
+#setSampleIntervalSeconds(I)V
+#getSampleSearchIntervalSeconds()I
+#setSampleSearchIntervalSeconds(I)V
+#makeSampledCounterConfig()Lnet/sf/ehcache/util/counter/sampled/SampledCounterConfig;
+#makeSampledGetRateCounterConfig()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounterConfig;
+#makeSampledSearchRateCounterConfig()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounterConfig;
@2.6.2
+#toString()Ljava/lang/String;

+###net/sf/ehcache/pool/sizeof/filter/AnnotationProxyFactory
@2.6.0
+#getAnnotationProxy(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;

+###net/sf/ehcache/writer/writebehind/WriteBehindQueueManager$WriteBehindQueueFactory
@2.6.0

+###net/sf/ehcache/writer/writebehind/AbstractWriteBehindQueue
@2.6.0
+#<init>(Lnet/sf/ehcache/config/CacheConfiguration;)V
+#start(Lnet/sf/ehcache/writer/CacheWriter;)V
+#setOperationsFilter(Lnet/sf/ehcache/writer/writebehind/OperationsFilter;)V
+#write(Lnet/sf/ehcache/Element;)V
+#delete(Lnet/sf/ehcache/CacheEntry;)V
+#stop()V
+#getQueueSize()J

+###net/sf/ehcache/statistics/sampled/CacheStatisticsSampler
@2.6.0
+#getCacheHitSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissInMemorySample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOffHeapSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissOnDiskSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheMissNotFoundSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheHitRatioSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementEvictedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementRemovedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementExpiredSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementPutSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheElementUpdatedSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getAverageGetTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;[deprecated]
+#getAverageGetTimeNanosSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getAverageSearchTimeSample()Lnet/sf/ehcache/util/counter/sampled/SampledRateCounter;
+#getSearchesPerSecondSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaCommitsSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;
+#getCacheXaRollbacksSample()Lnet/sf/ehcache/util/counter/sampled/SampledCounter;

+###net/sf/ehcache/ElementIdHelper
@2.6.0
+#<init>()V
+#hasId(Lnet/sf/ehcache/Element;)Z
+#getId(Lnet/sf/ehcache/Element;)J
+#setId(Lnet/sf/ehcache/Element;J)V

+###net/sf/ehcache/store/MemoryOnlyStore$BruteForceSearchManager
@2.6.0
+#<init>(Lnet/sf/ehcache/store/MemoryStore;)V
+#put(Ljava/lang/String;ILjava/lang/String;[BLnet/sf/ehcache/Element;Ljava/util/Map;)V
+#executeQuery(Ljava/lang/String;Lnet/sf/ehcache/store/StoreQuery;Ljava/util/Map;)Lnet/sf/ehcache/search/Results;
+#remove(Ljava/lang/String;Ljava/lang/String;I)V
+#clear(Ljava/lang/String;I)V
+#move(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
@2.6.2
+#<init>()V
+#setMemoryStore(Lnet/sf/ehcache/store/MemoryOnlyStore;)V
-#<init>(Lnet/sf/ehcache/store/MemoryStore;)V
@2.6.5
+#put(Ljava/lang/String;ILnet/sf/ehcache/Element;Ljava/util/Map;Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V
+#remove(Ljava/lang/String;Ljava/lang/Object;IZ)V
-#put(Ljava/lang/String;ILjava/lang/String;[BLnet/sf/ehcache/Element;Ljava/util/Map;)V
-#remove(Ljava/lang/String;Ljava/lang/String;I)V
-#move(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

+###net/sf/ehcache/store/MemoryStore$BackingFactory
@2.6.0
+#newBackingMap(Lnet/sf/ehcache/pool/PoolAccessor;ZIFIILnet/sf/ehcache/event/RegisteredEventListeners;)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;
@2.6.8
*#newBackingMap(Lnet/sf/ehcache/pool/PoolAccessor;ZIFIILnet/sf/ehcache/event/RegisteredEventListeners;)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;[deprecated]
+#newBackingMap(Lnet/sf/ehcache/pool/PoolAccessor;ZIILnet/sf/ehcache/event/RegisteredEventListeners;)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;

+###net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment
@2.6.0
+#setPinned(Ljava/lang/Object;ZI)V
+#isPinned(Ljava/lang/Object;I)Z
+#unpinAll()V
+#recalculateSize(Ljava/lang/Object;I)V

+###net/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry
@2.6.0

+###net/sf/ehcache/store/chm/SelectableConcurrentHashMap$DummyPinnedValue
@2.6.0

+###net/sf/ehcache/store/chm/SelectableConcurrentHashMap$DummyPinnedKey
@2.6.0

+###net/sf/ehcache/store/ElementIdAssigningStore
@2.6.0
+#<init>(Lnet/sf/ehcache/store/Store;)V
+#unpinAll()V
+#isPinned(Ljava/lang/Object;)Z
+#setPinned(Ljava/lang/Object;Z)V
+#addStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#removeStoreListener(Lnet/sf/ehcache/store/StoreListener;)V
+#put(Lnet/sf/ehcache/Element;)Z
+#putAll(Ljava/util/Collection;)V
+#putWithWriter(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#get(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getQuiet(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#getKeys()Ljava/util/List;
+#remove(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
+#removeAll(Ljava/util/Collection;)V
+#removeWithWriter(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
+#removeAll()V
+#putIfAbsent(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#removeElement(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
+#replace(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
+#replace(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
+#dispose()V
+#getSize()I
+#getInMemorySize()I
+#getOffHeapSize()I
+#getOnDiskSize()I
+#getTerracottaClusteredSize()I
+#getInMemorySizeInBytes()J
+#getOffHeapSizeInBytes()J
+#getOnDiskSizeInBytes()J
+#hasAbortedSizeOf()Z
+#getStatus()Lnet/sf/ehcache/Status;
+#containsKey(Ljava/lang/Object;)Z
+#containsKeyOnDisk(Ljava/lang/Object;)Z
+#containsKeyOffHeap(Ljava/lang/Object;)Z
+#containsKeyInMemory(Ljava/lang/Object;)Z
+#expireElements()V
+#flush()V
+#bufferFull()Z
+#getInMemoryEvictionPolicy()Lnet/sf/ehcache/store/Policy;
+#setInMemoryEvictionPolicy(Lnet/sf/ehcache/store/Policy;)V
+#getInternalContext()Ljava/lang/Object;
+#isCacheCoherent()Z
+#isClusterCoherent()Z
+#isNodeCoherent()Z
+#setNodeCoherent(Z)V
+#waitUntilClusterCoherent()V
+#getMBean()Ljava/lang/Object;
+#setAttributeExtractors(Ljava/util/Map;)V
+#executeQuery(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
+#getSearchAttribute(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
+#getAllQuiet(Ljava/util/Collection;)Ljava/util/Map;
+#getAll(Ljava/util/Collection;)Ljava/util/Map;
+#recalculateSize(Ljava/lang/Object;)V
@2.6.3
+#<init>(Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/util/LongSequence;)V
-#<init>(Lnet/sf/ehcache/store/Store;)V

+###net/sf/ehcache/search/impl/BaseQueryInterpreter
@2.6.0
+#<init>()V
+#process(Lnet/sf/ehcache/store/StoreQuery;)V

+###net/sf/ehcache/search/impl/GroupedResultImpl
@2.6.0
+#<init>(Lnet/sf/ehcache/store/StoreQuery;Ljava/util/Map;[Ljava/lang/Object;Ljava/util/List;Ljava/util/Map;)V
+#getGroupByValues()Ljava/util/Map;

+###net/sf/ehcache/search/impl/SearchManager
@2.6.0
+#executeQuery(Ljava/lang/String;Lnet/sf/ehcache/store/StoreQuery;Ljava/util/Map;)Lnet/sf/ehcache/search/Results;
+#put(Ljava/lang/String;ILjava/lang/String;[BLnet/sf/ehcache/Element;Ljava/util/Map;)V
+#remove(Ljava/lang/String;Ljava/lang/String;I)V
+#clear(Ljava/lang/String;I)V
+#move(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
@2.6.5
+#put(Ljava/lang/String;ILnet/sf/ehcache/Element;Ljava/util/Map;Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V
+#remove(Ljava/lang/String;Ljava/lang/Object;IZ)V
-#put(Ljava/lang/String;ILjava/lang/String;[BLnet/sf/ehcache/Element;Ljava/util/Map;)V
-#remove(Ljava/lang/String;Ljava/lang/String;I)V
-#move(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

+###net/sf/ehcache/search/expression/NotILike
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#execute(Lnet/sf/ehcache/Element;Ljava/util/Map;)Z
+#getAttributeName()Ljava/lang/String;
+#getRegex()Ljava/lang/String;

+###net/sf/ehcache/constructs/nonstop/NonstopThread
@2.6.0
+#<init>(Ljava/lang/Runnable;Ljava/lang/String;)V
+#isCurrentThreadNonstopThread()Z

+###net/sf/ehcache/DiskStorePathManager
@2.6.0
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#resolveAndLockIfExists(Ljava/lang/String;)Z
+#isAutoCreated()Z
+#isDefault()Z
+#releaseLock()V
+#getFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
+#getFile(Ljava/lang/String;)Ljava/io/File;

+###net/sf/ehcache/transaction/SoftLockID
@2.6.0
+#<init>(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Z)V
+#wasPinned()Z
+#getTransactionID()Lnet/sf/ehcache/transaction/TransactionID;
+#getKey()Ljava/lang/Object;
+#getNewElement()Lnet/sf/ehcache/Element;
+#getOldElement()Lnet/sf/ehcache/Element;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###net/sf/ehcache/transaction/local/LocalRecoveryManager
@2.6.0
+#<init>(Lnet/sf/ehcache/transaction/TransactionIDFactory;)V
+#recover()Ljava/util/Set;
+#getPreviouslyRecoveredTransactionIDs()Ljava/util/Set;

+###net/sf/ehcache/transaction/TransactionIDNotFoundException
@2.6.0
+#<init>(Ljava/lang/String;)V

+###net/sf/ehcache/transaction/SoftLockManager
@2.6.0
+#createSoftLockID(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/transaction/SoftLockID;
+#clearSoftLock(Lnet/sf/ehcache/transaction/SoftLock;)V
+#findSoftLockById(Lnet/sf/ehcache/transaction/SoftLockID;)Lnet/sf/ehcache/transaction/SoftLock;
+#getKeysInvisibleInContext(Lnet/sf/ehcache/transaction/local/LocalTransactionContext;Lnet/sf/ehcache/store/Store;)Ljava/util/Set;
+#collectAllSoftLocksForTransactionID(Lnet/sf/ehcache/transaction/TransactionID;)Ljava/util/Set;

+###net/sf/ehcache/transaction/ExpiredTransactionIDImpl
@2.6.0
+#<init>(Lnet/sf/ehcache/transaction/TransactionIDImpl;)V

+###net/sf/ehcache/transaction/ReadCommittedSoftLockFactory
@2.6.0
+#<init>()V
+#newSoftLock(Lnet/sf/ehcache/transaction/SoftLockManager;Ljava/lang/Object;)Lnet/sf/ehcache/transaction/ReadCommittedSoftLockImpl;
+#newSoftLock(Lnet/sf/ehcache/transaction/SoftLockManager;Ljava/lang/Object;)Lnet/sf/ehcache/transaction/SoftLock;

+###net/sf/ehcache/transaction/AbstractTransactionIDFactory
@2.6.0
+#<init>()V
+#markForCommit(Lnet/sf/ehcache/transaction/TransactionID;)V
+#markForRollback(Lnet/sf/ehcache/transaction/xa/XidTransactionID;)V
+#isDecisionCommit(Lnet/sf/ehcache/transaction/TransactionID;)Z
+#clear(Lnet/sf/ehcache/transaction/TransactionID;)V
+#getAllXidTransactionIDsFor(Lnet/sf/ehcache/Ehcache;)Ljava/util/Set;
+#getAllTransactionIDs()Ljava/util/Set;

+###net/sf/ehcache/transaction/Decision
@2.6.0
+#values()[Lnet/sf/ehcache/transaction/Decision;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/transaction/Decision;

+###net/sf/ehcache/transaction/SoftLockManagerImpl
@2.6.0
+#<init>(Ljava/lang/String;Lnet/sf/ehcache/transaction/SoftLockFactory;)V

+###net/sf/ehcache/transaction/xa/ExpiredXidTransactionIDImpl
@2.6.0
+#<init>(Lnet/sf/ehcache/transaction/xa/XidTransactionID;)V

+###net/sf/ehcache/transaction/AbstractSoftLockManager
@2.6.0
+#<init>(Ljava/lang/String;Lnet/sf/ehcache/transaction/SoftLockFactory;)V
+#createSoftLockID(Lnet/sf/ehcache/transaction/TransactionID;Ljava/lang/Object;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/transaction/SoftLockID;
+#findSoftLockById(Lnet/sf/ehcache/transaction/SoftLockID;)Lnet/sf/ehcache/transaction/SoftLock;
+#getKeysInvisibleInContext(Lnet/sf/ehcache/transaction/local/LocalTransactionContext;Lnet/sf/ehcache/store/Store;)Ljava/util/Set;
+#collectAllSoftLocksForTransactionID(Lnet/sf/ehcache/transaction/TransactionID;)Ljava/util/Set;
+#clearSoftLock(Lnet/sf/ehcache/transaction/SoftLock;)V

+###net/sf/ehcache/transaction/manager/selector/NullSelector
@2.6.0
+#<init>()V

+###net/sf/ehcache/transaction/manager/selector/JndiSelector
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getJndiName()Ljava/lang/String;
+#setJndiName(Ljava/lang/String;)V

+###net/sf/ehcache/transaction/manager/selector/BitronixSelector
@2.6.0
+#<init>()V
+#registerResource(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V
+#unregisterResource(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V

+###net/sf/ehcache/transaction/manager/selector/FactorySelector
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###net/sf/ehcache/transaction/manager/selector/GenericJndiSelector
@2.6.0
+#<init>()V

+###net/sf/ehcache/transaction/manager/selector/ClassSelector
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###net/sf/ehcache/transaction/manager/selector/AtomikosSelector
@2.6.0
+#<init>()V

+###net/sf/ehcache/transaction/manager/selector/Selector
@2.6.0
+#getVendor()Ljava/lang/String;
+#getTransactionManager()Ljavax/transaction/TransactionManager;
+#registerResource(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V
+#unregisterResource(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V

+###net/sf/ehcache/transaction/manager/selector/GlassfishSelector
@2.6.0
+#<init>()V

+###net/sf/ehcache/transaction/manager/selector/WeblogicSelector
@2.6.0
+#<init>()V
+#registerResource(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V
+#unregisterResource(Lnet/sf/ehcache/transaction/xa/EhcacheXAResource;Z)V

+###net/sf/ehcache/FeaturesManager
@2.6.0
+#createWriteBehind(Lnet/sf/ehcache/Cache;)Lnet/sf/ehcache/writer/writebehind/WriteBehind;
+#createStore(Lnet/sf/ehcache/Cache;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/Store;
+#createTransactionIDFactory()Lnet/sf/ehcache/transaction/TransactionIDFactory;
+#createSoftLockManager(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/transaction/SoftLockFactory;)Lnet/sf/ehcache/transaction/SoftLockManager;
+#startup()V
+#dispose()V
@2.6.2
+#createUpdateChecker()Lnet/sf/ehcache/util/UpdateChecker;

+###net/sf/ehcache/util/MergedEnumeration
@2.6.2
+#<init>([Ljava/util/Enumeration;)V
+#hasMoreElements()Z
+#nextElement()Ljava/lang/Object;

+###net/sf/ehcache/util/AtomicLongSequence
@2.6.3
+#<init>()V
+#next()J

+###net/sf/ehcache/util/LongSequence
@2.6.3
+#next()J

+###net/sf/ehcache/search/impl/DynamicSearchChecker
@2.6.5
+#<init>()V
+#getSearchAttributes(Lnet/sf/ehcache/Element;Ljava/util/Set;Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)Ljava/util/Map;

+###net/sf/ehcache/search/attribute/DynamicAttributesExtractor
@2.6.5
+#attributesFor(Lnet/sf/ehcache/Element;)Ljava/util/Map;

+###net/sf/ehcache/terracotta/SerializationHelper
@2.6.5
+#<init>()V
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
+#deserializeFromString(Ljava/lang/String;)Ljava/lang/Object;
+#serializeToString(Ljava/lang/Object;)Ljava/lang/String;

+###net/sf/ehcache/EhcacheCoreInit
@2.6.2
+#<init>()V
+#init()V

+###net/sf/ehcache/config/DynamicSearchListener
@2.6.5
+#extractorChanged(Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V

+###net/sf/ehcache/EhcacheInit
@2.6.2
+#init()V

+###net/sf/ehcache/distribution/EventMessage$EventType
@2.4.8
+#values()[Lnet/sf/ehcache/distribution/EventMessage$EventType;
+#valueOf(Ljava/lang/String;)Lnet/sf/ehcache/distribution/EventMessage$EventType;
@2.5.0
-###net/sf/ehcache/distribution/EventMessage$EventType

+###net/sf/ehcache/transaction/manager/btm/GenericXAResourceHolder
@2.0.0-beta
+#<init>(Ljavax/transaction/xa/XAResource;Lbitronix/tm/resource/common/ResourceBean;)V
+#createRecoveryXAResourceHolder()Lbitronix/tm/resource/common/RecoveryXAResourceHolder;
+#getXAResource()Ljavax/transaction/xa/XAResource;
+#getXAResourceHolderState()Lbitronix/tm/internal/XAResourceHolderState;
+#close()V
+#getConnectionHandle()Ljava/lang/Object;
+#getLastReleaseDate()Ljava/util/Date;
+#getXAResourceHolders()Ljava/util/List;
@2.0.1
-###net/sf/ehcache/transaction/manager/btm/GenericXAResourceHolder

+###net/sf/ehcache/transaction/manager/btm/GenericXAResourceProducer
@2.0.0-beta
+#<init>()V
+#registerXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#setXAResource(Ljavax/transaction/xa/XAResource;)V
+#init()V
+#startRecovery()Lbitronix/tm/internal/XAResourceHolderState;
+#endRecovery()V
+#setFailed(Z)V
+#close()V
+#createPooledConnection(Ljava/lang/Object;Lbitronix/tm/resource/common/ResourceBean;)Lbitronix/tm/resource/common/XAStatefulHolder;
+#findXAResourceHolder(Ljavax/transaction/xa/XAResource;)Lbitronix/tm/resource/common/XAResourceHolder;
+#getReference()Ljavax/naming/Reference;
@2.0.1
-###net/sf/ehcache/transaction/manager/btm/GenericXAResourceProducer

+###net/sf/ehcache/store/compound/factories/RegionSet$Region
@2.1.0-beta
+#<init>(J)V
+#<init>(JJ)V
+#<init>(Lnet/sf/ehcache/store/compound/factories/RegionSet$Region;)V
+#toString()Ljava/lang/String;
+#size()J
+#compareTo(Lnet/sf/ehcache/store/compound/factories/RegionSet$Region;)I
+#start()J
+#end()J
+#compareTo(Ljava/lang/Object;)I
@2.3.3
-###net/sf/ehcache/store/compound/factories/RegionSet$Region

+###net/sf/ehcache/hibernate/tm/SyncTransactionManager
@2.1.0
+#<init>(Ljavax/transaction/TransactionManager;)V
+#begin()V
+#commit()V
+#getStatus()I
+#getTransaction()Ljavax/transaction/Transaction;
+#setTransaction(Ljavax/transaction/Transaction;)V
+#resume(Ljavax/transaction/Transaction;)V
+#rollback()V
+#setRollbackOnly()V
+#setTransactionTimeout(I)V
+#suspend()Ljavax/transaction/Transaction;
@2.4.0
-###net/sf/ehcache/hibernate/tm/SyncTransactionManager

+###net/sf/ehcache/hibernate/tm/SyncTransaction
@2.1.0
+#<init>(Lnet/sf/ehcache/hibernate/tm/SyncTransactionManager;)V
+#commit()V
+#delistResource(Ljavax/transaction/xa/XAResource;I)Z
+#enlistResource(Ljavax/transaction/xa/XAResource;)Z
+#getStatus()I
+#registerSynchronization(Ljavax/transaction/Synchronization;)V
+#rollback()V
+#setRollbackOnly()V
@2.4.0
-###net/sf/ehcache/hibernate/tm/SyncTransaction

+###net/sf/ehcache/hibernate/tm/TransactionSynchronization
@2.1.0
+#<init>(Lnet/sf/ehcache/hibernate/tm/SyncTransaction;)V
+#beforeCompletion()V
+#afterCompletion(I)V
@2.4.0
-###net/sf/ehcache/hibernate/tm/TransactionSynchronization

+###net/sf/ehcache/hibernate/tm/SyncXid
@2.1.0
+#<init>()V
+#getFormatId()I
+#getGlobalTransactionId()[B
+#getBranchQualifier()[B
+#toString()Ljava/lang/String;
@2.4.0
-###net/sf/ehcache/hibernate/tm/SyncXid

+###net/sf/ehcache/transaction/StoreReplaceElementCommand
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)V
+#getCommandName()Ljava/lang/String;
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
@2.4.0
-###net/sf/ehcache/transaction/StoreReplaceElementCommand

+###net/sf/ehcache/transaction/StoreReplaceCommand
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/Element;)V
+#getCommandName()Ljava/lang/String;
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
@2.4.0
-###net/sf/ehcache/transaction/StoreReplaceCommand

+###net/sf/ehcache/transaction/StorePutIfAbsentCommand
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/Element;)V
+#getCommandName()Ljava/lang/String;
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
@2.4.0
-###net/sf/ehcache/transaction/StorePutIfAbsentCommand

+###net/sf/ehcache/transaction/xa/XAThreadPool
@2.2.0
+#<init>()V
+#getMultiRunner()Lnet/sf/ehcache/transaction/xa/XAThreadPool$MultiRunner;
+#shutdown()V
@2.4.0
-###net/sf/ehcache/transaction/xa/XAThreadPool

+###net/sf/ehcache/transaction/xa/XAThreadPool$MultiRunner
@2.2.0
+#execute(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#release()V
+#run()V
@2.4.0
-###net/sf/ehcache/transaction/xa/XAThreadPool$MultiRunner

+###net/sf/ehcache/transaction/StoreRemoveElementCommand
@2.1.0-beta
+#<init>(Lnet/sf/ehcache/Element;)V
+#getCommandName()Ljava/lang/String;
+#execute(Lnet/sf/ehcache/store/Store;)Z
+#execute(Lnet/sf/ehcache/writer/CacheWriterManager;)Z
+#isPut(Ljava/lang/Object;)Z
+#isRemove(Ljava/lang/Object;)Z
@2.4.0
-###net/sf/ehcache/transaction/StoreRemoveElementCommand

+###net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync
@2.4.0
+#<init>(Lnet/sf/ehcache/constructs/nonstop/store/NonstopStore;Lnet/sf/ehcache/concurrent/Sync;)V
+#isHeldByCurrentThread(Lnet/sf/ehcache/concurrent/LockType;)Z
+#lock(Lnet/sf/ehcache/concurrent/LockType;)V
+#tryLock(Lnet/sf/ehcache/concurrent/LockType;J)Z
+#unlock(Lnet/sf/ehcache/concurrent/LockType;)V
@2.4.1
-###net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync

+###net/sf/ehcache/store/StoreFactory
@1.7.0-beta
+#create(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/store/Store;
@2.0.0-beta
-###net/sf/ehcache/store/StoreFactory

+###net/sf/ehcache/concurrent/LocksAcquisitionException
@2.1.0-beta
+#<init>(Ljava/lang/String;)V
@2.1.0
-###net/sf/ehcache/concurrent/LocksAcquisitionException

+###net/sf/ehcache/concurrent/Mutex
@1.6.2
+#<init>()V
+#acquire()V
+#attempt(J)Z
+#release()V
@1.7.0-beta
-###net/sf/ehcache/concurrent/Mutex

+###net/sf/ehcache/concurrent/StripedMutex
@1.6.2
+#<init>()V
+#<init>(I)V
+#getMutexForKey(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Mutex;
@1.7.0-beta
-###net/sf/ehcache/concurrent/StripedMutex

+###net/sf/ehcache/transaction/SoftLockHelper
@2.6.9
+#<init>()V
+#commit(Lnet/sf/ehcache/transaction/SoftLock;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/ElementValueComparator;)V
+#rollback(Lnet/sf/ehcache/transaction/SoftLock;Lnet/sf/ehcache/store/Store;Lnet/sf/ehcache/store/ElementValueComparator;)V
