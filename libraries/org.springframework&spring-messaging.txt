
+###org/springframework/messaging/MessageHandlingException
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.1.RELEASE
+#<init>(Lorg/springframework/messaging/Message;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V

+###org/springframework/messaging/simp/SimpMessageType
@4.0.0.RELEASE
+#values()[Lorg/springframework/messaging/simp/SimpMessageType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/messaging/simp/SimpMessageType;

+###org/springframework/messaging/simp/SimpMessageTypeMessageCondition
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/SimpMessageType;)V
+#getMessageType()Lorg/springframework/messaging/simp/SimpMessageType;
+#combine(Lorg/springframework/messaging/simp/SimpMessageTypeMessageCondition;)Lorg/springframework/messaging/simp/SimpMessageTypeMessageCondition;
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/SimpMessageTypeMessageCondition;
+#compareTo(Lorg/springframework/messaging/simp/SimpMessageTypeMessageCondition;Lorg/springframework/messaging/Message;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/messaging/Message;)I
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/messaging/simp/SimpAttributesContextHolder
@4.1.0.RELEASE
+#<init>()V
+#resetAttributes()V
+#setAttributes(Lorg/springframework/messaging/simp/SimpAttributes;)V
+#setAttributesFromMessage(Lorg/springframework/messaging/Message;)V
+#getAttributes()Lorg/springframework/messaging/simp/SimpAttributes;
+#currentAttributes()Lorg/springframework/messaging/simp/SimpAttributes;

+###org/springframework/messaging/simp/annotation/SendToUser
@4.0.0.RELEASE
+#value()[Ljava/lang/String;
@4.1.0.RELEASE
+#broadcast()Z
@4.2.0.RELEASE
+#destinations()[Ljava/lang/String;

+###org/springframework/messaging/simp/annotation/SubscribeMapping
@4.0.0.RELEASE
+#value()[Ljava/lang/String;

+###org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/SimpMessageSendingOperations;Z)V
+#setDefaultDestinationPrefix(Ljava/lang/String;)V
+#getDefaultDestinationPrefix()Ljava/lang/String;
+#setDefaultUserDestinationPrefix(Ljava/lang/String;)V
+#getDefaultUserDestinationPrefix()Ljava/lang/String;
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)V
+#toString()Ljava/lang/String;
@4.1.0.RELEASE
+#setHeaderInitializer(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
+#getHeaderInitializer()Lorg/springframework/messaging/support/MessageHeaderInitializer;

+###org/springframework/messaging/simp/annotation/support/SubscriptionMethodReturnValueHandler
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/core/MessageSendingOperations;)V
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)V
@4.1.0.RELEASE
+#setHeaderInitializer(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
+#getHeaderInitializer()Lorg/springframework/messaging/support/MessageHeaderInitializer;

+###org/springframework/messaging/simp/annotation/support/PrincipalMethodArgumentResolver
@4.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/messaging/simp/annotation/support/MissingSessionUserException
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;)V

+###org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/simp/SimpMessageSendingOperations;)V
+#setMessageConverter(Lorg/springframework/messaging/converter/MessageConverter;)V
+#getMessageConverter()Lorg/springframework/messaging/converter/MessageConverter;
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#getConversionService()Lorg/springframework/core/convert/ConversionService;
+#setPathMatcher(Lorg/springframework/util/PathMatcher;)V
+#getPathMatcher()Lorg/springframework/util/PathMatcher;
+#isAutoStartup()Z
+#getPhase()I
+#isRunning()Z
+#start()V
+#stop()V
+#stop(Ljava/lang/Runnable;)V
@4.0.1.RELEASE
+#getValidator()Lorg/springframework/validation/Validator;
+#setValidator(Lorg/springframework/validation/Validator;)V
@4.1.0.RELEASE
+#setDestinationPrefixes(Ljava/util/Collection;)V
+#setHeaderInitializer(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
+#getHeaderInitializer()Lorg/springframework/messaging/support/MessageHeaderInitializer;
@4.2.0.RELEASE
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V
@5.1.0.RELEASE
-#isAutoStartup()Z
-#getPhase()I

+###org/springframework/messaging/simp/stomp/DefaultStompSession
@4.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/stomp/StompSessionHandler;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
+#getSessionId()Ljava/lang/String;
+#getSessionHandler()Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
+#getSessionFuture()Lorg/springframework/util/concurrent/ListenableFuture;
+#setMessageConverter(Lorg/springframework/messaging/converter/MessageConverter;)V
+#getMessageConverter()Lorg/springframework/messaging/converter/MessageConverter;
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#getTaskScheduler()Lorg/springframework/scheduling/TaskScheduler;
+#setReceiptTimeLimit(J)V
+#getReceiptTimeLimit()J
+#setAutoReceipt(Z)V
+#isAutoReceiptEnabled()Z
+#isConnected()Z
+#send(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
+#send(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
+#subscribe(Ljava/lang/String;Lorg/springframework/messaging/simp/stomp/StompFrameHandler;)Lorg/springframework/messaging/simp/stomp/StompSession$Subscription;
+#subscribe(Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompFrameHandler;)Lorg/springframework/messaging/simp/stomp/StompSession$Subscription;
+#disconnect()V
+#afterConnected(Lorg/springframework/messaging/tcp/TcpConnection;)V
+#afterConnectFailure(Ljava/lang/Throwable;)V
+#handleMessage(Lorg/springframework/messaging/Message;)V
+#handleFailure(Ljava/lang/Throwable;)V
+#afterConnectionClosed()V
@4.3.0.RELEASE
+#acknowledge(Ljava/lang/String;Z)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
@5.0.5.RELEASE
+#acknowledge(Lorg/springframework/messaging/simp/stomp/StompHeaders;Z)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
@5.2.2.RELEASE
+#disconnect(Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
@5.3.0
+#getConnectHeaders()Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
@6.0.0
+#getSession()Ljava/util/concurrent/CompletableFuture;
-#getSessionFuture()Lorg/springframework/util/concurrent/ListenableFuture;

+###org/springframework/messaging/simp/stomp/StompSession$Subscription
@4.2.0.RELEASE
+#getSubscriptionId()Ljava/lang/String;
+#unsubscribe()V
@5.0.0.RELEASE
+#getSubscriptionHeaders()Lorg/springframework/messaging/simp/stomp/StompHeaders;
+#unsubscribe(Lorg/springframework/messaging/simp/stomp/StompHeaders;)V

+###org/springframework/messaging/simp/stomp/StompTcpConnectionHandler
@5.3.0
+#getSessionId()Ljava/lang/String;
+#getConnectHeaders()Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;

+###org/springframework/messaging/simp/stomp/BufferingStompDecoder
@4.0.3.RELEASE
+#<init>(I)V
+#getBufferSizeLimit()I
+#getBufferSize()I
+#getExpectedContentLength()Ljava/lang/Integer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/util/List;
@4.1.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/stomp/StompDecoder;I)V
+#getStompDecoder()Lorg/springframework/messaging/simp/stomp/StompDecoder;
-#<init>(I)V

+###org/springframework/messaging/simp/stomp/StompClientSupport
@4.2.0.RELEASE
+#<init>()V
+#setMessageConverter(Lorg/springframework/messaging/converter/MessageConverter;)V
+#getMessageConverter()Lorg/springframework/messaging/converter/MessageConverter;
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#getTaskScheduler()Lorg/springframework/scheduling/TaskScheduler;
+#setDefaultHeartbeat([J)V
+#getDefaultHeartbeat()[J
+#isDefaultHeartbeatEnabled()Z
+#setReceiptTimeLimit(J)V
+#getReceiptTimeLimit()J

+###org/springframework/messaging/simp/stomp/StompCommand
@4.0.0.RELEASE
+#values()[Lorg/springframework/messaging/simp/stomp/StompCommand;
+#valueOf(Ljava/lang/String;)Lorg/springframework/messaging/simp/stomp/StompCommand;
+#getMessageType()Lorg/springframework/messaging/simp/SimpMessageType;
+#requiresDestination()Z
+#requiresSubscriptionId()Z
+#isBodyAllowed()Z
@4.0.4.RELEASE
+#requiresContentLength()Z

+###org/springframework/messaging/simp/stomp/StompEncoder
@4.0.0.RELEASE
+#<init>()V
+#encode(Lorg/springframework/messaging/Message;)[B
@4.1.0.RELEASE
+#encode(Ljava/util/Map;[B)[B

+###org/springframework/messaging/simp/stomp/StompSessionHandler
@4.2.0.RELEASE
+#afterConnected(Lorg/springframework/messaging/simp/stomp/StompSession;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
+#handleException(Lorg/springframework/messaging/simp/stomp/StompSession;Lorg/springframework/messaging/simp/stomp/StompCommand;Lorg/springframework/messaging/simp/stomp/StompHeaders;[BLjava/lang/Throwable;)V
+#handleTransportError(Lorg/springframework/messaging/simp/stomp/StompSession;Ljava/lang/Throwable;)V

+###org/springframework/messaging/simp/stomp/ReactorNettyTcpStompClient
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(Lorg/springframework/messaging/tcp/TcpOperations;)V
+#connect(Lorg/springframework/messaging/simp/stomp/StompSessionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#connect(Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompSessionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#shutdown()V
@5.0.7.RELEASE
+#toString()Ljava/lang/String;
@6.0.0
*#connect(Lorg/springframework/messaging/simp/stomp/StompSessionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
+#connectAsync(Lorg/springframework/messaging/simp/stomp/StompSessionHandler;)Ljava/util/concurrent/CompletableFuture;
*#connect(Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompSessionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
+#connectAsync(Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompSessionHandler;)Ljava/util/concurrent/CompletableFuture;

+###org/springframework/messaging/simp/stomp/StompHeaderAccessor
@4.0.0.RELEASE
+#create(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
+#create(Lorg/springframework/messaging/simp/stomp/StompCommand;Ljava/util/Map;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
+#wrap(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
+#toNativeHeaderMap()Ljava/util/Map;
+#toStompHeaderMap()Ljava/util/Map;
+#updateStompCommandAsClientMessage()Lorg/springframework/messaging/simp/stomp/StompCommand;
+#updateStompCommandAsServerMessage()V
+#getCommand()Lorg/springframework/messaging/simp/stomp/StompCommand;
+#getAcceptVersion()Ljava/util/Set;
+#setAcceptVersion(Ljava/lang/String;)V
+#setHost(Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#setDestination(Ljava/lang/String;)V
+#getHeartbeat()[J
+#setContentType(Lorg/springframework/util/MimeType;)V
+#getContentLength()Ljava/lang/Integer;
+#setContentLength(I)V
+#setHeartbeat(JJ)V
+#setAck(Ljava/lang/String;)V
+#getAck()Ljava/lang/String;
+#setNack(Ljava/lang/String;)V
+#getNack()Ljava/lang/String;
+#setLogin(Ljava/lang/String;)V
+#getLogin()Ljava/lang/String;
+#setPasscode(Ljava/lang/String;)V
+#getPasscode()Ljava/lang/String;
+#setReceiptId(Ljava/lang/String;)V
+#getReceiptId()Ljava/lang/String;
+#setReceipt(Ljava/lang/String;)V
+#getReceipt()Ljava/lang/String;
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)V
+#getMessageId()Ljava/lang/String;
+#setMessageId(Ljava/lang/String;)V
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V
@4.1.0.RELEASE
+#isHeartbeat()Z
+#setSubscriptionId(Ljava/lang/String;)V
+#getShortLogMessage(Ljava/lang/Object;)Ljava/lang/String;
+#getDetailedLogMessage(Ljava/lang/Object;)Ljava/lang/String;
+#createForHeartbeat()Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
+#getCommand(Ljava/util/Map;)Lorg/springframework/messaging/simp/stomp/StompCommand;
+#getPasscode(Ljava/util/Map;)Ljava/lang/String;
+#getContentLength(Ljava/util/Map;)Ljava/lang/Integer;
-#toNativeHeaderMap()Ljava/util/Map;
-#toStompHeaderMap()Ljava/util/Map;

+###org/springframework/messaging/simp/stomp/StompSession$Receiptable
@4.2.0.RELEASE
+#getReceiptId()Ljava/lang/String;
+#addReceiptTask(Ljava/lang/Runnable;)V
+#addReceiptLostTask(Ljava/lang/Runnable;)V
@5.3.23
+#addReceiptTask(Ljava/util/function/Consumer;)V

+###org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Ljava/util/Collection;)V
+#setRelayHost(Ljava/lang/String;)V
+#getRelayHost()Ljava/lang/String;
+#setRelayPort(I)V
+#getRelayPort()I
+#setSystemHeartbeatSendInterval(J)V
+#getSystemHeartbeatSendInterval()J
+#setSystemHeartbeatReceiveInterval(J)V
+#getSystemHeartbeatReceiveInterval()J
+#setSystemLogin(Ljava/lang/String;)V
+#getSystemLogin()Ljava/lang/String;
+#setSystemPasscode(Ljava/lang/String;)V
+#getSystemPasscode()Ljava/lang/String;
+#setVirtualHost(Ljava/lang/String;)V
+#getVirtualHost()Ljava/lang/String;
@4.0.1.RELEASE
+#setClientLogin(Ljava/lang/String;)V
+#getClientLogin()Ljava/lang/String;
+#setClientPasscode(Ljava/lang/String;)V
+#getClientPasscode()Ljava/lang/String;
+#setTcpClient(Lorg/springframework/messaging/tcp/TcpOperations;)V
+#getTcpClient()Lorg/springframework/messaging/tcp/TcpOperations;
@4.1.0.RELEASE
+#getConnectionCount()I
+#setHeaderInitializer(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
+#getHeaderInitializer()Lorg/springframework/messaging/support/MessageHeaderInitializer;
+#getStatsInfo()Ljava/lang/String;
+#toString()Ljava/lang/String;
@4.2.0.RELEASE
+#setSystemSubscriptions(Ljava/util/Map;)V
+#getSystemSubscriptions()Ljava/util/Map;
@5.2.0.RELEASE
+#getStats()Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
@5.3.0
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#getTaskScheduler()Lorg/springframework/scheduling/TaskScheduler;

+###org/springframework/messaging/simp/stomp/ConnectionHandlingStompSession
@4.2.0.RELEASE
+#getSessionFuture()Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
*#getSessionFuture()Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
+#getSession()Ljava/util/concurrent/CompletableFuture;

+###org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats
@5.2.0.RELEASE
+#getTotalHandlers()I
+#getTotalConnect()I
+#getTotalConnected()I
+#getTotalDisconnect()I

+###org/springframework/messaging/simp/stomp/StompHeaders
@4.2.0.RELEASE
+#<init>()V
+#setContentType(Lorg/springframework/util/MimeType;)V
+#getContentType()Lorg/springframework/util/MimeType;
+#setContentLength(J)V
+#getContentLength()J
+#setReceipt(Ljava/lang/String;)V
+#getReceipt()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#setLogin(Ljava/lang/String;)V
+#getLogin()Ljava/lang/String;
+#setPasscode(Ljava/lang/String;)V
+#getPasscode()Ljava/lang/String;
+#setHeartbeat([J)V
+#getHeartbeat()[J
+#isHeartbeatEnabled()Z
+#setSession(Ljava/lang/String;)V
+#getSession()Ljava/lang/String;
+#setServer(Ljava/lang/String;)V
+#getServer()Ljava/lang/String;
+#setDestination(Ljava/lang/String;)V
+#getDestination()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setAck(Ljava/lang/String;)V
+#getAck()Ljava/lang/String;
+#setSubscription(Ljava/lang/String;)V
+#getSubscription()Ljava/lang/String;
+#setMessageId(Ljava/lang/String;)V
+#getMessageId()Ljava/lang/String;
+#setReceiptId(Ljava/lang/String;)V
+#getReceiptId()Ljava/lang/String;
+#getFirst(Ljava/lang/String;)Ljava/lang/String;
+#add(Ljava/lang/String;Ljava/lang/String;)V
+#set(Ljava/lang/String;Ljava/lang/String;)V
+#setAll(Ljava/util/Map;)V
+#toSingleValueMap()Ljava/util/Map;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/List;
+#put(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#remove(Ljava/lang/Object;)Ljava/util/List;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#readOnlyStompHeaders(Ljava/util/Map;)Lorg/springframework/messaging/simp/stomp/StompHeaders;
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0.RELEASE
+#addAll(Ljava/lang/String;Ljava/util/List;)V
+#addAll(Lorg/springframework/util/MultiValueMap;)V
+#addAll(Ljava/lang/Object;Ljava/util/List;)V
@5.0.7.RELEASE
+#setAcceptVersion([Ljava/lang/String;)V
+#getAcceptVersion()[Ljava/lang/String;

+###org/springframework/messaging/simp/stomp/StompSession
@4.2.0.RELEASE
+#getSessionId()Ljava/lang/String;
+#isConnected()Z
+#setAutoReceipt(Z)V
+#send(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
+#send(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
+#subscribe(Ljava/lang/String;Lorg/springframework/messaging/simp/stomp/StompFrameHandler;)Lorg/springframework/messaging/simp/stomp/StompSession$Subscription;
+#subscribe(Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompFrameHandler;)Lorg/springframework/messaging/simp/stomp/StompSession$Subscription;
+#disconnect()V
@4.3.0.RELEASE
+#acknowledge(Ljava/lang/String;Z)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
@5.0.5.RELEASE
+#acknowledge(Lorg/springframework/messaging/simp/stomp/StompHeaders;Z)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
@5.2.2.RELEASE
+#disconnect(Lorg/springframework/messaging/simp/stomp/StompHeaders;)V

+###org/springframework/messaging/simp/stomp/StompDecoder
@4.0.0.RELEASE
+#<init>()V
+#decode(Ljava/nio/ByteBuffer;)Lorg/springframework/messaging/Message;
@4.0.3.RELEASE
+#decode(Ljava/nio/ByteBuffer;)Ljava/util/List;
+#decode(Ljava/nio/ByteBuffer;Lorg/springframework/util/MultiValueMap;)Ljava/util/List;
-#decode(Ljava/nio/ByteBuffer;)Lorg/springframework/messaging/Message;
@4.1.0.RELEASE
+#setHeaderInitializer(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
+#getHeaderInitializer()Lorg/springframework/messaging/support/MessageHeaderInitializer;

+###org/springframework/messaging/simp/stomp/StompFrameHandler
@4.2.0.RELEASE
+#getPayloadType(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/reflect/Type;
+#handleFrame(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)V

+###org/springframework/messaging/simp/stomp/StompSessionHandlerAdapter
@4.2.0.RELEASE
+#<init>()V
+#afterConnected(Lorg/springframework/messaging/simp/stomp/StompSession;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
+#getPayloadType(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/reflect/Type;
+#handleFrame(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)V
+#handleException(Lorg/springframework/messaging/simp/stomp/StompSession;Lorg/springframework/messaging/simp/stomp/StompCommand;Lorg/springframework/messaging/simp/stomp/StompHeaders;[BLjava/lang/Throwable;)V
+#handleTransportError(Lorg/springframework/messaging/simp/stomp/StompSession;Ljava/lang/Throwable;)V

+###org/springframework/messaging/simp/stomp/StompConversionException
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/messaging/simp/stomp/StompReactorNettyCodec
@5.0.2.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/messaging/simp/stomp/StompDecoder;)V
+#<init>(Lorg/springframework/messaging/simp/stomp/StompDecoder;Lorg/springframework/messaging/simp/stomp/StompEncoder;)V

+###org/springframework/messaging/simp/stomp/ConnectionLostException
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/messaging/simp/SimpMessageMappingInfo
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/SimpMessageTypeMessageCondition;Lorg/springframework/messaging/handler/DestinationPatternsMessageCondition;)V
+#getMessageTypeMessageCondition()Lorg/springframework/messaging/simp/SimpMessageTypeMessageCondition;
+#getDestinationConditions()Lorg/springframework/messaging/handler/DestinationPatternsMessageCondition;
+#combine(Lorg/springframework/messaging/simp/SimpMessageMappingInfo;)Lorg/springframework/messaging/simp/SimpMessageMappingInfo;
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/SimpMessageMappingInfo;
+#compareTo(Lorg/springframework/messaging/simp/SimpMessageMappingInfo;Lorg/springframework/messaging/Message;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;Lorg/springframework/messaging/Message;)I
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/messaging/simp/SimpSessionScope
@4.1.0.RELEASE
+#<init>()V
+#get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)Ljava/lang/Object;
+#registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V
+#resolveContextualObject(Ljava/lang/String;)Ljava/lang/Object;
+#getConversationId()Ljava/lang/String;

+###org/springframework/messaging/simp/SimpMessageHeaderAccessor
@4.0.0.RELEASE
+#create()Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
+#create(Lorg/springframework/messaging/simp/SimpMessageType;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
+#wrap(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
+#setMessageTypeIfNotSet(Lorg/springframework/messaging/simp/SimpMessageType;)V
+#getMessageType()Lorg/springframework/messaging/simp/SimpMessageType;
+#setDestination(Ljava/lang/String;)V
+#getDestination()Ljava/lang/String;
+#getSubscriptionId()Ljava/lang/String;
+#setSubscriptionId(Ljava/lang/String;)V
+#getSessionId()Ljava/lang/String;
+#setSessionId(Ljava/lang/String;)V
+#getUser()Ljava/security/Principal;
+#setUser(Ljava/security/Principal;)V
@4.0.3.RELEASE
+#getSessionAttributes()Ljava/util/Map;
+#setSessionAttributes(Ljava/util/Map;)V
@4.1.0.RELEASE
+#getShortLogMessage(Ljava/lang/Object;)Ljava/lang/String;
+#getDetailedLogMessage(Ljava/lang/Object;)Ljava/lang/String;
+#getMessageType(Ljava/util/Map;)Lorg/springframework/messaging/simp/SimpMessageType;
+#getDestination(Ljava/util/Map;)Ljava/lang/String;
+#getSubscriptionId(Ljava/util/Map;)Ljava/lang/String;
+#getSessionId(Ljava/util/Map;)Ljava/lang/String;
+#getSessionAttributes(Ljava/util/Map;)Ljava/util/Map;
+#getUser(Ljava/util/Map;)Ljava/security/Principal;
@4.2.0.RELEASE
+#getHeartbeat(Ljava/util/Map;)[J
@5.1.9.RELEASE
+#setUserChangeCallback(Ljava/util/function/Consumer;)V

+###org/springframework/messaging/simp/SimpAttributes
@4.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)V
+#getAttributeNames()[Ljava/lang/String;
+#registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V
+#getSessionId()Ljava/lang/String;
+#getSessionMutex()Ljava/lang/Object;
+#isSessionCompleted()Z
+#sessionCompleted()V
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/SimpAttributes;

+###org/springframework/messaging/simp/user/SimpSubscriptionMatcher
@4.2.0.RELEASE
+#match(Lorg/springframework/messaging/simp/user/SimpSubscription;)Z

+###org/springframework/messaging/simp/user/UserDestinationMessageHandler
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/simp/user/UserDestinationResolver;)V
+#getUserDestinationResolver()Lorg/springframework/messaging/simp/user/UserDestinationResolver;
+#getBrokerMessagingTemplate()Lorg/springframework/messaging/core/MessageSendingOperations;
+#isAutoStartup()Z
+#getPhase()I
+#isRunning()Z
+#start()V
+#stop()V
+#stop(Ljava/lang/Runnable;)V
+#handleMessage(Lorg/springframework/messaging/Message;)V
@4.0.1.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/simp/user/UserDestinationResolver;)V
-#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/simp/user/UserDestinationResolver;)V
@4.1.0.RELEASE
+#setHeaderInitializer(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
+#getHeaderInitializer()Lorg/springframework/messaging/support/MessageHeaderInitializer;
+#toString()Ljava/lang/String;
@4.2.0.RELEASE
+#setBroadcastDestination(Ljava/lang/String;)V
+#getBroadcastDestination()Ljava/lang/String;
@5.1.0.RELEASE
-#isAutoStartup()Z
-#getPhase()I

+###org/springframework/messaging/simp/user/UserDestinationResolver
@4.0.0.RELEASE
+#resolveDestination(Lorg/springframework/messaging/Message;)Ljava/util/Set;
@4.0.2.RELEASE
+#resolveDestination(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/user/UserDestinationResult;
-#resolveDestination(Lorg/springframework/messaging/Message;)Ljava/util/Set;

+###org/springframework/messaging/simp/user/DestinationUserNameProvider
@4.0.1.RELEASE
+#getDestinationUserName()Ljava/lang/String;

+###org/springframework/messaging/simp/user/UserDestinationResult
@4.0.2.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;)V
+#getSourceDestination()Ljava/lang/String;
+#getTargetDestinations()Ljava/util/Set;
+#getSubscribeDestination()Ljava/lang/String;
+#getUser()Ljava/lang/String;
@4.1.0.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/messaging/simp/user/UserRegistryMessageHandler
@4.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/user/SimpUserRegistry;Lorg/springframework/messaging/simp/SimpMessagingTemplate;Ljava/lang/String;Lorg/springframework/scheduling/TaskScheduler;)V
+#getBroadcastDestination()Ljava/lang/String;
+#setRegistryExpirationPeriod(J)V
+#getRegistryExpirationPeriod()J
+#onApplicationEvent(Lorg/springframework/messaging/simp/broker/BrokerAvailabilityEvent;)V
+#handleMessage(Lorg/springframework/messaging/Message;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@4.3.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/user/MultiServerUserRegistry;Lorg/springframework/messaging/simp/SimpMessagingTemplate;Ljava/lang/String;Lorg/springframework/scheduling/TaskScheduler;)V
-#<init>(Lorg/springframework/messaging/simp/user/SimpUserRegistry;Lorg/springframework/messaging/simp/SimpMessagingTemplate;Ljava/lang/String;Lorg/springframework/scheduling/TaskScheduler;)V

+###org/springframework/messaging/simp/user/SimpUserRegistry
@4.2.0.RELEASE
+#getUser(Ljava/lang/String;)Lorg/springframework/messaging/simp/user/SimpUser;
+#getUsers()Ljava/util/Set;
+#findSubscriptions(Lorg/springframework/messaging/simp/user/SimpSubscriptionMatcher;)Ljava/util/Set;
@4.3.5.RELEASE
+#getUserCount()I

+###org/springframework/messaging/simp/user/MultiServerUserRegistry
@4.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/user/SimpUserRegistry;)V
+#getUser(Ljava/lang/String;)Lorg/springframework/messaging/simp/user/SimpUser;
+#getUsers()Ljava/util/Set;
+#findSubscriptions(Lorg/springframework/messaging/simp/user/SimpSubscriptionMatcher;)Ljava/util/Set;
+#supportsEventType(Ljava/lang/Class;)Z
+#supportsSourceType(Ljava/lang/Class;)Z
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#getOrder()I
+#toString()Ljava/lang/String;
@4.3.5.RELEASE
+#getUserCount()I

+###org/springframework/messaging/simp/user/DefaultUserDestinationResolver
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/user/UserSessionRegistry;)V
+#setUserDestinationPrefix(Ljava/lang/String;)V
+#getDestinationPrefix()Ljava/lang/String;
+#getSubscriptionDestinationPrefix()Ljava/lang/String;
+#getUserSessionRegistry()Lorg/springframework/messaging/simp/user/UserSessionRegistry;
+#resolveDestination(Lorg/springframework/messaging/Message;)Ljava/util/Set;
@4.0.1.RELEASE
-#getSubscriptionDestinationPrefix()Ljava/lang/String;
@4.0.2.RELEASE
+#resolveDestination(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/user/UserDestinationResult;
-#resolveDestination(Lorg/springframework/messaging/Message;)Ljava/util/Set;
@4.1.0.RELEASE
+#toString()Ljava/lang/String;
@4.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/user/SimpUserRegistry;)V
+#getSimpUserRegistry()Lorg/springframework/messaging/simp/user/SimpUserRegistry;
-#<init>(Lorg/springframework/messaging/simp/user/UserSessionRegistry;)V
-#getUserSessionRegistry()Lorg/springframework/messaging/simp/user/UserSessionRegistry;
@4.3.0.RELEASE
+#setPathMatcher(Lorg/springframework/util/PathMatcher;)V
@4.3.14.RELEASE
+#setRemoveLeadingSlash(Z)V
+#isRemoveLeadingSlash()Z
*#setPathMatcher(Lorg/springframework/util/PathMatcher;)V[deprecated]
@5.0.0.RELEASE
-#setRemoveLeadingSlash(Z)V
-#isRemoveLeadingSlash()Z
@5.0.3.RELEASE
+#setRemoveLeadingSlash(Z)V
+#isRemoveLeadingSlash()Z
*#setPathMatcher(Lorg/springframework/util/PathMatcher;)V[deprecated]
@6.0.0
-#setPathMatcher(Lorg/springframework/util/PathMatcher;)V[deprecated]

+###org/springframework/messaging/simp/user/SimpSession
@4.2.0.RELEASE
+#getId()Ljava/lang/String;
+#getUser()Lorg/springframework/messaging/simp/user/SimpUser;
+#getSubscriptions()Ljava/util/Set;

+###org/springframework/messaging/simp/user/SimpUser
@4.2.0.RELEASE
+#getName()Ljava/lang/String;
+#hasSessions()Z
+#getSession(Ljava/lang/String;)Lorg/springframework/messaging/simp/user/SimpSession;
+#getSessions()Ljava/util/Set;
@5.3.0
+#getPrincipal()Ljava/security/Principal;

+###org/springframework/messaging/simp/user/SimpSubscription
@4.2.0.RELEASE
+#getId()Ljava/lang/String;
+#getSession()Lorg/springframework/messaging/simp/user/SimpSession;
+#getDestination()Ljava/lang/String;

+###org/springframework/messaging/simp/SimpMessagingTemplate
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;)V
+#setUserDestinationPrefix(Ljava/lang/String;)V
+#getUserDestinationPrefix()Ljava/lang/String;
+#getMessageChannel()Lorg/springframework/messaging/MessageChannel;
+#setSendTimeout(J)V
+#getSendTimeout()J
+#send(Lorg/springframework/messaging/Message;)V
+#convertAndSendToUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#convertAndSendToUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
+#convertAndSendToUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#convertAndSendToUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V
@4.1.0.RELEASE
+#setHeaderInitializer(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
+#getHeaderInitializer()Lorg/springframework/messaging/support/MessageHeaderInitializer;

+###org/springframework/messaging/simp/SimpMessageSendingOperations
@4.0.0.RELEASE
+#convertAndSendToUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#convertAndSendToUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
+#convertAndSendToUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#convertAndSendToUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V

+###org/springframework/messaging/simp/config/ChannelRegistration
@4.0.0.RELEASE
+#<init>()V
+#taskExecutor()Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
+#setInterceptors([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
@4.1.1.RELEASE
+#taskExecutor(Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
@4.3.12.RELEASE
+#interceptors([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
*#setInterceptors([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;[deprecated]
@6.0.0
-#setInterceptors([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;[deprecated]

+###org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration
@4.0.0.RELEASE
+#clientInboundChannel()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
+#clientInboundChannelExecutor()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
+#clientOutboundChannel()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
+#clientOutboundChannelExecutor()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
+#brokerChannel()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
+#brokerChannelExecutor()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
+#simpAnnotationMethodMessageHandler()Lorg/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler;
+#simpleBrokerMessageHandler()Lorg/springframework/messaging/simp/broker/AbstractBrokerMessageHandler;
+#stompBrokerRelayMessageHandler()Lorg/springframework/messaging/simp/broker/AbstractBrokerMessageHandler;
+#userDestinationMessageHandler()Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler;
+#brokerMessagingTemplate()Lorg/springframework/messaging/simp/SimpMessagingTemplate;
+#brokerMessageConverter()Lorg/springframework/messaging/converter/CompositeMessageConverter;
+#userDestinationResolver()Lorg/springframework/messaging/simp/user/UserDestinationResolver;
+#userSessionRegistry()Lorg/springframework/messaging/simp/user/UserSessionRegistry;
@4.0.1.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#getValidator()Lorg/springframework/validation/Validator;
@4.2.0.RELEASE
+#getPathMatcher()Lorg/springframework/util/PathMatcher;
+#userRegistryMessageHandler()Lorg/springframework/messaging/MessageHandler;
+#messageBrokerTaskScheduler()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
+#userRegistry()Lorg/springframework/messaging/simp/user/SimpUserRegistry;
-#userSessionRegistry()Lorg/springframework/messaging/simp/user/UserSessionRegistry;
@5.2.0.RELEASE
+#clientInboundChannelExecutor()Lorg/springframework/core/task/TaskExecutor;
+#clientOutboundChannelExecutor()Lorg/springframework/core/task/TaskExecutor;
+#brokerChannelExecutor()Lorg/springframework/core/task/TaskExecutor;
+#messageBrokerTaskScheduler()Lorg/springframework/scheduling/TaskScheduler;
-#clientInboundChannelExecutor()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
-#clientOutboundChannelExecutor()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
-#brokerChannelExecutor()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
-#messageBrokerTaskScheduler()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
@5.3.2
+#clientInboundChannel(Lorg/springframework/core/task/TaskExecutor;)Lorg/springframework/messaging/support/AbstractSubscribableChannel;
+#clientOutboundChannel(Lorg/springframework/core/task/TaskExecutor;)Lorg/springframework/messaging/support/AbstractSubscribableChannel;
+#brokerChannel(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/core/task/TaskExecutor;)Lorg/springframework/messaging/support/AbstractSubscribableChannel;
+#brokerChannelExecutor(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;)Lorg/springframework/core/task/TaskExecutor;
+#getPathMatcher(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;)Lorg/springframework/util/PathMatcher;
+#simpAnnotationMethodMessageHandler(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/simp/SimpMessagingTemplate;Lorg/springframework/messaging/converter/CompositeMessageConverter;)Lorg/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler;
+#simpleBrokerMessageHandler(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/simp/user/UserDestinationResolver;)Lorg/springframework/messaging/simp/broker/AbstractBrokerMessageHandler;
+#stompBrokerRelayMessageHandler(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler;Lorg/springframework/messaging/MessageHandler;Lorg/springframework/messaging/simp/user/UserDestinationResolver;)Lorg/springframework/messaging/simp/broker/AbstractBrokerMessageHandler;
+#userDestinationMessageHandler(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/simp/user/UserDestinationResolver;)Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler;
+#userRegistryMessageHandler(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/simp/user/SimpUserRegistry;Lorg/springframework/messaging/simp/SimpMessagingTemplate;Lorg/springframework/scheduling/TaskScheduler;)Lorg/springframework/messaging/MessageHandler;
+#brokerMessagingTemplate(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/converter/CompositeMessageConverter;)Lorg/springframework/messaging/simp/SimpMessagingTemplate;
+#userDestinationResolver(Lorg/springframework/messaging/simp/user/SimpUserRegistry;Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;)Lorg/springframework/messaging/simp/user/UserDestinationResolver;
+#userRegistry(Lorg/springframework/messaging/support/AbstractSubscribableChannel;Lorg/springframework/messaging/support/AbstractSubscribableChannel;)Lorg/springframework/messaging/simp/user/SimpUserRegistry;
-#clientInboundChannel()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
-#clientOutboundChannel()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
-#brokerChannel()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
-#brokerChannelExecutor()Lorg/springframework/core/task/TaskExecutor;
-#getPathMatcher()Lorg/springframework/util/PathMatcher;
-#simpAnnotationMethodMessageHandler()Lorg/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler;
-#simpleBrokerMessageHandler()Lorg/springframework/messaging/simp/broker/AbstractBrokerMessageHandler;
-#stompBrokerRelayMessageHandler()Lorg/springframework/messaging/simp/broker/AbstractBrokerMessageHandler;
-#userDestinationMessageHandler()Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler;
-#userRegistryMessageHandler()Lorg/springframework/messaging/MessageHandler;
-#brokerMessagingTemplate()Lorg/springframework/messaging/simp/SimpMessagingTemplate;
-#userDestinationResolver()Lorg/springframework/messaging/simp/user/UserDestinationResolver;
-#userRegistry()Lorg/springframework/messaging/simp/user/SimpUserRegistry;

+###org/springframework/messaging/simp/config/MessageBrokerRegistry
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;)V
+#enableSimpleBroker([Ljava/lang/String;)Lorg/springframework/messaging/simp/config/SimpleBrokerRegistration;
+#enableStompBrokerRelay([Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setApplicationDestinationPrefixes([Ljava/lang/String;)Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
+#setUserDestinationPrefix(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
+#configureBrokerChannel()Lorg/springframework/messaging/simp/config/ChannelRegistration;
@4.1.0.RELEASE
+#setPathMatcher(Lorg/springframework/util/PathMatcher;)Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
@4.3.2.RELEASE
+#setCacheLimit(I)Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
@5.1.0.RELEASE
+#setUserRegistryOrder(I)V
+#setPreservePublishOrder(Z)Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;

+###org/springframework/messaging/simp/config/AbstractBrokerRegistration
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;[Ljava/lang/String;)V

+###org/springframework/messaging/simp/config/TaskExecutorRegistration
@4.0.0.RELEASE
+#<init>()V
+#corePoolSize(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
+#maxPoolSize(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
+#keepAliveSeconds(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
+#queueCapacity(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
@4.1.1.RELEASE
+#<init>(Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;)V

+###org/springframework/messaging/simp/config/StompBrokerRelayRegistration
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;[Ljava/lang/String;)V
+#setRelayHost(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setRelayPort(I)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setApplicationLogin(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setApplicationPasscode(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setSystemHeartbeatSendInterval(J)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setSystemHeartbeatReceiveInterval(J)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setAutoStartup(Z)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
@4.0.1.RELEASE
+#setClientLogin(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setClientPasscode(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setSystemLogin(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setSystemPasscode(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
-#setApplicationLogin(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
-#setApplicationPasscode(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
@4.0.2.RELEASE
+#setVirtualHost(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
@4.2.0.RELEASE
+#setUserDestinationBroadcast(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setUserRegistryBroadcast(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
@4.3.15.RELEASE
+#setTcpClient(Lorg/springframework/messaging/tcp/TcpOperations;)V
@5.0.0.RELEASE
-#setTcpClient(Lorg/springframework/messaging/tcp/TcpOperations;)V
@5.0.5.RELEASE
+#setTcpClient(Lorg/springframework/messaging/tcp/TcpOperations;)V
@5.3.0
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
@5.3.1
+#setTcpClient(Lorg/springframework/messaging/tcp/TcpOperations;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)Lorg/springframework/messaging/simp/config/StompBrokerRelayRegistration;
-#setTcpClient(Lorg/springframework/messaging/tcp/TcpOperations;)V
-#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V

+###org/springframework/messaging/simp/config/SimpleBrokerRegistration
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;[Ljava/lang/String;)V
@4.2.0.RELEASE
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)Lorg/springframework/messaging/simp/config/SimpleBrokerRegistration;
+#setHeartbeatValue([J)Lorg/springframework/messaging/simp/config/SimpleBrokerRegistration;
@4.3.17.RELEASE
+#setSelectorHeaderName(Ljava/lang/String;)V
@5.0.0.RELEASE
-#setSelectorHeaderName(Ljava/lang/String;)V
@5.0.6.RELEASE
+#setSelectorHeaderName(Ljava/lang/String;)V

+###org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Ljava/util/Collection;)V
+#getClientInboundChannel()Lorg/springframework/messaging/SubscribableChannel;
+#getClientOutboundChannel()Lorg/springframework/messaging/MessageChannel;
+#getBrokerChannel()Lorg/springframework/messaging/SubscribableChannel;
+#setSubscriptionRegistry(Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;)V
+#getSubscriptionRegistry()Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
+#startInternal()V
+#stopInternal()V
@4.1.0.RELEASE
+#setPathMatcher(Lorg/springframework/util/PathMatcher;)V
+#setHeaderInitializer(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
+#getHeaderInitializer()Lorg/springframework/messaging/support/MessageHeaderInitializer;
+#toString()Ljava/lang/String;
@4.1.1.RELEASE
-#getClientInboundChannel()Lorg/springframework/messaging/SubscribableChannel;
-#getClientOutboundChannel()Lorg/springframework/messaging/MessageChannel;
-#getBrokerChannel()Lorg/springframework/messaging/SubscribableChannel;
@4.2.0.RELEASE
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#getTaskScheduler()Lorg/springframework/scheduling/TaskScheduler;
+#setHeartbeatValue([J)V
+#getHeartbeatValue()[J
@4.3.2.RELEASE
+#setCacheLimit(Ljava/lang/Integer;)V
@4.3.17.RELEASE
+#setSelectorHeaderName(Ljava/lang/String;)V
@5.0.0.RELEASE
-#setSelectorHeaderName(Ljava/lang/String;)V
@5.0.6.RELEASE
+#setSelectorHeaderName(Ljava/lang/String;)V

+###org/springframework/messaging/simp/broker/SubscriptionRegistry
@4.0.0.RELEASE
+#registerSubscription(Lorg/springframework/messaging/Message;)V
+#unregisterSubscription(Lorg/springframework/messaging/Message;)V
+#unregisterAllSubscriptions(Ljava/lang/String;)V
+#findSubscriptions(Lorg/springframework/messaging/Message;)Lorg/springframework/util/MultiValueMap;

+###org/springframework/messaging/simp/broker/BrokerAvailabilityEvent
@4.0.0.RELEASE
+#<init>(ZLjava/lang/Object;)V
+#isBrokerAvailable()Z
+#toString()Ljava/lang/String;

+###org/springframework/messaging/simp/broker/AbstractSubscriptionRegistry
@4.0.0.RELEASE
+#<init>()V
+#registerSubscription(Lorg/springframework/messaging/Message;)V
+#unregisterSubscription(Lorg/springframework/messaging/Message;)V
+#unregisterAllSubscriptions(Ljava/lang/String;)V
+#findSubscriptions(Lorg/springframework/messaging/Message;)Lorg/springframework/util/MultiValueMap;
@4.3.7.RELEASE
-#unregisterAllSubscriptions(Ljava/lang/String;)V

+###org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
@4.0.0.RELEASE
+#<init>()V
+#setPathMatcher(Lorg/springframework/util/AntPathMatcher;)V
+#getPathMatcher()Lorg/springframework/util/AntPathMatcher;
+#unregisterAllSubscriptions(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@4.0.4.RELEASE
+#setCacheLimit(I)V
+#getCacheLimit()I
+#setPathMatcher(Lorg/springframework/util/PathMatcher;)V
+#getPathMatcher()Lorg/springframework/util/PathMatcher;
-#setPathMatcher(Lorg/springframework/util/AntPathMatcher;)V
-#getPathMatcher()Lorg/springframework/util/AntPathMatcher;
@4.2.0.RELEASE
+#setSelectorHeaderName(Ljava/lang/String;)V
+#getSelectorHeaderName()Ljava/lang/String;
@5.3.0
-#toString()Ljava/lang/String;

+###org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler
@4.0.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#getDestinationPrefixes()Ljava/util/Collection;
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#getApplicationEventPublisher()Lorg/springframework/context/ApplicationEventPublisher;
+#setAutoStartup(Z)V
+#isAutoStartup()Z
+#getPhase()I
+#isRunning()Z
+#start()V
+#stop()V
+#stop(Ljava/lang/Runnable;)V
+#handleMessage(Lorg/springframework/messaging/Message;)V
@4.0.3.RELEASE
+#<init>()V
+#isBrokerAvailable()Z
@4.1.1.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;)V
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Ljava/util/Collection;)V
+#getClientInboundChannel()Lorg/springframework/messaging/SubscribableChannel;
+#getClientOutboundChannel()Lorg/springframework/messaging/MessageChannel;
+#getBrokerChannel()Lorg/springframework/messaging/SubscribableChannel;
-#<init>()V
-#<init>(Ljava/util/Collection;)V
@5.1.0.RELEASE
+#setPreservePublishOrder(Z)V
+#isPreservePublishOrder()Z
-#getPhase()I
@5.3.4
+#setUserDestinationPredicate(Ljava/util/function/Predicate;)V

+###org/springframework/messaging/simp/broker/OrderedMessageChannelDecorator
@5.3.0
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/apache/commons/logging/Log;)V
+#send(Lorg/springframework/messaging/Message;)Z
+#send(Lorg/springframework/messaging/Message;J)Z
+#getNextMessageTask(Lorg/springframework/messaging/Message;)Ljava/lang/Runnable;
+#configureInterceptor(Lorg/springframework/messaging/MessageChannel;Z)V

+###org/springframework/messaging/simp/SimpLogging
@5.1.0.RELEASE
+#<init>()V
+#forLogName(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
+#forLog(Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;

+###org/springframework/messaging/rsocket/RSocketStrategies$Builder
@5.2.0.RELEASE
+#encoder([Lorg/springframework/core/codec/Encoder;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#encoders(Ljava/util/function/Consumer;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#decoder([Lorg/springframework/core/codec/Decoder;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#decoders(Ljava/util/function/Consumer;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#routeMatcher(Lorg/springframework/util/RouteMatcher;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#reactiveAdapterStrategy(Lorg/springframework/core/ReactiveAdapterRegistry;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#dataBufferFactory(Lorg/springframework/core/io/buffer/DataBufferFactory;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#metadataExtractor(Lorg/springframework/messaging/rsocket/MetadataExtractor;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#metadataExtractorRegistry(Ljava/util/function/Consumer;)Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#build()Lorg/springframework/messaging/rsocket/RSocketStrategies;

+###org/springframework/messaging/rsocket/MetadataExtractorRegistry
@5.2.0.RELEASE
+#metadataToExtract(Lorg/springframework/util/MimeType;Ljava/lang/Class;Ljava/lang/String;)V
+#metadataToExtract(Lorg/springframework/util/MimeType;Lorg/springframework/core/ParameterizedTypeReference;Ljava/lang/String;)V
+#metadataToExtract(Lorg/springframework/util/MimeType;Ljava/lang/Class;Ljava/util/function/BiConsumer;)V
+#metadataToExtract(Lorg/springframework/util/MimeType;Lorg/springframework/core/ParameterizedTypeReference;Ljava/util/function/BiConsumer;)V

+###org/springframework/messaging/rsocket/RSocketRequester$MetadataSpec
@5.2.0.RELEASE
+#metadata(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Lorg/springframework/messaging/rsocket/RSocketRequester$MetadataSpec;

+###org/springframework/messaging/rsocket/annotation/support/RSocketMessageHandler
@5.2.0.RELEASE
+#<init>()V
+#setEncoders(Ljava/util/List;)V
+#getEncoders()Ljava/util/List;
+#setDecoders(Ljava/util/List;)V
+#setRouteMatcher(Lorg/springframework/util/RouteMatcher;)V
+#setReactiveAdapterRegistry(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#setMetadataExtractor(Lorg/springframework/messaging/rsocket/MetadataExtractor;)V
+#getMetadataExtractor()Lorg/springframework/messaging/rsocket/MetadataExtractor;
+#setRSocketStrategies(Lorg/springframework/messaging/rsocket/RSocketStrategies;)V
+#getRSocketStrategies()Lorg/springframework/messaging/rsocket/RSocketStrategies;
+#setDefaultDataMimeType(Lorg/springframework/util/MimeType;)V
+#getDefaultDataMimeType()Lorg/springframework/util/MimeType;
+#setDefaultMetadataMimeType(Lorg/springframework/util/MimeType;)V
+#getDefaultMetadataMimeType()Lorg/springframework/util/MimeType;
+#afterPropertiesSet()V
+#responder()Lio/rsocket/SocketAcceptor;
+#clientResponder(Lorg/springframework/messaging/rsocket/RSocketStrategies;[Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/ClientRSocketFactoryConfigurer;
@5.2.6.RELEASE
+#responder(Lorg/springframework/messaging/rsocket/RSocketStrategies;[Ljava/lang/Object;)Lio/rsocket/SocketAcceptor;
*#clientResponder(Lorg/springframework/messaging/rsocket/RSocketStrategies;[Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/ClientRSocketFactoryConfigurer;[deprecated]
@5.3.0
-#clientResponder(Lorg/springframework/messaging/rsocket/RSocketStrategies;[Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/ClientRSocketFactoryConfigurer;[deprecated]

+###org/springframework/messaging/rsocket/annotation/support/RSocketPayloadReturnValueHandler
@5.2.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/core/ReactiveAdapterRegistry;)V

+###org/springframework/messaging/rsocket/annotation/support/RSocketRequesterMethodArgumentResolver
@5.2.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/rsocket/annotation/support/RSocketFrameTypeMessageCondition
@5.2.0.RELEASE
+#<init>([Lio/rsocket/frame/FrameType;)V
+#<init>(Ljava/util/Collection;)V
+#getFrameTypes()Ljava/util/Set;
+#getFrameType(Lorg/springframework/messaging/Message;)Lio/rsocket/frame/FrameType;
+#combine(Lorg/springframework/messaging/rsocket/annotation/support/RSocketFrameTypeMessageCondition;)Lorg/springframework/messaging/rsocket/annotation/support/RSocketFrameTypeMessageCondition;
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/rsocket/annotation/support/RSocketFrameTypeMessageCondition;
+#compareTo(Lorg/springframework/messaging/rsocket/annotation/support/RSocketFrameTypeMessageCondition;Lorg/springframework/messaging/Message;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/messaging/Message;)I
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;
@5.2.2.RELEASE
+#getCondition(II)Lorg/springframework/messaging/rsocket/annotation/support/RSocketFrameTypeMessageCondition;

+###org/springframework/messaging/rsocket/annotation/ConnectMapping
@5.2.0.RELEASE
+#value()[Ljava/lang/String;

+###org/springframework/messaging/rsocket/RSocketRequester
@5.2.0.RELEASE
+#rsocket()Lio/rsocket/RSocket;
+#dataMimeType()Lorg/springframework/util/MimeType;
+#metadataMimeType()Lorg/springframework/util/MimeType;
+#route(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#metadata(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#builder()Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#wrap(Lio/rsocket/RSocket;Lorg/springframework/util/MimeType;Lorg/springframework/util/MimeType;Lorg/springframework/messaging/rsocket/RSocketStrategies;)Lorg/springframework/messaging/rsocket/RSocketRequester;
@5.3.0
+#rsocketClient()Lio/rsocket/core/RSocketClient;
@5.3.7
+#dispose()V
+#isDisposed()Z
@6.0.0
+#strategies()Lorg/springframework/messaging/rsocket/RSocketStrategies;

+###org/springframework/messaging/rsocket/PayloadUtils
@5.2.0.RELEASE
+#<init>()V
+#retainDataAndReleasePayload(Lio/rsocket/Payload;Lorg/springframework/core/io/buffer/DataBufferFactory;)Lorg/springframework/core/io/buffer/DataBuffer;
+#createPayload(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/io/buffer/DataBuffer;)Lio/rsocket/Payload;
+#createPayload(Lorg/springframework/core/io/buffer/DataBuffer;)Lio/rsocket/Payload;

+###org/springframework/messaging/rsocket/RSocketRequester$Builder
@5.2.0.RELEASE
+#dataMimeType(Lorg/springframework/util/MimeType;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#metadataMimeType(Lorg/springframework/util/MimeType;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#setupData(Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#setupRoute(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#setupMetadata(Ljava/lang/Object;Lorg/springframework/util/MimeType;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#rsocketStrategies(Lorg/springframework/messaging/rsocket/RSocketStrategies;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#rsocketStrategies(Ljava/util/function/Consumer;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#rsocketFactory(Lorg/springframework/messaging/rsocket/ClientRSocketFactoryConfigurer;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#apply(Ljava/util/function/Consumer;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
+#connectTcp(Ljava/lang/String;I)Lreactor/core/publisher/Mono;
+#connectWebSocket(Ljava/net/URI;)Lreactor/core/publisher/Mono;
+#connect(Lio/rsocket/transport/ClientTransport;)Lreactor/core/publisher/Mono;
@5.2.6.RELEASE
+#rsocketConnector(Lorg/springframework/messaging/rsocket/RSocketConnectorConfigurer;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;
*#rsocketFactory(Lorg/springframework/messaging/rsocket/ClientRSocketFactoryConfigurer;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;[deprecated]
@5.3.0
+#tcp(Ljava/lang/String;I)Lorg/springframework/messaging/rsocket/RSocketRequester;
+#websocket(Ljava/net/URI;)Lorg/springframework/messaging/rsocket/RSocketRequester;
+#transport(Lio/rsocket/transport/ClientTransport;)Lorg/springframework/messaging/rsocket/RSocketRequester;
+#transports(Lorg/reactivestreams/Publisher;Lio/rsocket/loadbalance/LoadbalanceStrategy;)Lorg/springframework/messaging/rsocket/RSocketRequester;
*#connectTcp(Ljava/lang/String;I)Lreactor/core/publisher/Mono;[deprecated]
*#connectWebSocket(Ljava/net/URI;)Lreactor/core/publisher/Mono;[deprecated]
*#connect(Lio/rsocket/transport/ClientTransport;)Lreactor/core/publisher/Mono;[deprecated]
-#rsocketFactory(Lorg/springframework/messaging/rsocket/ClientRSocketFactoryConfigurer;)Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;[deprecated]

+###org/springframework/messaging/rsocket/RSocketStrategies
@5.2.0.RELEASE
+#encoders()Ljava/util/List;
+#encoder(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Lorg/springframework/core/codec/Encoder;
+#decoders()Ljava/util/List;
+#decoder(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Lorg/springframework/core/codec/Decoder;
+#routeMatcher()Lorg/springframework/util/RouteMatcher;
+#reactiveAdapterRegistry()Lorg/springframework/core/ReactiveAdapterRegistry;
+#dataBufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#metadataExtractor()Lorg/springframework/messaging/rsocket/MetadataExtractor;
+#mutate()Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;
+#create()Lorg/springframework/messaging/rsocket/RSocketStrategies;
+#builder()Lorg/springframework/messaging/rsocket/RSocketStrategies$Builder;

+###org/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec
@5.2.2.RELEASE
+#send()Lreactor/core/publisher/Mono;
+#retrieveMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#retrieveMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#retrieveFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#retrieveFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;

+###org/springframework/messaging/rsocket/RSocketRequester$RequestSpec
@5.2.0.RELEASE
+#metadata(Ljava/util/function/Consumer;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#data(Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#data(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#data(Ljava/lang/Object;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#send()Lreactor/core/publisher/Mono;
+#retrieveMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#retrieveMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#retrieveFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#retrieveFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
@5.2.2.RELEASE
+#data(Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;
+#data(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;
+#data(Ljava/lang/Object;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;
-#data(Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
-#data(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
-#data(Ljava/lang/Object;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
-#send()Lreactor/core/publisher/Mono;
-#retrieveMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#retrieveMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
-#retrieveFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
-#retrieveFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
@5.3.0
+#sendMetadata()Lreactor/core/publisher/Mono;

+###org/springframework/messaging/rsocket/RSocketConnectorConfigurer
@5.2.6.RELEASE
+#configure(Lio/rsocket/core/RSocketConnector;)V

+###org/springframework/messaging/rsocket/DefaultMetadataExtractor
@5.2.0.RELEASE
+#<init>([Lorg/springframework/core/codec/Decoder;)V
+#<init>(Ljava/util/List;)V
+#getDecoders()Ljava/util/List;
+#metadataToExtract(Lorg/springframework/util/MimeType;Ljava/lang/Class;Ljava/util/function/BiConsumer;)V
+#metadataToExtract(Lorg/springframework/util/MimeType;Lorg/springframework/core/ParameterizedTypeReference;Ljava/util/function/BiConsumer;)V
+#extract(Lio/rsocket/Payload;Lorg/springframework/util/MimeType;)Ljava/util/Map;

+###org/springframework/messaging/rsocket/MetadataExtractor
@5.2.0.RELEASE
+#extract(Lio/rsocket/Payload;Lorg/springframework/util/MimeType;)Ljava/util/Map;

+###org/springframework/messaging/converter/CompositeMessageConverter
@4.0.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#<init>(Ljava/util/Collection;Lorg/springframework/messaging/converter/ContentTypeResolver;)V
+#setContentTypeResolver(Lorg/springframework/messaging/converter/ContentTypeResolver;)V
+#getContentTypeResolver()Lorg/springframework/messaging/converter/ContentTypeResolver;
+#getConverters()Ljava/util/Collection;
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
@4.0.2.RELEASE
+#toString()Ljava/lang/String;
@4.0.3.RELEASE
+#getConverters()Ljava/util/List;
-#<init>(Ljava/util/Collection;Lorg/springframework/messaging/converter/ContentTypeResolver;)V
-#setContentTypeResolver(Lorg/springframework/messaging/converter/ContentTypeResolver;)V
-#getContentTypeResolver()Lorg/springframework/messaging/converter/ContentTypeResolver;
-#getConverters()Ljava/util/Collection;
@4.2.1.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)Lorg/springframework/messaging/Message;

+###org/springframework/messaging/converter/AbstractMessageConverter
@4.0.0.RELEASE
+#getSupportedMimeTypes()Ljava/util/List;
+#setContentTypeResolver(Lorg/springframework/messaging/converter/ContentTypeResolver;)V
+#getContentTypeResolver()Lorg/springframework/messaging/converter/ContentTypeResolver;
+#setSerializedPayloadClass(Ljava/lang/Class;)V
+#getSerializedPayloadClass()Ljava/lang/Class;
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
+#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;
@4.0.3.RELEASE
+#setStrictContentTypeMatch(Z)V
+#isStrictContentTypeMatch()Z
@4.2.0.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
*#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;[deprecated]
*#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;[deprecated]
@5.0.0.RELEASE
-#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;[deprecated]
-#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;[deprecated]

+###org/springframework/messaging/converter/MessageConverter
@4.0.0.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;

+###org/springframework/messaging/converter/GsonMessageConverter
@5.3.0
+#<init>()V
+#<init>(Lcom/google/gson/Gson;)V
+#setGson(Lcom/google/gson/Gson;)V
+#getGson()Lcom/google/gson/Gson;

+###org/springframework/messaging/converter/MappingJackson2MessageConverter
@4.0.0.RELEASE
+#<init>()V
+#setPrettyPrint(Z)V
+#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;
@4.0.1.RELEASE
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#getObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
@4.1.5.RELEASE
+#<init>([Lorg/springframework/util/MimeType;)V
@4.2.0.RELEASE
-#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
-#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;

+###org/springframework/messaging/converter/MessageConversionException
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.4.RELEASE
+#<init>(Ljava/lang/String;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V

+###org/springframework/messaging/converter/ContentTypeResolver
@4.0.0.RELEASE
+#resolve(Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/util/MimeType;

+###org/springframework/messaging/converter/MarshallingMessageConverter
@4.2.0.RELEASE
+#<init>()V
+#<init>([Lorg/springframework/util/MimeType;)V
+#<init>(Lorg/springframework/oxm/Marshaller;)V
+#setMarshaller(Lorg/springframework/oxm/Marshaller;)V
+#getMarshaller()Lorg/springframework/oxm/Marshaller;
+#setUnmarshaller(Lorg/springframework/oxm/Unmarshaller;)V
+#getUnmarshaller()Lorg/springframework/oxm/Unmarshaller;

+###org/springframework/messaging/converter/GenericMessageConverter
@4.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/convert/ConversionService;)V
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/messaging/converter/SimpleMessageConverter
@4.0.0.RELEASE
+#<init>()V
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;

+###org/springframework/messaging/converter/DefaultContentTypeResolver
@4.0.0.RELEASE
+#<init>()V
+#setDefaultMimeType(Lorg/springframework/util/MimeType;)V
+#getDefaultMimeType()Lorg/springframework/util/MimeType;
+#resolve(Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/util/MimeType;
@4.0.2.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/messaging/converter/SmartMessageConverter
@4.2.1.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)Lorg/springframework/messaging/Message;

+###org/springframework/messaging/converter/ByteArrayMessageConverter
@4.0.0.RELEASE
+#<init>()V
+#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;
@4.2.0.RELEASE
-#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
-#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;

+###org/springframework/messaging/converter/JsonbMessageConverter
@5.3.0
+#<init>()V
+#<init>(Ljavax/json/bind/JsonbConfig;)V
+#<init>(Ljavax/json/bind/Jsonb;)V
+#setJsonb(Ljavax/json/bind/Jsonb;)V
+#getJsonb()Ljavax/json/bind/Jsonb;
@6.0.0
+#<init>(Ljakarta/json/bind/JsonbConfig;)V
+#<init>(Ljakarta/json/bind/Jsonb;)V
+#setJsonb(Ljakarta/json/bind/Jsonb;)V
+#getJsonb()Ljakarta/json/bind/Jsonb;
-#<init>(Ljavax/json/bind/JsonbConfig;)V
-#<init>(Ljavax/json/bind/Jsonb;)V
-#setJsonb(Ljavax/json/bind/Jsonb;)V
-#getJsonb()Ljavax/json/bind/Jsonb;

+###org/springframework/messaging/converter/KotlinSerializationJsonMessageConverter
@5.3.0
+#<init>()V
+#<init>(Lkotlinx/serialization/json/Json;)V

+###org/springframework/messaging/converter/ProtobufJsonFormatMessageConverter
@5.2.2.RELEASE
+#<init>(Lcom/google/protobuf/ExtensionRegistry;)V
+#<init>(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;)V
+#<init>(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;Lcom/google/protobuf/ExtensionRegistry;)V

+###org/springframework/messaging/converter/AbstractJsonMessageConverter
@5.3.0

+###org/springframework/messaging/converter/ProtobufMessageConverter
@5.2.2.RELEASE
+#<init>()V
+#<init>(Lcom/google/protobuf/ExtensionRegistry;)V

+###org/springframework/messaging/converter/StringMessageConverter
@4.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/nio/charset/Charset;)V
+#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;
@4.2.0.RELEASE
-#convertFromInternal(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
-#convertToInternal(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;

+###org/springframework/messaging/MessageDeliveryException
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/messaging/MessageHandler
@4.0.0.RELEASE
+#handleMessage(Lorg/springframework/messaging/Message;)V

+###org/springframework/messaging/handler/MessageCondition
@4.0.0.RELEASE
+#combine(Ljava/lang/Object;)Ljava/lang/Object;
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;Lorg/springframework/messaging/Message;)I

+###org/springframework/messaging/handler/AbstractMessageCondition
@4.0.0.RELEASE
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/messaging/handler/annotation/Headers
@4.0.0.RELEASE

+###org/springframework/messaging/handler/annotation/DestinationVariable
@4.0.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/messaging/handler/annotation/Payload
@4.0.0.RELEASE
+#value()Ljava/lang/String;
+#required()Z
@4.2.0.RELEASE
+#expression()Ljava/lang/String;

+###org/springframework/messaging/handler/annotation/Header
@4.0.0.RELEASE
+#value()Ljava/lang/String;
+#required()Z
+#defaultValue()Ljava/lang/String;
@4.2.0.RELEASE
+#name()Ljava/lang/String;

+###org/springframework/messaging/handler/annotation/SendTo
@4.0.0.RELEASE
+#value()[Ljava/lang/String;

+###org/springframework/messaging/handler/annotation/ValueConstants
@4.0.0.RELEASE

+###org/springframework/messaging/handler/annotation/MessageMapping
@4.0.0.RELEASE
+#value()[Ljava/lang/String;

+###org/springframework/messaging/handler/annotation/MessageExceptionHandler
@4.0.0.RELEASE
+#value()[Ljava/lang/Class;

+###org/springframework/messaging/handler/annotation/support/DestinationVariableMethodArgumentResolver
@4.0.0.RELEASE
+#<init>(Lorg/springframework/core/convert/ConversionService;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/messaging/handler/annotation/support/PayloadMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;Lorg/springframework/validation/Validator;)V
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;Lorg/springframework/validation/Validator;Z)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/messaging/handler/annotation/support/MethodArgumentNotValidException
@4.0.1.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Lorg/springframework/core/MethodParameter;Lorg/springframework/validation/BindingResult;)V
+#getMessage()Ljava/lang/String;
@4.0.3.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Lorg/springframework/core/MethodParameter;)V
+#getBindingResult()Lorg/springframework/validation/BindingResult;
-#getMessage()Ljava/lang/String;

+###org/springframework/messaging/handler/annotation/support/AbstractNamedValueMethodArgumentResolver$NamedValueInfo
@4.0.0.RELEASE

+###org/springframework/messaging/handler/annotation/support/HeaderMethodArgumentResolver
@4.0.0.RELEASE
+#<init>(Lorg/springframework/core/convert/ConversionService;Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/messaging/handler/annotation/support/AbstractNamedValueMethodArgumentResolver
@4.0.0.RELEASE
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/messaging/handler/annotation/support/DefaultMessageHandlerMethodFactory
@4.1.0.RELEASE
+#<init>()V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setMessageConverter(Lorg/springframework/messaging/converter/MessageConverter;)V
+#setValidator(Lorg/springframework/validation/Validator;)V
+#setCustomArgumentResolvers(Ljava/util/List;)V
+#setArgumentResolvers(Ljava/util/List;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#createInvocableHandlerMethod(Ljava/lang/Object;Ljava/lang/reflect/Method;)Lorg/springframework/messaging/handler/invocation/InvocableHandlerMethod;

+###org/springframework/messaging/handler/annotation/support/MessageHandlerMethodFactory
@4.1.0.RELEASE
+#createInvocableHandlerMethod(Ljava/lang/Object;Ljava/lang/reflect/Method;)Lorg/springframework/messaging/handler/invocation/InvocableHandlerMethod;

+###org/springframework/messaging/handler/annotation/support/HeadersMethodArgumentResolver
@4.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/messaging/handler/annotation/support/MethodArgumentTypeMismatchException
@4.0.3.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Lorg/springframework/core/MethodParameter;Ljava/lang/String;)V

+###org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;
@4.0.1.RELEASE
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;Lorg/springframework/validation/Validator;)V
-#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
@4.0.9.RELEASE
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
@4.1.0.RELEASE
-#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
@4.1.4.RELEASE
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
@4.3.5.RELEASE
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;Lorg/springframework/validation/Validator;Z)V
@5.2.0.RELEASE
-#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
-#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;
@6.0.0
-###org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver

+###org/springframework/messaging/handler/annotation/support/MessageMethodArgumentResolver
@4.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;
@4.3.0.RELEASE
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
-#<init>()V
@4.3.3.RELEASE
+#<init>()V

+###org/springframework/messaging/handler/annotation/support/AnnotationExceptionHandlerMethodResolver
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V

+###org/springframework/messaging/handler/annotation/reactive/ContinuationHandlerMethodArgumentResolver
@5.2.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/handler/annotation/reactive/DestinationVariableMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/convert/ConversionService;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/messaging/handler/annotation/reactive/PayloadMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/validation/Validator;Lorg/springframework/core/ReactiveAdapterRegistry;Z)V
+#getDecoders()Ljava/util/List;
+#getValidator()Lorg/springframework/validation/Validator;
+#getAdapterRegistry()Lorg/springframework/core/ReactiveAdapterRegistry;
+#isUseDefaultResolution()Z
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/handler/annotation/reactive/AbstractNamedValueMethodArgumentResolver$NamedValueInfo
@5.2.0.RELEASE

+###org/springframework/messaging/handler/annotation/reactive/HeaderMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/convert/ConversionService;Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/messaging/handler/annotation/reactive/AbstractNamedValueMethodArgumentResolver
@5.2.0.RELEASE
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/messaging/handler/annotation/reactive/HeadersMethodArgumentResolver
@5.2.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/messaging/handler/annotation/reactive/MessageMappingMessageHandler
@5.2.0.RELEASE
+#<init>()V
+#setDecoders(Ljava/util/List;)V
+#getDecoders()Ljava/util/List;
+#setValidator(Lorg/springframework/validation/Validator;)V
+#getValidator()Lorg/springframework/validation/Validator;
+#setRouteMatcher(Lorg/springframework/util/RouteMatcher;)V
+#getRouteMatcher()Lorg/springframework/util/RouteMatcher;
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#getConversionService()Lorg/springframework/core/convert/ConversionService;
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V
+#afterPropertiesSet()V
@5.3.5
+#registerMessagingAdvice(Lorg/springframework/messaging/handler/MessagingAdviceBean;)V

+###org/springframework/messaging/handler/HandlerMethod
@4.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;)V
+#getBean()Ljava/lang/Object;
+#getMethod()Ljava/lang/reflect/Method;
+#getBeanType()Ljava/lang/Class;
+#getMethodParameters()[Lorg/springframework/core/MethodParameter;
+#getReturnType()Lorg/springframework/core/MethodParameter;
+#getReturnValueType(Ljava/lang/Object;)Lorg/springframework/core/MethodParameter;
+#isVoid()Z
+#getMethodAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#createWithResolvedBean()Lorg/springframework/messaging/handler/HandlerMethod;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.1.0.RELEASE
+#getShortLogMessage()Ljava/lang/String;
@4.3.0.RELEASE
+#getResolvedFromHandlerMethod()Lorg/springframework/messaging/handler/HandlerMethod;
+#hasMethodAnnotation(Ljava/lang/Class;)Z
@5.1.0.RELEASE
+#setLogger(Lorg/apache/commons/logging/Log;)V
+#getLogger()Lorg/apache/commons/logging/Log;

+###org/springframework/messaging/handler/DestinationPatternsMessageCondition
@4.0.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;Lorg/springframework/util/PathMatcher;)V
+#getPatterns()Ljava/util/Set;
+#combine(Lorg/springframework/messaging/handler/DestinationPatternsMessageCondition;)Lorg/springframework/messaging/handler/DestinationPatternsMessageCondition;
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/handler/DestinationPatternsMessageCondition;
+#compareTo(Lorg/springframework/messaging/handler/DestinationPatternsMessageCondition;Lorg/springframework/messaging/Message;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/messaging/Message;)I
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;
@5.2.0.RELEASE
+#<init>([Ljava/lang/String;Lorg/springframework/util/RouteMatcher;)V

+###org/springframework/messaging/handler/HandlerMethod$HandlerMethodParameter
@4.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/handler/HandlerMethod;I)V
+#getContainingClass()Ljava/lang/Class;
+#getMethodAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
@4.3.0.RELEASE
+#hasMethodAnnotation(Ljava/lang/Class;)Z
+#clone()Lorg/springframework/messaging/handler/HandlerMethod$HandlerMethodParameter;
+#clone()Lorg/springframework/core/annotation/SynthesizingMethodParameter;
+#clone()Lorg/springframework/core/MethodParameter;
+#clone()Ljava/lang/Object;

+###org/springframework/messaging/handler/MessagingAdviceBean
@4.2.0.RELEASE
+#getBeanType()Ljava/lang/Class;
+#resolveBean()Ljava/lang/Object;
+#isApplicableToBeanType(Ljava/lang/Class;)Z

+###org/springframework/messaging/handler/CompositeMessageCondition
@5.2.0.RELEASE
+#<init>([Lorg/springframework/messaging/handler/MessageCondition;)V
+#getMessageConditions()Ljava/util/List;
+#getCondition(Ljava/lang/Class;)Lorg/springframework/messaging/handler/MessageCondition;
+#combine(Lorg/springframework/messaging/handler/CompositeMessageCondition;)Lorg/springframework/messaging/handler/CompositeMessageCondition;
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/handler/CompositeMessageCondition;
+#compareTo(Lorg/springframework/messaging/handler/CompositeMessageCondition;Lorg/springframework/messaging/Message;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;Lorg/springframework/messaging/Message;)I
+#getMatchingCondition(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/messaging/handler/invocation/ReactiveReturnValueHandler
@5.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#isAsyncReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Z
+#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
+#toCompletableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Ljava/util/concurrent/CompletableFuture;
-#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;

+###org/springframework/messaging/handler/invocation/AsyncHandlerMethodReturnValueHandler
@4.2.0.RELEASE
+#isAsyncReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Z
+#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
*#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
+#toCompletableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Ljava/util/concurrent/CompletableFuture;

+###org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler
@4.0.0.RELEASE
+#<init>()V
+#setDestinationPrefixes(Ljava/util/Collection;)V
+#getDestinationPrefixes()Ljava/util/Collection;
+#setCustomArgumentResolvers(Ljava/util/List;)V
+#getCustomArgumentResolvers()Ljava/util/List;
+#setCustomReturnValueHandlers(Ljava/util/List;)V
+#getCustomReturnValueHandlers()Ljava/util/List;
+#setArgumentResolvers(Ljava/util/List;)V
+#getArgumentResolvers()Ljava/util/List;
+#setReturnValueHandlers(Ljava/util/List;)V
+#getReturnValueHandlers()Ljava/util/List;
+#getHandlerMethods()Ljava/util/Map;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#afterPropertiesSet()V
+#handleMessage(Lorg/springframework/messaging/Message;)V
@4.1.0.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/messaging/handler/invocation/AbstractExceptionHandlerMethodResolver
@4.0.0.RELEASE
+#hasExceptionMappings()Z
+#resolveMethod(Ljava/lang/Exception;)Ljava/lang/reflect/Method;
@4.3.1.RELEASE
+#resolveMethodByExceptionType(Ljava/lang/Class;)Ljava/lang/reflect/Method;
@5.2.0.RELEASE
+#resolveMethod(Ljava/lang/Throwable;)Ljava/lang/reflect/Method;
-#resolveMethod(Ljava/lang/Exception;)Ljava/lang/reflect/Method;

+###org/springframework/messaging/handler/invocation/InvocableHandlerMethod
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/handler/HandlerMethod;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;)V
+#setMessageMethodArgumentResolvers(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolverComposite;)V
+#setParameterNameDiscoverer(Lorg/springframework/core/ParameterNameDiscoverer;)V
+#invoke(Lorg/springframework/messaging/Message;[Ljava/lang/Object;)Ljava/lang/Object;
@4.1.0.RELEASE
+#setMessageMethodArgumentResolvers(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver;)V
-#setMessageMethodArgumentResolvers(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolverComposite;)V
@4.3.0.RELEASE
+#setMessageMethodArgumentResolvers(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolverComposite;)V
-#setMessageMethodArgumentResolvers(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver;)V

+###org/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver
@4.0.0.RELEASE
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandlerComposite
@4.0.0.RELEASE
+#<init>()V
+#getReturnValueHandlers()Ljava/util/List;
+#clear()V
+#addHandler(Lorg/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandler;)Lorg/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandlerComposite;
+#addHandlers(Ljava/util/List;)Lorg/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandlerComposite;
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)V
@4.2.0.RELEASE
+#isAsyncReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Z
+#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;
@5.1.0.RELEASE
+#setLogger(Lorg/apache/commons/logging/Log;)V
+#getLogger()Lorg/apache/commons/logging/Log;
@6.0.0
+#toCompletableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Ljava/util/concurrent/CompletableFuture;
-#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;

+###org/springframework/messaging/handler/invocation/CompletableFutureReturnValueHandler
@4.2.0.RELEASE
+#<init>()V
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
+#toCompletableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Ljava/util/concurrent/CompletableFuture;
-#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;

+###org/springframework/messaging/handler/invocation/ListenableFutureReturnValueHandler
@4.2.0.RELEASE
+#<init>()V
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#toListenableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
+#toCompletableFuture(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Ljava/util/concurrent/CompletableFuture;

+###org/springframework/messaging/handler/invocation/AbstractAsyncReturnValueHandler
@4.2.0.RELEASE
+#<init>()V
+#isAsyncReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)V

+###org/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandler
@4.0.0.RELEASE
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)V

+###org/springframework/messaging/handler/invocation/MethodArgumentResolutionException
@4.3.6.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Lorg/springframework/core/MethodParameter;)V
+#<init>(Lorg/springframework/messaging/Message;Lorg/springframework/core/MethodParameter;Ljava/lang/String;)V
+#getMethodParameter()Lorg/springframework/core/MethodParameter;
@5.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Lorg/springframework/core/MethodParameter;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/messaging/handler/invocation/reactive/AbstractMethodMessageHandler
@5.2.0.RELEASE
+#<init>()V
+#setHandlerPredicate(Ljava/util/function/Predicate;)V
+#getHandlerPredicate()Ljava/util/function/Predicate;
+#setHandlers(Ljava/util/List;)V
+#setArgumentResolverConfigurer(Lorg/springframework/messaging/handler/invocation/reactive/ArgumentResolverConfigurer;)V
+#getArgumentResolverConfigurer()Lorg/springframework/messaging/handler/invocation/reactive/ArgumentResolverConfigurer;
+#setReturnValueHandlerConfigurer(Lorg/springframework/messaging/handler/invocation/reactive/ReturnValueHandlerConfigurer;)V
+#getReturnValueHandlerConfigurer()Lorg/springframework/messaging/handler/invocation/reactive/ReturnValueHandlerConfigurer;
+#setReactiveAdapterRegistry(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#getReactiveAdapterRegistry()Lorg/springframework/core/ReactiveAdapterRegistry;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#setBeanName(Ljava/lang/String;)V
+#getBeanName()Ljava/lang/String;
+#getHandlerMethods()Ljava/util/Map;
+#getDestinationLookup()Lorg/springframework/util/MultiValueMap;
+#afterPropertiesSet()V
+#handleMessage(Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;
@5.3.0
+#registerHandlerMethod(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Object;)V

+###org/springframework/messaging/handler/invocation/reactive/SyncHandlerMethodArgumentResolver
@5.2.0.RELEASE
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/messaging/handler/invocation/reactive/InvocableHandlerMethod
@5.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/handler/HandlerMethod;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#setArgumentResolvers(Ljava/util/List;)V
+#getResolvers()Ljava/util/List;
+#setParameterNameDiscoverer(Lorg/springframework/core/ParameterNameDiscoverer;)V
+#getParameterNameDiscoverer()Lorg/springframework/core/ParameterNameDiscoverer;
+#setReactiveAdapterRegistry(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#invoke(Lorg/springframework/messaging/Message;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolver
@5.2.0.RELEASE
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/handler/invocation/reactive/ReturnValueHandlerConfigurer
@5.2.0.RELEASE
+#<init>()V
+#addCustomHandler([Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodReturnValueHandler;)V
+#getCustomHandlers()Ljava/util/List;

+###org/springframework/messaging/handler/invocation/reactive/AbstractEncoderMethodReturnValueHandler
@5.2.0.RELEASE
+#getEncoders()Ljava/util/List;
+#getAdapterRegistry()Lorg/springframework/core/ReactiveAdapterRegistry;
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/handler/invocation/reactive/HandlerMethodReturnValueHandlerComposite
@5.2.0.RELEASE
+#<init>()V
+#getReturnValueHandlers()Ljava/util/List;
+#clear()V
+#addHandler(Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodReturnValueHandler;)Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodReturnValueHandlerComposite;
+#addHandlers(Ljava/util/List;)Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodReturnValueHandlerComposite;
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/handler/invocation/reactive/HandlerMethodReturnValueHandler
@5.2.0.RELEASE
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/handler/invocation/reactive/ArgumentResolverConfigurer
@5.2.0.RELEASE
+#<init>()V
+#addCustomResolver([Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolver;)V
+#getCustomResolvers()Ljava/util/List;

+###org/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolverComposite
@5.2.2.RELEASE
+#<init>()V
+#addResolver(Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolver;)Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolverComposite;
+#addResolvers([Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolver;)Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolverComposite;
+#addResolvers(Ljava/util/List;)Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolverComposite;
+#getResolvers()Ljava/util/List;
+#clear()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;
+#getArgumentResolver(Lorg/springframework/core/MethodParameter;)Lorg/springframework/messaging/handler/invocation/reactive/HandlerMethodArgumentResolver;

+###org/springframework/messaging/handler/invocation/HandlerMethodArgumentResolverComposite
@4.0.0.RELEASE
+#<init>()V
+#getResolvers()Ljava/util/List;
+#clear()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;
+#addResolver(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver;)Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolverComposite;
+#addResolvers(Ljava/util/List;)Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolverComposite;
@4.3.0.RELEASE
+#addResolvers([Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver;)Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolverComposite;

+###org/springframework/messaging/ReactiveMessageHandler
@5.2.0.RELEASE
+#handleMessage(Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/messaging/Message
@4.0.0.RELEASE
+#getHeaders()Lorg/springframework/messaging/MessageHeaders;
+#getPayload()Ljava/lang/Object;

+###org/springframework/messaging/MessageHeaders
@4.0.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#getId()Ljava/util/UUID;
+#getTimestamp()Ljava/lang/Long;
+#getReplyChannel()Ljava/lang/Object;
+#getErrorChannel()Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#size()I
+#values()Ljava/util/Collection;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/messaging/core/AbstractDestinationResolvingMessagingTemplate
@4.0.0.RELEASE
+#<init>()V
+#setDestinationResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
+#getDestinationResolver()Lorg/springframework/messaging/core/DestinationResolver;
+#send(Ljava/lang/String;Lorg/springframework/messaging/Message;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#receive(Ljava/lang/String;)Lorg/springframework/messaging/Message;
+#receiveAndConvert(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#sendAndReceive(Ljava/lang/String;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;

+###org/springframework/messaging/core/BeanFactoryMessageChannelDestinationResolver
@4.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#resolveDestination(Ljava/lang/String;)Lorg/springframework/messaging/MessageChannel;
+#resolveDestination(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/messaging/core/AbstractMessagingTemplate
@4.0.0.RELEASE
+#<init>()V
+#receive()Lorg/springframework/messaging/Message;
+#receive(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
+#receiveAndConvert(Ljava/lang/Class;)Ljava/lang/Object;
+#receiveAndConvert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#sendAndReceive(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#sendAndReceive(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
@4.1.0.RELEASE
-#receive()Lorg/springframework/messaging/Message;
-#receive(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
-#receiveAndConvert(Ljava/lang/Class;)Ljava/lang/Object;
-#receiveAndConvert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/messaging/core/AbstractMessageSendingTemplate
@4.0.0.RELEASE
+#<init>()V
+#setDefaultDestination(Ljava/lang/Object;)V
+#getDefaultDestination()Ljava/lang/Object;
+#setMessageConverter(Lorg/springframework/messaging/converter/MessageConverter;)V
+#getMessageConverter()Lorg/springframework/messaging/converter/MessageConverter;
+#send(Lorg/springframework/messaging/Message;)V
+#send(Ljava/lang/Object;Lorg/springframework/messaging/Message;)V
+#convertAndSend(Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/Object;Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;)V
+#convertAndSend(Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#convertAndSend(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#convertAndSend(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V

+###org/springframework/messaging/core/GenericMessagingTemplate
@4.0.0.RELEASE
+#<init>()V
+#setSendTimeout(J)V
+#getSendTimeout()J
+#setReceiveTimeout(J)V
+#getReceiveTimeout()J
+#setThrowExceptionOnLateReply(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.0.0.RELEASE
+#setSendTimeoutHeader(Ljava/lang/String;)V
+#getSendTimeoutHeader()Ljava/lang/String;
+#setReceiveTimeoutHeader(Ljava/lang/String;)V
+#getReceiveTimeoutHeader()Ljava/lang/String;

+###org/springframework/messaging/core/DestinationResolver
@4.0.0.RELEASE
+#resolveDestination(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/messaging/core/AbstractMessageReceivingTemplate
@4.1.0.RELEASE
+#<init>()V
+#receive()Lorg/springframework/messaging/Message;
+#receive(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
+#receiveAndConvert(Ljava/lang/Class;)Ljava/lang/Object;
+#receiveAndConvert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/messaging/core/DestinationResolvingMessageRequestReplyOperations
@4.0.0.RELEASE
+#sendAndReceive(Ljava/lang/String;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;

+###org/springframework/messaging/core/MessageRequestReplyOperations
@4.0.0.RELEASE
+#sendAndReceive(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#sendAndReceive(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;

+###org/springframework/messaging/core/DestinationResolvingMessageSendingOperations
@4.0.0.RELEASE
+#send(Ljava/lang/String;Lorg/springframework/messaging/Message;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V

+###org/springframework/messaging/core/MessageSendingOperations
@4.0.0.RELEASE
+#send(Lorg/springframework/messaging/Message;)V
+#send(Ljava/lang/Object;Lorg/springframework/messaging/Message;)V
+#convertAndSend(Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/Object;Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;)V
+#convertAndSend(Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#convertAndSend(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
+#convertAndSend(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V

+###org/springframework/messaging/core/MessageReceivingOperations
@4.0.0.RELEASE
+#receive()Lorg/springframework/messaging/Message;
+#receive(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
+#receiveAndConvert(Ljava/lang/Class;)Ljava/lang/Object;
+#receiveAndConvert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/messaging/core/DestinationResolvingMessageReceivingOperations
@4.0.0.RELEASE
+#receive(Ljava/lang/String;)Lorg/springframework/messaging/Message;
+#receiveAndConvert(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/messaging/core/DestinationResolutionException
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/messaging/core/CachingDestinationResolverProxy
@4.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/messaging/core/DestinationResolver;)V
+#setTargetDestinationResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
+#afterPropertiesSet()V
+#resolveDestination(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/messaging/core/MessagePostProcessor
@4.0.0.RELEASE
+#postProcessMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;

+###org/springframework/messaging/tcp/FixedIntervalReconnectStrategy
@4.0.0.RELEASE
+#<init>(J)V
+#getTimeToNextAttempt(I)Ljava/lang/Long;

+###org/springframework/messaging/tcp/reactor/AbstractNioBufferReactorNettyCodec
@5.0.0.RELEASE
+#<init>()V
+#decode(Lio/netty/buffer/ByteBuf;)Ljava/util/Collection;
+#encode(Lorg/springframework/messaging/Message;Lio/netty/buffer/ByteBuf;)V

+###org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient
@4.0.0.RELEASE
+#<init>(Ljava/lang/String;ILreactor/tcp/encoding/Codec;)V
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Lorg/springframework/util/concurrent/ListenableFuture;
+#shutdown()Lorg/springframework/util/concurrent/ListenableFuture;
@4.0.3.RELEASE
-###org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient

+###org/springframework/messaging/tcp/reactor/ReactorNettyTcpConnection
@5.0.0.RELEASE
+#<init>(Lreactor/ipc/netty/NettyInbound;Lreactor/ipc/netty/NettyOutbound;Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;Lreactor/core/publisher/DirectProcessor;)V
+#send(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;
+#onReadInactivity(Ljava/lang/Runnable;J)V
+#onWriteInactivity(Ljava/lang/Runnable;J)V
+#close()V
@5.1.0.RELEASE
+#<init>(Lreactor/netty/NettyInbound;Lreactor/netty/NettyOutbound;Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;Lreactor/core/publisher/DirectProcessor;)V
-#<init>(Lreactor/ipc/netty/NettyInbound;Lreactor/ipc/netty/NettyOutbound;Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;Lreactor/core/publisher/DirectProcessor;)V
@5.3.0
+#<init>(Lreactor/netty/NettyInbound;Lreactor/netty/NettyOutbound;Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;Lreactor/core/publisher/Sinks$Empty;)V
-#<init>(Lreactor/netty/NettyInbound;Lreactor/netty/NettyOutbound;Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;Lreactor/core/publisher/DirectProcessor;)V
@6.0.0
+#sendAsync(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/CompletableFuture;
-#send(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.2
+#toString()Ljava/lang/String;

+###org/springframework/messaging/tcp/reactor/ReactorNettyCodec
@5.0.0.RELEASE
+#decode(Lio/netty/buffer/ByteBuf;)Ljava/util/Collection;
+#encode(Lorg/springframework/messaging/Message;Lio/netty/buffer/ByteBuf;)V

+###org/springframework/messaging/tcp/TcpConnection
@4.0.0.RELEASE
+#send(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;
+#onReadInactivity(Ljava/lang/Runnable;J)V
+#onWriteInactivity(Ljava/lang/Runnable;J)V
+#close()V
@6.0.0
*#send(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
+#sendAsync(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/CompletableFuture;

+###org/springframework/messaging/tcp/ReconnectStrategy
@4.0.0.RELEASE
+#getTimeToNextAttempt(I)Ljava/lang/Long;

+###org/springframework/messaging/tcp/TcpConnectionHandler
@4.0.0.RELEASE
+#afterConnected(Lorg/springframework/messaging/tcp/TcpConnection;)V
+#afterConnectFailure(Ljava/lang/Throwable;)V
+#handleMessage(Lorg/springframework/messaging/Message;)V
+#afterConnectionClosed()V
@4.0.4.RELEASE
+#handleFailure(Ljava/lang/Throwable;)V

+###org/springframework/messaging/tcp/TcpOperations
@4.0.0.RELEASE
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Lorg/springframework/util/concurrent/ListenableFuture;
+#shutdown()Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
*#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
+#connectAsync(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Ljava/util/concurrent/CompletableFuture;
*#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
+#connectAsync(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Ljava/util/concurrent/CompletableFuture;
*#shutdown()Lorg/springframework/util/concurrent/ListenableFuture;[deprecated]
+#shutdownAsync()Ljava/util/concurrent/CompletableFuture;

+###org/springframework/messaging/MessageChannel
@4.0.0.RELEASE
+#send(Lorg/springframework/messaging/Message;)Z
+#send(Lorg/springframework/messaging/Message;J)Z

+###org/springframework/messaging/PollableChannel
@4.0.0.RELEASE
+#receive()Lorg/springframework/messaging/Message;
+#receive(J)Lorg/springframework/messaging/Message;

+###org/springframework/messaging/support/NativeMessageHeaderAccessor
@4.0.0.RELEASE
+#toMap()Ljava/util/Map;
+#isModified()Z
+#toNativeHeaderMap()Ljava/util/Map;
+#getNativeHeader(Ljava/lang/String;)Ljava/util/List;
+#getFirstNativeHeader(Ljava/lang/String;)Ljava/lang/String;
+#setNativeHeader(Ljava/lang/String;Ljava/lang/String;)V
+#addNativeHeader(Ljava/lang/String;Ljava/lang/String;)V
@4.1.0.RELEASE
+#setImmutable()V
+#containsNativeHeader(Ljava/lang/String;)Z
+#removeNativeHeader(Ljava/lang/String;)Ljava/util/List;
-#toMap()Ljava/util/Map;
-#isModified()Z
@4.2.0.RELEASE
+#addNativeHeaders(Lorg/springframework/util/MultiValueMap;)V
+#getFirstNativeHeader(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
@5.1.19.RELEASE
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#copyHeaders(Ljava/util/Map;)V
@5.2.0.RELEASE
-#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
-#copyHeaders(Ljava/util/Map;)V
@5.2.10.RELEASE
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#copyHeaders(Ljava/util/Map;)V
@5.2.12.RELEASE
+#copyHeadersIfAbsent(Ljava/util/Map;)V
+#setNativeHeaderValues(Ljava/lang/String;Ljava/util/List;)V
-#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
@5.3.0
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
-#copyHeadersIfAbsent(Ljava/util/Map;)V
-#setNativeHeaderValues(Ljava/lang/String;Ljava/util/List;)V
@5.3.2
+#copyHeadersIfAbsent(Ljava/util/Map;)V
+#setNativeHeaderValues(Ljava/lang/String;Ljava/util/List;)V
-#setHeader(Ljava/lang/String;Ljava/lang/Object;)V

+###org/springframework/messaging/support/MessageHeaderInitializer
@4.1.0.RELEASE
+#initHeaders(Lorg/springframework/messaging/support/MessageHeaderAccessor;)V

+###org/springframework/messaging/support/InterceptableChannel
@4.1.1.RELEASE
+#setInterceptors(Ljava/util/List;)V
+#addInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)V
+#addInterceptor(ILorg/springframework/messaging/support/ChannelInterceptor;)V
+#getInterceptors()Ljava/util/List;
+#removeInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
+#removeInterceptor(I)Lorg/springframework/messaging/support/ChannelInterceptor;

+###org/springframework/messaging/support/AbstractHeaderMapper
@4.1.0.RELEASE
+#<init>()V
+#setInboundPrefix(Ljava/lang/String;)V
+#setOutboundPrefix(Ljava/lang/String;)V

+###org/springframework/messaging/support/MessageBuilder
@4.0.0.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
+#setHeaders(Lorg/springframework/messaging/support/MessageHeaderAccessor;)Lorg/springframework/messaging/support/MessageBuilder;
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
+#setHeaderIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
+#removeHeaders([Ljava/lang/String;)Lorg/springframework/messaging/support/MessageBuilder;
+#removeHeader(Ljava/lang/String;)Lorg/springframework/messaging/support/MessageBuilder;
+#copyHeaders(Ljava/util/Map;)Lorg/springframework/messaging/support/MessageBuilder;
+#copyHeadersIfAbsent(Ljava/util/Map;)Lorg/springframework/messaging/support/MessageBuilder;
+#setReplyChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/support/MessageBuilder;
+#setReplyChannelName(Ljava/lang/String;)Lorg/springframework/messaging/support/MessageBuilder;
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/support/MessageBuilder;
+#setErrorChannelName(Ljava/lang/String;)Lorg/springframework/messaging/support/MessageBuilder;
+#build()Lorg/springframework/messaging/Message;
@4.1.0.RELEASE
+#createMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;

+###org/springframework/messaging/support/MessageHeaderAccessor
@4.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/messaging/Message;)V
+#toMap()Ljava/util/Map;
+#isModified()Z
+#getHeader(Ljava/lang/String;)Ljava/lang/Object;
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#setHeaderIfAbsent(Ljava/lang/String;Ljava/lang/Object;)V
+#removeHeaders([Ljava/lang/String;)V
+#removeHeader(Ljava/lang/String;)V
+#copyHeaders(Ljava/util/Map;)V
+#copyHeadersIfAbsent(Ljava/util/Map;)V
+#getId()Ljava/util/UUID;
+#getTimestamp()Ljava/lang/Long;
+#setReplyChannel(Lorg/springframework/messaging/MessageChannel;)V
+#getReplyChannel()Ljava/lang/Object;
+#setReplyChannelName(Ljava/lang/String;)V
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)V
+#getErrorChannel()Ljava/lang/Object;
+#setErrorChannelName(Ljava/lang/String;)V
+#getContentType()Lorg/springframework/util/MimeType;
+#setContentType(Lorg/springframework/util/MimeType;)V
+#toString()Ljava/lang/String;
@4.1.0.RELEASE
+#setLeaveMutable(Z)V
+#setImmutable()V
+#isMutable()Z
+#getMessageHeaders()Lorg/springframework/messaging/MessageHeaders;
+#toMessageHeaders()Lorg/springframework/messaging/MessageHeaders;
+#getShortLogMessage(Ljava/lang/Object;)Ljava/lang/String;
+#getDetailedLogMessage(Ljava/lang/Object;)Ljava/lang/String;
+#getAccessor(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
+#getAccessor(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
+#getMutableAccessor(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
@5.1.19.RELEASE
+#getAccessor(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
@5.2.0.RELEASE
-#getAccessor(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
@5.2.10.RELEASE
+#getAccessor(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;

+###org/springframework/messaging/support/ImmutableMessageChannelInterceptor
@4.1.2.RELEASE
+#<init>()V
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;

+###org/springframework/messaging/support/ErrorMessage
@4.0.0.RELEASE
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;Ljava/util/Map;)V
@4.1.0.RELEASE
+#<init>(Ljava/lang/Throwable;Lorg/springframework/messaging/MessageHeaders;)V
@5.0.0.RELEASE
+#<init>(Ljava/lang/Throwable;Lorg/springframework/messaging/Message;)V
+#<init>(Ljava/lang/Throwable;Ljava/util/Map;Lorg/springframework/messaging/Message;)V
+#<init>(Ljava/lang/Throwable;Lorg/springframework/messaging/MessageHeaders;Lorg/springframework/messaging/Message;)V
+#getOriginalMessage()Lorg/springframework/messaging/Message;
+#toString()Ljava/lang/String;

+###org/springframework/messaging/support/ChannelInterceptor
@4.0.0.RELEASE
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#postSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Z)V
+#preReceive(Lorg/springframework/messaging/MessageChannel;)Z
+#postReceive(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
@4.1.0.RELEASE
+#afterSendCompletion(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;ZLjava/lang/Exception;)V
+#afterReceiveCompletion(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Ljava/lang/Exception;)V

+###org/springframework/messaging/support/AbstractMessageChannel
@4.0.0.RELEASE
+#<init>()V
+#setBeanName(Ljava/lang/String;)V
+#getBeanName()Ljava/lang/String;
+#setInterceptors(Ljava/util/List;)V
+#addInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)V
+#getInterceptors()Ljava/util/List;
+#send(Lorg/springframework/messaging/Message;)Z
+#send(Lorg/springframework/messaging/Message;J)Z
+#toString()Ljava/lang/String;
@4.1.1.RELEASE
+#addInterceptor(ILorg/springframework/messaging/support/ChannelInterceptor;)V
+#removeInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
+#removeInterceptor(I)Lorg/springframework/messaging/support/ChannelInterceptor;
@5.1.0.RELEASE
+#setLogger(Lorg/apache/commons/logging/Log;)V
+#getLogger()Lorg/apache/commons/logging/Log;

+###org/springframework/messaging/support/AbstractSubscribableChannel
@4.0.0.RELEASE
+#<init>()V
+#subscribe(Lorg/springframework/messaging/MessageHandler;)Z
+#unsubscribe(Lorg/springframework/messaging/MessageHandler;)Z
+#hasSubscription(Lorg/springframework/messaging/MessageHandler;)Z
@4.0.1.RELEASE
+#getSubscribers()Ljava/util/Set;

+###org/springframework/messaging/support/ExecutorChannelInterceptor
@4.1.0.RELEASE
+#beforeHandle(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;)Lorg/springframework/messaging/Message;
+#afterMessageHandled(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;Ljava/lang/Exception;)V

+###org/springframework/messaging/support/IdTimestampMessageHeaderInitializer
@4.1.0.RELEASE
+#<init>()V
+#setIdGenerator(Lorg/springframework/util/IdGenerator;)V
+#setDisableIdGeneration()V
+#getIdGenerator()Lorg/springframework/util/IdGenerator;
+#setEnableTimestamp(Z)V
+#isEnableTimestamp()Z
+#initHeaders(Lorg/springframework/messaging/support/MessageHeaderAccessor;)V

+###org/springframework/messaging/support/HeaderMapper
@4.1.0.RELEASE
+#fromHeaders(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)V
+#toHeaders(Ljava/lang/Object;)Lorg/springframework/messaging/MessageHeaders;

+###org/springframework/messaging/support/AbstractMessageChannel$ChannelInterceptorChain
@4.1.0.RELEASE
+#applyPreSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#applyPostSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Z)V
+#triggerAfterSendCompletion(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;ZLjava/lang/Exception;)V
+#applyPreReceive(Lorg/springframework/messaging/MessageChannel;)Z
+#applyPostReceive(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#triggerAfterReceiveCompletion(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Ljava/lang/Exception;)V

+###org/springframework/messaging/support/GenericMessage
@4.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/util/Map;)V
+#getHeaders()Lorg/springframework/messaging/MessageHeaders;
+#getPayload()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@4.1.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)V

+###org/springframework/messaging/support/MessageHandlingRunnable
@4.1.1.RELEASE
+#getMessage()Lorg/springframework/messaging/Message;
+#getMessageHandler()Lorg/springframework/messaging/MessageHandler;

+###org/springframework/messaging/support/ChannelInterceptorAdapter
@4.0.0.RELEASE
+#<init>()V
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#postSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Z)V
+#preReceive(Lorg/springframework/messaging/MessageChannel;)Z
+#postReceive(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
@4.1.0.RELEASE
+#afterSendCompletion(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;ZLjava/lang/Exception;)V
+#afterReceiveCompletion(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Ljava/lang/Exception;)V
@6.0.0
-###org/springframework/messaging/support/ChannelInterceptorAdapter

+###org/springframework/messaging/support/ExecutorSubscribableChannel
@4.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;)V
+#getExecutor()Ljava/util/concurrent/Executor;
+#hasSubscription(Lorg/springframework/messaging/MessageHandler;)Z
+#sendInternal(Lorg/springframework/messaging/Message;J)Z
+#subscribeInternal(Lorg/springframework/messaging/MessageHandler;)Z
+#unsubscribeInternal(Lorg/springframework/messaging/MessageHandler;)Z
@4.0.1.RELEASE
-#hasSubscription(Lorg/springframework/messaging/MessageHandler;)Z
-#subscribeInternal(Lorg/springframework/messaging/MessageHandler;)Z
-#unsubscribeInternal(Lorg/springframework/messaging/MessageHandler;)Z
@4.1.0.RELEASE
+#setInterceptors(Ljava/util/List;)V
+#addInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)V
@5.1.0.RELEASE
+#addInterceptor(ILorg/springframework/messaging/support/ChannelInterceptor;)V

+###org/springframework/messaging/MessagingException
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getFailedMessage()Lorg/springframework/messaging/Message;
@4.3.6.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/messaging/SubscribableChannel
@4.0.0.RELEASE
+#subscribe(Lorg/springframework/messaging/MessageHandler;)Z
+#unsubscribe(Lorg/springframework/messaging/MessageHandler;)Z

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt$retrieveAndAwait$2
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/MetadataExtractorRegistryExtensionsKt$sam$i$java_util_function_BiConsumer$0
@5.2.0.RELEASE
+#<init>(Lkotlin/jvm/functions/Function2;)V
+#accept(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/springframework/messaging/rsocket/MetadataExtractorRegistryExtensionsKt
@5.2.0.RELEASE
+#metadataToExtract(Lorg/springframework/messaging/rsocket/MetadataExtractorRegistry;Lorg/springframework/util/MimeType;Ljava/lang/String;)V
+#metadataToExtract$default(Lorg/springframework/messaging/rsocket/MetadataExtractorRegistry;Lorg/springframework/util/MimeType;Ljava/lang/String;ILjava/lang/Object;)V
+#metadataToExtract(Lorg/springframework/messaging/rsocket/MetadataExtractorRegistry;Lorg/springframework/util/MimeType;Lkotlin/jvm/functions/Function2;)V

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt$retrieveAndAwaitOrNull$2
@5.2.1.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/MetadataExtractorRegistryExtensionsKt$metadataToExtract$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt$retrieveFlow$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt$dataWithType$3
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt$dataWithType$2
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt$dataWithType$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/MetadataExtractorRegistryExtensionsKt$metadataToExtract$2
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt$retrieveMono$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt
@5.2.0.RELEASE
+#connectAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;Lio/rsocket/transport/ClientTransport;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#connectTcpAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;Ljava/lang/String;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#connectWebSocketAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$Builder;Ljava/net/URI;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lorg/reactivestreams/Publisher;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlinx/coroutines/flow/Flow;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
+#sendAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#retrieveAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#retrieveFlow(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;)Lkotlinx/coroutines/flow/Flow;
+#retrieveMono(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;)Lreactor/core/publisher/Mono;
+#retrieveFlux(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;)Lreactor/core/publisher/Flux;
@5.2.1.RELEASE
+#retrieveAndAwaitOrNull(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@5.2.2.RELEASE
+#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;
+#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lorg/reactivestreams/Publisher;)Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;
+#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlinx/coroutines/flow/Flow;)Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;
-#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
-#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lorg/reactivestreams/Publisher;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
-#dataWithType(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlinx/coroutines/flow/Flow;)Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;
@5.2.3.RELEASE
+#sendAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#retrieveAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#retrieveAndAwaitOrNull(Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#retrieveFlow(Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;)Lkotlinx/coroutines/flow/Flow;
+#retrieveMono(Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;)Lreactor/core/publisher/Mono;
+#retrieveFlux(Lorg/springframework/messaging/rsocket/RSocketRequester$RetrieveSpec;)Lreactor/core/publisher/Flux;
-#sendAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
-#retrieveAndAwait(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
-#retrieveAndAwaitOrNull(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
-#retrieveFlow(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;)Lkotlinx/coroutines/flow/Flow;
-#retrieveMono(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;)Lreactor/core/publisher/Mono;
-#retrieveFlux(Lorg/springframework/messaging/rsocket/RSocketRequester$RequestSpec;)Lreactor/core/publisher/Flux;

+###org/springframework/messaging/rsocket/RSocketRequesterExtensionsKt$retrieveFlux$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/messaging/handler/annotation/support/AbstractMethodArgumentResolutionException
@4.0.3.RELEASE
+#getMethodParameter()Lorg/springframework/core/MethodParameter;
@4.3.6.RELEASE
-#getMethodParameter()Lorg/springframework/core/MethodParameter;
@5.0.0.RELEASE
-###org/springframework/messaging/handler/annotation/support/AbstractMethodArgumentResolutionException

+###org/springframework/messaging/handler/HandlerMethodSelector
@4.0.0.RELEASE
+#<init>()V
+#selectMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodFilter;)Ljava/util/Set;
@5.0.0.RELEASE
-###org/springframework/messaging/handler/HandlerMethodSelector

+###org/springframework/messaging/simp/user/UserSessionRegistry
@4.0.0.RELEASE
+#getSessionIds(Ljava/lang/String;)Ljava/util/Set;
+#registerSessionId(Ljava/lang/String;Ljava/lang/String;)V
+#unregisterSessionId(Ljava/lang/String;Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/messaging/simp/user/UserSessionRegistry

+###org/springframework/messaging/simp/user/UserSessionRegistryAdapter
@4.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/simp/user/UserSessionRegistry;)V
+#getUser(Ljava/lang/String;)Lorg/springframework/messaging/simp/user/SimpUser;
+#getUsers()Ljava/util/Set;
+#findSubscriptions(Lorg/springframework/messaging/simp/user/SimpSubscriptionMatcher;)Ljava/util/Set;
@4.3.5.RELEASE
+#getUserCount()I
@5.0.0.RELEASE
-###org/springframework/messaging/simp/user/UserSessionRegistryAdapter

+###org/springframework/messaging/simp/user/DefaultUserSessionRegistry
@4.0.0.RELEASE
+#<init>()V
+#getSessionIds(Ljava/lang/String;)Ljava/util/Set;
+#registerSessionId(Ljava/lang/String;Ljava/lang/String;)V
+#unregisterSessionId(Ljava/lang/String;Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/messaging/simp/user/DefaultUserSessionRegistry

+###org/springframework/messaging/simp/stomp/Reactor2StompCodec
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/messaging/simp/stomp/StompEncoder;Lorg/springframework/messaging/simp/stomp/StompDecoder;)V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#encoder()Lreactor/fn/Function;
+#apply(Lorg/springframework/messaging/Message;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/messaging/simp/stomp/Reactor2StompCodec

+###org/springframework/messaging/simp/stomp/Reactor2TcpStompClient
@4.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(Lorg/springframework/messaging/tcp/TcpOperations;)V
+#connect(Lorg/springframework/messaging/simp/stomp/StompSessionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#connect(Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompSessionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#shutdown()V
@4.3.6.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
@5.0.0.RELEASE
-###org/springframework/messaging/simp/stomp/Reactor2TcpStompClient

+###org/springframework/messaging/tcp/reactor/Reactor2TcpConnection
@4.2.0.RELEASE
+#<init>(Lreactor/io/net/ChannelStream;Lreactor/rx/Promise;)V
+#send(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;
+#onReadInactivity(Ljava/lang/Runnable;J)V
+#onWriteInactivity(Ljava/lang/Runnable;J)V
+#close()V
@5.0.0.RELEASE
-###org/springframework/messaging/tcp/reactor/Reactor2TcpConnection

+###org/springframework/messaging/tcp/reactor/Reactor2TcpClient
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;ILreactor/io/codec/Codec;)V
+#<init>(Lreactor/io/net/NetStreams$TcpClientFactory;)V
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Lorg/springframework/util/concurrent/ListenableFuture;
+#shutdown()Lorg/springframework/util/concurrent/ListenableFuture;
@4.3.6.RELEASE
+#initEventLoopGroup()Lio/netty/channel/nio/NioEventLoopGroup;
@4.3.15.RELEASE
+#<init>(Lreactor/fn/Supplier;Lreactor/io/codec/Codec;)V
@5.0.0.RELEASE
-###org/springframework/messaging/tcp/reactor/Reactor2TcpClient

+###org/springframework/messaging/rsocket/ClientRSocketFactoryConfigurer
@5.2.0.RELEASE
+#configure(Lio/rsocket/RSocketFactory$ClientRSocketFactory;)V
@5.3.0
-###org/springframework/messaging/rsocket/ClientRSocketFactoryConfigurer

+###org/springframework/messaging/tcp/reactor/Reactor11TcpConnection
@4.0.4.RELEASE
+#<init>(Lreactor/net/NetChannel;)V
+#send(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;
+#onReadInactivity(Ljava/lang/Runnable;J)V
+#onWriteInactivity(Ljava/lang/Runnable;J)V
+#close()V
@4.2.0.RELEASE
-###org/springframework/messaging/tcp/reactor/Reactor11TcpConnection

+###org/springframework/messaging/tcp/reactor/Reactor11TcpClient
@4.0.4.RELEASE
+#<init>(Ljava/lang/String;ILreactor/io/encoding/Codec;)V
+#<init>(Lreactor/net/tcp/TcpClient;)V
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Lorg/springframework/util/concurrent/ListenableFuture;
+#shutdown()Lorg/springframework/util/concurrent/ListenableFuture;
@4.2.0.RELEASE
-###org/springframework/messaging/tcp/reactor/Reactor11TcpClient

+###org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter
@4.0.4.RELEASE
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
@4.1.0.RELEASE
-###org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter

+###org/springframework/messaging/tcp/reactor/ReactorTcpClient
@4.0.3.RELEASE
+#<init>(Ljava/lang/String;ILreactor/tcp/encoding/Codec;)V
+#<init>(Lreactor/tcp/TcpClient;)V
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
+#connect(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Lorg/springframework/util/concurrent/ListenableFuture;
+#shutdown()Lorg/springframework/util/concurrent/ListenableFuture;
@4.1.0.RELEASE
-###org/springframework/messaging/tcp/reactor/ReactorTcpClient

+###org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter
@4.0.4.RELEASE
+#<init>(Lreactor/core/composable/Promise;)V
@4.1.0.RELEASE
-###org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter

+###org/springframework/messaging/tcp/reactor/ReactorTcpConnection
@4.0.0.RELEASE
+#<init>(Lreactor/tcp/TcpConnection;)V
+#send(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;
+#onReadInactivity(Ljava/lang/Runnable;J)V
+#onWriteInactivity(Ljava/lang/Runnable;J)V
+#close()V
@4.1.0.RELEASE
-###org/springframework/messaging/tcp/reactor/ReactorTcpConnection

+###org/springframework/messaging/simp/stomp/StompCodec
@4.0.0.RELEASE
+#<init>()V
+#decoder(Lreactor/function/Consumer;)Lreactor/function/Function;
+#encoder()Lreactor/function/Function;
@4.1.0.RELEASE
-###org/springframework/messaging/simp/stomp/StompCodec

+###org/springframework/messaging/simp/stomp/Reactor11StompCodec
@4.0.4.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/messaging/simp/stomp/StompEncoder;Lorg/springframework/messaging/simp/stomp/StompDecoder;)V
+#decoder(Lreactor/function/Consumer;)Lreactor/function/Function;
+#encoder()Lreactor/function/Function;
@4.2.0.RELEASE
-###org/springframework/messaging/simp/stomp/Reactor11StompCodec

+###org/springframework/messaging/simp/stomp/StompReactorNettyTcpClient
@4.0.1.RELEASE
+#<init>(Ljava/lang/String;I)V
@4.0.3.RELEASE
-###org/springframework/messaging/simp/stomp/StompReactorNettyTcpClient

+###org/springframework/messaging/support/MonoToListenableFutureAdapter
@5.1.0.RELEASE
+#<init>(Lreactor/core/publisher/Mono;)V
+#addCallback(Lorg/springframework/util/concurrent/SuccessCallback;Lorg/springframework/util/concurrent/FailureCallback;)V
+#addCallback(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
+#isDone()Z
+#isCancelled()Z
+#cancel(Z)Z
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#get()Ljava/lang/Object;
@5.1.1.RELEASE
-###org/springframework/messaging/support/MonoToListenableFutureAdapter

+###org/springframework/messaging/handler/annotation/MessageMappingReflectiveProcessor
@6.0.6
+#<init>()V
+#registerReflectionHints(Lorg/springframework/aot/hint/ReflectionHints;Ljava/lang/reflect/AnnotatedElement;)V

+###org/springframework/messaging/rsocket/service/RSocketServiceArgumentResolver
@6.0.0
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;)Z

+###org/springframework/messaging/rsocket/service/RSocketRequestValues
@6.0.0
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$MetadataHelper;Ljava/lang/Object;Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)V
+#getRoute()Ljava/lang/String;
+#getRouteVariables()[Ljava/lang/Object;
+#getMetadata()Ljava/util/Map;
+#getPayloadValue()Ljava/lang/Object;
+#getPayload()Lorg/reactivestreams/Publisher;
+#getPayloadElementType()Lorg/springframework/core/ParameterizedTypeReference;
+#builder(Ljava/lang/String;)Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;

+###org/springframework/messaging/rsocket/service/RSocketExchange
@6.0.0
+#value()Ljava/lang/String;

+###org/springframework/messaging/rsocket/service/PayloadArgumentResolver
@6.0.0
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;Z)V
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;)Z

+###org/springframework/messaging/rsocket/service/DestinationVariableArgumentResolver
@6.0.0
+#<init>()V
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;)Z

+###org/springframework/messaging/rsocket/service/RSocketServiceProxyFactory$Builder
@6.0.0
+#rsocketRequester(Lorg/springframework/messaging/rsocket/RSocketRequester;)Lorg/springframework/messaging/rsocket/service/RSocketServiceProxyFactory$Builder;
+#customArgumentResolver(Lorg/springframework/messaging/rsocket/service/RSocketServiceArgumentResolver;)Lorg/springframework/messaging/rsocket/service/RSocketServiceProxyFactory$Builder;
+#embeddedValueResolver(Lorg/springframework/util/StringValueResolver;)Lorg/springframework/messaging/rsocket/service/RSocketServiceProxyFactory$Builder;
+#reactiveAdapterRegistry(Lorg/springframework/core/ReactiveAdapterRegistry;)Lorg/springframework/messaging/rsocket/service/RSocketServiceProxyFactory$Builder;
+#blockTimeout(Ljava/time/Duration;)Lorg/springframework/messaging/rsocket/service/RSocketServiceProxyFactory$Builder;
+#build()Lorg/springframework/messaging/rsocket/service/RSocketServiceProxyFactory;

+###org/springframework/messaging/rsocket/service/RSocketServiceProxyFactory
@6.0.0
+#createClient(Ljava/lang/Class;)Ljava/lang/Object;
+#builder(Lorg/springframework/messaging/rsocket/RSocketRequester;)Lorg/springframework/messaging/rsocket/service/RSocketServiceProxyFactory$Builder;
+#builder()Lorg/springframework/messaging/rsocket/service/RSocketServiceProxyFactory$Builder;

+###org/springframework/messaging/rsocket/service/RSocketRequestValues$Builder
@6.0.0
+#setRoute(Ljava/lang/String;)Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;
+#addRouteVariable(Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;
+#addMetadata(Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;
+#addMimeType(Lorg/springframework/util/MimeType;)Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;
+#setPayloadValue(Ljava/lang/Object;)Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;
+#setPayload(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;
+#build()Lorg/springframework/messaging/rsocket/service/RSocketRequestValues;

+###org/springframework/messaging/rsocket/service/MetadataArgumentResolver
@6.0.0
+#<init>()V
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/rsocket/service/RSocketRequestValues$Builder;)Z

+###org/springframework/messaging/tcp/reactor/ReactorNetty2TcpClient
@6.0.0
+#<init>(Ljava/lang/String;ILorg/springframework/messaging/tcp/reactor/TcpMessageCodec;)V
+#<init>(Ljava/util/function/Function;Lorg/springframework/messaging/tcp/reactor/TcpMessageCodec;)V
+#<init>(Lreactor/netty5/tcp/TcpClient;Lorg/springframework/messaging/tcp/reactor/TcpMessageCodec;)V
+#setLogger(Lorg/apache/commons/logging/Log;)V
+#getLogger()Lorg/apache/commons/logging/Log;
+#connectAsync(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Ljava/util/concurrent/CompletableFuture;
+#connectAsync(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Ljava/util/concurrent/CompletableFuture;
+#shutdownAsync()Ljava/util/concurrent/CompletableFuture;
+#toString()Ljava/lang/String;

+###org/springframework/messaging/tcp/reactor/TcpMessageCodec
@6.0.0
+#decode(Ljava/nio/ByteBuffer;)Ljava/util/List;
+#encode(Lorg/springframework/messaging/Message;)Ljava/nio/ByteBuffer;

+###org/springframework/messaging/tcp/reactor/ReactorNetty2TcpConnection
@6.0.0
+#<init>(Lreactor/netty5/NettyInbound;Lreactor/netty5/NettyOutbound;Lorg/springframework/messaging/tcp/reactor/TcpMessageCodec;Lreactor/core/publisher/Sinks$Empty;)V
+#sendAsync(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/CompletableFuture;
+#onReadInactivity(Ljava/lang/Runnable;J)V
+#onWriteInactivity(Ljava/lang/Runnable;J)V
+#close()V
@6.0.2
+#toString()Ljava/lang/String;

+###org/springframework/messaging/simp/stomp/StompTcpMessageCodec
@6.0.0
+#<init>()V
+#<init>(Lorg/springframework/messaging/simp/stomp/StompDecoder;)V
+#<init>(Lorg/springframework/messaging/simp/stomp/StompDecoder;Lorg/springframework/messaging/simp/stomp/StompEncoder;)V
+#decode(Ljava/nio/ByteBuffer;)Ljava/util/List;
+#encode(Lorg/springframework/messaging/Message;)Ljava/nio/ByteBuffer;
