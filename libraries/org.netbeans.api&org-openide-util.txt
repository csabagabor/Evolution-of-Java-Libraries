
+###org/netbeans/modules/openide/util/Compact2MutexEventProvider
@RELEASE90
+#<init>()V
+#createMutex()Lorg/openide/util/spi/MutexImplementation;

+###org/netbeans/modules/openide/util/DefaultMutexImplementation$Privileged
@RELEASE90
+#<init>()V
+#enterReadAccess()V
+#tryReadAccess(J)Z
+#enterWriteAccess()V
+#tryWriteAccess(J)Z
+#exitReadAccess()V
+#exitWriteAccess()V

+###org/netbeans/modules/openide/util/DefaultMutexImplementation
@RELEASE90
+#create()Lorg/netbeans/modules/openide/util/DefaultMutexImplementation;
+#usingLock(Ljava/lang/Object;)Lorg/netbeans/modules/openide/util/DefaultMutexImplementation;
+#controlledBy(Lorg/netbeans/modules/openide/util/DefaultMutexImplementation$Privileged;)Lorg/netbeans/modules/openide/util/DefaultMutexImplementation;
+#controlledBy(Lorg/netbeans/modules/openide/util/DefaultMutexImplementation$Privileged;Ljava/util/concurrent/Executor;)Lorg/netbeans/modules/openide/util/DefaultMutexImplementation;
+#readAccess(Ljava/lang/Runnable;)V
+#readAccess(Lorg/openide/util/Mutex$ExceptionAction;)Ljava/lang/Object;
+#writeAccess(Ljava/lang/Runnable;)V
+#writeAccess(Lorg/openide/util/Mutex$ExceptionAction;)Ljava/lang/Object;
+#isReadAccess()Z
+#isWriteAccess()Z
+#postReadRequest(Ljava/lang/Runnable;)V
+#postWriteRequest(Ljava/lang/Runnable;)V
+#toString()Ljava/lang/String;

+###org/netbeans/modules/openide/util/LazyMutexImplementation
@RELEASE90
+#<init>(Ljava/util/concurrent/Callable;)V
+#isReadAccess()Z
+#isWriteAccess()Z
+#writeAccess(Ljava/lang/Runnable;)V
+#writeAccess(Lorg/openide/util/Mutex$ExceptionAction;)Ljava/lang/Object;
+#readAccess(Ljava/lang/Runnable;)V
+#readAccess(Lorg/openide/util/Mutex$ExceptionAction;)Ljava/lang/Object;
+#postReadRequest(Ljava/lang/Runnable;)V
+#postWriteRequest(Ljava/lang/Runnable;)V

+###org/netbeans/modules/openide/util/NbBundleProcessor
@RELEASE90
+#<init>()V
+#getSupportedAnnotationTypes()Ljava/util/Set;
+#process(Ljava/util/Set;Ljavax/annotation/processing/RoundEnvironment;)Z
@RELEASE113
+#getSupportedSourceVersion()Ljavax/lang/model/SourceVersion;

+###org/netbeans/modules/openide/util/ProxyURLStreamHandlerFactory
@RELEASE90
+#<init>()V
+#createURLStreamHandler(Ljava/lang/String;)Ljava/net/URLStreamHandler;

+###org/openide/util/BaseUtilities
@RELEASE90
+#activeReferenceQueue()Ljava/lang/ref/ReferenceQueue;
+#getOperatingSystem()I
+#isWindows()Z
+#isMac()Z
+#isUnix()Z
+#isJavaIdentifier(Ljava/lang/String;)Z
+#wrapStringToArray(Ljava/lang/String;ILjava/text/BreakIterator;Z)[Ljava/lang/String;
+#wrapString(Ljava/lang/String;ILjava/text/BreakIterator;Z)Ljava/lang/String;
+#pureClassName(Ljava/lang/String;)Ljava/lang/String;
+#compareObjects(Ljava/lang/Object;Ljava/lang/Object;)Z
+#compareObjectsImpl(Ljava/lang/Object;Ljava/lang/Object;I)Z
+#getClassName(Ljava/lang/Class;)Ljava/lang/String;
+#getShortClassName(Ljava/lang/Class;)Ljava/lang/String;
+#toPrimitiveArray([Ljava/lang/Object;)Ljava/lang/Object;
+#toObjectArray(Ljava/lang/Object;)[Ljava/lang/Object;
+#getObjectType(Ljava/lang/Class;)Ljava/lang/Class;
+#getPrimitiveType(Ljava/lang/Class;)Ljava/lang/Class;
+#parseParameters(Ljava/lang/String;)[Ljava/lang/String;
+#escapeParameters([Ljava/lang/String;)Ljava/lang/String;
+#topologicalSort(Ljava/util/Collection;Ljava/util/Map;)Ljava/util/List;
+#translate(Ljava/lang/String;)Ljava/lang/String;
+#toURI(Ljava/io/File;)Ljava/net/URI;
+#toFile(Ljava/net/URI;)Ljava/io/File;
@RELEASE125
+#normalizeURI(Ljava/net/URI;)Ljava/net/URI;

+###org/openide/util/Cancellable
@RELEASE90
+#cancel()Z

+###org/openide/util/ChangeSupport
@RELEASE90
+#<init>(Ljava/lang/Object;)V
+#addChangeListener(Ljavax/swing/event/ChangeListener;)V
+#removeChangeListener(Ljavax/swing/event/ChangeListener;)V
+#fireChange()V
+#hasListeners()Z

+###org/openide/util/CharSequences
@RELEASE90
+#create([CII)Ljava/lang/CharSequence;
+#create(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
+#comparator()Ljava/util/Comparator;
+#empty()Ljava/lang/CharSequence;
+#isCompact(Ljava/lang/CharSequence;)Z
+#indexOf(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I
+#indexOf(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I

+###org/openide/util/EditableProperties
@RELEASE90
+#<init>(Z)V
+#entrySet()Ljava/util/Set;
+#load(Ljava/io/InputStream;)V
+#store(Ljava/io/OutputStream;)V
+#get(Ljava/lang/Object;)Ljava/lang/String;
+#put(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#setProperty(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#getComment(Ljava/lang/String;)[Ljava/lang/String;
+#setComment(Ljava/lang/String;[Ljava/lang/String;Z)V
+#clone()Ljava/lang/Object;
+#cloneProperties()Lorg/openide/util/EditableProperties;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/openide/util/Enumerations$Processor
@RELEASE90
+#process(Ljava/lang/Object;Ljava/util/Collection;)Ljava/lang/Object;

+###org/openide/util/Enumerations
@RELEASE90
+#empty()Ljava/util/Enumeration;
+#singleton(Ljava/lang/Object;)Ljava/util/Enumeration;
+#concat(Ljava/util/Enumeration;Ljava/util/Enumeration;)Ljava/util/Enumeration;
+#concat(Ljava/util/Enumeration;)Ljava/util/Enumeration;
+#removeDuplicates(Ljava/util/Enumeration;)Ljava/util/Enumeration;
+#array([Ljava/lang/Object;)Ljava/util/Enumeration;
+#removeNulls(Ljava/util/Enumeration;)Ljava/util/Enumeration;
+#convert(Ljava/util/Enumeration;Lorg/openide/util/Enumerations$Processor;)Ljava/util/Enumeration;
+#filter(Ljava/util/Enumeration;Lorg/openide/util/Enumerations$Processor;)Ljava/util/Enumeration;
+#queue(Ljava/util/Enumeration;Lorg/openide/util/Enumerations$Processor;)Ljava/util/Enumeration;

+###org/openide/util/Exceptions
@RELEASE90
+#attachMessage(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;
+#attachLocalizedMessage(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;
+#attachSeverity(Ljava/lang/Throwable;Ljava/util/logging/Level;)Ljava/lang/Throwable;
+#findLocalizedMessage(Ljava/lang/Throwable;)Ljava/lang/String;
+#printStackTrace(Ljava/lang/Throwable;)V

+###org/openide/util/MapFormat
@RELEASE90
+#<init>(Ljava/util/Map;)V
+#format(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
+#processPattern(Ljava/lang/String;)Ljava/lang/String;
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
+#parse(Ljava/lang/String;)Ljava/lang/String;
+#willThrowExceptionIfKeyWasNotFound()Z
+#setThrowExceptionIfKeyWasNotFound(Z)V
+#isExactMatch()Z
+#setExactMatch(Z)V
+#getLeftBrace()Ljava/lang/String;
+#setLeftBrace(Ljava/lang/String;)V
+#getRightBrace()Ljava/lang/String;
+#setRightBrace(Ljava/lang/String;)V
+#getMap()Ljava/util/Map;
+#setMap(Ljava/util/Map;)V

+###org/openide/util/Mutex$Action
@RELEASE90
+#run()Ljava/lang/Object;

+###org/openide/util/Mutex$ExceptionAction
@RELEASE90
+#run()Ljava/lang/Object;

+###org/openide/util/Mutex$Privileged
@RELEASE90
+#<init>()V
+#enterReadAccess()V
+#tryReadAccess(J)Z
+#enterWriteAccess()V
+#tryWriteAccess(J)Z
+#exitReadAccess()V
+#exitWriteAccess()V

+###org/openide/util/Mutex
@RELEASE90
+#<init>(Lorg/openide/util/spi/MutexImplementation;)V
+#<init>(Ljava/lang/Object;)V
+#<init>()V
+#<init>(Lorg/openide/util/Mutex$Privileged;)V
+#<init>(Lorg/openide/util/Mutex$Privileged;Ljava/util/concurrent/Executor;)V
+#readAccess(Lorg/openide/util/Mutex$Action;)Ljava/lang/Object;
+#readAccess(Lorg/openide/util/Mutex$ExceptionAction;)Ljava/lang/Object;
+#readAccess(Ljava/lang/Runnable;)V
+#writeAccess(Lorg/openide/util/Mutex$Action;)Ljava/lang/Object;
+#writeAccess(Lorg/openide/util/Mutex$ExceptionAction;)Ljava/lang/Object;
+#writeAccess(Ljava/lang/Runnable;)V
+#isReadAccess()Z
+#isWriteAccess()Z
+#toString()Ljava/lang/String;
+#postReadRequest(Ljava/lang/Runnable;)V
+#postWriteRequest(Ljava/lang/Runnable;)V

+###org/openide/util/MutexException
@RELEASE90
+#<init>(Ljava/lang/Exception;)V
+#getException()Ljava/lang/Exception;
+#getCause()Ljava/lang/Throwable;

+###org/openide/util/NbBundle$ClassLoaderFinder
@RELEASE90
+#find()Ljava/lang/ClassLoader;[deprecated]

+###org/openide/util/NbBundle$Messages
@RELEASE90
+#value()[Ljava/lang/String;

+###org/openide/util/NbBundle
@RELEASE90
+#<init>()V[deprecated]
+#getBranding()Ljava/lang/String;
+#setBranding(Ljava/lang/String;)V
+#getLocalizedFile(Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;[deprecated]
+#getLocalizedFile(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/net/URL;[deprecated]
+#getLocalizedFile(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/net/URL;[deprecated]
+#getLocalizedValue(Ljava/util/Map;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;
+#getLocalizedValue(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;
+#getLocalizedValue(Ljava/util/jar/Attributes;Ljava/util/jar/Attributes$Name;Ljava/util/Locale;)Ljava/lang/String;
+#getLocalizedValue(Ljava/util/jar/Attributes;Ljava/util/jar/Attributes$Name;)Ljava/lang/String;
+#getBundle(Ljava/lang/String;)Ljava/util/ResourceBundle;
+#getBundle(Ljava/lang/Class;)Ljava/util/ResourceBundle;
+#getBundle(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
+#getBundle(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;
+#getMessage(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#getMessage(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
+#getMessage(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
+#getMessage(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
+#getMessage(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;
+#getMessage(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+#getLocalizingSuffixes()Ljava/util/Iterator;
+#setClassLoaderFinder(Lorg/openide/util/NbBundle$ClassLoaderFinder;)V[deprecated]

+###org/openide/util/NbCollections
@RELEASE90
+#checkedSetByCopy(Ljava/util/Set;Ljava/lang/Class;Z)Ljava/util/Set;
+#checkedListByCopy(Ljava/util/List;Ljava/lang/Class;Z)Ljava/util/List;
+#checkedMapByCopy(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/util/Map;
+#checkedIteratorByFilter(Ljava/util/Iterator;Ljava/lang/Class;Z)Ljava/util/Iterator;
+#checkedSetByFilter(Ljava/util/Set;Ljava/lang/Class;Z)Ljava/util/Set;
+#checkedMapByFilter(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Z)Ljava/util/Map;
+#checkedEnumerationByFilter(Ljava/util/Enumeration;Ljava/lang/Class;Z)Ljava/util/Enumeration;
+#iterable(Ljava/util/Iterator;)Ljava/lang/Iterable;
+#iterable(Ljava/util/Enumeration;)Ljava/lang/Iterable;

+###org/openide/util/NbPreferences$Provider
@RELEASE90
+#preferencesForModule(Ljava/lang/Class;)Ljava/util/prefs/Preferences;
+#preferencesRoot()Ljava/util/prefs/Preferences;

+###org/openide/util/NbPreferences
@RELEASE90
+#forModule(Ljava/lang/Class;)Ljava/util/prefs/Preferences;
+#root()Ljava/util/prefs/Preferences;

+###org/openide/util/NotImplementedException
@RELEASE90
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/openide/util/Pair
@RELEASE90
+#first()Ljava/lang/Object;
+#second()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/openide/util/Pair;

+###org/openide/util/Parameters
@RELEASE90
+#notNull(Ljava/lang/CharSequence;Ljava/lang/Object;)V
+#notEmpty(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
+#notWhitespace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
+#javaIdentifier(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
+#javaIdentifierOrNull(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V

+###org/openide/util/RequestProcessor$Task
@RELEASE90
+#run()V
+#getDelay()I
+#schedule(I)V
+#cancel()Z
+#getPriority()I
+#setPriority(I)V
+#waitFinished()V
+#waitFinished(J)Z
+#toString()Ljava/lang/String;

+###org/openide/util/RequestProcessor
@RELEASE90
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;IZ)V
+#<init>(Ljava/lang/String;IZZ)V
+#getDefault()Lorg/openide/util/RequestProcessor;
+#execute(Ljava/lang/Runnable;)V
+#post(Ljava/lang/Runnable;)Lorg/openide/util/RequestProcessor$Task;
+#post(Ljava/lang/Runnable;I)Lorg/openide/util/RequestProcessor$Task;
+#post(Ljava/lang/Runnable;II)Lorg/openide/util/RequestProcessor$Task;
+#create(Ljava/lang/Runnable;)Lorg/openide/util/RequestProcessor$Task;
+#create(Ljava/lang/Runnable;Z)Lorg/openide/util/RequestProcessor$Task;
+#isRequestProcessorThread()Z
+#stop()V
+#postRequest(Ljava/lang/Runnable;)Lorg/openide/util/RequestProcessor$Task;[deprecated]
+#postRequest(Ljava/lang/Runnable;I)Lorg/openide/util/RequestProcessor$Task;[deprecated]
+#postRequest(Ljava/lang/Runnable;II)Lorg/openide/util/RequestProcessor$Task;[deprecated]
+#createRequest(Ljava/lang/Runnable;)Lorg/openide/util/RequestProcessor$Task;[deprecated]
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isShutdown()Z
+#isTerminated()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;

+###org/openide/util/Task
@RELEASE90
+#<init>(Ljava/lang/Runnable;)V
+#isFinished()Z
+#waitFinished()V
+#waitFinished(J)Z
+#run()V
+#addTaskListener(Lorg/openide/util/TaskListener;)V
+#removeTaskListener(Lorg/openide/util/TaskListener;)V
+#toString()Ljava/lang/String;

+###org/openide/util/TaskListener
@RELEASE90
+#taskFinished(Lorg/openide/util/Task;)V

+###org/openide/util/TopologicalSortException
@RELEASE90
+#partialSort()Ljava/util/List;
+#unsortableSets()[Ljava/util/Set;
+#getMessage()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#printStackTrace(Ljava/io/PrintWriter;)V
+#printStackTrace(Ljava/io/PrintStream;)V
+#topologicalSets()[Ljava/util/Set;

+###org/openide/util/URLStreamHandlerRegistration
@RELEASE90
+#protocol()[Ljava/lang/String;
+#position()I

+###org/openide/util/Union2
@RELEASE90
+#first()Ljava/lang/Object;
+#second()Ljava/lang/Object;
+#hasFirst()Z
+#hasSecond()Z
+#clone()Lorg/openide/util/Union2;
+#createFirst(Ljava/lang/Object;)Lorg/openide/util/Union2;
+#createSecond(Ljava/lang/Object;)Lorg/openide/util/Union2;
+#clone()Ljava/lang/Object;

+###org/openide/util/WeakListeners
@RELEASE90
+#create(Ljava/lang/Class;Ljava/util/EventListener;Ljava/lang/Object;)Ljava/util/EventListener;
+#create(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/EventListener;Ljava/lang/Object;)Ljava/util/EventListener;
+#propertyChange(Ljava/beans/PropertyChangeListener;Ljava/lang/Object;)Ljava/beans/PropertyChangeListener;
+#propertyChange(Ljava/beans/PropertyChangeListener;Ljava/lang/String;Ljava/lang/Object;)Ljava/beans/PropertyChangeListener;
+#vetoableChange(Ljava/beans/VetoableChangeListener;Ljava/lang/Object;)Ljava/beans/VetoableChangeListener;
+#vetoableChange(Ljava/beans/VetoableChangeListener;Ljava/lang/String;Ljava/lang/Object;)Ljava/beans/VetoableChangeListener;
+#document(Ljavax/swing/event/DocumentListener;Ljava/lang/Object;)Ljavax/swing/event/DocumentListener;
+#change(Ljavax/swing/event/ChangeListener;Ljava/lang/Object;)Ljavax/swing/event/ChangeListener;

+###org/openide/util/WeakSet
@RELEASE90
+#<init>(IF)V
+#<init>(I)V
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#clear()V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#resize(I)V
+#add(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#putIfAbsent(Ljava/lang/Object;)Ljava/lang/Object;
+#clone()Ljava/lang/Object;

+###org/openide/util/io/FoldingIOException
@RELEASE90
+#<init>(Ljava/lang/Throwable;)V[deprecated]
+#printStackTrace()V
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
+#toString()Ljava/lang/String;
+#getLocalizedMessage()Ljava/lang/String;

+###org/openide/util/io/NbMarshalledObject
@RELEASE90
+#<init>(Ljava/lang/Object;)V
+#get()Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/openide/util/io/NbObjectInputStream
@RELEASE90
+#<init>(Ljava/io/InputStream;)V
+#readSafely(Ljava/io/ObjectInput;)Ljava/lang/Object;
+#skipSafely(Ljava/io/ObjectInput;)V

+###org/openide/util/io/NbObjectOutputStream
@RELEASE90
+#<init>(Ljava/io/OutputStream;)V
+#replaceObject(Ljava/lang/Object;)Ljava/lang/Object;
+#writeSafely(Ljava/io/ObjectOutput;Ljava/lang/Object;)V

+###org/openide/util/io/NullInputStream
@RELEASE90
+#<init>()V
+#read()I

+###org/openide/util/io/NullOutputStream
@RELEASE90
+#<init>()V
+#write(I)V

+###org/openide/util/io/OperationException
@RELEASE90
+#<init>(Ljava/lang/Exception;)V
+#getException()Ljava/lang/Exception;
+#getMessage()Ljava/lang/String;
+#getCause()Ljava/lang/Throwable;

+###org/openide/util/io/ReaderInputStream
@RELEASE90
+#<init>(Ljava/io/Reader;)V
+#<init>(Ljava/io/Reader;Ljava/lang/String;)V
+#read()I
+#read([BII)I
+#available()I
+#close()V

+###org/openide/util/io/SafeException
@RELEASE90
+#<init>(Ljava/lang/Exception;)V
+#getException()Ljava/lang/Exception;
+#getCause()Ljava/lang/Throwable;

+###org/openide/util/spi/MutexEventProvider
@RELEASE90
+#createMutex()Lorg/openide/util/spi/MutexImplementation;

+###org/openide/util/spi/MutexImplementation
@RELEASE90
+#isReadAccess()Z
+#isWriteAccess()Z
+#writeAccess(Ljava/lang/Runnable;)V
+#writeAccess(Lorg/openide/util/Mutex$ExceptionAction;)Ljava/lang/Object;
+#readAccess(Ljava/lang/Runnable;)V
+#readAccess(Lorg/openide/util/Mutex$ExceptionAction;)Ljava/lang/Object;
+#postReadRequest(Ljava/lang/Runnable;)V
+#postWriteRequest(Ljava/lang/Runnable;)V

+###org/openide/xml/EntityCatalog
@RELEASE90
+#getDefault()Lorg/openide/xml/EntityCatalog;

+###org/openide/xml/XMLUtil
@RELEASE90
+#createXMLReader()Lorg/xml/sax/XMLReader;
+#createXMLReader(Z)Lorg/xml/sax/XMLReader;
+#createXMLReader(ZZ)Lorg/xml/sax/XMLReader;
+#createDocument(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Document;
+#parse(Lorg/xml/sax/InputSource;ZZLorg/xml/sax/ErrorHandler;Lorg/xml/sax/EntityResolver;)Lorg/w3c/dom/Document;
+#write(Lorg/w3c/dom/Document;Ljava/io/OutputStream;Ljava/lang/String;)V
+#validate(Lorg/w3c/dom/Element;Ljavax/xml/validation/Schema;)V
+#toAttributeValue(Ljava/lang/String;)Ljava/lang/String;
+#toElementContent(Ljava/lang/String;)Ljava/lang/String;
+#toHex([BII)Ljava/lang/String;
+#fromHex([CII)[B
+#appendChildElement(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;[Ljava/lang/String;)V
+#findSubElements(Lorg/w3c/dom/Element;)Ljava/util/List;
+#findElement(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Element;
+#findText(Lorg/w3c/dom/Node;)Ljava/lang/String;
+#translateXML(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/Element;
+#copyDocument(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;Ljava/lang/String;)V
+#defaultErrorHandler()Lorg/xml/sax/ErrorHandler;
