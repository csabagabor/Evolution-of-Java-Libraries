
+###org/sqlite/DB$ProgressObserver
@3.7.2
+#progress(II)V
@3.8.5-pre1
-###org/sqlite/DB$ProgressObserver

+###org/sqlite/ExtendedCommand$BackupCommand
@3.7.2
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#parse(Ljava/lang/String;)Lorg/sqlite/ExtendedCommand$BackupCommand;
+#execute(Lorg/sqlite/DB;)V
@3.8.5-pre1
+#execute(Lorg/sqlite/core/DB;)V
-#execute(Lorg/sqlite/DB;)V

+###org/sqlite/ExtendedCommand$RestoreCommand
@3.7.2
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#parse(Ljava/lang/String;)Lorg/sqlite/ExtendedCommand$RestoreCommand;
+#execute(Lorg/sqlite/DB;)V
@3.8.5-pre1
+#execute(Lorg/sqlite/core/DB;)V
-#execute(Lorg/sqlite/DB;)V

+###org/sqlite/ExtendedCommand$SQLExtension
@3.7.2
+#execute(Lorg/sqlite/DB;)V
@3.8.5-pre1
+#execute(Lorg/sqlite/core/DB;)V
-#execute(Lorg/sqlite/DB;)V

+###org/sqlite/ExtendedCommand
@3.7.2
+#<init>()V
+#parse(Ljava/lang/String;)Lorg/sqlite/ExtendedCommand$SQLExtension;
+#removeQuotation(Ljava/lang/String;)Ljava/lang/String;

+###org/sqlite/Function$Aggregate
@3.5.7
+#<init>()V
+#clone()Ljava/lang/Object;

+###org/sqlite/Function
@3.5.7
+#<init>()V
+#create(Ljava/sql/Connection;Ljava/lang/String;Lorg/sqlite/Function;)V
+#destroy(Ljava/sql/Connection;Ljava/lang/String;)V
@3.25.2
+#create(Ljava/sql/Connection;Ljava/lang/String;Lorg/sqlite/Function;I)V
@3.30.1
+#create(Ljava/sql/Connection;Ljava/lang/String;Lorg/sqlite/Function;II)V
+#destroy(Ljava/sql/Connection;Ljava/lang/String;I)V

+###org/sqlite/javax/SQLiteConnectionPoolDataSource
@3.7.15-M1
+#<init>()V
+#<init>(Lorg/sqlite/SQLiteConfig;)V
+#getPooledConnection()Ljavax/sql/PooledConnection;
+#getPooledConnection(Ljava/lang/String;Ljava/lang/String;)Ljavax/sql/PooledConnection;

+###org/sqlite/javax/SQLitePooledConnection
@3.7.15-M1
+#close()V
+#getConnection()Ljava/sql/Connection;
+#addConnectionEventListener(Ljavax/sql/ConnectionEventListener;)V
+#removeConnectionEventListener(Ljavax/sql/ConnectionEventListener;)V
+#addStatementEventListener(Ljavax/sql/StatementEventListener;)V
+#removeStatementEventListener(Ljavax/sql/StatementEventListener;)V
@3.8.5-pre1
-#addStatementEventListener(Ljavax/sql/StatementEventListener;)V
-#removeStatementEventListener(Ljavax/sql/StatementEventListener;)V
@3.25.2
+#getPhysicalConn()Lorg/sqlite/SQLiteConnection;
+#getListeners()Ljava/util/List;

+###org/sqlite/JDBC
@3.5.7
+#<init>()V
+#getMajorVersion()I
+#getMinorVersion()I
+#jdbcCompliant()Z
+#acceptsURL(Ljava/lang/String;)Z
+#getPropertyInfo(Ljava/lang/String;Ljava/util/Properties;)[Ljava/sql/DriverPropertyInfo;
+#connect(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
@3.7.2
+#isValidURL(Ljava/lang/String;)Z
+#createConnection(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
@3.8.5-pre1
+#getParentLogger()Ljava/util/logging/Logger;
@3.25.2
+#createConnection(Ljava/lang/String;Ljava/util/Properties;)Lorg/sqlite/SQLiteConnection;
-#createConnection(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;

+###org/sqlite/OSInfo
@3.6.10
+#<init>()V
+#main([Ljava/lang/String;)V
+#getNativeLibFolderPathForCurrentOS()Ljava/lang/String;
+#getOSName()Ljava/lang/String;
+#getArchName()Ljava/lang/String;
+#translateOSNameToFolderName(Ljava/lang/String;)Ljava/lang/String;
+#translateArchNameToFolderName(Ljava/lang/String;)Ljava/lang/String;
@3.8.5-pre1
-###org/sqlite/OSInfo

+###org/sqlite/ResourceFinder
@3.6.13
+#<init>()V
+#find(Ljava/lang/Class;Ljava/lang/String;)Ljava/net/URL;
+#find(Ljava/lang/ClassLoader;Ljava/lang/Package;Ljava/lang/String;)Ljava/net/URL;
+#find(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;
@3.8.5-pre1
-###org/sqlite/ResourceFinder

+###org/sqlite/SQLite
@3.5.9-universal
+#<init>()V
+#<init>(Z)V
+#<init>(II)V
+#<init>(IIZ)V
+#main([Ljava/lang/String;)V
@3.14.2
-###org/sqlite/SQLite

+###org/sqlite/SQLiteConfig$DateClass
@3.7.15-M1
+#values()[Lorg/sqlite/SQLiteConfig$DateClass;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$DateClass;
+#getValue()Ljava/lang/String;
+#getDateClass(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$DateClass;

+###org/sqlite/SQLiteConfig$DatePrecision
@3.7.15-M1
+#values()[Lorg/sqlite/SQLiteConfig$DatePrecision;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$DatePrecision;
+#getValue()Ljava/lang/String;
+#getPrecision(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$DatePrecision;

+###org/sqlite/SQLiteConfig$Encoding
@3.6.20
+#values()[Lorg/sqlite/SQLiteConfig$Encoding;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$Encoding;
+#getValue()Ljava/lang/String;
@3.7.15-M1
+#getEncoding(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$Encoding;

+###org/sqlite/SQLiteConfig$JournalMode
@3.6.20
+#values()[Lorg/sqlite/SQLiteConfig$JournalMode;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$JournalMode;
+#getValue()Ljava/lang/String;

+###org/sqlite/SQLiteConfig$LockingMode
@3.6.20
+#values()[Lorg/sqlite/SQLiteConfig$LockingMode;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$LockingMode;
+#getValue()Ljava/lang/String;

+###org/sqlite/SQLiteConfig$SynchronousMode
@3.6.20
+#values()[Lorg/sqlite/SQLiteConfig$SynchronousMode;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$SynchronousMode;
+#getValue()Ljava/lang/String;

+###org/sqlite/SQLiteConfig$TempStore
@3.6.20
+#values()[Lorg/sqlite/SQLiteConfig$TempStore;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$TempStore;
+#getValue()Ljava/lang/String;

+###org/sqlite/SQLiteConfig$TransactionMode
@3.7.15-M1
+#values()[Lorg/sqlite/SQLiteConfig$TransactionMode;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$TransactionMode;
+#getValue()Ljava/lang/String;
+#getMode(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$TransactionMode;

+###org/sqlite/SQLiteConfig
@3.6.20
+#<init>()V
+#<init>(Ljava/util/Properties;)V
+#apply(Ljava/sql/Connection;)V
+#isEnabledSharedCache()Z
+#isEnabledLoadExtension()Z
+#getOpenModeFlags()I
+#setPragma(Lorg/sqlite/SQLiteConfig$Pragma;Ljava/lang/String;)V
+#toProperties()Ljava/util/Properties;
+#setOpenMode(Lorg/sqlite/SQLiteOpenMode;)V
+#resetOpenMode(Lorg/sqlite/SQLiteOpenMode;)V
+#setSharedCache(Z)V
+#enableLoadExtension(Z)V
+#setReadOnly(Z)V
+#setCacheSize(I)V
+#enableCaseSensitiveLike(Z)V
+#enableCountChanges(Z)V
+#setDefaultCacheSize(I)V
+#enableEmptyResultCallBacks(Z)V
+#setEncoding(Lorg/sqlite/SQLiteConfig$Encoding;)V
+#enforceForeignKeys(Z)V
+#enableFullColumnNames(Z)V
+#enableFullSync(Z)V
+#incrementalVacuum(I)V
+#setJournalMode(Lorg/sqlite/SQLiteConfig$JournalMode;)V
+#setJounalSizeLimit(I)V
+#useLegacyFileFormat(Z)V
+#setLockingMode(Lorg/sqlite/SQLiteConfig$LockingMode;)V
+#setPageSize(I)V
+#setMaxPageCount(I)V
+#setReadUncommited(Z)V
+#enableRecursiveTriggers(Z)V
+#enableReverseUnorderedSelects(Z)V
+#enableShortColumnNames(Z)V
+#setSynchronous(Lorg/sqlite/SQLiteConfig$SynchronousMode;)V
+#setTempStore(Lorg/sqlite/SQLiteConfig$TempStore;)V
+#setTempStoreDirectory(Ljava/lang/String;)V
+#setUserVersion(I)V
@3.7.2
+#createConnection(Ljava/lang/String;)Ljava/sql/Connection;
@3.7.15-M1
+#setTransactionMode(Lorg/sqlite/SQLiteConfig$TransactionMode;)V
+#setTransactionMode(Ljava/lang/String;)V
+#getTransactionMode()Lorg/sqlite/SQLiteConfig$TransactionMode;
+#setDatePrecision(Ljava/lang/String;)V
+#setDateClass(Ljava/lang/String;)V
+#setDateStringFormat(Ljava/lang/String;)V
+#setBusyTimeout(Ljava/lang/String;)V
@3.21.0.1
+#setHexKeyMode(Lorg/sqlite/SQLiteConfig$HexKeyMode;)V
+#setApplicationId(I)V
@3.25.2
+#newConnectionConfig()Lorg/sqlite/SQLiteConnectionConfig;
+#setBusyTimeout(I)V
+#getBusyTimeout()I
-#setBusyTimeout(Ljava/lang/String;)V
@3.30.1
*#enableCountChanges(Z)V[deprecated]
+#deferForeignKeys(Z)V
*#enableEmptyResultCallBacks(Z)V[deprecated]
*#enableFullColumnNames(Z)V[deprecated]
@3.39.3.0
+#isExplicitReadOnly()Z
+#setExplicitReadOnly(Z)V

+###org/sqlite/SQLiteConnection
@3.7.15-M1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#getBusyTimeout()I
+#setBusyTimeout(I)V
+#finalize()V
+#close()V
+#isClosed()Z
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
+#getHoldability()I
+#setHoldability(I)V
+#getTransactionIsolation()I
+#setTransactionIsolation(I)V
+#getTypeMap()Ljava/util/Map;
+#setTypeMap(Ljava/util/Map;)V
+#isReadOnly()Z
+#setReadOnly(Z)V
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
+#clearWarnings()V
+#getWarnings()Ljava/sql/SQLWarning;
+#getAutoCommit()Z
+#setAutoCommit(Z)V
+#commit()V
+#rollback()V
+#createStatement()Ljava/sql/Statement;
+#createStatement(II)Ljava/sql/Statement;
+#createStatement(III)Ljava/sql/Statement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#rollback(Ljava/sql/Savepoint;)V
+#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;
@3.8.5-pre1
+#setSchema(Ljava/lang/String;)V
+#getSchema()Ljava/lang/String;
+#abort(Ljava/util/concurrent/Executor;)V
+#setNetworkTimeout(Ljava/util/concurrent/Executor;I)V
+#getNetworkTimeout()I
-#getBusyTimeout()I
-#setBusyTimeout(I)V
-#finalize()V
-#close()V
-#isClosed()Z
-#getCatalog()Ljava/lang/String;
-#setCatalog(Ljava/lang/String;)V
-#getHoldability()I
-#setHoldability(I)V
-#getTransactionIsolation()I
-#setTransactionIsolation(I)V
-#getTypeMap()Ljava/util/Map;
-#setTypeMap(Ljava/util/Map;)V
-#isReadOnly()Z
-#setReadOnly(Z)V
-#getMetaData()Ljava/sql/DatabaseMetaData;
-#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
-#clearWarnings()V
-#getWarnings()Ljava/sql/SQLWarning;
-#getAutoCommit()Z
-#setAutoCommit(Z)V
-#commit()V
-#rollback()V
-#createStatement()Ljava/sql/Statement;
-#createStatement(II)Ljava/sql/Statement;
-#createStatement(III)Ljava/sql/Statement;
-#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
-#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
-#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
-#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
-#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
-#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
-#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
-#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
-#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
-#setSavepoint()Ljava/sql/Savepoint;
-#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
-#releaseSavepoint(Ljava/sql/Savepoint;)V
-#rollback(Ljava/sql/Savepoint;)V
-#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;
@3.25.2
+#<init>(Lorg/sqlite/core/DB;)V
+#getConnectionConfig()Lorg/sqlite/SQLiteConnectionConfig;
+#getSQLiteDatabaseMetaData()Lorg/sqlite/core/CoreDatabaseMetaData;
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#getUrl()Ljava/lang/String;
+#getTransactionIsolation()I
+#setTransactionIsolation(I)V
+#getDatabase()Lorg/sqlite/core/DB;
+#getAutoCommit()Z
+#setAutoCommit(Z)V
+#getBusyTimeout()I
+#setBusyTimeout(I)V
+#isClosed()Z
+#close()V
+#libversion()Ljava/lang/String;
+#commit()V
+#rollback()V
@3.31.1
+#addUpdateListener(Lorg/sqlite/SQLiteUpdateListener;)V
+#removeUpdateListener(Lorg/sqlite/SQLiteUpdateListener;)V
+#addCommitListener(Lorg/sqlite/SQLiteCommitListener;)V
+#removeCommitListener(Lorg/sqlite/SQLiteCommitListener;)V
@3.32.3.3
+#setLimit(Lorg/sqlite/SQLiteLimits;I)V
+#getLimit(Lorg/sqlite/SQLiteLimits;)V
@3.39.3.0
+#getCurrentTransactionMode()Lorg/sqlite/SQLiteConfig$TransactionMode;
+#setCurrentTransactionMode(Lorg/sqlite/SQLiteConfig$TransactionMode;)V
+#setFirstStatementExecuted(Z)V
+#isFirstStatementExecuted()Z

+###org/sqlite/SQLiteDataSource
@3.7.2
+#<init>()V
+#<init>(Lorg/sqlite/SQLiteConfig;)V
+#setConfig(Lorg/sqlite/SQLiteConfig;)V
+#getConfig()Lorg/sqlite/SQLiteConfig;
+#setUrl(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#setSharedCache(Z)V
+#setLoadExtension(Z)V
+#setReadOnly(Z)V
+#setCacheSize(I)V
+#setCaseSensitiveLike(Z)V
+#setCouncChanges(Z)V
+#setDefaultCacheSize(I)V
+#setEncoding(Ljava/lang/String;)V
+#setEnforceForeinKeys(Z)V
+#setFullColumnNames(Z)V
+#setFullSync(Z)V
+#setIncrementalVacuum(I)V
+#setJournalMode(Ljava/lang/String;)V
+#setJournalSizeLimit(I)V
+#setLegacyFileFormat(Z)V
+#setLockingMode(Ljava/lang/String;)V
+#setPageSize(I)V
+#setMaxPageCount(I)V
+#setReadUncommited(Z)V
+#setRecursiveTriggers(Z)V
+#setReverseUnorderedSelects(Z)V
+#setShortColumnNames(Z)V
+#setSynchronous(Ljava/lang/String;)V
+#setTempStore(Ljava/lang/String;)V
+#setTempStoreDirectory(Ljava/lang/String;)V
+#setUserVersion(I)V
+#getConnection()Ljava/sql/Connection;
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
+#getLogWriter()Ljava/io/PrintWriter;
+#getLoginTimeout()I
+#setLogWriter(Ljava/io/PrintWriter;)V
+#setLoginTimeout(I)V
+#isWrapperFor(Ljava/lang/Class;)Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@3.7.15-M1
+#setDatabaseName(Ljava/lang/String;)V
+#getDatabaseName()Ljava/lang/String;
+#setTransactionMode(Ljava/lang/String;)V
+#getParentLogger()Ljava/util/logging/Logger;
@3.14.2
+#setCountChanges(Z)V
+#setEnforceForeignKeys(Z)V
-#setCouncChanges(Z)V
-#setEnforceForeinKeys(Z)V
@3.25.2
+#getConnection(Ljava/lang/String;Ljava/lang/String;)Lorg/sqlite/SQLiteConnection;

+###org/sqlite/SQLiteErrorCode
@3.6.13
+#getErrorCode(I)Lorg/sqlite/SQLiteErrorCode;
+#toString()Ljava/lang/String;
+#values()[Lorg/sqlite/SQLiteErrorCode;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteErrorCode;

+###org/sqlite/SQLiteJDBCLoader
@3.6.10
+#<init>()V
+#initialize()Z
+#isNativeMode()Z
+#getVersion()Ljava/lang/String;
@3.6.20
+#getMajorVersion()I
+#getMinorVersion()I
@3.7.2
+#isPureJavaMode()Z
@3.30.1
*#isPureJavaMode()Z[deprecated]

+###org/sqlite/SQLiteOpenMode
@3.6.20
+#values()[Lorg/sqlite/SQLiteOpenMode;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteOpenMode;

+###org/ibex/nestedvm/ClassFileCompiler
@3.5.9-universal
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/io/OutputStream;)V
+#<init>(Lorg/ibex/nestedvm/util/Seekable;Ljava/lang/String;Ljava/io/OutputStream;)V
+#<init>(Lorg/ibex/nestedvm/util/Seekable;Ljava/lang/String;Ljava/io/File;)V
+#setWarnWriter(Ljava/io/PrintStream;)V
@3.6.3
-###org/ibex/nestedvm/ClassFileCompiler

+###org/ibex/nestedvm/Compiler
@3.5.9-universal
+#setSource(Ljava/lang/String;)V
+#main([Ljava/lang/String;)V
+#<init>(Lorg/ibex/nestedvm/util/Seekable;Ljava/lang/String;)V
+#go()V
+#parseOptions(Ljava/lang/String;)V
@3.6.3
-###org/ibex/nestedvm/Compiler

+###org/ibex/nestedvm/Interpreter$DebugShutdownHook
@3.5.9-universal
+#<init>(Lorg/ibex/nestedvm/Interpreter;)V
+#run()V
@3.6.3
-###org/ibex/nestedvm/Interpreter$DebugShutdownHook

+###org/ibex/nestedvm/Interpreter
@3.5.9-universal
+#lookupSymbol(Ljava/lang/String;)I
+#<init>(Lorg/ibex/nestedvm/util/Seekable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;)V
+#sourceLine(I)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@3.6.3
-###org/ibex/nestedvm/Interpreter

+###org/ibex/nestedvm/JavaSourceCompiler
@3.5.9-universal
+#<init>(Lorg/ibex/nestedvm/util/Seekable;Ljava/lang/String;Ljava/io/Writer;)V
@3.6.3
-###org/ibex/nestedvm/JavaSourceCompiler

+###org/ibex/nestedvm/Runtime$CallException
@3.5.9-universal
+#<init>(Ljava/lang/String;)V
@3.6.3
-###org/ibex/nestedvm/Runtime$CallException

+###org/ibex/nestedvm/Runtime$CallJavaCB
@3.5.9-universal
+#call(IIII)I
@3.6.3
-###org/ibex/nestedvm/Runtime$CallJavaCB

+###org/ibex/nestedvm/Runtime$CPUState
@3.5.9-universal
+#<init>()V
+#dup()Lorg/ibex/nestedvm/Runtime$CPUState;
@3.6.3
-###org/ibex/nestedvm/Runtime$CPUState

+###org/ibex/nestedvm/Runtime$ErrnoException
@3.5.9-universal
+#<init>(I)V
@3.6.3
-###org/ibex/nestedvm/Runtime$ErrnoException

+###org/ibex/nestedvm/Runtime$ExecutionException
@3.5.9-universal
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;
@3.6.3
-###org/ibex/nestedvm/Runtime$ExecutionException

+###org/ibex/nestedvm/Runtime$FaultException
@3.5.9-universal
+#<init>(I)V
+#<init>(Ljava/lang/RuntimeException;)V
@3.6.3
-###org/ibex/nestedvm/Runtime$FaultException

+###org/ibex/nestedvm/Runtime$FD
@3.5.9-universal
+#<init>()V
+#setNormalizedPath(Ljava/lang/String;)V
+#getNormalizedPath()Ljava/lang/String;
+#markDeleteOnClose()V
+#isMarkedForDeleteOnClose()Z
+#read([BII)I
+#write([BII)I
+#seek(II)I
+#getdents([BII)I
+#fstat()Lorg/ibex/nestedvm/Runtime$FStat;
+#flags()I
+#close()V
@3.6.3
-###org/ibex/nestedvm/Runtime$FD

+###org/ibex/nestedvm/Runtime$FStat
@3.5.9-universal
+#<init>()V
+#mode()I
+#nlink()I
+#uid()I
+#gid()I
+#size()I
+#atime()I
+#mtime()I
+#ctime()I
+#blksize()I
+#blocks()I
+#dev()I
+#type()I
+#inode()I
@3.6.3
-###org/ibex/nestedvm/Runtime$FStat

+###org/ibex/nestedvm/Runtime$InputOutputStreamFD
@3.5.9-universal
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#flags()I
+#_close()V
+#read([BII)I
+#write([BII)I
+#_fstat()Lorg/ibex/nestedvm/Runtime$FStat;
@3.6.3
-###org/ibex/nestedvm/Runtime$InputOutputStreamFD

+###org/ibex/nestedvm/Runtime$ReadFaultException
@3.5.9-universal
+#<init>(I)V
@3.6.3
-###org/ibex/nestedvm/Runtime$ReadFaultException

+###org/ibex/nestedvm/Runtime$SecurityManager
@3.5.9-universal
+#<init>()V
+#allowRead(Ljava/io/File;)Z
+#allowWrite(Ljava/io/File;)Z
+#allowStat(Ljava/io/File;)Z
+#allowUnlink(Ljava/io/File;)Z
@3.6.3
-###org/ibex/nestedvm/Runtime$SecurityManager

+###org/ibex/nestedvm/Runtime$SeekableFD
@3.5.9-universal
+#flags()I
+#seek(II)I
+#write([BII)I
+#read([BII)I
@3.6.3
-###org/ibex/nestedvm/Runtime$SeekableFD

+###org/ibex/nestedvm/Runtime$SocketFStat
@3.5.9-universal
+#<init>()V
+#dev()I
+#type()I
+#inode()I
@3.6.3
-###org/ibex/nestedvm/Runtime$SocketFStat

+###org/ibex/nestedvm/Runtime$WriteFaultException
@3.5.9-universal
+#<init>(I)V
@3.6.3
-###org/ibex/nestedvm/Runtime$WriteFaultException

+###org/ibex/nestedvm/Runtime
@3.5.9-universal
+#getState()I
+#setSecurityManager(Lorg/ibex/nestedvm/Runtime$SecurityManager;)V
+#setCallJavaCB(Lorg/ibex/nestedvm/Runtime$CallJavaCB;)V
+#lookupSymbol(Ljava/lang/String;)I
+#copyin(I[BI)V
+#copyout([BII)V
+#memcpy(III)V
+#memset(III)V
+#memRead(I)I
+#memWrite(II)V
+#exitStatus()I
+#setUserInfo(II)V
+#getUserInfo(I)I
+#execute()Z
+#run()I
+#run(Ljava/lang/String;[Ljava/lang/String;)I
+#run([Ljava/lang/String;)I
+#run([Ljava/lang/String;[Ljava/lang/String;)I
+#start()V
+#start([Ljava/lang/String;)V
+#start([Ljava/lang/String;[Ljava/lang/String;)V
+#stop()V
+#call(Ljava/lang/String;[Ljava/lang/Object;)I
+#call(Ljava/lang/String;)I
+#call(Ljava/lang/String;I)I
+#call(Ljava/lang/String;II)I
+#call(Ljava/lang/String;[I)I
+#call(II[I)I
+#addFD(Lorg/ibex/nestedvm/Runtime$FD;)I
+#closeFD(I)Z
+#dupFD(I)I
+#sbrk(I)I
+#xmalloc(I)I
+#xrealloc(II)I
+#realloc(II)I
+#malloc(I)I
+#free(I)V
+#strdup(Ljava/lang/String;)I
+#utfstring(I)Ljava/lang/String;
+#cstring(I)Ljava/lang/String;
@3.6.3
-###org/ibex/nestedvm/Runtime

+###org/ibex/nestedvm/RuntimeCompiler
@3.5.9-universal
+#compile(Lorg/ibex/nestedvm/util/Seekable;)Ljava/lang/Class;
+#compile(Lorg/ibex/nestedvm/util/Seekable;Ljava/lang/String;)Ljava/lang/Class;
+#compile(Lorg/ibex/nestedvm/util/Seekable;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;
+#main([Ljava/lang/String;)V
@3.6.3
-###org/ibex/nestedvm/RuntimeCompiler

+###org/ibex/nestedvm/UnixRuntime$CygdriveFS
@3.5.9-universal
+#<init>()V
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$CygdriveFS

+###org/ibex/nestedvm/UnixRuntime$DevFS
@3.5.9-universal
+#<init>()V
+#open(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;II)Lorg/ibex/nestedvm/Runtime$FD;
+#stat(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)Lorg/ibex/nestedvm/Runtime$FStat;
+#mkdir(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;I)V
+#unlink(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)V
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$DevFS

+###org/ibex/nestedvm/UnixRuntime$DirFD
@3.5.9-universal
+#<init>()V
+#flags()I
+#getdents([BII)I
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$DirFD

+###org/ibex/nestedvm/UnixRuntime$ForkedProcess
@3.5.9-universal
+#<init>(Lorg/ibex/nestedvm/UnixRuntime;)V
+#run()V
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$ForkedProcess

+###org/ibex/nestedvm/UnixRuntime$FS
@3.5.9-universal
+#<init>()V
+#lstat(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)Lorg/ibex/nestedvm/Runtime$FStat;
+#open(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;II)Lorg/ibex/nestedvm/Runtime$FD;
+#stat(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)Lorg/ibex/nestedvm/Runtime$FStat;
+#mkdir(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;I)V
+#unlink(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)V
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$FS

+###org/ibex/nestedvm/UnixRuntime$GlobalState
@3.5.9-universal
+#<init>()V
+#<init>(I)V
+#<init>(IZ)V
+#mapHostPath(Ljava/lang/String;)Ljava/lang/String;
+#mapHostPath(Ljava/io/File;)Ljava/lang/String;
+#getMount(Ljava/lang/String;)Lorg/ibex/nestedvm/UnixRuntime$FS;
+#addMount(Ljava/lang/String;Lorg/ibex/nestedvm/UnixRuntime$FS;)V
+#removeMount(Lorg/ibex/nestedvm/UnixRuntime$FS;)V
+#removeMount(Ljava/lang/String;)V
+#open(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;II)Lorg/ibex/nestedvm/Runtime$FD;
+#stat(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)Lorg/ibex/nestedvm/Runtime$FStat;
+#lstat(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)Lorg/ibex/nestedvm/Runtime$FStat;
+#mkdir(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;I)V
+#unlink(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)V
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$GlobalState

+###org/ibex/nestedvm/UnixRuntime$HostFS$HostDirFD
@3.5.9-universal
+#<init>(Lorg/ibex/nestedvm/UnixRuntime$HostFS;Ljava/io/File;)V
+#size()I
+#name(I)Ljava/lang/String;
+#inode(I)I
+#parentInode()I
+#myInode()I
+#myDev()I
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$HostFS$HostDirFD

+###org/ibex/nestedvm/UnixRuntime$HostFS
@3.5.9-universal
+#getRoot()Ljava/io/File;
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/File;)V
+#open(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;II)Lorg/ibex/nestedvm/Runtime$FD;
+#unlink(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)V
+#stat(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)Lorg/ibex/nestedvm/Runtime$FStat;
+#mkdir(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;I)V
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$HostFS

+###org/ibex/nestedvm/UnixRuntime$Pipe$Reader
@3.5.9-universal
+#<init>(Lorg/ibex/nestedvm/UnixRuntime$Pipe;)V
+#read([BII)I
+#flags()I
+#_close()V
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$Pipe$Reader

+###org/ibex/nestedvm/UnixRuntime$Pipe$Writer
@3.5.9-universal
+#<init>(Lorg/ibex/nestedvm/UnixRuntime$Pipe;)V
+#write([BII)I
+#flags()I
+#_close()V
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$Pipe$Writer

+###org/ibex/nestedvm/UnixRuntime$ResourceFS
@3.5.9-universal
+#<init>()V
+#lstat(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)Lorg/ibex/nestedvm/Runtime$FStat;
+#mkdir(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;I)V
+#unlink(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)V
+#stat(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;)Lorg/ibex/nestedvm/Runtime$FStat;
+#open(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;II)Lorg/ibex/nestedvm/Runtime$FD;
@3.6.3
-###org/ibex/nestedvm/UnixRuntime$ResourceFS

+###org/ibex/nestedvm/UnixRuntime
@3.5.9-universal
+#getPid()I
+#setGlobalState(Lorg/ibex/nestedvm/UnixRuntime$GlobalState;)V
+#runAndExec(Lorg/ibex/nestedvm/UnixRuntime;Ljava/lang/String;[Ljava/lang/String;)I
+#runAndExec(Lorg/ibex/nestedvm/UnixRuntime;[Ljava/lang/String;)I
+#executeAndExec(Lorg/ibex/nestedvm/UnixRuntime;)I
+#runtimeCompile(Lorg/ibex/nestedvm/util/Seekable;Ljava/lang/String;)Ljava/lang/Class;
+#execScript(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)I
+#execClass(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/String;)I
@3.6.3
-###org/ibex/nestedvm/UnixRuntime

+###org/ibex/nestedvm/UsermodeConstants
@3.5.9-universal
@3.6.3
-###org/ibex/nestedvm/UsermodeConstants

+###org/ibex/nestedvm/util/ELF$ELFException
@3.5.9-universal
@3.6.3
-###org/ibex/nestedvm/util/ELF$ELFException

+###org/ibex/nestedvm/util/ELF$ELFHeader
@3.5.9-universal
@3.6.3
-###org/ibex/nestedvm/util/ELF$ELFHeader

+###org/ibex/nestedvm/util/ELF$ELFIdent
@3.5.9-universal
@3.6.3
-###org/ibex/nestedvm/util/ELF$ELFIdent

+###org/ibex/nestedvm/util/ELF$PHeader
@3.5.9-universal
+#writable()Z
+#getInputStream()Ljava/io/InputStream;
@3.6.3
-###org/ibex/nestedvm/util/ELF$PHeader

+###org/ibex/nestedvm/util/ELF$SHeader
@3.5.9-universal
+#getInputStream()Ljava/io/InputStream;
+#isText()Z
+#isData()Z
+#isBSS()Z
@3.6.3
-###org/ibex/nestedvm/util/ELF$SHeader

+###org/ibex/nestedvm/util/ELF$Symbol
@3.5.9-universal
@3.6.3
-###org/ibex/nestedvm/util/ELF$Symbol

+###org/ibex/nestedvm/util/ELF$Symtab
@3.5.9-universal
+#getSymbol(Ljava/lang/String;)Lorg/ibex/nestedvm/util/ELF$Symbol;
+#getGlobalSymbol(Ljava/lang/String;)Lorg/ibex/nestedvm/util/ELF$Symbol;
@3.6.3
-###org/ibex/nestedvm/util/ELF$Symtab

+###org/ibex/nestedvm/util/ELF
@3.5.9-universal
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/ibex/nestedvm/util/Seekable;)V
+#sectionWithName(Ljava/lang/String;)Lorg/ibex/nestedvm/util/ELF$SHeader;
+#getSymtab()Lorg/ibex/nestedvm/util/ELF$Symtab;
@3.6.3
-###org/ibex/nestedvm/util/ELF

+###org/ibex/nestedvm/util/InodeCache
@3.5.9-universal
+#<init>()V
+#<init>(I)V
+#clear()V
+#get(Ljava/lang/Object;)S
+#reverse(S)Ljava/lang/Object;
@3.6.3
-###org/ibex/nestedvm/util/InodeCache

+###org/ibex/nestedvm/util/Platform
@3.5.9-universal
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#atomicCreateFile(Ljava/io/File;)Z
+#lockFile(Lorg/ibex/nestedvm/util/Seekable;Ljava/io/RandomAccessFile;JJZ)Lorg/ibex/nestedvm/util/Seekable$Lock;
+#socketHalfClose(Ljava/net/Socket;Z)V
+#socketSetKeepAlive(Ljava/net/Socket;Z)V
+#inetAddressFromBytes([B)Ljava/net/InetAddress;
+#timeZoneGetDisplayName(Ljava/util/TimeZone;ZZLjava/util/Locale;)Ljava/lang/String;
+#timeZoneGetDisplayName(Ljava/util/TimeZone;ZZ)Ljava/lang/String;
+#setFileLength(Ljava/io/RandomAccessFile;I)V
+#listRoots()[Ljava/io/File;
+#getRoot(Ljava/io/File;)Ljava/io/File;
@3.6.3
-###org/ibex/nestedvm/util/Platform

+###org/ibex/nestedvm/util/Seekable$ByteArray
@3.5.9-universal
+#<init>([BZ)V
+#read([BII)I
+#write([BII)I
+#length()I
+#pos()I
+#seek(I)V
+#close()V
@3.6.3
-###org/ibex/nestedvm/util/Seekable$ByteArray

+###org/ibex/nestedvm/util/Seekable$File
@3.5.9-universal
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/io/File;ZZ)V
+#read([BII)I
+#write([BII)I
+#sync()V
+#seek(I)V
+#pos()I
+#length()I
+#close()V
+#resize(J)V
+#equals(Ljava/lang/Object;)Z
+#lock(JJZ)Lorg/ibex/nestedvm/util/Seekable$Lock;
@3.6.3
-###org/ibex/nestedvm/util/Seekable$File

+###org/ibex/nestedvm/util/Seekable$InputStream
@3.5.9-universal
+#<init>(Ljava/io/InputStream;)V
+#read([BII)I
+#length()I
+#write([BII)I
+#seek(I)V
+#pos()I
+#close()V
@3.6.3
-###org/ibex/nestedvm/util/Seekable$InputStream

+###org/ibex/nestedvm/util/Seekable$Lock
@3.5.9-universal
+#<init>()V
+#seekable()Lorg/ibex/nestedvm/util/Seekable;
+#isShared()Z
+#isValid()Z
+#release()V
+#position()J
+#size()J
+#setOwner(Ljava/lang/Object;)V
+#getOwner()Ljava/lang/Object;
+#contains(II)Z
+#contained(II)Z
+#overlaps(II)Z
@3.6.3
-###org/ibex/nestedvm/util/Seekable$Lock

+###org/ibex/nestedvm/util/Seekable
@3.5.9-universal
+#<init>()V
+#read([BII)I
+#write([BII)I
+#length()I
+#seek(I)V
+#close()V
+#pos()I
+#sync()V
+#resize(J)V
+#lock(JJZ)Lorg/ibex/nestedvm/util/Seekable$Lock;
+#read()I
+#tryReadFully([BII)I
@3.6.3
-###org/ibex/nestedvm/util/Seekable

+###org/ibex/nestedvm/util/Sort$Comparable
@3.5.9-universal
+#compareTo(Ljava/lang/Object;)I
@3.6.3
-###org/ibex/nestedvm/util/Sort$Comparable

+###org/ibex/nestedvm/util/Sort$CompareFunc
@3.5.9-universal
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@3.6.3
-###org/ibex/nestedvm/util/Sort$CompareFunc

+###org/ibex/nestedvm/util/Sort
@3.5.9-universal
+#sort([Lorg/ibex/nestedvm/util/Sort$Comparable;)V
+#sort([Ljava/lang/Object;Lorg/ibex/nestedvm/util/Sort$CompareFunc;)V
@3.6.3
-###org/ibex/nestedvm/util/Sort

+###org/sqlite/SQLiteCommitListener
@3.31.1
+#onCommit()V
+#onRollback()V

+###org/sqlite/BusyHandler
@3.14.2
+#<init>()V
+#setHandler(Ljava/sql/Connection;Lorg/sqlite/BusyHandler;)V
+#clearHandler(Ljava/sql/Connection;)V

+###org/sqlite/SQLiteConfig$HexKeyMode
@3.21.0.1
+#values()[Lorg/sqlite/SQLiteConfig$HexKeyMode;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$HexKeyMode;
+#getValue()Ljava/lang/String;

+###org/sqlite/util/ProcessRunner
@3.39.2.0
+#<init>()V

+###org/sqlite/util/ResourceFinder
@3.8.5-pre1
+#<init>()V
+#find(Ljava/lang/Class;Ljava/lang/String;)Ljava/net/URL;
+#find(Ljava/lang/ClassLoader;Ljava/lang/Package;Ljava/lang/String;)Ljava/net/URL;
+#find(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;

+###org/sqlite/util/OSInfo
@3.8.5-pre1
+#<init>()V
+#main([Ljava/lang/String;)V
+#getNativeLibFolderPathForCurrentOS()Ljava/lang/String;
+#getOSName()Ljava/lang/String;
+#getArchName()Ljava/lang/String;
+#translateOSNameToFolderName(Ljava/lang/String;)Ljava/lang/String;
+#translateArchNameToFolderName(Ljava/lang/String;)Ljava/lang/String;
@3.8.9.1
-#translateOSNameToFolderName(Ljava/lang/String;)Ljava/lang/String;
-#translateArchNameToFolderName(Ljava/lang/String;)Ljava/lang/String;
@3.16.1
+#isAndroid()Z
@3.31.1
+#isAlpine()Z
@3.39.2.0
+#isMusl()Z
-#isAlpine()Z
@3.40.1.0
+#isAndroidRuntime()Z
+#isAndroidTermux()Z

+###org/sqlite/util/StringUtils
@3.8.9
+#<init>()V
+#join(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;

+###org/sqlite/util/QueryUtils
@3.39.4.0
+#<init>()V
+#valuesQuery(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;

+###org/sqlite/ProgressHandler
@3.14.2
+#<init>()V
+#setHandler(Ljava/sql/Connection;ILorg/sqlite/ProgressHandler;)V
+#clearHandler(Ljava/sql/Connection;)V

+###org/sqlite/SQLiteUpdateListener$Type
@3.31.1
+#values()[Lorg/sqlite/SQLiteUpdateListener$Type;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteUpdateListener$Type;

+###org/sqlite/SQLiteLimits
@3.32.3.3
+#values()[Lorg/sqlite/SQLiteLimits;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteLimits;
+#getId()I

+###org/sqlite/Function$Window
@3.27.2
+#<init>()V

+###org/sqlite/SQLiteException
@3.14.2
+#<init>(Ljava/lang/String;Lorg/sqlite/SQLiteErrorCode;)V
+#getResultCode()Lorg/sqlite/SQLiteErrorCode;

+###org/sqlite/SQLiteUpdateListener
@3.31.1
+#onUpdate(Lorg/sqlite/SQLiteUpdateListener$Type;Ljava/lang/String;Ljava/lang/String;J)V

+###org/sqlite/jdbc3/JDBC3Statement$SQLCallable
@3.39.3.0
+#call()Ljava/lang/Object;

+###org/sqlite/jdbc3/JDBC3DatabaseMetaData
@3.8.5-pre1
+#getConnection()Ljava/sql/Connection;
+#getDatabaseMajorVersion()I
+#getDatabaseMinorVersion()I
+#getDriverMajorVersion()I
+#getDriverMinorVersion()I
+#getJDBCMajorVersion()I
+#getJDBCMinorVersion()I
+#getDefaultTransactionIsolation()I
+#getMaxBinaryLiteralLength()I
+#getMaxCatalogNameLength()I
+#getMaxCharLiteralLength()I
+#getMaxColumnNameLength()I
+#getMaxColumnsInGroupBy()I
+#getMaxColumnsInIndex()I
+#getMaxColumnsInOrderBy()I
+#getMaxColumnsInSelect()I
+#getMaxColumnsInTable()I
+#getMaxConnections()I
+#getMaxCursorNameLength()I
+#getMaxIndexLength()I
+#getMaxProcedureNameLength()I
+#getMaxRowSize()I
+#getMaxSchemaNameLength()I
+#getMaxStatementLength()I
+#getMaxStatements()I
+#getMaxTableNameLength()I
+#getMaxTablesInSelect()I
+#getMaxUserNameLength()I
+#getResultSetHoldability()I
+#getSQLStateType()I
+#getDatabaseProductName()Ljava/lang/String;
+#getDatabaseProductVersion()Ljava/lang/String;
+#getDriverName()Ljava/lang/String;
+#getDriverVersion()Ljava/lang/String;
+#getExtraNameCharacters()Ljava/lang/String;
+#getCatalogSeparator()Ljava/lang/String;
+#getCatalogTerm()Ljava/lang/String;
+#getSchemaTerm()Ljava/lang/String;
+#getProcedureTerm()Ljava/lang/String;
+#getSearchStringEscape()Ljava/lang/String;
+#getIdentifierQuoteString()Ljava/lang/String;
+#getSQLKeywords()Ljava/lang/String;
+#getNumericFunctions()Ljava/lang/String;
+#getStringFunctions()Ljava/lang/String;
+#getSystemFunctions()Ljava/lang/String;
+#getTimeDateFunctions()Ljava/lang/String;
+#getURL()Ljava/lang/String;
+#getUserName()Ljava/lang/String;
+#allProceduresAreCallable()Z
+#allTablesAreSelectable()Z
+#dataDefinitionCausesTransactionCommit()Z
+#dataDefinitionIgnoredInTransactions()Z
+#doesMaxRowSizeIncludeBlobs()Z
+#deletesAreDetected(I)Z
+#insertsAreDetected(I)Z
+#isCatalogAtStart()Z
+#locatorsUpdateCopy()Z
+#nullPlusNonNullIsNull()Z
+#nullsAreSortedAtEnd()Z
+#nullsAreSortedAtStart()Z
+#nullsAreSortedHigh()Z
+#nullsAreSortedLow()Z
+#othersDeletesAreVisible(I)Z
+#othersInsertsAreVisible(I)Z
+#othersUpdatesAreVisible(I)Z
+#ownDeletesAreVisible(I)Z
+#ownInsertsAreVisible(I)Z
+#ownUpdatesAreVisible(I)Z
+#storesLowerCaseIdentifiers()Z
+#storesLowerCaseQuotedIdentifiers()Z
+#storesMixedCaseIdentifiers()Z
+#storesMixedCaseQuotedIdentifiers()Z
+#storesUpperCaseIdentifiers()Z
+#storesUpperCaseQuotedIdentifiers()Z
+#supportsAlterTableWithAddColumn()Z
+#supportsAlterTableWithDropColumn()Z
+#supportsANSI92EntryLevelSQL()Z
+#supportsANSI92FullSQL()Z
+#supportsANSI92IntermediateSQL()Z
+#supportsBatchUpdates()Z
+#supportsCatalogsInDataManipulation()Z
+#supportsCatalogsInIndexDefinitions()Z
+#supportsCatalogsInPrivilegeDefinitions()Z
+#supportsCatalogsInProcedureCalls()Z
+#supportsCatalogsInTableDefinitions()Z
+#supportsColumnAliasing()Z
+#supportsConvert()Z
+#supportsConvert(II)Z
+#supportsCorrelatedSubqueries()Z
+#supportsDataDefinitionAndDataManipulationTransactions()Z
+#supportsDataManipulationTransactionsOnly()Z
+#supportsDifferentTableCorrelationNames()Z
+#supportsExpressionsInOrderBy()Z
+#supportsMinimumSQLGrammar()Z
+#supportsCoreSQLGrammar()Z
+#supportsExtendedSQLGrammar()Z
+#supportsLimitedOuterJoins()Z
+#supportsFullOuterJoins()Z
+#supportsGetGeneratedKeys()Z
+#supportsGroupBy()Z
+#supportsGroupByBeyondSelect()Z
+#supportsGroupByUnrelated()Z
+#supportsIntegrityEnhancementFacility()Z
+#supportsLikeEscapeClause()Z
+#supportsMixedCaseIdentifiers()Z
+#supportsMixedCaseQuotedIdentifiers()Z
+#supportsMultipleOpenResults()Z
+#supportsMultipleResultSets()Z
+#supportsMultipleTransactions()Z
+#supportsNamedParameters()Z
+#supportsNonNullableColumns()Z
+#supportsOpenCursorsAcrossCommit()Z
+#supportsOpenCursorsAcrossRollback()Z
+#supportsOpenStatementsAcrossCommit()Z
+#supportsOpenStatementsAcrossRollback()Z
+#supportsOrderByUnrelated()Z
+#supportsOuterJoins()Z
+#supportsPositionedDelete()Z
+#supportsPositionedUpdate()Z
+#supportsResultSetConcurrency(II)Z
+#supportsResultSetHoldability(I)Z
+#supportsResultSetType(I)Z
+#supportsSavepoints()Z
+#supportsSchemasInDataManipulation()Z
+#supportsSchemasInIndexDefinitions()Z
+#supportsSchemasInPrivilegeDefinitions()Z
+#supportsSchemasInProcedureCalls()Z
+#supportsSchemasInTableDefinitions()Z
+#supportsSelectForUpdate()Z
+#supportsStatementPooling()Z
+#supportsStoredProcedures()Z
+#supportsSubqueriesInComparisons()Z
+#supportsSubqueriesInExists()Z
+#supportsSubqueriesInIns()Z
+#supportsSubqueriesInQuantifieds()Z
+#supportsTableCorrelationNames()Z
+#supportsTransactionIsolationLevel(I)Z
+#supportsTransactions()Z
+#supportsUnion()Z
+#supportsUnionAll()Z
+#updatesAreDetected(I)Z
+#usesLocalFilePerTable()Z
+#usesLocalFiles()Z
+#isReadOnly()Z
+#getAttributes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getBestRowIdentifier(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;
+#getColumnPrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getCrossReference(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSchemas()Ljava/sql/ResultSet;
+#getCatalogs()Ljava/sql/ResultSet;
+#getPrimaryKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getExportedKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getImportedKeys(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getIndexInfo(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;
+#getProcedureColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getProcedures(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSuperTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getSuperTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTablePrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTables(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;
+#getTableTypes()Ljava/sql/ResultSet;
+#getTypeInfo()Ljava/sql/ResultSet;
+#getUDTs(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;
+#getVersionColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;
+#getFunctionColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;

+###org/sqlite/jdbc3/JDBC3PreparedStatement
@3.8.5-pre1
+#clearParameters()V
+#execute()Z
+#executeQuery()Ljava/sql/ResultSet;
+#executeUpdate()I
+#addBatch()V
+#getParameterMetaData()Ljava/sql/ParameterMetaData;
+#getParameterCount()I
+#getParameterClassName(I)Ljava/lang/String;
+#getParameterTypeName(I)Ljava/lang/String;
+#getParameterType(I)I
+#getParameterMode(I)I
+#getPrecision(I)I
+#getScale(I)I
+#isNullable(I)I
+#isSigned(I)Z
+#getStatement()Ljava/sql/Statement;
+#setBigDecimal(ILjava/math/BigDecimal;)V
+#setBinaryStream(ILjava/io/InputStream;I)V
+#setAsciiStream(ILjava/io/InputStream;I)V
+#setUnicodeStream(ILjava/io/InputStream;I)V
+#setBoolean(IZ)V
+#setByte(IB)V
+#setBytes(I[B)V
+#setDouble(ID)V
+#setFloat(IF)V
+#setInt(II)V
+#setLong(IJ)V
+#setNull(II)V
+#setNull(IILjava/lang/String;)V
+#setObject(ILjava/lang/Object;)V
+#setObject(ILjava/lang/Object;I)V
+#setObject(ILjava/lang/Object;II)V
+#setShort(IS)V
+#setString(ILjava/lang/String;)V
+#setCharacterStream(ILjava/io/Reader;I)V
+#setDate(ILjava/sql/Date;)V
+#setDate(ILjava/sql/Date;Ljava/util/Calendar;)V
+#setTime(ILjava/sql/Time;)V
+#setTime(ILjava/sql/Time;Ljava/util/Calendar;)V
+#setTimestamp(ILjava/sql/Timestamp;)V
+#setTimestamp(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#setArray(ILjava/sql/Array;)V
+#setBlob(ILjava/sql/Blob;)V
+#setClob(ILjava/sql/Clob;)V
+#setRef(ILjava/sql/Ref;)V
+#setURL(ILjava/net/URL;)V
+#execute(Ljava/lang/String;)Z
+#executeUpdate(Ljava/lang/String;)I
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#addBatch(Ljava/lang/String;)V
@3.39.2.1
+#executeLargeUpdate()J
@3.39.3.0
+#execute(Ljava/lang/String;I)Z
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#executeLargeUpdate(Ljava/lang/String;)J
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J

+###org/sqlite/jdbc3/JDBC3Statement
@3.8.5-pre1
+#close()V
+#execute(Ljava/lang/String;)Z
+#executeQuery(Ljava/lang/String;Z)Ljava/sql/ResultSet;
+#executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;
+#executeUpdate(Ljava/lang/String;)I
+#getResultSet()Ljava/sql/ResultSet;
+#getUpdateCount()I
+#addBatch(Ljava/lang/String;)V
+#clearBatch()V
+#executeBatch()[I
+#setCursorName(Ljava/lang/String;)V
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#getConnection()Ljava/sql/Connection;
+#cancel()V
+#getQueryTimeout()I
+#setQueryTimeout(I)V
+#getMaxRows()I
+#setMaxRows(I)V
+#getMaxFieldSize()I
+#setMaxFieldSize(I)V
+#getFetchSize()I
+#setFetchSize(I)V
+#getFetchDirection()I
+#setFetchDirection(I)V
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#getMoreResults()Z
+#getMoreResults(I)Z
+#getResultSetConcurrency()I
+#getResultSetHoldability()I
+#getResultSetType()I
+#setEscapeProcessing(Z)V
+#execute(Ljava/lang/String;[I)Z
+#execute(Ljava/lang/String;[Ljava/lang/String;)Z
+#executeUpdate(Ljava/lang/String;I)I
+#executeUpdate(Ljava/lang/String;[I)I
+#executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I
+#execute(Ljava/lang/String;I)Z
@3.39.2.1
+#executeLargeUpdate(Ljava/lang/String;)J
+#getLargeUpdateCount()J
+#executeLargeBatch()[J
+#getLargeMaxRows()J
+#setLargeMaxRows(J)V
@3.39.3.0
+#executeLargeUpdate(Ljava/lang/String;I)J
+#executeLargeUpdate(Ljava/lang/String;[I)J
+#executeLargeUpdate(Ljava/lang/String;[Ljava/lang/String;)J

+###org/sqlite/jdbc3/JDBC3ResultSet
@3.8.5-pre1
+#findColumn(Ljava/lang/String;)I
+#next()Z
+#getType()I
+#getFetchSize()I
+#setFetchSize(I)V
+#getFetchDirection()I
+#setFetchDirection(I)V
+#isAfterLast()Z
+#isBeforeFirst()Z
+#isFirst()Z
+#isLast()Z
+#getRow()I
+#wasNull()Z
+#getBigDecimal(I)Ljava/math/BigDecimal;
+#getBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
+#getBoolean(I)Z
+#getBoolean(Ljava/lang/String;)Z
+#getBinaryStream(I)Ljava/io/InputStream;
+#getBinaryStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getByte(I)B
+#getByte(Ljava/lang/String;)B
+#getBytes(I)[B
+#getBytes(Ljava/lang/String;)[B
+#getCharacterStream(I)Ljava/io/Reader;
+#getCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#getDate(I)Ljava/sql/Date;
+#getDate(ILjava/util/Calendar;)Ljava/sql/Date;
+#getDate(Ljava/lang/String;)Ljava/sql/Date;
+#getDate(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
+#getDouble(I)D
+#getDouble(Ljava/lang/String;)D
+#getFloat(I)F
+#getFloat(Ljava/lang/String;)F
+#getInt(I)I
+#getInt(Ljava/lang/String;)I
+#getLong(I)J
+#getLong(Ljava/lang/String;)J
+#getShort(I)S
+#getShort(Ljava/lang/String;)S
+#getString(I)Ljava/lang/String;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getTime(I)Ljava/sql/Time;
+#getTime(ILjava/util/Calendar;)Ljava/sql/Time;
+#getTime(Ljava/lang/String;)Ljava/sql/Time;
+#getTime(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;
+#getTimestamp(I)Ljava/sql/Timestamp;
+#getTimestamp(ILjava/util/Calendar;)Ljava/sql/Timestamp;
+#getTimestamp(Ljava/lang/String;)Ljava/sql/Timestamp;
+#getTimestamp(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;
+#getObject(I)Ljava/lang/Object;
+#getObject(Ljava/lang/String;)Ljava/lang/Object;
+#getStatement()Ljava/sql/Statement;
+#getCursorName()Ljava/lang/String;
+#getWarnings()Ljava/sql/SQLWarning;
+#clearWarnings()V
+#getMetaData()Ljava/sql/ResultSetMetaData;
+#getCatalogName(I)Ljava/lang/String;
+#getColumnClassName(I)Ljava/lang/String;
+#getColumnCount()I
+#getColumnDisplaySize(I)I
+#getColumnLabel(I)Ljava/lang/String;
+#getColumnName(I)Ljava/lang/String;
+#getColumnType(I)I
+#getColumnTypeName(I)Ljava/lang/String;
+#getPrecision(I)I
+#getScale(I)I
+#getSchemaName(I)Ljava/lang/String;
+#getTableName(I)Ljava/lang/String;
+#isNullable(I)I
+#isAutoIncrement(I)Z
+#isCaseSensitive(I)Z
+#isCurrency(I)Z
+#isDefinitelyWritable(I)Z
+#isReadOnly(I)Z
+#isSearchable(I)Z
+#isSigned(I)Z
+#isWritable(I)Z
+#getConcurrency()I
+#rowDeleted()Z
+#rowInserted()Z
+#rowUpdated()Z
+#checkCalendar(Ljava/util/Calendar;)V
@3.39.3.0
-#checkCalendar(Ljava/util/Calendar;)V

+###org/sqlite/jdbc3/JDBC3Connection
@3.8.5-pre1
+#getCatalog()Ljava/lang/String;
+#setCatalog(Ljava/lang/String;)V
+#getHoldability()I
+#setHoldability(I)V
+#getTransactionIsolation()I
+#setTransactionIsolation(I)V
+#getTypeMap()Ljava/util/Map;
+#setTypeMap(Ljava/util/Map;)V
+#isReadOnly()Z
+#setReadOnly(Z)V
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#nativeSQL(Ljava/lang/String;)Ljava/lang/String;
+#clearWarnings()V
+#getWarnings()Ljava/sql/SQLWarning;
+#getAutoCommit()Z
+#setAutoCommit(Z)V
+#commit()V
+#rollback()V
+#createStatement()Ljava/sql/Statement;
+#createStatement(II)Ljava/sql/Statement;
+#createStatement(III)Ljava/sql/Statement;
+#prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;
+#prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;
+#prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#setSavepoint()Ljava/sql/Savepoint;
+#setSavepoint(Ljava/lang/String;)Ljava/sql/Savepoint;
+#releaseSavepoint(Ljava/sql/Savepoint;)V
+#rollback(Ljava/sql/Savepoint;)V
+#createStruct(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;
@3.25.2
-#getTransactionIsolation()I
-#setTransactionIsolation(I)V
-#getMetaData()Ljava/sql/DatabaseMetaData;
-#getAutoCommit()Z
-#setAutoCommit(Z)V
-#commit()V
-#rollback()V
@3.39.3.0
+#tryEnforceTransactionMode()V

+###org/sqlite/jdbc3/JDBC3Savepoint
@3.8.9
+#getSavepointId()I
+#getSavepointName()Ljava/lang/String;

+###org/sqlite/Collation
@3.36.0.2
+#<init>()V
+#create(Ljava/sql/Connection;Ljava/lang/String;Lorg/sqlite/Collation;)V
+#destroy(Ljava/sql/Connection;Ljava/lang/String;)V

+###org/sqlite/jdbc4/JDBC4DatabaseMetaData
@3.8.5-pre1
+#<init>(Lorg/sqlite/SQLiteConnection;)V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#getRowIdLifetime()Ljava/sql/RowIdLifetime;
+#getSchemas(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#supportsStoredFunctionsUsingCallSyntax()Z
+#autoCommitFailureClosesAllResultSets()Z
+#getClientInfoProperties()Ljava/sql/ResultSet;
+#getFunctions(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#getPseudoColumns(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
+#generatedKeyAlwaysReturned()Z

+###org/sqlite/jdbc4/JDBC4PreparedStatement
@3.8.5-pre1
+#<init>(Lorg/sqlite/SQLiteConnection;Ljava/lang/String;)V
+#setRowId(ILjava/sql/RowId;)V
+#setNString(ILjava/lang/String;)V
+#setNCharacterStream(ILjava/io/Reader;J)V
+#setNClob(ILjava/sql/NClob;)V
+#setClob(ILjava/io/Reader;J)V
+#setBlob(ILjava/io/InputStream;J)V
+#setNClob(ILjava/io/Reader;J)V
+#setSQLXML(ILjava/sql/SQLXML;)V
+#setAsciiStream(ILjava/io/InputStream;J)V
+#setBinaryStream(ILjava/io/InputStream;J)V
+#setCharacterStream(ILjava/io/Reader;J)V
+#setAsciiStream(ILjava/io/InputStream;)V
+#setBinaryStream(ILjava/io/InputStream;)V
+#setCharacterStream(ILjava/io/Reader;)V
+#setNCharacterStream(ILjava/io/Reader;)V
+#setClob(ILjava/io/Reader;)V
+#setBlob(ILjava/io/InputStream;)V
+#setNClob(ILjava/io/Reader;)V
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
@3.15.0
-#closeOnCompletion()V
-#isCloseOnCompletion()Z
@3.34.0
+#toString()Ljava/lang/String;

+###org/sqlite/jdbc4/JDBC4Connection
@3.8.5-pre1
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#getMetaData()Ljava/sql/DatabaseMetaData;
+#createStatement(III)Ljava/sql/Statement;
+#prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
+#isClosed()Z
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#createClob()Ljava/sql/Clob;
+#createBlob()Ljava/sql/Blob;
+#createNClob()Ljava/sql/NClob;
+#createSQLXML()Ljava/sql/SQLXML;
+#isValid(I)Z
+#setClientInfo(Ljava/lang/String;Ljava/lang/String;)V
+#setClientInfo(Ljava/util/Properties;)V
+#getClientInfo(Ljava/lang/String;)Ljava/lang/String;
+#getClientInfo()Ljava/util/Properties;
+#createArrayOf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Array;
@3.25.2
-#getMetaData()Ljava/sql/DatabaseMetaData;

+###org/sqlite/jdbc4/JDBC4Statement
@3.8.5-pre1
+#<init>(Lorg/sqlite/SQLiteConnection;)V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#isClosed()Z
+#setPoolable(Z)V
+#isPoolable()Z
+#closeOnCompletion()V
+#isCloseOnCompletion()Z
@3.14.2
+#close()V

+###org/sqlite/jdbc4/JDBC4ResultSet
@3.8.5-pre1
+#<init>(Lorg/sqlite/core/CoreStatement;)V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#isWrapperFor(Ljava/lang/Class;)Z
+#getRowId(I)Ljava/sql/RowId;
+#getRowId(Ljava/lang/String;)Ljava/sql/RowId;
+#updateRowId(ILjava/sql/RowId;)V
+#updateRowId(Ljava/lang/String;Ljava/sql/RowId;)V
+#getHoldability()I
+#isClosed()Z
+#updateNString(ILjava/lang/String;)V
+#updateNString(Ljava/lang/String;Ljava/lang/String;)V
+#updateNClob(ILjava/sql/NClob;)V
+#updateNClob(Ljava/lang/String;Ljava/sql/NClob;)V
+#getNClob(I)Ljava/sql/NClob;
+#getNClob(Ljava/lang/String;)Ljava/sql/NClob;
+#getSQLXML(I)Ljava/sql/SQLXML;
+#getSQLXML(Ljava/lang/String;)Ljava/sql/SQLXML;
+#updateSQLXML(ILjava/sql/SQLXML;)V
+#updateSQLXML(Ljava/lang/String;Ljava/sql/SQLXML;)V
+#getNString(I)Ljava/lang/String;
+#getNString(Ljava/lang/String;)Ljava/lang/String;
+#getNCharacterStream(I)Ljava/io/Reader;
+#getNCharacterStream(Ljava/lang/String;)Ljava/io/Reader;
+#updateNCharacterStream(ILjava/io/Reader;J)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateAsciiStream(ILjava/io/InputStream;J)V
+#updateBinaryStream(ILjava/io/InputStream;J)V
+#updateCharacterStream(ILjava/io/Reader;J)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateBlob(ILjava/io/InputStream;J)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;J)V
+#updateClob(ILjava/io/Reader;J)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNClob(ILjava/io/Reader;J)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;J)V
+#updateNCharacterStream(ILjava/io/Reader;)V
+#updateNCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateAsciiStream(ILjava/io/InputStream;)V
+#updateBinaryStream(ILjava/io/InputStream;)V
+#updateCharacterStream(ILjava/io/Reader;)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;)V
+#updateBlob(ILjava/io/InputStream;)V
+#updateBlob(Ljava/lang/String;Ljava/io/InputStream;)V
+#updateClob(ILjava/io/Reader;)V
+#updateClob(Ljava/lang/String;Ljava/io/Reader;)V
+#updateNClob(ILjava/io/Reader;)V
+#updateNClob(Ljava/lang/String;Ljava/io/Reader;)V
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getArray(I)Ljava/sql/Array;
+#getArray(Ljava/lang/String;)Ljava/sql/Array;
+#getAsciiStream(I)Ljava/io/InputStream;
+#getAsciiStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getBigDecimal(II)Ljava/math/BigDecimal;
+#getBigDecimal(Ljava/lang/String;I)Ljava/math/BigDecimal;
+#getBlob(I)Ljava/sql/Blob;
+#getBlob(Ljava/lang/String;)Ljava/sql/Blob;
+#getClob(I)Ljava/sql/Clob;
+#getClob(Ljava/lang/String;)Ljava/sql/Clob;
+#getObject(ILjava/util/Map;)Ljava/lang/Object;
+#getObject(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getRef(I)Ljava/sql/Ref;
+#getRef(Ljava/lang/String;)Ljava/sql/Ref;
+#getUnicodeStream(I)Ljava/io/InputStream;
+#getUnicodeStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getURL(I)Ljava/net/URL;
+#getURL(Ljava/lang/String;)Ljava/net/URL;
+#insertRow()V
+#moveToCurrentRow()V
+#moveToInsertRow()V
+#last()Z
+#previous()Z
+#relative(I)Z
+#absolute(I)Z
+#afterLast()V
+#beforeFirst()V
+#first()Z
+#cancelRowUpdates()V
+#deleteRow()V
+#updateArray(ILjava/sql/Array;)V
+#updateArray(Ljava/lang/String;Ljava/sql/Array;)V
+#updateAsciiStream(ILjava/io/InputStream;I)V
+#updateAsciiStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateBigDecimal(ILjava/math/BigDecimal;)V
+#updateBigDecimal(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#updateBinaryStream(ILjava/io/InputStream;I)V
+#updateBinaryStream(Ljava/lang/String;Ljava/io/InputStream;I)V
+#updateBlob(ILjava/sql/Blob;)V
+#updateBlob(Ljava/lang/String;Ljava/sql/Blob;)V
+#updateBoolean(IZ)V
+#updateBoolean(Ljava/lang/String;Z)V
+#updateByte(IB)V
+#updateByte(Ljava/lang/String;B)V
+#updateBytes(I[B)V
+#updateBytes(Ljava/lang/String;[B)V
+#updateCharacterStream(ILjava/io/Reader;I)V
+#updateCharacterStream(Ljava/lang/String;Ljava/io/Reader;I)V
+#updateClob(ILjava/sql/Clob;)V
+#updateClob(Ljava/lang/String;Ljava/sql/Clob;)V
+#updateDate(ILjava/sql/Date;)V
+#updateDate(Ljava/lang/String;Ljava/sql/Date;)V
+#updateDouble(ID)V
+#updateDouble(Ljava/lang/String;D)V
+#updateFloat(IF)V
+#updateFloat(Ljava/lang/String;F)V
+#updateInt(II)V
+#updateInt(Ljava/lang/String;I)V
+#updateLong(IJ)V
+#updateLong(Ljava/lang/String;J)V
+#updateNull(I)V
+#updateNull(Ljava/lang/String;)V
+#updateObject(ILjava/lang/Object;)V
+#updateObject(ILjava/lang/Object;I)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;)V
+#updateObject(Ljava/lang/String;Ljava/lang/Object;I)V
+#updateRef(ILjava/sql/Ref;)V
+#updateRef(Ljava/lang/String;Ljava/sql/Ref;)V
+#updateRow()V
+#updateShort(IS)V
+#updateShort(Ljava/lang/String;S)V
+#updateString(ILjava/lang/String;)V
+#updateString(Ljava/lang/String;Ljava/lang/String;)V
+#updateTime(ILjava/sql/Time;)V
+#updateTime(Ljava/lang/String;Ljava/sql/Time;)V
+#updateTimestamp(ILjava/sql/Timestamp;)V
+#updateTimestamp(Ljava/lang/String;Ljava/sql/Timestamp;)V
+#refreshRow()V
@3.14.2
+#close()V
@3.21.0
*#getBigDecimal(II)Ljava/math/BigDecimal;[deprecated]
*#getBigDecimal(Ljava/lang/String;I)Ljava/math/BigDecimal;[deprecated]

+###org/sqlite/jdbc4/JDBC4PooledConnection
@3.8.5-pre1
+#<init>()V
+#addStatementEventListener(Ljavax/sql/StatementEventListener;)V
+#removeStatementEventListener(Ljavax/sql/StatementEventListener;)V

+###org/sqlite/date/FastDateParser
@3.8.10.2
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#parseObject(Ljava/lang/String;)Ljava/lang/Object;
+#parse(Ljava/lang/String;)Ljava/util/Date;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;

+###org/sqlite/date/FastDateFormat
@3.8.10.2
+#getInstance()Lorg/sqlite/date/FastDateFormat;
+#getInstance(Ljava/lang/String;)Lorg/sqlite/date/FastDateFormat;
+#getInstance(Ljava/lang/String;Ljava/util/TimeZone;)Lorg/sqlite/date/FastDateFormat;
+#getInstance(Ljava/lang/String;Ljava/util/Locale;)Lorg/sqlite/date/FastDateFormat;
+#getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/sqlite/date/FastDateFormat;
+#getDateInstance(I)Lorg/sqlite/date/FastDateFormat;
+#getDateInstance(ILjava/util/Locale;)Lorg/sqlite/date/FastDateFormat;
+#getDateInstance(ILjava/util/TimeZone;)Lorg/sqlite/date/FastDateFormat;
+#getDateInstance(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/sqlite/date/FastDateFormat;
+#getTimeInstance(I)Lorg/sqlite/date/FastDateFormat;
+#getTimeInstance(ILjava/util/Locale;)Lorg/sqlite/date/FastDateFormat;
+#getTimeInstance(ILjava/util/TimeZone;)Lorg/sqlite/date/FastDateFormat;
+#getTimeInstance(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/sqlite/date/FastDateFormat;
+#getDateTimeInstance(II)Lorg/sqlite/date/FastDateFormat;
+#getDateTimeInstance(IILjava/util/Locale;)Lorg/sqlite/date/FastDateFormat;
+#getDateTimeInstance(IILjava/util/TimeZone;)Lorg/sqlite/date/FastDateFormat;
+#getDateTimeInstance(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/sqlite/date/FastDateFormat;
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#format(J)Ljava/lang/String;
+#format(Ljava/util/Date;)Ljava/lang/String;
+#format(Ljava/util/Calendar;)Ljava/lang/String;
+#format(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Ljava/util/Date;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#getMaxLengthEstimate()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/sqlite/date/DateParser
@3.8.10.2
+#parse(Ljava/lang/String;)Ljava/util/Date;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#parseObject(Ljava/lang/String;)Ljava/lang/Object;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;

+###org/sqlite/date/FastDatePrinter
@3.8.10.2
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#format(J)Ljava/lang/String;
+#format(Ljava/util/Date;)Ljava/lang/String;
+#format(Ljava/util/Calendar;)Ljava/lang/String;
+#format(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#getMaxLengthEstimate()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/sqlite/date/DateFormatUtils
@3.8.10.2
+#<init>()V
+#formatUTC(JLjava/lang/String;)Ljava/lang/String;
+#formatUTC(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;
+#formatUTC(JLjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#formatUTC(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#format(JLjava/lang/String;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;
+#format(Ljava/util/Calendar;Ljava/lang/String;)Ljava/lang/String;
+#format(JLjava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;
+#format(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/lang/String;
+#format(JLjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#format(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;
+#format(JLjava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;
+#format(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/lang/String;

+###org/sqlite/date/DatePrinter
@3.8.10.2
+#format(J)Ljava/lang/String;
+#format(Ljava/util/Date;)Ljava/lang/String;
+#format(Ljava/util/Calendar;)Ljava/lang/String;
+#format(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Date;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#format(Ljava/util/Calendar;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
+#getPattern()Ljava/lang/String;
+#getTimeZone()Ljava/util/TimeZone;
+#getLocale()Ljava/util/Locale;
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;

+###org/sqlite/date/ExceptionUtils
@3.8.10.2
+#<init>()V
+#rethrow(Ljava/lang/Throwable;)Ljava/lang/Object;

+###org/sqlite/core/SafeStmtPtr$SafePtrFunction
@3.39.2.0
+#run(Lorg/sqlite/core/DB;J)Ljava/lang/Object;

+###org/sqlite/core/CorePreparedStatement
@3.8.5-pre1
+#executeBatch()[I
+#getUpdateCount()I
@3.14.2
+#clearBatch()V
@3.39.2.1
+#executeLargeBatch()[J
+#getLargeUpdateCount()J
@3.39.4.1
-#getUpdateCount()I
-#getLargeUpdateCount()J

+###org/sqlite/core/SafeStmtPtr$SafePtrDoubleFunction
@3.39.2.0
+#run(Lorg/sqlite/core/DB;J)D

+###org/sqlite/core/SafeStmtPtr$SafePtrLongFunction
@3.39.2.0
+#run(Lorg/sqlite/core/DB;J)J

+###org/sqlite/core/CoreResultSet
@3.8.5-pre1
+#isOpen()Z
+#checkCol(I)I
+#checkMeta()V
+#close()V

+###org/sqlite/core/SafeStmtPtr$SafePtrIntFunction
@3.39.2.0
+#run(Lorg/sqlite/core/DB;J)I

+###org/sqlite/core/CoreDatabaseMetaData
@3.8.5-pre1
+#getGeneratedKeys()Ljava/sql/ResultSet;
+#close()V

+###org/sqlite/core/Codes
@3.8.5-pre1

+###org/sqlite/core/NativeDB
@3.8.5-pre1
+#<init>()V
+#load()Z
+#_exec(Ljava/lang/String;)I
+#shared_cache(Z)I
+#enable_load_extension(Z)I
+#interrupt()V
+#busy_timeout(I)V
+#libversion()Ljava/lang/String;
+#changes()I
+#total_changes()I
+#step(J)I
+#reset(J)I
+#clear_bindings(J)I
+#column_count(J)I
+#column_type(JI)I
+#column_decltype(JI)Ljava/lang/String;
+#column_table_name(JI)Ljava/lang/String;
+#column_name(JI)Ljava/lang/String;
+#column_text(JI)Ljava/lang/String;
+#column_blob(JI)[B
+#column_double(JI)D
+#column_long(JI)J
+#column_int(JI)I
+#result_null(J)V
+#result_text(JLjava/lang/String;)V
+#result_blob(J[B)V
+#result_double(JD)V
+#result_long(JJ)V
+#result_int(JI)V
+#result_error(JLjava/lang/String;)V
+#value_bytes(Lorg/sqlite/Function;I)I
+#value_text(Lorg/sqlite/Function;I)Ljava/lang/String;
+#value_blob(Lorg/sqlite/Function;I)[B
+#value_double(Lorg/sqlite/Function;I)D
+#value_long(Lorg/sqlite/Function;I)J
+#value_int(Lorg/sqlite/Function;I)I
+#value_type(Lorg/sqlite/Function;I)I
+#create_function(Ljava/lang/String;Lorg/sqlite/Function;)I
+#destroy_function(Ljava/lang/String;)I
+#backup(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/core/DB$ProgressObserver;)I
+#restore(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/core/DB$ProgressObserver;)I
@3.14.2
+#busy_handler(Lorg/sqlite/BusyHandler;)V
+#register_progress_handler(ILorg/sqlite/ProgressHandler;)V
+#clear_progress_handler()V
@3.14.2.1
+#column_text_utf8(JI)[B
@3.15.0
-#column_text_utf8(JI)[B
-#value_bytes(Lorg/sqlite/Function;I)I
@3.25.2
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/SQLiteConfig;)V
+#create_function(Ljava/lang/String;Lorg/sqlite/Function;I)I
-#<init>()V
-#create_function(Ljava/lang/String;Lorg/sqlite/Function;)I
@3.30.1
+#create_function(Ljava/lang/String;Lorg/sqlite/Function;II)I
+#destroy_function(Ljava/lang/String;I)I
-#create_function(Ljava/lang/String;Lorg/sqlite/Function;I)I
-#destroy_function(Ljava/lang/String;)I
@3.32.3.3
+#limit(II)I
@3.36.0.2
+#create_collation(Ljava/lang/String;Lorg/sqlite/Collation;)I
+#destroy_collation(Ljava/lang/String;)I
@3.39.2.1
+#changes()J
+#total_changes()J
+#destroy_function(Ljava/lang/String;)I
-#changes()I
-#total_changes()I
-#destroy_function(Ljava/lang/String;I)I
@3.40.1.0
+#backup(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/core/DB$ProgressObserver;III)I
+#restore(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/core/DB$ProgressObserver;III)I

+###org/sqlite/core/SafeStmtPtr$SafePtrConsumer
@3.39.2.0
+#run(Lorg/sqlite/core/DB;J)V

+###org/sqlite/core/DB$ProgressObserver
@3.8.5-pre1
+#progress(II)V

+###org/sqlite/core/DB
@3.8.5-pre1
+#<init>()V
+#interrupt()V
+#busy_timeout(I)V
+#libversion()Ljava/lang/String;
+#changes()I
+#total_changes()I
+#shared_cache(Z)I
+#enable_load_extension(Z)I
+#exec(Ljava/lang/String;)V
+#open(Lorg/sqlite/SQLiteConnection;Ljava/lang/String;I)V
+#close()V
+#prepare(Lorg/sqlite/core/CoreStatement;)V
+#finalize(Lorg/sqlite/core/CoreStatement;)I
+#_exec(Ljava/lang/String;)I
+#step(J)I
+#reset(J)I
+#clear_bindings(J)I
+#column_count(J)I
+#column_type(JI)I
+#column_decltype(JI)Ljava/lang/String;
+#column_table_name(JI)Ljava/lang/String;
+#column_name(JI)Ljava/lang/String;
+#column_text(JI)Ljava/lang/String;
+#column_blob(JI)[B
+#column_double(JI)D
+#column_long(JI)J
+#column_int(JI)I
+#result_null(J)V
+#result_text(JLjava/lang/String;)V
+#result_blob(J[B)V
+#result_double(JD)V
+#result_long(JJ)V
+#result_int(JI)V
+#result_error(JLjava/lang/String;)V
+#value_bytes(Lorg/sqlite/Function;I)I
+#value_text(Lorg/sqlite/Function;I)Ljava/lang/String;
+#value_blob(Lorg/sqlite/Function;I)[B
+#value_double(Lorg/sqlite/Function;I)D
+#value_long(Lorg/sqlite/Function;I)J
+#value_int(Lorg/sqlite/Function;I)I
+#value_type(Lorg/sqlite/Function;I)I
+#create_function(Ljava/lang/String;Lorg/sqlite/Function;)I
+#destroy_function(Ljava/lang/String;)I
+#backup(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/core/DB$ProgressObserver;)I
+#restore(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/core/DB$ProgressObserver;)I
+#column_names(J)[Ljava/lang/String;
+#execute(Lorg/sqlite/core/CoreStatement;[Ljava/lang/Object;)Z
+#executeUpdate(Lorg/sqlite/core/CoreStatement;[Ljava/lang/Object;)I
+#throwex(I)V
+#newSQLException(ILjava/lang/String;)Ljava/sql/SQLException;
@3.14.2
+#busy_handler(Lorg/sqlite/BusyHandler;)V
+#register_progress_handler(ILorg/sqlite/ProgressHandler;)V
+#clear_progress_handler()V
+#newSQLException(ILjava/lang/String;)Lorg/sqlite/SQLiteException;
-#newSQLException(ILjava/lang/String;)Ljava/sql/SQLException;
@3.15.0
-#value_bytes(Lorg/sqlite/Function;I)I
@3.25.2
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/SQLiteConfig;)V
+#getUrl()Ljava/lang/String;
+#isClosed()Z
+#getConfig()Lorg/sqlite/SQLiteConfig;
+#exec(Ljava/lang/String;Z)V
+#open(Ljava/lang/String;I)V
+#create_function(Ljava/lang/String;Lorg/sqlite/Function;I)I
-#<init>()V
-#exec(Ljava/lang/String;)V
-#open(Lorg/sqlite/SQLiteConnection;Ljava/lang/String;I)V
-#create_function(Ljava/lang/String;Lorg/sqlite/Function;)I
@3.30.1
+#create_function(Ljava/lang/String;Lorg/sqlite/Function;II)I
+#destroy_function(Ljava/lang/String;I)I
-#create_function(Ljava/lang/String;Lorg/sqlite/Function;I)I
-#destroy_function(Ljava/lang/String;)I
@3.31.1
+#addUpdateListener(Lorg/sqlite/SQLiteUpdateListener;)V
+#addCommitListener(Lorg/sqlite/SQLiteCommitListener;)V
+#removeUpdateListener(Lorg/sqlite/SQLiteUpdateListener;)V
+#removeCommitListener(Lorg/sqlite/SQLiteCommitListener;)V
@3.32.3.3
+#limit(II)I
@3.36.0.2
+#create_collation(Ljava/lang/String;Lorg/sqlite/Collation;)I
+#destroy_collation(Ljava/lang/String;)I
@3.39.2.0
+#finalize(Lorg/sqlite/core/SafeStmtPtr;J)I
-#finalize(Lorg/sqlite/core/CoreStatement;)I
@3.39.2.1
+#changes()J
+#total_changes()J
+#destroy_function(Ljava/lang/String;)I
+#executeUpdate(Lorg/sqlite/core/CoreStatement;[Ljava/lang/Object;)J
-#changes()I
-#total_changes()I
-#destroy_function(Ljava/lang/String;I)I
-#executeUpdate(Lorg/sqlite/core/CoreStatement;[Ljava/lang/Object;)I
@3.40.1.0
+#backup(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/core/DB$ProgressObserver;III)I
+#restore(Ljava/lang/String;Ljava/lang/String;Lorg/sqlite/core/DB$ProgressObserver;III)I

+###org/sqlite/core/SafeStmtPtr
@3.39.2.0
+#<init>(Lorg/sqlite/core/DB;J)V
+#isClosed()Z
+#close()I
+#safeRunInt(Lorg/sqlite/core/SafeStmtPtr$SafePtrIntFunction;)I
+#safeRunLong(Lorg/sqlite/core/SafeStmtPtr$SafePtrLongFunction;)J
+#safeRunDouble(Lorg/sqlite/core/SafeStmtPtr$SafePtrDoubleFunction;)D
+#safeRun(Lorg/sqlite/core/SafeStmtPtr$SafePtrFunction;)Ljava/lang/Object;
+#safeRunConsume(Lorg/sqlite/core/SafeStmtPtr$SafePtrConsumer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/sqlite/core/CoreStatement
@3.8.5-pre1
+#executeQuery(Ljava/lang/String;Z)Ljava/sql/ResultSet;
@3.25.2
+#getDatbase()Lorg/sqlite/core/DB;
+#getConnectionConfig()Lorg/sqlite/SQLiteConnectionConfig;
@3.39.2.0
+#getDatabase()Lorg/sqlite/core/DB;
-#getDatbase()Lorg/sqlite/core/DB;

+###org/sqlite/SQLiteConfig$Pragma
@3.8.5-pre1
+#values()[Lorg/sqlite/SQLiteConfig$Pragma;
+#valueOf(Ljava/lang/String;)Lorg/sqlite/SQLiteConfig$Pragma;
+#getPragmaName()Ljava/lang/String;

+###org/sqlite/SQLiteConnectionConfig
@3.25.2
+#fromPragmaTable(Ljava/util/Properties;)Lorg/sqlite/SQLiteConnectionConfig;
+#<init>(Lorg/sqlite/SQLiteConfig$DateClass;Lorg/sqlite/SQLiteConfig$DatePrecision;Ljava/lang/String;ILorg/sqlite/SQLiteConfig$TransactionMode;Z)V
+#copyConfig()Lorg/sqlite/SQLiteConnectionConfig;
+#getDateMultiplier()J
+#getDateClass()Lorg/sqlite/SQLiteConfig$DateClass;
+#setDateClass(Lorg/sqlite/SQLiteConfig$DateClass;)V
+#getDatePrecision()Lorg/sqlite/SQLiteConfig$DatePrecision;
+#setDatePrecision(Lorg/sqlite/SQLiteConfig$DatePrecision;)V
+#getDateStringFormat()Ljava/lang/String;
+#setDateStringFormat(Ljava/lang/String;)V
+#getDateFormat()Lorg/sqlite/date/FastDateFormat;
+#isAutoCommit()Z
+#setAutoCommit(Z)V
+#getTransactionIsolation()I
+#setTransactionIsolation(I)V
+#getTransactionMode()Lorg/sqlite/SQLiteConfig$TransactionMode;
+#setTransactionMode(Lorg/sqlite/SQLiteConfig$TransactionMode;)V

+###org/xerial/db/sql/sqlite/OSInfo
@3.5.8
+#<init>()V
+#main([Ljava/lang/String;)V
+#getNativeLibFolderPathForCurrentOS()Ljava/lang/String;
+#getOSName()Ljava/lang/String;
+#getArchName()Ljava/lang/String;
+#translateOSNameToFolderName(Ljava/lang/String;)Ljava/lang/String;
+#translateArchNameToFolderName(Ljava/lang/String;)Ljava/lang/String;
@3.6.10
-###org/xerial/db/sql/sqlite/OSInfo

+###org/xerial/db/sql/sqlite/SQLiteJDBCLoader
@3.5.7
+#<init>()V
+#initialize()Z
+#initialize(Z)Z
@3.5.9-universal
+#isNativeMode()Z
-#initialize(Z)Z
@3.6.4
+#getVersion()Ljava/lang/String;
@3.6.10
-###org/xerial/db/sql/sqlite/SQLiteJDBCLoader

+###org/sqlite/core/CoreConnection
@3.8.5-pre1
+#getBusyTimeout()I
+#setBusyTimeout(I)V
+#url()Ljava/lang/String;
+#libversion()Ljava/lang/String;
+#db()Lorg/sqlite/core/DB;
+#getDriverVersion()Ljava/lang/String;
+#finalize()V
+#close()V
@3.20.1
-#getDriverVersion()Ljava/lang/String;
@3.25.2
-###org/sqlite/core/CoreConnection

+###org/sqlite/core/CoreDatabaseMetaData$PrimaryKeyFinder
@3.8.5-pre1
+#<init>(Lorg/sqlite/core/CoreDatabaseMetaData;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getColumns()[Ljava/lang/String;
@3.20.1
-###org/sqlite/core/CoreDatabaseMetaData$PrimaryKeyFinder
