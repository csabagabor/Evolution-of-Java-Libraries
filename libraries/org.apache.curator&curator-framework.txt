
+###org/apache/curator/framework/AuthInfo
@2.7.1
+#<init>(Ljava/lang/String;[B)V
+#getScheme()Ljava/lang/String;
+#getAuth()[B
+#toString()Ljava/lang/String;

+###org/apache/curator/framework/CuratorFramework
@2.0.0-incubating
+#start()V
+#close()V
+#getState()Lorg/apache/curator/framework/imps/CuratorFrameworkState;
+#isStarted()Z
+#create()Lorg/apache/curator/framework/api/CreateBuilder;
+#delete()Lorg/apache/curator/framework/api/DeleteBuilder;
+#checkExists()Lorg/apache/curator/framework/api/ExistsBuilder;
+#getData()Lorg/apache/curator/framework/api/GetDataBuilder;
+#setData()Lorg/apache/curator/framework/api/SetDataBuilder;
+#getChildren()Lorg/apache/curator/framework/api/GetChildrenBuilder;
+#getACL()Lorg/apache/curator/framework/api/GetACLBuilder;
+#setACL()Lorg/apache/curator/framework/api/SetACLBuilder;
+#inTransaction()Lorg/apache/curator/framework/api/transaction/CuratorTransaction;
+#sync(Ljava/lang/String;Ljava/lang/Object;)V
+#getConnectionStateListenable()Lorg/apache/curator/framework/listen/Listenable;
+#getCuratorListenable()Lorg/apache/curator/framework/listen/Listenable;
+#getUnhandledErrorListenable()Lorg/apache/curator/framework/listen/Listenable;
+#nonNamespaceView()Lorg/apache/curator/framework/CuratorFramework;
+#usingNamespace(Ljava/lang/String;)Lorg/apache/curator/framework/CuratorFramework;
+#getNamespace()Ljava/lang/String;
+#getZookeeperClient()Lorg/apache/curator/CuratorZookeeperClient;
+#newNamespaceAwareEnsurePath(Ljava/lang/String;)Lorg/apache/curator/utils/EnsurePath;
@2.1.0-incubating
+#sync()Lorg/apache/curator/framework/api/SyncBuilder;
@2.5.0
+#clearWatcherReferences(Lorg/apache/zookeeper/Watcher;)V
@2.6.0
+#blockUntilConnected(ILjava/util/concurrent/TimeUnit;)Z
+#blockUntilConnected()V
@2.9.0
*#isStarted()Z[deprecated]
*#sync(Ljava/lang/String;Ljava/lang/Object;)V[deprecated]
+#createContainers(Ljava/lang/String;)V
*#nonNamespaceView()Lorg/apache/curator/framework/CuratorFramework;[deprecated]
*#newNamespaceAwareEnsurePath(Ljava/lang/String;)Lorg/apache/curator/utils/EnsurePath;[deprecated]
@3.0.0
+#reconfig()Lorg/apache/curator/framework/api/ReconfigBuilder;
+#getConfig()Lorg/apache/curator/framework/api/GetConfigBuilder;
+#transaction()Lorg/apache/curator/framework/api/transaction/CuratorMultiTransaction;
+#transactionOp()Lorg/apache/curator/framework/api/transaction/TransactionOp;
+#watches()Lorg/apache/curator/framework/api/RemoveWatchesBuilder;
*#clearWatcherReferences(Lorg/apache/zookeeper/Watcher;)V[deprecated]
+#newWatcherRemoveCuratorFramework()Lorg/apache/curator/framework/WatcherRemoveCuratorFramework;
+#getConnectionStateErrorPolicy()Lorg/apache/curator/framework/state/ConnectionStateErrorPolicy;
+#getCurrentConfig()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
@3.2.0
+#getSchemaSet()Lorg/apache/curator/framework/schema/SchemaSet;
@4.0.0
+#isZk34CompatibilityMode()Z
@4.1.0
+#postSafeNotify(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#runSafe(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
@5.0.0
+#watchers()Lorg/apache/curator/framework/api/WatchesBuilder;
-#isZk34CompatibilityMode()Z

+###org/apache/curator/framework/CuratorFrameworkFactory$Builder
@2.0.0-incubating
+#build()Lorg/apache/curator/framework/CuratorFramework;
+#buildTemp()Lorg/apache/curator/framework/CuratorTempFramework;
+#buildTemp(JLjava/util/concurrent/TimeUnit;)Lorg/apache/curator/framework/CuratorTempFramework;
+#authorization(Ljava/lang/String;[B)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#connectString(Ljava/lang/String;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#ensembleProvider(Lorg/apache/curator/ensemble/EnsembleProvider;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#defaultData([B)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#namespace(Ljava/lang/String;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#sessionTimeoutMs(I)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#connectionTimeoutMs(I)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#retryPolicy(Lorg/apache/curator/RetryPolicy;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#threadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#compressionProvider(Lorg/apache/curator/framework/api/CompressionProvider;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#zookeeperFactory(Lorg/apache/curator/utils/ZookeeperFactory;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#aclProvider(Lorg/apache/curator/framework/api/ACLProvider;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#canBeReadOnly(Z)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getAclProvider()Lorg/apache/curator/framework/api/ACLProvider;
+#getZookeeperFactory()Lorg/apache/curator/utils/ZookeeperFactory;
+#getCompressionProvider()Lorg/apache/curator/framework/api/CompressionProvider;
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#getEnsembleProvider()Lorg/apache/curator/ensemble/EnsembleProvider;
+#getSessionTimeoutMs()I
+#getConnectionTimeoutMs()I
+#getRetryPolicy()Lorg/apache/curator/RetryPolicy;
+#getNamespace()Ljava/lang/String;
+#getAuthScheme()Ljava/lang/String;
+#getAuthValue()[B
+#getDefaultData()[B
+#canBeReadOnly()Z
@2.7.0
+#maxCloseWaitMs(I)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getMaxCloseWaitMs()I
@2.7.1
+#authorization(Ljava/util/List;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
*#getAuthScheme()Ljava/lang/String;[deprecated]
*#getAuthValue()[B[deprecated]
+#getAuthInfos()Ljava/util/List;
@2.9.0
+#dontUseContainerParents()Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#useContainerParentsIfAvailable()Z
@3.0.0
+#connectionStateErrorPolicy(Lorg/apache/curator/framework/state/ConnectionStateErrorPolicy;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#connectionHandlingPolicy(Lorg/apache/curator/connection/ConnectionHandlingPolicy;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getConnectionStateErrorPolicy()Lorg/apache/curator/framework/state/ConnectionStateErrorPolicy;
+#getConnectionHandlingPolicy()Lorg/apache/curator/connection/ConnectionHandlingPolicy;
@3.2.0
+#schemaSet(Lorg/apache/curator/framework/schema/SchemaSet;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getSchemaSet()Lorg/apache/curator/framework/schema/SchemaSet;
@4.0.0
+#zk34CompatibilityMode(Z)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#isZk34CompatibilityMode()Z
@4.1.0
+#waitForShutdownTimeoutMs(I)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#runSafeService(Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getRunSafeService()Ljava/util/concurrent/Executor;
+#getWaitForShutdownTimeoutMs()I
@4.2.0
+#connectionStateListenerDecorator(Lorg/apache/curator/framework/state/ConnectionStateListenerDecorator;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getConnectionStateListenerDecorator()Lorg/apache/curator/framework/state/ConnectionStateListenerDecorator;
@4.3.0
+#connectionStateListenerManagerFactory(Lorg/apache/curator/framework/state/ConnectionStateListenerManagerFactory;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getConnectionStateListenerManagerFactory()Lorg/apache/curator/framework/state/ConnectionStateListenerManagerFactory;
-#connectionStateListenerDecorator(Lorg/apache/curator/framework/state/ConnectionStateListenerDecorator;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
-#getConnectionStateListenerDecorator()Lorg/apache/curator/framework/state/ConnectionStateListenerDecorator;
@5.0.0
+#ensembleTracker(Z)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#withEnsembleTracker()Z
+#simulatedSessionExpirationPercent(I)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getSimulatedSessionExpirationPercent()I
-#zk34CompatibilityMode(Z)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
-#connectionHandlingPolicy(Lorg/apache/curator/connection/ConnectionHandlingPolicy;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
-#getConnectionHandlingPolicy()Lorg/apache/curator/connection/ConnectionHandlingPolicy;
-#isZk34CompatibilityMode()Z
@5.2.0
+#zkClientConfig(Lorg/apache/zookeeper/client/ZKClientConfig;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#getZkClientConfig()Lorg/apache/zookeeper/client/ZKClientConfig;

+###org/apache/curator/framework/CuratorFrameworkFactory
@2.0.0-incubating
+#builder()Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
+#newClient(Ljava/lang/String;Lorg/apache/curator/RetryPolicy;)Lorg/apache/curator/framework/CuratorFramework;
+#newClient(Ljava/lang/String;IILorg/apache/curator/RetryPolicy;)Lorg/apache/curator/framework/CuratorFramework;
@2.9.1
+#getLocalAddress()[B
@3.0.0
-#getLocalAddress()[B
@3.1.0
+#getLocalAddress()[B
@5.2.0
+#newClient(Ljava/lang/String;IILorg/apache/curator/RetryPolicy;Lorg/apache/zookeeper/client/ZKClientConfig;)Lorg/apache/curator/framework/CuratorFramework;

+###org/apache/curator/framework/CuratorTempFramework
@2.0.0-incubating
+#close()V
+#inTransaction()Lorg/apache/curator/framework/api/transaction/CuratorTransaction;
+#getData()Lorg/apache/curator/framework/api/TempGetDataBuilder;

+###org/apache/curator/framework/EnsureContainers
@2.9.1
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#ensure()V
@3.0.0
-###org/apache/curator/framework/EnsureContainers

+###org/apache/curator/framework/WatcherRemoveCuratorFramework
@3.0.0
+#removeWatchers()V

+###org/apache/curator/framework/api/ACLBackgroundPathAndBytesable
@2.0.0-incubating

+###org/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable
@2.0.0-incubating

+###org/apache/curator/framework/api/ACLCreateModePathAndBytesable
@2.0.0-incubating

+###org/apache/curator/framework/api/ACLCreateModeStatBackgroundPathAndBytesable
@3.0.0

+###org/apache/curator/framework/api/ACLPathAndBytesable
@2.0.0-incubating

+###org/apache/curator/framework/api/ACLProvider
@2.0.0-incubating
+#getDefaultAcl()Ljava/util/List;
+#getAclForPath(Ljava/lang/String;)Ljava/util/List;

+###org/apache/curator/framework/api/ACLable
@2.0.0-incubating
+#withACL(Ljava/util/List;)Ljava/lang/Object;

+###org/apache/curator/framework/api/ACLableExistBuilderMain
@4.0.0

+###org/apache/curator/framework/api/AddStatConfigEnsembleable
@3.0.0

+###org/apache/curator/framework/api/AddWatchBuilder
@5.0.0
+#withMode(Lorg/apache/zookeeper/AddWatchMode;)Lorg/apache/curator/framework/api/AddWatchBuilder2;

+###org/apache/curator/framework/api/AddWatchBuilder2
@5.0.0

+###org/apache/curator/framework/api/Addable
@3.0.0
+#adding([Ljava/lang/String;)Ljava/lang/Object;
+#adding(Ljava/util/List;)Ljava/lang/Object;

+###org/apache/curator/framework/api/AsyncReconfigurable
@3.0.0
+#fromConfig(J)V

+###org/apache/curator/framework/api/BackgroundCallback
@2.0.0-incubating
+#processResult(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/api/CuratorEvent;)V

+###org/apache/curator/framework/api/BackgroundEnsembleable
@3.0.0

+###org/apache/curator/framework/api/BackgroundPathAndBytesable
@2.0.0-incubating

+###org/apache/curator/framework/api/BackgroundPathable
@2.0.0-incubating

+###org/apache/curator/framework/api/BackgroundPathableQuietlyable
@3.0.0

+###org/apache/curator/framework/api/BackgroundVersionable
@2.3.0

+###org/apache/curator/framework/api/Backgroundable
@2.0.0-incubating
+#inBackground()Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;

+###org/apache/curator/framework/api/ChildrenDeletable
@2.3.0
+#deletingChildrenIfNeeded()Lorg/apache/curator/framework/api/BackgroundVersionable;

+###org/apache/curator/framework/api/Compressible
@2.0.0-incubating
+#compressed()Ljava/lang/Object;

+###org/apache/curator/framework/api/CompressionProvider
@2.0.0-incubating
+#compress(Ljava/lang/String;[B)[B
+#decompress(Ljava/lang/String;[B)[B

+###org/apache/curator/framework/api/ConfigureEnsembleable
@3.0.0
+#fromConfig(J)Lorg/apache/curator/framework/api/Ensembleable;

+###org/apache/curator/framework/api/CreateBackgroundModeACLable
@2.0.0-incubating
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ACLCreateModePathAndBytesable;
+#withProtectedEphemeralSequential()Lorg/apache/curator/framework/api/ACLPathAndBytesable;
@2.9.0
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ACLCreateModePathAndBytesable;

+###org/apache/curator/framework/api/CreateBackgroundModeStatACLable
@3.0.0
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ACLCreateModePathAndBytesable;
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ACLCreateModePathAndBytesable;
+#withProtectedEphemeralSequential()Lorg/apache/curator/framework/api/ACLPathAndBytesable;

+###org/apache/curator/framework/api/CreateBuilder
@2.0.0-incubating
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable;
+#withProtectedEphemeralSequential()Lorg/apache/curator/framework/api/ACLPathAndBytesable;
+#withProtection()Lorg/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable;
@2.9.0
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable;
*#withProtectedEphemeralSequential()Lorg/apache/curator/framework/api/ACLPathAndBytesable;[deprecated]
@3.0.0
+#orSetData()Lorg/apache/curator/framework/api/CreateBuilderMain;
-#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable;
-#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable;
-#withProtectedEphemeralSequential()Lorg/apache/curator/framework/api/ACLPathAndBytesable;[deprecated]
-#withProtection()Lorg/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable;
@4.0.0
+#withTtl(J)Lorg/apache/curator/framework/api/CreateBuilderMain;
+#orSetData()Lorg/apache/curator/framework/api/CreateBuilder2;
+#orSetData(I)Lorg/apache/curator/framework/api/CreateBuilder2;
-#orSetData()Lorg/apache/curator/framework/api/CreateBuilderMain;

+###org/apache/curator/framework/api/CreateBuilder2
@4.0.0
+#withTtl(J)Lorg/apache/curator/framework/api/CreateBuilderMain;

+###org/apache/curator/framework/api/CreateBuilderMain
@3.0.0
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModeStatPathAndBytesable;
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModeStatPathAndBytesable;
+#withProtectedEphemeralSequential()Lorg/apache/curator/framework/api/ACLPathAndBytesable;[deprecated]
+#withProtection()Lorg/apache/curator/framework/api/ACLCreateModeStatBackgroundPathAndBytesable;

+###org/apache/curator/framework/api/CreateModable
@2.0.0-incubating
+#withMode(Lorg/apache/zookeeper/CreateMode;)Ljava/lang/Object;

+###org/apache/curator/framework/api/CreateProtectACLCreateModePathAndBytesable
@3.0.0
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable;
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable;
+#withProtection()Lorg/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable;

+###org/apache/curator/framework/api/CuratorEvent
@2.0.0-incubating
+#getType()Lorg/apache/curator/framework/api/CuratorEventType;
+#getResultCode()I
+#getPath()Ljava/lang/String;
+#getContext()Ljava/lang/Object;
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#getData()[B
+#getName()Ljava/lang/String;
+#getChildren()Ljava/util/List;
+#getACLList()Ljava/util/List;
+#getWatchedEvent()Lorg/apache/zookeeper/WatchedEvent;
@3.0.0
+#getOpResults()Ljava/util/List;

+###org/apache/curator/framework/api/CuratorEventType
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/api/CuratorEventType;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/api/CuratorEventType;

+###org/apache/curator/framework/api/CuratorListener
@2.0.0-incubating
+#eventReceived(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/api/CuratorEvent;)V

+###org/apache/curator/framework/api/CuratorWatcher
@2.0.0-incubating
+#process(Lorg/apache/zookeeper/WatchedEvent;)V

+###org/apache/curator/framework/api/DataCallbackable
@3.0.0
+#usingDataCallback(Lorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/curator/framework/api/Decompressible
@2.0.0-incubating
+#decompressed()Ljava/lang/Object;

+###org/apache/curator/framework/api/DeleteBuilder
@2.0.0-incubating
+#guaranteed()Lorg/apache/curator/framework/api/DeleteBuilderBase;
@2.3.0
-#guaranteed()Lorg/apache/curator/framework/api/DeleteBuilderBase;

+###org/apache/curator/framework/api/DeleteBuilderMain
@3.0.0

+###org/apache/curator/framework/api/Ensembleable
@3.0.0
+#forEnsemble()Ljava/lang/Object;

+###org/apache/curator/framework/api/ErrorListenerEnsembleable
@3.2.0
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Ensembleable;

+###org/apache/curator/framework/api/ErrorListenerMultiTransactionMain
@3.2.0
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;

+###org/apache/curator/framework/api/ErrorListenerPathAndBytesable
@2.11.0
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/PathAndBytesable;
@3.0.0
-###org/apache/curator/framework/api/ErrorListenerPathAndBytesable

+###org/apache/curator/framework/api/ErrorListenerPathable
@2.11.0
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
@3.0.0
-###org/apache/curator/framework/api/ErrorListenerPathable

+###org/apache/curator/framework/api/ErrorListenerReconfigBuilderMain
@3.2.0
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;

+###org/apache/curator/framework/api/ExistsBuilder
@2.0.0-incubating
@2.9.0
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ExistsBuilderMain;
@3.3.0
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ExistsBuilderMain;
@4.0.0
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ACLableExistBuilderMain;
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ACLableExistBuilderMain;
-#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ExistsBuilderMain;
-#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ExistsBuilderMain;

+###org/apache/curator/framework/api/ExistsBuilderMain
@2.9.0

+###org/apache/curator/framework/api/GetACLBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/GetChildrenBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/GetConfigBuilder
@3.0.0

+###org/apache/curator/framework/api/GetDataBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/GetDataWatchBackgroundStatable
@2.0.0-incubating

+###org/apache/curator/framework/api/Guaranteeable
@2.3.0
+#guaranteed()Lorg/apache/curator/framework/api/ChildrenDeletable;
@3.0.0
+#guaranteed()Ljava/lang/Object;
-#guaranteed()Lorg/apache/curator/framework/api/ChildrenDeletable;

+###org/apache/curator/framework/api/GuaranteeableDeletable
@3.0.0

+###org/apache/curator/framework/api/Idempotentable
@5.2.0
+#idempotent()Ljava/lang/Object;

+###org/apache/curator/framework/api/JoinStatConfigEnsembleable
@3.0.0

+###org/apache/curator/framework/api/Joinable
@3.0.0
+#joining([Ljava/lang/String;)Ljava/lang/Object;
+#joining(Ljava/util/List;)Ljava/lang/Object;

+###org/apache/curator/framework/api/LeaveStatConfigEnsembleable
@3.0.0

+###org/apache/curator/framework/api/Leaveable
@3.0.0
+#leaving([Ljava/lang/String;)Ljava/lang/Object;
+#leaving(Ljava/util/List;)Ljava/lang/Object;

+###org/apache/curator/framework/api/Membersable
@3.0.0
+#withNewMembers([Ljava/lang/String;)Ljava/lang/Object;
+#withNewMembers(Ljava/util/List;)Ljava/lang/Object;

+###org/apache/curator/framework/api/ParentACLable
@4.0.0
+#withACL(Ljava/util/List;Z)Ljava/lang/Object;

+###org/apache/curator/framework/api/PathAndBytesable
@2.0.0-incubating
+#forPath(Ljava/lang/String;[B)Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/curator/framework/api/Pathable
@2.0.0-incubating
+#forPath(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable
@2.0.0-incubating
+#withProtection()Lorg/apache/curator/framework/api/ACLCreateModeBackgroundPathAndBytesable;

+###org/apache/curator/framework/api/ProtectACLCreateModeStatPathAndBytesable
@3.0.0

+###org/apache/curator/framework/api/Quietly
@3.0.0
+#quietly()Ljava/lang/Object;

+###org/apache/curator/framework/api/ReconfigBuilder
@3.0.0

+###org/apache/curator/framework/api/ReconfigBuilderMain
@3.0.0

+###org/apache/curator/framework/api/RemoveWatchesBuilder
@3.0.0
+#remove(Lorg/apache/zookeeper/Watcher;)Lorg/apache/curator/framework/api/RemoveWatchesType;
+#remove(Lorg/apache/curator/framework/api/CuratorWatcher;)Lorg/apache/curator/framework/api/RemoveWatchesType;
+#removeAll()Lorg/apache/curator/framework/api/RemoveWatchesType;

+###org/apache/curator/framework/api/RemoveWatchesLocal
@3.0.0
+#locally()Lorg/apache/curator/framework/api/BackgroundPathableQuietlyable;

+###org/apache/curator/framework/api/RemoveWatchesType
@3.0.0
+#ofType(Lorg/apache/zookeeper/Watcher$WatcherType;)Lorg/apache/curator/framework/api/RemoveWatchesLocal;

+###org/apache/curator/framework/api/SetACLBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/SetDataBackgroundVersionable
@2.0.0-incubating

+###org/apache/curator/framework/api/SetDataBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/StatConfigureEnsembleable
@3.0.0

+###org/apache/curator/framework/api/StatPathable
@2.0.0-incubating

+###org/apache/curator/framework/api/Statable
@2.0.0-incubating
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Ljava/lang/Object;

+###org/apache/curator/framework/api/SyncBuilder
@2.1.0-incubating

+###org/apache/curator/framework/api/TempGetDataBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/UnhandledErrorListener
@2.0.0-incubating
+#unhandledError(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/curator/framework/api/VersionPathAndBytesable
@2.10.0
@3.0.0
-###org/apache/curator/framework/api/VersionPathAndBytesable

+###org/apache/curator/framework/api/Versionable
@2.0.0-incubating
+#withVersion(I)Ljava/lang/Object;

+###org/apache/curator/framework/api/WatchBackgroundEnsembleable
@3.0.0

+###org/apache/curator/framework/api/WatchPathable
@2.0.0-incubating

+###org/apache/curator/framework/api/Watchable
@2.0.0-incubating
+#watched()Ljava/lang/Object;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;
@5.0.0
-#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
-#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;

+###org/apache/curator/framework/api/WatchableBase
@5.0.0
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;

+###org/apache/curator/framework/api/WatchesBuilder
@5.0.0
+#add()Lorg/apache/curator/framework/api/AddWatchBuilder;

+###org/apache/curator/framework/api/transaction/CuratorMultiTransaction
@3.0.0

+###org/apache/curator/framework/api/transaction/CuratorMultiTransactionMain
@3.0.0
+#forOperations([Lorg/apache/curator/framework/api/transaction/CuratorOp;)Ljava/util/List;
+#forOperations(Ljava/util/List;)Ljava/util/List;

+###org/apache/curator/framework/api/transaction/CuratorOp
@3.0.0
+#get()Lorg/apache/zookeeper/Op;
+#getTypeAndPath()Lorg/apache/curator/framework/api/transaction/TypeAndPath;

+###org/apache/curator/framework/api/transaction/CuratorTransaction
@2.0.0-incubating
+#create()Lorg/apache/curator/framework/api/transaction/TransactionCreateBuilder;
+#delete()Lorg/apache/curator/framework/api/transaction/TransactionDeleteBuilder;
+#setData()Lorg/apache/curator/framework/api/transaction/TransactionSetDataBuilder;
+#check()Lorg/apache/curator/framework/api/transaction/TransactionCheckBuilder;

+###org/apache/curator/framework/api/transaction/CuratorTransactionBridge
@2.0.0-incubating
+#and()Lorg/apache/curator/framework/api/transaction/CuratorTransactionFinal;

+###org/apache/curator/framework/api/transaction/CuratorTransactionFinal
@2.0.0-incubating
+#commit()Ljava/util/Collection;

+###org/apache/curator/framework/api/transaction/CuratorTransactionResult
@2.0.0-incubating
+#ofTypeAndPath(Lorg/apache/curator/framework/api/transaction/OperationType;Ljava/lang/String;)Lcom/google/common/base/Predicate;
+#<init>(Lorg/apache/curator/framework/api/transaction/OperationType;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)V
+#getType()Lorg/apache/curator/framework/api/transaction/OperationType;
+#getForPath()Ljava/lang/String;
+#getResultPath()Ljava/lang/String;
+#getResultStat()Lorg/apache/zookeeper/data/Stat;
@3.2.0
+#<init>(Lorg/apache/curator/framework/api/transaction/OperationType;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V
+#getError()I
@5.0.0
+#ofTypeAndPath(Lorg/apache/curator/framework/api/transaction/OperationType;Ljava/lang/String;)Lorg/apache/curator/shaded/com/google/common/base/Predicate;
-#ofTypeAndPath(Lorg/apache/curator/framework/api/transaction/OperationType;Ljava/lang/String;)Lcom/google/common/base/Predicate;

+###org/apache/curator/framework/api/transaction/OperationType
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/api/transaction/OperationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/api/transaction/OperationType;

+###org/apache/curator/framework/api/transaction/TransactionCheckBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/transaction/TransactionCreateBuilder
@2.0.0-incubating
@4.0.0
+#withTtl(J)Lorg/apache/curator/framework/api/transaction/TransactionCreateBuilder2;

+###org/apache/curator/framework/api/transaction/TransactionCreateBuilder2
@4.0.0

+###org/apache/curator/framework/api/transaction/TransactionDeleteBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/transaction/TransactionOp
@3.0.0
+#create()Lorg/apache/curator/framework/api/transaction/TransactionCreateBuilder;
+#delete()Lorg/apache/curator/framework/api/transaction/TransactionDeleteBuilder;
+#setData()Lorg/apache/curator/framework/api/transaction/TransactionSetDataBuilder;
+#check()Lorg/apache/curator/framework/api/transaction/TransactionCheckBuilder;

+###org/apache/curator/framework/api/transaction/TransactionSetDataBuilder
@2.0.0-incubating

+###org/apache/curator/framework/api/transaction/TypeAndPath
@3.0.0
+#<init>(Lorg/apache/curator/framework/api/transaction/OperationType;Ljava/lang/String;)V
+#getType()Lorg/apache/curator/framework/api/transaction/OperationType;
+#getForPath()Ljava/lang/String;

+###org/apache/curator/framework/imps/AddWatchBuilderImpl
@5.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Watching;Lorg/apache/curator/framework/imps/Backgrounding;Lorg/apache/zookeeper/AddWatchMode;)V
+#inBackground()Lorg/apache/curator/framework/api/WatchableBase;
+#withMode(Lorg/apache/zookeeper/AddWatchMode;)Lorg/apache/curator/framework/api/AddWatchBuilder2;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Lorg/apache/curator/framework/api/Pathable;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/WatchableBase;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/WatchableBase;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/WatchableBase;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/WatchableBase;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/WatchableBase;
+#forPath(Ljava/lang/String;)Ljava/lang/Void;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/curator/framework/imps/Backgrounding
@3.3.0
+#<init>(Lorg/apache/curator/framework/api/BackgroundCallback;Lorg/apache/curator/framework/api/UnhandledErrorListener;)V

+###org/apache/curator/framework/imps/CreateBuilderImpl
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/zookeeper/CreateMode;Lorg/apache/curator/framework/imps/Backgrounding;ZZZZZLjava/util/List;Lorg/apache/zookeeper/data/Stat;)V
+#orSetData()Lorg/apache/curator/framework/api/CreateBuilderMain;
+#compressed()Lorg/apache/curator/framework/api/CreateBackgroundModeStatACLable;
+#withACL(Ljava/util/List;)Lorg/apache/curator/framework/api/ACLBackgroundPathAndBytesable;
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModeStatPathAndBytesable;
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ProtectACLCreateModeStatPathAndBytesable;
+#withProtection()Lorg/apache/curator/framework/api/ACLCreateModeStatBackgroundPathAndBytesable;
+#withProtectedEphemeralSequential()Lorg/apache/curator/framework/api/ACLPathAndBytesable;
+#withMode(Lorg/apache/zookeeper/CreateMode;)Lorg/apache/curator/framework/api/ACLBackgroundPathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/PathAndBytesable;
+#forPath(Ljava/lang/String;)Ljava/lang/String;
+#forPath(Ljava/lang/String;[B)Ljava/lang/String;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Lorg/apache/curator/framework/api/CreateProtectACLCreateModePathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
+#forPath(Ljava/lang/String;[B)Ljava/lang/Object;
+#withMode(Lorg/apache/zookeeper/CreateMode;)Ljava/lang/Object;
+#withACL(Ljava/util/List;)Ljava/lang/Object;
+#compressed()Ljava/lang/Object;
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Ljava/lang/Object;
@4.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/zookeeper/CreateMode;Lorg/apache/curator/framework/imps/Backgrounding;ZZZZZLjava/util/List;Lorg/apache/zookeeper/data/Stat;J)V
+#setSetDataIfExistsVersion(I)V
+#orSetData()Lorg/apache/curator/framework/api/CreateBuilder2;
+#orSetData(I)Lorg/apache/curator/framework/api/CreateBuilder2;
+#withTtl(J)Lorg/apache/curator/framework/api/CreateBuilderMain;
+#withACL(Ljava/util/List;Z)Lorg/apache/curator/framework/api/ACLBackgroundPathAndBytesable;
+#withACL(Ljava/util/List;Z)Ljava/lang/Object;
-#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/zookeeper/CreateMode;Lorg/apache/curator/framework/imps/Backgrounding;ZZZZZLjava/util/List;Lorg/apache/zookeeper/data/Stat;)V
-#orSetData()Lorg/apache/curator/framework/api/CreateBuilderMain;
@5.2.0
+#idempotent()Lorg/apache/curator/framework/api/CreateBuilder2;
+#idempotent()Ljava/lang/Object;

+###org/apache/curator/framework/imps/CuratorFrameworkImpl
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;)V
+#getState()Lorg/apache/curator/framework/imps/CuratorFrameworkState;
+#isStarted()Z
+#start()V
+#close()V
+#nonNamespaceView()Lorg/apache/curator/framework/CuratorFramework;
+#getNamespace()Ljava/lang/String;
+#usingNamespace(Ljava/lang/String;)Lorg/apache/curator/framework/CuratorFramework;
+#create()Lorg/apache/curator/framework/api/CreateBuilder;
+#delete()Lorg/apache/curator/framework/api/DeleteBuilder;
+#checkExists()Lorg/apache/curator/framework/api/ExistsBuilder;
+#getData()Lorg/apache/curator/framework/api/GetDataBuilder;
+#setData()Lorg/apache/curator/framework/api/SetDataBuilder;
+#getChildren()Lorg/apache/curator/framework/api/GetChildrenBuilder;
+#getACL()Lorg/apache/curator/framework/api/GetACLBuilder;
+#setACL()Lorg/apache/curator/framework/api/SetACLBuilder;
+#inTransaction()Lorg/apache/curator/framework/api/transaction/CuratorTransaction;
+#getConnectionStateListenable()Lorg/apache/curator/framework/listen/Listenable;
+#getCuratorListenable()Lorg/apache/curator/framework/listen/Listenable;
+#getUnhandledErrorListenable()Lorg/apache/curator/framework/listen/Listenable;
+#sync(Ljava/lang/String;Ljava/lang/Object;)V
+#getZookeeperClient()Lorg/apache/curator/CuratorZookeeperClient;
+#newNamespaceAwareEnsurePath(Ljava/lang/String;)Lorg/apache/curator/utils/EnsurePath;
@2.1.0-incubating
+#sync()Lorg/apache/curator/framework/api/SyncBuilder;
@2.5.0
+#clearWatcherReferences(Lorg/apache/zookeeper/Watcher;)V
@2.6.0
+#blockUntilConnected(ILjava/util/concurrent/TimeUnit;)Z
+#blockUntilConnected()V
@2.7.0
*#isStarted()Z[deprecated]
*#nonNamespaceView()Lorg/apache/curator/framework/CuratorFramework;[deprecated]
@2.9.0
+#createContainers(Ljava/lang/String;)V
@3.0.0
+#newWatcherRemoveCuratorFramework()Lorg/apache/curator/framework/WatcherRemoveCuratorFramework;
+#getCurrentConfig()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#getConnectionStateErrorPolicy()Lorg/apache/curator/framework/state/ConnectionStateErrorPolicy;
+#reconfig()Lorg/apache/curator/framework/api/ReconfigBuilder;
+#getConfig()Lorg/apache/curator/framework/api/GetConfigBuilder;
+#transaction()Lorg/apache/curator/framework/api/transaction/CuratorMultiTransaction;
+#transactionOp()Lorg/apache/curator/framework/api/transaction/TransactionOp;
+#watches()Lorg/apache/curator/framework/api/RemoveWatchesBuilder;
@3.2.0
+#getSchemaSet()Lorg/apache/curator/framework/schema/SchemaSet;
@4.0.0
+#isZk34CompatibilityMode()Z
@4.1.0
+#runSafe(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
@5.0.0
+#watchers()Lorg/apache/curator/framework/api/WatchesBuilder;
-#isZk34CompatibilityMode()Z

+###org/apache/curator/framework/imps/CuratorFrameworkState
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/imps/CuratorFrameworkState;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/imps/CuratorFrameworkState;

+###org/apache/curator/framework/imps/CuratorMultiTransactionImpl
@3.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;)V
+#inBackground()Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
+#forOperations([Lorg/apache/curator/framework/api/transaction/CuratorOp;)Ljava/util/List;
+#forOperations(Ljava/util/List;)Ljava/util/List;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
@3.2.0
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerMultiTransactionMain;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerMultiTransactionMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerMultiTransactionMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerMultiTransactionMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerMultiTransactionMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerMultiTransactionMain;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
-#inBackground()Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
-#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/transaction/CuratorMultiTransactionMain;
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Backgrounding;)V

+###org/apache/curator/framework/imps/CuratorTempFrameworkImpl
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;J)V
+#close()V
+#inTransaction()Lorg/apache/curator/framework/api/transaction/CuratorTransaction;
+#getData()Lorg/apache/curator/framework/api/TempGetDataBuilder;

+###org/apache/curator/framework/imps/DefaultACLProvider
@2.0.0-incubating
+#<init>()V
+#getDefaultAcl()Ljava/util/List;
+#getAclForPath(Ljava/lang/String;)Ljava/util/List;

+###org/apache/curator/framework/imps/DeleteBuilderImpl
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;ILorg/apache/curator/framework/imps/Backgrounding;ZZZ)V
+#quietly()Lorg/apache/curator/framework/api/DeleteBuilderMain;
+#guaranteed()Lorg/apache/curator/framework/api/ChildrenDeletable;
+#deletingChildrenIfNeeded()Lorg/apache/curator/framework/api/BackgroundVersionable;
+#withVersion(I)Lorg/apache/curator/framework/api/BackgroundPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#forPath(Ljava/lang/String;)Ljava/lang/Void;
+#quietly()Ljava/lang/Object;
+#guaranteed()Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
+#withVersion(I)Ljava/lang/Object;
@5.2.0
+#idempotent()Lorg/apache/curator/framework/api/DeleteBuilderMain;
+#idempotent()Ljava/lang/Object;

+###org/apache/curator/framework/imps/EnsembleTracker
@3.0.0
+#start()V
+#close()V
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
+#getCurrentConfig()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#configToConnectionString(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)Ljava/lang/String;
@3.2.0
+#hasOutstanding()Z

+###org/apache/curator/framework/imps/ExistsBuilderImpl
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Backgrounding;Lorg/apache/zookeeper/Watcher;ZZ)V
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ExistsBuilderMain;
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ExistsBuilderMain;
+#watched()Lorg/apache/curator/framework/api/BackgroundPathable;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Lorg/apache/curator/framework/api/BackgroundPathable;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Lorg/apache/curator/framework/api/BackgroundPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#forPath(Ljava/lang/String;)Lorg/apache/zookeeper/data/Stat;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
+#watched()Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
@4.0.0
+#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ACLableExistBuilderMain;
+#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ACLableExistBuilderMain;
+#withACL(Ljava/util/List;)Lorg/apache/curator/framework/api/ExistsBuilderMain;
+#withACL(Ljava/util/List;)Ljava/lang/Object;
-#creatingParentsIfNeeded()Lorg/apache/curator/framework/api/ExistsBuilderMain;
-#creatingParentContainersIfNeeded()Lorg/apache/curator/framework/api/ExistsBuilderMain;

+###org/apache/curator/framework/imps/ExtractingCuratorOp
@4.0.0
+#<init>()V
+#getTypeAndPath()Lorg/apache/curator/framework/api/transaction/TypeAndPath;
+#get()Lorg/apache/zookeeper/Op;
+#addToDigest(Ljava/security/MessageDigest;)V

+###org/apache/curator/framework/imps/GetACLBuilderImpl
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Backgrounding;Lorg/apache/zookeeper/data/Stat;)V
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Lorg/apache/curator/framework/api/Pathable;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#forPath(Ljava/lang/String;)Ljava/util/List;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Ljava/lang/Object;

+###org/apache/curator/framework/imps/GetChildrenBuilderImpl
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/zookeeper/Watcher;Lorg/apache/curator/framework/imps/Backgrounding;Lorg/apache/zookeeper/data/Stat;)V
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Lorg/apache/curator/framework/api/WatchPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
+#watched()Lorg/apache/curator/framework/api/BackgroundPathable;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Lorg/apache/curator/framework/api/BackgroundPathable;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Lorg/apache/curator/framework/api/BackgroundPathable;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#forPath(Ljava/lang/String;)Ljava/util/List;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
+#watched()Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Ljava/lang/Object;

+###org/apache/curator/framework/imps/GetConfigBuilderImpl
@3.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;)V
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Lorg/apache/curator/framework/api/WatchBackgroundEnsembleable;
+#watched()Lorg/apache/curator/framework/api/BackgroundEnsembleable;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Lorg/apache/curator/framework/api/BackgroundEnsembleable;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Lorg/apache/curator/framework/api/BackgroundEnsembleable;
+#inBackground()Lorg/apache/curator/framework/api/Ensembleable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/Ensembleable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/Ensembleable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/Ensembleable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Ensembleable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Ensembleable;
+#forEnsemble()[B
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#forEnsemble()Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
+#watched()Ljava/lang/Object;
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Ljava/lang/Object;
@3.2.0
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerEnsembleable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerEnsembleable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerEnsembleable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerEnsembleable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerEnsembleable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerEnsembleable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Ensembleable;
-#inBackground()Lorg/apache/curator/framework/api/Ensembleable;
-#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/Ensembleable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/Ensembleable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/Ensembleable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Ensembleable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Ensembleable;
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Backgrounding;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/data/Stat;)V

+###org/apache/curator/framework/imps/GetDataBuilderImpl
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;Lorg/apache/curator/framework/imps/Backgrounding;Z)V
+#decompressed()Lorg/apache/curator/framework/api/GetDataWatchBackgroundStatable;
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Lorg/apache/curator/framework/api/WatchPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
+#watched()Lorg/apache/curator/framework/api/BackgroundPathable;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Lorg/apache/curator/framework/api/BackgroundPathable;
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Lorg/apache/curator/framework/api/BackgroundPathable;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#forPath(Ljava/lang/String;)[B
+#usingWatcher(Lorg/apache/curator/framework/api/CuratorWatcher;)Ljava/lang/Object;
+#usingWatcher(Lorg/apache/zookeeper/Watcher;)Ljava/lang/Object;
+#watched()Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
+#storingStatIn(Lorg/apache/zookeeper/data/Stat;)Ljava/lang/Object;
+#decompressed()Ljava/lang/Object;

+###org/apache/curator/framework/imps/GzipCompressionProvider
@2.0.0-incubating
+#<init>()V
+#compress(Ljava/lang/String;[B)[B
+#decompress(Ljava/lang/String;[B)[B

+###org/apache/curator/framework/imps/ProtectedUtils
@5.0.0
+#getProtectedPrefix(Ljava/lang/String;)Ljava/lang/String;
+#isProtectedZNode(Ljava/lang/String;)Z
+#normalize(Ljava/lang/String;)Ljava/lang/String;
+#normalizePath(Ljava/lang/String;)Ljava/lang/String;
+#extractProtectedId(Ljava/lang/String;)Ljava/util/Optional;
+#toProtectedZNode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#toProtectedZNodePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/curator/framework/imps/ReconfigBuilderImpl
@3.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;)V
+#inBackground()Lorg/apache/curator/framework/api/ReconfigBuilderMain;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
+#withNewMembers([Ljava/lang/String;)Lorg/apache/curator/framework/api/StatConfigureEnsembleable;
+#withNewMembers(Ljava/util/List;)Lorg/apache/curator/framework/api/StatConfigureEnsembleable;
+#joining([Ljava/lang/String;)Lorg/apache/curator/framework/api/LeaveStatConfigEnsembleable;
+#joining(Ljava/util/List;)Lorg/apache/curator/framework/api/LeaveStatConfigEnsembleable;
+#leaving([Ljava/lang/String;)Lorg/apache/curator/framework/api/JoinStatConfigEnsembleable;
+#leaving(Ljava/util/List;)Lorg/apache/curator/framework/api/JoinStatConfigEnsembleable;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#joining(Ljava/util/List;)Ljava/lang/Object;
+#joining([Ljava/lang/String;)Ljava/lang/Object;
+#leaving(Ljava/util/List;)Ljava/lang/Object;
+#leaving([Ljava/lang/String;)Ljava/lang/Object;
+#withNewMembers(Ljava/util/List;)Ljava/lang/Object;
+#withNewMembers([Ljava/lang/String;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
@3.2.0
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerReconfigBuilderMain;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerReconfigBuilderMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerReconfigBuilderMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerReconfigBuilderMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerReconfigBuilderMain;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerReconfigBuilderMain;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
-#inBackground()Lorg/apache/curator/framework/api/ReconfigBuilderMain;
-#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ReconfigBuilderMain;
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Backgrounding;Lorg/apache/zookeeper/data/Stat;JLjava/util/List;Ljava/util/List;Ljava/util/List;)V
+#forEnsemble()[B

+###org/apache/curator/framework/imps/RemoveWatchesBuilderImpl
@3.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;)V
+#remove(Lorg/apache/zookeeper/Watcher;)Lorg/apache/curator/framework/api/RemoveWatchesType;
+#remove(Lorg/apache/curator/framework/api/CuratorWatcher;)Lorg/apache/curator/framework/api/RemoveWatchesType;
+#removeAll()Lorg/apache/curator/framework/api/RemoveWatchesType;
+#ofType(Lorg/apache/zookeeper/Watcher$WatcherType;)Lorg/apache/curator/framework/api/RemoveWatchesLocal;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground()Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
+#guaranteed()Lorg/apache/curator/framework/api/RemoveWatchesLocal;
+#locally()Lorg/apache/curator/framework/api/BackgroundPathableQuietlyable;
+#quietly()Lorg/apache/curator/framework/api/BackgroundPathable;
+#forPath(Ljava/lang/String;)Ljava/lang/Void;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
+#quietly()Ljava/lang/Object;
+#guaranteed()Ljava/lang/Object;
@3.2.0
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground()Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/zookeeper/Watcher;Lorg/apache/curator/framework/api/CuratorWatcher;Lorg/apache/zookeeper/Watcher$WatcherType;ZZZLorg/apache/curator/framework/imps/Backgrounding;)V

+###org/apache/curator/framework/imps/SetACLBuilderImpl
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Backgrounding;Ljava/util/List;I)V
+#withACL(Ljava/util/List;)Lorg/apache/curator/framework/api/BackgroundPathable;
+#withVersion(I)Lorg/apache/curator/framework/api/ACLable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
+#forPath(Ljava/lang/String;)Lorg/apache/zookeeper/data/Stat;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#withACL(Ljava/util/List;)Ljava/lang/Object;
+#withVersion(I)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/curator/framework/imps/SetDataBuilderImpl
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Backgrounding;IZ)V
+#compressed()Lorg/apache/curator/framework/api/SetDataBackgroundVersionable;
+#withVersion(I)Lorg/apache/curator/framework/api/BackgroundPathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathAndBytesable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/PathAndBytesable;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#forPath(Ljava/lang/String;)Lorg/apache/zookeeper/data/Stat;
+#forPath(Ljava/lang/String;[B)Lorg/apache/zookeeper/data/Stat;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
+#forPath(Ljava/lang/String;[B)Ljava/lang/Object;
+#withVersion(I)Ljava/lang/Object;
+#compressed()Ljava/lang/Object;
@5.2.0
+#idempotent()Lorg/apache/curator/framework/api/SetDataBuilder;
+#idempotent()Ljava/lang/Object;

+###org/apache/curator/framework/imps/SyncBuilderImpl
@2.1.0-incubating
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;)V
+#inBackground()Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
+#performBackgroundOperation(Lorg/apache/curator/framework/imps/OperationAndData;)V
+#forPath(Ljava/lang/String;)Ljava/lang/Void;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
+#inBackground(Ljava/lang/Object;)Ljava/lang/Object;
+#inBackground()Ljava/lang/Object;
+#forPath(Ljava/lang/String;)Ljava/lang/Object;
@2.11.0
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground()Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
@3.0.0
+#inBackground()Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
-#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
-#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
@3.2.0
+#inBackground()Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/ErrorListenerPathable;
+#withUnhandledErrorListener(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground()Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
-#inBackground(Lorg/apache/curator/framework/api/BackgroundCallback;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/api/Pathable;
@3.3.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/imps/Backgrounding;)V

+###org/apache/curator/framework/imps/TransactionOpImpl
@3.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;)V
+#create()Lorg/apache/curator/framework/api/transaction/TransactionCreateBuilder;
+#delete()Lorg/apache/curator/framework/api/transaction/TransactionDeleteBuilder;
+#setData()Lorg/apache/curator/framework/api/transaction/TransactionSetDataBuilder;
+#check()Lorg/apache/curator/framework/api/transaction/TransactionCheckBuilder;

+###org/apache/curator/framework/imps/WatcherRemovalManager
@3.0.0

+###org/apache/curator/framework/imps/WatchesBuilderImpl
@5.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;)V
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/zookeeper/Watcher;Lorg/apache/curator/framework/api/CuratorWatcher;Lorg/apache/zookeeper/Watcher$WatcherType;ZZZLorg/apache/curator/framework/imps/Backgrounding;)V
+#add()Lorg/apache/curator/framework/api/AddWatchBuilder;

+###org/apache/curator/framework/imps/Watching
@5.0.0
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Z)V
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/zookeeper/Watcher;)V
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;Lorg/apache/curator/framework/api/CuratorWatcher;)V
+#<init>(Lorg/apache/curator/framework/imps/CuratorFrameworkImpl;)V

+###org/apache/curator/framework/listen/Listenable
@2.0.0-incubating
+#addListener(Ljava/lang/Object;)V
+#addListener(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
+#removeListener(Ljava/lang/Object;)V

+###org/apache/curator/framework/listen/ListenerEntry
@2.0.0-incubating
+#<init>(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V

+###org/apache/curator/framework/listen/ListenerManager
@4.2.0
+#clear()V
+#size()I
+#forEach(Ljava/util/function/Consumer;)V
@4.3.0
+#isEmpty()Z

+###org/apache/curator/framework/listen/MappingListenerManager
@4.2.0
+#mapping(Ljava/util/function/Function;)Lorg/apache/curator/framework/listen/ListenerManager;
+#addListener(Ljava/lang/Object;)V
+#addListener(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
+#removeListener(Ljava/lang/Object;)V
+#clear()V
+#size()I
+#forEach(Ljava/util/function/Consumer;)V

+###org/apache/curator/framework/listen/StandardListenerManager
@4.2.0
+#standard()Lorg/apache/curator/framework/listen/StandardListenerManager;
+#mappingStandard(Ljava/util/function/UnaryOperator;)Lorg/apache/curator/framework/listen/StandardListenerManager;
+#addListener(Ljava/lang/Object;)V
+#addListener(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
+#removeListener(Ljava/lang/Object;)V
+#clear()V
+#size()I
+#forEach(Ljava/util/function/Consumer;)V

+###org/apache/curator/framework/listen/UnaryListenerManager
@4.3.0

+###org/apache/curator/framework/schema/DefaultSchemaValidator
@3.2.0
+#<init>()V
+#isValid(Lorg/apache/curator/framework/schema/Schema;Ljava/lang/String;[BLjava/util/List;)Z

+###org/apache/curator/framework/schema/Schema$Allowance
@3.2.0
+#values()[Lorg/apache/curator/framework/schema/Schema$Allowance;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/schema/Schema$Allowance;

+###org/apache/curator/framework/schema/Schema
@3.2.0
+#builder(Ljava/lang/String;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#builder(Ljava/util/regex/Pattern;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#builderForRecipeParent(Ljava/lang/String;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#builderForRecipe(Ljava/lang/String;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#validateDelete()V
+#validateWatch(Z)V
+#validateCreate(Lorg/apache/zookeeper/CreateMode;[BLjava/util/List;)V
+#validateGeneral(Ljava/lang/String;[BLjava/util/List;)V
+#getName()Ljava/lang/String;
+#getRawPath()Ljava/lang/String;
+#getMetadata()Ljava/util/Map;
+#getPathRegex()Ljava/util/regex/Pattern;
+#getPath()Ljava/lang/String;
+#getDocumentation()Ljava/lang/String;
+#getSchemaValidator()Lorg/apache/curator/framework/schema/SchemaValidator;
+#getEphemeral()Lorg/apache/curator/framework/schema/Schema$Allowance;
+#getSequential()Lorg/apache/curator/framework/schema/Schema$Allowance;
+#getWatched()Lorg/apache/curator/framework/schema/Schema$Allowance;
+#canBeDeleted()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toDocumentation()Ljava/lang/String;
@3.2.1
+#validateDelete(Ljava/lang/String;)V
+#validateWatch(Ljava/lang/String;Z)V
+#validateCreate(Lorg/apache/zookeeper/CreateMode;Ljava/lang/String;[BLjava/util/List;)V
-#validateDelete()V
-#validateWatch(Z)V
-#validateCreate(Lorg/apache/zookeeper/CreateMode;[BLjava/util/List;)V

+###org/apache/curator/framework/schema/SchemaBuilder
@3.2.0
+#build()Lorg/apache/curator/framework/schema/Schema;
+#name(Ljava/lang/String;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#documentation(Ljava/lang/String;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#dataValidator(Lorg/apache/curator/framework/schema/SchemaValidator;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#ephemeral(Lorg/apache/curator/framework/schema/Schema$Allowance;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#sequential(Lorg/apache/curator/framework/schema/Schema$Allowance;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#watched(Lorg/apache/curator/framework/schema/Schema$Allowance;)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#canBeDeleted(Z)Lorg/apache/curator/framework/schema/SchemaBuilder;
+#metadata(Ljava/util/Map;)Lorg/apache/curator/framework/schema/SchemaBuilder;

+###org/apache/curator/framework/schema/SchemaSet
@3.2.0
+#getDefaultSchemaSet()Lorg/apache/curator/framework/schema/SchemaSet;
+#<init>(Ljava/util/List;Z)V
+#getSchemas()Ljava/util/Collection;
+#getSchema(Ljava/lang/String;)Lorg/apache/curator/framework/schema/Schema;
+#getNamedPath(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Ljava/lang/String;
+#getNamedSchema(Ljava/lang/String;)Lorg/apache/curator/framework/schema/Schema;
+#toDocumentation()Ljava/lang/String;

+###org/apache/curator/framework/schema/SchemaSetLoader$SchemaValidatorMapper
@3.2.0
+#getSchemaValidator(Ljava/lang/String;)Lorg/apache/curator/framework/schema/SchemaValidator;

+###org/apache/curator/framework/schema/SchemaSetLoader
@3.2.0
+#<init>(Ljava/lang/String;Lorg/apache/curator/framework/schema/SchemaSetLoader$SchemaValidatorMapper;)V
+#<init>(Ljava/io/Reader;Lorg/apache/curator/framework/schema/SchemaSetLoader$SchemaValidatorMapper;)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;Lorg/apache/curator/framework/schema/SchemaSetLoader$SchemaValidatorMapper;)V
+#toSchemaSet(Z)Lorg/apache/curator/framework/schema/SchemaSet;
+#getSchemas()Ljava/util/List;

+###org/apache/curator/framework/schema/SchemaValidator
@3.2.0
+#isValid(Lorg/apache/curator/framework/schema/Schema;Ljava/lang/String;[BLjava/util/List;)Z

+###org/apache/curator/framework/schema/SchemaViolation$ViolatorData
@3.2.1
+#<init>(Ljava/lang/String;[BLjava/util/List;)V
+#getPath()Ljava/lang/String;
+#getData()[B
+#getAcl()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/curator/framework/schema/SchemaViolation
@3.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/curator/framework/schema/Schema;Ljava/lang/String;)V
+#getSchema()Lorg/apache/curator/framework/schema/Schema;
+#getViolation()Ljava/lang/String;
@3.2.1
+#<init>(Lorg/apache/curator/framework/schema/Schema;Lorg/apache/curator/framework/schema/SchemaViolation$ViolatorData;Ljava/lang/String;)V
+#getViolatorData()Lorg/apache/curator/framework/schema/SchemaViolation$ViolatorData;
+#toString()Ljava/lang/String;

+###org/apache/curator/framework/state/CircuitBreakingConnectionStateListener
@4.2.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/state/ConnectionStateListener;Lorg/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/state/ConnectionStateListener;Lorg/apache/curator/RetryPolicy;Ljava/util/concurrent/ScheduledExecutorService;)V
+#stateChanged(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/state/ConnectionState;)V
+#isOpen()Z

+###org/apache/curator/framework/state/ConnectionState
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/state/ConnectionState;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/state/ConnectionState;
@2.6.0
+#isConnected()Z

+###org/apache/curator/framework/state/ConnectionStateErrorPolicy
@3.0.0
+#isErrorState(Lorg/apache/curator/framework/state/ConnectionState;)Z

+###org/apache/curator/framework/state/ConnectionStateListener
@2.0.0-incubating
+#stateChanged(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/state/ConnectionState;)V
@4.2.0
+#doNotDecorate()Z
@4.3.0
+#doNotProxy()Z
-#doNotDecorate()Z

+###org/apache/curator/framework/state/ConnectionStateListenerManagerFactory
@4.3.0
+#newManager(Lorg/apache/curator/framework/CuratorFramework;)Lorg/apache/curator/framework/listen/UnaryListenerManager;
+#circuitBreaking(Lorg/apache/curator/RetryPolicy;)Lorg/apache/curator/framework/state/ConnectionStateListenerManagerFactory;
+#circuitBreaking(Lorg/apache/curator/RetryPolicy;Ljava/util/concurrent/ScheduledExecutorService;)Lorg/apache/curator/framework/state/ConnectionStateListenerManagerFactory;

+###org/apache/curator/framework/state/ConnectionStateManager
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ThreadFactory;)V
+#start()V
+#close()V
+#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;
+#addStateChange(Lorg/apache/curator/framework/state/ConnectionState;)V
@2.4.0
+#setToSuspended()Z
+#addStateChange(Lorg/apache/curator/framework/state/ConnectionState;)Z
-#addStateChange(Lorg/apache/curator/framework/state/ConnectionState;)V
@2.6.0
+#blockUntilConnected(ILjava/util/concurrent/TimeUnit;)Z
+#isConnected()Z
@3.0.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ThreadFactory;II)V
-#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ThreadFactory;)V
@4.2.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ThreadFactory;IILorg/apache/curator/framework/state/ConnectionStateListenerDecorator;)V
+#getListenable()Lorg/apache/curator/framework/listen/Listenable;
-#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;
@4.3.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ThreadFactory;IILorg/apache/curator/framework/state/ConnectionStateListenerManagerFactory;)V
-#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ThreadFactory;IILorg/apache/curator/framework/state/ConnectionStateListenerDecorator;)V

+###org/apache/curator/framework/state/SessionConnectionStateErrorPolicy
@3.0.0
+#<init>()V
+#isErrorState(Lorg/apache/curator/framework/state/ConnectionState;)Z

+###org/apache/curator/framework/state/StandardConnectionStateErrorPolicy
@3.0.0
+#<init>()V
+#isErrorState(Lorg/apache/curator/framework/state/ConnectionState;)Z

+###org/apache/curator/framework/listen/ListenerContainer
@2.0.0-incubating
+#<init>()V
+#addListener(Ljava/lang/Object;)V
+#addListener(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
+#removeListener(Ljava/lang/Object;)V
+#clear()V
+#size()I
+#forEach(Lcom/google/common/base/Function;)V
@5.0.0
-###org/apache/curator/framework/listen/ListenerContainer

+###org/apache/curator/framework/SafeIsTtlMode
@4.0.0
+#isTtl(Lorg/apache/zookeeper/CreateMode;)Z
@5.0.0
-###org/apache/curator/framework/SafeIsTtlMode

+###org/apache/curator/framework/api/ACLBackgroundPathable
@2.0.0-incubating
@3.0.0
-###org/apache/curator/framework/api/ACLBackgroundPathable

+###org/apache/curator/framework/api/ACLVersionBackgroundPathable
@2.0.0-incubating
@3.0.0
-###org/apache/curator/framework/api/ACLVersionBackgroundPathable

+###org/apache/curator/framework/api/CreateModalPathAndBytesable
@2.0.0-incubating
@3.0.0
-###org/apache/curator/framework/api/CreateModalPathAndBytesable

+###org/apache/curator/framework/api/DeleteBuilderBase
@2.0.0-incubating
@2.3.0
-###org/apache/curator/framework/api/DeleteBuilderBase

+###org/apache/curator/framework/state/ConnectionStateListenerDecorator
@4.2.0
+#decorateListener(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/state/ConnectionStateListener;)Lorg/apache/curator/framework/state/ConnectionStateListener;
+#circuitBreaking(Lorg/apache/curator/RetryPolicy;)Lorg/apache/curator/framework/state/ConnectionStateListenerDecorator;
+#circuitBreaking(Lorg/apache/curator/RetryPolicy;Ljava/util/concurrent/ScheduledExecutorService;)Lorg/apache/curator/framework/state/ConnectionStateListenerDecorator;
@4.3.0
-###org/apache/curator/framework/state/ConnectionStateListenerDecorator
