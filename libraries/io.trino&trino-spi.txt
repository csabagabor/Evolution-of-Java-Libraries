
+###io/trino/spi/statistics/ColumnStatisticType
@351
+#values()[Lio/trino/spi/statistics/ColumnStatisticType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/statistics/ColumnStatisticType;

+###io/trino/spi/statistics/ColumnStatistics$Builder
@351
+#<init>()V
+#setNullsFraction(Lio/trino/spi/statistics/Estimate;)Lio/trino/spi/statistics/ColumnStatistics$Builder;
+#setDistinctValuesCount(Lio/trino/spi/statistics/Estimate;)Lio/trino/spi/statistics/ColumnStatistics$Builder;
+#setDataSize(Lio/trino/spi/statistics/Estimate;)Lio/trino/spi/statistics/ColumnStatistics$Builder;
+#setRange(Lio/trino/spi/statistics/DoubleRange;)Lio/trino/spi/statistics/ColumnStatistics$Builder;
+#setRange(Ljava/util/Optional;)Lio/trino/spi/statistics/ColumnStatistics$Builder;
+#build()Lio/trino/spi/statistics/ColumnStatistics;

+###io/trino/spi/statistics/TableStatisticsMetadata
@351
+#empty()Lio/trino/spi/statistics/TableStatisticsMetadata;
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/List;)V
+#getColumnStatistics()Ljava/util/Set;
+#getTableStatistics()Ljava/util/Set;
+#getGroupingColumns()Ljava/util/List;
+#isEmpty()Z

+###io/trino/spi/statistics/StatsUtil
@364
+#toStatsRepresentation(Lio/trino/spi/type/Type;Ljava/lang/Object;)Ljava/util/OptionalDouble;

+###io/trino/spi/statistics/TableStatisticType
@351
+#values()[Lio/trino/spi/statistics/TableStatisticType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/statistics/TableStatisticType;

+###io/trino/spi/statistics/ComputedStatistics
@351
+#getGroupingColumns()Ljava/util/List;
+#getGroupingValues()Ljava/util/List;
+#getTableStatistics()Ljava/util/Map;
+#getColumnStatistics()Ljava/util/Map;
+#builder(Ljava/util/List;Ljava/util/List;)Lio/trino/spi/statistics/ComputedStatistics$Builder;

+###io/trino/spi/statistics/ColumnStatistics
@351
+#empty()Lio/trino/spi/statistics/ColumnStatistics;
+#<init>(Lio/trino/spi/statistics/Estimate;Lio/trino/spi/statistics/Estimate;Lio/trino/spi/statistics/Estimate;Ljava/util/Optional;)V
+#getNullsFraction()Lio/trino/spi/statistics/Estimate;
+#getDistinctValuesCount()Lio/trino/spi/statistics/Estimate;
+#getDataSize()Lio/trino/spi/statistics/Estimate;
+#getRange()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#builder()Lio/trino/spi/statistics/ColumnStatistics$Builder;

+###io/trino/spi/statistics/DoubleRange
@351
+#<init>(DD)V
+#getMin()D
+#getMax()D
+#union(Lio/trino/spi/statistics/DoubleRange;Lio/trino/spi/statistics/DoubleRange;)Lio/trino/spi/statistics/DoubleRange;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@364
+#from(Lio/trino/spi/type/Type;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;

+###io/trino/spi/statistics/TableStatistics$Builder
@351
+#<init>()V
+#setRowCount(Lio/trino/spi/statistics/Estimate;)Lio/trino/spi/statistics/TableStatistics$Builder;
+#setColumnStatistics(Lio/trino/spi/connector/ColumnHandle;Lio/trino/spi/statistics/ColumnStatistics;)Lio/trino/spi/statistics/TableStatistics$Builder;
+#build()Lio/trino/spi/statistics/TableStatistics;

+###io/trino/spi/statistics/TableStatistics
@351
+#empty()Lio/trino/spi/statistics/TableStatistics;
+#<init>(Lio/trino/spi/statistics/Estimate;Ljava/util/Map;)V
+#getRowCount()Lio/trino/spi/statistics/Estimate;
+#getColumnStatistics()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#builder()Lio/trino/spi/statistics/TableStatistics$Builder;
@358
+#isEmpty()Z

+###io/trino/spi/statistics/ColumnStatisticMetadata
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/statistics/ColumnStatisticType;)V
+#getColumnName()Ljava/lang/String;
+#getStatisticType()Lio/trino/spi/statistics/ColumnStatisticType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@398
+#<init>(Ljava/lang/String;Ljava/lang/String;Lio/trino/spi/statistics/ColumnStatisticType;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lio/trino/spi/expression/FunctionName;)V
+#fromJson(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/spi/statistics/ColumnStatisticMetadata;[deprecated]
+#getConnectorAggregationId()Ljava/lang/String;
+#getStatisticTypeIfPresent()Ljava/util/Optional;
+#getAggregation()Lio/trino/spi/expression/FunctionName;
+#getAggregationIfPresent()Ljava/util/Optional;

+###io/trino/spi/statistics/ComputedStatistics$Builder
@351
+#addTableStatistic(Lio/trino/spi/statistics/TableStatisticType;Lio/trino/spi/block/Block;)Lio/trino/spi/statistics/ComputedStatistics$Builder;
+#addColumnStatistic(Lio/trino/spi/statistics/ColumnStatisticMetadata;Lio/trino/spi/block/Block;)Lio/trino/spi/statistics/ComputedStatistics$Builder;
+#build()Lio/trino/spi/statistics/ComputedStatistics;

+###io/trino/spi/statistics/Estimate
@351
+#unknown()Lio/trino/spi/statistics/Estimate;
+#zero()Lio/trino/spi/statistics/Estimate;
+#of(D)Lio/trino/spi/statistics/Estimate;
+#isUnknown()Z
+#getValue()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/PageBuilder
@351
+#<init>(Ljava/util/List;)V
+#<init>(ILjava/util/List;)V
+#withMaxPageSize(ILjava/util/List;)Lio/trino/spi/PageBuilder;
+#reset()V
+#newPageBuilderLike()Lio/trino/spi/PageBuilder;
+#getBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#getType(I)Lio/trino/spi/type/Type;
+#declarePosition()V
+#declarePositions(I)V
+#isFull()Z
+#isEmpty()Z
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#build()Lio/trino/spi/Page;
@395
+#reset(I)V

+###io/trino/spi/metrics/Metric
@360

+###io/trino/spi/metrics/Timing
@368
+#getDuration()Ljava/time/Duration;

+###io/trino/spi/metrics/Metrics$Accumulator
@360
+#add(Lio/trino/spi/metrics/Metrics;)Lio/trino/spi/metrics/Metrics$Accumulator;
+#get()Lio/trino/spi/metrics/Metrics;

+###io/trino/spi/metrics/Count
@360
+#getTotal()J

+###io/trino/spi/metrics/Distribution
@360
+#getTotal()J
+#getPercentile(D)D

+###io/trino/spi/metrics/Metrics
@360
+#<init>(Ljava/util/Map;)V
+#getMetrics()Ljava/util/Map;
+#mergeWith(Lio/trino/spi/metrics/Metrics;)Lio/trino/spi/metrics/Metrics;
+#accumulator()Lio/trino/spi/metrics/Metrics$Accumulator;
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;
@384
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@405
+#toString()Ljava/lang/String;

+###io/trino/spi/transaction/IsolationLevel
@351
+#values()[Lio/trino/spi/transaction/IsolationLevel;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/transaction/IsolationLevel;
+#meetsRequirementOf(Lio/trino/spi/transaction/IsolationLevel;)Z
+#toString()Ljava/lang/String;
+#checkConnectorSupports(Lio/trino/spi/transaction/IsolationLevel;Lio/trino/spi/transaction/IsolationLevel;)V

+###io/trino/spi/Location
@351
+#<init>(II)V
+#getLineNumber()I
+#getColumnNumber()I
+#toString()Ljava/lang/String;

+###io/trino/spi/StandardErrorCode
@351
+#values()[Lio/trino/spi/StandardErrorCode;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/StandardErrorCode;
+#toErrorCode()Lio/trino/spi/ErrorCode;

+###io/trino/spi/predicate/EquatableValueSet
@351
+#<init>(Lio/trino/spi/type/Type;ZLjava/util/Set;)V
+#getType()Lio/trino/spi/type/Type;
+#inclusive()Z
+#getEntries()Ljava/util/Set;
+#getValues()Ljava/util/Collection;
+#getValuesCount()I
+#isNone()Z
+#isAll()Z
+#isSingleValue()Z
+#getSingleValue()Ljava/lang/Object;
+#isDiscreteSet()Z
+#getDiscreteSet()Ljava/util/List;
+#containsValue(Ljava/lang/Object;)Z
+#getDiscreteValues()Lio/trino/spi/predicate/DiscreteValues;
+#getValuesProcessor()Lio/trino/spi/predicate/ValuesProcessor;
+#intersect(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/EquatableValueSet;
+#overlaps(Lio/trino/spi/predicate/ValueSet;)Z
+#union(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/EquatableValueSet;
+#complement()Lio/trino/spi/predicate/EquatableValueSet;
+#toString()Ljava/lang/String;
+#toString(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#complement()Lio/trino/spi/predicate/ValueSet;
+#union(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
+#intersect(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
@357
+#toString(Lio/trino/spi/connector/ConnectorSession;I)Ljava/lang/String;
@364
+#contains(Lio/trino/spi/predicate/ValueSet;)Z
@368
+#getRetainedSizeInBytes()J
@369
+#tryExpandRanges(I)Ljava/util/Optional;

+###io/trino/spi/predicate/AllOrNoneValueSet
@351
+#<init>(Lio/trino/spi/type/Type;Z)V
+#getType()Lio/trino/spi/type/Type;
+#isNone()Z
+#isAll()Z
+#isSingleValue()Z
+#getSingleValue()Ljava/lang/Object;
+#isDiscreteSet()Z
+#getDiscreteSet()Ljava/util/List;
+#containsValue(Ljava/lang/Object;)Z
+#getAllOrNone()Lio/trino/spi/predicate/AllOrNone;
+#getValuesProcessor()Lio/trino/spi/predicate/ValuesProcessor;
+#intersect(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
+#union(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
+#complement()Lio/trino/spi/predicate/ValueSet;
+#toString()Ljava/lang/String;
+#toString(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@357
+#toString(Lio/trino/spi/connector/ConnectorSession;I)Ljava/lang/String;
@368
+#getRetainedSizeInBytes()J
@369
+#tryExpandRanges(I)Ljava/util/Optional;

+###io/trino/spi/predicate/TupleDomain
@351
+#withColumnDomains(Ljava/util/Map;)Lio/trino/spi/predicate/TupleDomain;
+#none()Lio/trino/spi/predicate/TupleDomain;
+#all()Lio/trino/spi/predicate/TupleDomain;
+#extractFixedValues(Lio/trino/spi/predicate/TupleDomain;)Ljava/util/Optional;
+#extractDiscreteValues(Lio/trino/spi/predicate/TupleDomain;)Ljava/util/Optional;
+#fromFixedValues(Ljava/util/Map;)Lio/trino/spi/predicate/TupleDomain;
+#fromColumnDomains(Ljava/util/Optional;)Lio/trino/spi/predicate/TupleDomain;
+#getColumnDomains()Ljava/util/Optional;
+#isAll()Z
+#isNone()Z
+#getDomains()Ljava/util/Optional;
+#intersect(Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/predicate/TupleDomain;
+#columnWiseUnion(Lio/trino/spi/predicate/TupleDomain;Lio/trino/spi/predicate/TupleDomain;[Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/predicate/TupleDomain;
+#columnWiseUnion(Ljava/util/List;)Lio/trino/spi/predicate/TupleDomain;
+#overlaps(Lio/trino/spi/predicate/TupleDomain;)Z
+#contains(Lio/trino/spi/predicate/TupleDomain;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toString(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/String;
+#filter(Ljava/util/function/BiPredicate;)Lio/trino/spi/predicate/TupleDomain;
+#transform(Ljava/util/function/Function;)Lio/trino/spi/predicate/TupleDomain;
+#simplify()Lio/trino/spi/predicate/TupleDomain;
+#simplify(I)Lio/trino/spi/predicate/TupleDomain;
+#transformDomains(Ljava/util/function/BiFunction;)Lio/trino/spi/predicate/TupleDomain;
@352
*#fromColumnDomains(Ljava/util/Optional;)Lio/trino/spi/predicate/TupleDomain;[deprecated]
*#getColumnDomains()Ljava/util/Optional;[deprecated]
@357
*#transform(Ljava/util/function/Function;)Lio/trino/spi/predicate/TupleDomain;[deprecated]
@358
+#transformKeys(Ljava/util/function/Function;)Lio/trino/spi/predicate/TupleDomain;
@360
-#transform(Ljava/util/function/Function;)Lio/trino/spi/predicate/TupleDomain;[deprecated]
@363
+#intersect(Ljava/util/List;)Lio/trino/spi/predicate/TupleDomain;
+#maximal(Ljava/util/List;)Ljava/util/Optional;
@366
+#asPredicate()Ljava/util/function/Predicate;
@368
+#getRetainedSizeInBytes(Ljava/util/function/ToLongFunction;)J

+###io/trino/spi/predicate/SortedRangeSet
@351
+#copyOf(Lio/trino/spi/type/Type;Ljava/util/List;)Lio/trino/spi/predicate/SortedRangeSet;
+#getType()Lio/trino/spi/type/Type;
+#getOrderedRanges()Ljava/util/List;
+#getRangeCount()I
+#isNone()Z
+#isAll()Z
+#isSingleValue()Z
+#getSingleValue()Ljava/lang/Object;
+#isDiscreteSet()Z
+#getDiscreteSet()Ljava/util/List;
+#containsValue(Ljava/lang/Object;)Z
+#getSpan()Lio/trino/spi/predicate/Range;
+#getRanges()Lio/trino/spi/predicate/Ranges;
+#getValuesProcessor()Lio/trino/spi/predicate/ValuesProcessor;
+#intersect(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/SortedRangeSet;
+#overlaps(Lio/trino/spi/predicate/ValueSet;)Z
+#union(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/SortedRangeSet;
+#union(Ljava/util/Collection;)Lio/trino/spi/predicate/SortedRangeSet;
+#complement()Lio/trino/spi/predicate/SortedRangeSet;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toString(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/String;
+#complement()Lio/trino/spi/predicate/ValueSet;
+#union(Ljava/util/Collection;)Lio/trino/spi/predicate/ValueSet;
+#union(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
+#intersect(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
@352
+#fromJson(Lio/trino/spi/type/Type;[ZLio/trino/spi/block/Block;)Lio/trino/spi/predicate/SortedRangeSet;[deprecated]
+#getInclusive()[Z
+#getSortedRanges()Lio/trino/spi/block/Block;
@357
+#toString(Lio/trino/spi/connector/ConnectorSession;I)Ljava/lang/String;
@364
+#contains(Lio/trino/spi/predicate/ValueSet;)Z
@368
+#getRetainedSizeInBytes()J
@369
+#tryExpandRanges(I)Ljava/util/Optional;
@405
+#builder(Lio/trino/spi/type/Type;I)Lio/trino/spi/predicate/SortedRangeSet$Builder;

+###io/trino/spi/predicate/Domain$DiscreteSet
@360
+#getNonNullValues()Ljava/util/List;
+#containsNull()Z

+###io/trino/spi/predicate/ValueSet
@351
+#none(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/ValueSet;
+#all(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/ValueSet;
+#of(Lio/trino/spi/type/Type;Ljava/lang/Object;[Ljava/lang/Object;)Lio/trino/spi/predicate/ValueSet;
+#copyOf(Lio/trino/spi/type/Type;Ljava/util/Collection;)Lio/trino/spi/predicate/ValueSet;
+#ofRanges(Lio/trino/spi/predicate/Range;[Lio/trino/spi/predicate/Range;)Lio/trino/spi/predicate/ValueSet;
+#copyOfRanges(Lio/trino/spi/type/Type;Ljava/util/Collection;)Lio/trino/spi/predicate/ValueSet;
+#getType()Lio/trino/spi/type/Type;
+#isNone()Z
+#isAll()Z
+#isSingleValue()Z
+#getSingleValue()Ljava/lang/Object;
+#isDiscreteSet()Z
+#getDiscreteSet()Ljava/util/List;
+#containsValue(Ljava/lang/Object;)Z
+#getDiscreteValues()Lio/trino/spi/predicate/DiscreteValues;
+#getRanges()Lio/trino/spi/predicate/Ranges;
+#getValuesProcessor()Lio/trino/spi/predicate/ValuesProcessor;
+#intersect(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
+#union(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
+#union(Ljava/util/Collection;)Lio/trino/spi/predicate/ValueSet;
+#complement()Lio/trino/spi/predicate/ValueSet;
+#overlaps(Lio/trino/spi/predicate/ValueSet;)Z
+#subtract(Lio/trino/spi/predicate/ValueSet;)Lio/trino/spi/predicate/ValueSet;
+#contains(Lio/trino/spi/predicate/ValueSet;)Z
+#toString()Ljava/lang/String;
+#toString(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/String;
@357
+#toString(Lio/trino/spi/connector/ConnectorSession;I)Ljava/lang/String;
@361
+#ofRanges(Ljava/util/List;)Lio/trino/spi/predicate/ValueSet;
@368
+#getRetainedSizeInBytes()J
@369
+#tryExpandRanges(I)Ljava/util/Optional;

+###io/trino/spi/predicate/ValuesProcessor
@351
+#transform(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V

+###io/trino/spi/predicate/Range
@351
+#<init>(Lio/trino/spi/predicate/Marker;Lio/trino/spi/predicate/Marker;)V
+#all(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Range;
+#greaterThan(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Range;
+#greaterThanOrEqual(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Range;
+#lessThan(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Range;
+#lessThanOrEqual(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Range;
+#equal(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Range;
+#range(Lio/trino/spi/type/Type;Ljava/lang/Object;ZLjava/lang/Object;Z)Lio/trino/spi/predicate/Range;
+#getType()Lio/trino/spi/type/Type;
+#getLow()Lio/trino/spi/predicate/Marker;
+#getHigh()Lio/trino/spi/predicate/Marker;
+#isSingleValue()Z
+#getSingleValue()Ljava/lang/Object;
+#isAll()Z
+#includes(Lio/trino/spi/predicate/Marker;)Z
+#contains(Lio/trino/spi/predicate/Range;)Z
+#span(Lio/trino/spi/predicate/Range;)Lio/trino/spi/predicate/Range;
+#overlaps(Lio/trino/spi/predicate/Range;)Z
+#intersect(Lio/trino/spi/predicate/Range;)Lio/trino/spi/predicate/Range;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toString(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/String;
@353
*#<init>(Lio/trino/spi/predicate/Marker;Lio/trino/spi/predicate/Marker;)V[deprecated]
*#getLow()Lio/trino/spi/predicate/Marker;[deprecated]
+#isLowInclusive()Z
+#isLowUnbounded()Z
+#getLowBoundedValue()Ljava/lang/Object;
+#getLowValue()Ljava/util/Optional;
*#getHigh()Lio/trino/spi/predicate/Marker;[deprecated]
+#isHighInclusive()Z
+#isHighUnbounded()Z
+#getHighBoundedValue()Ljava/lang/Object;
+#getHighValue()Ljava/util/Optional;
*#includes(Lio/trino/spi/predicate/Marker;)Z[deprecated]
+#intersect(Lio/trino/spi/predicate/Range;)Ljava/util/Optional;
-#intersect(Lio/trino/spi/predicate/Range;)Lio/trino/spi/predicate/Range;
@354
-#<init>(Lio/trino/spi/predicate/Marker;Lio/trino/spi/predicate/Marker;)V[deprecated]
-#getLow()Lio/trino/spi/predicate/Marker;[deprecated]
-#getHigh()Lio/trino/spi/predicate/Marker;[deprecated]
-#includes(Lio/trino/spi/predicate/Marker;)Z[deprecated]

+###io/trino/spi/predicate/TupleDomain$ColumnDomain
@351
+#<init>(Ljava/lang/Object;Lio/trino/spi/predicate/Domain;)V
+#getColumn()Ljava/lang/Object;
+#getDomain()Lio/trino/spi/predicate/Domain;

+###io/trino/spi/predicate/Ranges
@351
+#getRangeCount()I
+#getOrderedRanges()Ljava/util/List;
+#getSpan()Lio/trino/spi/predicate/Range;

+###io/trino/spi/predicate/NullableValue
@351
+#<init>(Lio/trino/spi/type/Type;Ljava/lang/Object;)V
+#of(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/NullableValue;
+#asNull(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/NullableValue;
+#fromSerializable(Lio/trino/spi/predicate/NullableValue$Serializable;)Lio/trino/spi/predicate/NullableValue;
+#getSerializable()Lio/trino/spi/predicate/NullableValue$Serializable;
+#asBlock()Lio/trino/spi/block/Block;
+#getType()Lio/trino/spi/type/Type;
+#isNull()Z
+#getValue()Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/spi/predicate/DiscreteValues
@351
+#isInclusive()Z
+#getValues()Ljava/util/Collection;
+#getValuesCount()I

+###io/trino/spi/predicate/Domain
@351
+#create(Lio/trino/spi/predicate/ValueSet;Z)Lio/trino/spi/predicate/Domain;
+#none(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Domain;
+#all(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Domain;
+#onlyNull(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Domain;
+#notNull(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Domain;
+#singleValue(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Domain;
+#multipleValues(Lio/trino/spi/type/Type;Ljava/util/List;)Lio/trino/spi/predicate/Domain;
+#getType()Lio/trino/spi/type/Type;
+#getValues()Lio/trino/spi/predicate/ValueSet;
+#isNullAllowed()Z
+#isNone()Z
+#isAll()Z
+#isSingleValue()Z
+#isNullableSingleValue()Z
+#isOnlyNull()Z
+#getSingleValue()Ljava/lang/Object;
+#getNullableSingleValue()Ljava/lang/Object;
+#includesNullableValue(Ljava/lang/Object;)Z
+#overlaps(Lio/trino/spi/predicate/Domain;)Z
+#contains(Lio/trino/spi/predicate/Domain;)Z
+#intersect(Lio/trino/spi/predicate/Domain;)Lio/trino/spi/predicate/Domain;
+#union(Lio/trino/spi/predicate/Domain;)Lio/trino/spi/predicate/Domain;
+#union(Ljava/util/List;)Lio/trino/spi/predicate/Domain;
+#complement()Lio/trino/spi/predicate/Domain;
+#subtract(Lio/trino/spi/predicate/Domain;)Lio/trino/spi/predicate/Domain;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#simplify()Lio/trino/spi/predicate/Domain;
+#simplify(I)Lio/trino/spi/predicate/Domain;
+#toString()Ljava/lang/String;
+#toString(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/String;
@357
+#toString(Lio/trino/spi/connector/ConnectorSession;I)Ljava/lang/String;
@360
+#isNullableDiscreteSet()Z
+#getNullableDiscreteSet()Lio/trino/spi/predicate/Domain$DiscreteSet;
@362
+#singleValue(Lio/trino/spi/type/Type;Ljava/lang/Object;Z)Lio/trino/spi/predicate/Domain;
+#multipleValues(Lio/trino/spi/type/Type;Ljava/util/List;Z)Lio/trino/spi/predicate/Domain;
@368
+#getRetainedSizeInBytes()J

+###io/trino/spi/predicate/NullableValue$Serializable
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)V
+#getType()Lio/trino/spi/type/Type;
+#getBlock()Lio/trino/spi/block/Block;

+###io/trino/spi/predicate/AllOrNone
@351
+#isAll()Z

+###io/trino/spi/predicate/Utils
@351
+#nativeValueToBlock(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/block/Block;
@381
+#blockToNativeValue(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)Ljava/lang/Object;

+###io/trino/spi/predicate/EquatableValueSet$ValueEntry
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;)V
+#create(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/EquatableValueSet$ValueEntry;
+#getType()Lio/trino/spi/type/Type;
+#getBlock()Lio/trino/spi/block/Block;
+#getValue()Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@368
+#getRetainedSizeInBytes()J

+###io/trino/spi/PageIndexerFactory
@351
+#createPageIndexer(Ljava/util/List;)Lio/trino/spi/PageIndexer;

+###io/trino/spi/memory/MemoryAllocation
@351
+#<init>(Ljava/lang/String;J)V
+#getTag()Ljava/lang/String;
+#getAllocation()J

+###io/trino/spi/memory/MemoryPoolInfo
@351
+#<init>(JJJLjava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
+#getMaxBytes()J
+#getFreeBytes()J
+#getReservedBytes()J
+#getReservedRevocableBytes()J
+#getQueryMemoryReservations()Ljava/util/Map;
+#getQueryMemoryAllocations()Ljava/util/Map;
+#getQueryMemoryRevocableReservations()Ljava/util/Map;
+#toString()Ljava/lang/String;
@377
+#<init>(JJJLjava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
+#getTaskMemoryReservations()Ljava/util/Map;
+#getTaskMemoryRevocableReservations()Ljava/util/Map;
-#<init>(JJJLjava/util/Map;Ljava/util/Map;Ljava/util/Map;)V

+###io/trino/spi/memory/MemoryPoolId
@351
+#<init>(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@372
-###io/trino/spi/memory/MemoryPoolId

+###io/trino/spi/memory/ClusterMemoryPoolManager
@351
+#addChangeListener(Lio/trino/spi/memory/MemoryPoolId;Ljava/util/function/Consumer;)V
@372
+#addChangeListener(Ljava/util/function/Consumer;)V
-#addChangeListener(Lio/trino/spi/memory/MemoryPoolId;Ljava/util/function/Consumer;)V

+###io/trino/spi/security/GroupProvider
@351
+#getGroups(Ljava/lang/String;)Ljava/util/Set;

+###io/trino/spi/security/PasswordAuthenticatorFactory
@351
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;)Lio/trino/spi/security/PasswordAuthenticator;

+###io/trino/spi/security/SystemSecurityContext
@351
+#<init>(Lio/trino/spi/security/Identity;Ljava/util/Optional;)V
+#getIdentity()Lio/trino/spi/security/Identity;
+#getQueryId()Ljava/util/Optional;

+###io/trino/spi/security/SelectedRole
@351
+#<init>(Lio/trino/spi/security/SelectedRole$Type;Ljava/util/Optional;)V
+#getType()Lio/trino/spi/security/SelectedRole$Type;
+#getRole()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/security/SelectedRole;

+###io/trino/spi/security/CertificateAuthenticatorFactory
@351
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;)Lio/trino/spi/security/CertificateAuthenticator;

+###io/trino/spi/security/SystemAccessControlFactory
@351
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;)Lio/trino/spi/security/SystemAccessControl;

+###io/trino/spi/security/HeaderAuthenticator
@363
+#createAuthenticatedPrincipal(Lio/trino/spi/security/HeaderAuthenticator$Headers;)Ljava/security/Principal;

+###io/trino/spi/security/GroupProviderFactory
@351
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;)Lio/trino/spi/security/GroupProvider;

+###io/trino/spi/security/Identity$Builder
@351
+#<init>(Ljava/lang/String;)V
+#withUser(Ljava/lang/String;)Lio/trino/spi/security/Identity$Builder;
+#withPrincipal(Ljava/security/Principal;)Lio/trino/spi/security/Identity$Builder;
+#withPrincipal(Ljava/util/Optional;)Lio/trino/spi/security/Identity$Builder;
+#withRole(Ljava/lang/String;Lio/trino/spi/security/SelectedRole;)Lio/trino/spi/security/Identity$Builder;
+#withRoles(Ljava/util/Map;)Lio/trino/spi/security/Identity$Builder;
+#withAdditionalRoles(Ljava/util/Map;)Lio/trino/spi/security/Identity$Builder;
+#withExtraCredentials(Ljava/util/Map;)Lio/trino/spi/security/Identity$Builder;
+#withAdditionalExtraCredentials(Ljava/util/Map;)Lio/trino/spi/security/Identity$Builder;
+#withOnDestroy(Ljava/lang/Runnable;)V
+#withGroups(Ljava/util/Set;)Lio/trino/spi/security/Identity$Builder;
+#withAdditionalGroups(Ljava/util/Set;)Lio/trino/spi/security/Identity$Builder;
+#build()Lio/trino/spi/security/Identity;
@362
+#withEnabledRoles(Ljava/util/Set;)Lio/trino/spi/security/Identity$Builder;
*#withRole(Ljava/lang/String;Lio/trino/spi/security/SelectedRole;)Lio/trino/spi/security/Identity$Builder;[deprecated]
*#withRoles(Ljava/util/Map;)Lio/trino/spi/security/Identity$Builder;[deprecated]
*#withAdditionalRoles(Ljava/util/Map;)Lio/trino/spi/security/Identity$Builder;[deprecated]
+#withConnectorRole(Ljava/lang/String;Lio/trino/spi/security/SelectedRole;)Lio/trino/spi/security/Identity$Builder;
+#withConnectorRoles(Ljava/util/Map;)Lio/trino/spi/security/Identity$Builder;
+#withAdditionalConnectorRoles(Ljava/util/Map;)Lio/trino/spi/security/Identity$Builder;

+###io/trino/spi/security/Identity
@351
+#getUser()Ljava/lang/String;
+#getGroups()Ljava/util/Set;
+#getPrincipal()Ljava/util/Optional;
+#getRoles()Ljava/util/Map;
+#getExtraCredentials()Ljava/util/Map;
+#toConnectorIdentity()Lio/trino/spi/security/ConnectorIdentity;
+#toConnectorIdentity(Ljava/lang/String;)Lio/trino/spi/security/ConnectorIdentity;
+#destroy()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#ofUser(Ljava/lang/String;)Lio/trino/spi/security/Identity;
+#forUser(Ljava/lang/String;)Lio/trino/spi/security/Identity$Builder;
+#from(Lio/trino/spi/security/Identity;)Lio/trino/spi/security/Identity$Builder;
@362
+#getEnabledRoles()Ljava/util/Set;
*#getRoles()Ljava/util/Map;[deprecated]
+#getConnectorRoles()Ljava/util/Map;
@363
+#getCatalogRoles()Ljava/util/Map;
-#getConnectorRoles()Ljava/util/Map;

+###io/trino/spi/security/HeaderAuthenticatorFactory
@363
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;)Lio/trino/spi/security/HeaderAuthenticator;

+###io/trino/spi/security/BasicPrincipal
@351
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/security/HeaderAuthenticator$Headers
@363
+#getHeader(Ljava/lang/String;)Ljava/util/List;

+###io/trino/spi/security/ViewExpression
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/lang/String;)V
+#getIdentity()Ljava/lang/String;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getExpression()Ljava/lang/String;

+###io/trino/spi/security/AccessDeniedException
@351
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lio/trino/spi/security/AccessDeniedException;)V
+#denyImpersonateUser(Ljava/lang/String;Ljava/lang/String;)V
+#denyImpersonateUser(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denySetUser(Ljava/util/Optional;Ljava/lang/String;)V
+#denySetUser(Ljava/util/Optional;Ljava/lang/String;Ljava/lang/String;)V
+#denyReadSystemInformationAccess()V
+#denyReadSystemInformationAccess(Ljava/lang/String;)V
+#denyWriteSystemInformationAccess()V
+#denyWriteSystemInformationAccess(Ljava/lang/String;)V
+#denyExecuteQuery()V
+#denyExecuteQuery(Ljava/lang/String;)V
+#denyViewQuery()V
+#denyViewQuery(Ljava/lang/String;)V
+#denyKillQuery()V
+#denyKillQuery(Ljava/lang/String;)V
+#denyCatalogAccess(Ljava/lang/String;)V
+#denyCatalogAccess(Ljava/lang/String;Ljava/lang/String;)V
+#denyCreateSchema(Ljava/lang/String;)V
+#denyCreateSchema(Ljava/lang/String;Ljava/lang/String;)V
+#denyDropSchema(Ljava/lang/String;)V
+#denyDropSchema(Ljava/lang/String;Ljava/lang/String;)V
+#denyRenameSchema(Ljava/lang/String;Ljava/lang/String;)V
+#denyRenameSchema(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denySetSchemaAuthorization(Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)V
+#denyShowSchemas()V
+#denyShowSchemas(Ljava/lang/String;)V
+#denyShowCreateSchema(Ljava/lang/String;)V
+#denyShowCreateTable(Ljava/lang/String;)V
+#denyShowCreateTable(Ljava/lang/String;Ljava/lang/String;)V
+#denyCreateTable(Ljava/lang/String;)V
+#denyCreateTable(Ljava/lang/String;Ljava/lang/String;)V
+#denyDropTable(Ljava/lang/String;)V
+#denyDropTable(Ljava/lang/String;Ljava/lang/String;)V
+#denyRenameTable(Ljava/lang/String;Ljava/lang/String;)V
+#denyRenameTable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denyCommentTable(Ljava/lang/String;)V
+#denyCommentTable(Ljava/lang/String;Ljava/lang/String;)V
+#denyCommentColumn(Ljava/lang/String;)V
+#denyCommentColumn(Ljava/lang/String;Ljava/lang/String;)V
+#denyShowTables(Ljava/lang/String;)V
+#denyShowTables(Ljava/lang/String;Ljava/lang/String;)V
+#denyShowColumns(Ljava/lang/String;)V
+#denyAddColumn(Ljava/lang/String;)V
+#denyAddColumn(Ljava/lang/String;Ljava/lang/String;)V
+#denyDropColumn(Ljava/lang/String;)V
+#denyDropColumn(Ljava/lang/String;Ljava/lang/String;)V
+#denySetTableAuthorization(Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)V
+#denyRenameColumn(Ljava/lang/String;)V
+#denyRenameColumn(Ljava/lang/String;Ljava/lang/String;)V
+#denySelectTable(Ljava/lang/String;)V
+#denySelectTable(Ljava/lang/String;Ljava/lang/String;)V
+#denyInsertTable(Ljava/lang/String;)V
+#denyInsertTable(Ljava/lang/String;Ljava/lang/String;)V
+#denyDeleteTable(Ljava/lang/String;)V
+#denyDeleteTable(Ljava/lang/String;Ljava/lang/String;)V
+#denyCreateView(Ljava/lang/String;)V
+#denyCreateView(Ljava/lang/String;Ljava/lang/String;)V
+#denyCreateViewWithSelect(Ljava/lang/String;Lio/trino/spi/security/Identity;)V
+#denyCreateViewWithSelect(Ljava/lang/String;Lio/trino/spi/security/ConnectorIdentity;)V
+#denyCreateViewWithSelect(Ljava/lang/String;Lio/trino/spi/security/ConnectorIdentity;Ljava/lang/String;)V
+#denyGrantExecuteFunctionPrivilege(Ljava/lang/String;Lio/trino/spi/security/Identity;Lio/trino/spi/security/Identity;)V
+#denyGrantExecuteFunctionPrivilege(Ljava/lang/String;Lio/trino/spi/security/Identity;Ljava/lang/String;)V
+#denyRenameView(Ljava/lang/String;Ljava/lang/String;)V
+#denyRenameView(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denySetViewAuthorization(Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)V
+#denyDropView(Ljava/lang/String;)V
+#denyDropView(Ljava/lang/String;Ljava/lang/String;)V
+#denySelectView(Ljava/lang/String;)V
+#denySelectView(Ljava/lang/String;Ljava/lang/String;)V
+#denyGrantSchemaPrivilege(Ljava/lang/String;Ljava/lang/String;)V
+#denyGrantSchemaPrivilege(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denyRevokeSchemaPrivilege(Ljava/lang/String;Ljava/lang/String;)V
+#denyRevokeSchemaPrivilege(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denyGrantTablePrivilege(Ljava/lang/String;Ljava/lang/String;)V
+#denyGrantTablePrivilege(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denyRevokeTablePrivilege(Ljava/lang/String;Ljava/lang/String;)V
+#denyRevokeTablePrivilege(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denyShowRoles(Ljava/lang/String;)V
+#denyShowRoleAuthorizationDescriptors(Ljava/lang/String;)V
+#denyShowCurrentRoles(Ljava/lang/String;)V
+#denyShowRoleGrants(Ljava/lang/String;)V
+#denySetSystemSessionProperty(Ljava/lang/String;)V
+#denySetSystemSessionProperty(Ljava/lang/String;Ljava/lang/String;)V
+#denySetCatalogSessionProperty(Ljava/lang/String;Ljava/lang/String;)V
+#denySetCatalogSessionProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denySetCatalogSessionProperty(Ljava/lang/String;)V
+#denySelectColumns(Ljava/lang/String;Ljava/util/Collection;)V
+#denySelectColumns(Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V
+#denyCreateRole(Ljava/lang/String;)V
+#denyDropRole(Ljava/lang/String;)V
+#denyGrantRoles(Ljava/util/Set;Ljava/util/Set;)V
+#denyRevokeRoles(Ljava/util/Set;Ljava/util/Set;)V
+#denySetRole(Ljava/lang/String;)V
+#denyExecuteProcedure(Ljava/lang/String;)V
+#denyExecuteFunction(Ljava/lang/String;)V
@352
+#denyUpdateTableColumns(Ljava/lang/String;Ljava/util/Set;)V
+#denyUpdateTableColumns(Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;)V
@356
+#denyCreateMaterializedView(Ljava/lang/String;)V
+#denyCreateMaterializedView(Ljava/lang/String;Ljava/lang/String;)V
+#denyRefreshMaterializedView(Ljava/lang/String;)V
+#denyRefreshMaterializedView(Ljava/lang/String;Ljava/lang/String;)V
+#denyDropMaterializedView(Ljava/lang/String;)V
+#denyDropMaterializedView(Ljava/lang/String;Ljava/lang/String;)V
@362
+#denyShowRoles()V
+#denyShowRoleAuthorizationDescriptors()V
+#denyShowCurrentRoles()V
+#denyShowRoleGrants()V
-#denyShowRoles(Ljava/lang/String;)V
-#denyShowRoleAuthorizationDescriptors(Ljava/lang/String;)V
-#denyShowCurrentRoles(Ljava/lang/String;)V
-#denyShowRoleGrants(Ljava/lang/String;)V
@364
+#denySetTableProperties(Ljava/lang/String;)V
+#denySetTableProperties(Ljava/lang/String;Ljava/lang/String;)V
+#denyRenameMaterializedView(Ljava/lang/String;Ljava/lang/String;)V
+#denyRenameMaterializedView(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denyExecuteTableProcedure(Ljava/lang/String;Ljava/lang/String;)V
@365
+#denyTruncateTable(Ljava/lang/String;)V
+#denyTruncateTable(Ljava/lang/String;Ljava/lang/String;)V
@366
+#denyDenySchemaPrivilege(Ljava/lang/String;Ljava/lang/String;)V
+#denyDenySchemaPrivilege(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#denyDenyTablePrivilege(Ljava/lang/String;Ljava/lang/String;)V
+#denyDenyTablePrivilege(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@369
+#denySetMaterializedViewProperties(Ljava/lang/String;)V
+#denySetMaterializedViewProperties(Ljava/lang/String;Ljava/lang/String;)V
@382
+#denySetSchemaAuthorization(Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;Ljava/lang/String;)V
+#denyShowCreateSchema(Ljava/lang/String;Ljava/lang/String;)V
+#denySetTableAuthorization(Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;Ljava/lang/String;)V
+#denySetViewAuthorization(Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;Ljava/lang/String;)V
+#denyExecuteProcedure(Ljava/lang/String;Ljava/lang/String;)V
@390
+#denyCommentView(Ljava/lang/String;)V
+#denyCommentView(Ljava/lang/String;Ljava/lang/String;)V
@405
+#denyAlterColumn(Ljava/lang/String;)V
+#denyAlterColumn(Ljava/lang/String;Ljava/lang/String;)V
@406
+#denyShowColumns(Ljava/lang/String;Ljava/lang/String;)V
+#denyExecuteFunction(Ljava/lang/String;Lio/trino/spi/function/FunctionKind;Ljava/lang/String;)V
@408
+#denyCreateCatalog(Ljava/lang/String;)V
+#denyCreateCatalog(Ljava/lang/String;Ljava/lang/String;)V
+#denyDropCatalog(Ljava/lang/String;)V
+#denyDropCatalog(Ljava/lang/String;Ljava/lang/String;)V
+#denySetViewComment(Ljava/lang/String;)V
+#denySetViewComment(Ljava/lang/String;Ljava/lang/String;)V

+###io/trino/spi/security/TrinoPrincipal
@351
+#<init>(Lio/trino/spi/security/PrincipalType;Ljava/lang/String;)V
+#getType()Lio/trino/spi/security/PrincipalType;
+#getName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/security/RoleGrant
@351
+#<init>(Lio/trino/spi/security/TrinoPrincipal;Ljava/lang/String;Z)V
+#getRoleName()Ljava/lang/String;
+#getGrantee()Lio/trino/spi/security/TrinoPrincipal;
+#isGrantable()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/security/Privilege
@351
+#values()[Lio/trino/spi/security/Privilege;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/security/Privilege;

+###io/trino/spi/security/ConnectorIdentity
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;)V[deprecated]
+#getUser()Ljava/lang/String;
+#getGroups()Ljava/util/Set;
+#getPrincipal()Ljava/util/Optional;
+#getRole()Ljava/util/Optional;
+#getExtraCredentials()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#ofUser(Ljava/lang/String;)Lio/trino/spi/security/ConnectorIdentity;
+#forUser(Ljava/lang/String;)Lio/trino/spi/security/ConnectorIdentity$Builder;
@362
+#getEnabledSystemRoles()Ljava/util/Set;
*#getRole()Ljava/util/Optional;[deprecated]
+#getConnectorRole()Ljava/util/Optional;

+###io/trino/spi/security/SystemAccessControl
@351
+#checkCanImpersonateUser(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#checkCanSetUser(Ljava/util/Optional;Ljava/lang/String;)V[deprecated]
+#checkCanExecuteQuery(Lio/trino/spi/security/SystemSecurityContext;)V
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#filterViewQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#checkCanReadSystemInformation(Lio/trino/spi/security/SystemSecurityContext;)V
+#checkCanWriteSystemInformation(Lio/trino/spi/security/SystemSecurityContext;)V
+#checkCanSetSystemSessionProperty(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#checkCanAccessCatalog(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#filterCatalogs(Lio/trino/spi/security/SystemSecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanCreateSchema(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanDropSchema(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanRenameSchema(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/lang/String;)V
+#checkCanSetSchemaAuthorization(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanShowSchemas(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#filterSchemas(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowCreateSchema(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#checkCanShowCreateTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanCreateTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanDropTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanRenameTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanSetTableComment(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanSetColumnComment(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanShowTables(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V
+#filterTables(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#filterColumns(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumn(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanDropColumn(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanSetTableAuthorization(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanRenameColumn(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanSelectFromColumns(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)V
+#checkCanInsertIntoTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanDeleteFromTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanCreateView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanRenameView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanSetViewAuthorization(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDropView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)V
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanSetCatalogSessionProperty(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanGrantSchemaPrivilege(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanShowRoles(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#checkCanExecuteProcedure(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaRoutineName;)V
+#checkCanExecuteFunction(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#getRowFilter(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)Ljava/util/Optional;
+#getColumnMask(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
+#getEventListeners()Ljava/lang/Iterable;
@352
+#checkCanUpdateTableColumns(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanRefreshMaterializedView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanDropMaterializedView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
@362
+#checkCanShowRoles(Lio/trino/spi/security/SystemSecurityContext;)V
+#checkCanCreateRole(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#checkCanGrantRoles(Lio/trino/spi/security/SystemSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/spi/security/SystemSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/spi/security/SystemSecurityContext;)V
+#checkCanShowCurrentRoles(Lio/trino/spi/security/SystemSecurityContext;)V
+#checkCanShowRoleGrants(Lio/trino/spi/security/SystemSecurityContext;)V
-#checkCanShowRoles(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
@364
*#checkCanCreateTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V[deprecated]
+#checkCanCreateTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/connector/CatalogSchemaTableName;)V
+#checkCanExecuteTableProcedure(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;)V
@365
+#checkCanViewQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/security/Identity;)V
*#checkCanViewQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V[deprecated]
+#filterViewQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Ljava/util/Collection;)Ljava/util/Collection;
*#filterViewQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Ljava/util/Set;)Ljava/util/Set;[deprecated]
+#checkCanKillQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/security/Identity;)V
*#checkCanKillQueryOwnedBy(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V[deprecated]
+#checkCanTruncateTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/CatalogSchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
*#checkCanCreateMaterializedView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V[deprecated]
+#checkCanCreateMaterializedView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Map;Ljava/util/Set;)V
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V[deprecated]
-#checkCanCreateMaterializedView(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V[deprecated]
@376
*#getRowFilter(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)Ljava/util/Optional;[deprecated]
+#getRowFilters(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)Ljava/util/List;
*#getColumnMask(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;[deprecated]
+#getColumnMasks(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@380
+#checkCanExecuteFunction(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaRoutineName;)V
@383
+#checkCanExecuteFunction(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/spi/connector/CatalogSchemaRoutineName;)V
-#checkCanExecuteFunction(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaRoutineName;)V
@388
-#getRowFilter(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)Ljava/util/Optional;[deprecated]
-#getColumnMask(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;[deprecated]
@390
+#checkCanSetViewComment(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
@396
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/spi/connector/CatalogSchemaRoutineName;Lio/trino/spi/security/TrinoPrincipal;Z)V
@405
+#checkCanCreateSchema(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;Ljava/util/Map;)V
*#checkCanCreateSchema(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V[deprecated]
+#checkCanAlterColumn(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;)V
@406
+#getColumnMask(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
*#getColumnMasks(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;[deprecated]
-#checkCanCreateSchema(Lio/trino/spi/security/SystemSecurityContext;Lio/trino/spi/connector/CatalogSchemaName;)V[deprecated]
@408
+#checkCanCreateCatalog(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V
+#checkCanDropCatalog(Lio/trino/spi/security/SystemSecurityContext;Ljava/lang/String;)V

+###io/trino/spi/security/SelectedRole$Type
@351
+#values()[Lio/trino/spi/security/SelectedRole$Type;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/security/SelectedRole$Type;

+###io/trino/spi/security/PasswordAuthenticator
@351
+#createAuthenticatedPrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Principal;

+###io/trino/spi/security/GrantInfo
@351
+#<init>(Lio/trino/spi/security/PrivilegeInfo;Lio/trino/spi/security/TrinoPrincipal;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Optional;Ljava/util/Optional;)V
+#getPrivilegeInfo()Lio/trino/spi/security/PrivilegeInfo;
+#getGrantee()Lio/trino/spi/security/TrinoPrincipal;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#getGrantor()Ljava/util/Optional;
+#getWithHierarchy()Ljava/util/Optional;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/spi/security/PrincipalType
@351
+#values()[Lio/trino/spi/security/PrincipalType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/security/PrincipalType;

+###io/trino/spi/security/ConnectorIdentity$Builder
@351
+#withGroups(Ljava/util/Set;)Lio/trino/spi/security/ConnectorIdentity$Builder;
+#withPrincipal(Ljava/security/Principal;)Lio/trino/spi/security/ConnectorIdentity$Builder;
+#withPrincipal(Ljava/util/Optional;)Lio/trino/spi/security/ConnectorIdentity$Builder;
+#withRole(Lio/trino/spi/security/SelectedRole;)Lio/trino/spi/security/ConnectorIdentity$Builder;
+#withRole(Ljava/util/Optional;)Lio/trino/spi/security/ConnectorIdentity$Builder;
+#withExtraCredentials(Ljava/util/Map;)Lio/trino/spi/security/ConnectorIdentity$Builder;
+#build()Lio/trino/spi/security/ConnectorIdentity;
@362
+#withEnabledSystemRoles(Ljava/util/Set;)Lio/trino/spi/security/ConnectorIdentity$Builder;
*#withRole(Lio/trino/spi/security/SelectedRole;)Lio/trino/spi/security/ConnectorIdentity$Builder;[deprecated]
*#withRole(Ljava/util/Optional;)Lio/trino/spi/security/ConnectorIdentity$Builder;[deprecated]
+#withConnectorRole(Lio/trino/spi/security/SelectedRole;)Lio/trino/spi/security/ConnectorIdentity$Builder;
+#withConnectorRole(Ljava/util/Optional;)Lio/trino/spi/security/ConnectorIdentity$Builder;

+###io/trino/spi/security/PrivilegeInfo
@351
+#<init>(Lio/trino/spi/security/Privilege;Z)V
+#getPrivilege()Lio/trino/spi/security/Privilege;
+#isGrantOption()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/spi/security/CertificateAuthenticator
@351
+#authenticate(Ljava/util/List;)Ljava/security/Principal;

+###io/trino/spi/PageIndexer
@351
+#indexPage(Lio/trino/spi/Page;)[I
+#getMaxIndex()I

+###io/trino/spi/WarningCodeSupplier
@351
+#toWarningCode()Lio/trino/spi/WarningCode;

+###io/trino/spi/resourcegroups/ResourceGroupState
@351
+#values()[Lio/trino/spi/resourcegroups/ResourceGroupState;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/resourcegroups/ResourceGroupState;

+###io/trino/spi/resourcegroups/ResourceGroupConfigurationManagerContext
@351
+#getMemoryPoolManager()Lio/trino/spi/memory/ClusterMemoryPoolManager;
+#getEnvironment()Ljava/lang/String;

+###io/trino/spi/resourcegroups/SelectionContext
@351
+#<init>(Lio/trino/spi/resourcegroups/ResourceGroupId;Ljava/lang/Object;)V
+#getResourceGroupId()Lio/trino/spi/resourcegroups/ResourceGroupId;
+#getContext()Ljava/lang/Object;

+###io/trino/spi/resourcegroups/QueryType
@351
+#values()[Lio/trino/spi/resourcegroups/QueryType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/resourcegroups/QueryType;

+###io/trino/spi/resourcegroups/SelectionCriteria
@351
+#<init>(ZLjava/lang/String;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Set;Lio/trino/spi/session/ResourceEstimates;Ljava/util/Optional;)V
+#isAuthenticated()Z
+#getUser()Ljava/lang/String;
+#getUserGroups()Ljava/util/Set;
+#getSource()Ljava/util/Optional;
+#getTags()Ljava/util/Set;
+#getResourceEstimates()Lio/trino/spi/session/ResourceEstimates;
+#getQueryType()Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###io/trino/spi/resourcegroups/ResourceGroup
@351
+#getId()Lio/trino/spi/resourcegroups/ResourceGroupId;
+#getSoftMemoryLimitBytes()J
+#setSoftMemoryLimitBytes(J)V
+#getSoftCpuLimit()Ljava/time/Duration;
+#setSoftCpuLimit(Ljava/time/Duration;)V
+#getHardCpuLimit()Ljava/time/Duration;
+#setHardCpuLimit(Ljava/time/Duration;)V
+#getCpuQuotaGenerationMillisPerSecond()J
+#setCpuQuotaGenerationMillisPerSecond(J)V
+#getSoftConcurrencyLimit()I
+#setSoftConcurrencyLimit(I)V
+#getHardConcurrencyLimit()I
+#setHardConcurrencyLimit(I)V
+#getMaxQueuedQueries()I
+#setMaxQueuedQueries(I)V
+#getSchedulingWeight()I
+#setSchedulingWeight(I)V
+#getSchedulingPolicy()Lio/trino/spi/resourcegroups/SchedulingPolicy;
+#setSchedulingPolicy(Lio/trino/spi/resourcegroups/SchedulingPolicy;)V
+#getJmxExport()Z
+#setJmxExport(Z)V

+###io/trino/spi/resourcegroups/ResourceGroupConfigurationManager
@351
+#configure(Lio/trino/spi/resourcegroups/ResourceGroup;Lio/trino/spi/resourcegroups/SelectionContext;)V
+#match(Lio/trino/spi/resourcegroups/SelectionCriteria;)Ljava/util/Optional;
+#parentGroupContext(Lio/trino/spi/resourcegroups/SelectionContext;)Lio/trino/spi/resourcegroups/SelectionContext;

+###io/trino/spi/resourcegroups/SchedulingPolicy
@351
+#values()[Lio/trino/spi/resourcegroups/SchedulingPolicy;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/resourcegroups/SchedulingPolicy;

+###io/trino/spi/resourcegroups/ResourceGroupId
@351
+#<init>(Ljava/lang/String;)V
+#<init>(Lio/trino/spi/resourcegroups/ResourceGroupId;Ljava/lang/String;)V
+#<init>(Ljava/util/List;)V
+#getLastSegment()Ljava/lang/String;
+#getSegments()Ljava/util/List;
+#getRoot()Lio/trino/spi/resourcegroups/ResourceGroupId;
+#getParent()Ljava/util/Optional;
+#isAncestorOf(Lio/trino/spi/resourcegroups/ResourceGroupId;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/resourcegroups/ResourceGroupConfigurationManagerFactory
@351
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;Lio/trino/spi/resourcegroups/ResourceGroupConfigurationManagerContext;)Lio/trino/spi/resourcegroups/ResourceGroupConfigurationManager;

+###io/trino/spi/resourcegroups/SessionPropertyConfigurationManagerContext
@351
+#getEnvironment()Ljava/lang/String;

+###io/trino/spi/ErrorCode
@351
+#<init>(ILjava/lang/String;Lio/trino/spi/ErrorType;)V
+#getCode()I
+#getName()Ljava/lang/String;
+#getType()Lio/trino/spi/ErrorType;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/ErrorCodeSupplier
@351
+#toErrorCode()Lio/trino/spi/ErrorCode;

+###io/trino/spi/function/WindowFunction
@351
+#reset(Lio/trino/spi/function/WindowIndex;)V
+#processRow(Lio/trino/spi/block/BlockBuilder;IIII)V

+###io/trino/spi/function/RankingWindowFunction
@351
+#<init>()V
+#reset(Lio/trino/spi/function/WindowIndex;)V
+#processRow(Lio/trino/spi/block/BlockBuilder;IIII)V
+#reset()V
+#processRow(Lio/trino/spi/block/BlockBuilder;ZII)V

+###io/trino/spi/function/Description
@351
+#value()Ljava/lang/String;

+###io/trino/spi/function/OperatorMethodHandle
@351
+#<init>(Lio/trino/spi/function/InvocationConvention;Ljava/lang/invoke/MethodHandle;)V
+#getCallingConvention()Lio/trino/spi/function/InvocationConvention;
+#getMethodHandle()Ljava/lang/invoke/MethodHandle;

+###io/trino/spi/function/InputFunction
@351

+###io/trino/spi/function/OperatorType
@351
+#values()[Lio/trino/spi/function/OperatorType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/function/OperatorType;
+#getOperator()Ljava/lang/String;
+#getArgumentCount()I

+###io/trino/spi/function/BlockPosition
@351

+###io/trino/spi/function/SqlNullable
@351
+#value()Ljava/lang/String;

+###io/trino/spi/function/LiteralParameter
@351
+#value()Ljava/lang/String;

+###io/trino/spi/function/ScalarFunctionAdapter$NullAdaptationPolicy
@351
+#values()[Lio/trino/spi/function/ScalarFunctionAdapter$NullAdaptationPolicy;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/function/ScalarFunctionAdapter$NullAdaptationPolicy;

+###io/trino/spi/function/CombineFunction
@351

+###io/trino/spi/function/AccumulatorStateMetadata
@351
+#stateSerializerClass()Ljava/lang/Class;
+#stateFactoryClass()Ljava/lang/Class;
@383
+#typeParameters()[Ljava/lang/String;
+#serializedType()Ljava/lang/String;

+###io/trino/spi/function/AccumulatorStateSerializer
@351
+#getSerializedType()Lio/trino/spi/type/Type;
+#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V
@366
+#serialize(Lio/trino/spi/function/AccumulatorState;Lio/trino/spi/block/BlockBuilder;)V
+#deserialize(Lio/trino/spi/block/Block;ILio/trino/spi/function/AccumulatorState;)V
-#serialize(Ljava/lang/Object;Lio/trino/spi/block/BlockBuilder;)V
-#deserialize(Lio/trino/spi/block/Block;ILjava/lang/Object;)V

+###io/trino/spi/function/TypeParameters
@351
+#value()[Lio/trino/spi/function/TypeParameter;

+###io/trino/spi/function/ScalarOperator
@351
+#value()Lio/trino/spi/function/OperatorType;

+###io/trino/spi/function/AccumulatorStateFactory
@351
+#createSingleState()Ljava/lang/Object;
+#getSingleStateClass()Ljava/lang/Class;
+#createGroupedState()Ljava/lang/Object;
+#getGroupedStateClass()Ljava/lang/Class;
@366
+#createSingleState()Lio/trino/spi/function/AccumulatorState;
+#createGroupedState()Lio/trino/spi/function/AccumulatorState;
-#createSingleState()Ljava/lang/Object;
-#getSingleStateClass()Ljava/lang/Class;
-#createGroupedState()Ljava/lang/Object;
-#getGroupedStateClass()Ljava/lang/Class;

+###io/trino/spi/function/InvocationConvention$InvocationArgumentConvention
@351
+#values()[Lio/trino/spi/function/InvocationConvention$InvocationArgumentConvention;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/function/InvocationConvention$InvocationArgumentConvention;
+#isNullable()Z
+#getParameterCount()I

+###io/trino/spi/function/ScalarFunctionAdapter
@351
+#<init>(Lio/trino/spi/function/ScalarFunctionAdapter$NullAdaptationPolicy;)V
+#canAdapt(Lio/trino/spi/function/InvocationConvention;Lio/trino/spi/function/InvocationConvention;)Z
+#adapt(Ljava/lang/invoke/MethodHandle;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;

+###io/trino/spi/function/OutputFunction
@351
+#value()Ljava/lang/String;

+###io/trino/spi/function/IsNull
@351

+###io/trino/spi/function/AccumulatorState
@351
+#getEstimatedSize()J
@365
+#copy()Lio/trino/spi/function/AccumulatorState;

+###io/trino/spi/function/AggregationFunction
@351
+#value()Ljava/lang/String;
+#decomposable()Z
+#isOrderSensitive()Z
+#hidden()Z
+#alias()[Ljava/lang/String;

+###io/trino/spi/function/RemoveInputFunction
@351

+###io/trino/spi/function/OperatorDependency
@351
+#operator()Lio/trino/spi/function/OperatorType;
+#argumentTypes()[Ljava/lang/String;
+#convention()Lio/trino/spi/function/Convention;

+###io/trino/spi/function/GroupedAccumulatorState
@351
+#setGroupId(J)V
+#ensureCapacity(J)V

+###io/trino/spi/function/TypeParameter
@351
+#value()Ljava/lang/String;

+###io/trino/spi/function/AggregationState
@351
+#value()Ljava/lang/String;
@383
+#value()[Ljava/lang/String;
-#value()Ljava/lang/String;

+###io/trino/spi/function/ValueWindowFunction
@351
+#<init>()V
+#reset(Lio/trino/spi/function/WindowIndex;)V
+#processRow(Lio/trino/spi/block/BlockBuilder;IIII)V
+#reset()V
+#processRow(Lio/trino/spi/block/BlockBuilder;III)V

+###io/trino/spi/function/WindowFunctionSignatures
@351
+#value()[Lio/trino/spi/function/WindowFunctionSignature;

+###io/trino/spi/function/InvocationConvention$InvocationReturnConvention
@351
+#values()[Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;
+#isNullable()Z

+###io/trino/spi/function/FunctionDependency
@351
+#name()Ljava/lang/String;
+#argumentTypes()[Ljava/lang/String;
+#convention()Lio/trino/spi/function/Convention;

+###io/trino/spi/function/WindowFunctionSignature
@351
+#name()Ljava/lang/String;
+#returnType()Ljava/lang/String;
+#typeVariable()Ljava/lang/String;
+#argumentTypes()[Ljava/lang/String;

+###io/trino/spi/function/TypeParameterSpecialization
@351
+#name()Ljava/lang/String;
+#nativeContainerType()Ljava/lang/Class;

+###io/trino/spi/function/BlockIndex
@351

+###io/trino/spi/function/WindowIndex
@351
+#size()I
+#isNull(II)Z
+#getBoolean(II)Z
+#getLong(II)J
+#getDouble(II)D
+#getSlice(II)Lio/airlift/slice/Slice;
+#getSingleValueBlock(II)Lio/trino/spi/block/Block;
+#getObject(II)Ljava/lang/Object;
+#appendTo(IILio/trino/spi/block/BlockBuilder;)V

+###io/trino/spi/function/LiteralParameters
@351
+#value()[Ljava/lang/String;

+###io/trino/spi/function/InvocationConvention
@351
+#simpleConvention(Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;[Lio/trino/spi/function/InvocationConvention$InvocationArgumentConvention;)Lio/trino/spi/function/InvocationConvention;
+#<init>(Ljava/util/List;Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;ZZ)V
+#getReturnConvention()Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;
+#getArgumentConventions()Ljava/util/List;
+#getArgumentConvention(I)Lio/trino/spi/function/InvocationConvention$InvocationArgumentConvention;
+#supportsSession()Z
+#supportsInstanceFactor()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@378
*#supportsInstanceFactor()Z[deprecated]
+#supportsInstanceFactory()Z

+###io/trino/spi/function/SqlType
@351
+#value()Ljava/lang/String;
+#nativeContainerType()Ljava/lang/Class;

+###io/trino/spi/function/Convention
@351
+#arguments()[Lio/trino/spi/function/InvocationConvention$InvocationArgumentConvention;
+#result()Lio/trino/spi/function/InvocationConvention$InvocationReturnConvention;
+#session()Z

+###io/trino/spi/function/CastDependency
@351
+#fromType()Ljava/lang/String;
+#toType()Ljava/lang/String;
+#convention()Lio/trino/spi/function/Convention;

+###io/trino/spi/function/ScalarFunction
@351
+#value()Ljava/lang/String;
+#alias()[Ljava/lang/String;
+#hidden()Z
+#deterministic()Z

+###io/trino/spi/classloader/ThreadContextClassLoader
@351
+#<init>(Ljava/lang/ClassLoader;)V
+#close()V

+###io/trino/spi/TrinoWarning
@351
+#<init>(Lio/trino/spi/WarningCode;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/WarningCodeSupplier;Ljava/lang/String;)V
+#getWarningCode()Lio/trino/spi/WarningCode;
+#getMessage()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/procedure/Procedure$Argument
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;)V
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;ZLjava/lang/Object;)V
+#getName()Ljava/lang/String;
+#getType()Lio/trino/spi/type/Type;
+#isRequired()Z
+#isOptional()Z
+#getDefaultValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@373
+#<init>(Ljava/lang/String;ZLio/trino/spi/type/Type;ZLjava/lang/Object;)V[deprecated]

+###io/trino/spi/procedure/Procedure
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/invoke/MethodHandle;)V
+#getSchema()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getArguments()Ljava/util/List;
+#getMethodHandle()Ljava/lang/invoke/MethodHandle;
+#toString()Ljava/lang/String;
@398
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/invoke/MethodHandle;Z)V
+#requiresNamedArguments()Z

+###io/trino/spi/WarningCode
@351
+#<init>(ILjava/lang/String;)V
+#getCode()I
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/type/TypeNotFoundException
@351
+#<init>(Lio/trino/spi/type/TypeSignature;)V
+#<init>(Lio/trino/spi/type/TypeSignature;Ljava/lang/Throwable;)V
+#getType()Lio/trino/spi/type/TypeSignature;

+###io/trino/spi/type/MapType
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/type/TypeOperators;)V
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#getKeyType()Lio/trino/spi/type/Type;
+#getValueType()Lio/trino/spi/type/Type;
+#isComparable()Z
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/Block;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V
+#getTypeParameters()Ljava/util/List;
+#getDisplayName()Ljava/lang/String;
+#createBlockFromKeyValue(Ljava/util/Optional;[ILio/trino/spi/block/Block;Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#getKeyNativeHashCode()Ljava/lang/invoke/MethodHandle;
+#getKeyBlockHashCode()Ljava/lang/invoke/MethodHandle;
+#getKeyBlockNativeEqual()Ljava/lang/invoke/MethodHandle;
+#getKeyBlockEqual()Ljava/lang/invoke/MethodHandle;
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;

+###io/trino/spi/type/SmallintType
@351
+#getFixedSize()I
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#getRange()Ljava/util/Optional;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getLong(Lio/trino/spi/block/Block;I)J
+#writeLong(Lio/trino/spi/block/BlockBuilder;J)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@369
+#getDiscreteValues(Lio/trino/spi/type/Type$Range;)Ljava/util/Optional;
@405
+#getPreviousValue(Ljava/lang/Object;)Ljava/util/Optional;
+#getNextValue(Ljava/lang/Object;)Ljava/util/Optional;

+###io/trino/spi/type/DateTimeEncoding
@351
+#packDateTimeWithZone(JLjava/lang/String;)J
+#packDateTimeWithZone(JI)J
+#packDateTimeWithZone(JLio/trino/spi/type/TimeZoneKey;)J
+#packDateTimeWithZone(JS)J
+#unpackMillisUtc(J)J
+#unpackZoneKey(J)Lio/trino/spi/type/TimeZoneKey;
+#updateMillisUtc(JJ)J
+#packTimeWithTimeZone(JI)J
+#unpackTimeNanos(J)J
+#unpackOffsetMinutes(J)I

+###io/trino/spi/type/TinyintType
@351
+#getFixedSize()I
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#getRange()Ljava/util/Optional;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getLong(Lio/trino/spi/block/Block;I)J
+#writeLong(Lio/trino/spi/block/BlockBuilder;J)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@369
+#getDiscreteValues(Lio/trino/spi/type/Type$Range;)Ljava/util/Optional;
@405
+#getPreviousValue(Ljava/lang/Object;)Ljava/util/Optional;
+#getNextValue(Ljava/lang/Object;)Ljava/util/Optional;

+###io/trino/spi/type/TypeUtils
@351
+#readNativeValue(Lio/trino/spi/type/Type;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeNativeValue(Lio/trino/spi/type/Type;Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V
+#isFloatingPointNaN(Lio/trino/spi/type/Type;Ljava/lang/Object;)Z

+###io/trino/spi/type/TypeId
@351
+#of(Ljava/lang/String;)Lio/trino/spi/type/TypeId;
+#getId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/type/AbstractLongType
@351
+#<init>(Lio/trino/spi/type/TypeSignature;)V
+#getFixedSize()I
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getLong(Lio/trino/spi/block/Block;I)J
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeLong(Lio/trino/spi/block/BlockBuilder;J)V
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#hash(J)J

+###io/trino/spi/type/UuidType
@360
+#getFixedSize()I
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
@361
+#javaUuidToTrinoUuid(Ljava/util/UUID;)Lio/airlift/slice/Slice;
+#trinoUuidToJavaUuid(Lio/airlift/slice/Slice;)Ljava/util/UUID;

+###io/trino/spi/type/SqlTimeWithTimeZone
@351
+#newInstance(IJI)Lio/trino/spi/type/SqlTimeWithTimeZone;
+#getPicos()J
+#getOffsetMinutes()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@403
+#roundTo(I)Lio/trino/spi/type/SqlTimeWithTimeZone;

+###io/trino/spi/type/StandardTypes
@351

+###io/trino/spi/type/AbstractIntType
@351
+#getFixedSize()I
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getLong(Lio/trino/spi/block/Block;I)J
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeLong(Lio/trino/spi/block/BlockBuilder;J)V
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/type/DecimalParseResult
@351
+#<init>(Ljava/lang/Object;Lio/trino/spi/type/DecimalType;)V
+#getObject()Ljava/lang/Object;
+#getType()Lio/trino/spi/type/DecimalType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/type/Type$Range
@351
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getMin()Ljava/lang/Object;
+#getMax()Ljava/lang/Object;

+###io/trino/spi/type/LongTimestamp
@351
+#<init>(JI)V
+#getEpochMicros()J
+#getPicosOfMicro()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lio/trino/spi/type/LongTimestamp;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###io/trino/spi/type/QuantileDigestParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/spi/type/DecimalConversions
@351
+#shortDecimalToDouble(JJ)D
+#longDecimalToDouble(Lio/airlift/slice/Slice;J)D
+#shortDecimalToReal(JJ)J
+#longDecimalToReal(Lio/airlift/slice/Slice;J)J
+#doubleToShortDecimal(DJJ)J
+#doubleToLongDecimal(DJJ)Lio/airlift/slice/Slice;
+#realToShortDecimal(JJJ)J
+#realToLongDecimal(JJJ)Lio/airlift/slice/Slice;
+#shortToShortCast(JJJJJJJ)J
+#shortToLongCast(JJJJJ)Lio/airlift/slice/Slice;
+#longToShortCast(Lio/airlift/slice/Slice;JJJJ)J
+#longToLongCast(Lio/airlift/slice/Slice;JJJJ)Lio/airlift/slice/Slice;
+#intScale(J)I
@368
+#longDecimalToDouble(Lio/trino/spi/type/Int128;J)D
+#longDecimalToReal(Lio/trino/spi/type/Int128;J)J
+#doubleToLongDecimal(DJJ)Lio/trino/spi/type/Int128;
+#realToLongDecimal(JJJ)Lio/trino/spi/type/Int128;
+#shortToLongCast(JJJJJ)Lio/trino/spi/type/Int128;
+#longToShortCast(Lio/trino/spi/type/Int128;JJJJ)J
+#longToLongCast(Lio/trino/spi/type/Int128;JJJJ)Lio/trino/spi/type/Int128;
-#longDecimalToDouble(Lio/airlift/slice/Slice;J)D
-#longDecimalToReal(Lio/airlift/slice/Slice;J)J
-#doubleToLongDecimal(DJJ)Lio/airlift/slice/Slice;
-#realToLongDecimal(JJJ)Lio/airlift/slice/Slice;
-#shortToLongCast(JJJJJ)Lio/airlift/slice/Slice;
-#longToShortCast(Lio/airlift/slice/Slice;JJJJ)J
-#longToLongCast(Lio/airlift/slice/Slice;JJJJ)Lio/airlift/slice/Slice;

+###io/trino/spi/type/TypeSignatureParameter
@351
+#typeParameter(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/TypeSignatureParameter;
+#numericParameter(J)Lio/trino/spi/type/TypeSignatureParameter;
+#namedTypeParameter(Lio/trino/spi/type/NamedTypeSignature;)Lio/trino/spi/type/TypeSignatureParameter;
+#namedField(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/TypeSignatureParameter;
+#anonymousField(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/TypeSignatureParameter;
+#typeVariable(Ljava/lang/String;)Lio/trino/spi/type/TypeSignatureParameter;
+#toString()Ljava/lang/String;
+#jsonValue()Ljava/lang/String;
+#getKind()Lio/trino/spi/type/ParameterKind;
+#isTypeSignature()Z
+#isLongLiteral()Z
+#isNamedTypeSignature()Z
+#isVariable()Z
+#getTypeSignature()Lio/trino/spi/type/TypeSignature;
+#getLongLiteral()Ljava/lang/Long;
+#getNamedTypeSignature()Lio/trino/spi/type/NamedTypeSignature;
+#getVariable()Ljava/lang/String;
+#getTypeSignatureOrNamedTypeSignature()Ljava/util/Optional;
+#isCalculated()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/type/TypeOperators
@351
+#<init>()V
+#<init>(Ljava/util/function/BiFunction;)V
+#getEqualOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getHashCodeOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getXxHash64Operator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getDistinctFromOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getIndeterminateOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getComparisonOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getOrderingOperator(Lio/trino/spi/type/Type;Lio/trino/spi/connector/SortOrder;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getLessThanOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getLessThanOrEqualOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
@364
+#getComparisonUnorderedLastOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
+#getComparisonUnorderedFirstOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;
-#getComparisonOperator(Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Ljava/lang/invoke/MethodHandle;

+###io/trino/spi/type/P4HyperLogLogType
@351
+#<init>()V
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;

+###io/trino/spi/type/TimeZoneNotSupportedException
@351
+#<init>(Ljava/lang/String;)V
+#getZoneId()Ljava/lang/String;

+###io/trino/spi/type/BigintType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getRange()Ljava/util/Optional;
@369
+#getDiscreteValues(Lio/trino/spi/type/Type$Range;)Ljava/util/Optional;
@405
+#getPreviousValue(Ljava/lang/Object;)Ljava/util/Optional;
+#getNextValue(Ljava/lang/Object;)Ljava/util/Optional;

+###io/trino/spi/type/AbstractVariableWidthType
@351
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/type/Type
@351
+#getTypeSignature()Lio/trino/spi/type/TypeSignature;
+#getTypeId()Lio/trino/spi/type/TypeId;
+#getBaseName()Ljava/lang/String;
+#getDisplayName()Ljava/lang/String;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getJavaType()Ljava/lang/Class;
+#getTypeParameters()Ljava/util/List;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#getBoolean(Lio/trino/spi/block/Block;I)Z
+#getLong(Lio/trino/spi/block/Block;I)J
+#getDouble(Lio/trino/spi/block/Block;I)D
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeBoolean(Lio/trino/spi/block/BlockBuilder;Z)V
+#writeLong(Lio/trino/spi/block/BlockBuilder;J)V
+#writeDouble(Lio/trino/spi/block/BlockBuilder;D)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getRange()Ljava/util/Optional;
@369
+#getDiscreteValues(Lio/trino/spi/type/Type$Range;)Ljava/util/Optional;
@405
+#getPreviousValue(Ljava/lang/Object;)Ljava/util/Optional;
+#getNextValue(Ljava/lang/Object;)Ljava/util/Optional;

+###io/trino/spi/type/SqlVarbinary
@351
+#<init>([B)V
+#compareTo(Lio/trino/spi/type/SqlVarbinary;)I
+#getBytes()[B
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###io/trino/spi/type/ArrayType
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getElementType()Lio/trino/spi/type/Type;
+#isComparable()Z
+#isOrderable()Z
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getObject(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/Block;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#getTypeParameters()Ljava/util/List;
+#getDisplayName()Ljava/lang/String;
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;

+###io/trino/spi/type/TimeWithTimeZoneType
@351
+#createTimeWithTimeZoneType(I)Lio/trino/spi/type/TimeWithTimeZoneType;
+#getPrecision()I
+#isShort()Z
+#isComparable()Z
+#isOrderable()Z

+###io/trino/spi/type/IntegerType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#getRange()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@369
+#getDiscreteValues(Lio/trino/spi/type/Type$Range;)Ljava/util/Optional;
@405
+#getPreviousValue(Ljava/lang/Object;)Ljava/util/Optional;
+#getNextValue(Ljava/lang/Object;)Ljava/util/Optional;

+###io/trino/spi/type/ParametricType
@351
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/spi/type/SqlTimestamp
@351
+#fromMillis(IJ)Lio/trino/spi/type/SqlTimestamp;
+#newInstance(IJI)Lio/trino/spi/type/SqlTimestamp;
+#getPrecision()I
+#getMillis()J
+#getEpochMicros()J
+#getPicosOfMicros()I
+#roundTo(I)Lio/trino/spi/type/SqlTimestamp;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toLocalDateTime()Ljava/time/LocalDateTime;
@409
+#fromSeconds(IJJ)Lio/trino/spi/type/SqlTimestamp;

+###io/trino/spi/type/QuantileDigestType
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#getTypeParameters()Ljava/util/List;
@366
+#getValueType()Lio/trino/spi/type/Type;

+###io/trino/spi/type/TimeZoneKey
@351
+#getTimeZoneKeys()Ljava/util/Set;
+#getTimeZoneKey(S)Lio/trino/spi/type/TimeZoneKey;
+#getTimeZoneKey(Ljava/lang/String;)Lio/trino/spi/type/TimeZoneKey;
+#getTimeZoneKeyForOffset(J)Lio/trino/spi/type/TimeZoneKey;
+#getId()Ljava/lang/String;
+#getZoneId()Ljava/time/ZoneId;
+#getKey()S
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#isUtcZoneId(Ljava/lang/String;)Z

+###io/trino/spi/type/LongTimeWithTimeZone
@351
+#<init>(JI)V
+#getPicoseconds()J
+#getOffsetMinutes()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lio/trino/spi/type/LongTimeWithTimeZone;)I
+#compareTo(Ljava/lang/Object;)I

+###io/trino/spi/type/RowType$Field
@351
+#<init>(Ljava/util/Optional;Lio/trino/spi/type/Type;)V
+#getType()Lio/trino/spi/type/Type;
+#getName()Ljava/util/Optional;

+###io/trino/spi/type/TypeManager
@351
+#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
+#fromSqlType(Ljava/lang/String;)Lio/trino/spi/type/Type;
+#getType(Lio/trino/spi/type/TypeId;)Lio/trino/spi/type/Type;
+#getParameterizedType(Ljava/lang/String;Ljava/util/List;)Lio/trino/spi/type/Type;
+#getTypeOperators()Lio/trino/spi/type/TypeOperators;

+###io/trino/spi/type/TimeParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/spi/type/TimestampWithTimeZoneType
@351
+#createTimestampWithTimeZoneType(I)Lio/trino/spi/type/TimestampWithTimeZoneType;
+#getPrecision()I
+#isShort()Z
+#isComparable()Z
+#isOrderable()Z

+###io/trino/spi/type/TypeParameter
@351
+#of(Lio/trino/spi/type/Type;)Lio/trino/spi/type/TypeParameter;
+#of(J)Lio/trino/spi/type/TypeParameter;
+#of(Lio/trino/spi/type/NamedType;)Lio/trino/spi/type/TypeParameter;
+#of(Ljava/lang/String;)Lio/trino/spi/type/TypeParameter;
+#of(Lio/trino/spi/type/TypeSignatureParameter;Lio/trino/spi/type/TypeManager;)Lio/trino/spi/type/TypeParameter;
+#getKind()Lio/trino/spi/type/ParameterKind;
+#getValue(Lio/trino/spi/type/ParameterKind;Ljava/lang/Class;)Ljava/lang/Object;
+#isLongLiteral()Z
+#getType()Lio/trino/spi/type/Type;
+#getLongLiteral()Ljava/lang/Long;
+#getNamedType()Lio/trino/spi/type/NamedType;
+#getVariable()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/type/RowType
@351
+#from(Ljava/util/List;)Lio/trino/spi/type/RowType;
+#anonymous(Ljava/util/List;)Lio/trino/spi/type/RowType;
+#rowType([Lio/trino/spi/type/RowType$Field;)Lio/trino/spi/type/RowType;
+#anonymousRow([Lio/trino/spi/type/Type;)Lio/trino/spi/type/RowType;
+#createWithTypeSignature(Lio/trino/spi/type/TypeSignature;Ljava/util/List;)Lio/trino/spi/type/RowType;
+#field(Ljava/lang/String;Lio/trino/spi/type/Type;)Lio/trino/spi/type/RowType$Field;
+#field(Lio/trino/spi/type/Type;)Lio/trino/spi/type/RowType$Field;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#getDisplayName()Ljava/lang/String;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getObject(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/Block;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V
+#getTypeParameters()Ljava/util/List;
+#getFields()Ljava/util/List;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;

+###io/trino/spi/type/ParameterKind
@351
+#values()[Lio/trino/spi/type/ParameterKind;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/type/ParameterKind;

+###io/trino/spi/type/Int128Math
@368
+#rescale(JJI[JI)V
+#rescale(Lio/trino/spi/type/Int128;I)Lio/trino/spi/type/Int128;
+#rescaleTruncate(JJI[JI)V
+#rescaleTruncate(Lio/trino/spi/type/Int128;I)Lio/trino/spi/type/Int128;
+#add(JJJJ[JI)V
+#addWithOverflow(JJJJ[JI)J
+#subtract(JJJJ[JI)V
+#multiply(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#multiply(JJJJ)Lio/trino/spi/type/Int128;
+#multiply(Lio/trino/spi/type/Int128;J)Lio/trino/spi/type/Int128;
+#multiply(JJ)Lio/trino/spi/type/Int128;
+#compareAbsolute(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;)I
+#compareAbsolute(JJJJ)I
+#absExact(Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#negate(Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#negateExact(Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#divideRoundUp(JJIJJI)Lio/trino/spi/type/Int128;
+#shiftLeft([JI)V
+#remainder(JJIJJI)Lio/trino/spi/type/Int128;
@369
+#powerOfTen(I)Lio/trino/spi/type/Int128;
@370
+#subtract(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;
+#floorDiv(Lio/trino/spi/type/Int128;Lio/trino/spi/type/Int128;)Lio/trino/spi/type/Int128;

+###io/trino/spi/type/NamedTypeSignature
@351
+#<init>(Ljava/util/Optional;Lio/trino/spi/type/TypeSignature;)V
+#getFieldName()Ljava/util/Optional;
+#getTypeSignature()Lio/trino/spi/type/TypeSignature;
+#getName()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I

+###io/trino/spi/type/FixedWidthType
@351
+#getFixedSize()I
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/type/RealType
@351
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeLong(Lio/trino/spi/block/BlockBuilder;J)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getRange()Ljava/util/Optional;

+###io/trino/spi/type/DecimalType
@351
+#createDecimalType(II)Lio/trino/spi/type/DecimalType;
+#createDecimalType(I)Lio/trino/spi/type/DecimalType;
+#createDecimalType()Lio/trino/spi/type/DecimalType;
+#isComparable()Z
+#isOrderable()Z
+#getPrecision()I
+#getScale()I
+#isShort()Z

+###io/trino/spi/type/VarcharType
@351
+#createUnboundedVarcharType()Lio/trino/spi/type/VarcharType;
+#createVarcharType(I)Lio/trino/spi/type/VarcharType;
+#getParametrizedVarcharSignature(Ljava/lang/String;)Lio/trino/spi/type/TypeSignature;
+#getLength()Ljava/util/Optional;
+#getBoundedLength()I
+#isUnbounded()Z
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#getRange()Ljava/util/Optional;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeString(Lio/trino/spi/block/BlockBuilder;Ljava/lang/String;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@397
-#getParametrizedVarcharSignature(Ljava/lang/String;)Lio/trino/spi/type/TypeSignature;

+###io/trino/spi/type/TimeType
@351
+#createTimeType(I)Lio/trino/spi/type/TimeType;
+#getPrecision()I
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#equalOperator(JJ)Z
+#hashCodeOperator(J)J
+#xxHash64Operator(J)J
+#lessThan(JJ)Z
+#lessThanOrEqual(JJ)Z

+###io/trino/spi/type/CharType
@351
+#createCharType(J)Lio/trino/spi/type/CharType;
+#getLength()I
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeString(Lio/trino/spi/block/BlockBuilder;Ljava/lang/String;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@403
*#createCharType(J)Lio/trino/spi/type/CharType;[deprecated]
+#createCharType(I)Lio/trino/spi/type/CharType;
+#getRange()Ljava/util/Optional;

+###io/trino/spi/type/Varchars
@351
+#truncateToLength(Lio/airlift/slice/Slice;Lio/trino/spi/type/Type;)Lio/airlift/slice/Slice;
+#truncateToLength(Lio/airlift/slice/Slice;Lio/trino/spi/type/VarcharType;)Lio/airlift/slice/Slice;
+#truncateToLength(Lio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#byteCount(Lio/airlift/slice/Slice;III)I

+###io/trino/spi/type/TimestampWithTimeZoneParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/spi/type/AbstractType
@351
+#getTypeSignature()Lio/trino/spi/type/TypeSignature;
+#getDisplayName()Ljava/lang/String;
+#getJavaType()Ljava/lang/Class;
+#getTypeParameters()Ljava/util/List;
+#isComparable()Z
+#isOrderable()Z
+#getBoolean(Lio/trino/spi/block/Block;I)Z
+#writeBoolean(Lio/trino/spi/block/BlockBuilder;Z)V
+#getLong(Lio/trino/spi/block/Block;I)J
+#writeLong(Lio/trino/spi/block/BlockBuilder;J)V
+#getDouble(Lio/trino/spi/block/Block;I)D
+#writeDouble(Lio/trino/spi/block/BlockBuilder;D)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getObject(Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#writeObject(Lio/trino/spi/block/BlockBuilder;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/type/TimeWithTimeZoneParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/spi/type/HyperLogLogType
@351
+#<init>()V
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;

+###io/trino/spi/type/SqlDate
@351
+#<init>(I)V
+#getDays()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/spi/type/TypeSignature
@351
+#<init>(Ljava/lang/String;[Lio/trino/spi/type/TypeSignatureParameter;)V
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getBase()Ljava/lang/String;
+#getParameters()Ljava/util/List;
+#getTypeParametersAsTypeSignatures()Ljava/util/List;
+#isCalculated()Z
+#toString()Ljava/lang/String;
+#jsonValue()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#arrayType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/TypeSignature;
+#arrayType(Lio/trino/spi/type/TypeSignatureParameter;)Lio/trino/spi/type/TypeSignature;
+#mapType(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/TypeSignature;
+#parametricType(Ljava/lang/String;[Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/TypeSignature;
+#functionType(Lio/trino/spi/type/TypeSignature;[Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/TypeSignature;
+#rowType([Lio/trino/spi/type/TypeSignatureParameter;)Lio/trino/spi/type/TypeSignature;
+#rowType(Ljava/util/List;)Lio/trino/spi/type/TypeSignature;

+###io/trino/spi/type/TypeOperatorDeclaration$Builder
@351
+#<init>(Ljava/lang/Class;)V
+#addEqualOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addEqualOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addHashCodeOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addHashCodeOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addXxHash64Operator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addXxHash64Operators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addDistinctFromOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addDistinctFromOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addIndeterminateOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addIndeterminateOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addComparisonOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addComparisonOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addLessThanOrEqualOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addLessThanOrEqualOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addLessThanOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addLessThanOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addOperators(Ljava/lang/Class;Ljava/lang/invoke/MethodHandles$Lookup;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#build()Lio/trino/spi/type/TypeOperatorDeclaration;
@364
+#addComparisonUnorderedLastOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addComparisonUnorderedLastOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addComparisonUnorderedFirstOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#addComparisonUnorderedFirstOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
-#addComparisonOperator(Lio/trino/spi/function/OperatorMethodHandle;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
-#addComparisonOperators(Ljava/util/Collection;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;

+###io/trino/spi/type/Int128
@368
+#fromBigEndian([B)Lio/trino/spi/type/Int128;
+#valueOf([J)Lio/trino/spi/type/Int128;
+#valueOf(JJ)Lio/trino/spi/type/Int128;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/type/Int128;
+#valueOf(Ljava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#valueOf(J)Lio/trino/spi/type/Int128;
+#getHigh()J
+#getLow()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lio/trino/spi/type/Int128;)I
+#toString()Ljava/lang/String;
+#toBigInteger()Ljava/math/BigInteger;
+#toBigEndianBytes()[B
+#toBigEndianBytes([BI)V
+#toLong()J
+#toLongExact()J
+#toLongArray()[J
+#compare(JJJJ)I
+#isZero()Z
+#isNegative()Z
+#compareTo(Ljava/lang/Object;)I

+###io/trino/spi/type/Timestamps
@351
+#round(JI)J
+#roundDiv(IJ)I
+#roundDiv(JJ)J
+#truncateEpochMicrosToMillis(J)J
+#epochMicrosToMillisWithRounding(J)J

+###io/trino/spi/type/TimestampTypes
@351
+#writeLongTimestamp(Lio/trino/spi/block/BlockBuilder;Lio/trino/spi/type/LongTimestamp;)V
+#writeLongTimestamp(Lio/trino/spi/block/BlockBuilder;JI)V

+###io/trino/spi/type/NamedType
@351
+#<init>(Ljava/util/Optional;Lio/trino/spi/type/Type;)V
+#getName()Ljava/util/Optional;
+#getType()Lio/trino/spi/type/Type;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/type/RowFieldName
@351
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I

+###io/trino/spi/type/VariableWidthType
@351

+###io/trino/spi/type/SqlDecimal
@351
+#<init>(Ljava/math/BigInteger;II)V
+#equals(Ljava/lang/Object;)Z
+#getPrecision()I
+#getScale()I
+#of(Ljava/lang/String;)Lio/trino/spi/type/SqlDecimal;
+#of(Ljava/lang/String;II)Lio/trino/spi/type/SqlDecimal;
+#of(JII)Lio/trino/spi/type/SqlDecimal;
+#hashCode()I
+#toString()Ljava/lang/String;
+#toBigDecimal()Ljava/math/BigDecimal;
+#getUnscaledValue()Ljava/math/BigInteger;
@371
+#decimal(Ljava/lang/String;Lio/trino/spi/type/DecimalType;)Lio/trino/spi/type/SqlDecimal;
-#of(Ljava/lang/String;)Lio/trino/spi/type/SqlDecimal;
-#of(Ljava/lang/String;II)Lio/trino/spi/type/SqlDecimal;

+###io/trino/spi/type/TimestampParametricType
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#createType(Lio/trino/spi/type/TypeManager;Ljava/util/List;)Lio/trino/spi/type/Type;

+###io/trino/spi/type/TimeWithTimeZoneTypes
@351

+###io/trino/spi/type/DoubleType
@351
+#getFixedSize()I
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getDouble(Lio/trino/spi/block/Block;I)D
+#writeDouble(Lio/trino/spi/block/BlockBuilder;D)V
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getRange()Ljava/util/Optional;
+#xxHash64(D)J

+###io/trino/spi/type/LongTimestampWithTimeZone
@351
+#fromEpochSecondsAndFraction(JJLio/trino/spi/type/TimeZoneKey;)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#fromEpochMillisAndFraction(JILio/trino/spi/type/TimeZoneKey;)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#fromEpochMillisAndFraction(JIS)Lio/trino/spi/type/LongTimestampWithTimeZone;
+#getEpochMillis()J
+#getPicosOfMilli()I
+#getTimeZoneKey()S
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lio/trino/spi/type/LongTimestampWithTimeZone;)I
+#compareTo(Ljava/lang/Object;)I
@405
+#toString()Ljava/lang/String;

+###io/trino/spi/type/Decimals
@351
+#longTenToNth(I)J
+#bigIntegerTenToNth(I)Ljava/math/BigInteger;
+#parse(Ljava/lang/String;)Lio/trino/spi/type/DecimalParseResult;
+#parseIncludeLeadingZerosInPrecision(Ljava/lang/String;)Lio/trino/spi/type/DecimalParseResult;
+#encodeUnscaledValue(Ljava/math/BigInteger;)Lio/airlift/slice/Slice;
+#encodeUnscaledValue(J)Lio/airlift/slice/Slice;
+#encodeShortScaledValue(Ljava/math/BigDecimal;I)J
+#encodeShortScaledValue(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)J
+#encodeScaledValue(Ljava/math/BigDecimal;I)Lio/airlift/slice/Slice;
+#encodeScaledValue(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Lio/airlift/slice/Slice;
+#encodeScaledValue(Ljava/math/BigDecimal;)Lio/airlift/slice/Slice;
+#decodeUnscaledValue(Lio/airlift/slice/Slice;)Ljava/math/BigInteger;
+#toString(JI)Ljava/lang/String;
+#toString(Lio/airlift/slice/Slice;I)Ljava/lang/String;
+#toString(Ljava/math/BigInteger;I)Ljava/lang/String;
+#overflows(JI)Z
+#overflows(Ljava/math/BigInteger;I)Z
+#overflows(Ljava/math/BigInteger;)Z
+#overflows(Ljava/math/BigDecimal;J)Z
+#checkOverflow(Ljava/math/BigInteger;)V
+#readBigDecimal(Lio/trino/spi/type/DecimalType;Lio/trino/spi/block/Block;I)Ljava/math/BigDecimal;
+#writeBigDecimal(Lio/trino/spi/type/DecimalType;Lio/trino/spi/block/BlockBuilder;Ljava/math/BigDecimal;)V
+#rescale(Ljava/math/BigDecimal;Lio/trino/spi/type/DecimalType;)Ljava/math/BigDecimal;
+#writeShortDecimal(Lio/trino/spi/block/BlockBuilder;J)V
+#rescale(JII)J
+#rescale(Ljava/math/BigInteger;II)Ljava/math/BigInteger;
+#isShortDecimal(Lio/trino/spi/type/Type;)Z
+#isLongDecimal(Lio/trino/spi/type/Type;)Z
@368
+#encodeScaledValue(Ljava/math/BigDecimal;I)Lio/trino/spi/type/Int128;
+#encodeScaledValue(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Lio/trino/spi/type/Int128;
+#toString(Lio/trino/spi/type/Int128;I)Ljava/lang/String;
+#valueOf(Ljava/math/BigDecimal;)Lio/trino/spi/type/Int128;
+#valueOf(Ljava/math/BigInteger;)Lio/trino/spi/type/Int128;
+#throwIfOverflows(JJ)V
+#overflows(Lio/trino/spi/type/Int128;)Z
+#overflows(JJ)Z
+#overflows(Lio/trino/spi/type/Int128;I)Z
-#encodeUnscaledValue(Ljava/math/BigInteger;)Lio/airlift/slice/Slice;
-#encodeUnscaledValue(J)Lio/airlift/slice/Slice;
-#encodeScaledValue(Ljava/math/BigDecimal;I)Lio/airlift/slice/Slice;
-#encodeScaledValue(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Lio/airlift/slice/Slice;
-#encodeScaledValue(Ljava/math/BigDecimal;)Lio/airlift/slice/Slice;
-#decodeUnscaledValue(Lio/airlift/slice/Slice;)Ljava/math/BigInteger;
-#toString(Lio/airlift/slice/Slice;I)Ljava/lang/String;
-#overflows(Ljava/math/BigInteger;)Z
-#checkOverflow(Ljava/math/BigInteger;)V
@371
-#parseIncludeLeadingZerosInPrecision(Ljava/lang/String;)Lio/trino/spi/type/DecimalParseResult;
@398
*#isShortDecimal(Lio/trino/spi/type/Type;)Z[deprecated]
*#isLongDecimal(Lio/trino/spi/type/Type;)Z[deprecated]
@407
-#isShortDecimal(Lio/trino/spi/type/Type;)Z[deprecated]
-#isLongDecimal(Lio/trino/spi/type/Type;)Z[deprecated]

+###io/trino/spi/type/Chars
@351
+#padSpaces(Lio/airlift/slice/Slice;Lio/trino/spi/type/CharType;)Lio/airlift/slice/Slice;
+#padSpaces(Lio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#padSpaces(Ljava/lang/String;Lio/trino/spi/type/CharType;)Ljava/lang/String;
+#truncateToLengthAndTrimSpaces(Lio/airlift/slice/Slice;Lio/trino/spi/type/Type;)Lio/airlift/slice/Slice;
+#truncateToLengthAndTrimSpaces(Lio/airlift/slice/Slice;Lio/trino/spi/type/CharType;)Lio/airlift/slice/Slice;
+#truncateToLengthAndTrimSpaces(Lio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#trimTrailingSpaces(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#byteCountWithoutTrailingSpace(Lio/airlift/slice/Slice;II)I
+#byteCountWithoutTrailingSpace(Lio/airlift/slice/Slice;III)I
+#compareChars(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)I

+###io/trino/spi/type/VarbinaryType
@351
+#isVarbinaryType(Lio/trino/spi/type/Type;)Z[deprecated]
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getSlice(Lio/trino/spi/block/Block;I)Lio/airlift/slice/Slice;
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;)V
+#writeSlice(Lio/trino/spi/block/BlockBuilder;Lio/airlift/slice/Slice;II)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/type/BooleanType
@351
+#getFixedSize()I
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;II)Lio/trino/spi/block/BlockBuilder;
+#createBlockBuilder(Lio/trino/spi/block/BlockBuilderStatus;I)Lio/trino/spi/block/BlockBuilder;
+#createFixedSizeBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#isComparable()Z
+#isOrderable()Z
+#getTypeOperatorDeclaration(Lio/trino/spi/type/TypeOperators;)Lio/trino/spi/type/TypeOperatorDeclaration;
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#appendTo(Lio/trino/spi/block/Block;ILio/trino/spi/block/BlockBuilder;)V
+#getBoolean(Lio/trino/spi/block/Block;I)Z
+#writeBoolean(Lio/trino/spi/block/BlockBuilder;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@362
+#wrapByteArrayAsBooleanBlockWithoutNulls([B)Lio/trino/spi/block/Block;
+#createBlockForSingleNonNullValue(Z)Lio/trino/spi/block/Block;

+###io/trino/spi/type/SqlTimestampWithTimeZone
@351
+#fromInstant(ILjava/time/Instant;Ljava/time/ZoneId;)Lio/trino/spi/type/SqlTimestampWithTimeZone;
+#newInstance(IJILio/trino/spi/type/TimeZoneKey;)Lio/trino/spi/type/SqlTimestampWithTimeZone;
+#getPrecision()I
+#getEpochMillis()J
+#getPicosOfMilli()I
+#getMillisUtc()J
+#getTimeZoneKey()Lio/trino/spi/type/TimeZoneKey;
+#roundTo(I)Lio/trino/spi/type/SqlTimestampWithTimeZone;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toZonedDateTime()Ljava/time/ZonedDateTime;

+###io/trino/spi/type/TimestampType
@351
+#createTimestampType(I)Lio/trino/spi/type/TimestampType;
+#getPrecision()I
+#isShort()Z
+#isComparable()Z
+#isOrderable()Z

+###io/trino/spi/type/TypeOperatorDeclaration
@351
+#isComparable()Z
+#isOrderable()Z
+#getEqualOperators()Ljava/util/Collection;
+#getHashCodeOperators()Ljava/util/Collection;
+#getXxHash64Operators()Ljava/util/Collection;
+#getDistinctFromOperators()Ljava/util/Collection;
+#getIndeterminateOperators()Ljava/util/Collection;
+#getComparisonOperators()Ljava/util/Collection;
+#getLessThanOperators()Ljava/util/Collection;
+#getLessThanOrEqualOperators()Ljava/util/Collection;
+#builder(Ljava/lang/Class;)Lio/trino/spi/type/TypeOperatorDeclaration$Builder;
+#extractOperatorDeclaration(Ljava/lang/Class;Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/Class;)Lio/trino/spi/type/TypeOperatorDeclaration;
@364
+#getComparisonUnorderedLastOperators()Ljava/util/Collection;
+#getComparisonUnorderedFirstOperators()Ljava/util/Collection;
-#getComparisonOperators()Ljava/util/Collection;

+###io/trino/spi/type/SqlTime
@351
+#newInstance(IJ)Lio/trino/spi/type/SqlTime;
+#getPicos()J
+#roundTo(I)Lio/trino/spi/type/SqlTime;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/type/DateType
@351
+#getObjectValue(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/block/Block;I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@403
+#getRange()Ljava/util/Optional;
@405
+#getPreviousValue(Ljava/lang/Object;)Ljava/util/Optional;
+#getNextValue(Ljava/lang/Object;)Ljava/util/Optional;

+###io/trino/spi/ErrorType
@351
+#values()[Lio/trino/spi/ErrorType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/ErrorType;

+###io/trino/spi/connector/ConnectorTablePartitioning
@351
+#<init>(Lio/trino/spi/connector/ConnectorPartitioningHandle;Ljava/util/List;)V
+#getPartitioningHandle()Lio/trino/spi/connector/ConnectorPartitioningHandle;
+#getPartitioningColumns()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/connector/GroupingProperty
@351
+#<init>(Ljava/util/Collection;)V
+#isOrderSensitive()Z
+#getColumns()Ljava/util/Set;
+#constrain(Ljava/util/Set;)Lio/trino/spi/connector/LocalProperty;
+#isSimplifiedBy(Lio/trino/spi/connector/LocalProperty;)Z
+#translate(Ljava/util/function/Function;)Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/connector/SchemaTableName
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getSchemaName()Ljava/lang/String;
+#getTableName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toSchemaTablePrefix()Lio/trino/spi/connector/SchemaTablePrefix;
@358
+#schemaTableName(Ljava/lang/String;Ljava/lang/String;)Lio/trino/spi/connector/SchemaTableName;
@368
+#getRetainedSizeInBytes()J

+###io/trino/spi/connector/ConnectorRecordSetProvider
@351
+#getRecordSet(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/RecordSet;
+#getRecordSet(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Ljava/util/List;)Lio/trino/spi/connector/RecordSet;[deprecated]
@389
-#getRecordSet(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Ljava/util/List;)Lio/trino/spi/connector/RecordSet;[deprecated]

+###io/trino/spi/connector/MetadataProvider
@366
+#getRelationMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/CatalogSchemaTableName;)Ljava/util/Optional;

+###io/trino/spi/connector/ConnectorContext
@351
+#getNodeManager()Lio/trino/spi/NodeManager;
+#getVersionEmbedder()Lio/trino/spi/VersionEmbedder;
+#getTypeManager()Lio/trino/spi/type/TypeManager;
+#getPageSorter()Lio/trino/spi/PageSorter;
+#getPageIndexerFactory()Lio/trino/spi/PageIndexerFactory;
+#duplicatePluginClassLoader()Ljava/lang/ClassLoader;
@366
+#getMetadataProvider()Lio/trino/spi/connector/MetadataProvider;
@376
+#getSpiVersion()Ljava/lang/String;
@406
+#getCatalogHandle()Lio/trino/spi/connector/CatalogHandle;

+###io/trino/spi/connector/ConnectorViewDefinition$ViewColumn
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeId;)V
+#getName()Ljava/lang/String;
+#getType()Lio/trino/spi/type/TypeId;
+#toString()Ljava/lang/String;
@402
+#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeId;Ljava/util/Optional;)V
+#getComment()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeId;)V

+###io/trino/spi/connector/ConnectorViewDefinition
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Z)V
+#getOriginalSql()Ljava/lang/String;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getColumns()Ljava/util/List;
+#getComment()Ljava/util/Optional;
+#getOwner()Ljava/util/Optional;
+#isRunAsInvoker()Z
+#toString()Ljava/lang/String;
@365
+#withoutOwner()Lio/trino/spi/connector/ConnectorViewDefinition;

+###io/trino/spi/connector/InMemoryRecordSet
@351
+#<init>(Ljava/util/Collection;Ljava/lang/Iterable;)V
+#getColumnTypes()Ljava/util/List;
+#cursor()Lio/trino/spi/connector/RecordCursor;
+#builder(Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/connector/InMemoryRecordSet$Builder;
+#builder(Ljava/util/List;)Lio/trino/spi/connector/InMemoryRecordSet$Builder;
+#builder(Ljava/util/Collection;)Lio/trino/spi/connector/InMemoryRecordSet$Builder;

+###io/trino/spi/connector/StandardWarningCode
@351
+#values()[Lio/trino/spi/connector/StandardWarningCode;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/StandardWarningCode;
+#toWarningCode()Lio/trino/spi/WarningCode;

+###io/trino/spi/connector/Assignment
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/ColumnHandle;Lio/trino/spi/type/Type;)V
+#getVariable()Ljava/lang/String;
+#getColumn()Lio/trino/spi/connector/ColumnHandle;
+#getType()Lio/trino/spi/type/Type;
@375
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/ConnectorTableLayoutResult
@351
+#<init>(Lio/trino/spi/connector/ConnectorTableLayout;Lio/trino/spi/predicate/TupleDomain;)V
+#getTableLayout()Lio/trino/spi/connector/ConnectorTableLayout;
+#getUnenforcedConstraint()Lio/trino/spi/predicate/TupleDomain;
@369
-###io/trino/spi/connector/ConnectorTableLayoutResult

+###io/trino/spi/connector/ConnectorPartitioningHandle
@351
+#isSingleNode()Z
+#isCoordinatorOnly()Z

+###io/trino/spi/connector/ConnectorNewTableLayout
@351
+#<init>(Lio/trino/spi/connector/ConnectorPartitioningHandle;Ljava/util/List;)V
+#<init>(Ljava/util/List;)V
+#getPartitioning()Ljava/util/Optional;
+#getPartitionColumns()Ljava/util/List;
@370
-###io/trino/spi/connector/ConnectorNewTableLayout

+###io/trino/spi/connector/JoinStatistics
@353
+#getLeftStatistics()Ljava/util/Optional;
+#getRightStatistics()Ljava/util/Optional;
+#getJoinStatistics()Ljava/util/Optional;

+###io/trino/spi/connector/ConnectorTransactionHandle
@351

+###io/trino/spi/connector/PointerType
@365
+#values()[Lio/trino/spi/connector/PointerType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/PointerType;

+###io/trino/spi/connector/SchemaRoutineName
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getSchemaName()Ljava/lang/String;
+#getRoutineName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/ConnectorIndexHandle
@351

+###io/trino/spi/connector/ConnectorIndexProvider
@351
+#getIndex(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorIndexHandle;Ljava/util/List;Ljava/util/List;)Lio/trino/spi/connector/ConnectorIndex;

+###io/trino/spi/connector/TableProcedureExecutionMode
@364
+#<init>(ZZ)V
+#isReadsData()Z
+#supportsFilter()Z
+#coordinatorOnly()Lio/trino/spi/connector/TableProcedureExecutionMode;
+#distributedWithFilteringAndRepartitioning()Lio/trino/spi/connector/TableProcedureExecutionMode;
@376
-#<init>(ZZ)V

+###io/trino/spi/connector/ConnectorPageSink
@351
+#getCompletedBytes()J
+#getSystemMemoryUsage()J
+#getValidationCpuNanos()J
+#appendPage(Lio/trino/spi/Page;)Ljava/util/concurrent/CompletableFuture;
+#finish()Ljava/util/concurrent/CompletableFuture;
+#abort()V
@369
+#getMemoryUsage()J
-#getSystemMemoryUsage()J

+###io/trino/spi/connector/ConnectorAccessControl
@351
+#checkCanCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanDropSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanRenameSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanSetSchemaAuthorization(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanShowSchemas(Lio/trino/spi/connector/ConnectorSecurityContext;)V
+#filterSchemas(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDropTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanRenameTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSetTableComment(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSetColumnComment(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanShowTables(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#filterTables(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;)Ljava/util/Set;
+#checkCanShowColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#filterColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;)Ljava/util/Set;
+#checkCanAddColumn(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDropColumn(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSetTableAuthorization(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanRenameColumn(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSelectFromColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;)V
+#checkCanInsertIntoTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDeleteFromTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanCreateView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanRenameView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanSetViewAuthorization(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDropView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanCreateViewWithSelectFromColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;)V
+#checkCanSetCatalogSessionProperty(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanGrantSchemaPrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeSchemaPrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanGrantTablePrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanRevokeTablePrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#checkCanCreateRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/util/Optional;)V
+#checkCanDropRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanGrantRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanRevokeRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
+#checkCanSetRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowCurrentRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleGrants(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanExecuteProcedure(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaRoutineName;)V
+#getRowFilter(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
+#getColumnMask(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
@352
+#checkCanUpdateTableColumns(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;)V
@356
+#checkCanCreateMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanRefreshMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanDropMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@362
+#checkCanGrantRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#checkCanRevokeRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#checkCanSetRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
+#checkCanShowRoleAuthorizationDescriptors(Lio/trino/spi/connector/ConnectorSecurityContext;)V
+#checkCanShowRoles(Lio/trino/spi/connector/ConnectorSecurityContext;)V
+#checkCanShowCurrentRoles(Lio/trino/spi/connector/ConnectorSecurityContext;)V
+#checkCanShowRoleGrants(Lio/trino/spi/connector/ConnectorSecurityContext;)V
-#checkCanGrantRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanRevokeRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;Ljava/lang/String;)V
-#checkCanSetRole(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/lang/String;)V
-#checkCanShowRoleAuthorizationDescriptors(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
-#checkCanShowRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
-#checkCanShowCurrentRoles(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
-#checkCanShowRoleGrants(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V
@364
*#checkCanCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V[deprecated]
+#checkCanCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
+#checkCanSetTableProperties(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
+#checkCanRenameMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
+#checkCanExecuteTableProcedure(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;)V
@365
+#checkCanTruncateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@366
+#checkCanDenySchemaPrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)V
+#checkCanDenyTablePrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/security/Privilege;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
@369
*#checkCanCreateMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V[deprecated]
+#checkCanCreateMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
+#checkCanSetMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;Ljava/util/Set;)V
@370
+#checkCanSetMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
-#checkCanSetMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;Ljava/util/Set;)V
@371
-#checkCanCreateTable(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V[deprecated]
-#checkCanCreateMaterializedView(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V[deprecated]
@376
*#getRowFilter(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;[deprecated]
+#getRowFilters(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/List;
*#getColumnMask(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;[deprecated]
+#getColumnMasks(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;
@380
+#checkCanExecuteFunction(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaRoutineName;)V
@383
+#checkCanExecuteFunction(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/spi/connector/SchemaRoutineName;)V
-#checkCanExecuteFunction(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaRoutineName;)V
@388
-#getRowFilter(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;[deprecated]
-#getColumnMask(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;[deprecated]
@390
+#checkCanSetViewComment(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@400
+#checkCanGrantExecuteFunctionPrivilege(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/function/FunctionKind;Lio/trino/spi/connector/SchemaRoutineName;Lio/trino/spi/security/TrinoPrincipal;Z)V
@405
+#checkCanCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;Ljava/util/Map;)V
*#checkCanCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V[deprecated]
+#checkCanAlterColumn(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;)V
@406
+#getColumnMask(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/Optional;
*#getColumnMasks(Lio/trino/spi/connector/ConnectorSecurityContext;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Lio/trino/spi/type/Type;)Ljava/util/List;[deprecated]
-#checkCanCreateSchema(Lio/trino/spi/connector/ConnectorSecurityContext;Ljava/lang/String;)V[deprecated]

+###io/trino/spi/connector/ConnectorMaterializedViewDefinition$Column
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/TypeId;)V
+#getName()Ljava/lang/String;
+#getType()Lio/trino/spi/type/TypeId;
+#toString()Ljava/lang/String;
@358
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/connector/TopNApplicationResult
@351
+#<init>(Ljava/lang/Object;Z)V
+#getHandle()Ljava/lang/Object;
+#isTopNGuaranteed()Z
@358
+#<init>(Ljava/lang/Object;ZZ)V
+#isPrecalculateStatistics()Z
-#<init>(Ljava/lang/Object;Z)V

+###io/trino/spi/connector/ConstraintApplicationResult
@351
+#<init>(Ljava/lang/Object;Lio/trino/spi/predicate/TupleDomain;)V
+#getHandle()Ljava/lang/Object;
+#getRemainingFilter()Lio/trino/spi/predicate/TupleDomain;
@358
+#<init>(Ljava/lang/Object;Lio/trino/spi/predicate/TupleDomain;Z)V
+#isPrecalculateStatistics()Z
-#<init>(Ljava/lang/Object;Lio/trino/spi/predicate/TupleDomain;)V
@372
+#<init>(Ljava/lang/Object;Lio/trino/spi/predicate/TupleDomain;Lio/trino/spi/expression/ConnectorExpression;Z)V
+#getRemainingExpression()Ljava/util/Optional;
+#transform(Ljava/util/function/Function;)Lio/trino/spi/connector/ConstraintApplicationResult;

+###io/trino/spi/connector/ConnectorPageSource
@351
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#isFinished()Z
+#getNextPage()Lio/trino/spi/Page;
+#getSystemMemoryUsage()J
+#close()V
+#isBlocked()Ljava/util/concurrent/CompletableFuture;
@360
+#getCompletedPositions()Ljava/util/OptionalLong;
+#getMetrics()Lio/trino/spi/metrics/Metrics;
@369
+#getMemoryUsage()J
-#getSystemMemoryUsage()J

+###io/trino/spi/connector/CatalogSchemaTableName
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/SchemaTableName;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#getSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/SystemTable
@351
+#getDistribution()Lio/trino/spi/connector/SystemTable$Distribution;
+#getTableMetadata()Lio/trino/spi/connector/ConnectorTableMetadata;
+#cursor(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/RecordCursor;
+#pageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;

+###io/trino/spi/connector/DynamicFilter
@351
+#isBlocked()Ljava/util/concurrent/CompletableFuture;
+#isComplete()Z
+#isAwaitable()Z
+#getCurrentPredicate()Lio/trino/spi/predicate/TupleDomain;
@364
+#getColumnsCovered()Ljava/util/Set;

+###io/trino/spi/connector/TableScanRedirectApplicationResult
@351
+#<init>(Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Map;Lio/trino/spi/predicate/TupleDomain;)V
+#getDestinationTable()Lio/trino/spi/connector/CatalogSchemaTableName;
+#getDestinationColumns()Ljava/util/Map;
+#getFilter()Lio/trino/spi/predicate/TupleDomain;
@353
+#<init>(Ljava/util/List;)V
+#getRedirections()Ljava/util/List;
-#getDestinationTable()Lio/trino/spi/connector/CatalogSchemaTableName;
-#getDestinationColumns()Ljava/util/Map;
-#getFilter()Lio/trino/spi/predicate/TupleDomain;
@358
+#getDestinationTable()Lio/trino/spi/connector/CatalogSchemaTableName;
+#getDestinationColumns()Ljava/util/Map;
+#getFilter()Lio/trino/spi/predicate/TupleDomain;
-#<init>(Ljava/util/List;)V
-#getRedirections()Ljava/util/List;

+###io/trino/spi/connector/ColumnMetadata
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;)V
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;)V[deprecated]
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;Z)V[deprecated]
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;Ljava/lang/String;Z)V[deprecated]
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)V[deprecated]
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;ZLjava/lang/String;Ljava/lang/String;ZLjava/util/Map;)V[deprecated]
+#getName()Ljava/lang/String;
+#getType()Lio/trino/spi/type/Type;
+#isNullable()Z
+#getComment()Ljava/lang/String;
+#getExtraInfo()Ljava/lang/String;
+#isHidden()Z
+#getProperties()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#builder()Lio/trino/spi/connector/ColumnMetadata$Builder;
+#builderFrom(Lio/trino/spi/connector/ColumnMetadata;)Lio/trino/spi/connector/ColumnMetadata$Builder;
@355
+#getColumnSchema()Lio/trino/spi/connector/ColumnSchema;
@375
-#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;)V[deprecated]
-#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;Z)V[deprecated]
-#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;Ljava/lang/String;Z)V[deprecated]
-#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)V[deprecated]
-#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;ZLjava/lang/String;Ljava/lang/String;ZLjava/util/Map;)V[deprecated]

+###io/trino/spi/connector/SampleApplicationResult
@358
+#<init>(Ljava/lang/Object;Z)V
+#getHandle()Ljava/lang/Object;
+#isPrecalculateStatistics()Z

+###io/trino/spi/connector/LocalProperty
@351
+#translate(Ljava/util/function/Function;)Ljava/util/Optional;
+#isOrderSensitive()Z
+#isSimplifiedBy(Lio/trino/spi/connector/LocalProperty;)Z
+#withConstants(Ljava/util/Set;)Ljava/util/Optional;
+#constrain(Ljava/util/Set;)Lio/trino/spi/connector/LocalProperty;
+#getColumns()Ljava/util/Set;

+###io/trino/spi/connector/ConnectorSecurityContext
@351
+#<init>(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/security/ConnectorIdentity;Lio/trino/spi/QueryId;)V
+#getTransactionHandle()Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getIdentity()Lio/trino/spi/security/ConnectorIdentity;
+#getQueryId()Lio/trino/spi/QueryId;

+###io/trino/spi/connector/LimitApplicationResult
@351
+#<init>(Ljava/lang/Object;Z)V
+#getHandle()Ljava/lang/Object;
+#isLimitGuaranteed()Z
@358
+#<init>(Ljava/lang/Object;ZZ)V
+#isPrecalculateStatistics()Z
-#<init>(Ljava/lang/Object;Z)V

+###io/trino/spi/connector/ConnectorFactory
@351
+#getName()Ljava/lang/String;
+#getHandleResolver()Lio/trino/spi/connector/ConnectorHandleResolver;
+#create(Ljava/lang/String;Ljava/util/Map;Lio/trino/spi/connector/ConnectorContext;)Lio/trino/spi/connector/Connector;
@370
-#getHandleResolver()Lio/trino/spi/connector/ConnectorHandleResolver;

+###io/trino/spi/connector/ProjectionApplicationResult
@351
+#<init>(Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)V
+#getHandle()Ljava/lang/Object;
+#getProjections()Ljava/util/List;
+#getAssignments()Ljava/util/List;
@358
+#<init>(Ljava/lang/Object;Ljava/util/List;Ljava/util/List;Z)V
+#isPrecalculateStatistics()Z
-#<init>(Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)V

+###io/trino/spi/connector/ConstantProperty
@351
+#<init>(Ljava/lang/Object;)V
+#isOrderSensitive()Z
+#getColumn()Ljava/lang/Object;
+#getColumns()Ljava/util/Set;
+#translate(Ljava/util/function/Function;)Ljava/util/Optional;
+#isSimplifiedBy(Lio/trino/spi/connector/LocalProperty;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/connector/JoinApplicationResult
@352
+#<init>(Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;)V
+#getTableHandle()Ljava/lang/Object;
+#getLeftColumnHandles()Ljava/util/Map;
+#getRightColumnHandles()Ljava/util/Map;
@358
+#<init>(Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;Z)V
+#isPrecalculateStatistics()Z
-#<init>(Ljava/lang/Object;Ljava/util/Map;Ljava/util/Map;)V

+###io/trino/spi/connector/JoinType
@352
+#values()[Lio/trino/spi/connector/JoinType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/JoinType;

+###io/trino/spi/connector/ConnectorOutputMetadata
@351
+#getInfo()Ljava/lang/Object;

+###io/trino/spi/connector/BucketFunction
@351
+#getBucket(Lio/trino/spi/Page;I)I

+###io/trino/spi/connector/ConnectorInsertTableHandle
@351

+###io/trino/spi/connector/RetryMode
@367
+#values()[Lio/trino/spi/connector/RetryMode;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/RetryMode;

+###io/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy
@351
+#values()[Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;
@391
-###io/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy

+###io/trino/spi/connector/ConnectorOutputTableHandle
@351

+###io/trino/spi/connector/ColumnHandle
@351
@359
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/spi/connector/ConnectorTableLayout
@351
+#<init>(Lio/trino/spi/connector/ConnectorTableLayoutHandle;)V
+#<init>(Lio/trino/spi/connector/ConnectorTableLayoutHandle;Ljava/util/Optional;Lio/trino/spi/predicate/TupleDomain;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)V
+#getHandle()Lio/trino/spi/connector/ConnectorTableLayoutHandle;
+#getColumns()Ljava/util/Optional;
+#getPredicate()Lio/trino/spi/predicate/TupleDomain;
+#getTablePartitioning()Ljava/util/Optional;
+#getStreamPartitioningColumns()Ljava/util/Optional;
+#getDiscretePredicates()Ljava/util/Optional;
+#getLocalProperties()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@369
-###io/trino/spi/connector/ConnectorTableLayout

+###io/trino/spi/connector/ConnectorIndex
@351
+#lookup(Lio/trino/spi/connector/RecordSet;)Lio/trino/spi/connector/ConnectorPageSource;

+###io/trino/spi/connector/ViewNotFoundException
@351
+#<init>(Lio/trino/spi/connector/SchemaTableName;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/Throwable;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getViewName()Lio/trino/spi/connector/SchemaTableName;

+###io/trino/spi/connector/InMemoryRecordSet$Builder
@351
+#addRow([Ljava/lang/Object;)Lio/trino/spi/connector/InMemoryRecordSet$Builder;
+#build()Lio/trino/spi/connector/InMemoryRecordSet;

+###io/trino/spi/connector/SortOrder
@351
+#values()[Lio/trino/spi/connector/SortOrder;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/SortOrder;
+#isAscending()Z
+#isNullsFirst()Z
@356
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/ConnectorSplitSource
@351
+#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;I)Ljava/util/concurrent/CompletableFuture;
+#close()V
+#isFinished()Z
+#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@355
-#getMinScheduleSplitBatchSize()Ljava/util/Optional;
@364
+#getTableExecuteSplitsInfo()Ljava/util/Optional;
@388
*#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;I)Ljava/util/concurrent/CompletableFuture;[deprecated]
+#getNextBatch(I)Ljava/util/concurrent/CompletableFuture;
@391
-#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;I)Ljava/util/concurrent/CompletableFuture;[deprecated]

+###io/trino/spi/connector/ConnectorSplitManager
@351
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableLayoutHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Ljava/util/function/Supplier;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;
@360
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Ljava/util/function/Supplier;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
@365
*#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;
@369
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableLayoutHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
@387
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
@388
*#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;
@391
-#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorSplitManager$SplitSchedulingStrategy;Lio/trino/spi/connector/DynamicFilter;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/connector/ConnectorSplitSource;[deprecated]
@409
+#getSplits(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/function/SchemaFunctionName;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;)Lio/trino/spi/connector/ConnectorSplitSource;

+###io/trino/spi/connector/MaterializedViewFreshness
@351
+#<init>(Z)V
+#isMaterializedViewFresh()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@405
*#<init>(Z)V[deprecated]
+#<init>(Lio/trino/spi/connector/MaterializedViewFreshness$Freshness;)V
+#getFreshness()Lio/trino/spi/connector/MaterializedViewFreshness$Freshness;
-#isMaterializedViewFresh()Z
@407
-#<init>(Z)V[deprecated]

+###io/trino/spi/connector/JoinCondition
@352
+#<init>(Lio/trino/spi/connector/JoinCondition$Operator;Lio/trino/spi/expression/ConnectorExpression;Lio/trino/spi/expression/ConnectorExpression;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@353
+#getOperator()Lio/trino/spi/connector/JoinCondition$Operator;
+#getLeftExpression()Lio/trino/spi/expression/ConnectorExpression;
+#getRightExpression()Lio/trino/spi/expression/ConnectorExpression;
@396
+#from(Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Set;Ljava/util/Set;)Ljava/util/Optional;

+###io/trino/spi/connector/BasicRelationStatistics
@353
+#<init>(JJ)V
+#getRowCount()D
+#getDataSize()D

+###io/trino/spi/connector/EmptyPageSource
@351
+#<init>()V
+#deleteRows(Lio/trino/spi/block/Block;)V
+#finish()Ljava/util/concurrent/CompletableFuture;
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#isFinished()Z
+#getNextPage()Lio/trino/spi/Page;
+#getSystemMemoryUsage()J
+#close()V
@352
+#updateRows(Lio/trino/spi/Page;Ljava/util/List;)V
@369
+#getMemoryUsage()J
-#getSystemMemoryUsage()J
@406
*#deleteRows(Lio/trino/spi/block/Block;)V[deprecated]
*#updateRows(Lio/trino/spi/Page;Ljava/util/List;)V[deprecated]
*#finish()Ljava/util/concurrent/CompletableFuture;[deprecated]

+###io/trino/spi/connector/SortingProperty
@351
+#<init>(Ljava/lang/Object;Lio/trino/spi/connector/SortOrder;)V
+#isOrderSensitive()Z
+#getColumn()Ljava/lang/Object;
+#getColumns()Ljava/util/Set;
+#getOrder()Lio/trino/spi/connector/SortOrder;
+#translate(Ljava/util/function/Function;)Ljava/util/Optional;
+#isSimplifiedBy(Lio/trino/spi/connector/LocalProperty;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/connector/ColumnNotFoundException
@351
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getTableName()Lio/trino/spi/connector/SchemaTableName;
+#getColumnName()Ljava/lang/String;

+###io/trino/spi/connector/Connector
@351
+#getHandleResolver()Ljava/util/Optional;
+#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;Z)Lio/trino/spi/connector/ConnectorTransactionHandle;
+#getMetadata(Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;
+#getSplitManager()Lio/trino/spi/connector/ConnectorSplitManager;
+#getPageSourceProvider()Lio/trino/spi/connector/ConnectorPageSourceProvider;
+#getRecordSetProvider()Lio/trino/spi/connector/ConnectorRecordSetProvider;
+#getPageSinkProvider()Lio/trino/spi/connector/ConnectorPageSinkProvider;
+#getIndexProvider()Lio/trino/spi/connector/ConnectorIndexProvider;
+#getNodePartitioningProvider()Lio/trino/spi/connector/ConnectorNodePartitioningProvider;
+#getSystemTables()Ljava/util/Set;
+#getProcedures()Ljava/util/Set;
+#getSessionProperties()Ljava/util/List;
+#getSchemaProperties()Ljava/util/List;
+#getAnalyzeProperties()Ljava/util/List;
+#getTableProperties()Ljava/util/List;
+#getColumnProperties()Ljava/util/List;
+#getAccessControl()Lio/trino/spi/connector/ConnectorAccessControl;
+#getEventListeners()Ljava/lang/Iterable;
+#commit(Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#rollback(Lio/trino/spi/connector/ConnectorTransactionHandle;)V
+#isSingleStatementWritesOnly()Z
+#shutdown()V
+#getCapabilities()Ljava/util/Set;
@356
+#getMaterializedViewProperties()Ljava/util/List;
@364
+#getTableProcedures()Ljava/util/Set;
@365
*#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;Z)Lio/trino/spi/connector/ConnectorTransactionHandle;[deprecated]
+#beginTransaction(Lio/trino/spi/transaction/IsolationLevel;ZZ)Lio/trino/spi/connector/ConnectorTransactionHandle;
@370
-#getHandleResolver()Ljava/util/Optional;
@371
+#getMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;
*#getMetadata(Lio/trino/spi/connector/ConnectorTransactionHandle;)Lio/trino/spi/connector/ConnectorMetadata;[deprecated]
@381
+#getTableFunctions()Ljava/util/Set;
@395
+#getFunctionProvider()Ljava/util/Optional;

+###io/trino/spi/connector/ConnectorMetadata
@351
+#schemaExists(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;)Z
+#listSchemaNames(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/List;
+#getTableHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/connector/ConnectorTableHandle;
+#getTableHandleForStatisticsCollection(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)Lio/trino/spi/connector/ConnectorTableHandle;
+#getSystemTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
+#getTableLayouts(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/Constraint;Ljava/util/Optional;)Ljava/util/List;[deprecated]
+#getTableLayout(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Lio/trino/spi/connector/ConnectorTableLayout;[deprecated]
+#makeCompatiblePartitioning(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableLayoutHandle;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Lio/trino/spi/connector/ConnectorTableLayoutHandle;[deprecated]
+#makeCompatiblePartitioning(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Lio/trino/spi/connector/ConnectorTableHandle;
+#getCommonPartitioningHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Ljava/util/Optional;
+#getTableMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableMetadata;
+#getInfo(Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Ljava/util/Optional;[deprecated]
+#getInfo(Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Optional;
+#listTables(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/List;
+#getColumnHandles(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Map;
+#getColumnMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;)Lio/trino/spi/connector/ColumnMetadata;
+#listTableColumns(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/Map;
+#getTableStatistics(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/statistics/TableStatistics;
+#createSchema(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;Ljava/util/Map;Lio/trino/spi/security/TrinoPrincipal;)V
+#dropSchema(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;)V
+#renameSchema(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;Ljava/lang/String;)V
+#setSchemaAuthorization(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;Lio/trino/spi/security/TrinoPrincipal;)V
+#createTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Z)V
+#dropTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)V
+#renameTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/SchemaTableName;)V
+#setTableComment(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Optional;)V
+#setColumnComment(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/util/Optional;)V
+#addColumn(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnMetadata;)V
+#setTableAuthorization(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#renameColumn(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/lang/String;)V
+#dropColumn(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;)V
+#getNewTableLayout(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;)Ljava/util/Optional;
+#getInsertLayout(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Optional;
+#getStatisticsCollectionMetadataForWrite(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
+#getStatisticsCollectionMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;
+#beginStatisticsCollection(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableHandle;
+#finishStatisticsCollection(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Collection;)V
+#beginCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;)Lio/trino/spi/connector/ConnectorOutputTableHandle;
+#finishCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
+#beginQuery(Lio/trino/spi/connector/ConnectorSession;)V
+#cleanupQuery(Lio/trino/spi/connector/ConnectorSession;)V
+#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorInsertTableHandle;[deprecated]
+#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorInsertTableHandle;
+#supportsMissingColumnsOnInsert()Z
+#finishInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Optional;
+#beginRefreshMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorInsertTableHandle;
+#finishRefreshMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorInsertTableHandle;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/List;)Ljava/util/Optional;
+#getUpdateRowIdColumnHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#beginDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableHandle;
+#finishDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Collection;)V
+#createView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorViewDefinition;Z)V
+#renameView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
+#setViewAuthorization(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/security/TrinoPrincipal;)V
+#dropView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)V
+#listViews(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/List;
+#getViews(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/Map;
+#getView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
+#getSchemaProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/CatalogSchemaName;)Ljava/util/Map;
+#getSchemaOwner(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/CatalogSchemaName;)Ljava/util/Optional;
+#supportsMetadataDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Z
+#metadataDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Ljava/util/OptionalLong;
+#applyDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Optional;
+#executeDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/OptionalLong;
+#resolveIndex(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Set;Ljava/util/Set;Lio/trino/spi/predicate/TupleDomain;)Ljava/util/Optional;
+#createRole(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;Ljava/util/Optional;)V
+#dropRole(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;)V
+#listRoles(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/Set;
+#listRoleGrants(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#listAllRoleGrants(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
+#grantRoles(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#revokeRoles(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Set;Ljava/util/Set;ZLjava/util/Optional;)V
+#listApplicableRoles(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/security/TrinoPrincipal;)Ljava/util/Set;
+#listEnabledRoles(Lio/trino/spi/connector/ConnectorSession;)Ljava/util/Set;
+#grantSchemaPrivileges(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeSchemaPrivileges(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#grantTablePrivileges(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#revokeTablePrivileges(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;Z)V
+#listTablePrivileges(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/List;
+#usesLegacyTableLayouts()Z
+#getTableProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableProperties;
+#applyLimit(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;J)Ljava/util/Optional;
+#applyFilter(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/Constraint;)Ljava/util/Optional;
+#applyProjection(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Ljava/util/Map;)Ljava/util/Optional;
+#applySample(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/SampleType;D)Ljava/util/Optional;
+#applyAggregation(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)Ljava/util/Optional;
+#applyTopN(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;JLjava/util/List;Ljava/util/Map;)Ljava/util/Optional;
+#validateScan(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)V
+#createMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ConnectorMaterializedViewDefinition;ZZ)V
+#dropMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)V
+#getMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
+#getMaterializedViewFreshness(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/connector/MaterializedViewFreshness;
+#applyTableScanRedirect(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Optional;
@352
+#getDeleteRowIdColumnHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#getUpdateRowIdColumnHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ColumnHandle;
+#beginUpdate(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorTableHandle;
+#finishUpdate(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Collection;)V
+#applyJoin(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/JoinType;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Optional;
-#getUpdateRowIdColumnHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ColumnHandle;
@353
+#applyJoin(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/JoinType;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;
-#applyJoin(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/JoinType;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Optional;
@355
+#getTableSchema(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableSchema;
@358
*#listTableColumns(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/Map;[deprecated]
+#streamTableColumns(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/stream/Stream;
+#redirectTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/Optional;
@359
+#delegateMaterializedViewRefreshToConnector(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Z
+#refreshMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;)Ljava/util/concurrent/CompletableFuture;
+#listMaterializedViews(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/List;
+#getMaterializedViews(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;)Ljava/util/Map;
@362
+#roleExists(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;)Z
@364
+#getTableHandleForExecute(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;
+#getLayoutForTableExecute(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)Ljava/util/Optional;
+#beginTableExecute(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableExecuteHandle;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/BeginTableExecuteResult;
+#finishTableExecute(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableExecuteHandle;Ljava/util/Collection;Ljava/util/List;)V
+#setTableProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Map;)V
+#renameMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/SchemaTableName;)V
@365
+#truncateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)V
+#getTableHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Optional;Ljava/util/Optional;)Lio/trino/spi/connector/ConnectorTableHandle;
+#isSupportedVersionType(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/PointerType;Lio/trino/spi/type/Type;)Z
@366
+#denySchemaPrivileges(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
+#denyTablePrivileges(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Set;Lio/trino/spi/security/TrinoPrincipal;)V
@367
*#getTableHandleForExecute(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;[deprecated]
+#getTableHandleForExecute(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/lang/String;Ljava/util/Map;Lio/trino/spi/connector/RetryMode;)Ljava/util/Optional;
*#beginCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;)Lio/trino/spi/connector/ConnectorOutputTableHandle;[deprecated]
+#beginCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorOutputTableHandle;
*#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorInsertTableHandle;[deprecated]
+#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorInsertTableHandle;
*#beginRefreshMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorInsertTableHandle;[deprecated]
+#beginRefreshMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorInsertTableHandle;
*#beginDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableHandle;[deprecated]
+#beginDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorTableHandle;
*#beginUpdate(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorTableHandle;[deprecated]
+#beginUpdate(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorTableHandle;
@369
+#setMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;Ljava/util/Set;)V
-#getTableLayouts(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/Constraint;Ljava/util/Optional;)Ljava/util/List;[deprecated]
-#getTableLayout(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Lio/trino/spi/connector/ConnectorTableLayout;[deprecated]
-#makeCompatiblePartitioning(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableLayoutHandle;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Lio/trino/spi/connector/ConnectorTableLayoutHandle;[deprecated]
-#getInfo(Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Ljava/util/Optional;[deprecated]
-#supportsMetadataDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Z
-#metadataDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableLayoutHandle;)Ljava/util/OptionalLong;
-#usesLegacyTableLayouts()Z
@370
+#setMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)V
-#setMaterializedViewProperties(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;Ljava/util/Set;)V
@376
+#executeTableExecute(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)V
@378
+#getSchemaTableName(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/SchemaTableName;
*#getTableStatistics(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/statistics/TableStatistics;[deprecated]
+#getTableStatistics(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/statistics/TableStatistics;
@380
+#supportsReportingWrittenBytes(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)Z
+#supportsReportingWrittenBytes(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Z
@381
+#applyTableFunction(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/ptf/ConnectorTableFunctionHandle;)Ljava/util/Optional;
-#getTableHandleForExecute(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Optional;[deprecated]
-#beginCreateTable(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;Ljava/util/Optional;)Lio/trino/spi/connector/ConnectorOutputTableHandle;[deprecated]
-#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorInsertTableHandle;[deprecated]
-#beginInsert(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorInsertTableHandle;[deprecated]
-#beginRefreshMaterializedView(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorInsertTableHandle;[deprecated]
-#beginDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ConnectorTableHandle;[deprecated]
-#beginUpdate(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorTableHandle;[deprecated]
@386
*#getTableHandleForStatisticsCollection(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)Lio/trino/spi/connector/ConnectorTableHandle;[deprecated]
+#streamTableColumns(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/Iterator;
*#getStatisticsCollectionMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;[deprecated]
+#getStatisticsCollectionMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Map;)Lio/trino/spi/connector/ConnectorAnalyzeMetadata;
-#streamTableColumns(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTablePrefix;)Ljava/util/stream/Stream;
-#getTableStatistics(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/Constraint;)Lio/trino/spi/statistics/TableStatistics;[deprecated]
-#isSupportedVersionType(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/PointerType;Lio/trino/spi/type/Type;)Z
@390
+#setViewComment(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Optional;)V
@393
+#getRowChangeParadigm(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/RowChangeParadigm;
+#getMergeRowIdColumnHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ColumnHandle;
+#getUpdateLayout(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Ljava/util/Optional;
+#beginMerge(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorMergeTableHandle;
+#finishMerge(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorMergeTableHandle;Ljava/util/Collection;Ljava/util/Collection;)V
@395
+#listFunctions(Lio/trino/spi/connector/ConnectorSession;Ljava/lang/String;)Ljava/util/Collection;
+#getFunctions(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/function/SchemaFunctionName;)Ljava/util/Collection;
+#getFunctionMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/function/FunctionId;)Lio/trino/spi/function/FunctionMetadata;
+#getAggregationFunctionMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/function/FunctionId;)Lio/trino/spi/function/AggregationFunctionMetadata;
+#getFunctionDependencies(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration;
-#getTableHandleForStatisticsCollection(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/util/Map;)Lio/trino/spi/connector/ConnectorTableHandle;[deprecated]
-#getStatisticsCollectionMetadata(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableMetadata;)Lio/trino/spi/statistics/TableStatisticsMetadata;[deprecated]
-#listAllRoleGrants(Lio/trino/spi/connector/ConnectorSession;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/OptionalLong;)Ljava/util/Set;
@396
+#applyJoin(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/JoinType;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;
*#applyJoin(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/JoinType;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lio/trino/spi/connector/JoinStatistics;)Ljava/util/Optional;[deprecated]
@402
+#setViewColumnComment(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Ljava/util/Optional;)V
@405
+#setColumnType(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;Lio/trino/spi/type/Type;)V
@406
*#getSchemaTableName(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/SchemaTableName;[deprecated]
-#getDeleteRowIdColumnHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;)Lio/trino/spi/connector/ColumnHandle;
-#getUpdateRowIdColumnHandle(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ColumnHandle;
-#beginDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorTableHandle;
-#finishDelete(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Collection;)V
-#beginUpdate(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/RetryMode;)Lio/trino/spi/connector/ConnectorTableHandle;
-#finishUpdate(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/Collection;)V
@409
+#dropField(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/connector/ColumnHandle;Ljava/util/List;)V

+###io/trino/spi/connector/NotPartitionedPartitionHandle
@351
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@391
-###io/trino/spi/connector/NotPartitionedPartitionHandle

+###io/trino/spi/connector/ConnectorPageSourceProvider
@351
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorPageSource;[deprecated]
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;[deprecated]
+#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/connector/DynamicFilter;)Lio/trino/spi/connector/ConnectorPageSource;
@358
-#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;)Lio/trino/spi/connector/ConnectorPageSource;[deprecated]
-#createPageSource(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorSplit;Lio/trino/spi/connector/ConnectorTableHandle;Ljava/util/List;Lio/trino/spi/predicate/TupleDomain;)Lio/trino/spi/connector/ConnectorPageSource;[deprecated]

+###io/trino/spi/connector/FixedPageSource
@351
+#<init>(Ljava/lang/Iterable;)V
+#close()V
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#isFinished()Z
+#getNextPage()Lio/trino/spi/Page;
+#getSystemMemoryUsage()J
@369
+#getMemoryUsage()J
-#getSystemMemoryUsage()J

+###io/trino/spi/connector/SampleType
@351
+#values()[Lio/trino/spi/connector/SampleType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/SampleType;

+###io/trino/spi/connector/ConnectorHandleResolver
@351
+#getTableHandleClass()Ljava/lang/Class;
+#getTableLayoutHandleClass()Ljava/lang/Class;
+#getColumnHandleClass()Ljava/lang/Class;
+#getSplitClass()Ljava/lang/Class;
+#getIndexHandleClass()Ljava/lang/Class;
+#getOutputTableHandleClass()Ljava/lang/Class;
+#getInsertTableHandleClass()Ljava/lang/Class;
+#getPartitioningHandleClass()Ljava/lang/Class;
+#getTransactionHandleClass()Ljava/lang/Class;
@364
+#getTableExecuteHandleClass()Ljava/lang/Class;
@369
-#getTableLayoutHandleClass()Ljava/lang/Class;
@370
+#getHandleClasses()Ljava/util/Set;
@383
-###io/trino/spi/connector/ConnectorHandleResolver

+###io/trino/spi/connector/BeginTableExecuteResult
@364
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getTableExecuteHandle()Ljava/lang/Object;
+#getSourceHandle()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/ConnectorSession
@351
+#getQueryId()Ljava/lang/String;
+#getSource()Ljava/util/Optional;
+#getUser()Ljava/lang/String;
+#getIdentity()Lio/trino/spi/security/ConnectorIdentity;
+#getTimeZoneKey()Lio/trino/spi/type/TimeZoneKey;
+#getLocale()Ljava/util/Locale;
+#getTraceToken()Ljava/util/Optional;
+#getStartTime()J[deprecated]
+#getStart()Ljava/time/Instant;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@364
+#isAutoCommitContext()Z
@365
-#isAutoCommitContext()Z

+###io/trino/spi/connector/ConnectorTableHandle
@351

+###io/trino/spi/connector/DiscretePredicates
@351
+#<init>(Ljava/util/List;Ljava/lang/Iterable;)V
+#getColumns()Ljava/util/List;
+#getPredicates()Ljava/lang/Iterable;

+###io/trino/spi/connector/AggregationApplicationResult
@351
+#<init>(Ljava/lang/Object;Ljava/util/List;Ljava/util/List;Ljava/util/Map;)V
+#getHandle()Ljava/lang/Object;
+#getProjections()Ljava/util/List;
+#getAssignments()Ljava/util/List;
+#getGroupingColumnMapping()Ljava/util/Map;
@358
+#<init>(Ljava/lang/Object;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Z)V
+#isPrecalculateStatistics()Z
-#<init>(Ljava/lang/Object;Ljava/util/List;Ljava/util/List;Ljava/util/Map;)V

+###io/trino/spi/connector/RecordPageSource
@351
+#<init>(Lio/trino/spi/connector/RecordSet;)V
+#<init>(Ljava/util/List;Lio/trino/spi/connector/RecordCursor;)V
+#getCursor()Lio/trino/spi/connector/RecordCursor;
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#getSystemMemoryUsage()J
+#close()V
+#isFinished()Z
+#getNextPage()Lio/trino/spi/Page;
@369
+#getMemoryUsage()J
-#getSystemMemoryUsage()J

+###io/trino/spi/connector/TableColumnsMetadata
@358
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/util/Optional;)V
+#forTable(Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;)Lio/trino/spi/connector/TableColumnsMetadata;
+#forRedirectedTable(Lio/trino/spi/connector/SchemaTableName;)Lio/trino/spi/connector/TableColumnsMetadata;
+#getTable()Lio/trino/spi/connector/SchemaTableName;
+#getColumns()Ljava/util/Optional;

+###io/trino/spi/connector/SystemTable$Distribution
@351
+#values()[Lio/trino/spi/connector/SystemTable$Distribution;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/SystemTable$Distribution;

+###io/trino/spi/connector/ConnectorTableLayoutHandle
@351
@369
-###io/trino/spi/connector/ConnectorTableLayoutHandle

+###io/trino/spi/connector/RecordCursor
@351
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#getType(I)Lio/trino/spi/type/Type;
+#advanceNextPosition()Z
+#getBoolean(I)Z
+#getLong(I)J
+#getDouble(I)D
+#getSlice(I)Lio/airlift/slice/Slice;
+#getObject(I)Ljava/lang/Object;
+#isNull(I)Z
+#getSystemMemoryUsage()J
+#close()V
@369
+#getMemoryUsage()J
-#getSystemMemoryUsage()J

+###io/trino/spi/connector/ConnectorPageSinkProvider
@351
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;
@364
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)Lio/trino/spi/connector/ConnectorPageSink;
@393
+#createMergeSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorMergeTableHandle;)Lio/trino/spi/connector/ConnectorMergeSink;
@401
*#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;[deprecated]
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
*#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;[deprecated]
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
*#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)Lio/trino/spi/connector/ConnectorPageSink;[deprecated]
+#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableExecuteHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorPageSink;
*#createMergeSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorMergeTableHandle;)Lio/trino/spi/connector/ConnectorMergeSink;[deprecated]
+#createMergeSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorMergeTableHandle;Lio/trino/spi/connector/ConnectorPageSinkId;)Lio/trino/spi/connector/ConnectorMergeSink;
@403
-#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorOutputTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;[deprecated]
-#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorInsertTableHandle;)Lio/trino/spi/connector/ConnectorPageSink;[deprecated]
-#createPageSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTableExecuteHandle;)Lio/trino/spi/connector/ConnectorPageSink;[deprecated]
-#createMergeSink(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorMergeTableHandle;)Lio/trino/spi/connector/ConnectorMergeSink;[deprecated]

+###io/trino/spi/connector/ColumnSchema
@355
+#getName()Ljava/lang/String;
+#getType()Lio/trino/spi/type/Type;
+#isHidden()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#builder()Lio/trino/spi/connector/ColumnSchema$Builder;
+#builder(Lio/trino/spi/connector/ColumnMetadata;)Lio/trino/spi/connector/ColumnSchema$Builder;

+###io/trino/spi/connector/JoinCondition$Operator
@352
+#values()[Lio/trino/spi/connector/JoinCondition$Operator;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/JoinCondition$Operator;
+#getValue()Ljava/lang/String;
@396
+#flip()Lio/trino/spi/connector/JoinCondition$Operator;

+###io/trino/spi/connector/ColumnMetadata$Builder
@351
+#setName(Ljava/lang/String;)Lio/trino/spi/connector/ColumnMetadata$Builder;
+#setType(Lio/trino/spi/type/Type;)Lio/trino/spi/connector/ColumnMetadata$Builder;
+#setNullable(Z)Lio/trino/spi/connector/ColumnMetadata$Builder;
+#setComment(Ljava/util/Optional;)Lio/trino/spi/connector/ColumnMetadata$Builder;
+#setExtraInfo(Ljava/util/Optional;)Lio/trino/spi/connector/ColumnMetadata$Builder;
+#setHidden(Z)Lio/trino/spi/connector/ColumnMetadata$Builder;
+#setProperties(Ljava/util/Map;)Lio/trino/spi/connector/ColumnMetadata$Builder;
+#build()Lio/trino/spi/connector/ColumnMetadata;

+###io/trino/spi/connector/ConnectorTableVersion
@365
+#<init>(Lio/trino/spi/connector/PointerType;Lio/trino/spi/type/Type;Ljava/lang/Object;)V
+#getPointerType()Lio/trino/spi/connector/PointerType;
+#getVersionType()Lio/trino/spi/type/Type;
+#getVersion()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/ConnectorSplitSource$ConnectorSplitBatch
@351
+#<init>(Ljava/util/List;Z)V
+#getSplits()Ljava/util/List;
+#isNoMoreSplits()Z

+###io/trino/spi/connector/ConnectorCapabilities
@351
+#values()[Lio/trino/spi/connector/ConnectorCapabilities;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/ConnectorCapabilities;

+###io/trino/spi/connector/Constraint
@351
+#alwaysTrue()Lio/trino/spi/connector/Constraint;
+#alwaysFalse()Lio/trino/spi/connector/Constraint;
+#<init>(Lio/trino/spi/predicate/TupleDomain;)V
+#<init>(Lio/trino/spi/predicate/TupleDomain;Ljava/util/function/Predicate;)V[deprecated]
+#<init>(Lio/trino/spi/predicate/TupleDomain;Ljava/util/function/Predicate;Ljava/util/Set;)V
+#<init>(Lio/trino/spi/predicate/TupleDomain;Ljava/util/Optional;)V[deprecated]
+#<init>(Lio/trino/spi/predicate/TupleDomain;Ljava/util/Optional;Ljava/util/Optional;)V
+#getSummary()Lio/trino/spi/predicate/TupleDomain;
+#predicate()Ljava/util/Optional;
+#getColumns()Ljava/util/Optional;[deprecated]
+#getPredicateColumns()Ljava/util/Optional;
@364
-#<init>(Lio/trino/spi/predicate/TupleDomain;Ljava/util/function/Predicate;)V[deprecated]
-#<init>(Lio/trino/spi/predicate/TupleDomain;Ljava/util/Optional;)V[deprecated]
@366
-#<init>(Lio/trino/spi/predicate/TupleDomain;Ljava/util/Optional;Ljava/util/Optional;)V
-#getColumns()Ljava/util/Optional;[deprecated]
@372
+#<init>(Lio/trino/spi/predicate/TupleDomain;Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;)V
+#<init>(Lio/trino/spi/predicate/TupleDomain;Lio/trino/spi/expression/ConnectorExpression;Ljava/util/Map;Ljava/util/function/Predicate;Ljava/util/Set;)V
+#getExpression()Lio/trino/spi/expression/ConnectorExpression;
+#getAssignments()Ljava/util/Map;
@373
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/TableNotFoundException
@351
+#<init>(Lio/trino/spi/connector/SchemaTableName;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/Throwable;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getTableName()Lio/trino/spi/connector/SchemaTableName;

+###io/trino/spi/connector/ConnectorMaterializedViewDefinition
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;)V
+#getOriginalSql()Ljava/lang/String;
+#getStorageTable()Ljava/lang/String;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getColumns()Ljava/util/List;
+#getComment()Ljava/util/Optional;
+#getOwner()Ljava/util/Optional;
+#getProperties()Ljava/util/Map;
+#toString()Ljava/lang/String;
@354
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;)V
*#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;)V[deprecated]
@356
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/lang/String;Ljava/util/Map;)V
+#getStorageTable()Ljava/util/Optional;
+#getOwner()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;)V[deprecated]
-#getStorageTable()Ljava/lang/String;
-#getOwner()Ljava/util/Optional;
@358
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@365
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;)V
+#getOwner()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;Ljava/lang/String;Ljava/util/Map;)V
-#getOwner()Ljava/lang/String;

+###io/trino/spi/connector/MaterializedViewNotFoundException
@351
+#<init>(Lio/trino/spi/connector/SchemaTableName;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/Throwable;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getMaterializedViewName()Lio/trino/spi/connector/SchemaTableName;

+###io/trino/spi/connector/ConnectorNodePartitioningProvider
@351
+#listPartitionHandles(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Ljava/util/List;
+#getBucketNodeMap(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Lio/trino/spi/connector/ConnectorBucketNodeMap;
+#getSplitBucketFunction(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Ljava/util/function/ToIntFunction;
+#getBucketFunction(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;Ljava/util/List;I)Lio/trino/spi/connector/BucketFunction;
@388
*#listPartitionHandles(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Ljava/util/List;[deprecated]
@391
-#listPartitionHandles(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Ljava/util/List;[deprecated]
@393
*#getBucketNodeMap(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Lio/trino/spi/connector/ConnectorBucketNodeMap;[deprecated]
+#getBucketNodeMapping(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Ljava/util/Optional;
@405
-#getBucketNodeMap(Lio/trino/spi/connector/ConnectorTransactionHandle;Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorPartitioningHandle;)Lio/trino/spi/connector/ConnectorBucketNodeMap;[deprecated]

+###io/trino/spi/connector/AggregateFunction
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/util/List;Ljava/util/List;ZLjava/util/Optional;)V
+#getFunctionName()Ljava/lang/String;
+#getInputs()Ljava/util/List;
+#getOutputType()Lio/trino/spi/type/Type;
+#getSortItems()Ljava/util/List;
+#isDistinct()Z
+#getFilter()Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@372
+#getArguments()Ljava/util/List;
-#getInputs()Ljava/util/List;

+###io/trino/spi/connector/ConnectorBucketNodeMap
@351
+#createBucketNodeMap(I)Lio/trino/spi/connector/ConnectorBucketNodeMap;
+#createBucketNodeMap(Ljava/util/List;)Lio/trino/spi/connector/ConnectorBucketNodeMap;
+#getBucketCount()I
+#hasFixedMapping()Z
+#getFixedMapping()Ljava/util/List;

+###io/trino/spi/connector/ColumnSchema$Builder
@355
+#setName(Ljava/lang/String;)Lio/trino/spi/connector/ColumnSchema$Builder;
+#setType(Lio/trino/spi/type/Type;)Lio/trino/spi/connector/ColumnSchema$Builder;
+#setHidden(Z)Lio/trino/spi/connector/ColumnSchema$Builder;
+#build()Lio/trino/spi/connector/ColumnSchema;

+###io/trino/spi/connector/FixedSplitSource
@351
+#<init>(Ljava/lang/Iterable;)V
+#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;I)Ljava/util/concurrent/CompletableFuture;
+#isFinished()Z
+#close()V
@364
+#<init>(Ljava/lang/Iterable;Ljava/util/List;)V
+#getTableExecuteSplitsInfo()Ljava/util/Optional;
@388
+#getNextBatch(I)Ljava/util/concurrent/CompletableFuture;
-#getNextBatch(Lio/trino/spi/connector/ConnectorPartitionHandle;I)Ljava/util/concurrent/CompletableFuture;

+###io/trino/spi/connector/ConnectorTableExecuteHandle
@364

+###io/trino/spi/connector/SortItem
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/SortOrder;)V
+#getName()Ljava/lang/String;
+#getSortOrder()Lio/trino/spi/connector/SortOrder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@353
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/CatalogSchemaName
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#getSchemaName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/ConnectorTableMetadata
@351
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;Ljava/util/Map;Ljava/util/Optional;)V
+#getTable()Lio/trino/spi/connector/SchemaTableName;
+#getColumns()Ljava/util/List;
+#getProperties()Ljava/util/Map;
+#getComment()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@355
+#getTableSchema()Lio/trino/spi/connector/ConnectorTableSchema;
@406
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;Ljava/util/Map;Ljava/util/Optional;Ljava/util/List;)V
+#getCheckConstraints()Ljava/util/List;

+###io/trino/spi/connector/ConnectorResolvedIndex
@351
+#<init>(Lio/trino/spi/connector/ConnectorIndexHandle;Lio/trino/spi/predicate/TupleDomain;)V
+#getIndexHandle()Lio/trino/spi/connector/ConnectorIndexHandle;
+#getUnresolvedTupleDomain()Lio/trino/spi/predicate/TupleDomain;

+###io/trino/spi/connector/ConnectorTableProperties
@351
+#<init>()V
+#<init>(Lio/trino/spi/connector/ConnectorTableLayout;)V[deprecated]
+#<init>(Lio/trino/spi/predicate/TupleDomain;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;)V
+#getPredicate()Lio/trino/spi/predicate/TupleDomain;
+#getTablePartitioning()Ljava/util/Optional;
+#getStreamPartitioningColumns()Ljava/util/Optional;
+#getDiscretePredicates()Ljava/util/Optional;
+#getLocalProperties()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@369
-#<init>(Lio/trino/spi/connector/ConnectorTableLayout;)V[deprecated]

+###io/trino/spi/connector/SchemaTablePrefix
@351
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getSchema()Ljava/util/Optional;
+#getTable()Ljava/util/Optional;
+#matches(Lio/trino/spi/connector/SchemaTableName;)Z
+#isEmpty()Z
+#toSchemaTableName()Lio/trino/spi/connector/SchemaTableName;
+#toOptionalSchemaTableName()Ljava/util/Optional;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/CatalogSchemaRoutineName
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/SchemaRoutineName;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#getSchemaRoutineName()Lio/trino/spi/connector/SchemaRoutineName;
+#getSchemaName()Ljava/lang/String;
+#getRoutineName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/connector/ConnectorSplit
@351
+#isRemotelyAccessible()Z
+#getAddresses()Ljava/util/List;
+#getInfo()Ljava/lang/Object;
@364
+#getSplitWeight()Lio/trino/spi/SplitWeight;
@368
+#getRetainedSizeInBytes()J

+###io/trino/spi/connector/UpdatablePageSource
@351
+#deleteRows(Lio/trino/spi/block/Block;)V
+#finish()Ljava/util/concurrent/CompletableFuture;
+#abort()V
@352
+#updateRows(Lio/trino/spi/Page;Ljava/util/List;)V
@406
-###io/trino/spi/connector/UpdatablePageSource

+###io/trino/spi/connector/TableProcedureMetadata
@364
+#<init>(Ljava/lang/String;Lio/trino/spi/connector/TableProcedureExecutionMode;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getExecutionMode()Lio/trino/spi/connector/TableProcedureExecutionMode;
+#getProperties()Ljava/util/List;

+###io/trino/spi/connector/SchemaNotFoundException
@351
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getSchemaName()Ljava/lang/String;

+###io/trino/spi/connector/RecordSet
@351
+#getColumnTypes()Ljava/util/List;
+#cursor()Lio/trino/spi/connector/RecordCursor;

+###io/trino/spi/connector/NotFoundException
@351

+###io/trino/spi/connector/ConnectorTableSchema
@355
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;)V
+#getTable()Lio/trino/spi/connector/SchemaTableName;
+#getColumns()Ljava/util/List;
+#toString()Ljava/lang/String;
@406
+#<init>(Lio/trino/spi/connector/SchemaTableName;Ljava/util/List;Ljava/util/List;)V
+#getCheckConstraints()Ljava/util/List;

+###io/trino/spi/connector/ConnectorPartitionHandle
@351
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@391
-###io/trino/spi/connector/ConnectorPartitionHandle

+###io/trino/spi/QueryId
@351
+#valueOf(Ljava/lang/String;)Lio/trino/spi/QueryId;
+#<init>(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#validateId(Ljava/lang/String;)Ljava/lang/String;
+#parseDottedId(Ljava/lang/String;ILjava/lang/String;)Ljava/util/List;

+###io/trino/spi/SplitWeight
@364
+#getRawValue()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#fromRawValue(J)Lio/trino/spi/SplitWeight;
+#fromProportion(D)Lio/trino/spi/SplitWeight;
+#standard()Lio/trino/spi/SplitWeight;
+#rawValueForStandardSplitCount(I)J
+#rawValueSum(Ljava/util/Collection;Ljava/util/function/Function;)J
@368
+#getRetainedSizeInBytes()J

+###io/trino/spi/TrinoException
@351
+#<init>(Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/Throwable;)V
+#<init>(Lio/trino/spi/ErrorCodeSupplier;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lio/trino/spi/ErrorCodeSupplier;Ljava/util/Optional;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getErrorCode()Lio/trino/spi/ErrorCode;
+#getLocation()Ljava/util/Optional;
+#getMessage()Ljava/lang/String;
+#getRawMessage()Ljava/lang/String;

+###io/trino/spi/expression/Constant
@351
+#<init>(Ljava/lang/Object;Lio/trino/spi/type/Type;)V
+#getValue()Ljava/lang/Object;
+#getChildren()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/spi/expression/FieldDereference
@351
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/expression/ConnectorExpression;I)V
+#getTarget()Lio/trino/spi/expression/ConnectorExpression;
+#getField()I
+#getChildren()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/spi/expression/Variable
@351
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;)V
+#getName()Ljava/lang/String;
+#getChildren()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/spi/expression/ConnectorExpression
@351
+#<init>(Lio/trino/spi/type/Type;)V
+#getType()Lio/trino/spi/type/Type;
+#getChildren()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/spi/VersionEmbedder
@351
+#embedVersion(Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#embedVersion(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#embedVersion(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor;

+###io/trino/spi/Node
@351
+#getHost()Ljava/lang/String;
+#getHostAndPort()Lio/trino/spi/HostAddress;
+#getHttpUri()Ljava/net/URI;[deprecated]
+#getNodeIdentifier()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#isCoordinator()Z

+###io/trino/spi/NodeManager
@351
+#getAllNodes()Ljava/util/Set;
+#getWorkerNodes()Ljava/util/Set;
+#getCurrentNode()Lio/trino/spi/Node;
+#getEnvironment()Ljava/lang/String;
+#getRequiredWorkerNodes()Ljava/util/Set;

+###io/trino/spi/Plugin
@351
+#getConnectorFactories()Ljava/lang/Iterable;
+#getBlockEncodings()Ljava/lang/Iterable;
+#getTypes()Ljava/lang/Iterable;
+#getParametricTypes()Ljava/lang/Iterable;
+#getFunctions()Ljava/util/Set;
+#getSystemAccessControlFactories()Ljava/lang/Iterable;
+#getGroupProviderFactories()Ljava/lang/Iterable;
+#getPasswordAuthenticatorFactories()Ljava/lang/Iterable;
+#getCertificateAuthenticatorFactories()Ljava/lang/Iterable;
+#getEventListenerFactories()Ljava/lang/Iterable;
+#getResourceGroupConfigurationManagerFactories()Ljava/lang/Iterable;
+#getSessionPropertyConfigurationManagerFactories()Ljava/lang/Iterable;
@363
+#getHeaderAuthenticatorFactories()Ljava/lang/Iterable;
@369
+#getExchangeManagerFactories()Ljava/lang/Iterable;

+###io/trino/spi/Mergeable
@360
+#mergeWith(Ljava/lang/Object;)Ljava/lang/Object;

+###io/trino/spi/TrinoTransportException
@351
+#<init>(Lio/trino/spi/ErrorCodeSupplier;Lio/trino/spi/HostAddress;Ljava/lang/String;)V
+#<init>(Lio/trino/spi/ErrorCodeSupplier;Lio/trino/spi/HostAddress;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getRemoteHost()Lio/trino/spi/HostAddress;

+###io/trino/spi/HostAddress
@351
+#getHostText()Ljava/lang/String;
+#hasPort()Z
+#getPort()I
+#getPortOrDefault(I)I
+#fromParts(Ljava/lang/String;I)Lio/trino/spi/HostAddress;
+#fromString(Ljava/lang/String;)Lio/trino/spi/HostAddress;
+#fromUri(Ljava/net/URI;)Lio/trino/spi/HostAddress;
+#withDefaultPort(I)Lio/trino/spi/HostAddress;
+#toInetAddress()Ljava/net/InetAddress;
+#getAllInetAddresses()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@368
+#getRetainedSizeInBytes()J

+###io/trino/spi/Page
@351
+#<init>([Lio/trino/spi/block/Block;)V
+#<init>(I)V
+#<init>(I[Lio/trino/spi/block/Block;)V
+#getChannelCount()I
+#getPositionCount()I
+#getSizeInBytes()J
+#getLogicalSizeInBytes()J
+#getRetainedSizeInBytes()J
+#getBlock(I)Lio/trino/spi/block/Block;
+#getSingleValuePage(I)Lio/trino/spi/Page;
+#getRegion(II)Lio/trino/spi/Page;
+#appendColumn(Lio/trino/spi/block/Block;)Lio/trino/spi/Page;
+#compact()V
+#getLoadedPage()Lio/trino/spi/Page;
+#toString()Ljava/lang/String;
+#getPositions([III)Lio/trino/spi/Page;
+#copyPositions([III)Lio/trino/spi/Page;
+#getColumns(I)Lio/trino/spi/Page;
+#getColumns([I)Lio/trino/spi/Page;
+#prependColumn(Lio/trino/spi/block/Block;)Lio/trino/spi/Page;
@360
+#getLoadedPage(I)Lio/trino/spi/Page;
+#getLoadedPage([I)Lio/trino/spi/Page;
@365
+#wrapBlocksWithoutCopy(I[Lio/trino/spi/block/Block;)Lio/trino/spi/Page;
@366
-#wrapBlocksWithoutCopy(I[Lio/trino/spi/block/Block;)Lio/trino/spi/Page;
@370
+#getLoadedPage([I[I)Lio/trino/spi/Page;
@406
+#getInstanceSizeInBytes(I)J

+###io/trino/spi/PageSorter
@351
+#sort(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)[J[deprecated]
+#decodePageIndex(J)I
+#decodePositionIndex(J)I

+###io/trino/spi/block/Int128ArrayBlock
@351
+#<init>(ILjava/util/Optional;[J)V
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getLong(II)J
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@365
+#getPositionsSizeInBytes([ZI)J
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/Int128ArrayBlockBuilder
@351
+#<init>(Lio/trino/spi/block/BlockBuilderStatus;I)V
+#writeLong(J)Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getLong(II)J
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/IntArrayBlockBuilder
@351
+#<init>(Lio/trino/spi/block/BlockBuilderStatus;I)V
+#writeInt(I)Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getInt(II)I
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/ByteArrayBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/MethodHandleUtil
@351
+#compose(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;
+#compose(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;
+#methodHandle(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
+#nativeValueWriter(Lio/trino/spi/type/Type;)Ljava/lang/invoke/MethodHandle;
@393
*#compose(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;[deprecated]
*#compose(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;[deprecated]
*#methodHandle(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;[deprecated]
*#nativeValueWriter(Lio/trino/spi/type/Type;)Ljava/lang/invoke/MethodHandle;[deprecated]
@407
-###io/trino/spi/block/MethodHandleUtil

+###io/trino/spi/block/ShortArrayBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/RowBlock
@351
+#fromFieldBlocks(ILjava/util/Optional;[Lio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#toString()Ljava/lang/String;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
@363
+#mayHaveNull()Z
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/AbstractMapBlock
@351
+#<init>(Lio/trino/spi/type/MapType;)V
+#getChildren()Ljava/util/List;
+#getEncodingName()Ljava/lang/String;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getEstimatedDataSizeForStats(I)J
+#isNull(I)Z
+#isHashTablesPresent()Z
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J

+###io/trino/spi/block/ArrayBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/RowBlockBuilder
@351
+#<init>(Ljava/util/List;Lio/trino/spi/block/BlockBuilderStatus;I)V
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#beginBlockEntry()Lio/trino/spi/block/SingleRowBlockWriter;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#toString()Ljava/lang/String;
+#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
+#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#beginBlockEntry()Lio/trino/spi/block/BlockBuilder;
@363
+#mayHaveNull()Z
@370
-#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
-#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@379
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/MapBlockBuilder
@351
+#<init>(Lio/trino/spi/type/MapType;Lio/trino/spi/block/BlockBuilderStatus;I)V
+#strict()Lio/trino/spi/block/MapBlockBuilder;
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#beginBlockEntry()Lio/trino/spi/block/SingleMapBlockWriter;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#closeEntryStrict()V[deprecated]
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#toString()Ljava/lang/String;
+#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
+#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#beginBlockEntry()Lio/trino/spi/block/BlockBuilder;
@370
-#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
-#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@393
+#mayHaveNull()Z
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/LongArrayBlock
@351
+#<init>(ILjava/util/Optional;[J)V
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getLong(II)J
+#getInt(II)I[deprecated]
+#getShort(II)S[deprecated]
+#getByte(II)B[deprecated]
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@365
+#getPositionsSizeInBytes([ZI)J
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/DictionaryBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;
@362
+#replacementBlockForWrite(Lio/trino/spi/block/Block;)Ljava/util/Optional;

+###io/trino/spi/block/LongArrayBlockBuilder
@351
+#<init>(Lio/trino/spi/block/BlockBuilderStatus;I)V
+#writeLong(J)Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getLong(II)J
+#getInt(II)I[deprecated]
+#getShort(II)S[deprecated]
+#getByte(II)B[deprecated]
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/SingleMapBlock
@351
+#getMapType()Lio/trino/spi/type/Type;
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getEncodingName()Ljava/lang/String;
+#getOffset()I
+#toString()Ljava/lang/String;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
+#tryGetHashTable()Ljava/util/Optional;
+#seekKey(Ljava/lang/Object;)I
+#seekKey(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Lio/trino/spi/block/Block;I)I
+#seekKeyExact(J)I
+#seekKeyExact(Z)I
+#seekKeyExact(D)I
+#seekKeyExact(Ljava/lang/Object;)I
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/Block
@351
+#getSliceLength(I)I
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#equals(IILio/trino/spi/block/Block;III)Z
+#hash(III)J
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getPositionCount()I
+#getSizeInBytes()J
+#getLogicalSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getEncodingName()Ljava/lang/String;
+#getPositions([III)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#mayHaveNull()Z
+#isNull(I)Z
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
+#getChildren()Ljava/util/List;
@365
+#getPositionsSizeInBytes([ZI)J
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/DictionaryBlock
@351
+#<init>(Lio/trino/spi/block/Block;[I)V
+#<init>(ILio/trino/spi/block/Block;[I)V
+#<init>(ILio/trino/spi/block/Block;[ILio/trino/spi/block/DictionaryId;)V
+#<init>(ILio/trino/spi/block/Block;[IZ)V
+#<init>(ILio/trino/spi/block/Block;[IZLio/trino/spi/block/DictionaryId;)V
+#<init>(IILio/trino/spi/block/Block;[IZLio/trino/spi/block/DictionaryId;)V
+#getSliceLength(I)I
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#equals(IILio/trino/spi/block/Block;III)Z
+#hash(III)J
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getPositionCount()I
+#getSizeInBytes()J
+#getLogicalSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getEncodingName()Ljava/lang/String;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#isNull(I)Z
+#getPositions([III)Lio/trino/spi/block/Block;
+#toString()Ljava/lang/String;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
+#getChildren()Ljava/util/List;
+#getDictionary()Lio/trino/spi/block/Block;
+#getId(I)I
+#getDictionarySourceId()Lio/trino/spi/block/DictionaryId;
+#isCompact()Z
+#compact()Lio/trino/spi/block/DictionaryBlock;
@360
+#mayHaveNull()Z
@362
+#<init>(IILio/trino/spi/block/Block;[IZZLio/trino/spi/block/DictionaryId;)V
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;
@397
+#create(ILio/trino/spi/block/Block;[I)Lio/trino/spi/block/Block;
+#createProjectedDictionaryBlock(ILio/trino/spi/block/Block;[ILio/trino/spi/block/DictionaryId;)Lio/trino/spi/block/Block;
+#compactRelatedBlocks(Ljava/util/List;)Ljava/util/List;
-#<init>(Lio/trino/spi/block/Block;[I)V
-#<init>(ILio/trino/spi/block/Block;[I)V
-#<init>(ILio/trino/spi/block/Block;[ILio/trino/spi/block/DictionaryId;)V
-#<init>(ILio/trino/spi/block/Block;[IZ)V
-#<init>(ILio/trino/spi/block/Block;[IZLio/trino/spi/block/DictionaryId;)V
-#<init>(IILio/trino/spi/block/Block;[IZLio/trino/spi/block/DictionaryId;)V
-#<init>(IILio/trino/spi/block/Block;[IZZLio/trino/spi/block/DictionaryId;)V

+###io/trino/spi/block/SingleArrayBlockWriter
@351
+#<init>(Lio/trino/spi/block/BlockBuilder;I)V
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#writeByte(I)Lio/trino/spi/block/BlockBuilder;
+#writeShort(I)Lio/trino/spi/block/BlockBuilder;
+#writeInt(I)Lio/trino/spi/block/BlockBuilder;
+#writeLong(J)Lio/trino/spi/block/BlockBuilder;
+#writeBytes(Lio/airlift/slice/Slice;II)Lio/trino/spi/block/BlockBuilder;
+#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
+#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
+#beginBlockEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#getPositionCount()I
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#toString()Ljava/lang/String;
@370
-#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
-#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/Int96ArrayBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/AbstractSingleRowBlock
@351
+#getChildren()Ljava/util/List;
+#isNull(I)Z
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#getSliceLength(I)I
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#equals(IILio/trino/spi/block/Block;III)Z
+#hash(III)J
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getEstimatedDataSizeForStats(I)J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
@370
+#<init>()V
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J

+###io/trino/spi/block/DictionaryId
@351
+#randomDictionaryId()Lio/trino/spi/block/DictionaryId;
+#<init>(JJJ)V
+#getMostSignificantBits()J
+#getLeastSignificantBits()J
+#getSequenceId()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/block/MapHashTables
@351
+#getRetainedSizeInBytes()J

+###io/trino/spi/block/VariableWidthBlock
@351
+#<init>(ILio/airlift/slice/Slice;[ILjava/util/Optional;)V
+#getSliceLength(I)I
+#mayHaveNull()Z
+#getPositionCount()I
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#toString()Ljava/lang/String;
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;
@396
+#getRawSlice()Lio/airlift/slice/Slice;
+#getRawSliceOffset(I)I

+###io/trino/spi/block/RunLengthBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/RunLengthEncodedBlock;
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;
@397
-#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/RunLengthEncodedBlock;

+###io/trino/spi/block/IntArrayBlock
@351
+#<init>(ILjava/util/Optional;[I)V
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getInt(II)I
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@365
+#getPositionsSizeInBytes([ZI)J
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/RowBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/IntArrayBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/VariableWidthBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/AbstractArrayBlock
@351
+#<init>()V
+#getChildren()Ljava/util/List;
+#getEncodingName()Ljava/lang/String;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getEstimatedDataSizeForStats(I)J
+#isNull(I)Z
+#apply(Lio/trino/spi/block/AbstractArrayBlock$ArrayBlockFunction;I)Ljava/lang/Object;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J

+###io/trino/spi/block/ByteArrayBlock
@351
+#<init>(ILjava/util/Optional;[B)V
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getByte(II)B
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@365
+#getPositionsSizeInBytes([ZI)J
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/VariableWidthBlockBuilder
@351
+#<init>(Lio/trino/spi/block/BlockBuilderStatus;II)V
+#getSliceLength(I)I
+#getPositionCount()I
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#copyPositions([III)Lio/trino/spi/block/Block;
+#writeByte(I)Lio/trino/spi/block/BlockBuilder;
+#writeShort(I)Lio/trino/spi/block/BlockBuilder;
+#writeInt(I)Lio/trino/spi/block/BlockBuilder;
+#writeLong(J)Lio/trino/spi/block/BlockBuilder;
+#writeBytes(Lio/airlift/slice/Slice;II)Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#mayHaveNull()Z
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#toString()Ljava/lang/String;
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/BlockEncodingSerde
@351
+#readBlock(Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;
+#writeBlock(Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readType(Lio/airlift/slice/SliceInput;)Lio/trino/spi/type/Type;
+#writeType(Lio/airlift/slice/SliceOutput;Lio/trino/spi/type/Type;)V

+###io/trino/spi/block/ByteArrayBlockBuilder
@351
+#<init>(Lio/trino/spi/block/BlockBuilderStatus;I)V
+#writeByte(I)Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getByte(II)B
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/SingleMapBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/ColumnarArray
@351
+#toColumnarArray(Lio/trino/spi/block/Block;)Lio/trino/spi/block/ColumnarArray;
+#getPositionCount()I
+#isNull(I)Z
+#getLength(I)I
+#getOffset(I)I
+#getElementsBlock()Lio/trino/spi/block/Block;
@396
+#mayHaveNull()Z

+###io/trino/spi/block/Int128ArrayBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/DuplicateMapKeyException
@351
+#<init>(Lio/trino/spi/block/Block;I)V
+#withDetailedMessage(Lio/trino/spi/type/Type;Lio/trino/spi/connector/ConnectorSession;)Lio/trino/spi/block/DuplicateMapKeyException;

+###io/trino/spi/block/RunLengthEncodedBlock
@351
+#create(Lio/trino/spi/type/Type;Ljava/lang/Object;I)Lio/trino/spi/block/Block;
+#<init>(Lio/trino/spi/block/Block;I)V
+#getChildren()Ljava/util/List;
+#getValue()Lio/trino/spi/block/Block;
+#getPositionCount()I
+#getSizeInBytes()J
+#getLogicalSizeInBytes()J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getEncodingName()Ljava/lang/String;
+#getPositions([III)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getSliceLength(I)I
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#equals(IILio/trino/spi/block/Block;III)Z
+#hash(III)J
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#isNull(I)Z
+#toString()Ljava/lang/String;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
@360
+#mayHaveNull()Z
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;
@397
+#create(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/Block;
-#<init>(Lio/trino/spi/block/Block;I)V

+###io/trino/spi/block/MapBlock
@351
+#fromKeyValueBlock(Ljava/util/Optional;[ILio/trino/spi/block/Block;Lio/trino/spi/block/Block;Lio/trino/spi/type/MapType;)Lio/trino/spi/block/MapBlock;
+#createMapBlockInternal(Lio/trino/spi/type/MapType;IILjava/util/Optional;[ILio/trino/spi/block/Block;Lio/trino/spi/block/Block;Lio/trino/spi/block/MapHashTables;)Lio/trino/spi/block/MapBlock;
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#toString()Ljava/lang/String;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;
@393
+#mayHaveNull()Z

+###io/trino/spi/block/AbstractRowBlock
@351
+#getChildren()Ljava/util/List;
+#getEncodingName()Ljava/lang/String;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getEstimatedDataSizeForStats(I)J
+#isNull(I)Z
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@389
+#getFieldBlockOffset(I)I

+###io/trino/spi/block/LongArrayBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/ColumnarMap
@351
+#toColumnarMap(Lio/trino/spi/block/Block;)Lio/trino/spi/block/ColumnarMap;
+#getPositionCount()I
+#isNull(I)Z
+#getEntryCount(I)I
+#getOffset(I)I
+#getKeysBlock()Lio/trino/spi/block/Block;
+#getValuesBlock()Lio/trino/spi/block/Block;
@396
+#mayHaveNull()Z

+###io/trino/spi/block/BlockBuilder
@351
+#writeByte(I)Lio/trino/spi/block/BlockBuilder;
+#writeShort(I)Lio/trino/spi/block/BlockBuilder;
+#writeInt(I)Lio/trino/spi/block/BlockBuilder;
+#writeLong(J)Lio/trino/spi/block/BlockBuilder;
+#writeBytes(Lio/airlift/slice/Slice;II)Lio/trino/spi/block/BlockBuilder;
+#beginBlockEntry()Lio/trino/spi/block/BlockBuilder;
+#getPositions([III)Lio/trino/spi/block/Block;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
+#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
@370
-#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
-#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/ColumnarRow
@351
+#toColumnarRow(Lio/trino/spi/block/Block;)Lio/trino/spi/block/ColumnarRow;
+#getPositionCount()I
+#isNull(I)Z
+#getFieldCount()I
+#getField(I)Lio/trino/spi/block/Block;
@365
+#mayHaveNull()Z
@390
+#getNullCheckBlock()Lio/trino/spi/block/Block;

+###io/trino/spi/block/BlockBuilderStatus
@351
+#getMaxPageSizeInBytes()I
+#addBytes(I)V
+#toString()Ljava/lang/String;

+###io/trino/spi/block/LazyBlockLoader
@351
+#load()Lio/trino/spi/block/Block;

+###io/trino/spi/block/AbstractArrayBlock$ArrayBlockFunction
@351
+#apply(Lio/trino/spi/block/Block;II)Ljava/lang/Object;

+###io/trino/spi/block/SingleRowBlock
@351
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getEncodingName()Ljava/lang/String;
+#getRowIndex()I
+#toString()Ljava/lang/String;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/Int96ArrayBlock
@351
+#<init>(ILjava/util/Optional;[J[I)V
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getLong(II)J
+#getInt(II)I
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@365
+#getPositionsSizeInBytes([ZI)J
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/ShortArrayBlockBuilder
@351
+#<init>(Lio/trino/spi/block/BlockBuilderStatus;I)V
+#writeShort(I)Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getShort(II)S
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/AbstractVariableWidthBlock
@351
+#<init>()V
+#getEncodingName()Ljava/lang/String;
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#equals(IILio/trino/spi/block/Block;III)Z
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#hash(III)J
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getEstimatedDataSizeForStats(I)J
+#isNull(I)Z
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V

+###io/trino/spi/block/ArrayBlockBuilder
@351
+#<init>(Lio/trino/spi/block/BlockBuilder;Lio/trino/spi/block/BlockBuilderStatus;I)V
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/block/BlockBuilderStatus;II)V
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/block/BlockBuilderStatus;I)V
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
+#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
+#beginBlockEntry()Lio/trino/spi/block/SingleArrayBlockWriter;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/ArrayBlock;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#toString()Ljava/lang/String;
+#build()Lio/trino/spi/block/Block;
+#beginBlockEntry()Lio/trino/spi/block/BlockBuilder;
@363
+#mayHaveNull()Z
@370
-#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
-#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
@396
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
-#build()Lio/trino/spi/block/ArrayBlock;

+###io/trino/spi/block/AbstractSingleArrayBlock
@351
+#getChildren()Ljava/util/List;
+#getSliceLength(I)I
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#equals(IILio/trino/spi/block/Block;III)Z
+#hash(III)J
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getEstimatedDataSizeForStats(I)J
+#isNull(I)Z
+#getEncodingName()Ljava/lang/String;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#copyRegion(II)Lio/trino/spi/block/Block;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J

+###io/trino/spi/block/ArrayBlock
@351
+#fromElementBlock(ILjava/util/Optional;[ILio/trino/spi/block/Block;)Lio/trino/spi/block/Block;
+#getPositionCount()I
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#toString()Ljava/lang/String;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
@363
+#mayHaveNull()Z
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/SingleMapBlockWriter
@351
+#strict()Lio/trino/spi/block/SingleMapBlockWriter;
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#writeByte(I)Lio/trino/spi/block/BlockBuilder;
+#writeShort(I)Lio/trino/spi/block/BlockBuilder;
+#writeInt(I)Lio/trino/spi/block/BlockBuilder;
+#writeLong(J)Lio/trino/spi/block/BlockBuilder;
+#writeBytes(Lio/airlift/slice/Slice;II)Lio/trino/spi/block/BlockBuilder;
+#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
+#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
+#beginBlockEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#getPositionCount()I
+#getEncodingName()Ljava/lang/String;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#toString()Ljava/lang/String;
@370
-#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
-#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/SingleRowBlockWriter
@351
+#getFieldBlockBuilder(I)Lio/trino/spi/block/BlockBuilder;
+#getSizeInBytes()J
+#getRetainedSizeInBytes()J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#writeByte(I)Lio/trino/spi/block/BlockBuilder;
+#writeShort(I)Lio/trino/spi/block/BlockBuilder;
+#writeInt(I)Lio/trino/spi/block/BlockBuilder;
+#writeLong(J)Lio/trino/spi/block/BlockBuilder;
+#writeBytes(Lio/airlift/slice/Slice;II)Lio/trino/spi/block/BlockBuilder;
+#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
+#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
+#beginBlockEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#getPositionCount()I
+#getEncodingName()Ljava/lang/String;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#toString()Ljava/lang/String;
@370
-#appendStructure(Lio/trino/spi/block/Block;)Lio/trino/spi/block/BlockBuilder;
-#appendStructureInternal(Lio/trino/spi/block/Block;I)Lio/trino/spi/block/BlockBuilder;
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/AbstractSingleMapBlock
@351
+#<init>()V
+#getChildren()Ljava/util/List;
+#isNull(I)Z
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#getSliceLength(I)I
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#equals(IILio/trino/spi/block/Block;III)Z
+#hash(III)J
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getEstimatedDataSizeForStats(I)J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J

+###io/trino/spi/block/BlockEncoding
@351
+#getName()Ljava/lang/String;
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#replacementBlockForWrite(Lio/trino/spi/block/Block;)Ljava/util/Optional;

+###io/trino/spi/block/MapBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/LazyBlock
@351
+#<init>(ILio/trino/spi/block/LazyBlockLoader;)V
+#getPositionCount()I
+#getSliceLength(I)I
+#getByte(II)B
+#getShort(II)S
+#getInt(II)I
+#getLong(II)J
+#getSlice(III)Lio/airlift/slice/Slice;
+#getObject(ILjava/lang/Class;)Ljava/lang/Object;
+#bytesEqual(IILio/airlift/slice/Slice;II)Z
+#bytesCompare(IIILio/airlift/slice/Slice;II)I
+#writeBytesTo(IIILio/trino/spi/block/BlockBuilder;)V
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#equals(IILio/trino/spi/block/Block;III)Z
+#hash(III)J
+#compareTo(IIILio/trino/spi/block/Block;III)I
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getEncodingName()Ljava/lang/String;
+#getPositions([III)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#isNull(I)Z
+#getChildren()Ljava/util/List;
+#getBlock()Lio/trino/spi/block/Block;
+#isLoaded()Z
+#getLoadedBlock()Lio/trino/spi/block/Block;
+#listenForLoads(Lio/trino/spi/block/Block;Ljava/util/function/Consumer;)V
@360
+#mayHaveNull()Z
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/ShortArrayBlock
@351
+#<init>(ILjava/util/Optional;[S)V
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getShort(II)S
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@365
+#getPositionsSizeInBytes([ZI)J
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@390
+#copyWithAppendedNull()Lio/trino/spi/block/Block;

+###io/trino/spi/block/Int96ArrayBlockBuilder
@351
+#<init>(Lio/trino/spi/block/BlockBuilderStatus;I)V
+#writeLong(J)Lio/trino/spi/block/BlockBuilder;
+#writeInt(I)Lio/trino/spi/block/BlockBuilder;
+#closeEntry()Lio/trino/spi/block/BlockBuilder;
+#appendNull()Lio/trino/spi/block/BlockBuilder;
+#build()Lio/trino/spi/block/Block;
+#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
+#getSizeInBytes()J
+#getRegionSizeInBytes(II)J
+#getPositionsSizeInBytes([Z)J
+#getRetainedSizeInBytes()J
+#getEstimatedDataSizeForStats(I)J
+#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
+#getPositionCount()I
+#getLong(II)J
+#getInt(II)I
+#mayHaveNull()Z
+#isNull(I)Z
+#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
+#getSingleValueBlock(I)Lio/trino/spi/block/Block;
+#copyPositions([III)Lio/trino/spi/block/Block;
+#getRegion(II)Lio/trino/spi/block/Block;
+#copyRegion(II)Lio/trino/spi/block/Block;
+#getEncodingName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@370
-#writePositionTo(ILio/trino/spi/block/BlockBuilder;)V
@372
+#fixedSizeInBytesPerPosition()Ljava/util/OptionalInt;
+#getPositionsSizeInBytes([ZI)J
-#getPositionsSizeInBytes([Z)J
@374
+#retainedBytesForEachPart(Ljava/util/function/ObjLongConsumer;)V
-#retainedBytesForEachPart(Ljava/util/function/BiConsumer;)V
@395
+#newBlockBuilderLike(ILio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;
-#newBlockBuilderLike(Lio/trino/spi/block/BlockBuilderStatus;)Lio/trino/spi/block/BlockBuilder;

+###io/trino/spi/block/SingleRowBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;

+###io/trino/spi/block/PageBuilderStatus
@351
+#<init>()V
+#<init>(I)V
+#createBlockBuilderStatus()Lio/trino/spi/block/BlockBuilderStatus;
+#getMaxPageSizeInBytes()I
+#isEmpty()Z
+#isFull()Z
+#getSizeInBytes()J
+#toString()Ljava/lang/String;

+###io/trino/spi/block/LazyBlockEncoding
@351
+#<init>()V
+#getName()Ljava/lang/String;
+#readBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceInput;)Lio/trino/spi/block/Block;
+#writeBlock(Lio/trino/spi/block/BlockEncodingSerde;Lio/airlift/slice/SliceOutput;Lio/trino/spi/block/Block;)V
+#replacementBlockForWrite(Lio/trino/spi/block/Block;)Ljava/util/Optional;

+###io/trino/spi/eventlistener/QueryContext
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Lio/trino/spi/session/ResourceEstimates;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)V
+#getUser()Ljava/lang/String;
+#getPrincipal()Ljava/util/Optional;
+#getGroups()Ljava/util/Set;
+#getTraceToken()Ljava/util/Optional;
+#getRemoteClientAddress()Ljava/util/Optional;
+#getUserAgent()Ljava/util/Optional;
+#getClientInfo()Ljava/util/Optional;
+#getClientTags()Ljava/util/Set;
+#getClientCapabilities()Ljava/util/Set;
+#getSource()Ljava/util/Optional;
+#getCatalog()Ljava/util/Optional;
+#getSchema()Ljava/util/Optional;
+#getResourceGroupId()Ljava/util/Optional;
+#getSessionProperties()Ljava/util/Map;
+#getResourceEstimates()Lio/trino/spi/session/ResourceEstimates;
+#getServerAddress()Ljava/lang/String;
+#getServerVersion()Ljava/lang/String;
+#getEnvironment()Ljava/lang/String;
+#getQueryType()Ljava/util/Optional;
@387
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Lio/trino/spi/session/ResourceEstimates;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;)V
+#getRetryPolicy()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Set;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Map;Lio/trino/spi/session/ResourceEstimates;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)V

+###io/trino/spi/eventlistener/EventListenerFactory
@351
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;)Lio/trino/spi/eventlistener/EventListener;

+###io/trino/spi/eventlistener/StageCpuDistribution
@351
+#<init>(IIJJJJJJJJJD)V
+#getStageId()I
+#getTasks()I
+#getP25()J
+#getP50()J
+#getP75()J
+#getP90()J
+#getP95()J
+#getP99()J
+#getMin()J
+#getMax()J
+#getTotal()J
+#getAverage()D

+###io/trino/spi/eventlistener/SplitCompletedEvent
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/time/Instant;Ljava/util/Optional;Ljava/util/Optional;Lio/trino/spi/eventlistener/SplitStatistics;Ljava/util/Optional;Ljava/lang/String;)V
+#getQueryId()Ljava/lang/String;
+#getStageId()Ljava/lang/String;
+#getTaskId()Ljava/lang/String;
+#getCreateTime()Ljava/time/Instant;
+#getStartTime()Ljava/util/Optional;
+#getEndTime()Ljava/util/Optional;
+#getStatistics()Lio/trino/spi/eventlistener/SplitStatistics;
+#getFailureInfo()Ljava/util/Optional;
+#getPayload()Ljava/lang/String;
+#getCatalogName()Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###io/trino/spi/eventlistener/SplitFailureInfo
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getFailureType()Ljava/lang/String;
+#getFailureMessage()Ljava/lang/String;

+###io/trino/spi/eventlistener/QueryCompletedEvent
@351
+#<init>(Lio/trino/spi/eventlistener/QueryMetadata;Lio/trino/spi/eventlistener/QueryStatistics;Lio/trino/spi/eventlistener/QueryContext;Lio/trino/spi/eventlistener/QueryIOMetadata;Ljava/util/Optional;Ljava/util/List;Ljava/time/Instant;Ljava/time/Instant;Ljava/time/Instant;)V
+#getMetadata()Lio/trino/spi/eventlistener/QueryMetadata;
+#getStatistics()Lio/trino/spi/eventlistener/QueryStatistics;
+#getContext()Lio/trino/spi/eventlistener/QueryContext;
+#getIoMetadata()Lio/trino/spi/eventlistener/QueryIOMetadata;
+#getFailureInfo()Ljava/util/Optional;
+#getWarnings()Ljava/util/List;
+#getCreateTime()Ljava/time/Instant;
+#getExecutionStartTime()Ljava/time/Instant;
+#getEndTime()Ljava/time/Instant;
+#toString()Ljava/lang/String;

+###io/trino/spi/eventlistener/QueryIOMetadata
@351
+#<init>(Ljava/util/List;Ljava/util/Optional;)V
+#getInputs()Ljava/util/List;
+#getOutput()Ljava/util/Optional;

+###io/trino/spi/eventlistener/QueryInputMetadata
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Optional;Ljava/util/OptionalLong;Ljava/util/OptionalLong;)V
+#getCatalogName()Ljava/lang/String;
+#getSchema()Ljava/lang/String;
+#getTable()Ljava/lang/String;
+#getColumns()Ljava/util/List;
+#getConnectorInfo()Ljava/util/Optional;
+#getPhysicalInputBytes()Ljava/util/OptionalLong;
+#getPhysicalInputRows()Ljava/util/OptionalLong;
@384
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Optional;Lio/trino/spi/metrics/Metrics;Ljava/util/OptionalLong;Ljava/util/OptionalLong;)V
+#getConnectorMetrics()Lio/trino/spi/metrics/Metrics;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Optional;Ljava/util/OptionalLong;Ljava/util/OptionalLong;)V

+###io/trino/spi/eventlistener/QueryOutputMetadata
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
+#getCatalogName()Ljava/lang/String;
+#getSchema()Ljava/lang/String;
+#getTable()Ljava/lang/String;
+#getConnectorOutputMetadata()Ljava/util/Optional;
+#getJsonLengthLimitExceeded()Ljava/util/Optional;
@355
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getColumns()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V

+###io/trino/spi/eventlistener/SplitStatistics
@351
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;JJLjava/util/Optional;Ljava/util/Optional;)V
+#getCpuTime()Ljava/time/Duration;
+#getWallTime()Ljava/time/Duration;
+#getQueuedTime()Ljava/time/Duration;
+#getCompletedReadTime()Ljava/time/Duration;
+#getCompletedPositions()J
+#getCompletedDataSizeBytes()J
+#getTimeToFirstByte()Ljava/util/Optional;[deprecated]
+#getTimeToLastByte()Ljava/util/Optional;[deprecated]

+###io/trino/spi/eventlistener/OutputColumnMetadata
@355
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#getColumnName()Ljava/lang/String;
+#getSourceColumns()Ljava/util/Set;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@359
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
+#getColumnType()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/util/Set;)V

+###io/trino/spi/eventlistener/TableInfo
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#getCatalog()Ljava/lang/String;
+#getSchema()Ljava/lang/String;
+#getTable()Ljava/lang/String;
+#getAuthorization()Ljava/lang/String;
+#getFilters()Ljava/util/List;
+#getColumns()Ljava/util/List;
@355
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Z)V
+#isDirectlyReferenced()Z
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V

+###io/trino/spi/eventlistener/StageGcStatistics
@351
+#<init>(IIIIIII)V
+#getStageId()I
+#getTasks()I
+#getFullGcTasks()I
+#getMinFullGcSec()I
+#getMaxFullGcSec()I
+#getTotalFullGcSec()I
+#getAverageFullGcSec()I

+###io/trino/spi/eventlistener/RoutineInfo
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getRoutine()Ljava/lang/String;
+#getAuthorization()Ljava/lang/String;

+###io/trino/spi/eventlistener/EventListener
@351
+#queryCreated(Lio/trino/spi/eventlistener/QueryCreatedEvent;)V
+#queryCompleted(Lio/trino/spi/eventlistener/QueryCompletedEvent;)V
+#splitCompleted(Lio/trino/spi/eventlistener/SplitCompletedEvent;)V
@394
+#requiresAnonymizedPlan()Z

+###io/trino/spi/eventlistener/QueryFailureInfo
@351
+#<init>(Lio/trino/spi/ErrorCode;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/lang/String;)V
+#getErrorCode()Lio/trino/spi/ErrorCode;
+#getFailureType()Ljava/util/Optional;
+#getFailureMessage()Ljava/util/Optional;
+#getFailureTask()Ljava/util/Optional;
+#getFailureHost()Ljava/util/Optional;
+#getFailuresJson()Ljava/lang/String;

+###io/trino/spi/eventlistener/QueryCreatedEvent
@351
+#<init>(Ljava/time/Instant;Lio/trino/spi/eventlistener/QueryContext;Lio/trino/spi/eventlistener/QueryMetadata;)V
+#getCreateTime()Ljava/time/Instant;
+#getContext()Lio/trino/spi/eventlistener/QueryContext;
+#getMetadata()Lio/trino/spi/eventlistener/QueryMetadata;
+#toString()Ljava/lang/String;

+###io/trino/spi/eventlistener/QueryMetadata
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/net/URI;Ljava/util/Optional;Ljava/util/Optional;)V
+#getQueryId()Ljava/lang/String;
+#getTransactionId()Ljava/util/Optional;
+#getQuery()Ljava/lang/String;
+#getUpdateType()Ljava/util/Optional;
+#getPreparedQuery()Ljava/util/Optional;
+#getQueryState()Ljava/lang/String;
+#getTables()Ljava/util/List;
+#getRoutines()Ljava/util/List;
+#getUri()Ljava/net/URI;
+#getPlan()Ljava/util/Optional;
+#getPayload()Ljava/util/Optional;
@394
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/net/URI;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getJsonPlan()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/net/URI;Ljava/util/Optional;Ljava/util/Optional;)V

+###io/trino/spi/eventlistener/ColumnDetail
@355
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getCatalog()Ljava/lang/String;
+#getSchema()Ljava/lang/String;
+#getTable()Ljava/lang/String;
+#getColumnName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###io/trino/spi/eventlistener/QueryStatistics
@351
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getCpuTime()Ljava/time/Duration;
+#getWallTime()Ljava/time/Duration;
+#getQueuedTime()Ljava/time/Duration;
+#getScheduledTime()Ljava/util/Optional;
+#getResourceWaitingTime()Ljava/util/Optional;
+#getAnalysisTime()Ljava/util/Optional;
+#getPlanningTime()Ljava/util/Optional;
+#getExecutionTime()Ljava/util/Optional;
+#getPeakUserMemoryBytes()J
+#getPeakTotalNonRevocableMemoryBytes()J
+#getPeakTaskUserMemory()J
+#getPeakTaskTotalMemory()J
+#getPhysicalInputBytes()J
+#getPhysicalInputRows()J
+#getInternalNetworkBytes()J
+#getInternalNetworkRows()J
+#getTotalBytes()J
+#getTotalRows()J
+#getOutputBytes()J
+#getOutputRows()J
+#getWrittenBytes()J
+#getWrittenRows()J
+#getCumulativeMemory()D
+#getStageGcStatistics()Ljava/util/List;
+#getCompletedSplits()I
+#isComplete()Z
+#getCpuTimeDistribution()Ljava/util/List;
+#getOperatorSummaries()Ljava/util/List;
+#getPlanNodeStatsAndCosts()Ljava/util/Optional;
@360
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getCumulativeSystemMemory()D
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
@369
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
-#getPeakTotalNonRevocableMemoryBytes()J
-#getCumulativeSystemMemory()D
@373
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getFailedCpuTime()Ljava/time/Duration;
+#getFailedScheduledTime()Ljava/util/Optional;
+#getFailedCumulativeMemory()D
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
@375
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getProcessedInputBytes()J
+#getProcessedInputRows()J
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
@376
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getInputBlockedTime()Ljava/util/Optional;
+#getFailedInputBlockedTime()Ljava/util/Optional;
+#getOutputBlockedTime()Ljava/util/Optional;
+#getFailedOutputBlockedTime()Ljava/util/Optional;
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
@399
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getStageOutputBufferUtilizationDistribution()Ljava/util/List;
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
@400
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;)V
-#getStageOutputBufferUtilizationDistribution()Ljava/util/List;
@401
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getOutputBufferUtilization()Ljava/util/List;
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/Optional;)V
@408
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;)V
+#getPhysicalInputReadTime()Ljava/util/Optional;
-#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;JJJJJJJJJJJJJJJDDLjava/util/List;IZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;)V

+###io/trino/spi/eventlistener/ColumnInfo
@351
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getColumn()Ljava/lang/String;
+#getMasks()Ljava/util/List;
@406
+#<init>(Ljava/lang/String;Ljava/util/Optional;)V
+#getMask()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/util/List;)V
-#getMasks()Ljava/util/List;

+###io/trino/spi/session/SessionPropertyConfigurationManagerFactory
@351
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;Lio/trino/spi/resourcegroups/SessionPropertyConfigurationManagerContext;)Lio/trino/spi/session/SessionPropertyConfigurationManager;

+###io/trino/spi/session/SessionPropertyConfigurationManager
@351
+#getSystemSessionProperties(Lio/trino/spi/session/SessionConfigurationContext;)Ljava/util/Map;
+#getCatalogSessionProperties(Lio/trino/spi/session/SessionConfigurationContext;)Ljava/util/Map;

+###io/trino/spi/session/ResourceEstimates
@351
+#<init>(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V
+#getExecutionTime()Ljava/util/Optional;
+#getCpuTime()Ljava/util/Optional;
+#getPeakMemoryBytes()Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###io/trino/spi/session/PropertyMetadata
@351
+#<init>(Ljava/lang/String;Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/lang/Class;Ljava/lang/Object;ZLjava/util/function/Function;Ljava/util/function/Function;)V
+#getName()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getSqlType()Lio/trino/spi/type/Type;
+#getJavaType()Ljava/lang/Class;
+#getDefaultValue()Ljava/lang/Object;
+#isHidden()Z
+#decode(Ljava/lang/Object;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/lang/Object;
+#booleanProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Z)Lio/trino/spi/session/PropertyMetadata;
+#booleanProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/function/Consumer;Z)Lio/trino/spi/session/PropertyMetadata;
+#integerProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Z)Lio/trino/spi/session/PropertyMetadata;
+#integerProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/function/Consumer;Z)Lio/trino/spi/session/PropertyMetadata;
+#longProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Z)Lio/trino/spi/session/PropertyMetadata;
+#longProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/util/function/Consumer;Z)Lio/trino/spi/session/PropertyMetadata;
+#doubleProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Double;Z)Lio/trino/spi/session/PropertyMetadata;
+#doubleProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Double;Ljava/util/function/Consumer;Z)Lio/trino/spi/session/PropertyMetadata;
+#stringProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lio/trino/spi/session/PropertyMetadata;
+#stringProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;Z)Lio/trino/spi/session/PropertyMetadata;
+#enumProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Enum;Z)Lio/trino/spi/session/PropertyMetadata;
+#enumProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Enum;Ljava/util/function/Consumer;Z)Lio/trino/spi/session/PropertyMetadata;
@362
+#toString()Ljava/lang/String;

+###io/trino/spi/session/SessionConfigurationContext
@351
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Set;Ljava/util/Optional;Lio/trino/spi/resourcegroups/ResourceGroupId;)V
+#getUser()Ljava/lang/String;
+#getSource()Ljava/util/Optional;
+#getClientTags()Ljava/util/Set;
+#getQueryType()Ljava/util/Optional;
+#getResourceGroupId()Lio/trino/spi/resourcegroups/ResourceGroupId;

+###io/trino/spi/exchange/ExchangeSourceHandle
@369
+#getPartitionId()I
+#getRetainedSizeInBytes()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@395
+#getDataSizeInBytes()J
@396
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;

+###io/trino/spi/exchange/ExchangeId
@370
+#createRandomExchangeId()Lio/trino/spi/exchange/ExchangeId;
+#<init>(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@400
+#getRetainedSizeInBytes()J

+###io/trino/spi/exchange/ExchangeSinkHandle
@369

+###io/trino/spi/exchange/ExchangeSink
@369
+#isBlocked()Ljava/util/concurrent/CompletableFuture;
+#add(ILio/airlift/slice/Slice;)V
+#getMemoryUsage()J
+#finish()V
+#abort()V
@370
+#finish()Ljava/util/concurrent/CompletableFuture;
+#abort()Ljava/util/concurrent/CompletableFuture;
-#finish()V
-#abort()V
@396
+#isHandleUpdateRequired()Z
+#updateHandle(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)V

+###io/trino/spi/exchange/ExchangeContext
@369
+#<init>(Lio/trino/spi/QueryId;I)V
+#getQueryId()Lio/trino/spi/QueryId;
+#getStageId()I
@370
+#<init>(Lio/trino/spi/QueryId;Lio/trino/spi/exchange/ExchangeId;)V
+#getExchangeId()Lio/trino/spi/exchange/ExchangeId;
-#<init>(Lio/trino/spi/QueryId;I)V
-#getStageId()I

+###io/trino/spi/exchange/ExchangeManagerHandleResolver
@369
+#getExchangeSinkInstanceHandleClass()Ljava/lang/Class;
+#getExchangeSourceHandleHandleClass()Ljava/lang/Class;

+###io/trino/spi/exchange/ExchangeSource
@369
+#isBlocked()Ljava/util/concurrent/CompletableFuture;
+#isFinished()Z
+#read()Lio/airlift/slice/Slice;
+#getMemoryUsage()J
+#close()V
@396
+#addSourceHandles(Ljava/util/List;)V
+#noMoreSourceHandles()V
@400
+#setOutputSelector(Lio/trino/spi/exchange/ExchangeSourceOutputSelector;)V

+###io/trino/spi/exchange/ExchangeSourceStatistics
@369
+#<init>(J)V
+#getSizeInBytes()J

+###io/trino/spi/exchange/Exchange
@369
+#addSink(I)Lio/trino/spi/exchange/ExchangeSinkHandle;
+#noMoreSinks()V
+#instantiateSink(Lio/trino/spi/exchange/ExchangeSinkHandle;I)Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;
+#sinkFinished(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)V
+#getSourceHandles()Ljava/util/concurrent/CompletableFuture;
+#split(Lio/trino/spi/exchange/ExchangeSourceHandle;J)Lio/trino/spi/exchange/ExchangeSourceSplitter;
+#getExchangeSourceStatistics(Lio/trino/spi/exchange/ExchangeSourceHandle;)Lio/trino/spi/exchange/ExchangeSourceStatistics;
+#close()V
@395
-#split(Lio/trino/spi/exchange/ExchangeSourceHandle;J)Lio/trino/spi/exchange/ExchangeSourceSplitter;
-#getExchangeSourceStatistics(Lio/trino/spi/exchange/ExchangeSourceHandle;)Lio/trino/spi/exchange/ExchangeSourceStatistics;
@396
+#updateSinkInstanceHandle(Lio/trino/spi/exchange/ExchangeSinkHandle;I)Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;
+#sinkFinished(Lio/trino/spi/exchange/ExchangeSinkHandle;I)V
+#getSourceHandles()Lio/trino/spi/exchange/ExchangeSourceHandleSource;
-#sinkFinished(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)V
-#getSourceHandles()Ljava/util/concurrent/CompletableFuture;
@400
+#getId()Lio/trino/spi/exchange/ExchangeId;
+#allRequiredSinksFinished()V
@407
+#instantiateSink(Lio/trino/spi/exchange/ExchangeSinkHandle;I)Ljava/util/concurrent/CompletableFuture;
+#updateSinkInstanceHandle(Lio/trino/spi/exchange/ExchangeSinkHandle;I)Ljava/util/concurrent/CompletableFuture;
-#instantiateSink(Lio/trino/spi/exchange/ExchangeSinkHandle;I)Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;
-#updateSinkInstanceHandle(Lio/trino/spi/exchange/ExchangeSinkHandle;I)Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;

+###io/trino/spi/exchange/ExchangeSinkInstanceHandle
@369

+###io/trino/spi/exchange/ExchangeSourceHandleSource$ExchangeSourceHandleBatch
@396
+#<init>(Ljava/util/List;Z)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#handles()Ljava/util/List;
+#lastBatch()Z

+###io/trino/spi/exchange/ExchangeManagerFactory
@369
+#getName()Ljava/lang/String;
+#create(Ljava/util/Map;)Lio/trino/spi/exchange/ExchangeManager;
+#getHandleResolver()Lio/trino/spi/exchange/ExchangeManagerHandleResolver;
@403
-#getHandleResolver()Lio/trino/spi/exchange/ExchangeManagerHandleResolver;

+###io/trino/spi/exchange/ExchangeSourceHandleSource
@396
+#getNextBatch()Ljava/util/concurrent/CompletableFuture;
+#close()V

+###io/trino/spi/exchange/ExchangeManager
@369
+#createExchange(Lio/trino/spi/exchange/ExchangeContext;I)Lio/trino/spi/exchange/Exchange;
+#createSink(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)Lio/trino/spi/exchange/ExchangeSink;
+#createSource(Ljava/util/List;)Lio/trino/spi/exchange/ExchangeSource;
@370
+#createSink(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;Z)Lio/trino/spi/exchange/ExchangeSink;
-#createSink(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)Lio/trino/spi/exchange/ExchangeSink;
@394
+#createExchange(Lio/trino/spi/exchange/ExchangeContext;IZ)Lio/trino/spi/exchange/Exchange;
+#createSink(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;)Lio/trino/spi/exchange/ExchangeSink;
-#createExchange(Lio/trino/spi/exchange/ExchangeContext;I)Lio/trino/spi/exchange/Exchange;
-#createSink(Lio/trino/spi/exchange/ExchangeSinkInstanceHandle;Z)Lio/trino/spi/exchange/ExchangeSink;
@396
+#createSource()Lio/trino/spi/exchange/ExchangeSource;
-#createSource(Ljava/util/List;)Lio/trino/spi/exchange/ExchangeSource;
@401
+#shutdown()V

+###io/trino/spi/Experimental
@393
+#eta()Ljava/lang/String;

+###io/trino/spi/function/AggregationFunctionMetadata
@395
+#isOrderSensitive()Z
+#isDecomposable()Z
+#getIntermediateTypes()Ljava/util/List;
+#toString()Ljava/lang/String;
+#builder()Lio/trino/spi/function/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder;

+###io/trino/spi/function/FunctionDependencies
@395
+#getType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/type/Type;
+#getFunctionNullability(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;)Lio/trino/spi/function/FunctionNullability;
+#getOperatorNullability(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/spi/function/FunctionNullability;
+#getCastNullability(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/spi/function/FunctionNullability;
+#getScalarFunctionImplementation(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getScalarFunctionImplementationSignature(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getOperatorImplementation(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getOperatorImplementationSignature(Lio/trino/spi/function/OperatorType;Ljava/util/List;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getCastImplementation(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getCastImplementationSignature(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;

+###io/trino/spi/function/FunctionDependencyDeclaration$OperatorDependency
@395
+#getOperatorType()Lio/trino/spi/function/OperatorType;
+#getArgumentTypes()Ljava/util/List;
+#isOptional()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/function/WindowFunctionSupplier
@395
+#createWindowFunction(ZLjava/util/List;)Lio/trino/spi/function/WindowFunction;
+#getLambdaInterfaces()Ljava/util/List;

+###io/trino/spi/function/FunctionMetadata$Builder
@395
+#signature(Lio/trino/spi/function/Signature;)Lio/trino/spi/function/FunctionMetadata$Builder;
+#canonicalName(Ljava/lang/String;)Lio/trino/spi/function/FunctionMetadata$Builder;
+#nullable()Lio/trino/spi/function/FunctionMetadata$Builder;
+#argumentNullability([Z)Lio/trino/spi/function/FunctionMetadata$Builder;
+#argumentNullability(Ljava/util/List;)Lio/trino/spi/function/FunctionMetadata$Builder;
+#hidden()Lio/trino/spi/function/FunctionMetadata$Builder;
+#nondeterministic()Lio/trino/spi/function/FunctionMetadata$Builder;
+#noDescription()Lio/trino/spi/function/FunctionMetadata$Builder;
+#description(Ljava/lang/String;)Lio/trino/spi/function/FunctionMetadata$Builder;
+#functionId(Lio/trino/spi/function/FunctionId;)Lio/trino/spi/function/FunctionMetadata$Builder;
+#deprecated()Lio/trino/spi/function/FunctionMetadata$Builder;
+#build()Lio/trino/spi/function/FunctionMetadata;

+###io/trino/spi/function/FunctionMetadata
@395
+#getFunctionId()Lio/trino/spi/function/FunctionId;
+#getSignature()Lio/trino/spi/function/Signature;
+#getCanonicalName()Ljava/lang/String;
+#getFunctionNullability()Lio/trino/spi/function/FunctionNullability;
+#isHidden()Z
+#isDeterministic()Z
+#getDescription()Ljava/lang/String;
+#getKind()Lio/trino/spi/function/FunctionKind;
+#isDeprecated()Z
+#toString()Ljava/lang/String;
+#scalarBuilder()Lio/trino/spi/function/FunctionMetadata$Builder;
+#aggregateBuilder()Lio/trino/spi/function/FunctionMetadata$Builder;
+#windowBuilder()Lio/trino/spi/function/FunctionMetadata$Builder;
+#builder(Lio/trino/spi/function/FunctionKind;)Lio/trino/spi/function/FunctionMetadata$Builder;

+###io/trino/spi/function/AggregationImplementation$AccumulatorStateDescriptor
@395
+#getStateInterface()Ljava/lang/Class;
+#getSerializer()Lio/trino/spi/function/AccumulatorStateSerializer;
+#getFactory()Lio/trino/spi/function/AccumulatorStateFactory;
+#builder(Ljava/lang/Class;)Lio/trino/spi/function/AggregationImplementation$AccumulatorStateDescriptor$Builder;

+###io/trino/spi/function/SchemaFunctionName
@395
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getSchemaName()Ljava/lang/String;
+#getFunctionName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###io/trino/spi/function/TypeVariableConstraint
@395
+#getName()Ljava/lang/String;
+#isComparableRequired()Z
+#isOrderableRequired()Z
+#getVariadicBound()Ljava/util/Optional;
+#getCastableTo()Ljava/util/Set;
+#getCastableFrom()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#typeVariable(Ljava/lang/String;)Lio/trino/spi/function/TypeVariableConstraint;
+#builder(Ljava/lang/String;)Lio/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#fromJson(Ljava/lang/String;ZZLjava/util/Optional;Ljava/util/Set;Ljava/util/Set;)Lio/trino/spi/function/TypeVariableConstraint;[deprecated]

+###io/trino/spi/function/InternalDataAccessor
@383
+#getBooleanValue()Z
+#getDoubleValue()D
+#getLongValue()J
+#getObjectValue()Ljava/lang/Object;

+###io/trino/spi/function/FunctionProvider
@395
+#getScalarFunctionImplementation(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;Lio/trino/spi/function/InvocationConvention;)Lio/trino/spi/function/ScalarFunctionImplementation;
+#getAggregationImplementation(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/AggregationImplementation;
+#getWindowFunctionSupplier(Lio/trino/spi/function/FunctionId;Lio/trino/spi/function/BoundSignature;Lio/trino/spi/function/FunctionDependencies;)Lio/trino/spi/function/WindowFunctionSupplier;
@409
+#getTableFunctionProcessorProvider(Lio/trino/spi/function/SchemaFunctionName;)Lio/trino/spi/ptf/TableFunctionProcessorProvider;

+###io/trino/spi/function/Signature
@395
+#getName()Ljava/lang/String;
+#getReturnType()Lio/trino/spi/type/TypeSignature;
+#getArgumentTypes()Ljava/util/List;
+#isVariableArity()Z
+#getTypeVariableConstraints()Ljava/util/List;
+#getLongVariableConstraints()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#withName(Ljava/lang/String;)Lio/trino/spi/function/Signature;
+#builder()Lio/trino/spi/function/Signature$Builder;
+#fromJson(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lio/trino/spi/type/TypeSignature;Ljava/util/List;Z)Lio/trino/spi/function/Signature;[deprecated]

+###io/trino/spi/function/FunctionDependencyDeclaration$FunctionDependency
@395
+#getName()Lio/trino/spi/function/QualifiedFunctionName;
+#getArgumentTypes()Ljava/util/List;
+#isOptional()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/function/ScalarFunctionImplementation$Builder
@395
+#methodHandle(Ljava/lang/invoke/MethodHandle;)Lio/trino/spi/function/ScalarFunctionImplementation$Builder;
+#instanceFactory(Ljava/lang/invoke/MethodHandle;)Lio/trino/spi/function/ScalarFunctionImplementation$Builder;
+#lambdaInterfaces(Ljava/util/List;)Lio/trino/spi/function/ScalarFunctionImplementation$Builder;
+#build()Lio/trino/spi/function/ScalarFunctionImplementation;

+###io/trino/spi/function/AggregationImplementation$Builder
@395
+#inputFunction(Ljava/lang/invoke/MethodHandle;)Lio/trino/spi/function/AggregationImplementation$Builder;
+#removeInputFunction(Ljava/lang/invoke/MethodHandle;)Lio/trino/spi/function/AggregationImplementation$Builder;
+#combineFunction(Ljava/lang/invoke/MethodHandle;)Lio/trino/spi/function/AggregationImplementation$Builder;
+#outputFunction(Ljava/lang/invoke/MethodHandle;)Lio/trino/spi/function/AggregationImplementation$Builder;
+#accumulatorStateDescriptor(Ljava/lang/Class;Lio/trino/spi/function/AccumulatorStateSerializer;Lio/trino/spi/function/AccumulatorStateFactory;)Lio/trino/spi/function/AggregationImplementation$Builder;
+#accumulatorStateDescriptors(Ljava/util/List;)Lio/trino/spi/function/AggregationImplementation$Builder;
+#lambdaInterfaces([Ljava/lang/Class;)Lio/trino/spi/function/AggregationImplementation$Builder;
+#lambdaInterfaces(Ljava/util/List;)Lio/trino/spi/function/AggregationImplementation$Builder;
+#build()Lio/trino/spi/function/AggregationImplementation;

+###io/trino/spi/function/AggregationImplementation
@395
+#getInputFunction()Ljava/lang/invoke/MethodHandle;
+#getRemoveInputFunction()Ljava/util/Optional;
+#getCombineFunction()Ljava/util/Optional;
+#getOutputFunction()Ljava/lang/invoke/MethodHandle;
+#getAccumulatorStateDescriptors()Ljava/util/List;
+#getLambdaInterfaces()Ljava/util/List;
+#builder()Lio/trino/spi/function/AggregationImplementation$Builder;

+###io/trino/spi/function/Signature$Builder
@395
+#name(Ljava/lang/String;)Lio/trino/spi/function/Signature$Builder;
+#operatorType(Lio/trino/spi/function/OperatorType;)Lio/trino/spi/function/Signature$Builder;
+#typeVariable(Ljava/lang/String;)Lio/trino/spi/function/Signature$Builder;
+#comparableTypeParameter(Ljava/lang/String;)Lio/trino/spi/function/Signature$Builder;
+#orderableTypeParameter(Ljava/lang/String;)Lio/trino/spi/function/Signature$Builder;
+#castableToTypeParameter(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/Signature$Builder;
+#castableFromTypeParameter(Ljava/lang/String;Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/Signature$Builder;
+#variadicTypeParameter(Ljava/lang/String;Ljava/lang/String;)Lio/trino/spi/function/Signature$Builder;
+#typeVariableConstraint(Lio/trino/spi/function/TypeVariableConstraint;)Lio/trino/spi/function/Signature$Builder;
+#typeVariableConstraints(Ljava/util/List;)Lio/trino/spi/function/Signature$Builder;
+#returnType(Lio/trino/spi/type/Type;)Lio/trino/spi/function/Signature$Builder;
+#returnType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/Signature$Builder;
+#longVariable(Ljava/lang/String;Ljava/lang/String;)Lio/trino/spi/function/Signature$Builder;
+#argumentType(Lio/trino/spi/type/Type;)Lio/trino/spi/function/Signature$Builder;
+#argumentType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/Signature$Builder;
+#argumentTypes(Ljava/util/List;)Lio/trino/spi/function/Signature$Builder;
+#variableArity()Lio/trino/spi/function/Signature$Builder;
+#build()Lio/trino/spi/function/Signature;

+###io/trino/spi/function/QualifiedFunctionName
@395
+#of(Ljava/lang/String;)Lio/trino/spi/function/QualifiedFunctionName;
+#of(Ljava/lang/String;Ljava/lang/String;)Lio/trino/spi/function/QualifiedFunctionName;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/trino/spi/function/QualifiedFunctionName;
+#getCatalogName()Ljava/util/Optional;
+#getSchemaName()Ljava/util/Optional;
+#getFunctionName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/function/ScalarFunctionImplementation
@395
+#getMethodHandle()Ljava/lang/invoke/MethodHandle;
+#getInstanceFactory()Ljava/util/Optional;
+#getLambdaInterfaces()Ljava/util/List;
+#builder()Lio/trino/spi/function/ScalarFunctionImplementation$Builder;

+###io/trino/spi/function/LongVariableConstraint
@395
+#getName()Ljava/lang/String;
+#getExpression()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#fromJson(Ljava/lang/String;Ljava/lang/String;)Lio/trino/spi/function/LongVariableConstraint;[deprecated]

+###io/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder
@395
+#addType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addFunction(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addFunctionSignature(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalFunction(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalFunctionSignature(Lio/trino/spi/function/QualifiedFunctionName;Ljava/util/List;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOperator(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOperatorSignature(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalOperator(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalOperatorSignature(Lio/trino/spi/function/OperatorType;Ljava/util/List;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addCast(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addCastSignature(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalCast(Lio/trino/spi/type/Type;Lio/trino/spi/type/Type;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#addOptionalCastSignature(Lio/trino/spi/type/TypeSignature;Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#build()Lio/trino/spi/function/FunctionDependencyDeclaration;

+###io/trino/spi/function/FunctionId
@395
+#<init>(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toFunctionId(Lio/trino/spi/function/Signature;)Lio/trino/spi/function/FunctionId;

+###io/trino/spi/function/FunctionDependencyDeclaration
@395
+#builder()Lio/trino/spi/function/FunctionDependencyDeclaration$FunctionDependencyDeclarationBuilder;
+#getTypeDependencies()Ljava/util/Set;
+#getFunctionDependencies()Ljava/util/Set;
+#getOperatorDependencies()Ljava/util/Set;
+#getCastDependencies()Ljava/util/Set;

+###io/trino/spi/function/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder
@395
+#orderSensitive()Lio/trino/spi/function/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder;
+#intermediateType(Lio/trino/spi/type/Type;)Lio/trino/spi/function/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder;
+#intermediateType(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/AggregationFunctionMetadata$AggregationFunctionMetadataBuilder;
+#build()Lio/trino/spi/function/AggregationFunctionMetadata;

+###io/trino/spi/function/InOut
@383
+#getType()Lio/trino/spi/type/Type;
+#isNull()Z
+#get(Lio/trino/spi/block/BlockBuilder;)V
+#set(Lio/trino/spi/block/Block;I)V
+#set(Lio/trino/spi/function/InOut;)V

+###io/trino/spi/function/AggregationImplementation$AccumulatorStateDescriptor$Builder
@395
+#serializer(Lio/trino/spi/function/AccumulatorStateSerializer;)Lio/trino/spi/function/AggregationImplementation$AccumulatorStateDescriptor$Builder;
+#factory(Lio/trino/spi/function/AccumulatorStateFactory;)Lio/trino/spi/function/AggregationImplementation$AccumulatorStateDescriptor$Builder;
+#build()Lio/trino/spi/function/AggregationImplementation$AccumulatorStateDescriptor;

+###io/trino/spi/function/BoundSignature
@395
+#<init>(Ljava/lang/String;Lio/trino/spi/type/Type;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getReturnType()Lio/trino/spi/type/Type;
+#getArity()I
+#getArgumentType(I)Lio/trino/spi/type/Type;
+#getArgumentTypes()Ljava/util/List;
+#toSignature()Lio/trino/spi/function/Signature;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/function/FunctionDependencyDeclaration$CastDependency
@395
+#getFromType()Lio/trino/spi/type/TypeSignature;
+#getToType()Lio/trino/spi/type/TypeSignature;
+#isOptional()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/function/FunctionNullability
@395
+#<init>(ZLjava/util/List;)V
+#isReturnNullable()Z
+#isArgumentNullable(I)Z
+#getArgumentNullable()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder
@395
+#comparableRequired()Lio/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#orderableRequired()Lio/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#variadicBound(Ljava/lang/String;)Lio/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#castableTo(Lio/trino/spi/type/Type;)Lio/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#castableTo(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#castableFrom(Lio/trino/spi/type/Type;)Lio/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#castableFrom(Lio/trino/spi/type/TypeSignature;)Lio/trino/spi/function/TypeVariableConstraint$TypeVariableConstraintBuilder;
+#build()Lio/trino/spi/function/TypeVariableConstraint;

+###io/trino/spi/function/FunctionKind
@383
+#values()[Lio/trino/spi/function/FunctionKind;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/function/FunctionKind;

+###io/trino/spi/connector/MergePage
@393
+#getDeletionsPage()Ljava/util/Optional;
+#getInsertionsPage()Ljava/util/Optional;
+#createDeleteAndInsertPages(Lio/trino/spi/Page;I)Lio/trino/spi/connector/MergePage;

+###io/trino/spi/connector/ConnectorMergeTableHandle
@393
+#getTableHandle()Lio/trino/spi/connector/ConnectorTableHandle;

+###io/trino/spi/connector/RowChangeParadigm
@393
+#values()[Lio/trino/spi/connector/RowChangeParadigm;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/RowChangeParadigm;

+###io/trino/spi/connector/ConnectorMergeSink
@393
+#storeMergedRows(Lio/trino/spi/Page;)V
+#finish()Ljava/util/concurrent/CompletableFuture;
+#abort()V

+###io/trino/spi/connector/ConnectorAnalyzeMetadata
@386
+#<init>(Lio/trino/spi/connector/ConnectorTableHandle;Lio/trino/spi/statistics/TableStatisticsMetadata;)V
+#getTableHandle()Lio/trino/spi/connector/ConnectorTableHandle;
+#getStatisticsMetadata()Lio/trino/spi/statistics/TableStatisticsMetadata;

+###io/trino/spi/connector/TableFunctionApplicationResult
@381
+#<init>(Ljava/lang/Object;Ljava/util/List;)V
+#getTableHandle()Ljava/lang/Object;
+#getColumnHandles()Ljava/util/List;

+###io/trino/spi/ptf/Argument
@381
+#<init>()V

+###io/trino/spi/ptf/ReturnTypeSpecification
@381
+#<init>()V

+###io/trino/spi/ptf/DescriptorArgument$Builder
@381
+#descriptor(Lio/trino/spi/ptf/Descriptor;)Lio/trino/spi/ptf/DescriptorArgument$Builder;
+#build()Lio/trino/spi/ptf/DescriptorArgument;

+###io/trino/spi/ptf/TableFunctionAnalysis
@381
+#getReturnedType()Ljava/util/Optional;
+#getDescriptorMapping()Lio/trino/spi/ptf/DescriptorMapping;
+#getHandle()Lio/trino/spi/ptf/ConnectorTableFunctionHandle;
+#builder()Lio/trino/spi/ptf/TableFunctionAnalysis$Builder;
@399
-#getDescriptorMapping()Lio/trino/spi/ptf/DescriptorMapping;
@405
+#getRequiredColumns()Ljava/util/Map;

+###io/trino/spi/ptf/DescriptorArgumentSpecification
@381
+#builder()Lio/trino/spi/ptf/DescriptorArgumentSpecification$Builder;

+###io/trino/spi/ptf/TableArgumentSpecification
@381
+#isRowSemantics()Z
+#isPruneWhenEmpty()Z
+#isPassThroughColumns()Z
+#builder(Ljava/lang/String;)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
@386
+#builder()Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
-#builder(Ljava/lang/String;)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;

+###io/trino/spi/ptf/ScalarArgument
@381
+#<init>(Lio/trino/spi/type/Type;Ljava/lang/Object;)V
+#getType()Lio/trino/spi/type/Type;
+#getValue()Ljava/lang/Object;
+#builder()Lio/trino/spi/ptf/ScalarArgument$Builder;
@399
+#fromNullableValue(Lio/trino/spi/predicate/NullableValue;)Lio/trino/spi/ptf/ScalarArgument;
+#getNullableValue()Lio/trino/spi/predicate/NullableValue;

+###io/trino/spi/ptf/ConnectorTableFunction
@381
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lio/trino/spi/ptf/ReturnTypeSpecification;)V
+#getSchema()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getArguments()Ljava/util/List;
+#getReturnTypeSpecification()Lio/trino/spi/ptf/ReturnTypeSpecification;
+#analyze(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTransactionHandle;Ljava/util/Map;)Lio/trino/spi/ptf/TableFunctionAnalysis;
@382
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lio/trino/spi/ptf/ReturnTypeSpecification;)V

+###io/trino/spi/ptf/TableArgument
@381
+#<init>(Ljava/util/Optional;Lio/trino/spi/type/RowType;Ljava/util/List;Ljava/util/List;ZZZ)V
+#getName()Ljava/util/Optional;
+#getRowType()Lio/trino/spi/type/RowType;
+#getPartitionBy()Ljava/util/List;
+#getOrderBy()Ljava/util/List;
+#isRowSemantics()Z
+#isPruneWhenEmpty()Z
+#isPassThroughColumns()Z
+#builder()Lio/trino/spi/ptf/TableArgument$Builder;
@399
+#<init>(Lio/trino/spi/type/RowType;Ljava/util/List;Ljava/util/List;)V
-#<init>(Ljava/util/Optional;Lio/trino/spi/type/RowType;Ljava/util/List;Ljava/util/List;ZZZ)V
-#getName()Ljava/util/Optional;
-#isRowSemantics()Z
-#isPruneWhenEmpty()Z
-#isPassThroughColumns()Z

+###io/trino/spi/ptf/NameAndPosition
@381
+#<init>(Ljava/lang/String;I)V
+#getName()Ljava/lang/String;
+#getPosition()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/ptf/Descriptor
@381
+#<init>(Ljava/util/List;)V
+#descriptor([Ljava/lang/String;)Lio/trino/spi/ptf/Descriptor;
+#descriptor(Ljava/util/List;Ljava/util/List;)Lio/trino/spi/ptf/Descriptor;
+#getFields()Ljava/util/List;
+#isTyped()Z
@399
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/ptf/TableFunctionAnalysis$Builder
@381
+#returnedType(Lio/trino/spi/ptf/Descriptor;)Lio/trino/spi/ptf/TableFunctionAnalysis$Builder;
+#descriptorMapping(Lio/trino/spi/ptf/DescriptorMapping;)Lio/trino/spi/ptf/TableFunctionAnalysis$Builder;
+#handle(Lio/trino/spi/ptf/ConnectorTableFunctionHandle;)Lio/trino/spi/ptf/TableFunctionAnalysis$Builder;
+#build()Lio/trino/spi/ptf/TableFunctionAnalysis;
@399
-#descriptorMapping(Lio/trino/spi/ptf/DescriptorMapping;)Lio/trino/spi/ptf/TableFunctionAnalysis$Builder;
@405
+#requiredColumns(Ljava/lang/String;Ljava/util/List;)Lio/trino/spi/ptf/TableFunctionAnalysis$Builder;

+###io/trino/spi/ptf/ConnectorTableFunctionHandle
@381

+###io/trino/spi/ptf/Descriptor$Field
@381
+#<init>(Ljava/lang/String;Ljava/util/Optional;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/util/Optional;
@399
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/ptf/ReturnTypeSpecification$DescribedTable
@381
+#<init>(Lio/trino/spi/ptf/Descriptor;)V
+#getDescriptor()Lio/trino/spi/ptf/Descriptor;

+###io/trino/spi/ptf/ArgumentSpecification
@381
+#getName()Ljava/lang/String;
+#isRequired()Z
+#getDefaultValue()Ljava/lang/Object;

+###io/trino/spi/ptf/ScalarArgumentSpecification$Builder
@381
+#name(Ljava/lang/String;)Lio/trino/spi/ptf/ScalarArgumentSpecification$Builder;
+#type(Lio/trino/spi/type/Type;)Lio/trino/spi/ptf/ScalarArgumentSpecification$Builder;
+#defaultValue(Ljava/lang/Object;)Lio/trino/spi/ptf/ScalarArgumentSpecification$Builder;
+#build()Lio/trino/spi/ptf/ScalarArgumentSpecification;

+###io/trino/spi/ptf/TableArgumentSpecification$Builder
@381
+#name(Ljava/lang/String;)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
+#rowSemantics(Z)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
+#pruneWhenEmpty(Z)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
+#passThroughColumns(Z)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
+#build()Lio/trino/spi/ptf/TableArgumentSpecification;
@382
+#rowSemantics()Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
+#pruneWhenEmpty()Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
+#passThroughColumns()Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
-#rowSemantics(Z)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
-#pruneWhenEmpty(Z)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
-#passThroughColumns(Z)Lio/trino/spi/ptf/TableArgumentSpecification$Builder;
@407
+#keepWhenEmpty()Lio/trino/spi/ptf/TableArgumentSpecification$Builder;

+###io/trino/spi/ptf/ScalarArgument$Builder
@381
+#type(Lio/trino/spi/type/Type;)Lio/trino/spi/ptf/ScalarArgument$Builder;
+#value(Ljava/lang/Object;)Lio/trino/spi/ptf/ScalarArgument$Builder;
+#build()Lio/trino/spi/ptf/ScalarArgument;

+###io/trino/spi/ptf/ScalarArgumentSpecification
@381
+#getType()Lio/trino/spi/type/Type;
+#builder()Lio/trino/spi/ptf/ScalarArgumentSpecification$Builder;

+###io/trino/spi/ptf/DescriptorArgumentSpecification$Builder
@381
+#name(Ljava/lang/String;)Lio/trino/spi/ptf/DescriptorArgumentSpecification$Builder;
+#defaultValue(Lio/trino/spi/ptf/Descriptor;)Lio/trino/spi/ptf/DescriptorArgumentSpecification$Builder;
+#build()Lio/trino/spi/ptf/DescriptorArgumentSpecification;

+###io/trino/spi/ptf/ReturnTypeSpecification$OnlyPassThrough
@381

+###io/trino/spi/ptf/TableArgument$Builder
@381
+#name(Ljava/util/Optional;)Lio/trino/spi/ptf/TableArgument$Builder;
+#rowType(Lio/trino/spi/type/RowType;)Lio/trino/spi/ptf/TableArgument$Builder;
+#partitionBy(Ljava/util/List;)Lio/trino/spi/ptf/TableArgument$Builder;
+#orderBy(Ljava/util/List;)Lio/trino/spi/ptf/TableArgument$Builder;
+#rowSemantics(Z)Lio/trino/spi/ptf/TableArgument$Builder;
+#pruneWhenEmpty(Z)Lio/trino/spi/ptf/TableArgument$Builder;
+#passThroughColumns(Z)Lio/trino/spi/ptf/TableArgument$Builder;
+#build()Lio/trino/spi/ptf/TableArgument;
@399
-#name(Ljava/util/Optional;)Lio/trino/spi/ptf/TableArgument$Builder;
-#rowSemantics(Z)Lio/trino/spi/ptf/TableArgument$Builder;
-#pruneWhenEmpty(Z)Lio/trino/spi/ptf/TableArgument$Builder;
-#passThroughColumns(Z)Lio/trino/spi/ptf/TableArgument$Builder;

+###io/trino/spi/ptf/DescriptorArgument
@381
+#<init>(Ljava/util/Optional;)V
+#getDescriptor()Ljava/util/Optional;
+#builder()Lio/trino/spi/ptf/DescriptorArgument$Builder;
@399
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/trino/spi/ptf/ReturnTypeSpecification$GenericTable
@381

+###io/trino/spi/ptf/AbstractConnectorTableFunction
@382
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lio/trino/spi/ptf/ReturnTypeSpecification;)V
+#getSchema()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getArguments()Ljava/util/List;
+#getReturnTypeSpecification()Lio/trino/spi/ptf/ReturnTypeSpecification;
+#analyze(Lio/trino/spi/connector/ConnectorSession;Lio/trino/spi/connector/ConnectorTransactionHandle;Ljava/util/Map;)Lio/trino/spi/ptf/TableFunctionAnalysis;

+###io/trino/spi/expression/StandardFunctions
@373

+###io/trino/spi/expression/Call
@372
+#<init>(Lio/trino/spi/type/Type;Lio/trino/spi/expression/FunctionName;Ljava/util/List;)V
+#getFunctionName()Lio/trino/spi/expression/FunctionName;
+#getArguments()Ljava/util/List;
+#getChildren()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/expression/FunctionName
@372
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/Optional;Ljava/lang/String;)V
+#getCatalogSchema()Ljava/util/Optional;
+#getName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/trino/spi/exchange/ExchangeSourceSplitter
@369
+#isBlocked()Ljava/util/concurrent/CompletableFuture;
+#getNext()Ljava/util/Optional;
+#close()V
@395
-###io/trino/spi/exchange/ExchangeSourceSplitter

+###io/trino/spi/type/UnscaledDecimal128Arithmetic
@351
+#unscaledDecimal()Lio/airlift/slice/Slice;
+#unscaledDecimal(Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#unscaledDecimal(Ljava/lang/String;)Lio/airlift/slice/Slice;
+#unscaledDecimal(Ljava/math/BigInteger;)Lio/airlift/slice/Slice;
+#pack(Ljava/math/BigInteger;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#unscaledDecimal(J)Lio/airlift/slice/Slice;
+#unscaledDecimalToBigInteger(Lio/airlift/slice/Slice;)Ljava/math/BigInteger;
+#unscaledDecimalToUnscaledLong(Lio/airlift/slice/Slice;)J
+#unscaledDecimalToUnscaledLongUnsafe(Lio/airlift/slice/Slice;)J
+#rescale(Lio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#rescale(Lio/airlift/slice/Slice;ILio/airlift/slice/Slice;)V
+#rescale(JI)Lio/airlift/slice/Slice;
+#rescaleTruncate(Lio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#rescaleTruncate(Lio/airlift/slice/Slice;ILio/airlift/slice/Slice;)V
+#add(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#add(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)V
+#addWithOverflow(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)J
+#subtract(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#subtract(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)V
+#multiply(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#multiply(Lio/airlift/slice/Slice;J)Lio/airlift/slice/Slice;
+#multiply(JJ)Lio/airlift/slice/Slice;
+#multiply(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)V
+#multiply(JJJJLio/airlift/slice/Slice;)V
+#multiply(Lio/airlift/slice/Slice;JLio/airlift/slice/Slice;)V
+#multiply(Lio/airlift/slice/Slice;ILio/airlift/slice/Slice;)V
+#multiply(JJLio/airlift/slice/Slice;)V
+#multiply(JILio/airlift/slice/Slice;)V
+#compare(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)I
+#compare(JJJJ)I
+#compareAbsolute(Lio/airlift/slice/Slice;Lio/airlift/slice/Slice;)I
+#compareUnsigned(JJJJ)I
+#incrementUnsafe(Lio/airlift/slice/Slice;)V
+#negate(Lio/airlift/slice/Slice;)V
+#isStrictlyNegative(Lio/airlift/slice/Slice;)Z
+#isStrictlyNegative(JJ)Z
+#isNegative(Lio/airlift/slice/Slice;)Z
+#isNegative(J)Z
+#isZero(Lio/airlift/slice/Slice;)Z
+#toUnscaledString(Lio/airlift/slice/Slice;)Ljava/lang/String;
+#overflows(Lio/airlift/slice/Slice;I)Z
+#throwIfOverflows(Lio/airlift/slice/Slice;)V
+#throwIfOverflows(Lio/airlift/slice/Slice;I)V
+#divideRoundUp(JIJ)Lio/airlift/slice/Slice;
+#divideRoundUp(JILio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#divideRoundUp(Lio/airlift/slice/Slice;IJ)Lio/airlift/slice/Slice;
+#divideRoundUp(Lio/airlift/slice/Slice;ILio/airlift/slice/Slice;)Lio/airlift/slice/Slice;
+#remainder(JIJI)Lio/airlift/slice/Slice;
+#remainder(JILio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#remainder(Lio/airlift/slice/Slice;IJI)Lio/airlift/slice/Slice;
+#remainder(Lio/airlift/slice/Slice;ILio/airlift/slice/Slice;I)Lio/airlift/slice/Slice;
+#pack(JJZ)Lio/airlift/slice/Slice;
+#pack(JJZLio/airlift/slice/Slice;)V
+#pack(JJZLio/airlift/slice/Slice;I)V
+#pack(JJZ[JI)V
+#throwOverflowException()V
+#getInt(Lio/airlift/slice/Slice;I)I
+#getLong(Lio/airlift/slice/Slice;I)J
@364
+#unscaledDecimalToBigInteger(JJ)Ljava/math/BigInteger;
+#toByteArray(J[BI)[B
+#addWithOverflow(JJJJ[JI)J
+#compareAbsolute(JJJJ)I
+#throwIfOverflows(JJ)V
-#multiply(Lio/airlift/slice/Slice;ILio/airlift/slice/Slice;)V
-#multiply(JILio/airlift/slice/Slice;)V
@365
+#divideRoundUp(JJIJJ)Lio/airlift/slice/Slice;
@368
-###io/trino/spi/type/UnscaledDecimal128Arithmetic

+###io/trino/spi/exchange/ExchangeSourceOutputSelector$Selection
@400
+#values()[Lio/trino/spi/exchange/ExchangeSourceOutputSelector$Selection;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/exchange/ExchangeSourceOutputSelector$Selection;
+#getValue()B

+###io/trino/spi/exchange/ExchangeSourceOutputSelector
@400
+#<init>(ILjava/util/Map;Z)V
+#getVersion()I
+#getValues()Ljava/util/Map;
+#isFinal()Z
+#getSelection(Lio/trino/spi/exchange/ExchangeId;II)Lio/trino/spi/exchange/ExchangeSourceOutputSelector$Selection;
+#getRetainedSizeInBytes()J
+#checkValidTransition(Lio/trino/spi/exchange/ExchangeSourceOutputSelector;)V
+#builder(Ljava/util/Set;)Lio/trino/spi/exchange/ExchangeSourceOutputSelector$Builder;
@401
+#merge(Lio/trino/spi/exchange/ExchangeSourceOutputSelector;)Lio/trino/spi/exchange/ExchangeSourceOutputSelector;

+###io/trino/spi/exchange/ExchangeSourceOutputSelector$Builder
@400
+#<init>(Ljava/util/Set;)V
+#include(Lio/trino/spi/exchange/ExchangeId;II)Lio/trino/spi/exchange/ExchangeSourceOutputSelector$Builder;
+#exclude(Lio/trino/spi/exchange/ExchangeId;I)Lio/trino/spi/exchange/ExchangeSourceOutputSelector$Builder;
+#setPartitionCount(Lio/trino/spi/exchange/ExchangeId;I)Lio/trino/spi/exchange/ExchangeSourceOutputSelector$Builder;
+#setFinal()Lio/trino/spi/exchange/ExchangeSourceOutputSelector$Builder;
+#build()Lio/trino/spi/exchange/ExchangeSourceOutputSelector;

+###io/trino/spi/ptf/TableArgument$QualifiedName
@381
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getCatalogName()Ljava/lang/String;
+#getSchemaName()Ljava/lang/String;
+#getTableName()Ljava/lang/String;
@399
-###io/trino/spi/ptf/TableArgument$QualifiedName

+###io/trino/spi/ptf/DescriptorMapping$DescriptorMappingBuilder
@381
+#<init>()V
+#mapField(Ljava/lang/String;ILjava/lang/String;)Lio/trino/spi/ptf/DescriptorMapping$DescriptorMappingBuilder;
+#mapAllFields(Ljava/lang/String;Ljava/lang/String;)Lio/trino/spi/ptf/DescriptorMapping$DescriptorMappingBuilder;
+#build()Lio/trino/spi/ptf/DescriptorMapping;
@399
-###io/trino/spi/ptf/DescriptorMapping$DescriptorMappingBuilder

+###io/trino/spi/ptf/DescriptorMapping
@381
+#getMappingByField()Ljava/util/Map;
+#getMappingByDescriptor()Ljava/util/Map;
+#isEmpty()Z
@399
-###io/trino/spi/ptf/DescriptorMapping

+###io/trino/spi/ptf/TableArgument$SortItem
@381
+#<init>(Ljava/lang/String;ZZ)V
+#getColumn()Ljava/lang/String;
+#isAscending()Z
+#isNullsLast()Z
@399
-###io/trino/spi/ptf/TableArgument$SortItem

+###io/trino/spi/connector/MaterializedViewFreshness$Freshness
@405
+#values()[Lio/trino/spi/connector/MaterializedViewFreshness$Freshness;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/MaterializedViewFreshness$Freshness;

+###io/trino/spi/connector/CatalogHandle$CatalogHandleType
@405
+#values()[Lio/trino/spi/connector/CatalogHandle$CatalogHandleType;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/connector/CatalogHandle$CatalogHandleType;
+#isInternal()Z

+###io/trino/spi/connector/ConnectorPageSinkId
@401
+#getId()J

+###io/trino/spi/connector/CatalogHandle$CatalogVersion
@405
+#<init>(Ljava/lang/String;)V
+#compareTo(Lio/trino/spi/connector/CatalogHandle$CatalogVersion;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getRetainedSizeInBytes()J
+#compareTo(Ljava/lang/Object;)I

+###io/trino/spi/connector/CatalogHandle
@405
+#createRootCatalogHandle(Ljava/lang/String;Lio/trino/spi/connector/CatalogHandle$CatalogVersion;)Lio/trino/spi/connector/CatalogHandle;
+#createInformationSchemaCatalogHandle(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/spi/connector/CatalogHandle;
+#createSystemTablesCatalogHandle(Lio/trino/spi/connector/CatalogHandle;)Lio/trino/spi/connector/CatalogHandle;
+#fromId(Ljava/lang/String;)Lio/trino/spi/connector/CatalogHandle;
+#getId()Ljava/lang/String;
+#getCatalogName()Ljava/lang/String;
+#getType()Lio/trino/spi/connector/CatalogHandle$CatalogHandleType;
+#getVersion()Lio/trino/spi/connector/CatalogHandle$CatalogVersion;
+#getRootCatalogHandle()Lio/trino/spi/connector/CatalogHandle;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getRetainedSizeInBytes()J

+###io/trino/spi/Unstable
@405

+###io/trino/spi/eventlistener/StageOutputBufferUtilization
@401
+#<init>(IIDDDDDDDDDDDLjava/time/Duration;)V
+#getStageId()I
+#getTasks()I
+#getP01()D
+#getP05()D
+#getP10()D
+#getP25()D
+#getP50()D
+#getP75()D
+#getP90()D
+#getP95()D
+#getP99()D
+#getMin()D
+#getMax()D
+#getDuration()Ljava/time/Duration;

+###io/trino/spi/predicate/SortedRangeSet$Builder
@405
+#addRangeInclusive(Ljava/lang/Object;Ljava/lang/Object;)Lio/trino/spi/predicate/SortedRangeSet$Builder;
+#addValue(Ljava/lang/Object;)Lio/trino/spi/predicate/SortedRangeSet$Builder;
+#build()Lio/trino/spi/predicate/SortedRangeSet;

+###io/trino/spi/connector/TableScanRedirectApplicationResult$Redirection
@353
+#<init>(Lio/trino/spi/connector/CatalogSchemaTableName;Ljava/util/Map;Lio/trino/spi/predicate/TupleDomain;)V
+#getDestinationTable()Lio/trino/spi/connector/CatalogSchemaTableName;
+#getDestinationColumns()Ljava/util/Map;
+#getFilter()Lio/trino/spi/predicate/TupleDomain;
@358
-###io/trino/spi/connector/TableScanRedirectApplicationResult$Redirection

+###io/trino/spi/ptf/TableFunctionSplitProcessor
@409
+#process(Lio/trino/spi/connector/ConnectorSplit;)Lio/trino/spi/ptf/TableFunctionProcessorState;

+###io/trino/spi/ptf/TableFunctionProcessorState$Blocked
@409
+#blocked(Ljava/util/concurrent/CompletableFuture;)Lio/trino/spi/ptf/TableFunctionProcessorState$Blocked;
+#getFuture()Ljava/util/concurrent/CompletableFuture;

+###io/trino/spi/ptf/TableFunctionProcessorProvider
@409
+#getDataProcessor(Lio/trino/spi/ptf/ConnectorTableFunctionHandle;)Lio/trino/spi/ptf/TableFunctionDataProcessor;
+#getSplitProcessor(Lio/trino/spi/ptf/ConnectorTableFunctionHandle;)Lio/trino/spi/ptf/TableFunctionSplitProcessor;

+###io/trino/spi/ptf/TableFunctionDataProcessor
@409
+#process(Ljava/util/List;)Lio/trino/spi/ptf/TableFunctionProcessorState;

+###io/trino/spi/ptf/TableFunctionProcessorState$Finished
@409

+###io/trino/spi/ptf/TableFunctionProcessorState$Processed
@409
+#usedInput()Lio/trino/spi/ptf/TableFunctionProcessorState$Processed;
+#produced(Lio/trino/spi/Page;)Lio/trino/spi/ptf/TableFunctionProcessorState$Processed;
+#usedInputAndProduced(Lio/trino/spi/Page;)Lio/trino/spi/ptf/TableFunctionProcessorState$Processed;
+#isUsedInput()Z
+#getResult()Lio/trino/spi/Page;

+###io/trino/spi/ptf/TableFunctionProcessorState
@409

+###io/trino/spi/connector/InMemoryRecordSet$InMemoryRecordCursor
@408
+#getCompletedBytes()J
+#getReadTimeNanos()J
+#getType(I)Lio/trino/spi/type/Type;
+#advanceNextPosition()Z
+#getBoolean(I)Z
+#getLong(I)J
+#getDouble(I)D
+#getSlice(I)Lio/airlift/slice/Slice;
+#getObject(I)Ljava/lang/Object;
+#isNull(I)Z
+#close()V

+###io/trino/spi/predicate/Marker$Bound
@351
+#values()[Lio/trino/spi/predicate/Marker$Bound;
+#valueOf(Ljava/lang/String;)Lio/trino/spi/predicate/Marker$Bound;
@354
-###io/trino/spi/predicate/Marker$Bound

+###io/trino/spi/predicate/Marker
@351
+#<init>(Lio/trino/spi/type/Type;Ljava/util/Optional;Lio/trino/spi/predicate/Marker$Bound;)V
+#upperUnbounded(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Marker;
+#lowerUnbounded(Lio/trino/spi/type/Type;)Lio/trino/spi/predicate/Marker;
+#above(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Marker;
+#exactly(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Marker;
+#below(Lio/trino/spi/type/Type;Ljava/lang/Object;)Lio/trino/spi/predicate/Marker;
+#getType()Lio/trino/spi/type/Type;
+#getValueBlock()Ljava/util/Optional;
+#getValue()Ljava/lang/Object;
+#getPrintableValue(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/Object;
+#getBound()Lio/trino/spi/predicate/Marker$Bound;
+#isUpperUnbounded()Z
+#isLowerUnbounded()Z
+#isAdjacent(Lio/trino/spi/predicate/Marker;)Z
+#greaterAdjacent()Lio/trino/spi/predicate/Marker;
+#lesserAdjacent()Lio/trino/spi/predicate/Marker;
+#compareTo(Lio/trino/spi/predicate/Marker;)I
+#compare(Lio/trino/spi/block/Block;Lio/trino/spi/block/Block;)I
+#min(Lio/trino/spi/predicate/Marker;Lio/trino/spi/predicate/Marker;)Lio/trino/spi/predicate/Marker;
+#max(Lio/trino/spi/predicate/Marker;Lio/trino/spi/predicate/Marker;)Lio/trino/spi/predicate/Marker;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toString(Lio/trino/spi/connector/ConnectorSession;)Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@354
-###io/trino/spi/predicate/Marker
