
+###org/teiid/CommandContext
@10.0.0.Alpha2
+#getUserName()Ljava/lang/String;
+#getVdbName()Ljava/lang/String;
+#getVdbVersion()Ljava/lang/String;
+#getConnectionId()Ljava/lang/String;
+#getConnectionID()Ljava/lang/String;
+#getNextRand()D
+#getNextRand(J)D
+#getProcessorBatchSize()I
+#getServerTimeZone()Ljava/util/TimeZone;
+#getSubject()Ljavax/security/auth/Subject;
+#getSession()Lorg/teiid/adminapi/Session;
+#getCommandPayload()Ljava/io/Serializable;
+#getRequestId()Ljava/lang/String;
+#getAllowedDataPolicies()Ljava/util/Map;
+#getVdb()Lorg/teiid/adminapi/VDB;
+#addListener(Lorg/teiid/CommandListener;)V
+#removeListener(Lorg/teiid/CommandListener;)V
+#getReuseCount()J
+#getVDBClassLoader()Ljava/lang/ClassLoader;
+#addWarning(Ljava/lang/Exception;)V
+#isContinuous()Z
+#isReturnAutoGeneratedKeys()Z
+#returnGeneratedKeys([Ljava/lang/String;[Ljava/lang/Class;)Lorg/teiid/GeneratedKeys;
+#getGeneratedKeys()Lorg/teiid/GeneratedKeys;
+#setSessionVariable(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#getSessionVariable(Ljava/lang/String;)Ljava/lang/Object;
+#getConnection()Lorg/teiid/jdbc/TeiidConnection;
@12.3.0
*#getConnectionID()Ljava/lang/String;[deprecated]
*#isReturnAutoGeneratedKeys()Z[deprecated]

+###org/teiid/CommandListener
@10.0.0.Alpha2
+#commandClosed(Lorg/teiid/CommandContext;)V

+###org/teiid/GeneratedKeys
@10.0.0.Alpha2
+#addKey(Ljava/util/List;)V
+#getColumnNames()[Ljava/lang/String;
+#getColumnTypes()[Ljava/lang/Class;
+#getKeyIterator()Ljava/util/Iterator;

+###org/teiid/GeometryInputSource
@10.0.0.Alpha2
+#<init>()V
+#getEwkb()Ljava/io/InputStream;
+#getSrid()Ljava/lang/Integer;
+#getGml()Ljava/io/Reader;

+###org/teiid/OAuthCredential
@10.0.0.Alpha2
+#getAuthorizationHeader(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getAuthrorizationProperty(Ljava/lang/String;)Ljava/lang/String;

+###org/teiid/OAuthCredentialContext
@10.0.0.Alpha2
+#<init>()V
+#getCredential()Lorg/teiid/OAuthCredential;
+#setCredential(Lorg/teiid/OAuthCredential;)V

+###org/teiid/PolicyDecider
@10.0.0.Alpha2
+#hasRole(Ljava/lang/String;Lorg/teiid/CommandContext;)Z
+#getInaccessibleResources(Lorg/teiid/adminapi/DataPolicy$PermissionType;Ljava/util/Set;Lorg/teiid/adminapi/DataPolicy$Context;Lorg/teiid/CommandContext;)Ljava/util/Set;
+#isTempAccessible(Lorg/teiid/adminapi/DataPolicy$PermissionType;Ljava/lang/String;Lorg/teiid/adminapi/DataPolicy$Context;Lorg/teiid/CommandContext;)Z
+#validateCommand(Lorg/teiid/CommandContext;)Z
@13.0.1
+#isLanguageAllowed(Ljava/lang/String;Lorg/teiid/CommandContext;)Z
+#isTempAccessible(Lorg/teiid/adminapi/DataPolicy$PermissionType;Lorg/teiid/metadata/AbstractMetadataRecord;Lorg/teiid/adminapi/DataPolicy$Context;Lorg/teiid/CommandContext;)Z
-#isTempAccessible(Lorg/teiid/adminapi/DataPolicy$PermissionType;Ljava/lang/String;Lorg/teiid/adminapi/DataPolicy$Context;Lorg/teiid/CommandContext;)Z

+###org/teiid/PreParser
@10.0.0.Alpha2
+#preParse(Ljava/lang/String;Lorg/teiid/CommandContext;)Ljava/lang/String;

+###org/teiid/Replicated$ReplicationMode
@10.0.0.Alpha2
+#values()[Lorg/teiid/Replicated$ReplicationMode;
+#valueOf(Ljava/lang/String;)Lorg/teiid/Replicated$ReplicationMode;

+###org/teiid/Replicated
@10.0.0.Alpha2
+#asynch()Z
+#timeout()J
+#remoteOnly()Z
+#replicateState()Lorg/teiid/Replicated$ReplicationMode;

+###org/teiid/UserDefinedAggregate
@10.0.0.Alpha2
+#reset()V
+#getResult(Lorg/teiid/CommandContext;)Ljava/lang/Object;

+###org/teiid/connector/DataPlugin$Event
@10.0.0.Alpha2
+#values()[Lorg/teiid/connector/DataPlugin$Event;
+#valueOf(Ljava/lang/String;)Lorg/teiid/connector/DataPlugin$Event;

+###org/teiid/connector/DataPlugin
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/events/EventDistributor
@10.0.0.Alpha2
+#updateMatViewRow(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V[deprecated]
+#updateMatViewRow(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V
+#dataModification(Ljava/lang/String;ILjava/lang/String;[Ljava/lang/String;)V[deprecated]
+#dataModification(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#setColumnStats(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/ColumnStats;)V[deprecated]
+#setColumnStats(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/ColumnStats;)V
+#setTableStats(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/TableStats;)V[deprecated]
+#setTableStats(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/TableStats;)V
+#setProperty(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#setProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setInsteadOfTriggerDefinition(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table$TriggerEvent;Ljava/lang/String;Ljava/lang/Boolean;)V[deprecated]
+#setInsteadOfTriggerDefinition(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table$TriggerEvent;Ljava/lang/String;Ljava/lang/Boolean;)V
+#setProcedureDefinition(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#setProcedureDefinition(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setViewDefinition(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#setViewDefinition(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#register(Lorg/teiid/events/EventListener;)V
+#unregister(Lorg/teiid/events/EventListener;)V
+#dataModification(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/String;)Lorg/teiid/client/util/ResultsFuture;

+###org/teiid/events/EventDistributorFactory
@10.0.0.Alpha2
+#getEventDistributor()Lorg/teiid/events/EventDistributor;

+###org/teiid/events/EventListener
@10.0.0.Alpha2
+#vdbDeployed(Ljava/lang/String;Ljava/lang/String;)V
+#vdbUndeployed(Ljava/lang/String;Ljava/lang/String;)V
+#vdbLoaded(Lorg/teiid/adminapi/VDB;)V
+#vdbLoadFailed(Lorg/teiid/adminapi/VDB;)V

+###org/teiid/language/AggregateFunction
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;ZLjava/util/List;Ljava/lang/Class;)V
+#getName()Ljava/lang/String;
+#isDistinct()Z
+#getExpression()Lorg/teiid/language/Expression;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setName(Ljava/lang/String;)V
+#setDistinct(Z)V
+#getCondition()Lorg/teiid/language/Expression;
+#setCondition(Lorg/teiid/language/Expression;)V
+#getOrderBy()Lorg/teiid/language/OrderBy;
+#setOrderBy(Lorg/teiid/language/OrderBy;)V

+###org/teiid/language/AndOr$Operator
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/AndOr$Operator;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/AndOr$Operator;

+###org/teiid/language/AndOr
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Condition;Lorg/teiid/language/Condition;Lorg/teiid/language/AndOr$Operator;)V
+#getOperator()Lorg/teiid/language/AndOr$Operator;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setOperator(Lorg/teiid/language/AndOr$Operator;)V
+#getLeftCondition()Lorg/teiid/language/Condition;
+#getRightCondition()Lorg/teiid/language/Condition;
+#setLeftCondition(Lorg/teiid/language/Condition;)V
+#setRightCondition(Lorg/teiid/language/Condition;)V

+###org/teiid/language/Argument$Direction
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/Argument$Direction;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/Argument$Direction;

+###org/teiid/language/Argument
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Argument$Direction;Lorg/teiid/language/Expression;Ljava/lang/Class;Lorg/teiid/metadata/ProcedureParameter;)V
+#<init>(Lorg/teiid/language/Argument$Direction;Ljava/lang/Class;Lorg/teiid/metadata/ProcedureParameter;)V
+#<init>(Lorg/teiid/language/Argument$Direction;Lorg/teiid/language/Literal;Lorg/teiid/metadata/ProcedureParameter;)V
+#getDirection()Lorg/teiid/language/Argument$Direction;
+#getArgumentValue()Lorg/teiid/language/Literal;
+#getType()Ljava/lang/Class;
+#setType(Ljava/lang/Class;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setDirection(Lorg/teiid/language/Argument$Direction;)V
+#setArgumentValue(Lorg/teiid/language/Literal;)V
+#getMetadataObject()Lorg/teiid/metadata/ProcedureParameter;
+#setMetadataObject(Lorg/teiid/metadata/ProcedureParameter;)V
+#getExpression()Lorg/teiid/language/Expression;
+#setExpression(Lorg/teiid/language/Expression;)V
+#getMetadataObject()Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/language/Array
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;Ljava/util/List;)V
+#getType()Ljava/lang/Class;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#getBaseType()Ljava/lang/Class;
+#setBaseType(Ljava/lang/Class;)V
+#getExpressions()Ljava/util/List;

+###org/teiid/language/BaseInCondition
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Expression;Z)V
+#getLeftExpression()Lorg/teiid/language/Expression;
+#setLeftExpression(Lorg/teiid/language/Expression;)V
+#isNegated()Z
+#setNegated(Z)V

+###org/teiid/language/BaseLanguageObject
@10.0.0.Alpha2
+#<init>()V
+#toString()Ljava/lang/String;

+###org/teiid/language/BatchedCommand
@10.0.0.Alpha2
+#getParameterValues()Ljava/util/Iterator;
+#setParameterValues(Ljava/util/Iterator;)V

+###org/teiid/language/BatchedUpdates
@10.0.0.Alpha2
+#<init>(Ljava/util/List;)V
+#getUpdateCommands()Ljava/util/List;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#isSingleResult()Z
+#setSingleResult(Z)V
+#toString()Ljava/lang/String;
+#toString(Z)Ljava/lang/String;

+###org/teiid/language/BulkCommand
@10.0.0.Alpha2
+#getParameterValues()Ljava/util/Iterator;
+#setParameterValues(Ljava/util/Iterator;)V

+###org/teiid/language/Call
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/teiid/metadata/Procedure;)V
+#getReturnType()Ljava/lang/Class;
+#setReturnType(Ljava/lang/Class;)V
+#getProcedureName()Ljava/lang/String;
+#getArguments()Ljava/util/List;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setProcedureName(Ljava/lang/String;)V
+#setArguments(Ljava/util/List;)V
+#getMetadataObject()Lorg/teiid/metadata/Procedure;
+#getReturnParameter()Lorg/teiid/metadata/ProcedureParameter;
+#getResultSetColumnTypes()[Ljava/lang/Class;
+#isTableReference()Z
+#setTableReference(Z)V
+#getMetadataObject()Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/language/ColumnReference
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/NamedTable;Ljava/lang/String;Lorg/teiid/metadata/Column;Ljava/lang/Class;)V
+#getName()Ljava/lang/String;
+#getTable()Lorg/teiid/language/NamedTable;
+#getMetadataObject()Lorg/teiid/metadata/Column;
+#setMetadataObject(Lorg/teiid/metadata/Column;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setTable(Lorg/teiid/language/NamedTable;)V
+#getType()Ljava/lang/Class;
+#setName(Ljava/lang/String;)V
+#setType(Ljava/lang/Class;)V
+#getMetadataObject()Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/language/Command
@10.0.0.Alpha2

+###org/teiid/language/Comparison$Operator
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/Comparison$Operator;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/Comparison$Operator;
+#toString()Ljava/lang/String;

+###org/teiid/language/Comparison
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Expression;Lorg/teiid/language/Expression;Lorg/teiid/language/Comparison$Operator;)V
+#getLeftExpression()Lorg/teiid/language/Expression;
+#getRightExpression()Lorg/teiid/language/Expression;
+#getOperator()Lorg/teiid/language/Comparison$Operator;
+#setLeftExpression(Lorg/teiid/language/Expression;)V
+#setRightExpression(Lorg/teiid/language/Expression;)V
+#setOperator(Lorg/teiid/language/Comparison$Operator;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V

+###org/teiid/language/Condition
@10.0.0.Alpha2
+#<init>()V
+#getType()Ljava/lang/Class;
+#isExpression()Z
+#setExpression(Z)V

+###org/teiid/language/Delete
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/NamedTable;Lorg/teiid/language/Condition;)V
+#getTable()Lorg/teiid/language/NamedTable;
+#getWhere()Lorg/teiid/language/Condition;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setTable(Lorg/teiid/language/NamedTable;)V
+#setWhere(Lorg/teiid/language/Condition;)V
+#getParameterValues()Ljava/util/Iterator;
+#setParameterValues(Ljava/util/Iterator;)V

+###org/teiid/language/DerivedColumn
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;Lorg/teiid/language/Expression;)V
+#getAlias()Ljava/lang/String;
+#getExpression()Lorg/teiid/language/Expression;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setAlias(Ljava/lang/String;)V
+#setExpression(Lorg/teiid/language/Expression;)V
+#isProjected()Z
+#setProjected(Z)V

+###org/teiid/language/DerivedTable
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/QueryExpression;Ljava/lang/String;)V
+#getCorrelationName()Ljava/lang/String;
+#setCorrelationName(Ljava/lang/String;)V
+#getQuery()Lorg/teiid/language/QueryExpression;
+#setQuery(Lorg/teiid/language/QueryExpression;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#isLateral()Z
+#setLateral(Z)V

+###org/teiid/language/Exists
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/QueryExpression;)V
+#getSubquery()Lorg/teiid/language/QueryExpression;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setSubquery(Lorg/teiid/language/QueryExpression;)V

+###org/teiid/language/Expression
@10.0.0.Alpha2
+#getType()Ljava/lang/Class;

+###org/teiid/language/ExpressionValueSource
@10.0.0.Alpha2
+#<init>(Ljava/util/List;)V
+#getValues()Ljava/util/List;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V

+###org/teiid/language/Function
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/Class;)V
+#getMetadataObject()Lorg/teiid/metadata/FunctionMethod;
+#setMetadataObject(Lorg/teiid/metadata/FunctionMethod;)V
+#getName()Ljava/lang/String;
+#getParameters()Ljava/util/List;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setName(Ljava/lang/String;)V
+#getType()Ljava/lang/Class;
+#setType(Ljava/lang/Class;)V
+#getMetadataObject()Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/language/GroupBy
@10.0.0.Alpha2
+#<init>(Ljava/util/List;)V
+#getElements()Ljava/util/List;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setElements(Ljava/util/List;)V
+#isRollup()Z
+#setRollup(Z)V

+###org/teiid/language/In
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Expression;Ljava/util/List;Z)V
+#getRightExpressions()Ljava/util/List;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setRightExpressions(Ljava/util/List;)V

+###org/teiid/language/Insert
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/NamedTable;Ljava/util/List;Lorg/teiid/language/InsertValueSource;)V
+#getTable()Lorg/teiid/language/NamedTable;
+#getColumns()Ljava/util/List;
+#getValueSource()Lorg/teiid/language/InsertValueSource;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setTable(Lorg/teiid/language/NamedTable;)V
+#setColumns(Ljava/util/List;)V
+#setValueSource(Lorg/teiid/language/InsertValueSource;)V
+#getParameterValues()Ljava/util/Iterator;
+#setParameterValues(Ljava/util/Iterator;)V
+#isUpsert()Z
+#setUpsert(Z)V

+###org/teiid/language/InsertValueSource
@10.0.0.Alpha2

+###org/teiid/language/IsDistinct
@10.0.0.CR2
+#<init>(Lorg/teiid/language/Expression;Lorg/teiid/language/Expression;Z)V
+#getLeftExpression()Lorg/teiid/language/Expression;
+#getRightExpression()Lorg/teiid/language/Expression;
+#setLeftExpression(Lorg/teiid/language/Expression;)V
+#setRightExpression(Lorg/teiid/language/Expression;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setNegated(Z)V
+#isNegated()Z

+###org/teiid/language/IsNull
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Expression;Z)V
+#getExpression()Lorg/teiid/language/Expression;
+#isNegated()Z
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setExpression(Lorg/teiid/language/Expression;)V
+#setNegated(Z)V

+###org/teiid/language/Join$JoinType
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/Join$JoinType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/Join$JoinType;

+###org/teiid/language/Join
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/TableReference;Lorg/teiid/language/TableReference;Lorg/teiid/language/Join$JoinType;Lorg/teiid/language/Condition;)V
+#getLeftItem()Lorg/teiid/language/TableReference;
+#getRightItem()Lorg/teiid/language/TableReference;
+#getJoinType()Lorg/teiid/language/Join$JoinType;
+#getCondition()Lorg/teiid/language/Condition;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setLeftItem(Lorg/teiid/language/TableReference;)V
+#setRightItem(Lorg/teiid/language/TableReference;)V
+#setJoinType(Lorg/teiid/language/Join$JoinType;)V
+#setCondition(Lorg/teiid/language/Condition;)V

+###org/teiid/language/LanguageFactory
@10.0.0.Alpha2
+#<init>()V
+#createAggregate(Ljava/lang/String;ZLorg/teiid/language/Expression;Ljava/lang/Class;)Lorg/teiid/language/AggregateFunction;
+#createCompareCriteria(Lorg/teiid/language/Comparison$Operator;Lorg/teiid/language/Expression;Lorg/teiid/language/Expression;)Lorg/teiid/language/Comparison;
+#createAndOr(Lorg/teiid/language/AndOr$Operator;Lorg/teiid/language/Condition;Lorg/teiid/language/Condition;)Lorg/teiid/language/AndOr;
+#createDelete(Lorg/teiid/language/NamedTable;Lorg/teiid/language/Condition;)Lorg/teiid/language/Delete;
+#createColumnReference(Ljava/lang/String;Lorg/teiid/language/NamedTable;Lorg/teiid/metadata/Column;Ljava/lang/Class;)Lorg/teiid/language/ColumnReference;
+#createExists(Lorg/teiid/language/Select;)Lorg/teiid/language/Exists;
+#createFunction(Ljava/lang/String;[Lorg/teiid/language/Expression;Ljava/lang/Class;)Lorg/teiid/language/Function;
+#createFunction(Ljava/lang/String;Ljava/util/List;Ljava/lang/Class;)Lorg/teiid/language/Function;
+#createNamedTable(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;)Lorg/teiid/language/NamedTable;
+#createGroupBy(Ljava/util/List;)Lorg/teiid/language/GroupBy;
+#createIn(Lorg/teiid/language/Expression;Ljava/util/List;Z)Lorg/teiid/language/In;
+#createInsert(Lorg/teiid/language/NamedTable;Ljava/util/List;Lorg/teiid/language/InsertValueSource;)Lorg/teiid/language/Insert;
+#createInsertExpressionValueSource(Ljava/util/List;)Lorg/teiid/language/ExpressionValueSource;
+#createIsNullCriteria(Lorg/teiid/language/Expression;Z)Lorg/teiid/language/IsNull;
+#createJoin(Lorg/teiid/language/Join$JoinType;Lorg/teiid/language/TableReference;Lorg/teiid/language/TableReference;Lorg/teiid/language/Condition;)Lorg/teiid/language/Join;
+#createLikeCriteria(Lorg/teiid/language/Expression;Lorg/teiid/language/Expression;Ljava/lang/Character;Z)Lorg/teiid/language/Like;
+#createLiteral(Ljava/lang/Object;Ljava/lang/Class;)Lorg/teiid/language/Literal;
+#createNot(Lorg/teiid/language/Condition;)Lorg/teiid/language/Not;
+#createOrderBy(Ljava/util/List;)Lorg/teiid/language/OrderBy;
+#createOrderByItem(Lorg/teiid/language/ColumnReference;Lorg/teiid/language/SortSpecification$Ordering;)Lorg/teiid/language/SortSpecification;
+#createArgument(Lorg/teiid/language/Argument$Direction;Lorg/teiid/language/Expression;Ljava/lang/Class;Lorg/teiid/metadata/ProcedureParameter;)Lorg/teiid/language/Argument;
+#createCall(Ljava/lang/String;Ljava/util/List;Lorg/teiid/metadata/Procedure;)Lorg/teiid/language/Call;
+#createQuery(Ljava/util/List;ZLjava/util/List;Lorg/teiid/language/Condition;Lorg/teiid/language/GroupBy;Lorg/teiid/language/Condition;Lorg/teiid/language/OrderBy;)Lorg/teiid/language/Select;
+#createScalarSubquery(Lorg/teiid/language/Select;)Lorg/teiid/language/ScalarSubquery;
+#createSearchedCaseExpression(Ljava/util/List;Lorg/teiid/language/Expression;Ljava/lang/Class;)Lorg/teiid/language/SearchedCase;
+#createSearchedWhenCondition(Lorg/teiid/language/Condition;Lorg/teiid/language/Expression;)Lorg/teiid/language/SearchedWhenClause;
+#createSelectSymbol(Ljava/lang/String;Lorg/teiid/language/Expression;)Lorg/teiid/language/DerivedColumn;
+#createSubqueryCompareCriteria(Lorg/teiid/language/Expression;Lorg/teiid/language/Comparison$Operator;Lorg/teiid/language/SubqueryComparison$Quantifier;Lorg/teiid/language/Select;)Lorg/teiid/language/SubqueryComparison;
+#createSubqueryInCriteria(Lorg/teiid/language/Expression;Lorg/teiid/language/Select;Z)Lorg/teiid/language/SubqueryIn;
+#createUpdate(Lorg/teiid/language/NamedTable;Ljava/util/List;Lorg/teiid/language/Condition;)Lorg/teiid/language/Update;
+#createInlineView(Lorg/teiid/language/QueryExpression;Ljava/lang/String;)Lorg/teiid/language/DerivedTable;
+#createSetOp(Lorg/teiid/language/SetQuery$Operation;ZLorg/teiid/language/QueryExpression;Lorg/teiid/language/QueryExpression;Lorg/teiid/language/OrderBy;Lorg/teiid/language/Limit;)Lorg/teiid/language/SetQuery;
+#createSetClause(Lorg/teiid/language/ColumnReference;Lorg/teiid/language/Expression;)Lorg/teiid/language/SetClause;

+###org/teiid/language/LanguageObject
@10.0.0.Alpha2
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V

+###org/teiid/language/LanguageUtil
@10.0.0.Alpha2
+#separateCriteriaByAnd(Lorg/teiid/language/Condition;)Ljava/util/List;
+#combineCriteria(Lorg/teiid/language/Condition;Lorg/teiid/language/Condition;Lorg/teiid/language/LanguageFactory;)Lorg/teiid/language/Condition;
+#combineCriteria(Ljava/util/List;)Lorg/teiid/language/Condition;

+###org/teiid/language/Like$MatchMode
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/Like$MatchMode;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/Like$MatchMode;

+###org/teiid/language/Like
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Expression;Lorg/teiid/language/Expression;Ljava/lang/Character;Z)V
+#getLeftExpression()Lorg/teiid/language/Expression;
+#getRightExpression()Lorg/teiid/language/Expression;
+#getEscapeCharacter()Ljava/lang/Character;
+#isNegated()Z
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setLeftExpression(Lorg/teiid/language/Expression;)V
+#setRightExpression(Lorg/teiid/language/Expression;)V
+#setEscapeCharacter(Ljava/lang/Character;)V
+#setNegated(Z)V
+#getMode()Lorg/teiid/language/Like$MatchMode;
+#setMode(Lorg/teiid/language/Like$MatchMode;)V

+###org/teiid/language/Limit
@10.0.0.Alpha2
+#<init>(II)V
+#getRowLimit()I
+#getRowOffset()I
+#setRowLimit(I)V
+#setRowOffset(I)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V

+###org/teiid/language/Literal
@10.0.0.Alpha2
+#<init>(Ljava/lang/Object;Ljava/lang/Class;)V
+#getValue()Ljava/lang/Object;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#getType()Ljava/lang/Class;
+#setValue(Ljava/lang/Object;)V
+#setType(Ljava/lang/Class;)V
+#isBindEligible()Z
+#setBindEligible(Z)V

+###org/teiid/language/MetadataReference
@10.0.0.Alpha2
+#getMetadataObject()Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/language/NamedProcedureCall
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Call;Ljava/lang/String;)V
+#getCorrelationName()Ljava/lang/String;
+#setCorrelationName(Ljava/lang/String;)V
+#getCall()Lorg/teiid/language/Call;
+#setCall(Lorg/teiid/language/Call;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#isLateral()Z
+#setLateral(Z)V

+###org/teiid/language/NamedTable
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;)V
+#getCorrelationName()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getMetadataObject()Lorg/teiid/metadata/Table;
+#setMetadataObject(Lorg/teiid/metadata/Table;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setName(Ljava/lang/String;)V
+#setCorrelationName(Ljava/lang/String;)V
+#getMetadataObject()Lorg/teiid/metadata/AbstractMetadataRecord;
@13.1.0
+#equals(Ljava/lang/Object;)Z
@16.0.0
+#hashCode()I

+###org/teiid/language/Not
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Condition;)V
+#getCriteria()Lorg/teiid/language/Condition;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setCriteria(Lorg/teiid/language/Condition;)V

+###org/teiid/language/OrderBy
@10.0.0.Alpha2
+#<init>(Ljava/util/List;)V
+#getSortSpecifications()Ljava/util/List;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setSortSpecifications(Ljava/util/List;)V

+###org/teiid/language/Parameter
@10.0.0.Alpha2
+#<init>()V
+#getType()Ljava/lang/Class;
+#setType(Ljava/lang/Class;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setValueIndex(I)V
+#getValueIndex()I
+#getDependentValueId()Ljava/lang/String;
+#setDependentValueId(Ljava/lang/String;)V

+###org/teiid/language/Predicate
@10.0.0.Alpha2

+###org/teiid/language/QueryExpression
@10.0.0.Alpha2
+#<init>()V
+#getProjectedQuery()Lorg/teiid/language/Select;
+#getOrderBy()Lorg/teiid/language/OrderBy;
+#getLimit()Lorg/teiid/language/Limit;
+#getColumnNames()[Ljava/lang/String;
+#getColumnTypes()[Ljava/lang/Class;
+#setOrderBy(Lorg/teiid/language/OrderBy;)V
+#setLimit(Lorg/teiid/language/Limit;)V
+#getWith()Lorg/teiid/language/With;
+#setWith(Lorg/teiid/language/With;)V

+###org/teiid/language/SQLConstants$NonReserved
@10.0.0.Alpha2

+###org/teiid/language/SQLConstants$Reserved
@10.0.0.Alpha2

+###org/teiid/language/SQLConstants$Tokens
@10.0.0.Alpha2

+###org/teiid/language/SQLConstants
@10.0.0.Alpha2
+#getNonReservedWords()Ljava/util/Set;
+#getReservedWords()Ljava/util/Set;
+#isReservedWord(Ljava/lang/String;)Z

+###org/teiid/language/ScalarSubquery
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/QueryExpression;)V
+#getSubquery()Lorg/teiid/language/QueryExpression;
+#setSubquery(Lorg/teiid/language/QueryExpression;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#getType()Ljava/lang/Class;

+###org/teiid/language/SearchedCase
@10.0.0.Alpha2
+#<init>(Ljava/util/List;Lorg/teiid/language/Expression;Ljava/lang/Class;)V
+#getElseExpression()Lorg/teiid/language/Expression;
+#getCases()Ljava/util/List;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setElseExpression(Lorg/teiid/language/Expression;)V
+#getType()Ljava/lang/Class;
+#setType(Ljava/lang/Class;)V

+###org/teiid/language/SearchedWhenClause
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Condition;Lorg/teiid/language/Expression;)V
+#getCondition()Lorg/teiid/language/Condition;
+#getResult()Lorg/teiid/language/Expression;
+#setCondition(Lorg/teiid/language/Condition;)V
+#setResult(Lorg/teiid/language/Expression;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V

+###org/teiid/language/Select
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/util/List;ZLjava/util/List;Lorg/teiid/language/Condition;Lorg/teiid/language/GroupBy;Lorg/teiid/language/Condition;Lorg/teiid/language/OrderBy;)V
+#getDerivedColumns()Ljava/util/List;
+#isDistinct()Z
+#setDerivedColumns(Ljava/util/List;)V
+#setDistinct(Z)V
+#getFrom()Ljava/util/List;
+#getWhere()Lorg/teiid/language/Condition;
+#getGroupBy()Lorg/teiid/language/GroupBy;
+#getHaving()Lorg/teiid/language/Condition;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setFrom(Ljava/util/List;)V
+#setWhere(Lorg/teiid/language/Condition;)V
+#setGroupBy(Lorg/teiid/language/GroupBy;)V
+#setHaving(Lorg/teiid/language/Condition;)V
+#getProjectedQuery()Lorg/teiid/language/Select;
+#getDependentValues()Ljava/util/Map;
+#setDependentValues(Ljava/util/Map;)V

+###org/teiid/language/SetClause
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/ColumnReference;Lorg/teiid/language/Expression;)V
+#getSymbol()Lorg/teiid/language/ColumnReference;
+#getValue()Lorg/teiid/language/Expression;
+#setSymbol(Lorg/teiid/language/ColumnReference;)V
+#setValue(Lorg/teiid/language/Expression;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V

+###org/teiid/language/SetQuery$Operation
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/SetQuery$Operation;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/SetQuery$Operation;

+###org/teiid/language/SetQuery
@10.0.0.Alpha2
+#<init>()V
+#getProjectedQuery()Lorg/teiid/language/Select;
+#getLeftQuery()Lorg/teiid/language/QueryExpression;
+#getOperation()Lorg/teiid/language/SetQuery$Operation;
+#getRightQuery()Lorg/teiid/language/QueryExpression;
+#isAll()Z
+#setAll(Z)V
+#setLeftQuery(Lorg/teiid/language/QueryExpression;)V
+#setOperation(Lorg/teiid/language/SetQuery$Operation;)V
+#setRightQuery(Lorg/teiid/language/QueryExpression;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V

+###org/teiid/language/SortSpecification$NullOrdering
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/SortSpecification$NullOrdering;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/SortSpecification$NullOrdering;

+###org/teiid/language/SortSpecification$Ordering
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/SortSpecification$Ordering;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/SortSpecification$Ordering;

+###org/teiid/language/SortSpecification
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/SortSpecification$Ordering;Lorg/teiid/language/Expression;)V
+#getOrdering()Lorg/teiid/language/SortSpecification$Ordering;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setOrdering(Lorg/teiid/language/SortSpecification$Ordering;)V
+#getExpression()Lorg/teiid/language/Expression;
+#setExpression(Lorg/teiid/language/Expression;)V
+#setNullOrdering(Lorg/teiid/language/SortSpecification$NullOrdering;)V
+#getNullOrdering()Lorg/teiid/language/SortSpecification$NullOrdering;

+###org/teiid/language/SubqueryComparison$Quantifier
@10.0.0.Alpha2
+#values()[Lorg/teiid/language/SubqueryComparison$Quantifier;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/SubqueryComparison$Quantifier;

+###org/teiid/language/SubqueryComparison
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Expression;Lorg/teiid/language/Comparison$Operator;Lorg/teiid/language/SubqueryComparison$Quantifier;Lorg/teiid/language/QueryExpression;)V
+#getLeftExpression()Lorg/teiid/language/Expression;
+#getOperator()Lorg/teiid/language/Comparison$Operator;
+#getQuantifier()Lorg/teiid/language/SubqueryComparison$Quantifier;
+#getSubquery()Lorg/teiid/language/QueryExpression;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setLeftExpression(Lorg/teiid/language/Expression;)V
+#setOperator(Lorg/teiid/language/Comparison$Operator;)V
+#setQuantifier(Lorg/teiid/language/SubqueryComparison$Quantifier;)V
+#setSubquery(Lorg/teiid/language/QueryExpression;)V

+###org/teiid/language/SubqueryContainer
@10.0.0.Alpha2
+#getSubquery()Lorg/teiid/language/QueryExpression;
+#setSubquery(Lorg/teiid/language/QueryExpression;)V

+###org/teiid/language/SubqueryIn
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/Expression;ZLorg/teiid/language/QueryExpression;)V
+#getSubquery()Lorg/teiid/language/QueryExpression;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setSubquery(Lorg/teiid/language/QueryExpression;)V

+###org/teiid/language/TableReference
@10.0.0.Alpha2

+###org/teiid/language/Update
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/NamedTable;Ljava/util/List;Lorg/teiid/language/Condition;)V
+#getTable()Lorg/teiid/language/NamedTable;
+#getChanges()Ljava/util/List;
+#getWhere()Lorg/teiid/language/Condition;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setTable(Lorg/teiid/language/NamedTable;)V
+#setChanges(Ljava/util/List;)V
+#setWhere(Lorg/teiid/language/Condition;)V
+#getParameterValues()Ljava/util/Iterator;
+#setParameterValues(Ljava/util/Iterator;)V

+###org/teiid/language/WindowFunction
@10.0.0.Alpha2
+#<init>()V
+#getFunction()Lorg/teiid/language/AggregateFunction;
+#setFunction(Lorg/teiid/language/AggregateFunction;)V
+#getWindowSpecification()Lorg/teiid/language/WindowSpecification;
+#setWindowSpecification(Lorg/teiid/language/WindowSpecification;)V
+#getType()Ljava/lang/Class;
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/teiid/language/WindowSpecification
@10.0.0.Alpha2
+#<init>()V
+#getPartition()Ljava/util/List;
+#setPartition(Ljava/util/List;)V
+#getOrderBy()Lorg/teiid/language/OrderBy;
+#setOrderBy(Lorg/teiid/language/OrderBy;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@11.2.0
+#getWindowFrame()Lorg/teiid/language/WindowFrame;
+#setWindowFrame(Lorg/teiid/language/WindowFrame;)V

+###org/teiid/language/With
@10.0.0.Alpha2
+#<init>()V
+#getItems()Ljava/util/List;
+#setItems(Ljava/util/List;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V

+###org/teiid/language/WithItem
@10.0.0.Alpha2
+#<init>()V
+#getTable()Lorg/teiid/language/NamedTable;
+#setTable(Lorg/teiid/language/NamedTable;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)V
+#getSubquery()Lorg/teiid/language/QueryExpression;
+#setSubquery(Lorg/teiid/language/QueryExpression;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#setDependentValues(Ljava/util/List;)V
+#getDependentValues()Ljava/util/List;
+#isRecusive()Z
+#setRecusive(Z)V

+###org/teiid/language/visitor/AbstractLanguageVisitor
@10.0.0.Alpha2
+#visitNode(Lorg/teiid/language/LanguageObject;)V
+#visitNodes(Ljava/util/Collection;)V
+#visitNodes([Lorg/teiid/language/LanguageObject;)V
+#visit(Lorg/teiid/language/AggregateFunction;)V
+#visit(Lorg/teiid/language/BatchedUpdates;)V
+#visit(Lorg/teiid/language/Comparison;)V
+#visit(Lorg/teiid/language/AndOr;)V
+#visit(Lorg/teiid/language/Delete;)V
+#visit(Lorg/teiid/language/ColumnReference;)V
+#visit(Lorg/teiid/language/Call;)V
+#visit(Lorg/teiid/language/Exists;)V
+#visit(Lorg/teiid/language/Function;)V
+#visit(Lorg/teiid/language/NamedTable;)V
+#visit(Lorg/teiid/language/GroupBy;)V
+#visit(Lorg/teiid/language/In;)V
+#visit(Lorg/teiid/language/DerivedTable;)V
+#visit(Lorg/teiid/language/Insert;)V
+#visit(Lorg/teiid/language/ExpressionValueSource;)V
+#visit(Lorg/teiid/language/IsNull;)V
+#visit(Lorg/teiid/language/Join;)V
+#visit(Lorg/teiid/language/Like;)V
+#visit(Lorg/teiid/language/Limit;)V
+#visit(Lorg/teiid/language/Literal;)V
+#visit(Lorg/teiid/language/Not;)V
+#visit(Lorg/teiid/language/OrderBy;)V
+#visit(Lorg/teiid/language/SortSpecification;)V
+#visit(Lorg/teiid/language/Argument;)V
+#visit(Lorg/teiid/language/Select;)V
+#visit(Lorg/teiid/language/ScalarSubquery;)V
+#visit(Lorg/teiid/language/SearchedCase;)V
+#visit(Lorg/teiid/language/DerivedColumn;)V
+#visit(Lorg/teiid/language/SubqueryComparison;)V
+#visit(Lorg/teiid/language/SubqueryIn;)V
+#visit(Lorg/teiid/language/Update;)V
+#visit(Lorg/teiid/language/SetQuery;)V
+#visit(Lorg/teiid/language/SetClause;)V
+#visit(Lorg/teiid/language/SearchedWhenClause;)V
+#visit(Lorg/teiid/language/Parameter;)V
+#visit(Lorg/teiid/language/WindowFunction;)V
+#visit(Lorg/teiid/language/WindowSpecification;)V
+#visit(Lorg/teiid/language/With;)V
+#visit(Lorg/teiid/language/WithItem;)V
+#visit(Lorg/teiid/language/Array;)V
+#visit(Lorg/teiid/language/NamedProcedureCall;)V
@10.0.1
+#visit(Lorg/teiid/language/IsDistinct;)V
@11.2.0
+#visit(Lorg/teiid/language/WindowFrame;)V

+###org/teiid/language/visitor/CollectorVisitor
@10.0.0.Alpha2
+#<init>(Ljava/lang/Class;)V
+#visitNode(Lorg/teiid/language/LanguageObject;)V
+#getCollectedObjects()Ljava/util/Collection;
+#collectObjects(Ljava/lang/Class;Lorg/teiid/language/LanguageObject;)Ljava/util/Collection;
+#collectElements(Lorg/teiid/language/LanguageObject;)Ljava/util/Collection;
+#collectGroups(Lorg/teiid/language/LanguageObject;)Ljava/util/Collection;
+#collectGroupsUsedByElements(Lorg/teiid/language/LanguageObject;)Ljava/util/Set;

+###org/teiid/language/visitor/DelegatingHierarchyVisitor
@10.0.0.Alpha2
+#<init>(Lorg/teiid/language/visitor/LanguageObjectVisitor;Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#visitNode(Lorg/teiid/language/LanguageObject;)V
+#preOrderVisit(Lorg/teiid/language/visitor/LanguageObjectVisitor;Lorg/teiid/language/LanguageObject;)V
+#postOrderVisit(Lorg/teiid/language/visitor/LanguageObjectVisitor;Lorg/teiid/language/LanguageObject;)V

+###org/teiid/language/visitor/HierarchyVisitor
@10.0.0.Alpha2
+#<init>()V
+#<init>(Z)V
+#visit(Lorg/teiid/language/AggregateFunction;)V
+#visit(Lorg/teiid/language/BatchedUpdates;)V
+#visit(Lorg/teiid/language/Comparison;)V
+#visit(Lorg/teiid/language/AndOr;)V
+#visit(Lorg/teiid/language/Delete;)V
+#visit(Lorg/teiid/language/Call;)V
+#visit(Lorg/teiid/language/Exists;)V
+#visit(Lorg/teiid/language/Function;)V
+#visit(Lorg/teiid/language/GroupBy;)V
+#visit(Lorg/teiid/language/In;)V
+#visit(Lorg/teiid/language/Insert;)V
+#visit(Lorg/teiid/language/ExpressionValueSource;)V
+#visit(Lorg/teiid/language/IsNull;)V
+#visit(Lorg/teiid/language/Join;)V
+#visit(Lorg/teiid/language/Like;)V
+#visit(Lorg/teiid/language/Not;)V
+#visit(Lorg/teiid/language/OrderBy;)V
+#visit(Lorg/teiid/language/SortSpecification;)V
+#visit(Lorg/teiid/language/Select;)V
+#visit(Lorg/teiid/language/ScalarSubquery;)V
+#visit(Lorg/teiid/language/SearchedCase;)V
+#visit(Lorg/teiid/language/SearchedWhenClause;)V
+#visit(Lorg/teiid/language/DerivedColumn;)V
+#visit(Lorg/teiid/language/SubqueryComparison;)V
+#visit(Lorg/teiid/language/SubqueryIn;)V
+#visit(Lorg/teiid/language/SetQuery;)V
+#visit(Lorg/teiid/language/Update;)V
+#visit(Lorg/teiid/language/DerivedTable;)V
+#visit(Lorg/teiid/language/NamedProcedureCall;)V
+#visit(Lorg/teiid/language/SetClause;)V
+#visit(Lorg/teiid/language/With;)V
+#visit(Lorg/teiid/language/WithItem;)V
+#visit(Lorg/teiid/language/WindowFunction;)V
+#visit(Lorg/teiid/language/WindowSpecification;)V
@10.0.0.CR2
+#visit(Lorg/teiid/language/IsDistinct;)V
@12.0.0
+#visit(Lorg/teiid/language/Array;)V

+###org/teiid/language/visitor/LanguageObjectVisitor
@10.0.0.Alpha2
+#visit(Lorg/teiid/language/AggregateFunction;)V
+#visit(Lorg/teiid/language/BatchedUpdates;)V
+#visit(Lorg/teiid/language/ExpressionValueSource;)V
+#visit(Lorg/teiid/language/Comparison;)V
+#visit(Lorg/teiid/language/AndOr;)V
+#visit(Lorg/teiid/language/Delete;)V
+#visit(Lorg/teiid/language/ColumnReference;)V
+#visit(Lorg/teiid/language/Call;)V
+#visit(Lorg/teiid/language/Exists;)V
+#visit(Lorg/teiid/language/Function;)V
+#visit(Lorg/teiid/language/NamedTable;)V
+#visit(Lorg/teiid/language/GroupBy;)V
+#visit(Lorg/teiid/language/In;)V
+#visit(Lorg/teiid/language/DerivedTable;)V
+#visit(Lorg/teiid/language/Insert;)V
+#visit(Lorg/teiid/language/IsNull;)V
+#visit(Lorg/teiid/language/Join;)V
+#visit(Lorg/teiid/language/Like;)V
+#visit(Lorg/teiid/language/Limit;)V
+#visit(Lorg/teiid/language/Literal;)V
+#visit(Lorg/teiid/language/Not;)V
+#visit(Lorg/teiid/language/OrderBy;)V
+#visit(Lorg/teiid/language/SortSpecification;)V
+#visit(Lorg/teiid/language/Argument;)V
+#visit(Lorg/teiid/language/Select;)V
+#visit(Lorg/teiid/language/ScalarSubquery;)V
+#visit(Lorg/teiid/language/SearchedCase;)V
+#visit(Lorg/teiid/language/DerivedColumn;)V
+#visit(Lorg/teiid/language/SubqueryComparison;)V
+#visit(Lorg/teiid/language/SubqueryIn;)V
+#visit(Lorg/teiid/language/Update;)V
+#visit(Lorg/teiid/language/SetQuery;)V
+#visit(Lorg/teiid/language/SetClause;)V
+#visit(Lorg/teiid/language/SearchedWhenClause;)V
+#visit(Lorg/teiid/language/With;)V
+#visit(Lorg/teiid/language/WithItem;)V
+#visit(Lorg/teiid/language/WindowFunction;)V
+#visit(Lorg/teiid/language/WindowSpecification;)V
+#visit(Lorg/teiid/language/Parameter;)V
+#visit(Lorg/teiid/language/Array;)V
+#visit(Lorg/teiid/language/NamedProcedureCall;)V
@10.0.0.CR2
+#visit(Lorg/teiid/language/IsDistinct;)V
@11.2.0
+#visit(Lorg/teiid/language/WindowFrame;)V

+###org/teiid/language/visitor/SQLStringVisitor$Substitutor
@10.0.0.Alpha2
+#substitute(Lorg/teiid/language/Argument;Ljava/lang/StringBuilder;I)V

+###org/teiid/language/visitor/SQLStringVisitor
@10.0.0.Alpha2
+#<init>()V
+#getRecordName(Lorg/teiid/metadata/AbstractMetadataRecord;)Ljava/lang/String;
+#append(Lorg/teiid/language/LanguageObject;)V
+#toString()Ljava/lang/String;
+#visit(Lorg/teiid/language/AggregateFunction;)V
+#visit(Lorg/teiid/language/Comparison;)V
+#visit(Lorg/teiid/language/AndOr;)V
+#visit(Lorg/teiid/language/Delete;)V
+#visit(Lorg/teiid/language/ColumnReference;)V
+#getShortName(Ljava/lang/String;)Ljava/lang/String;
+#visit(Lorg/teiid/language/Call;)V
+#visit(Lorg/teiid/language/Exists;)V
+#visit(Lorg/teiid/language/Function;)V
+#visit(Lorg/teiid/language/NamedTable;)V
+#visit(Lorg/teiid/language/GroupBy;)V
+#visit(Lorg/teiid/language/In;)V
+#visit(Lorg/teiid/language/DerivedTable;)V
+#visit(Lorg/teiid/language/NamedProcedureCall;)V
+#visit(Lorg/teiid/language/Insert;)V
+#visit(Lorg/teiid/language/ExpressionValueSource;)V
+#visit(Lorg/teiid/language/Parameter;)V
+#visit(Lorg/teiid/language/IsNull;)V
+#visit(Lorg/teiid/language/Join;)V
+#visit(Lorg/teiid/language/Like;)V
+#visit(Lorg/teiid/language/Limit;)V
+#visit(Lorg/teiid/language/Literal;)V
+#visit(Lorg/teiid/language/Not;)V
+#visit(Lorg/teiid/language/OrderBy;)V
+#visit(Lorg/teiid/language/SortSpecification;)V
+#visit(Lorg/teiid/language/Argument;)V
+#visit(Lorg/teiid/language/Select;)V
+#visit(Lorg/teiid/language/SearchedCase;)V
+#visit(Lorg/teiid/language/SearchedWhenClause;)V
+#visit(Lorg/teiid/language/ScalarSubquery;)V
+#visit(Lorg/teiid/language/DerivedColumn;)V
+#visit(Lorg/teiid/language/SubqueryComparison;)V
+#visit(Lorg/teiid/language/SubqueryIn;)V
+#visit(Lorg/teiid/language/Update;)V
+#visit(Lorg/teiid/language/SetClause;)V
+#visit(Lorg/teiid/language/SetQuery;)V
+#visit(Lorg/teiid/language/With;)V
+#visit(Lorg/teiid/language/WithItem;)V
+#visit(Lorg/teiid/language/WindowFunction;)V
+#visit(Lorg/teiid/language/WindowSpecification;)V
+#visit(Lorg/teiid/language/Array;)V
+#getSQLString(Lorg/teiid/language/LanguageObject;)Ljava/lang/String;
+#parseNativeQueryParts(Ljava/lang/String;Ljava/util/List;Ljava/lang/StringBuilder;Lorg/teiid/language/visitor/SQLStringVisitor$Substitutor;)V
@10.0.0.CR2
+#visit(Lorg/teiid/language/IsDistinct;)V
@11.2.0
+#visit(Lorg/teiid/language/WindowFrame;)V

+###org/teiid/logging/AuditMessage$LogonInfo
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#getVdbName()Ljava/lang/String;
+#getVdbVersion()Ljava/lang/String;
+#getAuthType()Ljava/lang/String;
+#getUserName()Ljava/lang/String;
+#getApplicationName()Ljava/lang/String;
+#getClientHostName()Ljava/lang/String;
+#getClientIpAddress()Ljava/lang/String;
+#getClientMac()Ljava/lang/String;
+#isPassThrough()Z
+#toString()Ljava/lang/String;

+###org/teiid/logging/AuditMessage
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lorg/teiid/CommandContext;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/logging/AuditMessage$LogonInfo;Ljava/lang/Exception;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/adminapi/Session;)V
+#getLogonInfo()Lorg/teiid/logging/AuditMessage$LogonInfo;
+#getSession()Lorg/teiid/adminapi/Session;
+#getContext()Ljava/lang/String;
+#getActivity()Ljava/lang/String;
+#getPrincipal()Ljava/lang/String;
+#getResources()[Ljava/lang/String;
+#getCommandContext()Lorg/teiid/CommandContext;
+#getException()Ljava/lang/Exception;
+#toString()Ljava/lang/String;

+###org/teiid/logging/CommandLogMessage$Event
@10.0.0.Alpha2
+#values()[Lorg/teiid/logging/CommandLogMessage$Event;
+#valueOf(Ljava/lang/String;)Lorg/teiid/logging/CommandLogMessage$Event;

+###org/teiid/logging/CommandLogMessage
@10.0.0.Alpha2
+#<init>(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)V
+#<init>(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Lorg/teiid/logging/CommandLogMessage$Event;Lorg/teiid/client/plan/PlanNode;)V
+#<init>(JLjava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/teiid/translator/ExecutionContext;)V
+#<init>(JLjava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Lorg/teiid/logging/CommandLogMessage$Event;Lorg/teiid/translator/ExecutionContext;Ljava/lang/Long;)V
+#toString()Ljava/lang/String;
+#getTimestamp()J
+#getTransactionID()Ljava/lang/String;
+#getSessionID()Ljava/lang/String;
+#getApplicationName()Ljava/lang/String;
+#getPrincipal()Ljava/lang/String;
+#getVdbName()Ljava/lang/String;
+#getVdbVersion()Ljava/lang/String;
+#getRequestID()Ljava/lang/String;
+#getSourceCommandID()Ljava/lang/Long;
+#getSql()Ljava/lang/String;
+#getRowCount()Ljava/lang/Long;
+#getModelName()Ljava/lang/String;
+#getConnectorBindingName()Ljava/lang/String;
+#getTranslatorName()Ljava/lang/String;
+#getStatus()Lorg/teiid/logging/CommandLogMessage$Event;
+#isSource()Z
+#getExecutionContext()Lorg/teiid/translator/ExecutionContext;
+#getPlan()Lorg/teiid/client/plan/PlanNode;
+#getCpuTime()Ljava/lang/Long;
+#setSourceCommand([Ljava/lang/Object;)V
+#getSourceCommand()[Ljava/lang/Object;

+###org/teiid/logging/JavaLogger
@10.0.0.Alpha2
+#<init>()V
+#isEnabled(Ljava/lang/String;I)Z
+#log(ILjava/lang/String;[Ljava/lang/Object;)V
+#log(ILjava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V
+#convertLevel(I)Ljava/util/logging/Level;
+#shutdown()V
+#putMdc(Ljava/lang/String;Ljava/lang/String;)V
+#removeMdc(Ljava/lang/String;)V

+###org/teiid/logging/LogConstants
@10.0.0.Alpha2

+###org/teiid/logging/LogManager$LoggingProxy
@10.0.0.Alpha2
+#<init>(Ljava/lang/Object;Ljava/lang/String;I)V
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/teiid/logging/LogManager
@10.0.0.Alpha2
+#<init>()V
+#logCritical(Ljava/lang/String;Ljava/lang/Object;)V
+#logCritical(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/Object;)V
+#logError(Ljava/lang/String;Ljava/lang/Object;)V
+#logError(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/Object;)V
+#logWarning(Ljava/lang/String;Ljava/lang/Object;)V
+#logWarning(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/Object;)V
+#logInfo(Ljava/lang/String;Ljava/lang/Object;)V
+#logDetail(Ljava/lang/String;Ljava/lang/Object;)V
+#logDetail(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#logDetail(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#logDetail(Ljava/lang/String;[Ljava/lang/Object;)V
+#logDetail(Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V
+#logTrace(Ljava/lang/String;[Ljava/lang/Object;)V
+#logTrace(Ljava/lang/String;Ljava/lang/Object;)V
+#logTrace(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#logTrace(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#logTrace(Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V
+#log(ILjava/lang/String;Ljava/lang/Object;)V
+#log(ILjava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V
+#setLogListener(Lorg/teiid/logging/Logger;)V
+#isMessageToBeRecorded(Ljava/lang/String;I)Z
+#createLoggingProxy(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Class;I)Ljava/lang/Object;
+#createLoggingProxy(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Class;ILjava/lang/ClassLoader;)Ljava/lang/Object;
+#putMdc(Ljava/lang/String;Ljava/lang/String;)V
+#removeMdc(Ljava/lang/String;)V
@11.0.0
+#setLogListener(Lorg/teiid/logging/Logger;)Lorg/teiid/logging/Logger;
-#setLogListener(Lorg/teiid/logging/Logger;)V

+###org/teiid/logging/Logger
@10.0.0.Alpha2
+#isEnabled(Ljava/lang/String;I)Z
+#log(ILjava/lang/String;[Ljava/lang/Object;)V
+#log(ILjava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V
+#shutdown()V
+#putMdc(Ljava/lang/String;Ljava/lang/String;)V
+#removeMdc(Ljava/lang/String;)V

+###org/teiid/logging/MessageLevel$DisplayNames
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/logging/MessageLevel$Labels
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/logging/MessageLevel
@10.0.0.Alpha2
+#<init>()V
+#isMessageLevelValid(I)Z
+#getValidLowerMessageLevel()I
+#getValidUpperMessageLevel()I
+#getLabelForLevel(I)Ljava/lang/String;
+#getMinimumLevel()I
+#getMaximumLevel()I
+#getDisplayNames()Ljava/util/Collection;
+#getLabels()Ljava/util/List;

+###org/teiid/metadata/AbstractMetadataRecord$DataModifiable
@10.0.0.Alpha2
+#getLastDataModification()J

+###org/teiid/metadata/AbstractMetadataRecord$Modifiable
@10.0.0.Alpha2
+#getLastModified()J

+###org/teiid/metadata/AbstractMetadataRecord
@10.0.0.Alpha2
+#<init>()V
+#getUUID()Ljava/lang/String;
+#setUUID(Ljava/lang/String;)V
+#getNameInSource()Ljava/lang/String;
+#setNameInSource(Ljava/lang/String;)V
+#getSourceName()Ljava/lang/String;
+#getFullName()Ljava/lang/String;
+#getSQLString(Ljava/lang/StringBuilder;)V
+#getSQLString()Ljava/lang/String;
+#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getCanonicalName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getProperties()Ljava/util/Map;
+#getProperty(Ljava/lang/String;Z)Ljava/lang/String;
+#setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#setProperties(Ljava/util/Map;)V
+#getAnnotation()Ljava/lang/String;
+#setAnnotation(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getIncomingObjects()Ljava/util/Collection;
+#setIncomingObjects(Ljava/util/Collection;)V
+#isUUIDSet()Z
@12.3.0
+#getIdentifier()Ljava/lang/String;
@13.0.1
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
*#getProperty(Ljava/lang/String;Z)Ljava/lang/String;[deprecated]

+###org/teiid/metadata/AggregateAttributes
@10.0.0.Alpha2
+#<init>()V
+#allowsOrderBy()Z
+#setAllowsOrderBy(Z)V
+#isAnalytic()Z
+#setAnalytic(Z)V
+#usesDistinctRows()Z
+#setUsesDistinctRows(Z)V
+#isDecomposable()Z
+#setDecomposable(Z)V
+#allowsDistinct()Z
+#setAllowsDistinct(Z)V

+###org/teiid/metadata/BaseColumn$NullType
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/BaseColumn$NullType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/BaseColumn$NullType;

+###org/teiid/metadata/BaseColumn
@10.0.0.Alpha2
+#<init>()V
+#getDefaultValue()Ljava/lang/String;
+#getDatatypeUUID()Ljava/lang/String;
+#getRuntimeType()Ljava/lang/String;
+#getJavaType()Ljava/lang/Class;
+#getLength()I
+#getPrecision()I
+#getScale()I
+#isDefaultPrecisionScale()Z
+#getRadix()I
+#getPosition()I
+#getNullType()Lorg/teiid/metadata/BaseColumn$NullType;
+#setLength(I)V
+#setPrecision(I)V
+#setScale(I)V
+#setRadix(I)V
+#setNullType(Lorg/teiid/metadata/BaseColumn$NullType;)V
+#setPosition(I)V
+#setRuntimeType(Ljava/lang/String;)V
+#setDatatypeUUID(Ljava/lang/String;)V
+#setDefaultValue(Ljava/lang/String;)V
+#getDatatype()Lorg/teiid/metadata/Datatype;
+#setDatatype(Lorg/teiid/metadata/Datatype;)V
+#setDatatype(Lorg/teiid/metadata/Datatype;Z)V
+#setDatatype(Lorg/teiid/metadata/Datatype;ZI)V
+#getArrayDimensions()I
+#getNativeType()Ljava/lang/String;
+#setNativeType(Ljava/lang/String;)V

+###org/teiid/metadata/Column$SearchType
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/Column$SearchType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Column$SearchType;

+###org/teiid/metadata/Column
@10.0.0.Alpha2
+#<init>()V
+#setDatatype(Lorg/teiid/metadata/Datatype;ZI)V
+#setParent(Lorg/teiid/metadata/ColumnSet;)V
+#getParent()Lorg/teiid/metadata/ColumnSet;
+#compareTo(Lorg/teiid/metadata/Column;)I
+#getCharOctetLength()I
+#getMaximumValue()Ljava/lang/String;
+#getMinimumValue()Ljava/lang/String;
+#getSearchType()Lorg/teiid/metadata/Column$SearchType;
+#isSearchTypeSet()Z
+#getFormat()Ljava/lang/String;
+#isAutoIncremented()Z
+#isCaseSensitive()Z
+#isCurrency()Z
+#isFixedLength()Z
+#isSelectable()Z
+#isSigned()Z
+#isUpdatable()Z
+#getNativeType()Ljava/lang/String;
+#getNullValues()I
+#getNullValuesAsFloat()F
+#getDistinctValues()I
+#getDistinctValuesAsFloat()F
+#setAutoIncremented(Z)V
+#setCaseSensitive(Z)V
+#setCharOctetLength(I)V
+#setCurrency(Z)V
+#setFixedLength(Z)V
+#setMaximumValue(Ljava/lang/String;)V
+#setMinimumValue(Ljava/lang/String;)V
+#setSearchType(Lorg/teiid/metadata/Column$SearchType;)V
+#setSelectable(Z)V
+#setSigned(Z)V
+#setUpdatable(Z)V
+#setFormat(Ljava/lang/String;)V
+#setDistinctValues(I)V
+#setDistinctValues(J)V
+#setNullValues(I)V
+#setNullValues(J)V
+#setNativeType(Ljava/lang/String;)V
+#setColumnStats(Lorg/teiid/metadata/ColumnStats;)V
+#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;
+#compareTo(Ljava/lang/Object;)I

+###org/teiid/metadata/ColumnSet
@10.0.0.Alpha2
+#<init>()V
+#getColumns()Ljava/util/List;
+#getColumnByName(Ljava/lang/String;)Lorg/teiid/metadata/Column;
+#addColumn(Lorg/teiid/metadata/Column;)V
+#removeColumn(Lorg/teiid/metadata/Column;)V
+#setColumns(Ljava/util/List;)V
+#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;
+#setParent(Lorg/teiid/metadata/AbstractMetadataRecord;)V

+###org/teiid/metadata/ColumnStats
@10.0.0.Alpha2
+#<init>()V
+#getMinimumValue()Ljava/lang/String;
+#setMinimumValue(Ljava/lang/String;)V
+#getMaximumValue()Ljava/lang/String;
+#setMaximumValue(Ljava/lang/String;)V
+#getDistinctValues()Ljava/lang/Number;
+#setDistinctValues(Ljava/lang/Number;)V
+#getNullValues()Ljava/lang/Number;
+#setNullValues(Ljava/lang/Number;)V

+###org/teiid/metadata/DataWrapper
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V

+###org/teiid/metadata/Database$ResourceType
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/Database$ResourceType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Database$ResourceType;

+###org/teiid/metadata/Database
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#addSchema(Lorg/teiid/metadata/Schema;)V
+#getSchema(Ljava/lang/String;)Lorg/teiid/metadata/Schema;
+#getSchemas()Ljava/util/List;
+#removeSchema(Ljava/lang/String;)Lorg/teiid/metadata/Schema;
+#getMetadataStore()Lorg/teiid/metadata/MetadataStore;
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V
+#addDataWrapper(Lorg/teiid/metadata/DataWrapper;)V
+#removeDataWrapper(Ljava/lang/String;)Lorg/teiid/metadata/DataWrapper;
+#getDataWrapper(Ljava/lang/String;)Lorg/teiid/metadata/DataWrapper;
+#getDataWrappers()Ljava/util/List;
+#addServer(Lorg/teiid/metadata/Server;)V
+#removeServer(Ljava/lang/String;)Lorg/teiid/metadata/Server;
+#getServer(Ljava/lang/String;)Lorg/teiid/metadata/Server;
+#getServers()Ljava/util/List;
+#resolveNamespaceInPropertyKey(Ljava/lang/String;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getRole(Ljava/lang/String;)Lorg/teiid/metadata/Role;
+#getRoles()Ljava/util/Collection;
+#addRole(Lorg/teiid/metadata/Role;)V
+#removeRole(Ljava/lang/String;)V
+#addGrant(Lorg/teiid/metadata/Grant;)V
+#revokeGrant(Lorg/teiid/metadata/Grant;)V
+#getGrants()Ljava/util/Collection;
+#addDomain(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Z)Lorg/teiid/metadata/Datatype;
+#addNamespace(Ljava/lang/String;Ljava/lang/String;)V
+#getNamespaces()Ljava/util/Map;
@11.2.1
+#getNamespaceContainer()Lorg/teiid/metadata/NamespaceContainer;
@13.0.1
-#getNamespaces()Ljava/util/Map;
@13.1.0
+#findRole(Ljava/lang/String;)Lorg/teiid/metadata/Role;
+#addPolicy(Ljava/lang/String;Lorg/teiid/metadata/Policy;)V
+#removePolicy(Ljava/lang/String;Lorg/teiid/metadata/Policy;)V
-#getGrants()Ljava/util/Collection;

+###org/teiid/metadata/Datatype$Type
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/Datatype$Type;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Datatype$Type;

+###org/teiid/metadata/Datatype$Variety
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/Datatype$Variety;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Datatype$Variety;

+###org/teiid/metadata/Datatype
@10.0.0.Alpha2
+#<init>()V
+#getLength()I
+#getPrecisionLength()I
+#getPrecision()I
+#getScale()I
+#getRadix()I
+#isSigned()Z
+#isAutoIncrement()Z
+#isCaseSensitive()Z
+#getType()Lorg/teiid/metadata/Datatype$Type;
+#isBuiltin()Z
+#getSearchType()Lorg/teiid/metadata/Column$SearchType;
+#getNullType()Lorg/teiid/metadata/BaseColumn$NullType;
+#getJavaClassName()Ljava/lang/String;
+#getRuntimeTypeName()Ljava/lang/String;
+#getBasetypeName()Ljava/lang/String;
+#setBasetypeName(Ljava/lang/String;)V
+#getVarietyType()Lorg/teiid/metadata/Datatype$Variety;
+#setAutoIncrement(Z)V
+#setCaseSensitive(Z)V
+#setSigned(Z)V
+#setJavaClassName(Ljava/lang/String;)V
+#setLength(I)V
+#setNullType(Lorg/teiid/metadata/BaseColumn$NullType;)V
+#setPrecision(I)V
+#setPrecisionLength(I)V
+#setRadix(I)V
+#setRuntimeTypeName(Ljava/lang/String;)V
+#setScale(I)V
+#setSearchType(Lorg/teiid/metadata/Column$SearchType;)V
+#setType(Lorg/teiid/metadata/Datatype$Type;)V
+#setVarietyType(Lorg/teiid/metadata/Datatype$Variety;)V
+#toString()Ljava/lang/String;
+#clone()Lorg/teiid/metadata/Datatype;
+#clone()Ljava/lang/Object;

+###org/teiid/metadata/DefaultMetadataRepository
@10.0.0.Alpha2
+#<init>()V
+#loadMetadata(Lorg/teiid/metadata/MetadataFactory;Lorg/teiid/translator/ExecutionFactory;Ljava/lang/Object;)V
+#startLoadVdb(Ljava/lang/String;Ljava/lang/String;)V
+#endLoadVdb(Ljava/lang/String;Ljava/lang/String;)V
+#getColumnStats(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Column;)Lorg/teiid/metadata/ColumnStats;
+#getInsteadOfTriggerDefinition(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;Lorg/teiid/metadata/Table$TriggerEvent;)Ljava/lang/String;
+#getProcedureDefinition(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Procedure;)Ljava/lang/String;
+#getTableStats(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/TableStats;
+#getViewDefinition(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;)Ljava/lang/String;
+#getProperties(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/AbstractMetadataRecord;)Ljava/util/LinkedHashMap;
+#isInsteadOfTriggerEnabled(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;Lorg/teiid/metadata/Table$TriggerEvent;)Ljava/lang/Boolean;

+###org/teiid/metadata/DuplicateRecordException
@10.0.0.Alpha2
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V

+###org/teiid/metadata/ExtensionMetadataProperty
@10.0.0.Alpha2
+#applicable()[Ljava/lang/Class;
+#display()Ljava/lang/String;
+#description()Ljava/lang/String;
+#required()Z
+#datatype()Ljava/lang/Class;
+#allowed()Ljava/lang/String;

+###org/teiid/metadata/ForeignKey
@10.0.0.Alpha2
+#<init>()V
+#getUniqueKeyID()Ljava/lang/String;
+#setUniqueKeyID(Ljava/lang/String;)V
+#getPrimaryKey()Lorg/teiid/metadata/KeyRecord;
+#getReferenceKey()Lorg/teiid/metadata/KeyRecord;
+#setReferenceKey(Lorg/teiid/metadata/KeyRecord;)V
+#setPrimaryKey(Lorg/teiid/metadata/KeyRecord;)V
+#getReferenceTableName()Ljava/lang/String;
+#setReferenceTableName(Ljava/lang/String;)V
+#getReferenceColumns()Ljava/util/List;
+#setReferenceColumns(Ljava/util/List;)V

+###org/teiid/metadata/FunctionMethod$Determinism
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/FunctionMethod$Determinism;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/FunctionMethod$Determinism;

+###org/teiid/metadata/FunctionMethod$PushDown
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/FunctionMethod$PushDown;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/FunctionMethod$PushDown;

+###org/teiid/metadata/FunctionMethod
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Lorg/teiid/metadata/FunctionParameter;Lorg/teiid/metadata/FunctionParameter;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/FunctionMethod$PushDown;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lorg/teiid/metadata/FunctionParameter;ZLorg/teiid/metadata/FunctionMethod$Determinism;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Lorg/teiid/metadata/FunctionParameter;Lorg/teiid/metadata/FunctionParameter;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getCategory()Ljava/lang/String;
+#setCategory(Ljava/lang/String;)V
+#getPushdown()Lorg/teiid/metadata/FunctionMethod$PushDown;
+#setPushdown(Lorg/teiid/metadata/FunctionMethod$PushDown;)V
+#setPushDown(Ljava/lang/String;)V
+#getInvocationClass()Ljava/lang/String;
+#setInvocationClass(Ljava/lang/String;)V
+#getInvocationMethod()Ljava/lang/String;
+#setInvocationMethod(Ljava/lang/String;)V
+#getInputParameterCount()I
+#getInputParameters()Ljava/util/List;
+#setInputParameters(Ljava/util/List;)V
+#getOutputParameter()Lorg/teiid/metadata/FunctionParameter;
+#setOutputParameter(Lorg/teiid/metadata/FunctionParameter;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#isNullOnNull()Z
+#setNullOnNull(Z)V
+#getDeterminism()Lorg/teiid/metadata/FunctionMethod$Determinism;
+#setDeterministicBoolean(Z)V
+#setDeterminism(Lorg/teiid/metadata/FunctionMethod$Determinism;)V
+#isVarArgs()Z
+#setVarArgs(Z)Z
+#setParent(Lorg/teiid/metadata/Schema;)V
+#getParent()Lorg/teiid/metadata/Schema;
+#getAggregateAttributes()Lorg/teiid/metadata/AggregateAttributes;
+#setAggregateAttributes(Lorg/teiid/metadata/AggregateAttributes;)V
+#createFunctionMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/teiid/metadata/FunctionMethod;
+#convertExtensionMetadata(Lorg/teiid/metadata/Procedure;Lorg/teiid/metadata/FunctionMethod;)V
+#getMethod()Ljava/lang/reflect/Method;
+#setMethod(Ljava/lang/reflect/Method;)V
+#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;
@12.3.0
+#getIdentifier()Ljava/lang/String;

+###org/teiid/metadata/FunctionParameter
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#setVarArg(Z)V
+#isVarArg()Z
@10.0.3
+#setParent(Lorg/teiid/metadata/FunctionMethod;)V
+#getParent()Lorg/teiid/metadata/FunctionMethod;
+#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;
@10.1.0
-#setParent(Lorg/teiid/metadata/FunctionMethod;)V
-#getParent()Lorg/teiid/metadata/FunctionMethod;
-#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;
@10.1.1
+#setParent(Lorg/teiid/metadata/FunctionMethod;)V
+#getParent()Lorg/teiid/metadata/FunctionMethod;
+#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/metadata/Grant$Permission$Privilege
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/Grant$Permission$Privilege;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Grant$Permission$Privilege;
+#toString()Ljava/lang/String;
@13.1.0
-###org/teiid/metadata/Grant$Permission$Privilege

+###org/teiid/metadata/Grant$Permission
@10.0.0.Alpha2
+#<init>()V
+#getResourceType()Lorg/teiid/metadata/Database$ResourceType;
+#setResourceType(Lorg/teiid/metadata/Database$ResourceType;)V
+#getResourceName()Ljava/lang/String;
+#setResourceName(Ljava/lang/String;)V
+#getMask()Ljava/lang/String;
+#setMask(Ljava/lang/String;)V
+#getMaskOrder()Ljava/lang/Integer;
+#setMaskOrder(Ljava/lang/Integer;)V
+#getCondition()Ljava/lang/String;
+#setCondition(Ljava/lang/String;Ljava/lang/Boolean;)V
+#isConditionAConstraint()Ljava/lang/Boolean;
+#getPrivileges()Ljava/util/EnumSet;
+#getRevokePrivileges()Ljava/util/EnumSet;
+#hasPrivilege(Lorg/teiid/metadata/Grant$Permission$Privilege;)Ljava/lang/Boolean;
+#setPrivileges(Ljava/util/List;)V
+#setRevokePrivileges(Ljava/util/List;)V
+#appendPrivileges(Ljava/util/EnumSet;)V
+#removePrivileges(Ljava/util/EnumSet;)V
+#setAllowSelect(Ljava/lang/Boolean;)V
+#setAllowAlter(Ljava/lang/Boolean;)V
+#setAllowInsert(Ljava/lang/Boolean;)V
+#setAllowDelete(Ljava/lang/Boolean;)V
+#setAllowExecute(Ljava/lang/Boolean;)V
+#setAllowUpdate(Ljava/lang/Boolean;)V
+#setAllowDrop(Ljava/lang/Boolean;)V
+#setAllowUsage(Ljava/lang/Boolean;)V
+#setAllowAllPrivileges(Ljava/lang/Boolean;)V
+#setAllowTemporyTables(Ljava/lang/Boolean;)V
+#resourceMatches(Lorg/teiid/metadata/Grant$Permission;)Z
@13.1.0
-###org/teiid/metadata/Grant$Permission

+###org/teiid/metadata/Grant
@10.0.0.Alpha2
+#<init>()V
+#getPermissions()Ljava/util/Collection;
+#addPermission(Lorg/teiid/metadata/Grant$Permission;)V
+#getRole()Ljava/lang/String;
+#setRole(Ljava/lang/String;)V
@13.1.0
+#<init>(Ljava/lang/String;Lorg/teiid/metadata/Permission;)V
+#getPermission()Lorg/teiid/metadata/Permission;
+#setPermission(Lorg/teiid/metadata/Permission;)V
-#getPermissions()Ljava/util/Collection;
-#addPermission(Lorg/teiid/metadata/Grant$Permission;)V

+###org/teiid/metadata/KeyRecord$Type
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/KeyRecord$Type;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/KeyRecord$Type;

+###org/teiid/metadata/KeyRecord
@10.0.0.Alpha2
+#<init>(Lorg/teiid/metadata/KeyRecord$Type;)V
+#getType()Lorg/teiid/metadata/KeyRecord$Type;

+###org/teiid/metadata/MetadataException
@10.0.0.Alpha2
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V

+###org/teiid/metadata/MetadataFactory
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Lorg/teiid/adminapi/impl/ModelMetaData;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/util/Map;Ljava/util/Properties;Ljava/lang/String;)V
+#hex(JI)Ljava/lang/String;
+#getImportProperties()Ljava/util/Properties;[deprecated]
+#getModelProperties()Ljava/util/Properties;
+#getRawMetadata()Ljava/lang/String;[deprecated]
+#getModel()Lorg/teiid/adminapi/Model;
+#getName()Ljava/lang/String;
+#getSchema()Lorg/teiid/metadata/Schema;
+#addTable(Ljava/lang/String;)Lorg/teiid/metadata/Table;
+#addColumn(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/ColumnSet;)Lorg/teiid/metadata/Column;
+#renameColumn(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/ColumnSet;)Lorg/teiid/metadata/Column;
+#setDataType(Ljava/lang/String;Lorg/teiid/metadata/BaseColumn;Ljava/util/Map;Z)Lorg/teiid/metadata/Datatype;
+#addPrimaryKey(Ljava/lang/String;Ljava/util/List;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/KeyRecord;
+#addAccessPattern(Ljava/lang/String;Ljava/util/List;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/KeyRecord;
+#addIndex(Ljava/lang/String;ZLjava/util/List;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/KeyRecord;
+#addFunctionBasedIndex(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/KeyRecord;
+#addForiegnKey(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/ForeignKey;
+#addForiegnKey(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/ForeignKey;
+#addProcedure(Ljava/lang/String;)Lorg/teiid/metadata/Procedure;
+#addProcedureParameter(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/ProcedureParameter$Type;Lorg/teiid/metadata/Procedure;)Lorg/teiid/metadata/ProcedureParameter;
+#addProcedureResultSetColumn(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Procedure;)Lorg/teiid/metadata/Column;
+#addFunction(Ljava/lang/String;)Lorg/teiid/metadata/FunctionMethod;
+#addFunction(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/teiid/metadata/FunctionMethod;
+#addFunction(Ljava/lang/String;Ljava/lang/reflect/Method;)Lorg/teiid/metadata/FunctionMethod;
+#createFunctionFromMethod(Ljava/lang/String;Ljava/lang/reflect/Method;)Lorg/teiid/metadata/FunctionMethod;
+#setAutoCorrectColumnNames(Z)V
+#mergeInto(Lorg/teiid/metadata/MetadataStore;)V
+#asMetadataStore()Lorg/teiid/metadata/MetadataStore;
+#setSchema(Lorg/teiid/metadata/Schema;)V
+#getDataTypes()Ljava/util/Map;
+#correctDatatypes(Ljava/util/Map;)V
+#getVdbName()Ljava/lang/String;
+#getVdbVersion()Ljava/lang/String;
+#getNamespaces()Ljava/util/Map;
+#parse(Ljava/io/Reader;)V
+#setParser(Lorg/teiid/metadata/Parser;)V
+#setModel(Lorg/teiid/adminapi/impl/ModelMetaData;)V
+#getParser()Lorg/teiid/metadata/Parser;
+#getVDBResources()Ljava/util/Map;
+#setVdbResources(Ljava/util/Map;)V
+#addPermission(Ljava/lang/String;Lorg/teiid/metadata/AbstractMetadataRecord;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;)V
+#addSchemaPermission(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
+#addColumnPermission(Ljava/lang/String;Lorg/teiid/metadata/Column;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V
+#addFunction(Lorg/teiid/metadata/FunctionMethod;)V
@10.1.4
+#renameParameter(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Procedure;)Lorg/teiid/metadata/ProcedureParameter;
@10.2.0
+#addForeignKey(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/ForeignKey;
*#addForiegnKey(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/ForeignKey;[deprecated]
+#addForeignKey(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/ForeignKey;
*#addForiegnKey(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lorg/teiid/metadata/Table;)Lorg/teiid/metadata/ForeignKey;[deprecated]
-#renameParameter(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Procedure;)Lorg/teiid/metadata/ProcedureParameter;
@10.2.2
+#renameParameter(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Procedure;)Lorg/teiid/metadata/ProcedureParameter;
@11.0.0
+#<init>()V
+#isAutoCorrectColumnNames()Z
+#isRenameAllDuplicates()Z
+#isRenameDuplicateColumns()Z
+#isRenameDuplicateTables()Z
+#setRenameAllDuplicates(Z)V
+#setRenameDuplicateColumns(Z)V
+#setRenameDuplicateTables(Z)V
+#getNameFormat()Ljava/lang/String;
+#setNameFormat(Ljava/lang/String;)V
+#isImportPushdownFunctions()Z
+#setImportPushdownFunctions(Z)V
@11.2.0
+#setVDBClassLoader(Ljava/lang/ClassLoader;)V
+#getVDBClassLoader()Ljava/lang/ClassLoader;
@13.0.1
-#getNamespaces()Ljava/util/Map;
@13.1.0
*#addPermission(Ljava/lang/String;Lorg/teiid/metadata/AbstractMetadataRecord;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;)V[deprecated]
+#addPermission(Ljava/lang/String;Lorg/teiid/metadata/AbstractMetadataRecord;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
*#addColumnPermission(Ljava/lang/String;Lorg/teiid/metadata/Column;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V[deprecated]
+#addColumnPermission(Ljava/lang/String;Lorg/teiid/metadata/Column;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;)V
+#addPolicy(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/AbstractMetadataRecord;Ljava/lang/String;[Lorg/teiid/metadata/Policy$Operation;)V

+###org/teiid/metadata/MetadataRepository
@10.0.0.Alpha2
+#<init>()V
+#loadMetadata(Lorg/teiid/metadata/MetadataFactory;Lorg/teiid/translator/ExecutionFactory;Ljava/lang/Object;Ljava/lang/String;)V
+#loadMetadata(Lorg/teiid/metadata/MetadataFactory;Lorg/teiid/translator/ExecutionFactory;Ljava/lang/Object;)V
+#setViewDefinition(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;Ljava/lang/String;)V
+#setInsteadOfTriggerDefinition(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;Lorg/teiid/metadata/Table$TriggerEvent;Ljava/lang/String;)V
+#setInsteadOfTriggerEnabled(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;Lorg/teiid/metadata/Table$TriggerEvent;Z)V
+#setProcedureDefinition(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Procedure;Ljava/lang/String;)V
+#setTableStats(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Table;Lorg/teiid/metadata/TableStats;)V
+#setColumnStats(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/Column;Lorg/teiid/metadata/ColumnStats;)V
+#setProperty(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/metadata/AbstractMetadataRecord;Ljava/lang/String;Ljava/lang/String;)V
@11.2.0
-#<init>()V

+###org/teiid/metadata/MetadataStore
@10.0.0.Alpha2
+#<init>()V
+#getSchemas()Ljava/util/NavigableMap;
+#getSchema(Ljava/lang/String;)Lorg/teiid/metadata/Schema;
+#addSchema(Lorg/teiid/metadata/Schema;)V
+#getSchemaList()Ljava/util/List;
+#removeSchema(Ljava/lang/String;)Lorg/teiid/metadata/Schema;
+#addDataTypes(Ljava/util/Map;)V
+#addDatatype(Ljava/lang/String;Lorg/teiid/metadata/Datatype;)V
+#getDatatypes()Ljava/util/NavigableMap;
+#getDatatypesExcludingAliases()Ljava/util/NavigableMap;
+#merge(Lorg/teiid/metadata/MetadataStore;)V
+#removeGrant(Lorg/teiid/metadata/Grant;)V
+#getGrants()Ljava/util/Collection;
@13.1.0
+#mergeRoles(Ljava/util/Collection;)V
+#getRoles()Ljava/util/Collection;
-#removeGrant(Lorg/teiid/metadata/Grant;)V
-#getGrants()Ljava/util/Collection;

+###org/teiid/metadata/NamespaceContainer
@10.0.0.Alpha2
+#<init>()V
+#addNamespace(Ljava/lang/String;Ljava/lang/String;)V
+#getNamespaces()Ljava/util/Map;
+#resolvePropertyKey(Lorg/teiid/metadata/NamespaceContainer;Ljava/lang/String;)Ljava/lang/String;
@13.0.1
+#resolvePropertyKey(Ljava/lang/String;)Ljava/lang/String;
+#getLegacyKey(Ljava/lang/String;)Ljava/lang/String;
-#getNamespaces()Ljava/util/Map;
-#resolvePropertyKey(Lorg/teiid/metadata/NamespaceContainer;Ljava/lang/String;)Ljava/lang/String;

+###org/teiid/metadata/ParseException
@10.0.0.Alpha2
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V

+###org/teiid/metadata/Parser
@10.0.0.Alpha2
+#parseDDL(Lorg/teiid/metadata/MetadataFactory;Ljava/io/Reader;)V

+###org/teiid/metadata/Procedure$Type
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/Procedure$Type;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Procedure$Type;

+###org/teiid/metadata/Procedure
@10.0.0.Alpha2
+#<init>()V
+#setParent(Lorg/teiid/metadata/Schema;)V
+#isFunction()Z
+#isVirtual()Z
+#getType()Lorg/teiid/metadata/Procedure$Type;
+#getUpdateCount()I
+#getParameters()Ljava/util/List;
+#getParameterByName(Ljava/lang/String;)Lorg/teiid/metadata/ProcedureParameter;
+#setParameters(Ljava/util/List;)V
+#getQueryPlan()Ljava/lang/String;
+#setQueryPlan(Ljava/lang/String;)V
+#setFunction(Z)V
+#setVirtual(Z)V
+#setUpdateCount(I)V
+#setResultSet(Lorg/teiid/metadata/ColumnSet;)V
+#getResultSet()Lorg/teiid/metadata/ColumnSet;
+#getParent()Lorg/teiid/metadata/Schema;
+#getLastModified()J
+#setLastModified(J)V
+#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/metadata/ProcedureParameter$Type
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/ProcedureParameter$Type;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/ProcedureParameter$Type;

+###org/teiid/metadata/ProcedureParameter
@10.0.0.Alpha2
+#<init>()V
+#setType(Lorg/teiid/metadata/ProcedureParameter$Type;)V
+#getType()Lorg/teiid/metadata/ProcedureParameter$Type;
+#setOptional(Z)V[deprecated]
+#isOptional()Z[deprecated]
+#setProcedure(Lorg/teiid/metadata/Procedure;)V
+#getParent()Lorg/teiid/metadata/Procedure;
+#setVarArg(Z)V
+#isVarArg()Z
+#toString()Ljava/lang/String;
+#getNativeType()Ljava/lang/String;
+#getParent()Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/metadata/RestMetadataExtension$ParameterType
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/RestMetadataExtension$ParameterType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/RestMetadataExtension$ParameterType;

+###org/teiid/metadata/RestMetadataExtension
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/metadata/Role
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;)V
+#getJassRoles()Ljava/util/List;
+#setJaasRoles(Ljava/util/List;)V
+#isAnyAuthenticated()Z
+#setAnyAuthenticated(Z)V
@12.3.0
+#getMappedRoles()Ljava/util/List;
+#setMappedRoles(Ljava/util/List;)V
-#getJassRoles()Ljava/util/List;
-#setJaasRoles(Ljava/util/List;)V
@13.1.0
+#getGrants()Ljava/util/Map;
+#getPolicies()Ljava/util/Map;
+#addGrant(Lorg/teiid/metadata/Permission;)V
+#removeGrant(Lorg/teiid/metadata/Permission;)V
+#addPolicy(Lorg/teiid/metadata/Policy;)V
+#removePolicy(Lorg/teiid/metadata/Policy;)V
+#mergeInto(Lorg/teiid/metadata/Role;)V

+###org/teiid/metadata/RuntimeMetadata
@10.0.0.Alpha2
+#getTable(Ljava/lang/String;)Lorg/teiid/metadata/Table;
+#getTable(Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/metadata/Table;
+#getColumn(Ljava/lang/String;)Lorg/teiid/metadata/Column;
+#getColumn(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/metadata/Column;
+#getProcedure(Ljava/lang/String;)Lorg/teiid/metadata/Procedure;
+#getProcedure(Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/metadata/Procedure;
+#getBinaryVDBResource(Ljava/lang/String;)[B
+#getCharacterVDBResource(Ljava/lang/String;)Ljava/lang/String;
+#getVDBResourcePaths()[Ljava/lang/String;

+###org/teiid/metadata/Schema
@10.0.0.Alpha2
+#<init>()V
+#addTable(Lorg/teiid/metadata/Table;)V
+#removeTable(Ljava/lang/String;)Lorg/teiid/metadata/Table;
+#addProcedure(Lorg/teiid/metadata/Procedure;)V
+#removeProcedure(Ljava/lang/String;)Lorg/teiid/metadata/Procedure;
+#addFunction(Lorg/teiid/metadata/FunctionMethod;)V
+#removeFunctions(Ljava/lang/String;)Ljava/util/List;
+#getTables()Ljava/util/NavigableMap;
+#getTable(Ljava/lang/String;)Lorg/teiid/metadata/Table;
+#getProcedures()Ljava/util/NavigableMap;
+#getProcedure(Ljava/lang/String;)Lorg/teiid/metadata/Procedure;
+#getFunctions()Ljava/util/NavigableMap;
+#getFunction(Ljava/lang/String;)Lorg/teiid/metadata/FunctionMethod;
+#getPrimaryMetamodelUri()Ljava/lang/String;
+#isPhysical()Z
+#setPrimaryMetamodelUri(Ljava/lang/String;)V
+#setPhysical(Z)V
+#getResolvingOrder()Ljava/util/List;
+#addServer(Lorg/teiid/metadata/Server;)V
+#getServer(Ljava/lang/String;)Lorg/teiid/metadata/Server;
+#getServers()Ljava/util/List;
+#isVisible()Z
+#setVisible(Z)V
@12.3.0
+#getChildType(Ljava/lang/Class;)Ljava/lang/String;
+#getTypeName()Ljava/lang/String;
+#getChild(Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/metadata/AbstractMetadataRecord;

+###org/teiid/metadata/Server
@10.0.0.Alpha2
+#<init>(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V
+#getDataWrapper()Ljava/lang/String;
+#setDataWrapper(Ljava/lang/String;)V
+#getJndiName()Ljava/lang/String;
+#setJndiName(Ljava/lang/String;)V
+#isVirtual()Z
@12.3.0
+#getResourceName()Ljava/lang/String;
+#setResourceName(Ljava/lang/String;)V
-#getJndiName()Ljava/lang/String;
-#setJndiName(Ljava/lang/String;)V
-#isVirtual()Z

+###org/teiid/metadata/Table$TriggerEvent
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/Table$TriggerEvent;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Table$TriggerEvent;

+###org/teiid/metadata/Table$Type
@10.0.0.Alpha2
+#values()[Lorg/teiid/metadata/Table$Type;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Table$Type;

+###org/teiid/metadata/Table
@10.0.0.Alpha2
+#<init>()V
+#getBindings()Ljava/util/List;
+#setBindings(Ljava/util/List;)V
+#getSchemaPaths()Ljava/util/List;
+#setSchemaPaths(Ljava/util/List;)V[deprecated]
+#getCardinality()I
+#getCardinalityAsFloat()F
+#isVirtual()Z
+#isMaterialized()Z
+#isPhysical()Z
+#isSystem()Z
+#getTableType()Lorg/teiid/metadata/Table$Type;
+#supportsUpdate()Z
+#setCardinality(I)V
+#setCardinality(J)V
+#setTableType(Lorg/teiid/metadata/Table$Type;)V
+#setSupportsUpdate(Z)V
+#setVirtual(Z)V
+#setMaterialized(Z)V
+#setSystem(Z)V
+#getInsertPlan()Ljava/lang/String;
+#getUpdatePlan()Ljava/lang/String;
+#getDeletePlan()Ljava/lang/String;
+#setInsertPlan(Ljava/lang/String;)V
+#setUpdatePlan(Ljava/lang/String;)V
+#setDeletePlan(Ljava/lang/String;)V
+#getForeignKeys()Ljava/util/List;
+#setForiegnKeys(Ljava/util/List;)V
+#getIndexes()Ljava/util/List;
+#setIndexes(Ljava/util/List;)V
+#getFunctionBasedIndexes()Ljava/util/List;
+#setFunctionBasedIndexes(Ljava/util/List;)V
+#getUniqueKeys()Ljava/util/List;
+#setUniqueKeys(Ljava/util/List;)V
+#getAccessPatterns()Ljava/util/List;
+#setAccessPatterns(Ljava/util/List;)V
+#getPrimaryKey()Lorg/teiid/metadata/KeyRecord;
+#setPrimaryKey(Lorg/teiid/metadata/KeyRecord;)V
+#getSelectTransformation()Ljava/lang/String;
+#setSelectTransformation(Ljava/lang/String;)V
+#getMaterializedStageTable()Lorg/teiid/metadata/Table;
+#getMaterializedTable()Lorg/teiid/metadata/Table;
+#setMaterializedStageTable(Lorg/teiid/metadata/Table;)V
+#setMaterializedTable(Lorg/teiid/metadata/Table;)V
+#setResourcePath(Ljava/lang/String;)V
+#getResourcePath()Ljava/lang/String;
+#getAllKeys()Ljava/util/Collection;
+#addColumn(Lorg/teiid/metadata/Column;)V
+#getLastDataModification()J
+#getLastModified()J
+#setLastDataModification(J)V
+#setLastModified(J)V
+#setTableStats(Lorg/teiid/metadata/TableStats;)V
+#isDeletePlanEnabled()Z
+#isInsertPlanEnabled()Z
+#isUpdatePlanEnabled()Z
+#setInsertPlanEnabled(Z)V
+#setDeletePlanEnabled(Z)V
+#setUpdatePlanEnabled(Z)V
+#getFullName()Ljava/lang/String;
+#getTriggers()Ljava/util/Map;
@10.2.0
+#setForeignKeys(Ljava/util/List;)V
*#setForiegnKeys(Ljava/util/List;)V[deprecated]
@11.0.0
*#getBindings()Ljava/util/List;[deprecated]
*#setBindings(Ljava/util/List;)V[deprecated]
@12.3.0
*#getSchemaPaths()Ljava/util/List;[deprecated]

+###org/teiid/metadata/TableStats
@10.0.0.Alpha2
+#<init>()V
+#getCardinality()Ljava/lang/Number;
+#setCardinality(Ljava/lang/Number;)V

+###org/teiid/metadata/Trigger
@10.0.0.Alpha2
+#<init>()V
+#getEvent()Lorg/teiid/metadata/Table$TriggerEvent;
+#setEvent(Lorg/teiid/metadata/Table$TriggerEvent;)V
+#getPlan()Ljava/lang/String;
+#setPlan(Ljava/lang/String;)V
+#isAfter()Z
+#setAfter(Z)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V

+###org/teiid/metadata/VDBResource
@10.0.0.Alpha2
+#openStream()Ljava/io/InputStream;
+#getSize()J
+#getName()Ljava/lang/String;

+###org/teiid/resource/spi/BasicConnection
@10.0.0.Alpha2
+#<init>()V
+#createInteraction()Ljavax/resource/cci/Interaction;
+#getLocalTransaction()Ljavax/resource/cci/LocalTransaction;
+#getMetaData()Ljavax/resource/cci/ConnectionMetaData;
+#getResultSetInfo()Ljavax/resource/cci/ResultSetInfo;
+#getXAResource()Ljavax/transaction/xa/XAResource;
+#isAlive()Z
+#cleanUp()V
@12.0.0
-###org/teiid/resource/spi/BasicConnection

+###org/teiid/resource/spi/BasicConnectionFactory
@10.0.0.Alpha2
+#<init>()V
+#getConnection()Lorg/teiid/resource/spi/BasicConnection;
+#getConnection(Ljavax/resource/cci/ConnectionSpec;)Lorg/teiid/resource/spi/BasicConnection;
+#getMetaData()Ljavax/resource/cci/ResourceAdapterMetaData;
+#getRecordFactory()Ljavax/resource/cci/RecordFactory;
+#setReference(Ljavax/naming/Reference;)V
+#getReference()Ljavax/naming/Reference;
+#getConnection(Ljavax/resource/cci/ConnectionSpec;)Ljavax/resource/cci/Connection;
+#getConnection()Ljavax/resource/cci/Connection;
@12.0.0
-###org/teiid/resource/spi/BasicConnectionFactory

+###org/teiid/resource/spi/BasicManagedConnection
@10.0.0.Alpha2
+#<init>(Lorg/teiid/resource/spi/BasicConnection;)V
+#associateConnection(Ljava/lang/Object;)V
+#cleanup()V
+#destroy()V
+#getMetaData()Ljavax/resource/spi/ManagedConnectionMetaData;
+#getConnection(Ljavax/security/auth/Subject;Ljavax/resource/spi/ConnectionRequestInfo;)Ljava/lang/Object;
+#getLocalTransaction()Ljavax/resource/spi/LocalTransaction;
+#getXAResource()Ljavax/transaction/xa/XAResource;
+#addConnectionEventListener(Ljavax/resource/spi/ConnectionEventListener;)V
+#removeConnectionEventListener(Ljavax/resource/spi/ConnectionEventListener;)V
+#setLogWriter(Ljava/io/PrintWriter;)V
+#getLogWriter()Ljava/io/PrintWriter;
+#isValid()Z
@12.0.0
-###org/teiid/resource/spi/BasicManagedConnection

+###org/teiid/resource/spi/BasicManagedConnectionFactory
@10.0.0.Alpha2
+#<init>()V
+#createConnectionFactory()Lorg/teiid/resource/spi/BasicConnectionFactory;
+#createConnectionFactory(Ljavax/resource/spi/ConnectionManager;)Ljava/lang/Object;
+#createManagedConnection(Ljavax/security/auth/Subject;Ljavax/resource/spi/ConnectionRequestInfo;)Ljavax/resource/spi/ManagedConnection;
+#getLogWriter()Ljava/io/PrintWriter;
+#matchManagedConnections(Ljava/util/Set;Ljavax/security/auth/Subject;Ljavax/resource/spi/ConnectionRequestInfo;)Ljavax/resource/spi/ManagedConnection;
+#setLogWriter(Ljava/io/PrintWriter;)V
+#getResourceAdapter()Ljavax/resource/spi/ResourceAdapter;
+#setResourceAdapter(Ljavax/resource/spi/ResourceAdapter;)V
+#getInstance(Ljava/lang/Class;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;
+#getInvalidConnections(Ljava/util/Set;)Ljava/util/Set;
+#createConnectionFactory()Ljava/lang/Object;
@12.0.0
-###org/teiid/resource/spi/BasicManagedConnectionFactory

+###org/teiid/resource/spi/BasicResourceAdapter
@10.0.0.Alpha2
+#<init>()V
+#endpointActivation(Ljavax/resource/spi/endpoint/MessageEndpointFactory;Ljavax/resource/spi/ActivationSpec;)V
+#endpointDeactivation(Ljavax/resource/spi/endpoint/MessageEndpointFactory;Ljavax/resource/spi/ActivationSpec;)V
+#getXAResources([Ljavax/resource/spi/ActivationSpec;)[Ljavax/transaction/xa/XAResource;
+#start(Ljavax/resource/spi/BootstrapContext;)V
+#stop()V
+#getWorkManager()Ljavax/resource/spi/work/WorkManager;
+#getXATerminator()Ljavax/resource/spi/XATerminator;
@12.0.0
-###org/teiid/resource/spi/BasicResourceAdapter

+###org/teiid/resource/spi/ConnectionContext
@10.0.0.Alpha2
+#<init>()V
+#getSubject()Ljavax/security/auth/Subject;
+#setSubject(Ljavax/security/auth/Subject;)V
+#getUserName(Ljavax/security/auth/Subject;Lorg/teiid/resource/spi/BasicManagedConnectionFactory;Ljava/lang/String;)Ljava/lang/String;
+#getPassword(Ljavax/security/auth/Subject;Lorg/teiid/resource/spi/BasicManagedConnectionFactory;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getRoles(Ljavax/security/auth/Subject;[Ljava/lang/String;)[Ljava/lang/String;
+#getSecurityCredential(Ljavax/security/auth/Subject;Ljava/lang/Class;)Ljava/lang/Object;
@12.0.0
-###org/teiid/resource/spi/ConnectionContext

+###org/teiid/resource/spi/WrappedConnection
@10.0.0.Alpha2
+#<init>(Lorg/teiid/resource/spi/BasicManagedConnection;)V
+#close()V
+#createInteraction()Ljavax/resource/cci/Interaction;
+#getLocalTransaction()Ljavax/resource/cci/LocalTransaction;
+#getMetaData()Ljavax/resource/cci/ConnectionMetaData;
+#getResultSetInfo()Ljavax/resource/cci/ResultSetInfo;
+#unwrap()Ljavax/resource/cci/Connection;
@12.0.0
-###org/teiid/resource/spi/WrappedConnection

+###org/teiid/resource/spi/WrappedConnectionFactory
@10.0.0.Alpha2
+#<init>()V
+#<init>(Lorg/teiid/resource/spi/BasicConnectionFactory;Ljavax/resource/spi/ConnectionManager;Lorg/teiid/resource/spi/BasicManagedConnectionFactory;)V
+#getConnection()Ljavax/resource/cci/Connection;
+#setReference(Ljavax/naming/Reference;)V
+#getReference()Ljavax/naming/Reference;
+#getConnection(Ljavax/resource/cci/ConnectionSpec;)Ljavax/resource/cci/Connection;
+#getMetaData()Ljavax/resource/cci/ResourceAdapterMetaData;
+#getRecordFactory()Ljavax/resource/cci/RecordFactory;
@12.0.0
-###org/teiid/resource/spi/WrappedConnectionFactory

+###org/teiid/translator/BaseDelegatingExecutionFactory
@10.0.0.Alpha2
+#<init>()V
+#setDelegate(Lorg/teiid/translator/ExecutionFactory;)V
+#getDelegateName()Ljava/lang/String;
+#setDelegateName(Ljava/lang/String;)V
+#areLobsUsableAfterClose()Z
+#closeConnection(Ljava/lang/Object;Ljava/lang/Object;)V
+#createProcedureExecution(Lorg/teiid/language/Call;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/ProcedureExecution;
+#createResultSetExecution(Lorg/teiid/language/QueryExpression;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/ResultSetExecution;
+#createUpdateExecution(Lorg/teiid/language/Command;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/UpdateExecution;
+#getConnection(Ljava/lang/Object;Lorg/teiid/translator/ExecutionContext;)Ljava/lang/Object;
+#getDefaultNullOrder()Lorg/teiid/translator/ExecutionFactory$NullOrder;
+#setDefaultNullOrder(Lorg/teiid/translator/ExecutionFactory$NullOrder;)V
+#getLanguageFactory()Lorg/teiid/language/LanguageFactory;
+#getMaxFromGroups()I
+#setMaxFromGroups(I)V
+#getMetadata(Lorg/teiid/metadata/MetadataFactory;Ljava/lang/Object;)V
+#getPushDownFunctions()Ljava/util/List;
+#getSupportedFunctions()Ljava/util/List;
+#setAddSupportedFunctions(Ljava/lang/String;)V
+#setRemoveSupportedFunctions(Ljava/lang/String;)V
+#getTypeFacility()Lorg/teiid/translator/TypeFacility;
+#isImmutable()Z
+#setImmutable(Z)V
+#isSourceRequired()Z
+#setSourceRequired(Z)V
+#supportsAggregatesAvg()Z
+#setSupportsAggregatesAvg(Z)V
+#supportsAggregatesCount()Z
+#setSupportsAggregatesCount(Z)V
+#supportsAggregatesCountStar()Z
+#setSupportsAggregatesCountStar(Z)V
+#supportsAggregatesDistinct()Z
+#setSupportsAggregatesDistinct(Z)V
+#supportsAggregatesEnhancedNumeric()Z
+#setSupportsAggregatesEnhancedNumeric(Z)V
+#supportsAggregatesMax()Z
+#setSupportsAggregatesMax(Z)V
+#supportsAggregatesMin()Z
+#setSupportsAggregatesMin(Z)V
+#supportsAggregatesSum()Z
+#setSupportsAggregatesSum(Z)V
+#supportsAliasedTable()Z
+#setSupportsAliasedTable(Z)V
+#supportsBatchedUpdates()Z
+#setSupportsBatchedUpdates(Z)V
+#supportsBulkUpdate()Z
+#setSupportsBulkUpdate(Z)V
+#supportsCommonTableExpressions()Z
+#setSupportsCommonTableExpressions(Z)V
+#supportsCompareCriteriaEquals()Z
+#setSupportsCompareCriteriaEquals(Z)V
+#supportsCompareCriteriaOrdered()Z
+#setSupportsCompareCriteriaOrdered(Z)V
+#supportsCorrelatedSubqueries()Z
+#setSupportsCorrelatedSubqueries(Z)V
+#supportsExcept()Z
+#setSupportsExcept(Z)V
+#supportsExistsCriteria()Z
+#setSupportsExistsCriteria(Z)V
+#supportsFunctionsInGroupBy()Z
+#setSupportsFunctionsInGroupBy(Z)V
+#supportsGroupBy()Z
+#setSupportsGroupBy(Z)V
+#supportsHaving()Z
+#setSupportsHaving(Z)V
+#supportsInCriteria()Z
+#setSupportsInCriteria(Z)V
+#supportsInCriteriaSubquery()Z
+#setSupportsInCriteriaSubquery(Z)V
+#supportsInlineViews()Z
+#setSupportsInlineViews(Z)V
+#supportsInsertWithQueryExpression()Z
+#setSupportsInsertWithQueryExpression(Z)V
+#supportsIntersect()Z
+#setSupportsIntersect(Z)V
+#supportsIsNullCriteria()Z
+#setSupportsIsNullCriteria(Z)V
+#supportsLikeCriteria()Z
+#setSupportsLikeCriteria(Z)V
+#supportsLikeCriteriaEscapeCharacter()Z
+#setSupportsLikeCriteriaEscapeCharacter(Z)V
+#supportsNotCriteria()Z
+#setSupportsNotCriteria(Z)V
+#supportsOrCriteria()Z
+#setSupportsOrCriteria(Z)V
+#supportsOrderByNullOrdering()Z
+#setSupportsOrderByNullOrdering(Z)V
+#supportsOrderByUnrelated()Z
+#setSupportsOrderByUnrelated(Z)V
+#supportsQuantifiedCompareCriteriaAll()Z
+#setSupportsQuantifiedCompareCriteriaAll(Z)V
+#supportsQuantifiedCompareCriteriaSome()Z
+#setSupportsQuantifiedCompareCriteriaSome(Z)V
+#supportsRowLimit()Z
+#setSupportsRowLimit(Z)V
+#supportsRowOffset()Z
+#setSupportsRowOffset(Z)V
+#supportsScalarSubqueries()Z
+#setSupportsScalarSubqueries(Z)V
+#supportsSearchedCaseExpressions()Z
+#setSupportsSearchedCaseExpressions(Z)V
+#supportsSelectExpression()Z
+#setSupportsSelectExpression(Z)V
+#supportsSelfJoins()Z
+#setSupportsSelfJoins(Z)V
+#supportsSetQueryOrderBy()Z
+#setSupportsSetQueryOrderBy(Z)V
+#supportsUnions()Z
+#setSupportsUnions(Z)V
+#toString()Ljava/lang/String;
+#useAnsiJoin()Z
+#setUseAnsiJoin(Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isCopyLobs()Z
+#setCopyLobs(Z)V
+#supportsArrayAgg()Z
+#setSupportsArrayAgg(Z)V
+#supportsElementaryOlapOperations()Z
+#setSupportsElementaryOlapOperations(Z)V
+#supportsFormatLiteral(Ljava/lang/String;Lorg/teiid/translator/ExecutionFactory$Format;)Z
+#supportsLikeRegex()Z
+#setSupportsLikeRegex(Z)V
+#supportsOnlyFormatLiterals()Z
+#setSupportsOnlyFormatLiterals(Z)V
+#supportsOnlySingleTableGroupBy()Z
+#setSupportsOnlySingleTableGroupBy(Z)V
+#supportsSimilarTo()Z
+#setSupportsSimilarTo(Z)V
+#supportsWindowDistinctAggregates()Z
+#setSupportsWindowDistinctAggregates(Z)V
+#supportsWindowOrderByWithAggregates()Z
+#setSupportsWindowOrderByWithAggregates(Z)V
+#getMaxInCriteriaSize()I
+#setMaxInCriteriaSize(I)V
+#getSupportedJoinCriteria()Lorg/teiid/translator/ExecutionFactory$SupportedJoinCriteria;
+#setSupportedJoinCriteria(Lorg/teiid/translator/ExecutionFactory$SupportedJoinCriteria;)V
+#requiresCriteria()Z
+#setRequiresCriteria(Z)V
+#supportsFullOuterJoins()Z
+#setSupportsFullOuterJoins(Z)V
+#supportsInnerJoins()Z
+#setSupportsInnerJoins(Z)V
+#supportsOrderBy()Z
+#setSupportsOrderBy(Z)V
+#supportsOuterJoins()Z
+#setSupportsOuterJoins(Z)V
+#supportsSelectDistinct()Z
+#setSupportsSelectDistinct(Z)V
+#getMaxDependentInPredicates()I
+#setMaxDependentInPredicates(I)V
+#supportsAdvancedOlapOperations()Z
+#setSupportsAdvancedOlapOperations(Z)V
+#supportsSubqueryInOn()Z
+#setSupportsSubqueryInOn(Z)V
+#supportsConvert(II)Z
+#supportsDependentJoins()Z
+#setSupportsDependentJoins(Z)V
+#supportsOnlyLiteralComparison()Z
+#setSupportsOnlyLiteralComparison(Z)V
+#getCacheDirective(Lorg/teiid/language/Command;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;)Lorg/teiid/translator/CacheDirective;
+#isSourceRequiredForMetadata()Z
+#setSourceRequiredForMetadata(Z)V
+#isForkable()Z
+#setForkable(Z)V
+#supportsArrayType()Z
+#setSupportsArrayType(Z)V
+#getDirectQueryProcedureName()Ljava/lang/String;
+#setDirectQueryProcedureName(Ljava/lang/String;)V
+#supportsDirectQueryProcedure()Z
+#setSupportsDirectQueryProcedure(Z)V
+#createDirectExecution(Ljava/util/List;Lorg/teiid/language/Command;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/ProcedureExecution;
+#supportsOnlyCorrelatedSubqueries()Z
+#setSupportsOnlyCorrelatedSubqueries(Z)V
+#isSourceRequiredForCapabilities()Z
+#setSourceRequiredForCapabilities(Z)V
+#initCapabilities(Ljava/lang/Object;)V
+#supportsStringAgg()Z
+#setSupportsStringAgg(Z)V
+#supportsFullDependentJoins()Z
+#setSupportsFullDependentJoins(Z)V
+#supportsSelectWithoutFrom()Z
+#setSupportsSelectWithoutFrom(Z)V
+#supportsGroupByRollup()Z
+#setSupportsGroupByRollup(Z)V
+#supportsOrderByWithExtendedGrouping()Z
+#setSupportsOrderByWithExtendedGrouping(Z)V
+#isThreadBound()Z
+#setThreadBound(Z)V
+#getCollationLocale()Ljava/lang/String;
+#setCollationLocale(Ljava/lang/String;)V
+#supportsRecursiveCommonTableExpressions()Z
+#setSupportsRecursiveCommonTableExpressions(Z)V
+#supportsCompareCriteriaOrderedExclusive()Z
+#supportsCompareCriteriaOrderedExclusive(Z)V
+#returnsSingleUpdateCount()Z
+#supportsPartialFiltering()Z
+#setSupportsPartialFiltering(Z)V
+#useBindingsForDependentJoin()Z
+#setUseBindingsForDependentJoin(Z)V
+#supportsSubqueryCommonTableExpressions()Z
+#setSupportsSubqueryCommonTableExpressions(Z)V
+#supportsCorrelatedSubqueryLimit()Z
+#setSupportsCorrelatedSubqueryLimit(Z)V
+#getRequiredLikeEscape()Ljava/lang/Character;
+#setRequiredLikeEscape(Ljava/lang/Character;)V
+#supportsScalarSubqueryProjection()Z
+#setSupportsScalarSubqueryProjection(Z)V
+#getTransactionSupport()Lorg/teiid/translator/ExecutionFactory$TransactionSupport;
+#setTransactionSupport(Lorg/teiid/translator/ExecutionFactory$TransactionSupport;)V
+#getExcludedCommonTableExpressionName()Ljava/lang/String;
+#setExcludedCommonTableExpressionName(Ljava/lang/String;)V
+#supportsLateralJoin()Z
+#setSupportsLateralJoin(Z)V
+#supportsLateralJoinCondition()Z
+#setSupportsLateralJoinCondition(Z)V
+#supportsProcedureTable()Z
+#setSupportsProcedureTable(Z)V
+#supportsGroupByMultipleDistinctAggregates()Z
+#setSupportsGroupByMultipleDistinctAggregates(Z)V
+#start()V
+#supportsUpsert()Z
+#setSupportsUpsert(Z)V
+#supportsSelectExpressionArrayType()Z
+#setSupportsSelectExpressionArrayType(Z)V
@10.0.0.Beta2
+#supportsSetQueryLimitOffset()Z
+#setSupportsSetQueryLimitOffset(Z)V
@10.0.0.CR2
+#supportsIsDistinctCriteria()Z
+#setSupportsIsDistinctCriteria(Z)V
@10.2.0
+#supportsOnlyLateralJoinProcedure()Z
+#setSupportsOnlyLateralJoinProcedure(Z)V
@10.3.0
+#supportsOnlyTimestampAddLiteral()Z
+#setSupportsOnlyTimestampAddLiteral(Z)V
@10.3.4
+#getAddSupportedFunctions()Ljava/lang/String;
+#getRemoveSupportedFunctions()Ljava/lang/String;
*#supportsCompareCriteriaOrderedExclusive(Z)V[deprecated]
+#setSupportsCompareCriteriaOrderedExclusive(Z)V
@11.0.0
+#getCachePattern()Ljava/lang/String;
+#setCachePattern(Ljava/lang/String;)V
+#getCacheTtl()Ljava/lang/Long;
+#setCacheTtl(Ljava/lang/Long;)V
-#getAddSupportedFunctions()Ljava/lang/String;
-#getRemoveSupportedFunctions()Ljava/lang/String;
-#setSupportsCompareCriteriaOrderedExclusive(Z)V
@11.0.2
+#getAddSupportedFunctions()Ljava/lang/String;
+#getRemoveSupportedFunctions()Ljava/lang/String;
*#supportsCompareCriteriaOrderedExclusive(Z)V[deprecated]
+#setSupportsCompareCriteriaOrderedExclusive(Z)V
@11.1.0
+#supportsWindowFunctionNtile()Z
+#setSupportsWindowFunctionNtile(Z)V
+#supportsWindowFunctionPercentRank()Z
+#setSupportsWindowFunctionPercentRank(Z)V
+#supportsWindowFunctionCumeDist()Z
+#setSupportsWindowFunctionCumeDist(Z)V
+#supportsWindowFunctionNthValue()Z
+#setSupportsWindowFunctionNthValue(Z)V
@11.2.0
+#supportsWindowFrameClause()Z
+#setSupportsWindowFrameClause(Z)V
+#supportsListAgg()Z
+#setSupportsListAgg(Z)V
+#supportsMultipleOpenExecutions()Z
+#setSupportsMultipleOpenStatements(Z)V
+#supportsAggregatesCountBig()Z
+#setSupportsAggregatesCountBig(Z)V
+#supportsGeographyType()Z
+#setSupportsGeographyType(Z)V
@12.1.0
+#getMaxProjectedColumns()I
+#setMaxProjectedColumns(I)V
@13.0.1
+#supportsProcedureParameterExpression()Z
+#setSupportsProcedureParameterExpression(Ljava/lang/Boolean;)V
@16.0.0
+#supportsOnlyRelationshipStyleJoins()Z
+#setSupportsOnlyRelationshipStyleJoins(Ljava/lang/Boolean;)V

+###org/teiid/translator/CacheDirective$Invalidation
@10.0.0.Alpha2
+#values()[Lorg/teiid/translator/CacheDirective$Invalidation;
+#valueOf(Ljava/lang/String;)Lorg/teiid/translator/CacheDirective$Invalidation;

+###org/teiid/translator/CacheDirective$Scope
@10.0.0.Alpha2
+#values()[Lorg/teiid/translator/CacheDirective$Scope;
+#valueOf(Ljava/lang/String;)Lorg/teiid/translator/CacheDirective$Scope;

+###org/teiid/translator/CacheDirective
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/Boolean;Ljava/lang/Long;)V
+#getPrefersMemory()Ljava/lang/Boolean;
+#setPrefersMemory(Ljava/lang/Boolean;)V
+#getTtl()Ljava/lang/Long;
+#setTtl(Ljava/lang/Long;)V
+#getUpdatable()Ljava/lang/Boolean;
+#setUpdatable(Ljava/lang/Boolean;)V
+#getScope()Lorg/teiid/translator/CacheDirective$Scope;
+#setScope(Lorg/teiid/translator/CacheDirective$Scope;)V
+#getReadAll()Ljava/lang/Boolean;
+#setReadAll(Ljava/lang/Boolean;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getInvalidation()Lorg/teiid/translator/CacheDirective$Invalidation;
+#setInvalidation(Lorg/teiid/translator/CacheDirective$Invalidation;)V

+###org/teiid/translator/DataNotAvailableException
@10.0.0.Alpha2
+#<init>()V
+#<init>(J)V
+#<init>(Ljava/util/Date;)V
+#getRetryDelay()J
+#getWaitUntil()Ljava/util/Date;
+#isStrict()Z
+#setStrict(Z)V

+###org/teiid/translator/DelegatingExecutionFactory
@10.0.0.Alpha2
+#getDelegateName()Ljava/lang/String;
+#setDelegate(Lorg/teiid/translator/ExecutionFactory;)V

+###org/teiid/translator/Execution
@10.0.0.Alpha2
+#close()V
+#cancel()V
+#execute()V

+###org/teiid/translator/ExecutionContext
@10.0.0.Alpha2
+#getConnectorIdentifier()Ljava/lang/String;
+#getRequestId()Ljava/lang/String;
+#getRequestID()Ljava/lang/String;
+#getPartIdentifier()Ljava/lang/String;
+#getExecutionCountIdentifier()Ljava/lang/String;
+#getVdbName()Ljava/lang/String;
+#getVdbVersion()Ljava/lang/String;
+#getSubject()Ljavax/security/auth/Subject;
+#getCommandPayload()Ljava/io/Serializable;
+#getExecutionPayload()Ljava/io/Serializable;
+#getGeneralHint()Ljava/lang/String;
+#getSourceHint()Ljava/lang/String;
+#getGeneralHints()Ljava/util/Collection;
+#getSourceHints()Ljava/util/Collection;
+#getConnectionId()Ljava/lang/String;
+#getConnectionID()Ljava/lang/String;
+#keepExecutionAlive(Z)V
+#getBatchSize()I
+#addWarning(Ljava/lang/Exception;)V
+#isTransactional()Z
+#getSession()Lorg/teiid/adminapi/Session;
+#dataAvailable()V
+#getCommandContext()Lorg/teiid/CommandContext;
+#getCacheDirective()Lorg/teiid/translator/CacheDirective;
+#getRuntimeMetadata()Lorg/teiid/metadata/RuntimeMetadata;
+#logCommand([Ljava/lang/Object;)V
+#getScope()Lorg/teiid/translator/CacheDirective$Scope;
+#setScope(Lorg/teiid/translator/CacheDirective$Scope;)V
@12.3.0
*#getRequestID()Ljava/lang/String;[deprecated]
*#getExecutionPayload()Ljava/io/Serializable;[deprecated]
*#getConnectionID()Ljava/lang/String;[deprecated]
+#getGeneratedKeyColumns()Ljava/util/List;
+#returnGeneratedKeys()Lorg/teiid/GeneratedKeys;
+#getTransactionIsolation()I

+###org/teiid/translator/ExecutionFactory$Format
@10.0.0.Alpha2
+#values()[Lorg/teiid/translator/ExecutionFactory$Format;
+#valueOf(Ljava/lang/String;)Lorg/teiid/translator/ExecutionFactory$Format;

+###org/teiid/translator/ExecutionFactory$NullOrder
@10.0.0.Alpha2
+#values()[Lorg/teiid/translator/ExecutionFactory$NullOrder;
+#valueOf(Ljava/lang/String;)Lorg/teiid/translator/ExecutionFactory$NullOrder;

+###org/teiid/translator/ExecutionFactory$SupportedJoinCriteria
@10.0.0.Alpha2
+#values()[Lorg/teiid/translator/ExecutionFactory$SupportedJoinCriteria;
+#valueOf(Ljava/lang/String;)Lorg/teiid/translator/ExecutionFactory$SupportedJoinCriteria;

+###org/teiid/translator/ExecutionFactory$TransactionSupport
@10.0.0.Alpha2
+#values()[Lorg/teiid/translator/ExecutionFactory$TransactionSupport;
+#valueOf(Ljava/lang/String;)Lorg/teiid/translator/ExecutionFactory$TransactionSupport;

+###org/teiid/translator/ExecutionFactory
@10.0.0.Alpha2
+#<init>()V
+#start()V
+#isImmutable()Z
+#setImmutable(Z)V
+#isCopyLobs()Z
+#setCopyLobs(Z)V
+#getConnection(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#getConnection(Ljava/lang/Object;Lorg/teiid/translator/ExecutionContext;)Ljava/lang/Object;
+#closeConnection(Ljava/lang/Object;Ljava/lang/Object;)V
+#isSourceRequired()Z
+#setSourceRequired(Z)V
+#isSourceRequiredForMetadata()Z
+#isSourceRequiredForCapabilities()Z
+#initCapabilities(Ljava/lang/Object;)V
+#setSourceRequiredForMetadata(Z)V
+#getLanguageFactory()Lorg/teiid/language/LanguageFactory;
+#getTypeFacility()Lorg/teiid/translator/TypeFacility;
+#createExecution(Lorg/teiid/language/Command;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/Execution;
+#createResultSetExecution(Lorg/teiid/language/QueryExpression;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/ResultSetExecution;
+#createProcedureExecution(Lorg/teiid/language/Call;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/ProcedureExecution;
+#createUpdateExecution(Lorg/teiid/language/Command;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/UpdateExecution;
+#createDirectExecution(Ljava/util/List;Lorg/teiid/language/Command;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;Ljava/lang/Object;)Lorg/teiid/translator/ProcedureExecution;
+#getMetadataProcessor()Lorg/teiid/translator/MetadataProcessor;
+#supportsSelectDistinct()Z
+#setSupportsSelectDistinct(Z)V
+#supportsSelectExpression()Z
+#supportsAliasedTable()Z
+#getSupportedJoinCriteria()Lorg/teiid/translator/ExecutionFactory$SupportedJoinCriteria;
+#setSupportedJoinCriteria(Lorg/teiid/translator/ExecutionFactory$SupportedJoinCriteria;)V
+#supportsInnerJoins()Z
+#setSupportsInnerJoins(Z)V
+#supportsSelfJoins()Z
+#supportsOuterJoins()Z
+#setSupportsOuterJoins(Z)V
+#supportsFullOuterJoins()Z
+#setSupportsFullOuterJoins(Z)V
+#supportsInlineViews()Z
+#supportsCompareCriteriaEquals()Z
+#supportsCompareCriteriaOrdered()Z
+#supportsCompareCriteriaOrderedExclusive()Z
+#supportsLikeCriteria()Z
+#supportsLikeCriteriaEscapeCharacter()Z
+#supportsInCriteria()Z
+#supportsInCriteriaSubquery()Z
+#supportsIsNullCriteria()Z
+#supportsOrCriteria()Z
+#supportsNotCriteria()Z
+#supportsExistsCriteria()Z
+#supportsQuantifiedCompareCriteriaSome()Z
+#supportsQuantifiedCompareCriteriaAll()Z
+#supportsOrderBy()Z
+#setSupportsOrderBy(Z)V
+#getCollationLocale()Ljava/lang/String;
+#setCollationLocale(Ljava/lang/String;)V
+#supportsOrderByUnrelated()Z
+#getDefaultNullOrder()Lorg/teiid/translator/ExecutionFactory$NullOrder;
+#supportsOrderByNullOrdering()Z
+#supportsGroupBy()Z
+#supportsOnlySingleTableGroupBy()Z
+#supportsGroupByMultipleDistinctAggregates()Z
+#supportsHaving()Z
+#supportsAggregatesSum()Z
+#supportsAggregatesAvg()Z
+#supportsAggregatesMin()Z
+#supportsAggregatesMax()Z
+#supportsAggregatesCount()Z
+#supportsAggregatesCountStar()Z
+#supportsAggregatesDistinct()Z
+#supportsAggregatesEnhancedNumeric()Z
+#supportsStringAgg()Z
+#supportsScalarSubqueries()Z
+#supportsCorrelatedSubqueries()Z
+#supportsSearchedCaseExpressions()Z
+#supportsUnions()Z
+#supportsSetQueryOrderBy()Z
+#supportsIntersect()Z
+#supportsExcept()Z
+#getSupportedFunctions()Ljava/util/List;
+#getPushDownFunctions()Ljava/util/List;
+#getMaxInCriteriaSize()I
+#setMaxInCriteriaSize(I)V
+#getMaxDependentInPredicates()I
+#setMaxDependentInPredicates(I)V
+#supportsFunctionsInGroupBy()Z
+#supportsRowLimit()Z
+#supportsRowOffset()Z
+#getMaxFromGroups()I
+#useAnsiJoin()Z
+#requiresCriteria()Z
+#setRequiresCriteria(Z)V
+#supportsBatchedUpdates()Z
+#supportsBulkUpdate()Z
+#supportsInsertWithQueryExpression()Z
+#getInstance(Ljava/lang/Class;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;
+#getMetadata(Lorg/teiid/metadata/MetadataFactory;Ljava/lang/Object;)V
+#areLobsUsableAfterClose()Z
+#supportsCommonTableExpressions()Z
+#supportsRecursiveCommonTableExpressions()Z
+#supportsSubqueryCommonTableExpressions()Z
+#supportsCorrelatedSubqueryLimit()Z
+#supportsAdvancedOlapOperations()Z
+#supportsElementaryOlapOperations()Z
+#supportsWindowOrderByWithAggregates()Z
+#supportsWindowDistinctAggregates()Z
+#supportsArrayAgg()Z
+#supportsSimilarTo()Z
+#supportsLikeRegex()Z
+#supportsConvert(II)Z
+#supportsOnlyLiteralComparison()Z
+#supportsDependentJoins()Z
+#supportsFullDependentJoins()Z
+#supportsOnlyFormatLiterals()Z
+#supportsFormatLiteral(Ljava/lang/String;Lorg/teiid/translator/ExecutionFactory$Format;)Z
+#supportsSubqueryInOn()Z
+#getCacheDirective(Lorg/teiid/language/Command;Lorg/teiid/translator/ExecutionContext;Lorg/teiid/metadata/RuntimeMetadata;)Lorg/teiid/translator/CacheDirective;
+#isForkable()Z
+#isThreadBound()Z
+#supportsArrayType()Z
+#supportsSelectExpressionArrayType()Z
+#supportsNativeQueries()Z[deprecated]
+#setSupportsNativeQueries(Z)V[deprecated]
+#supportsDirectQueryProcedure()Z
+#setSupportsDirectQueryProcedure(Z)V
+#getNativeQueryProcedureName()Ljava/lang/String;[deprecated]
+#setNativeQueryProcedureName(Ljava/lang/String;)V[deprecated]
+#getDirectQueryProcedureName()Ljava/lang/String;
+#setDirectQueryProcedureName(Ljava/lang/String;)V
+#supportsOnlyCorrelatedSubqueries()Z
+#supportsSelectWithoutFrom()Z
+#supportsGroupByRollup()Z
+#supportsOrderByWithExtendedGrouping()Z
+#setThreadBound(Z)V
+#returnsSingleUpdateCount()Z
+#supportsPartialFiltering()Z
+#useBindingsForDependentJoin()Z
+#getRequiredLikeEscape()Ljava/lang/Character;
+#supportsScalarSubqueryProjection()Z
+#getTransactionSupport()Lorg/teiid/translator/ExecutionFactory$TransactionSupport;
+#setTransactionSupport(Lorg/teiid/translator/ExecutionFactory$TransactionSupport;)V
+#getExcludedCommonTableExpressionName()Ljava/lang/String;
+#setExcludedCommonTableExpressionName(Ljava/lang/String;)V
+#supportsLateralJoin()Z
+#supportsLateralJoinCondition()Z
+#supportsProcedureTable()Z
+#supportsUpsert()Z
@10.0.0.Beta2
+#supportsSetQueryLimitOffset()Z
@10.0.0.CR2
+#supportsIsDistinctCriteria()Z
@10.2.0
+#supportsOnlyLateralJoinProcedure()Z
@10.3.0
+#supportsOnlyTimestampAddLiteral()Z
@11.1.0
+#supportsWindowFunctionNtile()Z
+#supportsWindowFunctionPercentRank()Z
+#supportsWindowFunctionCumeDist()Z
+#supportsWindowFunctionNthValue()Z
@11.2.0
+#supportsListAgg()Z
+#supportsWindowFrameClause()Z
+#supportsMultipleOpenExecutions()Z
+#supportsAggregatesCountBig()Z
+#supportsGeographyType()Z
@12.1.0
+#getMaxProjectedColumns()I
@13.0.1
+#supportsProcedureParameterExpression()Z
@16.0.0
+#supportsOnlyRelationshipStyleJoins()Z

+###org/teiid/translator/FileConnection$Util
@10.0.0.Alpha2
+#<init>()V
+#getFiles(Ljava/lang/String;Lorg/teiid/translator/FileConnection;Z)[Ljava/io/File;
@12.0.0
-###org/teiid/translator/FileConnection$Util

+###org/teiid/translator/FileConnection
@10.0.0.Alpha2
+#getFile(Ljava/lang/String;)Ljava/io/File;
@12.0.0
-###org/teiid/translator/FileConnection

+###org/teiid/translator/MetadataProcessor
@10.0.0.Alpha2
+#process(Lorg/teiid/metadata/MetadataFactory;Ljava/lang/Object;)V

+###org/teiid/translator/ProcedureExecution
@10.0.0.Alpha2
+#getOutputParameterValues()Ljava/util/List;

+###org/teiid/translator/ResultSetExecution
@10.0.0.Alpha2
+#next()Ljava/util/List;

+###org/teiid/translator/ReusableExecution
@10.0.0.Alpha2
+#reset(Lorg/teiid/language/Command;Lorg/teiid/translator/ExecutionContext;Ljava/lang/Object;)V
+#dispose()V

+###org/teiid/translator/SourceSystemFunctions
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/translator/Translator
@10.0.0.Alpha2
+#name()Ljava/lang/String;
+#description()Ljava/lang/String;
+#deprecated()Ljava/lang/String;

+###org/teiid/translator/TranslatorBatchException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/Throwable;[I)V
+#getUpdateCounts()[I

+###org/teiid/translator/TranslatorException
@10.0.0.Alpha2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V

+###org/teiid/translator/TranslatorProperty$PropertyType
@10.0.0.Alpha2
+#values()[Lorg/teiid/translator/TranslatorProperty$PropertyType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/translator/TranslatorProperty$PropertyType;

+###org/teiid/translator/TranslatorProperty
@10.0.0.Alpha2
+#description()Ljava/lang/String;
+#display()Ljava/lang/String;
+#required()Z
+#readOnly()Z
+#advanced()Z
+#masked()Z
+#category()Lorg/teiid/translator/TranslatorProperty$PropertyType;

+###org/teiid/translator/TypeFacility$RUNTIME_CODES
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/translator/TypeFacility$RUNTIME_NAMES
@10.0.0.Alpha2
+#<init>()V

+###org/teiid/translator/TypeFacility$RUNTIME_TYPES
@10.0.0.Alpha2

+###org/teiid/translator/TypeFacility
@10.0.0.Alpha2
+#<init>()V
+#getDataTypeClass(Ljava/lang/String;)Ljava/lang/Class;
+#getDataTypeName(Ljava/lang/Class;)Ljava/lang/String;
+#getRuntimeType(Ljava/lang/Class;)Ljava/lang/Class;
+#getSQLTypeFromRuntimeType(Ljava/lang/Class;)I
+#getDataTypeNameFromSQLType(I)Ljava/lang/String;
+#convertToRuntimeType(Ljava/lang/Object;)Ljava/lang/Object;
+#convertDate(Ljava/util/Date;Ljava/util/TimeZone;Ljava/util/Calendar;Ljava/lang/Class;)Ljava/lang/Object;
+#convertPrimitiveToObject(Ljava/lang/Class;)Ljava/lang/Class;

+###org/teiid/translator/UpdateExecution
@10.0.0.Alpha2
+#getUpdateCounts()[I

+###org/teiid/translator/WSConnection$Util
@10.0.0.Alpha2
+#<init>()V
+#appendQueryString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#httpURLEncode(Ljava/lang/String;)Ljava/lang/String;
+#closeSource(Ljavax/xml/transform/Source;)V
@12.0.0
-###org/teiid/translator/WSConnection$Util

+###org/teiid/translator/WSConnection
@10.0.0.Alpha2
+#createDispatch(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/ws/Service$Mode;)Ljavax/xml/ws/Dispatch;
+#createDispatch(Ljava/lang/Class;Ljavax/xml/ws/Service$Mode;)Ljavax/xml/ws/Dispatch;
+#getWsdl()Ljava/net/URL;
+#getServiceQName()Ljavax/xml/namespace/QName;
+#getPortQName()Ljavax/xml/namespace/QName;
+#getStatusMessage(I)Ljava/lang/String;
@12.0.0
-###org/teiid/translator/WSConnection

+###org/teiid/util/FullyQualifiedName
@10.2.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#append(Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/util/FullyQualifiedName;
+#toString()Ljava/lang/String;

+###org/teiid/util/StAXSQLXML$StAXSourceProvider
@10.0.0.Alpha2
+#getStaxSource()Ljavax/xml/transform/stax/StAXSource;

+###org/teiid/util/StAXSQLXML
@10.0.0.Alpha2
+#<init>(Ljavax/xml/transform/stax/StAXSource;)V
+#<init>(Lorg/teiid/util/StAXSQLXML$StAXSourceProvider;Ljava/nio/charset/Charset;)V
+#getSource(Ljava/lang/Class;)Ljavax/xml/transform/Source;
+#getString()Ljava/lang/String;
+#getBinaryStream()Ljava/io/InputStream;
+#getCharacterStream()Ljava/io/Reader;

+###org/teiid/util/Version
@10.0.0.Alpha2
+#getVersion(Ljava/lang/String;)Lorg/teiid/util/Version;
+#<init>([Ljava/lang/Integer;)V
+#toString()Ljava/lang/String;
+#getMajorVersion()I
+#compareTo(Lorg/teiid/util/Version;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/teiid/util/XMLInputStream
@10.0.0.Alpha2
+#<init>(Ljavax/xml/transform/stax/StAXSource;Ljavax/xml/stream/XMLOutputFactory;)V
+#<init>(Ljavax/xml/transform/stax/StAXSource;Ljavax/xml/stream/XMLOutputFactory;Ljava/lang/String;)V
+#read()I
+#close()V

+###org/teiid/util/XMLReader
@10.0.0.Alpha2
+#<init>(Ljavax/xml/transform/stax/StAXSource;Ljavax/xml/stream/XMLOutputFactory;)V
+#read()I
+#close()V
+#read([CII)I

+###org/teiid/util/CharsetUtils$FixedEncoder
@11.1.0

+###org/teiid/util/WSUtil
@12.0.0
+#<init>()V
+#appendQueryString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#httpURLEncode(Ljava/lang/String;)Ljava/lang/String;
+#closeSource(Ljavax/xml/transform/Source;)V

+###org/teiid/language/WindowFrame$FrameMode
@11.2.0
+#values()[Lorg/teiid/language/WindowFrame$FrameMode;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/WindowFrame$FrameMode;

+###org/teiid/language/WindowFrame
@11.2.0
+#<init>(Lorg/teiid/language/WindowFrame$FrameMode;)V
+#getStart()Lorg/teiid/language/WindowFrame$FrameBound;
+#getEnd()Lorg/teiid/language/WindowFrame$FrameBound;
+#setStart(Lorg/teiid/language/WindowFrame$FrameBound;)V
+#setEnd(Lorg/teiid/language/WindowFrame$FrameBound;)V
+#getMode()Lorg/teiid/language/WindowFrame$FrameMode;
+#setMode(Lorg/teiid/language/WindowFrame$FrameMode;)V
+#acceptVisitor(Lorg/teiid/language/visitor/LanguageObjectVisitor;)V
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#clone()Lorg/teiid/language/WindowFrame;
+#clone()Ljava/lang/Object;

+###org/teiid/resource/api/ConnectionFactory
@12.0.0
+#getConnection()Lorg/teiid/resource/api/Connection;

+###org/teiid/resource/api/Connection
@12.0.0
+#close()V

+###org/teiid/util/CharsetUtils
@11.1.0
+#<init>()V
+#toHex(Ljava/nio/CharBuffer;B)V
+#getCharset(Ljava/lang/String;)Ljava/nio/charset/Charset;
@12.2.0
+#toHex(Ljava/lang/Appendable;B)V
-#toHex(Ljava/nio/CharBuffer;B)V

+###org/teiid/language/WindowFrame$FrameBound
@11.2.0
+#<init>(Lorg/teiid/language/WindowFrame$BoundMode;)V
+#getBound()Ljava/lang/Integer;
+#getBoundMode()Lorg/teiid/language/WindowFrame$BoundMode;
+#bound(Ljava/lang/Integer;)Lorg/teiid/language/WindowFrame$FrameBound;
+#setBound(Ljava/lang/Integer;)V
+#setBoundMode(Lorg/teiid/language/WindowFrame$BoundMode;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#clone()Lorg/teiid/language/WindowFrame$FrameBound;
+#clone()Ljava/lang/Object;

+###org/teiid/language/WindowFrame$BoundMode
@11.2.0
+#values()[Lorg/teiid/language/WindowFrame$BoundMode;
+#valueOf(Ljava/lang/String;)Lorg/teiid/language/WindowFrame$BoundMode;

+###org/teiid/resource/api/XAImporter
@12.0.0
+#importTransaction(Ljavax/transaction/TransactionManager;Ljavax/transaction/xa/Xid;I)Ljavax/transaction/Transaction;
+#commit(Ljavax/transaction/xa/Xid;Z)V
+#forget(Ljavax/transaction/xa/Xid;)V
+#prepare(Ljavax/transaction/xa/Xid;)I
+#recover(I)[Ljavax/transaction/xa/Xid;
+#rollback(Ljavax/transaction/xa/Xid;)V

+###org/teiid/resource/api/WrappedConnection
@12.0.0
+#unwrap()Ljava/lang/Object;

+###org/teiid/util/CharsetUtils$FixedDecoder
@11.1.0

+###org/teiid/metadata/Permission
@13.1.0
+#<init>()V
+#getResourceType()Lorg/teiid/metadata/Database$ResourceType;
+#setResourceType(Lorg/teiid/metadata/Database$ResourceType;)V
+#getResourceName()Ljava/lang/String;
+#setResourceName(Ljava/lang/String;)V
+#getMask()Ljava/lang/String;
+#setMask(Ljava/lang/String;)V
+#getMaskOrder()Ljava/lang/Integer;
+#setMaskOrder(Ljava/lang/Integer;)V
+#getCondition()Ljava/lang/String;
+#setCondition(Ljava/lang/String;Ljava/lang/Boolean;)V
+#isConditionAConstraint()Ljava/lang/Boolean;
+#getPrivileges()Ljava/util/EnumSet;
+#getRevokePrivileges()Ljava/util/EnumSet;
+#hasPrivilege(Lorg/teiid/metadata/Permission$Privilege;)Ljava/lang/Boolean;
+#setPrivileges(Ljava/util/List;)V
+#setRevokePrivileges(Ljava/util/List;)V
+#appendPrivileges(Ljava/util/EnumSet;)V
+#removePrivileges(Ljava/util/EnumSet;)V
+#setAllowSelect(Ljava/lang/Boolean;)V
+#setAllowAlter(Ljava/lang/Boolean;)V
+#setAllowInsert(Ljava/lang/Boolean;)V
+#setAllowDelete(Ljava/lang/Boolean;)V
+#setAllowExecute(Ljava/lang/Boolean;)V
+#setAllowUpdate(Ljava/lang/Boolean;)V
+#setAllowDrop(Ljava/lang/Boolean;)V
+#setAllowUsage(Ljava/lang/Boolean;)V
+#setAllowAllPrivileges(Ljava/lang/Boolean;)V
+#setAllowTemporyTables(Ljava/lang/Boolean;)V

+###org/teiid/metadata/Permission$Privilege
@13.1.0
+#values()[Lorg/teiid/metadata/Permission$Privilege;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Permission$Privilege;
+#toString()Ljava/lang/String;

+###org/teiid/metadata/Policy$Operation
@13.1.0
+#values()[Lorg/teiid/metadata/Policy$Operation;
+#valueOf(Ljava/lang/String;)Lorg/teiid/metadata/Policy$Operation;

+###org/teiid/metadata/Role$ResourceKey
@13.1.0
+#<init>()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#of(Ljava/lang/String;Lorg/teiid/metadata/Database$ResourceType;)Lorg/teiid/metadata/Role$ResourceKey;
+#getName()Ljava/lang/String;
+#getType()Lorg/teiid/metadata/Database$ResourceType;
+#compareTo(Lorg/teiid/metadata/Role$ResourceKey;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###org/teiid/metadata/Policy
@13.1.0
+#<init>()V
+#getResourceType()Lorg/teiid/metadata/Database$ResourceType;
+#setResourceType(Lorg/teiid/metadata/Database$ResourceType;)V
+#getResourceName()Ljava/lang/String;
+#setResourceName(Ljava/lang/String;)V
+#getCondition()Ljava/lang/String;
+#setCondition(Ljava/lang/String;)V
+#getOperations()Ljava/util/Set;
+#appliesTo(Lorg/teiid/metadata/Policy$Operation;)Z

+###org/teiid/adminapi/Model$Type
@13.0.1
+#values()[Lorg/teiid/adminapi/Model$Type;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/Model$Type;

+###org/teiid/adminapi/AdminPlugin
@13.0.1
+#<init>()V

+###org/teiid/adminapi/VDB
@13.0.1
+#getModels()Ljava/util/List;
+#getStatus()Lorg/teiid/adminapi/VDB$Status;
+#getConnectionType()Lorg/teiid/adminapi/VDB$ConnectionType;
+#getVersion()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getValidityErrors()Ljava/util/List;
+#isValid()Z
+#getDataPolicies()Ljava/util/List;
+#getOverrideTranslators()Ljava/util/List;
+#getVDBImports()Ljava/util/List;
+#getEntries()Ljava/util/List;
+#isVisible(Ljava/lang/String;)Z
+#getName()Ljava/lang/String;

+###org/teiid/adminapi/EngineStatistics
@13.0.1

+###org/teiid/adminapi/impl/VDBImportMetadata
@13.0.1
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V
+#isImportDataPolicies()Z
+#setImportDataPolicies(Z)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/teiid/adminapi/impl/VDBTranslatorMetaData
@13.0.1
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#getExecutionFactoryClass()Ljava/lang/Class;
+#setExecutionFactoryClass(Ljava/lang/Class;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getModuleName()Ljava/lang/String;
+#setModuleName(Ljava/lang/String;)V
+#setParent(Lorg/teiid/adminapi/impl/VDBTranslatorMetaData;)V
+#getParent()Lorg/teiid/adminapi/impl/VDBTranslatorMetaData;

+###org/teiid/adminapi/impl/EntryMetaData
@13.0.1
+#<init>()V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V

+###org/teiid/adminapi/impl/ModelNodeConstants
@13.0.1
+#<init>()V

+###org/teiid/adminapi/impl/EngineStatisticsMetadata
@13.0.1
+#<init>()V
+#getSessionCount()I
+#getTotalMemoryUsedInKB()J
+#getMemoryUsedByActivePlansInKB()J
+#getDiskWriteCount()J
+#getDiskReadCount()J
+#getCacheReadCount()J
+#getCacheWriteCount()J
+#getDiskSpaceUsedInMB()J
+#getActivePlanCount()I
+#getWaitPlanCount()I
+#getMaxWaitPlanWaterMark()I
+#setSessionCount(I)V
+#setTotalMemoryUsedInKB(J)V
+#setMemoryUsedByActivePlansInKB(J)V
+#setDiskWriteCount(J)V
+#setDiskReadCount(J)V
+#setCacheWriteCount(J)V
+#setCacheReadCount(J)V
+#setDiskSpaceUsedInMB(J)V
+#setActivePlanCount(I)V
+#setWaitPlanCount(I)V
+#setMaxWaitPlanWaterMark(I)V
+#toString()Ljava/lang/String;
+#getBufferHeapInUseKb()J
+#getBufferHeapReservedByActivePlansKb()J
+#getStorageReadCount()J
+#getStorageWriteCount()J

+###org/teiid/adminapi/impl/CacheStatisticsMetadata
@13.0.1
+#<init>()V
+#getRequestCount()I
+#setRequestCount(I)V
+#getHitRatio()D
+#getTotalEntries()I
+#setHitRatio(D)V
+#setTotalEntries(I)V
+#toString()Ljava/lang/String;

+###org/teiid/adminapi/impl/VDBMetaData
@13.0.1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getFullName()Ljava/lang/String;
+#getConnectionType()Lorg/teiid/adminapi/VDB$ConnectionType;
+#setConnectionType(Lorg/teiid/adminapi/VDB$ConnectionType;)V
+#setConnectionType(Ljava/lang/String;)V
+#getStatus()Lorg/teiid/adminapi/VDB$Status;
+#setStatus(Lorg/teiid/adminapi/VDB$Status;)V
+#setStatus(Ljava/lang/String;)V
+#getVersion()Ljava/lang/String;
+#setVersion(I)V
+#setVersion(Ljava/lang/String;)V
+#getModels()Ljava/util/List;
+#getModelMetaDatas()Ljava/util/LinkedHashMap;
+#setModels(Ljava/util/Collection;)V
+#addModel(Ljava/lang/String;)Lorg/teiid/adminapi/impl/ModelMetaData;
+#addModel(Lorg/teiid/adminapi/impl/ModelMetaData;)Lorg/teiid/adminapi/impl/ModelMetaData;
+#getOverrideTranslators()Ljava/util/List;
+#getOverrideTranslatorsMap()Ljava/util/LinkedHashMap;
+#setOverrideTranslators(Ljava/util/List;)V
+#addOverideTranslator(Lorg/teiid/adminapi/impl/VDBTranslatorMetaData;)V
+#isOverideTranslator(Ljava/lang/String;)Z
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getValidityErrors()Ljava/util/List;
+#isValid()Z
+#hasErrors()Z
+#toString()Ljava/lang/String;
+#isVisible(Ljava/lang/String;)Z
+#getModel(Ljava/lang/String;)Lorg/teiid/adminapi/impl/ModelMetaData;
+#isXmlDeployment()Z
+#setXmlDeployment(Z)V
+#getDataPolicies()Ljava/util/List;
+#setDataPolicies(Ljava/util/List;)V
+#addDataPolicy(Lorg/teiid/adminapi/impl/DataPolicyMetadata;)Lorg/teiid/adminapi/impl/DataPolicyMetadata;
+#getDataPolicyMap()Ljava/util/LinkedHashMap;
+#getTranslator(Ljava/lang/String;)Lorg/teiid/adminapi/impl/VDBTranslatorMetaData;
+#isPreview()Z
+#getQueryTimeout()J
+#getVDBImports()Ljava/util/List;
+#addVDBImportMetadata(Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/adminapi/impl/VDBImportMetadata;
+#getImportedModels()Ljava/util/Set;
+#setImportedModels(Ljava/util/Set;)V
+#getEntries()Ljava/util/List;
+#setEntries(Ljava/util/List;)V
+#clone()Lorg/teiid/adminapi/impl/VDBMetaData;
+#setVisibilityOverride(Ljava/lang/String;Z)V
+#getVisibilityOverrides()Ljava/util/Map;
+#getStatusTimestamp(Lorg/teiid/adminapi/VDB$Status;)Ljava/sql/Timestamp;
+#clone()Ljava/lang/Object;

+###org/teiid/adminapi/impl/ModelMetaData$Message
@13.0.1
+#<init>()V
+#<init>(Lorg/teiid/adminapi/impl/ModelMetaData$Message$Severity;Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getSeverity()Lorg/teiid/adminapi/impl/ModelMetaData$Message$Severity;
+#setSeverity(Lorg/teiid/adminapi/impl/ModelMetaData$Message$Severity;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z

+###org/teiid/adminapi/impl/SourceMappingMetadata
@13.0.1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getConnectionJndiName()Ljava/lang/String;
+#setConnectionJndiName(Ljava/lang/String;)V
+#getTranslatorName()Ljava/lang/String;
+#setTranslatorName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/teiid/adminapi/impl/TransactionMetadata
@13.0.1
+#<init>()V
+#getAssociatedSession()Ljava/lang/String;
+#setAssociatedSession(Ljava/lang/String;)V
+#getScope()Ljava/lang/String;
+#setScope(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getCreatedTime()J
+#setCreatedTime(J)V
+#toString()Ljava/lang/String;

+###org/teiid/adminapi/impl/RequestMetadata
@13.0.1
+#<init>()V
+#getExecutionId()J
+#setExecutionId(J)V
+#getState()Lorg/teiid/adminapi/Request$ProcessingState;
+#setState(Lorg/teiid/adminapi/Request$ProcessingState;)V
+#getThreadState()Lorg/teiid/adminapi/Request$ThreadState;
+#setThreadState(Lorg/teiid/adminapi/Request$ThreadState;)V
+#getSessionId()Ljava/lang/String;
+#setSessionId(Ljava/lang/String;)V
+#getStartTime()J
+#setStartTime(J)V
+#getCommand()Ljava/lang/String;
+#setCommand(Ljava/lang/String;)V
+#sourceRequest()Z
+#setSourceRequest(Z)V
+#getNodeId()Ljava/lang/Integer;
+#setNodeId(Ljava/lang/Integer;)V
+#getTransactionId()Ljava/lang/String;
+#setTransactionId(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#isSourceRequest()Z

+###org/teiid/adminapi/impl/DataPolicyMetadata
@13.0.1
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getPermissions()Ljava/util/List;
+#getPermissionMetadata(Ljava/lang/String;Lorg/teiid/adminapi/DataPolicy$ResourceType;)Lorg/teiid/adminapi/impl/DataPolicyMetadata$PermissionMetaData;
+#hasRowSecurity(Ljava/lang/String;)Z
+#setPermissions(Ljava/util/List;)V
+#addPermission([Lorg/teiid/adminapi/impl/DataPolicyMetadata$PermissionMetaData;)V
+#getMappedRoleNames()Ljava/util/List;
+#setMappedRoleNames(Ljava/util/List;)V
+#addMappedRoleName(Ljava/lang/String;)V
+#removeMappedRoleName(Ljava/lang/String;)V
+#allows(Ljava/lang/String;Lorg/teiid/adminapi/DataPolicy$ResourceType;Lorg/teiid/adminapi/DataPolicy$PermissionType;)Ljava/lang/Boolean;
+#isAllowCreateTemporaryTables()Ljava/lang/Boolean;
+#setAllowCreateTemporaryTables(Ljava/lang/Boolean;)V
+#isAnyAuthenticated()Z
+#setAnyAuthenticated(Z)V
+#isGrantAll()Z
+#setGrantAll(Z)V
+#clone()Lorg/teiid/adminapi/impl/DataPolicyMetadata;
+#getSchemas()Ljava/util/Set;
+#setSchemas(Ljava/util/Set;)V
+#clone()Ljava/lang/Object;
@13.1.0
+#addPolicies(Ljava/util/Map;)V
+#getPolicies()Ljava/util/Map;
+#getPolicies(Lorg/teiid/metadata/Database$ResourceType;Ljava/lang/String;)Ljava/util/Map;
-#setPermissions(Ljava/util/List;)V

+###org/teiid/adminapi/impl/ModelMetaData
@13.0.1
+#<init>()V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#isSource()Z
+#isVisible()Z
+#getModelType()Lorg/teiid/adminapi/Model$Type;
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#isSupportsMultiSourceBindings()Z
+#setSupportsMultiSourceBindings(Z)V
+#setModelType(Lorg/teiid/adminapi/Model$Type;)V
+#setModelType(Ljava/lang/String;)V
+#getMetadataStatus()Lorg/teiid/adminapi/Model$MetadataStatus;
+#setMetadataStatus(Lorg/teiid/adminapi/Model$MetadataStatus;)V
+#setMetadataStatus(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#setVisible(Z)V
+#getSourceMappings()Ljava/util/Collection;
+#getSources()Ljava/util/Map;
+#getSourceMapping(Ljava/lang/String;)Lorg/teiid/adminapi/impl/SourceMappingMetadata;
+#setSourceMappings(Ljava/util/List;)V
+#getSourceNames()Ljava/util/List;
+#getSourceConnectionJndiName(Ljava/lang/String;)Ljava/lang/String;
+#getSourceTranslatorName(Ljava/lang/String;)Ljava/lang/String;
+#addSourceMapping(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/adminapi/impl/SourceMappingMetadata;
+#addSourceMapping(Lorg/teiid/adminapi/impl/SourceMappingMetadata;)V
+#hasErrors()Z
+#getMessages()Ljava/util/List;
+#getMessages(Z)Ljava/util/List;
+#addMessage(Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/adminapi/impl/ModelMetaData$Message;
+#hasRuntimeMessages()Z
+#addRuntimeError(Ljava/lang/String;)Lorg/teiid/adminapi/impl/ModelMetaData$Message;
+#addRuntimeMessage(Lorg/teiid/adminapi/impl/ModelMetaData$Message$Severity;Ljava/lang/String;)Lorg/teiid/adminapi/impl/ModelMetaData$Message;
+#addMessage(Lorg/teiid/adminapi/impl/ModelMetaData$Message;)Lorg/teiid/adminapi/impl/ModelMetaData$Message;
+#clearRuntimeMessages()V
+#clearMessages()V
+#addSourceMetadata(Ljava/lang/String;Ljava/lang/String;)V
+#getSchemaSourceType()Ljava/lang/String;[deprecated]
+#setSchemaSourceType(Ljava/lang/String;)V[deprecated]
+#getSchemaText()Ljava/lang/String;[deprecated]
+#setSchemaText(Ljava/lang/String;)V[deprecated]
+#getSourceMetadataType()Ljava/util/List;
+#getSourceMetadataText()Ljava/util/List;
+#getValidityErrors()Ljava/util/List;
+#getReservedNames()Ljava/util/Collection;

+###org/teiid/adminapi/impl/WorkerPoolStatisticsMetadata
@13.0.1
+#<init>()V
+#getActiveThreads()I
+#getHighestActiveThreads()I
+#getTotalCompleted()J
+#getTotalSubmitted()J
+#getQueueName()Ljava/lang/String;
+#getQueued()I
+#getHighestQueued()I
+#getMaxThreads()I
+#setQueued(I)V
+#setHighestQueued(I)V
+#setMaxThreads(I)V
+#setActiveThreads(I)V
+#setHighestActiveThreads(I)V
+#setTotalSubmitted(J)V
+#setTotalCompleted(J)V
+#setQueueName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/teiid/adminapi/impl/AdminObjectImpl
@13.0.1
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getServerGroup()Ljava/lang/String;
+#getServerName()Ljava/lang/String;
+#getHostName()Ljava/lang/String;
+#setServerGroup(Ljava/lang/String;)V
+#setServerName(Ljava/lang/String;)V
+#setHostName(Ljava/lang/String;)V
+#getProperties()Ljava/util/Properties;
+#setProperties(Ljava/util/Properties;)V
+#getPropertiesMap()Ljava/util/Map;
+#getPropertyValue(Ljava/lang/String;)Ljava/lang/String;
+#addProperty(Ljava/lang/String;Ljava/lang/String;)V
+#removeProperty(Ljava/lang/String;)Ljava/lang/String;
+#addAttchment(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#addAttachment(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#removeAttachment(Ljava/lang/Class;)Ljava/lang/Object;
+#getAttachment(Ljava/lang/Class;)Ljava/lang/Object;

+###org/teiid/adminapi/impl/SessionMetadata
@13.0.1
+#<init>()V
+#getApplicationName()Ljava/lang/String;
+#setApplicationName(Ljava/lang/String;)V
+#getCreatedTime()J
+#setCreatedTime(J)V
+#getClientHostName()Ljava/lang/String;
+#setClientHostName(Ljava/lang/String;)V
+#getIPAddress()Ljava/lang/String;
+#setIPAddress(Ljava/lang/String;)V
+#getLastPingTime()J
+#setLastPingTime(J)V
+#getSessionId()Ljava/lang/String;
+#setSessionId(Ljava/lang/String;)V
+#getUserName()Ljava/lang/String;
+#setUserName(Ljava/lang/String;)V
+#getVDBName()Ljava/lang/String;
+#setVDBName(Ljava/lang/String;)V
+#getVDBVersion()Ljava/lang/String;
+#setVDBVersion(Ljava/lang/Object;)V
+#getSecurityDomain()Ljava/lang/String;
+#setSecurityDomain(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#getVdb()Lorg/teiid/adminapi/impl/VDBMetaData;
+#setVdb(Lorg/teiid/adminapi/impl/VDBMetaData;)V
+#getSessionToken()Lorg/teiid/client/security/SessionToken;
+#setSessionToken(Lorg/teiid/client/security/SessionToken;)V
+#setSubject(Ljavax/security/auth/Subject;)V
+#getSecurityContext()Ljava/lang/Object;
+#setSecurityContext(Ljava/lang/Object;)V
+#getSubject()Ljavax/security/auth/Subject;
+#setEmbedded(Z)V
+#isEmbedded()Z
+#getClientHardwareAddress()Ljava/lang/String;
+#setClientHardwareAddress(Ljava/lang/String;)V
+#getSessionVariables()Ljava/util/Map;
+#setClosed()V
+#isClosed()Z
+#getBytesUsed()J
+#addAndGetBytesUsed(J)J
+#isActive()Z
+#setActive(Z)V

+###org/teiid/adminapi/impl/PropertyDefinitionMetadata
@13.0.1
+#<init>()V
+#toString()Ljava/lang/String;
+#getAllowedValues()Ljava/util/Collection;
+#getDefaultValue()Ljava/lang/Object;
+#getDescription()Ljava/lang/String;
+#getDisplayName()Ljava/lang/String;
+#getPropertyTypeClassName()Ljava/lang/String;
+#getRequiresRestart()Lorg/teiid/adminapi/PropertyDefinition$RestartType;
+#isAdvanced()Z
+#isMasked()Z
+#isModifiable()Z
+#isRequired()Z
+#setAllowedValues(Ljava/util/Collection;)V
+#setDefaultValue(Ljava/io/Serializable;)V
+#setDescription(Ljava/lang/String;)V
+#setDisplayName(Ljava/lang/String;)V
+#setAdvanced(Z)V
+#setMasked(Z)V
+#setModifiable(Z)V
+#setPropertyTypeClassName(Ljava/lang/String;)V
+#setRequired(Z)V
+#setRequiresRestart(Lorg/teiid/adminapi/PropertyDefinition$RestartType;)V
+#isConstrainedToAllowedValues()Z
+#getCategory()Ljava/lang/String;
+#setCategory(Ljava/lang/String;)V

+###org/teiid/adminapi/impl/DataPolicyMetadata$ResourceKey
@13.0.1
+#<init>()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getName()Ljava/lang/String;
+#getType()Lorg/teiid/adminapi/DataPolicy$ResourceType;
+#compareTo(Lorg/teiid/adminapi/impl/DataPolicyMetadata$ResourceKey;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###org/teiid/adminapi/impl/DataPolicyMetadata$PermissionMetaData
@13.0.1
+#<init>()V
+#getResourceName()Ljava/lang/String;
+#setResourceName(Ljava/lang/String;)V
+#setResourceType(Lorg/teiid/adminapi/DataPolicy$ResourceType;)V
+#getResourceType()Lorg/teiid/adminapi/DataPolicy$ResourceType;
+#getAllowCreate()Ljava/lang/Boolean;
+#setAllowCreate(Ljava/lang/Boolean;)V
+#getAllowRead()Ljava/lang/Boolean;
+#setAllowRead(Ljava/lang/Boolean;)V
+#getAllowUpdate()Ljava/lang/Boolean;
+#setAllowUpdate(Ljava/lang/Boolean;)V
+#getAllowDelete()Ljava/lang/Boolean;
+#setAllowDelete(Ljava/lang/Boolean;)V
+#getType()Ljava/lang/String;
+#allows(Lorg/teiid/adminapi/DataPolicy$PermissionType;)Ljava/lang/Boolean;
+#getAllowAlter()Ljava/lang/Boolean;
+#getAllowExecute()Ljava/lang/Boolean;
+#setAllowAlter(Ljava/lang/Boolean;)V
+#setAllowExecute(Ljava/lang/Boolean;)V
+#getAllowLanguage()Ljava/lang/Boolean;
+#setAllowLanguage(Ljava/lang/Boolean;)V
+#toString()Ljava/lang/String;
+#getCondition()Ljava/lang/String;
+#setCondition(Ljava/lang/String;)V
+#getMask()Ljava/lang/String;
+#setMask(Ljava/lang/String;)V
+#getOrder()Ljava/lang/Integer;
+#setOrder(Ljava/lang/Integer;)V
+#getResolvedCondition()Ljava/lang/Object;
+#setResolvedCondition(Ljava/lang/Object;)V
+#getResolvedMask()Ljava/lang/Object;
+#setResolvedMask(Ljava/lang/Object;)V
+#getConstraint()Ljava/lang/Boolean;
+#setConstraint(Ljava/lang/Boolean;)V
@13.1.0
+#clone()Lorg/teiid/adminapi/impl/DataPolicyMetadata$PermissionMetaData;
+#clone()Ljava/lang/Object;

+###org/teiid/adminapi/impl/VDBMetadataParser
@13.0.1
+#<init>()V
+#unmarshell(Ljava/io/InputStream;)Lorg/teiid/adminapi/impl/VDBMetaData;[deprecated]
+#unmarshall(Ljava/io/InputStream;)Lorg/teiid/adminapi/impl/VDBMetaData;
+#validate(Ljava/io/InputStream;)V
+#marshell(Lorg/teiid/adminapi/impl/VDBMetaData;Ljava/io/OutputStream;)V[deprecated]
+#marshall(Lorg/teiid/adminapi/impl/VDBMetaData;Ljava/io/OutputStream;)V

+###org/teiid/adminapi/impl/ModelMetaData$Message$Severity
@13.0.1
+#values()[Lorg/teiid/adminapi/impl/ModelMetaData$Message$Severity;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/impl/ModelMetaData$Message$Severity;

+###org/teiid/adminapi/AdminException
@13.0.1
+#hasMultiple()Z
+#getChildren()Ljava/util/List;
+#addChild(Lorg/teiid/adminapi/AdminException;)V

+###org/teiid/adminapi/AdminObject
@13.0.1
+#getName()Ljava/lang/String;
+#getProperties()Ljava/util/Properties;
+#getPropertyValue(Ljava/lang/String;)Ljava/lang/String;

+###org/teiid/adminapi/DataPolicy$Context
@13.0.1
+#values()[Lorg/teiid/adminapi/DataPolicy$Context;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/DataPolicy$Context;

+###org/teiid/adminapi/WorkerPoolStatistics
@13.0.1

+###org/teiid/adminapi/Entry
@13.0.1
+#getPath()Ljava/lang/String;
+#getDescription()Ljava/lang/String;

+###org/teiid/adminapi/PropertyDefinition
@13.0.1
+#getDisplayName()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getPropertyTypeClassName()Ljava/lang/String;
+#getDefaultValue()Ljava/lang/Object;
+#getAllowedValues()Ljava/util/Collection;
+#getRequiresRestart()Lorg/teiid/adminapi/PropertyDefinition$RestartType;
+#isModifiable()Z
+#isConstrainedToAllowedValues()Z
+#isAdvanced()Z
+#isRequired()Z
+#isMasked()Z
+#getCategory()Ljava/lang/String;

+###org/teiid/adminapi/Admin$SchemaObjectType
@13.0.1
+#values()[Lorg/teiid/adminapi/Admin$SchemaObjectType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/Admin$SchemaObjectType;

+###org/teiid/adminapi/DataPolicy$DataPermission
@13.0.1
+#getResourceName()Ljava/lang/String;
+#getResourceType()Lorg/teiid/adminapi/DataPolicy$ResourceType;
+#getAllowCreate()Ljava/lang/Boolean;
+#getAllowRead()Ljava/lang/Boolean;
+#getAllowUpdate()Ljava/lang/Boolean;
+#getAllowDelete()Ljava/lang/Boolean;
+#getAllowAlter()Ljava/lang/Boolean;
+#getAllowExecute()Ljava/lang/Boolean;
+#getAllowLanguage()Ljava/lang/Boolean;
+#getCondition()Ljava/lang/String;
+#getMask()Ljava/lang/String;
+#getOrder()Ljava/lang/Integer;
+#getConstraint()Ljava/lang/Boolean;

+###org/teiid/adminapi/Session
@13.0.1

+###org/teiid/adminapi/WorkerPoolStatisticsBean
@13.0.1
+#getActiveThreads()I
+#getHighestActiveThreads()I
+#getQueueName()Ljava/lang/String;
+#getMaxThreads()I
+#getQueued()I
+#getTotalCompleted()J
+#getTotalSubmitted()J
+#getHighestQueued()I

+###org/teiid/adminapi/SessionBean
@13.0.1
+#getLastPingTime()J
+#getApplicationName()Ljava/lang/String;
+#getSessionId()Ljava/lang/String;
+#getUserName()Ljava/lang/String;
+#getVDBName()Ljava/lang/String;
+#getVDBVersion()Ljava/lang/String;
+#getIPAddress()Ljava/lang/String;
+#getClientHostName()Ljava/lang/String;
+#getClientHardwareAddress()Ljava/lang/String;
+#getCreatedTime()J
+#getSecurityDomain()Ljava/lang/String;

+###org/teiid/adminapi/CacheStatistics
@13.0.1
+#getHitRatio()D
+#getTotalEntries()I
+#getRequestCount()I

+###org/teiid/adminapi/Request$ThreadState
@13.0.1
+#values()[Lorg/teiid/adminapi/Request$ThreadState;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/Request$ThreadState;

+###org/teiid/adminapi/DataPolicy$PermissionType
@13.0.1
+#values()[Lorg/teiid/adminapi/DataPolicy$PermissionType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/DataPolicy$PermissionType;

+###org/teiid/adminapi/AdminPlugin$Event
@13.0.1
+#values()[Lorg/teiid/adminapi/AdminPlugin$Event;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/AdminPlugin$Event;

+###org/teiid/adminapi/RequestBean
@13.0.1
+#getExecutionId()J
+#getSessionId()Ljava/lang/String;
+#getCommand()Ljava/lang/String;
+#getStartTime()J
+#getTransactionId()Ljava/lang/String;
+#isSourceRequest()Z
+#getNodeId()Ljava/lang/Integer;
+#getState()Lorg/teiid/adminapi/Request$ProcessingState;
+#getThreadState()Lorg/teiid/adminapi/Request$ThreadState;

+###org/teiid/adminapi/Model
@13.0.1
+#getDescription()Ljava/lang/String;
+#isSource()Z
+#isVisible()Z
+#getModelType()Lorg/teiid/adminapi/Model$Type;
+#isSupportsMultiSourceBindings()Z
+#getSourceNames()Ljava/util/List;
+#getSourceConnectionJndiName(Ljava/lang/String;)Ljava/lang/String;
+#getSourceTranslatorName(Ljava/lang/String;)Ljava/lang/String;
+#getValidityErrors()Ljava/util/List;
+#getMetadataStatus()Lorg/teiid/adminapi/Model$MetadataStatus;

+###org/teiid/adminapi/VDBImport
@13.0.1
+#getName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#isImportDataPolicies()Z

+###org/teiid/adminapi/DataPolicy$ResourceType
@13.0.1
+#values()[Lorg/teiid/adminapi/DataPolicy$ResourceType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/DataPolicy$ResourceType;

+###org/teiid/adminapi/EngineStatisticsBean
@13.0.1
+#getSessionCount()I
+#getTotalMemoryUsedInKB()J[deprecated]
+#getBufferHeapInUseKb()J
+#getMemoryUsedByActivePlansInKB()J[deprecated]
+#getBufferHeapReservedByActivePlansKb()J
+#getDiskWriteCount()J
+#getDiskReadCount()J
+#getCacheReadCount()J[deprecated]
+#getStorageReadCount()J
+#getCacheWriteCount()J[deprecated]
+#getStorageWriteCount()J
+#getDiskSpaceUsedInMB()J
+#getActivePlanCount()I
+#getWaitPlanCount()I
+#getMaxWaitPlanWaterMark()I

+###org/teiid/adminapi/PropertyDefinition$RestartType
@13.0.1
+#values()[Lorg/teiid/adminapi/PropertyDefinition$RestartType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/PropertyDefinition$RestartType;

+###org/teiid/adminapi/VDB$Status
@13.0.1
+#values()[Lorg/teiid/adminapi/VDB$Status;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/VDB$Status;

+###org/teiid/adminapi/Model$MetadataStatus
@13.0.1
+#values()[Lorg/teiid/adminapi/Model$MetadataStatus;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/Model$MetadataStatus;

+###org/teiid/adminapi/Translator
@13.0.1
+#getType()Ljava/lang/String;
+#getDescription()Ljava/lang/String;

+###org/teiid/adminapi/Transaction
@13.0.1
+#getAssociatedSession()Ljava/lang/String;
+#getScope()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#getCreatedTime()J

+###org/teiid/adminapi/Admin$TranlatorPropertyType
@13.0.1
+#values()[Lorg/teiid/adminapi/Admin$TranlatorPropertyType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/Admin$TranlatorPropertyType;

+###org/teiid/adminapi/Request
@13.0.1
+#sourceRequest()Z

+###org/teiid/adminapi/Request$ProcessingState
@13.0.1
+#values()[Lorg/teiid/adminapi/Request$ProcessingState;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/Request$ProcessingState;

+###org/teiid/adminapi/Admin$Cache
@13.0.1
+#values()[Lorg/teiid/adminapi/Admin$Cache;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/Admin$Cache;

+###org/teiid/adminapi/VDB$ConnectionType
@13.0.1
+#values()[Lorg/teiid/adminapi/VDB$ConnectionType;
+#valueOf(Ljava/lang/String;)Lorg/teiid/adminapi/VDB$ConnectionType;

+###org/teiid/adminapi/Admin
@13.0.1
+#removeSource(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V[deprecated]
+#removeSource(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addSource(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#addSource(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#updateSource(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#updateSource(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#changeVDBConnectionType(Ljava/lang/String;ILorg/teiid/adminapi/VDB$ConnectionType;)V[deprecated]
+#changeVDBConnectionType(Ljava/lang/String;Ljava/lang/String;Lorg/teiid/adminapi/VDB$ConnectionType;)V
+#deploy(Ljava/lang/String;Ljava/io/InputStream;)V
+#deploy(Ljava/lang/String;Ljava/io/InputStream;Z)V
+#getDeployments()Ljava/util/List;
+#undeploy(Ljava/lang/String;)V
+#getVDBs()Ljava/util/Collection;
+#getVDB(Ljava/lang/String;I)Lorg/teiid/adminapi/VDB;[deprecated]
+#getVDB(Ljava/lang/String;Ljava/lang/String;)Lorg/teiid/adminapi/VDB;
+#restartVDB(Ljava/lang/String;I[Ljava/lang/String;)V[deprecated]
+#restartVDB(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#getTranslators()Ljava/util/Collection;
+#getTranslator(Ljava/lang/String;)Lorg/teiid/adminapi/Translator;
+#getWorkerPoolStats()Ljava/util/Collection;
+#getCacheTypes()Ljava/util/Collection;
+#getSessions()Ljava/util/Collection;
+#getRequests()Ljava/util/Collection;
+#getRequestsForSession(Ljava/lang/String;)Ljava/util/Collection;
+#getTemplatePropertyDefinitions(Ljava/lang/String;)Ljava/util/Collection;
+#getTranslatorPropertyDefinitions(Ljava/lang/String;)Ljava/util/Collection;[deprecated]
+#getTranslatorPropertyDefinitions(Ljava/lang/String;Lorg/teiid/adminapi/Admin$TranlatorPropertyType;)Ljava/util/Collection;
+#getTransactions()Ljava/util/Collection;
+#clearCache(Ljava/lang/String;)V
+#clearCache(Ljava/lang/String;Ljava/lang/String;I)V[deprecated]
+#clearCache(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getCacheStats(Ljava/lang/String;)Ljava/util/Collection;
+#getEngineStats()Ljava/util/Collection;
+#terminateSession(Ljava/lang/String;)V
+#cancelRequest(Ljava/lang/String;J)V
+#terminateTransaction(Ljava/lang/String;)V
+#close()V
+#addDataRoleMapping(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V[deprecated]
+#addDataRoleMapping(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#removeDataRoleMapping(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V[deprecated]
+#removeDataRoleMapping(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setAnyAuthenticatedForDataRole(Ljava/lang/String;ILjava/lang/String;Z)V[deprecated]
+#setAnyAuthenticatedForDataRole(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#createDataSource(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#getDataSource(Ljava/lang/String;)Ljava/util/Properties;
+#deleteDataSource(Ljava/lang/String;)V
+#getDataSourceNames()Ljava/util/Collection;
+#getDataSourceTemplateNames()Ljava/util/Set;
+#markDataSourceAvailable(Ljava/lang/String;)V
+#getSchema(Ljava/lang/String;ILjava/lang/String;Ljava/util/EnumSet;Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#getSchema(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/EnumSet;Ljava/lang/String;)Ljava/lang/String;
+#getQueryPlan(Ljava/lang/String;J)Ljava/lang/String;
+#restart()V
+#setProfileName(Ljava/lang/String;)V
+#getVDBs(Z)Ljava/util/Collection;
+#deployVDBZip(Ljava/net/URL;)V

+###org/teiid/adminapi/AdminComponentException
@13.0.1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V

+###org/teiid/adminapi/AdminProcessingException
@13.0.1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;Ljava/lang/String;)V
+#<init>(Lorg/teiid/core/BundleUtil$Event;Ljava/lang/Throwable;)V

+###org/teiid/adminapi/DataPolicy
@13.0.1
+#getName()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getPermissions()Ljava/util/List;
+#getMappedRoleNames()Ljava/util/List;
+#isAnyAuthenticated()Z
+#isGrantAll()Z
+#isAllowCreateTemporaryTables()Ljava/lang/Boolean;

+###org/teiid/adminapi/DomainAware
@13.0.1
+#getServerGroup()Ljava/lang/String;
+#getServerName()Ljava/lang/String;
+#getHostName()Ljava/lang/String;
