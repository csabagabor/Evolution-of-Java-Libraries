
+###okhttp3/internal/http2/Http2Server
@3.5.0
+#<init>(Ljava/io/File;Ljavax/net/ssl/SSLSocketFactory;)V
+#onStream(Lokhttp3/internal/http2/Http2Stream;)V
+#main([Ljava/lang/String;)V
@3.10.0
-###okhttp3/internal/http2/Http2Server

+###okhttp3/internal/tls/HeldCertificate$Builder
@3.3.1
+#<init>()V
+#serialNumber(Ljava/lang/String;)Lokhttp3/internal/tls/HeldCertificate$Builder;
+#commonName(Ljava/lang/String;)Lokhttp3/internal/tls/HeldCertificate$Builder;
+#keyPair(Ljava/security/KeyPair;)Lokhttp3/internal/tls/HeldCertificate$Builder;
+#issuedBy(Lokhttp3/internal/tls/HeldCertificate;)Lokhttp3/internal/tls/HeldCertificate$Builder;
+#ca(I)Lokhttp3/internal/tls/HeldCertificate$Builder;
+#build()Lokhttp3/internal/tls/HeldCertificate;
+#generateKeyPair()Ljava/security/KeyPair;
@3.6.0
+#subjectAlternativeName(Ljava/lang/String;)Lokhttp3/internal/tls/HeldCertificate$Builder;
@3.10.0
-###okhttp3/internal/tls/HeldCertificate$Builder

+###okhttp3/internal/tls/HeldCertificate
@3.3.1
+#<init>(Ljava/security/cert/X509Certificate;Ljava/security/KeyPair;)V
@3.10.0
-###okhttp3/internal/tls/HeldCertificate

+###okhttp3/internal/tls/SslClient$Builder
@3.3.1
+#<init>()V
+#certificateChain(Lokhttp3/internal/tls/HeldCertificate;[Lokhttp3/internal/tls/HeldCertificate;)Lokhttp3/internal/tls/SslClient$Builder;
+#certificateChain(Ljava/security/KeyPair;Ljava/security/cert/X509Certificate;[Ljava/security/cert/X509Certificate;)Lokhttp3/internal/tls/SslClient$Builder;
+#addTrustedCertificate(Ljava/security/cert/X509Certificate;)Lokhttp3/internal/tls/SslClient$Builder;
+#build()Lokhttp3/internal/tls/SslClient;
@3.4.0
+#keyStoreType(Ljava/lang/String;)Lokhttp3/internal/tls/SslClient$Builder;
@3.10.0
-###okhttp3/internal/tls/SslClient$Builder

+###okhttp3/internal/tls/SslClient
@3.3.1
+#localhost()Lokhttp3/internal/tls/SslClient;
@3.10.0
-###okhttp3/internal/tls/SslClient

+###okhttp3/mockwebserver/Dispatcher
@3.0.0-RC1
+#<init>()V
+#dispatch(Lokhttp3/mockwebserver/RecordedRequest;)Lokhttp3/mockwebserver/MockResponse;
+#peek()Lokhttp3/mockwebserver/MockResponse;
@3.3.0
+#shutdown()V

+###okhttp3/mockwebserver/MockResponse
@3.0.0-RC1
+#<init>()V
+#clone()Lokhttp3/mockwebserver/MockResponse;
+#getStatus()Ljava/lang/String;
+#setResponseCode(I)Lokhttp3/mockwebserver/MockResponse;
+#setStatus(Ljava/lang/String;)Lokhttp3/mockwebserver/MockResponse;
+#getHeaders()Lokhttp3/Headers;
+#clearHeaders()Lokhttp3/mockwebserver/MockResponse;
+#addHeader(Ljava/lang/String;)Lokhttp3/mockwebserver/MockResponse;
+#addHeader(Ljava/lang/String;Ljava/lang/Object;)Lokhttp3/mockwebserver/MockResponse;
+#addHeaderLenient(Ljava/lang/String;Ljava/lang/Object;)Lokhttp3/mockwebserver/MockResponse;
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)Lokhttp3/mockwebserver/MockResponse;
+#setHeaders(Lokhttp3/Headers;)Lokhttp3/mockwebserver/MockResponse;
+#removeHeader(Ljava/lang/String;)Lokhttp3/mockwebserver/MockResponse;
+#getBody()Lokio/Buffer;
+#setBody(Lokio/Buffer;)Lokhttp3/mockwebserver/MockResponse;
+#setBody(Ljava/lang/String;)Lokhttp3/mockwebserver/MockResponse;
+#setChunkedBody(Lokio/Buffer;I)Lokhttp3/mockwebserver/MockResponse;
+#setChunkedBody(Ljava/lang/String;I)Lokhttp3/mockwebserver/MockResponse;
+#getSocketPolicy()Lokhttp3/mockwebserver/SocketPolicy;
+#setSocketPolicy(Lokhttp3/mockwebserver/SocketPolicy;)Lokhttp3/mockwebserver/MockResponse;
+#throttleBody(JJLjava/util/concurrent/TimeUnit;)Lokhttp3/mockwebserver/MockResponse;
+#getThrottleBytesPerPeriod()J
+#getThrottlePeriod(Ljava/util/concurrent/TimeUnit;)J
+#setBodyDelay(JLjava/util/concurrent/TimeUnit;)Lokhttp3/mockwebserver/MockResponse;
+#getBodyDelay(Ljava/util/concurrent/TimeUnit;)J
+#withPush(Lokhttp3/mockwebserver/PushPromise;)Lokhttp3/mockwebserver/MockResponse;
+#getPushPromises()Ljava/util/List;
+#withSettings(Lokhttp3/internal/framed/Settings;)Lokhttp3/mockwebserver/MockResponse;
+#getSettings()Lokhttp3/internal/framed/Settings;
+#withWebSocketUpgrade(Lokhttp3/ws/WebSocketListener;)Lokhttp3/mockwebserver/MockResponse;
+#getWebSocketListener()Lokhttp3/ws/WebSocketListener;
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
@3.3.0
+#getHttp2ErrorCode()I
+#setHttp2ErrorCode(I)Lokhttp3/mockwebserver/MockResponse;
@3.5.0
+#withSettings(Lokhttp3/internal/http2/Settings;)Lokhttp3/mockwebserver/MockResponse;
+#getSettings()Lokhttp3/internal/http2/Settings;
+#withWebSocketUpgrade(Lokhttp3/WebSocketListener;)Lokhttp3/mockwebserver/MockResponse;
+#getWebSocketListener()Lokhttp3/WebSocketListener;
-#withSettings(Lokhttp3/internal/framed/Settings;)Lokhttp3/mockwebserver/MockResponse;
-#getSettings()Lokhttp3/internal/framed/Settings;
-#withWebSocketUpgrade(Lokhttp3/ws/WebSocketListener;)Lokhttp3/mockwebserver/MockResponse;
-#getWebSocketListener()Lokhttp3/ws/WebSocketListener;
@3.9.0
+#setHeadersDelay(JLjava/util/concurrent/TimeUnit;)Lokhttp3/mockwebserver/MockResponse;
+#getHeadersDelay(Ljava/util/concurrent/TimeUnit;)J
@3.13.0
+#getTrailers()Lokhttp3/Headers;
+#setTrailers(Lokhttp3/Headers;)Lokhttp3/mockwebserver/MockResponse;
@4.0.0-alpha01
+#getDuplexResponseBody()Lokhttp3/mockwebserver/internal/duplex/DuplexResponseBody;
+#isDuplex()Z
+#setBody(Lokhttp3/mockwebserver/internal/duplex/DuplexResponseBody;)Lokhttp3/mockwebserver/MockResponse;
@4.0.0-RC1
+#status(Ljava/lang/String;)V
+#headers(Lokhttp3/Headers;)V
+#trailers(Lokhttp3/Headers;)V
+#socketPolicy(Lokhttp3/mockwebserver/SocketPolicy;)V
+#http2ErrorCode(I)V
+#-deprecated_getStatus()Ljava/lang/String;
+#-deprecated_getHeaders()Lokhttp3/Headers;
+#-deprecated_getTrailers()Lokhttp3/Headers;
+#-deprecated_getSocketPolicy()Lokhttp3/mockwebserver/SocketPolicy;
+#-deprecated_getHttp2ErrorCode()I
@5.0.0-alpha.2
-#getDuplexResponseBody()Lokhttp3/mockwebserver/internal/duplex/DuplexResponseBody;
-#isDuplex()Z
-#setBody(Lokhttp3/mockwebserver/internal/duplex/DuplexResponseBody;)Lokhttp3/mockwebserver/MockResponse;

+###okhttp3/mockwebserver/MockWebServer
@3.0.0-RC1
+#<init>()V
+#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;
+#getPort()I
+#getHostName()Ljava/lang/String;
+#toProxyAddress()Ljava/net/Proxy;
+#setServerSocketFactory(Ljavax/net/ServerSocketFactory;)V
+#url(Ljava/lang/String;)Lokhttp3/HttpUrl;
+#setBodyLimit(J)V
+#setProtocolNegotiationEnabled(Z)V
+#setProtocols(Ljava/util/List;)V
+#useHttps(Ljavax/net/ssl/SSLSocketFactory;Z)V
+#takeRequest()Lokhttp3/mockwebserver/RecordedRequest;
+#takeRequest(JLjava/util/concurrent/TimeUnit;)Lokhttp3/mockwebserver/RecordedRequest;
+#getRequestCount()I
+#enqueue(Lokhttp3/mockwebserver/MockResponse;)V
+#start()V
+#start(I)V
+#start(Ljava/net/InetAddress;I)V
+#shutdown()V
+#setDispatcher(Lokhttp3/mockwebserver/Dispatcher;)V
+#toString()Ljava/lang/String;
@3.5.0
+#close()V
@3.6.0
-#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;
@3.11.0
+#protocols()Ljava/util/List;
+#noClientAuth()V
+#requestClientAuth()V
+#requireClientAuth()V
@3.13.0
+#getDispatcher()Lokhttp3/mockwebserver/Dispatcher;
@4.0.0-alpha02
+#start$default(Lokhttp3/mockwebserver/MockWebServer;IILjava/lang/Object;)V
+#access$getSslSocketFactory$p(Lokhttp3/mockwebserver/MockWebServer;)Ljavax/net/ssl/SSLSocketFactory;
+#access$setSslSocketFactory$p(Lokhttp3/mockwebserver/MockWebServer;Ljavax/net/ssl/SSLSocketFactory;)V
+#access$getTunnelProxy$p(Lokhttp3/mockwebserver/MockWebServer;)Z
+#access$setTunnelProxy$p(Lokhttp3/mockwebserver/MockWebServer;Z)V
+#access$dispatchBookkeepingRequest(Lokhttp3/mockwebserver/MockWebServer;ILjava/net/Socket;)V
+#access$processHandshakeFailure(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;)V
+#access$getClientAuth$p(Lokhttp3/mockwebserver/MockWebServer;)I
+#access$setClientAuth$p(Lokhttp3/mockwebserver/MockWebServer;I)V
+#access$getOpenClientSockets$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/Set;
+#access$getProtocolNegotiationEnabled$p(Lokhttp3/mockwebserver/MockWebServer;)Z
+#access$setProtocolNegotiationEnabled$p(Lokhttp3/mockwebserver/MockWebServer;Z)V
+#access$getProtocols$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/List;
+#access$setProtocols$p(Lokhttp3/mockwebserver/MockWebServer;Ljava/util/List;)V
+#access$getOpenConnections$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/Set;
+#access$getLogger$cp()Ljava/util/logging/Logger;
+#access$readRequest(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;Lokio/BufferedSource;Lokio/BufferedSink;I)Lokhttp3/mockwebserver/RecordedRequest;
+#access$getRequestCount$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/concurrent/atomic/AtomicInteger;
+#access$getRequestQueue$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/concurrent/LinkedBlockingQueue;
+#access$handleWebSocketUpgrade(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;Lokio/BufferedSource;Lokio/BufferedSink;Lokhttp3/mockwebserver/RecordedRequest;Lokhttp3/mockwebserver/MockResponse;)V
+#access$writeHttpResponse(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;Lokio/BufferedSink;Lokhttp3/mockwebserver/MockResponse;)V
+#access$throttledTransfer(Lokhttp3/mockwebserver/MockWebServer;Lokhttp3/mockwebserver/MockResponse;Ljava/net/Socket;Lokio/BufferedSource;Lokio/BufferedSink;JZ)V
+#access$sleepIfDelayed(Lokhttp3/mockwebserver/MockWebServer;J)V
+#access$acceptConnections(Lokhttp3/mockwebserver/MockWebServer;)V
+#access$getServerSocket$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/net/ServerSocket;
+#access$setServerSocket$p(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/ServerSocket;)V
+#access$getExecutor$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/concurrent/ExecutorService;
+#access$setExecutor$p(Lokhttp3/mockwebserver/MockWebServer;Ljava/util/concurrent/ExecutorService;)V
@4.0.0-RC1
+#getBodyLimit()J
+#getServerSocketFactory()Ljavax/net/ServerSocketFactory;
+#getProtocolNegotiationEnabled()Z
+#-deprecated_port()I
+#-deprecated_serverSocketFactory(Ljavax/net/ServerSocketFactory;)V
+#-deprecated_bodyLimit(J)V
+#-deprecated_protocolNegotiationEnabled(Z)V
+#-deprecated_protocols(Ljava/util/List;)V
+#-deprecated_protocols()Ljava/util/List;
+#-deprecated_requestCount()I
+#access$getAtomicRequestCount$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/concurrent/atomic/AtomicInteger;
-#access$getProtocolNegotiationEnabled$p(Lokhttp3/mockwebserver/MockWebServer;)Z
-#access$setProtocolNegotiationEnabled$p(Lokhttp3/mockwebserver/MockWebServer;Z)V
-#access$getProtocols$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/List;
-#access$setProtocols$p(Lokhttp3/mockwebserver/MockWebServer;Ljava/util/List;)V
-#access$getRequestCount$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/concurrent/atomic/AtomicInteger;
@4.3.0
+#access$getTaskRunner$p(Lokhttp3/mockwebserver/MockWebServer;)Lokhttp3/internal/concurrent/TaskRunner;
-#access$getExecutor$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/concurrent/ExecutorService;
-#access$setExecutor$p(Lokhttp3/mockwebserver/MockWebServer;Ljava/util/concurrent/ExecutorService;)V
@4.10.0
-#access$setSslSocketFactory$p(Lokhttp3/mockwebserver/MockWebServer;Ljavax/net/ssl/SSLSocketFactory;)V
-#access$setTunnelProxy$p(Lokhttp3/mockwebserver/MockWebServer;Z)V
-#access$setClientAuth$p(Lokhttp3/mockwebserver/MockWebServer;I)V
-#access$setServerSocket$p(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/ServerSocket;)V
@5.0.0-alpha.1
+#access$setSslSocketFactory$p(Lokhttp3/mockwebserver/MockWebServer;Ljavax/net/ssl/SSLSocketFactory;)V
+#access$setTunnelProxy$p(Lokhttp3/mockwebserver/MockWebServer;Z)V
+#access$setClientAuth$p(Lokhttp3/mockwebserver/MockWebServer;I)V
+#access$setServerSocket$p(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/ServerSocket;)V
@5.0.0-alpha.2
+#getDelegate()Lmockwebserver3/MockWebServer;
-#access$getSslSocketFactory$p(Lokhttp3/mockwebserver/MockWebServer;)Ljavax/net/ssl/SSLSocketFactory;
-#access$setSslSocketFactory$p(Lokhttp3/mockwebserver/MockWebServer;Ljavax/net/ssl/SSLSocketFactory;)V
-#access$getTunnelProxy$p(Lokhttp3/mockwebserver/MockWebServer;)Z
-#access$setTunnelProxy$p(Lokhttp3/mockwebserver/MockWebServer;Z)V
-#access$dispatchBookkeepingRequest(Lokhttp3/mockwebserver/MockWebServer;ILjava/net/Socket;)V
-#access$processHandshakeFailure(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;)V
-#access$getClientAuth$p(Lokhttp3/mockwebserver/MockWebServer;)I
-#access$setClientAuth$p(Lokhttp3/mockwebserver/MockWebServer;I)V
-#access$getOpenClientSockets$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/Set;
-#access$getTaskRunner$p(Lokhttp3/mockwebserver/MockWebServer;)Lokhttp3/internal/concurrent/TaskRunner;
-#access$getOpenConnections$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/Set;
-#access$getLogger$cp()Ljava/util/logging/Logger;
-#access$readRequest(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;Lokio/BufferedSource;Lokio/BufferedSink;I)Lokhttp3/mockwebserver/RecordedRequest;
-#access$getAtomicRequestCount$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/concurrent/atomic/AtomicInteger;
-#access$getRequestQueue$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/util/concurrent/LinkedBlockingQueue;
-#access$handleWebSocketUpgrade(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;Lokio/BufferedSource;Lokio/BufferedSink;Lokhttp3/mockwebserver/RecordedRequest;Lokhttp3/mockwebserver/MockResponse;)V
-#access$writeHttpResponse(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;Lokio/BufferedSink;Lokhttp3/mockwebserver/MockResponse;)V
-#access$throttledTransfer(Lokhttp3/mockwebserver/MockWebServer;Lokhttp3/mockwebserver/MockResponse;Ljava/net/Socket;Lokio/BufferedSource;Lokio/BufferedSink;JZ)V
-#access$sleepIfDelayed(Lokhttp3/mockwebserver/MockWebServer;J)V
-#access$acceptConnections(Lokhttp3/mockwebserver/MockWebServer;)V
-#access$getServerSocket$p(Lokhttp3/mockwebserver/MockWebServer;)Ljava/net/ServerSocket;
-#access$setServerSocket$p(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/ServerSocket;)V
@5.0.0-alpha.4
+#getRequestCount$delegate(Lokhttp3/mockwebserver/MockWebServer;)Ljava/lang/Object;
+#getBodyLimit$delegate(Lokhttp3/mockwebserver/MockWebServer;)Ljava/lang/Object;
+#getServerSocketFactory$delegate(Lokhttp3/mockwebserver/MockWebServer;)Ljava/lang/Object;
+#getProtocolNegotiationEnabled$delegate(Lokhttp3/mockwebserver/MockWebServer;)Ljava/lang/Object;

+###okhttp3/mockwebserver/PushPromise
@3.0.0-RC1
+#<init>(Ljava/lang/String;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/mockwebserver/MockResponse;)V
+#method()Ljava/lang/String;
+#path()Ljava/lang/String;
+#headers()Lokhttp3/Headers;
+#response()Lokhttp3/mockwebserver/MockResponse;
@4.0.0-alpha02
+#-deprecated_method()Ljava/lang/String;
+#-deprecated_path()Ljava/lang/String;
+#-deprecated_headers()Lokhttp3/Headers;
+#-deprecated_response()Lokhttp3/mockwebserver/MockResponse;

+###okhttp3/mockwebserver/QueueDispatcher
@3.0.0-RC1
+#<init>()V
+#dispatch(Lokhttp3/mockwebserver/RecordedRequest;)Lokhttp3/mockwebserver/MockResponse;
+#peek()Lokhttp3/mockwebserver/MockResponse;
+#enqueueResponse(Lokhttp3/mockwebserver/MockResponse;)V
+#setFailFast(Z)V
+#setFailFast(Lokhttp3/mockwebserver/MockResponse;)V
@3.3.0
+#shutdown()V
@5.0.0-alpha.2
+#getDelegate$mockwebserver_deprecated()Lmockwebserver3/QueueDispatcher;
@5.0.0-alpha.4
+#getDelegate$mockwebserver()Lmockwebserver3/QueueDispatcher;
-#getDelegate$mockwebserver_deprecated()Lmockwebserver3/QueueDispatcher;

+###okhttp3/mockwebserver/RecordedRequest
@3.0.0-RC1
+#<init>(Ljava/lang/String;Lokhttp3/Headers;Ljava/util/List;JLokio/Buffer;ILjava/net/Socket;)V
+#getRequestLine()Ljava/lang/String;
+#getMethod()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#getHeaders()Lokhttp3/Headers;
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getChunkSizes()Ljava/util/List;
+#getBodySize()J
+#getBody()Lokio/Buffer;
+#getUtf8Body()Ljava/lang/String;
+#getSequenceNumber()I
+#getTlsVersion()Lokhttp3/TlsVersion;
+#toString()Ljava/lang/String;
@3.7.0
+#getRequestUrl()Lokhttp3/HttpUrl;
@3.11.0
+#getHandshake()Lokhttp3/Handshake;
@4.0.0-RC1
+#utf8Body$annotations()V
+#-deprecated_utf8Body()Ljava/lang/String;
@4.3.0
+#getFailure()Ljava/io/IOException;
+#<init>(Ljava/lang/String;Lokhttp3/Headers;Ljava/util/List;JLokio/Buffer;ILjava/net/Socket;Ljava/io/IOException;)V
+#<init>(Ljava/lang/String;Lokhttp3/Headers;Ljava/util/List;JLokio/Buffer;ILjava/net/Socket;Ljava/io/IOException;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.9.0
+#-deprecated_utf8Body$annotations()V
-#utf8Body$annotations()V
@5.0.0-alpha.2
+#<init>(Ljava/lang/String;Lokhttp3/Headers;Ljava/util/List;JLokio/Buffer;ILjava/io/IOException;Ljava/lang/String;Ljava/lang/String;Lokhttp3/Handshake;Lokhttp3/HttpUrl;)V

+###okhttp3/mockwebserver/SocketPolicy
@3.0.0-RC1
+#values()[Lokhttp3/mockwebserver/SocketPolicy;
+#valueOf(Ljava/lang/String;)Lokhttp3/mockwebserver/SocketPolicy;

+###okhttp3/internal/duplex/MwsDuplexAccess
@3.13.0
+#<init>()V
+#setBody(Lokhttp3/mockwebserver/MockResponse;Lokhttp3/mockwebserver/internal/duplex/DuplexResponseBody;)V
@5.0.0-alpha.2
-###okhttp3/internal/duplex/MwsDuplexAccess

+###okhttp3/mockwebserver/internal/duplex/DuplexResponseBody
@3.13.0
+#onRequest(Lokhttp3/mockwebserver/RecordedRequest;Lokio/BufferedSource;Lokio/BufferedSink;)V
@4.3.0
+#onRequest(Lokhttp3/mockwebserver/RecordedRequest;Lokhttp3/internal/http2/Http2Stream;)V
-#onRequest(Lokhttp3/mockwebserver/RecordedRequest;Lokio/BufferedSource;Lokio/BufferedSink;)V
@5.0.0-alpha.2
-###okhttp3/mockwebserver/internal/duplex/DuplexResponseBody

+###okhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody
@3.13.0
+#<init>()V
+#receiveRequest(Ljava/lang/String;)Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
+#exhaustRequest()Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
+#sendResponse(Ljava/lang/String;)Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
+#exhaustResponse()Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
+#onRequest(Lokhttp3/mockwebserver/RecordedRequest;Lokio/BufferedSource;Lokio/BufferedSink;)V
+#awaitSuccess()V
@3.14.0
+#requestIOException()Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
+#sleep(JLjava/util/concurrent/TimeUnit;)Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
@4.0.0-alpha01
+#sendResponse(Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
+#sendResponse$default(Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;ILjava/lang/Object;)Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
+#access$getActions$p(Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;)Ljava/util/concurrent/LinkedBlockingQueue;
@4.3.0
+#cancelStream(Lokhttp3/internal/http2/ErrorCode;)Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;
+#onRequest(Lokhttp3/mockwebserver/RecordedRequest;Lokhttp3/internal/http2/Http2Stream;)V
-#onRequest(Lokhttp3/mockwebserver/RecordedRequest;Lokio/BufferedSource;Lokio/BufferedSink;)V
@4.10.0
-#access$getActions$p(Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;)Ljava/util/concurrent/LinkedBlockingQueue;
@5.0.0-alpha.1
+#access$getActions$p(Lokhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody;)Ljava/util/concurrent/LinkedBlockingQueue;
@5.0.0-alpha.2
-###okhttp3/mockwebserver/internal/duplex/MockDuplexResponseBody

+###okhttp3/internal/framed/FramedServer
@3.0.0-RC1
+#<init>(Ljava/io/File;Ljavax/net/ssl/SSLSocketFactory;)V
+#onStream(Lokhttp3/internal/framed/FramedStream;)V
+#main([Ljava/lang/String;)V
@3.5.0
-###okhttp3/internal/framed/FramedServer

+###okhttp3/internal/SslContextBuilder
@3.0.0-RC1
+#<init>(Ljava/lang/String;)V
+#localhost()Ljavax/net/ssl/SSLContext;
+#build()Ljavax/net/ssl/SSLContext;
+#generateKeyPair()Ljava/security/KeyPair;
+#selfSignedCertificate(Ljava/security/KeyPair;Ljava/lang/String;)Ljava/security/cert/X509Certificate;
@3.1.0
+#<init>()V
+#certificateChain([Lokhttp3/internal/HeldCertificate;)Lokhttp3/internal/SslContextBuilder;
+#addTrustedCertificate(Ljava/security/cert/X509Certificate;)Lokhttp3/internal/SslContextBuilder;
-#<init>(Ljava/lang/String;)V
-#generateKeyPair()Ljava/security/KeyPair;
-#selfSignedCertificate(Ljava/security/KeyPair;Ljava/lang/String;)Ljava/security/cert/X509Certificate;
@3.3.1
-###okhttp3/internal/SslContextBuilder

+###okhttp3/internal/duplex/MwsDuplexAccess$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.2
-###okhttp3/internal/duplex/MwsDuplexAccess$Companion

+###okhttp3/mockwebserver/MockWebServer$Companion$UNTRUSTED_TRUST_MANAGER$1
@4.0.0-alpha02
+#checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)Ljava/lang/Void;
+#checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)Ljava/lang/Void;
+#checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#getAcceptedIssuers()[Ljava/security/cert/X509Certificate;
@5.0.0-alpha.2
-###okhttp3/mockwebserver/MockWebServer$Companion$UNTRUSTED_TRUST_MANAGER$1

+###okhttp3/mockwebserver/MockWebServer$start$$inlined$execute$1
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/mockwebserver/MockWebServer;)V
+#run()V
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/mockwebserver/MockWebServer;)V
+#runOnce()J
-#<init>(Ljava/lang/String;Lokhttp3/mockwebserver/MockWebServer;)V
-#run()V
@4.10.0
-###okhttp3/mockwebserver/MockWebServer$start$$inlined$execute$1

+###okhttp3/mockwebserver/QueueDispatcher$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.2
-###okhttp3/mockwebserver/QueueDispatcher$Companion

+###okhttp3/mockwebserver/internal/duplex/MockDuplexResponseBodyKt
@4.0.0-alpha01
@5.0.0-alpha.2
-###okhttp3/mockwebserver/internal/duplex/MockDuplexResponseBodyKt

+###okhttp3/mockwebserver/MockWebServer$handleWebSocketUpgrade$streams$1
@4.0.0-alpha02
+#close()V
@5.0.0-alpha.2
-###okhttp3/mockwebserver/MockWebServer$handleWebSocketUpgrade$streams$1

+###okhttp3/mockwebserver/MockWebServer$serveConnection$$inlined$execute$1
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;)V
+#run()V
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;)V
+#runOnce()J
-#<init>(Ljava/lang/String;Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;)V
-#run()V
@4.10.0
-###okhttp3/mockwebserver/MockWebServer$serveConnection$$inlined$execute$1

+###okhttp3/mockwebserver/MockWebServer$Companion$1
@4.0.0-alpha02
+#setBody(Lokhttp3/mockwebserver/MockResponse;Lokhttp3/mockwebserver/internal/duplex/DuplexResponseBody;)V
@5.0.0-alpha.2
-###okhttp3/mockwebserver/MockWebServer$Companion$1

+###okhttp3/mockwebserver/MockWebServer$SocketHandler
@4.0.0-alpha02
+#handle()V
+#<init>(Lokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;)V
@5.0.0-alpha.2
-###okhttp3/mockwebserver/MockWebServer$SocketHandler

+###okhttp3/mockwebserver/MockWebServer$Companion
@4.0.0-alpha02
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V

+###okhttp3/mockwebserver/MockResponse$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V

+###okhttp3/mockwebserver/MockWebServer$SocketHandler$WhenMappings
@4.0.0-alpha02
@5.0.0-alpha.2
-###okhttp3/mockwebserver/MockWebServer$SocketHandler$WhenMappings

+###okhttp3/mockwebserver/MockWebServer$Http2SocketHandler$WhenMappings
@4.10.0-RC1
@4.10.0
-###okhttp3/mockwebserver/MockWebServer$Http2SocketHandler$WhenMappings

+###okhttp3/internal/HeldCertificate$Builder
@3.1.0
+#<init>()V
+#serialNumber(Ljava/lang/String;)Lokhttp3/internal/HeldCertificate$Builder;
+#commonName(Ljava/lang/String;)Lokhttp3/internal/HeldCertificate$Builder;
+#keyPair(Ljava/security/KeyPair;)Lokhttp3/internal/HeldCertificate$Builder;
+#issuedBy(Lokhttp3/internal/HeldCertificate;)Lokhttp3/internal/HeldCertificate$Builder;
+#ca(I)Lokhttp3/internal/HeldCertificate$Builder;
+#build()Lokhttp3/internal/HeldCertificate;
+#generateKeyPair()Ljava/security/KeyPair;
@3.3.1
-###okhttp3/internal/HeldCertificate$Builder

+###okhttp3/internal/HeldCertificate
@3.1.0
+#<init>(Ljava/security/cert/X509Certificate;Ljava/security/KeyPair;)V
@3.3.1
-###okhttp3/internal/HeldCertificate

+###okhttp3/mockwebserver/MockWebServer$start$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/mockwebserver/MockWebServer;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/mockwebserver/MockWebServer$start$$inlined$execute$default$1

+###okhttp3/mockwebserver/MockWebServer$serveConnection$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/mockwebserver/MockWebServer;Ljava/net/Socket;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/mockwebserver/MockWebServer$serveConnection$$inlined$execute$default$1

+###okhttp3/mockwebserver/BridgeKt$wrap$1
@5.0.0-alpha.2
+#dispatch(Lmockwebserver3/RecordedRequest;)Lmockwebserver3/MockResponse;
+#peek()Lmockwebserver3/MockResponse;
+#shutdown()V

+###okhttp3/mockwebserver/BridgeKt
@5.0.0-alpha.2
+#wrap(Lokhttp3/mockwebserver/Dispatcher;)Lmockwebserver3/Dispatcher;
+#wrap(Lokhttp3/mockwebserver/MockResponse;)Lmockwebserver3/MockResponse;
+#unwrap(Lmockwebserver3/RecordedRequest;)Lokhttp3/mockwebserver/RecordedRequest;

+###okhttp3/mockwebserver/internal/http2/Http2Server
@3.10.0
+#<init>(Ljava/io/File;Ljavax/net/ssl/SSLSocketFactory;)V
+#onStream(Lokhttp3/internal/http2/Http2Stream;)V
+#main([Ljava/lang/String;)V
@3.11.0
-###okhttp3/mockwebserver/internal/http2/Http2Server

+###okhttp3/mockwebserver/internal/tls/HeldCertificate$Builder
@3.10.0
+#<init>()V
+#serialNumber(Ljava/lang/String;)Lokhttp3/mockwebserver/internal/tls/HeldCertificate$Builder;
+#commonName(Ljava/lang/String;)Lokhttp3/mockwebserver/internal/tls/HeldCertificate$Builder;
+#keyPair(Ljava/security/KeyPair;)Lokhttp3/mockwebserver/internal/tls/HeldCertificate$Builder;
+#issuedBy(Lokhttp3/mockwebserver/internal/tls/HeldCertificate;)Lokhttp3/mockwebserver/internal/tls/HeldCertificate$Builder;
+#ca(I)Lokhttp3/mockwebserver/internal/tls/HeldCertificate$Builder;
+#subjectAlternativeName(Ljava/lang/String;)Lokhttp3/mockwebserver/internal/tls/HeldCertificate$Builder;
+#build()Lokhttp3/mockwebserver/internal/tls/HeldCertificate;
+#generateKeyPair()Ljava/security/KeyPair;
@3.11.0
-###okhttp3/mockwebserver/internal/tls/HeldCertificate$Builder

+###okhttp3/mockwebserver/internal/tls/SslClient
@3.10.0
+#localhost()Lokhttp3/mockwebserver/internal/tls/SslClient;
@3.11.0
-###okhttp3/mockwebserver/internal/tls/SslClient

+###okhttp3/mockwebserver/internal/tls/HeldCertificate
@3.10.0
+#<init>(Ljava/security/cert/X509Certificate;Ljava/security/KeyPair;)V
@3.11.0
-###okhttp3/mockwebserver/internal/tls/HeldCertificate

+###okhttp3/mockwebserver/internal/tls/SslClient$Builder
@3.10.0
+#<init>()V
+#certificateChain(Lokhttp3/mockwebserver/internal/tls/HeldCertificate;[Lokhttp3/mockwebserver/internal/tls/HeldCertificate;)Lokhttp3/mockwebserver/internal/tls/SslClient$Builder;
+#certificateChain(Ljava/security/KeyPair;Ljava/security/cert/X509Certificate;[Ljava/security/cert/X509Certificate;)Lokhttp3/mockwebserver/internal/tls/SslClient$Builder;
+#addTrustedCertificate(Ljava/security/cert/X509Certificate;)Lokhttp3/mockwebserver/internal/tls/SslClient$Builder;
+#keyStoreType(Ljava/lang/String;)Lokhttp3/mockwebserver/internal/tls/SslClient$Builder;
+#sslContext(Ljavax/net/ssl/SSLContext;)Lokhttp3/mockwebserver/internal/tls/SslClient$Builder;
+#build()Lokhttp3/mockwebserver/internal/tls/SslClient;
@3.11.0
-###okhttp3/mockwebserver/internal/tls/SslClient$Builder

+###okhttp3/mockwebserver/BridgeKt$WhenMappings
@5.0.0-alpha.7
