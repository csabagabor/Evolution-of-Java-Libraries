
+###org/apache/commons/math3/filter/KalmanFilter
@3.0
+#<init>(Lorg/apache/commons/math3/filter/ProcessModel;Lorg/apache/commons/math3/filter/MeasurementModel;)V
+#getStateDimension()I
+#getMeasurementDimension()I
+#getStateEstimation()[D
+#getStateEstimationVector()Lorg/apache/commons/math3/linear/RealVector;
+#getErrorCovariance()[[D
+#getErrorCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#predict()V
+#predict([D)V
+#predict(Lorg/apache/commons/math3/linear/RealVector;)V
+#correct([D)V
+#correct(Lorg/apache/commons/math3/linear/RealVector;)V

+###org/apache/commons/math3/filter/ProcessModel
@3.0
+#getStateTransitionMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getControlMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getProcessNoise()Lorg/apache/commons/math3/linear/RealMatrix;
+#getInitialStateEstimate()Lorg/apache/commons/math3/linear/RealVector;
+#getInitialErrorCovariance()Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/filter/DefaultProcessModel
@3.0
+#<init>([[D[[D[[D[D[[D)V
+#<init>([[D[[D[[D)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;)V
+#getStateTransitionMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getControlMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getProcessNoise()Lorg/apache/commons/math3/linear/RealMatrix;
+#getInitialStateEstimate()Lorg/apache/commons/math3/linear/RealVector;
+#getInitialErrorCovariance()Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/filter/DefaultMeasurementModel
@3.0
+#<init>([[D[[D)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V
+#getMeasurementMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getMeasurementNoise()Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/filter/MeasurementModel
@3.0
+#getMeasurementMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getMeasurementNoise()Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/primes/Primes
@3.2
+#isPrime(I)Z
+#nextPrime(I)I
+#primeFactors(I)Ljava/util/List;

+###org/apache/commons/math3/special/Erf
@3.0
+#erf(D)D
+#erfc(D)D
+#erf(DD)D
@3.2
+#erfInv(D)D
+#erfcInv(D)D

+###org/apache/commons/math3/special/Beta
@3.0
+#regularizedBeta(DDD)D
+#regularizedBeta(DDDD)D
+#regularizedBeta(DDDI)D
+#regularizedBeta(DDDDI)D
+#logBeta(DD)D
+#logBeta(DDDI)D
@3.1
*#logBeta(DDDI)D[deprecated]

+###org/apache/commons/math3/special/Gamma
@3.0
+#logGamma(D)D
+#regularizedGammaP(DD)D
+#regularizedGammaP(DDDI)D
+#regularizedGammaQ(DD)D
+#regularizedGammaQ(DDDI)D
+#digamma(D)D
+#trigamma(D)D
@3.1
+#lanczos(D)D
+#invGamma1pm1(D)D
+#logGamma1p(D)D
+#gamma(D)D

+###org/apache/commons/math3/special/BesselJ
@3.4
+#<init>(D)V
+#value(D)D
+#value(DD)D
+#rjBesl(DDI)Lorg/apache/commons/math3/special/BesselJ$BesselJResult;

+###org/apache/commons/math3/special/BesselJ$BesselJResult
@3.4
+#<init>([DI)V
+#getVals()[D
+#getnVals()I

+###org/apache/commons/math3/dfp/DfpMath
@3.0
+#pow(Lorg/apache/commons/math3/dfp/Dfp;I)Lorg/apache/commons/math3/dfp/Dfp;
+#exp(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#log(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#pow(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#sin(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#cos(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#tan(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#atan(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#asin(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#acos(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;

+###org/apache/commons/math3/dfp/DfpDec
@3.0
+#<init>(Lorg/apache/commons/math3/dfp/Dfp;)V
+#newInstance()Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(B)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(I)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(J)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(D)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(BB)Lorg/apache/commons/math3/dfp/Dfp;
+#nextAfter(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;

+###org/apache/commons/math3/dfp/DfpField
@3.0
+#<init>(I)V
+#getRadixDigits()I
+#setRoundingMode(Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;)V
+#getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;
+#getIEEEFlags()I
+#clearIEEEFlags()V
+#setIEEEFlags(I)V
+#setIEEEFlagsBits(I)V
+#newDfp()Lorg/apache/commons/math3/dfp/Dfp;
+#newDfp(B)Lorg/apache/commons/math3/dfp/Dfp;
+#newDfp(I)Lorg/apache/commons/math3/dfp/Dfp;
+#newDfp(J)Lorg/apache/commons/math3/dfp/Dfp;
+#newDfp(D)Lorg/apache/commons/math3/dfp/Dfp;
+#newDfp(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#newDfp(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;
+#newDfp(BB)Lorg/apache/commons/math3/dfp/Dfp;
+#getZero()Lorg/apache/commons/math3/dfp/Dfp;
+#getOne()Lorg/apache/commons/math3/dfp/Dfp;
+#getRuntimeClass()Ljava/lang/Class;
+#getTwo()Lorg/apache/commons/math3/dfp/Dfp;
+#getSqr2()Lorg/apache/commons/math3/dfp/Dfp;
+#getSqr2Split()[Lorg/apache/commons/math3/dfp/Dfp;
+#getSqr2Reciprocal()Lorg/apache/commons/math3/dfp/Dfp;
+#getSqr3()Lorg/apache/commons/math3/dfp/Dfp;
+#getSqr3Reciprocal()Lorg/apache/commons/math3/dfp/Dfp;
+#getPi()Lorg/apache/commons/math3/dfp/Dfp;
+#getPiSplit()[Lorg/apache/commons/math3/dfp/Dfp;
+#getE()Lorg/apache/commons/math3/dfp/Dfp;
+#getESplit()[Lorg/apache/commons/math3/dfp/Dfp;
+#getLn2()Lorg/apache/commons/math3/dfp/Dfp;
+#getLn2Split()[Lorg/apache/commons/math3/dfp/Dfp;
+#getLn5()Lorg/apache/commons/math3/dfp/Dfp;
+#getLn5Split()[Lorg/apache/commons/math3/dfp/Dfp;
+#getLn10()Lorg/apache/commons/math3/dfp/Dfp;
+#computeExp(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#computeLn(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#getOne()Ljava/lang/Object;
+#getZero()Ljava/lang/Object;

+###org/apache/commons/math3/dfp/DfpField$RoundingMode
@3.0
+#values()[Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;

+###org/apache/commons/math3/dfp/UnivariateDfpFunction
@3.0
+#value(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;

+###org/apache/commons/math3/dfp/Dfp
@3.0
+#<init>(Lorg/apache/commons/math3/dfp/Dfp;)V
+#newInstance()Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(B)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(I)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(J)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(D)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;
+#newInstance(BB)Lorg/apache/commons/math3/dfp/Dfp;
+#getField()Lorg/apache/commons/math3/dfp/DfpField;
+#getRadixDigits()I
+#getZero()Lorg/apache/commons/math3/dfp/Dfp;
+#getOne()Lorg/apache/commons/math3/dfp/Dfp;
+#getTwo()Lorg/apache/commons/math3/dfp/Dfp;
+#lessThan(Lorg/apache/commons/math3/dfp/Dfp;)Z
+#greaterThan(Lorg/apache/commons/math3/dfp/Dfp;)Z
+#negativeOrNull()Z
+#strictlyNegative()Z
+#positiveOrNull()Z
+#strictlyPositive()Z
+#abs()Lorg/apache/commons/math3/dfp/Dfp;
+#isInfinite()Z
+#isNaN()Z
+#isZero()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#unequal(Lorg/apache/commons/math3/dfp/Dfp;)Z
+#rint()Lorg/apache/commons/math3/dfp/Dfp;
+#floor()Lorg/apache/commons/math3/dfp/Dfp;
+#ceil()Lorg/apache/commons/math3/dfp/Dfp;
+#remainder(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#intValue()I
+#log10K()I
+#power10K(I)Lorg/apache/commons/math3/dfp/Dfp;
+#log10()I
+#power10(I)Lorg/apache/commons/math3/dfp/Dfp;
+#add(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#negate()Lorg/apache/commons/math3/dfp/Dfp;
+#subtract(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#multiply(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#multiply(I)Lorg/apache/commons/math3/dfp/Dfp;
+#divide(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#divide(I)Lorg/apache/commons/math3/dfp/Dfp;
+#reciprocal()Lorg/apache/commons/math3/dfp/Dfp;
+#sqrt()Lorg/apache/commons/math3/dfp/Dfp;
+#toString()Ljava/lang/String;
+#dotrap(ILjava/lang/String;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#classify()I
+#copysign(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#nextAfter(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#toDouble()D
+#toSplitDouble()[D
+#getField()Lorg/apache/commons/math3/Field;
+#reciprocal()Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Ljava/lang/Object;
@3.2
+#intLog10()I
+#getReal()D
+#add(D)Lorg/apache/commons/math3/dfp/Dfp;
+#subtract(D)Lorg/apache/commons/math3/dfp/Dfp;
+#multiply(D)Lorg/apache/commons/math3/dfp/Dfp;
+#divide(D)Lorg/apache/commons/math3/dfp/Dfp;
+#remainder(D)Lorg/apache/commons/math3/dfp/Dfp;
+#round()J
+#signum()Lorg/apache/commons/math3/dfp/Dfp;
+#copySign(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#copySign(D)Lorg/apache/commons/math3/dfp/Dfp;
+#scalb(I)Lorg/apache/commons/math3/dfp/Dfp;
+#hypot(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#cbrt()Lorg/apache/commons/math3/dfp/Dfp;
+#rootN(I)Lorg/apache/commons/math3/dfp/Dfp;
+#pow(D)Lorg/apache/commons/math3/dfp/Dfp;
+#pow(I)Lorg/apache/commons/math3/dfp/Dfp;
+#pow(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#exp()Lorg/apache/commons/math3/dfp/Dfp;
+#expm1()Lorg/apache/commons/math3/dfp/Dfp;
+#log()Lorg/apache/commons/math3/dfp/Dfp;
+#log1p()Lorg/apache/commons/math3/dfp/Dfp;
*#log10()I[deprecated]
+#cos()Lorg/apache/commons/math3/dfp/Dfp;
+#sin()Lorg/apache/commons/math3/dfp/Dfp;
+#tan()Lorg/apache/commons/math3/dfp/Dfp;
+#acos()Lorg/apache/commons/math3/dfp/Dfp;
+#asin()Lorg/apache/commons/math3/dfp/Dfp;
+#atan()Lorg/apache/commons/math3/dfp/Dfp;
+#atan2(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#cosh()Lorg/apache/commons/math3/dfp/Dfp;
+#sinh()Lorg/apache/commons/math3/dfp/Dfp;
+#tanh()Lorg/apache/commons/math3/dfp/Dfp;
+#acosh()Lorg/apache/commons/math3/dfp/Dfp;
+#asinh()Lorg/apache/commons/math3/dfp/Dfp;
+#atanh()Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination([Lorg/apache/commons/math3/dfp/Dfp;[Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination([D[Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#atanh()Ljava/lang/Object;
+#asinh()Ljava/lang/Object;
+#acosh()Ljava/lang/Object;
+#tanh()Ljava/lang/Object;
+#sinh()Ljava/lang/Object;
+#cosh()Ljava/lang/Object;
+#atan2(Ljava/lang/Object;)Ljava/lang/Object;
+#atan()Ljava/lang/Object;
+#asin()Ljava/lang/Object;
+#acos()Ljava/lang/Object;
+#tan()Ljava/lang/Object;
+#sin()Ljava/lang/Object;
+#cos()Ljava/lang/Object;
+#log1p()Ljava/lang/Object;
+#log()Ljava/lang/Object;
+#expm1()Ljava/lang/Object;
+#exp()Ljava/lang/Object;
+#pow(Ljava/lang/Object;)Ljava/lang/Object;
+#pow(I)Ljava/lang/Object;
+#pow(D)Ljava/lang/Object;
+#rootN(I)Ljava/lang/Object;
+#cbrt()Ljava/lang/Object;
+#sqrt()Ljava/lang/Object;
+#hypot(Ljava/lang/Object;)Ljava/lang/Object;
+#scalb(I)Ljava/lang/Object;
+#copySign(D)Ljava/lang/Object;
+#copySign(Ljava/lang/Object;)Ljava/lang/Object;
+#signum()Ljava/lang/Object;
+#rint()Ljava/lang/Object;
+#floor()Ljava/lang/Object;
+#ceil()Ljava/lang/Object;
+#abs()Ljava/lang/Object;
+#remainder(Ljava/lang/Object;)Ljava/lang/Object;
+#remainder(D)Ljava/lang/Object;
+#divide(D)Ljava/lang/Object;
+#multiply(D)Ljava/lang/Object;
+#subtract(D)Ljava/lang/Object;
+#add(D)Ljava/lang/Object;

+###org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP
@3.0
+#<init>(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;I)V
+#getMaximalOrder()I
+#getMaxEvaluations()I
+#getEvaluations()I
+#getAbsoluteAccuracy()Lorg/apache/commons/math3/dfp/Dfp;
+#getRelativeAccuracy()Lorg/apache/commons/math3/dfp/Dfp;
+#getFunctionValueAccuracy()Lorg/apache/commons/math3/dfp/Dfp;
+#solve(ILorg/apache/commons/math3/dfp/UnivariateDfpFunction;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/dfp/Dfp;
+#solve(ILorg/apache/commons/math3/dfp/UnivariateDfpFunction;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/dfp/Dfp;
@3.6
+#getFunctionValueAccuracy()Lorg/apache/commons/math3/RealFieldElement;
+#getRelativeAccuracy()Lorg/apache/commons/math3/RealFieldElement;
+#getAbsoluteAccuracy()Lorg/apache/commons/math3/RealFieldElement;
-#getMaximalOrder()I
-#getMaxEvaluations()I
-#getEvaluations()I

+###org/apache/commons/math3/complex/Quaternion
@3.1
+#<init>(DDDD)V
+#<init>(D[D)V
+#<init>([D)V
+#getConjugate()Lorg/apache/commons/math3/complex/Quaternion;
+#multiply(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
+#multiply(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
+#add(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
+#add(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
+#subtract(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
+#subtract(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
+#dotProduct(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)D
+#dotProduct(Lorg/apache/commons/math3/complex/Quaternion;)D
+#getNorm()D
+#normalize()Lorg/apache/commons/math3/complex/Quaternion;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Lorg/apache/commons/math3/complex/Quaternion;D)Z
+#isUnitQuaternion(D)Z
+#isPureQuaternion(D)Z
+#getPositivePolarForm()Lorg/apache/commons/math3/complex/Quaternion;
+#getInverse()Lorg/apache/commons/math3/complex/Quaternion;
+#getQ0()D
+#getQ1()D
+#getQ2()D
+#getQ3()D
+#getScalarPart()D
+#getVectorPart()[D
+#multiply(D)Lorg/apache/commons/math3/complex/Quaternion;
+#toString()Ljava/lang/String;

+###org/apache/commons/math3/complex/ComplexUtils
@3.0
+#polar2Complex(DD)Lorg/apache/commons/math3/complex/Complex;
@3.1
+#convertToComplex([D)[Lorg/apache/commons/math3/complex/Complex;

+###org/apache/commons/math3/complex/ComplexFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/text/NumberFormat;)V
+#<init>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
+#getAvailableLocales()[Ljava/util/Locale;
+#format(Lorg/apache/commons/math3/complex/Complex;)Ljava/lang/String;
+#format(Ljava/lang/Double;)Ljava/lang/String;
+#format(Lorg/apache/commons/math3/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#getImaginaryCharacter()Ljava/lang/String;
+#getImaginaryFormat()Ljava/text/NumberFormat;
+#getInstance()Lorg/apache/commons/math3/complex/ComplexFormat;
+#getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/complex/ComplexFormat;
+#getInstance(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/commons/math3/complex/ComplexFormat;
+#getRealFormat()Ljava/text/NumberFormat;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/complex/Complex;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/complex/Complex;

+###org/apache/commons/math3/complex/RootsOfUnity
@3.0
+#<init>()V
+#isCounterClockWise()Z
+#computeRoots(I)V
+#getReal(I)D
+#getImaginary(I)D
+#getNumberOfRoots()I

+###org/apache/commons/math3/complex/Complex
@3.0
+#<init>(D)V
+#<init>(DD)V
+#abs()D
+#add(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
+#add(D)Lorg/apache/commons/math3/complex/Complex;
+#conjugate()Lorg/apache/commons/math3/complex/Complex;
+#divide(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
+#divide(D)Lorg/apache/commons/math3/complex/Complex;
+#reciprocal()Lorg/apache/commons/math3/complex/Complex;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getImaginary()D
+#getReal()D
+#isNaN()Z
+#isInfinite()Z
+#multiply(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
+#multiply(I)Lorg/apache/commons/math3/complex/Complex;
+#multiply(D)Lorg/apache/commons/math3/complex/Complex;
+#negate()Lorg/apache/commons/math3/complex/Complex;
+#subtract(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
+#subtract(D)Lorg/apache/commons/math3/complex/Complex;
+#acos()Lorg/apache/commons/math3/complex/Complex;
+#asin()Lorg/apache/commons/math3/complex/Complex;
+#atan()Lorg/apache/commons/math3/complex/Complex;
+#cos()Lorg/apache/commons/math3/complex/Complex;
+#cosh()Lorg/apache/commons/math3/complex/Complex;
+#exp()Lorg/apache/commons/math3/complex/Complex;
+#log()Lorg/apache/commons/math3/complex/Complex;
+#pow(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
+#pow(D)Lorg/apache/commons/math3/complex/Complex;
+#sin()Lorg/apache/commons/math3/complex/Complex;
+#sinh()Lorg/apache/commons/math3/complex/Complex;
+#sqrt()Lorg/apache/commons/math3/complex/Complex;
+#sqrt1z()Lorg/apache/commons/math3/complex/Complex;
+#tan()Lorg/apache/commons/math3/complex/Complex;
+#tanh()Lorg/apache/commons/math3/complex/Complex;
+#getArgument()D
+#nthRoot(I)Ljava/util/List;
+#valueOf(DD)Lorg/apache/commons/math3/complex/Complex;
+#valueOf(D)Lorg/apache/commons/math3/complex/Complex;
+#getField()Lorg/apache/commons/math3/complex/ComplexField;
+#toString()Ljava/lang/String;
+#getField()Lorg/apache/commons/math3/Field;
+#reciprocal()Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Ljava/lang/Object;
@3.3
+#equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;I)Z
+#equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;)Z
+#equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;D)Z
+#equalsWithRelativeTolerance(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;D)Z

+###org/apache/commons/math3/complex/ComplexField
@3.0
+#getInstance()Lorg/apache/commons/math3/complex/ComplexField;
+#getOne()Lorg/apache/commons/math3/complex/Complex;
+#getZero()Lorg/apache/commons/math3/complex/Complex;
+#getRuntimeClass()Ljava/lang/Class;
+#getOne()Ljava/lang/Object;
+#getZero()Ljava/lang/Object;

+###org/apache/commons/math3/genetics/GeneticAlgorithm
@3.0
+#<init>(Lorg/apache/commons/math3/genetics/CrossoverPolicy;DLorg/apache/commons/math3/genetics/MutationPolicy;DLorg/apache/commons/math3/genetics/SelectionPolicy;)V
+#setRandomGenerator(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;
+#evolve(Lorg/apache/commons/math3/genetics/Population;Lorg/apache/commons/math3/genetics/StoppingCondition;)Lorg/apache/commons/math3/genetics/Population;
+#nextGeneration(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/Population;
+#getCrossoverPolicy()Lorg/apache/commons/math3/genetics/CrossoverPolicy;
+#getCrossoverRate()D
+#getMutationPolicy()Lorg/apache/commons/math3/genetics/MutationPolicy;
+#getMutationRate()D
+#getSelectionPolicy()Lorg/apache/commons/math3/genetics/SelectionPolicy;
+#getGenerationsEvolved()I

+###org/apache/commons/math3/genetics/TournamentSelection
@3.0
+#<init>(I)V
+#select(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/ChromosomePair;
+#getArity()I
+#setArity(I)V

+###org/apache/commons/math3/genetics/SelectionPolicy
@3.0
+#select(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/ChromosomePair;

+###org/apache/commons/math3/genetics/ElitisticListPopulation
@3.0
+#<init>(Ljava/util/List;ID)V
+#<init>(ID)V
+#nextGeneration()Lorg/apache/commons/math3/genetics/Population;
+#setElitismRate(D)V
+#getElitismRate()D

+###org/apache/commons/math3/genetics/BinaryMutation
@3.0
+#<init>()V
+#mutate(Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/Chromosome;

+###org/apache/commons/math3/genetics/PermutationChromosome
@3.0
+#decode(Ljava/util/List;)Ljava/util/List;

+###org/apache/commons/math3/genetics/RandomKey
@3.0
+#<init>(Ljava/util/List;)V
+#<init>([Ljava/lang/Double;)V
+#decode(Ljava/util/List;)Ljava/util/List;
+#randomPermutation(I)Ljava/util/List;
+#identityPermutation(I)Ljava/util/List;
+#comparatorPermutation(Ljava/util/List;Ljava/util/Comparator;)Ljava/util/List;
+#inducedPermutation(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/commons/math3/genetics/CycleCrossover
@3.1
+#<init>()V
+#<init>(Z)V
+#isRandomStart()Z
+#crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;

+###org/apache/commons/math3/genetics/OrderedCrossover
@3.1
+#<init>()V
+#crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;

+###org/apache/commons/math3/genetics/FixedElapsedTime
@3.1
+#<init>(J)V
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#isSatisfied(Lorg/apache/commons/math3/genetics/Population;)Z

+###org/apache/commons/math3/genetics/BinaryChromosome
@3.0
+#<init>(Ljava/util/List;)V
+#<init>([Ljava/lang/Integer;)V
+#randomBinaryRepresentation(I)Ljava/util/List;

+###org/apache/commons/math3/genetics/OnePointCrossover
@3.0
+#<init>()V
+#crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;

+###org/apache/commons/math3/genetics/UniformCrossover
@3.1
+#<init>(D)V
+#getRatio()D
+#crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;

+###org/apache/commons/math3/genetics/InvalidRepresentationException
@3.0
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V

+###org/apache/commons/math3/genetics/AbstractListChromosome
@3.0
+#<init>(Ljava/util/List;)V
+#<init>([Ljava/lang/Object;)V
+#getLength()I
+#newFixedLengthChromosome(Ljava/util/List;)Lorg/apache/commons/math3/genetics/AbstractListChromosome;
+#toString()Ljava/lang/String;
@3.3
+#<init>(Ljava/util/List;Z)V

+###org/apache/commons/math3/genetics/ChromosomePair
@3.0
+#<init>(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)V
+#getFirst()Lorg/apache/commons/math3/genetics/Chromosome;
+#getSecond()Lorg/apache/commons/math3/genetics/Chromosome;
+#toString()Ljava/lang/String;

+###org/apache/commons/math3/genetics/CrossoverPolicy
@3.0
+#crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;

+###org/apache/commons/math3/genetics/NPointCrossover
@3.1
+#<init>(I)V
+#getCrossoverPoints()I
+#crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;

+###org/apache/commons/math3/genetics/RandomKeyMutation
@3.0
+#<init>()V
+#mutate(Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/Chromosome;

+###org/apache/commons/math3/genetics/MutationPolicy
@3.0
+#mutate(Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/Chromosome;

+###org/apache/commons/math3/genetics/ListPopulation
@3.0
+#<init>(Ljava/util/List;I)V
+#<init>(I)V
+#setChromosomes(Ljava/util/List;)V
+#getChromosomes()Ljava/util/List;
+#addChromosome(Lorg/apache/commons/math3/genetics/Chromosome;)V
+#getFittestChromosome()Lorg/apache/commons/math3/genetics/Chromosome;
+#getPopulationLimit()I
+#setPopulationLimit(I)V
+#getPopulationSize()I
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
@3.1
*#setChromosomes(Ljava/util/List;)V[deprecated]
+#addChromosomes(Ljava/util/Collection;)V

+###org/apache/commons/math3/genetics/Fitness
@3.0
+#fitness()D

+###org/apache/commons/math3/genetics/Chromosome
@3.0
+#<init>()V
+#getFitness()D
+#compareTo(Lorg/apache/commons/math3/genetics/Chromosome;)I
+#searchForFitnessUpdate(Lorg/apache/commons/math3/genetics/Population;)V
+#compareTo(Ljava/lang/Object;)I

+###org/apache/commons/math3/genetics/Population
@3.0
+#getPopulationSize()I
+#getPopulationLimit()I
+#nextGeneration()Lorg/apache/commons/math3/genetics/Population;
+#addChromosome(Lorg/apache/commons/math3/genetics/Chromosome;)V
+#getFittestChromosome()Lorg/apache/commons/math3/genetics/Chromosome;

+###org/apache/commons/math3/genetics/StoppingCondition
@3.0
+#isSatisfied(Lorg/apache/commons/math3/genetics/Population;)Z

+###org/apache/commons/math3/genetics/FixedGenerationCount
@3.0
+#<init>(I)V
+#isSatisfied(Lorg/apache/commons/math3/genetics/Population;)Z
+#getNumGenerations()I

+###org/apache/commons/math3/fraction/FractionFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
+#getAvailableLocales()[Ljava/util/Locale;
+#formatFraction(Lorg/apache/commons/math3/fraction/Fraction;)Ljava/lang/String;
+#getImproperInstance()Lorg/apache/commons/math3/fraction/FractionFormat;
+#getImproperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/FractionFormat;
+#getProperInstance()Lorg/apache/commons/math3/fraction/FractionFormat;
+#getProperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/FractionFormat;
+#format(Lorg/apache/commons/math3/fraction/Fraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/fraction/Fraction;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/Fraction;
+#parse(Ljava/lang/String;)Ljava/lang/Number;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;

+###org/apache/commons/math3/fraction/ProperFractionFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
+#format(Lorg/apache/commons/math3/fraction/Fraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#getWholeFormat()Ljava/text/NumberFormat;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/Fraction;
+#setWholeFormat(Ljava/text/NumberFormat;)V
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;

+###org/apache/commons/math3/fraction/AbstractFormat
@3.0
+#getDenominatorFormat()Ljava/text/NumberFormat;
+#getNumeratorFormat()Ljava/text/NumberFormat;
+#setDenominatorFormat(Ljava/text/NumberFormat;)V
+#setNumeratorFormat(Ljava/text/NumberFormat;)V
+#format(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#format(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;

+###org/apache/commons/math3/fraction/BigFractionFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
+#getAvailableLocales()[Ljava/util/Locale;
+#formatBigFraction(Lorg/apache/commons/math3/fraction/BigFraction;)Ljava/lang/String;
+#getImproperInstance()Lorg/apache/commons/math3/fraction/BigFractionFormat;
+#getImproperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/BigFractionFormat;
+#getProperInstance()Lorg/apache/commons/math3/fraction/BigFractionFormat;
+#getProperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/BigFractionFormat;
+#format(Lorg/apache/commons/math3/fraction/BigFraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/fraction/BigFraction;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/BigFraction;
+#parse(Ljava/lang/String;)Ljava/lang/Number;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;

+###org/apache/commons/math3/fraction/ProperBigFractionFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
+#format(Lorg/apache/commons/math3/fraction/BigFraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#getWholeFormat()Ljava/text/NumberFormat;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/BigFraction;
+#setWholeFormat(Ljava/text/NumberFormat;)V
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;

+###org/apache/commons/math3/fraction/Fraction
@3.0
+#<init>(D)V
+#<init>(DDI)V
+#<init>(DI)V
+#<init>(I)V
+#<init>(II)V
+#abs()Lorg/apache/commons/math3/fraction/Fraction;
+#compareTo(Lorg/apache/commons/math3/fraction/Fraction;)I
+#doubleValue()D
+#equals(Ljava/lang/Object;)Z
+#floatValue()F
+#getDenominator()I
+#getNumerator()I
+#hashCode()I
+#intValue()I
+#longValue()J
+#negate()Lorg/apache/commons/math3/fraction/Fraction;
+#reciprocal()Lorg/apache/commons/math3/fraction/Fraction;
+#add(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;
+#add(I)Lorg/apache/commons/math3/fraction/Fraction;
+#subtract(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;
+#subtract(I)Lorg/apache/commons/math3/fraction/Fraction;
+#multiply(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;
+#multiply(I)Lorg/apache/commons/math3/fraction/Fraction;
+#divide(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;
+#divide(I)Lorg/apache/commons/math3/fraction/Fraction;
+#percentageValue()D
+#getReducedFraction(II)Lorg/apache/commons/math3/fraction/Fraction;
+#toString()Ljava/lang/String;
+#getField()Lorg/apache/commons/math3/fraction/FractionField;
+#getField()Lorg/apache/commons/math3/Field;
+#reciprocal()Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/commons/math3/fraction/FractionField
@3.0
+#getInstance()Lorg/apache/commons/math3/fraction/FractionField;
+#getOne()Lorg/apache/commons/math3/fraction/Fraction;
+#getZero()Lorg/apache/commons/math3/fraction/Fraction;
+#getRuntimeClass()Ljava/lang/Class;
+#getOne()Ljava/lang/Object;
+#getZero()Ljava/lang/Object;

+###org/apache/commons/math3/fraction/BigFractionField
@3.0
+#getInstance()Lorg/apache/commons/math3/fraction/BigFractionField;
+#getOne()Lorg/apache/commons/math3/fraction/BigFraction;
+#getZero()Lorg/apache/commons/math3/fraction/BigFraction;
+#getRuntimeClass()Ljava/lang/Class;
+#getOne()Ljava/lang/Object;
+#getZero()Ljava/lang/Object;

+###org/apache/commons/math3/fraction/FractionConversionException
@3.0
+#<init>(DI)V
+#<init>(DJJ)V

+###org/apache/commons/math3/fraction/BigFraction
@3.0
+#<init>(Ljava/math/BigInteger;)V
+#<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
+#<init>(D)V
+#<init>(DDI)V
+#<init>(DI)V
+#<init>(I)V
+#<init>(II)V
+#<init>(J)V
+#<init>(JJ)V
+#getReducedFraction(II)Lorg/apache/commons/math3/fraction/BigFraction;
+#abs()Lorg/apache/commons/math3/fraction/BigFraction;
+#add(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
+#add(I)Lorg/apache/commons/math3/fraction/BigFraction;
+#add(J)Lorg/apache/commons/math3/fraction/BigFraction;
+#add(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
+#bigDecimalValue()Ljava/math/BigDecimal;
+#bigDecimalValue(I)Ljava/math/BigDecimal;
+#bigDecimalValue(II)Ljava/math/BigDecimal;
+#compareTo(Lorg/apache/commons/math3/fraction/BigFraction;)I
+#divide(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
+#divide(I)Lorg/apache/commons/math3/fraction/BigFraction;
+#divide(J)Lorg/apache/commons/math3/fraction/BigFraction;
+#divide(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
+#doubleValue()D
+#equals(Ljava/lang/Object;)Z
+#floatValue()F
+#getDenominator()Ljava/math/BigInteger;
+#getDenominatorAsInt()I
+#getDenominatorAsLong()J
+#getNumerator()Ljava/math/BigInteger;
+#getNumeratorAsInt()I
+#getNumeratorAsLong()J
+#hashCode()I
+#intValue()I
+#longValue()J
+#multiply(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
+#multiply(I)Lorg/apache/commons/math3/fraction/BigFraction;
+#multiply(J)Lorg/apache/commons/math3/fraction/BigFraction;
+#multiply(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
+#negate()Lorg/apache/commons/math3/fraction/BigFraction;
+#percentageValue()D
+#pow(I)Lorg/apache/commons/math3/fraction/BigFraction;
+#pow(J)Lorg/apache/commons/math3/fraction/BigFraction;
+#pow(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
+#pow(D)D
+#reciprocal()Lorg/apache/commons/math3/fraction/BigFraction;
+#reduce()Lorg/apache/commons/math3/fraction/BigFraction;
+#subtract(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
+#subtract(I)Lorg/apache/commons/math3/fraction/BigFraction;
+#subtract(J)Lorg/apache/commons/math3/fraction/BigFraction;
+#subtract(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
+#toString()Ljava/lang/String;
+#getField()Lorg/apache/commons/math3/fraction/BigFractionField;
+#getField()Lorg/apache/commons/math3/Field;
+#reciprocal()Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/commons/math3/distribution/EnumeratedRealDistribution
@3.2
+#<init>([D[D)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[D)V
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#sample()D
@3.3
+#inverseCumulativeProbability(D)D
@3.6
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D)V
+#<init>([D)V

+###org/apache/commons/math3/distribution/UniformRealDistribution
@3.0
+#<init>(DD)V
+#<init>(DDD)V
+#<init>()V
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#sample()D
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
-#probability(D)D
@3.2
*#<init>(DDD)V[deprecated]
*#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V[deprecated]
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#inverseCumulativeProbability(D)D

+###org/apache/commons/math3/distribution/EnumeratedIntegerDistribution
@3.2
+#<init>([I[D)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;[I[D)V
+#probability(I)D
+#cumulativeProbability(I)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
+#sample()I
@3.6
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;[I)V
+#<init>([I)V

+###org/apache/commons/math3/distribution/LevyDistribution
@3.2
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#density(D)D
+#cumulativeProbability(D)D
+#inverseCumulativeProbability(D)D
+#getScale()D
+#getLocation()D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.3
+#logDensity(D)D
@3.4
+#<init>(DD)V

+###org/apache/commons/math3/distribution/GumbelDistribution
@3.4
+#<init>(DD)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#getLocation()D
+#getScale()D
+#density(D)D
+#cumulativeProbability(D)D
+#inverseCumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z

+###org/apache/commons/math3/distribution/ConstantRealDistribution
@3.4
+#<init>(D)V
+#density(D)D
+#cumulativeProbability(D)D
+#inverseCumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#sample()D
+#reseedRandomGenerator(J)V

+###org/apache/commons/math3/distribution/LogNormalDistribution
@3.0
+#<init>(DD)V
+#<init>(DDD)V
+#<init>()V
+#getScale()D
+#getShape()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#cumulativeProbability(DD)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#sample()D
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
*#cumulativeProbability(DD)D[deprecated]
+#probability(DD)D
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#logDensity(D)D

+###org/apache/commons/math3/distribution/ParetoDistribution
@3.3
+#<init>()V
+#<init>(DD)V
+#<init>(DDD)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
+#getScale()D
+#getShape()D
+#density(D)D
+#logDensity(D)D
+#cumulativeProbability(D)D
+#cumulativeProbability(DD)D[deprecated]
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#sample()D

+###org/apache/commons/math3/distribution/TriangularDistribution
@3.0
+#<init>(DDD)V
+#getMode()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#inverseCumulativeProbability(D)D
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
-#probability(D)D

+###org/apache/commons/math3/distribution/ExponentialDistribution
@3.0
+#<init>(D)V
+#<init>(DD)V
+#getMean()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#inverseCumulativeProbability(D)D
+#sample()D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V
+#logDensity(D)D

+###org/apache/commons/math3/distribution/PoissonDistribution
@3.0
+#<init>(D)V
+#<init>(DDI)V
+#<init>(DD)V
+#<init>(DI)V
+#getMean()D
+#probability(I)D
+#cumulativeProbability(I)D
+#normalApproximateProbability(I)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
+#sample()I
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDI)V
@3.3
+#logProbability(I)D

+###org/apache/commons/math3/distribution/GeometricDistribution
@3.3
+#<init>(D)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V
+#getProbabilityOfSuccess()D
+#probability(I)D
+#logProbability(I)D
+#cumulativeProbability(I)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
@3.6
+#inverseCumulativeProbability(D)I

+###org/apache/commons/math3/distribution/CauchyDistribution
@3.0
+#<init>()V
+#<init>(DD)V
+#<init>(DDD)V
+#cumulativeProbability(D)D
+#getMedian()D
+#getScale()D
+#probability(D)D
+#density(D)D
+#inverseCumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V

+###org/apache/commons/math3/distribution/GammaDistribution
@3.0
+#<init>(DD)V
+#<init>(DDD)V
+#getAlpha()D
+#getBeta()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
*#getAlpha()D[deprecated]
+#getShape()D
*#getBeta()D[deprecated]
+#getScale()D
+#sample()D
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#logDensity(D)D

+###org/apache/commons/math3/distribution/ChiSquaredDistribution
@3.0
+#<init>(D)V
+#<init>(DD)V
+#getDegreesOfFreedom()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V
+#logDensity(D)D

+###org/apache/commons/math3/distribution/BetaDistribution
@3.0
+#<init>(DDD)V
+#<init>(DD)V
+#getAlpha()D
+#getBeta()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#logDensity(D)D
@3.6
+#sample()D

+###org/apache/commons/math3/distribution/TDistribution
@3.0
+#<init>(DD)V
+#<init>(D)V
+#getDegreesOfFreedom()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V
+#logDensity(D)D

+###org/apache/commons/math3/distribution/PascalDistribution
@3.0
+#<init>(ID)V
+#getNumberOfSuccesses()I
+#getProbabilityOfSuccess()D
+#probability(I)D
+#cumulativeProbability(I)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
@3.3
+#logProbability(I)D

+###org/apache/commons/math3/distribution/NormalDistribution
@3.0
+#<init>(DD)V
+#<init>(DDD)V
+#<init>()V
+#getMean()D
+#getStandardDeviation()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#cumulativeProbability(DD)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#sample()D
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
*#cumulativeProbability(DD)D[deprecated]
+#probability(DD)D
-#probability(D)D
@3.2
+#inverseCumulativeProbability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#logDensity(D)D

+###org/apache/commons/math3/distribution/LogisticDistribution
@3.4
+#<init>(DD)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#getLocation()D
+#getScale()D
+#density(D)D
+#cumulativeProbability(D)D
+#inverseCumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z

+###org/apache/commons/math3/distribution/LaplaceDistribution
@3.4
+#<init>(DD)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#getLocation()D
+#getScale()D
+#density(D)D
+#cumulativeProbability(D)D
+#inverseCumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z

+###org/apache/commons/math3/distribution/UniformIntegerDistribution
@3.0
+#<init>(II)V
+#probability(I)D
+#cumulativeProbability(I)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
+#sample()I
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;II)V

+###org/apache/commons/math3/distribution/ZipfDistribution
@3.0
+#<init>(ID)V
+#getNumberOfElements()I
+#getExponent()D
+#probability(I)D
+#cumulativeProbability(I)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
@3.3
+#logProbability(I)D
@3.6
+#sample()I

+###org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization
@3.2
+#<init>([[D)V
+#fit(Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;ID)V
+#fit(Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;)V
+#estimate([[DI)Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;
+#getLogLikelihood()D
+#getFittedModel()Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;

+###org/apache/commons/math3/distribution/HypergeometricDistribution
@3.0
+#<init>(III)V
+#cumulativeProbability(I)D
+#getNumberOfSuccesses()I
+#getPopulationSize()I
+#getSampleSize()I
+#probability(I)D
+#upperCumulativeProbability(I)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;III)V
@3.3
+#logProbability(I)D

+###org/apache/commons/math3/distribution/EnumeratedDistribution
@3.2
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V
+#reseedRandomGenerator(J)V
+#getPmf()Ljava/util/List;
+#sample()Ljava/lang/Object;
+#sample(I)[Ljava/lang/Object;
+#sample(I[Ljava/lang/Object;)[Ljava/lang/Object;

+###org/apache/commons/math3/distribution/MultivariateNormalDistribution
@3.1
+#<init>([D[[D)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
+#getMeans()[D
+#getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;
+#density([D)D
+#getStandardDeviations()[D
+#sample()[D

+###org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution
@3.1
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V
+#density([D)D
+#sample()[D
+#reseedRandomGenerator(J)V
+#getComponents()Ljava/util/List;

+###org/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution
@3.2
+#<init>([D[[D[[[D)V
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V

+###org/apache/commons/math3/distribution/WeibullDistribution
@3.0
+#<init>(DD)V
+#<init>(DDD)V
+#getShape()D
+#getScale()D
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#inverseCumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#logDensity(D)D

+###org/apache/commons/math3/distribution/MultivariateRealDistribution
@3.1
+#density([D)D
+#reseedRandomGenerator(J)V
+#getDimension()I
+#sample()[D
+#sample(I)[[D

+###org/apache/commons/math3/distribution/AbstractMultivariateRealDistribution
@3.1
+#reseedRandomGenerator(J)V
+#getDimension()I
+#sample()[D
+#sample(I)[[D

+###org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution
@3.0
+#<init>(I)V
+#cdf(D)D
+#cdfExact(D)D
+#cdf(DZ)D

+###org/apache/commons/math3/distribution/NakagamiDistribution
@3.4
+#<init>(DD)V
+#<init>(DDD)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
+#getShape()D
+#getScale()D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z

+###org/apache/commons/math3/distribution/AbstractRealDistribution
@3.0
+#cumulativeProbability(DD)D
+#inverseCumulativeProbability(D)D
+#reseedRandomGenerator(J)V
+#sample()D
+#sample(I)[D
@3.1
*#cumulativeProbability(DD)D[deprecated]
+#probability(DD)D
+#probability(D)D
@3.3
+#logDensity(D)D

+###org/apache/commons/math3/distribution/FDistribution
@3.0
+#<init>(DD)V
+#<init>(DDD)V
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#getNumeratorDegreesOfFreedom()D
+#getDenominatorDegreesOfFreedom()D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
-#probability(D)D
@3.3
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#logDensity(D)D

+###org/apache/commons/math3/distribution/IntegerDistribution
@3.0
+#probability(I)D
+#cumulativeProbability(I)D
+#cumulativeProbability(II)D
+#inverseCumulativeProbability(D)I
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
+#reseedRandomGenerator(J)V
+#sample()I
+#sample(I)[I

+###org/apache/commons/math3/distribution/AbstractIntegerDistribution
@3.0
+#cumulativeProbability(II)D
+#inverseCumulativeProbability(D)I
+#reseedRandomGenerator(J)V
+#sample()I
+#sample(I)[I
@3.3
+#logProbability(I)D

+###org/apache/commons/math3/distribution/BinomialDistribution
@3.0
+#<init>(ID)V
+#getNumberOfTrials()I
+#getProbabilityOfSuccess()D
+#probability(I)D
+#cumulativeProbability(I)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()I
+#getSupportUpperBound()I
+#isSupportConnected()Z
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
@3.3
+#logProbability(I)D

+###org/apache/commons/math3/distribution/RealDistribution
@3.0
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#cumulativeProbability(DD)D
+#inverseCumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#reseedRandomGenerator(J)V
+#sample()D
+#sample(I)[D
@3.1
*#cumulativeProbability(DD)D[deprecated]
@3.3
*#isSupportLowerBoundInclusive()Z[deprecated]
*#isSupportUpperBoundInclusive()Z[deprecated]

+###org/apache/commons/math3/transform/FastCosineTransformer
@3.0
+#<init>(Lorg/apache/commons/math3/transform/DctNormalization;)V
+#transform([DLorg/apache/commons/math3/transform/TransformType;)[D
+#transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D

+###org/apache/commons/math3/transform/FastHadamardTransformer
@3.0
+#<init>()V
+#transform([DLorg/apache/commons/math3/transform/TransformType;)[D
+#transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D
+#transform([I)[I

+###org/apache/commons/math3/transform/TransformUtils
@3.0
+#scaleArray([DD)[D
+#scaleArray([Lorg/apache/commons/math3/complex/Complex;D)[Lorg/apache/commons/math3/complex/Complex;
+#createRealImaginaryArray([Lorg/apache/commons/math3/complex/Complex;)[[D
+#createComplexArray([[D)[Lorg/apache/commons/math3/complex/Complex;
+#exactLog2(I)I

+###org/apache/commons/math3/transform/DctNormalization
@3.0
+#values()[Lorg/apache/commons/math3/transform/DctNormalization;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/transform/DctNormalization;

+###org/apache/commons/math3/transform/DftNormalization
@3.0
+#values()[Lorg/apache/commons/math3/transform/DftNormalization;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/transform/DftNormalization;

+###org/apache/commons/math3/transform/FastFourierTransformer
@3.0
+#<init>(Lorg/apache/commons/math3/transform/DftNormalization;)V
+#transformInPlace([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V
+#transform([DLorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;
+#transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;
+#transform([Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;
+#mdfft(Ljava/lang/Object;Lorg/apache/commons/math3/transform/TransformType;)Ljava/lang/Object;[deprecated]

+###org/apache/commons/math3/transform/RealTransformer
@3.0
+#transform([DLorg/apache/commons/math3/transform/TransformType;)[D
+#transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D

+###org/apache/commons/math3/transform/FastSineTransformer
@3.0
+#<init>(Lorg/apache/commons/math3/transform/DstNormalization;)V
+#transform([DLorg/apache/commons/math3/transform/TransformType;)[D
+#transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D

+###org/apache/commons/math3/transform/DstNormalization
@3.0
+#values()[Lorg/apache/commons/math3/transform/DstNormalization;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/transform/DstNormalization;

+###org/apache/commons/math3/transform/TransformType
@3.0
+#values()[Lorg/apache/commons/math3/transform/TransformType;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/transform/TransformType;

+###org/apache/commons/math3/stat/StatUtils
@3.0
+#sum([D)D
+#sum([DII)D
+#sumSq([D)D
+#sumSq([DII)D
+#product([D)D
+#product([DII)D
+#sumLog([D)D
+#sumLog([DII)D
+#mean([D)D
+#mean([DII)D
+#geometricMean([D)D
+#geometricMean([DII)D
+#variance([D)D
+#variance([DII)D
+#variance([DDII)D
+#variance([DD)D
+#populationVariance([D)D
+#populationVariance([DII)D
+#populationVariance([DDII)D
+#populationVariance([DD)D
+#max([D)D
+#max([DII)D
+#min([D)D
+#min([DII)D
+#percentile([DD)D
+#percentile([DIID)D
+#sumDifference([D[D)D
+#meanDifference([D[D)D
+#varianceDifference([D[DD)D
+#normalize([D)[D
@3.3
+#mode([D)[D
+#mode([DII)[D

+###org/apache/commons/math3/stat/Frequency
@3.0
+#<init>()V
+#<init>(Ljava/util/Comparator;)V
+#toString()Ljava/lang/String;
+#addValue(Ljava/lang/Comparable;)V
+#addValue(I)V
+#addValue(J)V
+#addValue(C)V
+#clear()V
+#valuesIterator()Ljava/util/Iterator;
+#getSumFreq()J
+#getCount(Ljava/lang/Comparable;)J
+#getCount(I)J
+#getCount(J)J
+#getCount(C)J
+#getUniqueCount()I
+#getPct(Ljava/lang/Comparable;)D
+#getPct(I)D
+#getPct(J)D
+#getPct(C)D
+#getCumFreq(Ljava/lang/Comparable;)J
+#getCumFreq(I)J
+#getCumFreq(J)J
+#getCumFreq(C)J
+#getCumPct(Ljava/lang/Comparable;)D
+#getCumPct(I)D
+#getCumPct(J)D
+#getCumPct(C)D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.1
+#incrementValue(Ljava/lang/Comparable;J)V
+#entrySetIterator()Ljava/util/Iterator;
+#merge(Lorg/apache/commons/math3/stat/Frequency;)V
+#merge(Ljava/util/Collection;)V
@3.3
+#incrementValue(IJ)V
+#incrementValue(JJ)V
+#incrementValue(CJ)V
+#getMode()Ljava/util/List;

+###org/apache/commons/math3/stat/interval/NormalApproximationInterval
@3.3
+#<init>()V
+#createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;

+###org/apache/commons/math3/stat/interval/IntervalUtils
@3.3
+#getAgrestiCoullInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
+#getClopperPearsonInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
+#getNormalApproximationInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
+#getWilsonScoreInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;

+###org/apache/commons/math3/stat/interval/ClopperPearsonInterval
@3.3
+#<init>()V
+#createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;

+###org/apache/commons/math3/stat/interval/AgrestiCoullInterval
@3.3
+#<init>()V
+#createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;

+###org/apache/commons/math3/stat/interval/BinomialConfidenceInterval
@3.3
+#createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;

+###org/apache/commons/math3/stat/interval/WilsonScoreInterval
@3.3
+#<init>()V
+#createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;

+###org/apache/commons/math3/stat/interval/ConfidenceInterval
@3.3
+#<init>(DDD)V
+#getLowerBound()D
+#getUpperBound()D
+#getConfidenceLevel()D
+#toString()Ljava/lang/String;

+###org/apache/commons/math3/stat/ranking/TiesStrategy
@3.0
+#values()[Lorg/apache/commons/math3/stat/ranking/TiesStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/ranking/TiesStrategy;

+###org/apache/commons/math3/stat/ranking/NaturalRanking
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
+#<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)V
+#<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/random/RandomGenerator;)V
+#getNanStrategy()Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
+#getTiesStrategy()Lorg/apache/commons/math3/stat/ranking/TiesStrategy;
+#rank([D)[D

+###org/apache/commons/math3/stat/ranking/NaNStrategy
@3.0
+#values()[Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/ranking/NaNStrategy;

+###org/apache/commons/math3/stat/ranking/RankingAlgorithm
@3.0
+#rank([D)[D

+###org/apache/commons/math3/stat/correlation/KendallsCorrelation
@3.3
+#<init>()V
+#<init>([[D)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#getCorrelationMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
+#correlation([D[D)D

+###org/apache/commons/math3/stat/correlation/StorelessCovariance
@3.0
+#<init>(I)V
+#<init>(IZ)V
+#getCovariance(II)D
+#increment([D)V
+#getCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getData()[[D
+#getN()I
@3.3
+#append(Lorg/apache/commons/math3/stat/correlation/StorelessCovariance;)V

+###org/apache/commons/math3/stat/correlation/Covariance
@3.0
+#<init>()V
+#<init>([[DZ)V
+#<init>([[D)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;Z)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#getCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getN()I
+#covariance([D[DZ)D
+#covariance([D[D)D

+###org/apache/commons/math3/stat/correlation/PearsonsCorrelation
@3.0
+#<init>()V
+#<init>([[D)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#<init>(Lorg/apache/commons/math3/stat/correlation/Covariance;)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;I)V
+#getCorrelationMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getCorrelationStandardErrors()Lorg/apache/commons/math3/linear/RealMatrix;
+#getCorrelationPValues()Lorg/apache/commons/math3/linear/RealMatrix;
+#computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
+#correlation([D[D)D
+#covarianceToCorrelation(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/stat/correlation/SpearmansCorrelation
@3.0
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/stat/ranking/RankingAlgorithm;)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#<init>()V
+#getCorrelationMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getRankCorrelation()Lorg/apache/commons/math3/stat/correlation/PearsonsCorrelation;
+#computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
+#correlation([D[D)D
@3.1
+#<init>(Lorg/apache/commons/math3/stat/ranking/RankingAlgorithm;)V

+###org/apache/commons/math3/stat/clustering/DBSCANClusterer
@3.1
+#<init>(DI)V
+#getEps()D
+#getMinPts()I
+#cluster(Ljava/util/Collection;)Ljava/util/List;

+###org/apache/commons/math3/stat/clustering/EuclideanDoublePoint
@3.1
+#<init>([D)V
+#centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/EuclideanDoublePoint;
+#distanceFrom(Lorg/apache/commons/math3/stat/clustering/EuclideanDoublePoint;)D
+#equals(Ljava/lang/Object;)Z
+#getPoint()[D
+#hashCode()I
+#toString()Ljava/lang/String;
+#centroidOf(Ljava/util/Collection;)Ljava/lang/Object;
+#distanceFrom(Ljava/lang/Object;)D

+###org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint
@3.0
+#<init>([I)V
+#getPoint()[I
+#distanceFrom(Lorg/apache/commons/math3/stat/clustering/EuclideanIntegerPoint;)D
+#centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/EuclideanIntegerPoint;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#centroidOf(Ljava/util/Collection;)Ljava/lang/Object;
+#distanceFrom(Ljava/lang/Object;)D

+###org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer
@3.0
+#<init>(Ljava/util/Random;)V
+#<init>(Ljava/util/Random;Lorg/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;)V
+#cluster(Ljava/util/Collection;III)Ljava/util/List;
+#cluster(Ljava/util/Collection;II)Ljava/util/List;

+###org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy
@3.0
+#values()[Lorg/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;

+###org/apache/commons/math3/stat/clustering/Clusterable
@3.0
+#distanceFrom(Ljava/lang/Object;)D
+#centroidOf(Ljava/util/Collection;)Ljava/lang/Object;

+###org/apache/commons/math3/stat/clustering/Cluster
@3.0
+#<init>(Lorg/apache/commons/math3/stat/clustering/Clusterable;)V
+#addPoint(Lorg/apache/commons/math3/stat/clustering/Clusterable;)V
+#getPoints()Ljava/util/List;
+#getCenter()Lorg/apache/commons/math3/stat/clustering/Clusterable;

+###org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;)V
+#getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
+#addValue(D)V
+#getN()J
+#getSum()D
+#getSumsq()D
+#getMean()D
+#getStandardDeviation()D
+#getVariance()D
+#getPopulationVariance()D
+#getMax()D
+#getMin()D
+#getGeometricMean()D
+#toString()Ljava/lang/String;
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getSumImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumsqImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumsqImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMinImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMinImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMaxImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMaxImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumLogImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getGeoMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setGeoMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getVarianceImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setVarianceImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;
+#copy(Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
@3.5
+#getQuadraticMean()D

+###org/apache/commons/math3/stat/descriptive/StatisticalSummaryValues
@3.0
+#<init>(DDJDDD)V
+#getMax()D
+#getMean()D
+#getMin()D
+#getN()J
+#getSum()D
+#getStandardDeviation()D
+#getVariance()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
+#getMax()D
+#getMean()D
+#getMin()D
+#getN()J
+#getStandardDeviation()D
+#getSum()D
+#getVariance()D
+#getSumOfLogs()D
+#getGeometricMean()D
+#getSumsq()D
+#getSecondMoment()D
+#getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
+#createContributingStatistics()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
+#aggregate(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/descriptive/StatisticalSummaryValues;

+###org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics
@3.0
+#<init>()V
+#<init>(I)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;)V
+#addValue(D)V
+#apply(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)D
+#clear()V
+#getElement(I)D
+#getN()J
+#getStandardDeviation()D
+#getValues()[D
+#getWindowSize()I
+#setWindowSize(I)V
+#toString()Ljava/lang/String;
+#copy()Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;
+#copy(Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;
@3.5
+#getQuadraticMean()D

+###org/apache/commons/math3/stat/descriptive/DescriptiveStatistics
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([D)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;)V
+#addValue(D)V
+#removeMostRecentValue()V
+#replaceMostRecentValue(D)D
+#getMean()D
+#getGeometricMean()D
+#getVariance()D
+#getPopulationVariance()D
+#getStandardDeviation()D
+#getSkewness()D
+#getKurtosis()D
+#getMax()D
+#getMin()D
+#getN()J
+#getSum()D
+#getSumsq()D
+#clear()V
+#getWindowSize()I
+#setWindowSize(I)V
+#getValues()[D
+#getSortedValues()[D
+#getElement(I)D
+#getPercentile(D)D
+#toString()Ljava/lang/String;
+#apply(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)D
+#getMeanImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setMeanImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getGeometricMeanImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setGeometricMeanImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getKurtosisImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setKurtosisImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getMaxImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setMaxImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getMinImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setMinImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getPercentileImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setPercentileImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getSkewnessImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setSkewnessImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getVarianceImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setVarianceImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getSumsqImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setSumsqImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#getSumImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
+#setSumImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;
+#copy(Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;)V
@3.5
+#getQuadraticMean()D

+###org/apache/commons/math3/stat/descriptive/WeightedEvaluation
@3.0
+#evaluate([D[D)D
+#evaluate([D[DII)D

+###org/apache/commons/math3/stat/descriptive/SummaryStatistics
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
+#getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
+#addValue(D)V
+#getN()J
+#getSum()D
+#getSumsq()D
+#getMean()D
+#getStandardDeviation()D
+#getVariance()D
+#getPopulationVariance()D
+#getMax()D
+#getMin()D
+#getGeometricMean()D
+#getSumOfLogs()D
+#getSecondMoment()D
+#toString()Ljava/lang/String;
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getSumImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumsqImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumsqImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMinImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMinImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMaxImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMaxImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumLogImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getGeoMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setGeoMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getVarianceImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setVarianceImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
+#copy(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
@3.5
+#getQuadraticMean()D

+###org/apache/commons/math3/stat/descriptive/StatisticalSummary
@3.0
+#getMean()D
+#getVariance()D
+#getStandardDeviation()D
+#getMax()D
+#getMin()D
+#getN()J
+#getSum()D

+###org/apache/commons/math3/stat/descriptive/moment/StandardDeviation
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;)V
+#<init>(Z)V
+#<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
+#increment(D)V
+#getN()J
+#getResult()D
+#clear()V
+#evaluate([D)D
+#evaluate([DII)D
+#evaluate([DDII)D
+#evaluate([DD)D
+#isBiasCorrected()Z
+#setBiasCorrected(Z)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;
+#copy(Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/moment/Kurtosis
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;)V
+#increment(D)V
+#getResult()D
+#clear()V
+#getN()J
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;
+#copy(Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/moment/SemiVariance
@3.0
+#<init>()V
+#<init>(Z)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)V
+#<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;
+#copy(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;)V
+#evaluate([D)D
+#evaluate([DII)D
+#evaluate([DLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)D
+#evaluate([DD)D
+#evaluate([DDLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)D
+#evaluate([DDLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;ZII)D
+#isBiasCorrected()Z
+#setBiasCorrected(Z)V
+#getVarianceDirection()Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;
+#setVarianceDirection(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
@3.1
-#evaluate([D)D

+###org/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction
@3.0
+#values()[Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;

+###org/apache/commons/math3/stat/descriptive/moment/Skewness
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;)V
+#increment(D)V
+#getResult()D
+#getN()J
+#clear()V
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;
+#copy(Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/moment/VectorialMean
@3.0
+#<init>(I)V
+#increment([D)V
+#getResult()[D
+#getN()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/math3/stat/descriptive/moment/Variance
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
+#<init>(Z)V
+#<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Variance;)V
+#increment(D)V
+#getResult()D
+#getN()J
+#clear()V
+#evaluate([D)D
+#evaluate([DII)D
+#evaluate([D[DII)D
+#evaluate([D[D)D
+#evaluate([DDII)D
+#evaluate([DD)D
+#evaluate([D[DDII)D
+#evaluate([D[DD)D
+#isBiasCorrected()Z
+#setBiasCorrected(Z)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/Variance;
+#copy(Lorg/apache/commons/math3/stat/descriptive/moment/Variance;Lorg/apache/commons/math3/stat/descriptive/moment/Variance;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/moment/Mean
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Mean;)V
+#increment(D)V
+#clear()V
+#getResult()D
+#getN()J
+#evaluate([DII)D
+#evaluate([D[DII)D
+#evaluate([D[D)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/Mean;
+#copy(Lorg/apache/commons/math3/stat/descriptive/moment/Mean;Lorg/apache/commons/math3/stat/descriptive/moment/Mean;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/moment/GeometricMean
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;
+#increment(D)V
+#getResult()D
+#clear()V
+#evaluate([DII)D
+#getN()J
+#setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumLogImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy(Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/moment/SecondMoment
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
+#increment(D)V
+#clear()V
+#getResult()D
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;
+#copy(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;
+#getN()J
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/moment/VectorialCovariance
@3.0
+#<init>(IZ)V
+#increment([D)V
+#getResult()Lorg/apache/commons/math3/linear/RealMatrix;
+#getN()J
+#clear()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/math3/stat/descriptive/StatisticalMultivariateSummary
@3.0
+#getDimension()I
+#getMean()[D
+#getCovariance()Lorg/apache/commons/math3/linear/RealMatrix;
+#getStandardDeviation()[D
+#getMax()[D
+#getMin()[D
+#getN()J
+#getGeometricMean()[D
+#getSum()[D
+#getSumSq()[D
+#getSumLog()[D

+###org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics
@3.0
+#<init>(IZ)V
+#addValue([D)V
+#getDimension()I
+#getN()J
+#getSum()[D
+#getSumSq()[D
+#getSumLog()[D
+#getMean()[D
+#getStandardDeviation()[D
+#getCovariance()Lorg/apache/commons/math3/linear/RealMatrix;
+#getMax()[D
+#getMin()[D
+#getGeometricMean()[D
+#toString()Ljava/lang/String;
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getSumImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumsqImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumsqImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMinImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMinImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMaxImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMaxImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumLogImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumLogImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getGeoMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setGeoMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V

+###org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics
@3.0
+#<init>(IZ)V
+#addValue([D)V
+#getDimension()I
+#getN()J
+#getSum()[D
+#getSumSq()[D
+#getSumLog()[D
+#getMean()[D
+#getStandardDeviation()[D
+#getCovariance()Lorg/apache/commons/math3/linear/RealMatrix;
+#getMax()[D
+#getMin()[D
+#getGeometricMean()[D
+#toString()Ljava/lang/String;
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getSumImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumsqImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumsqImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMinImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMinImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMaxImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMaxImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getSumLogImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setSumLogImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getGeoMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setGeoMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
+#getMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#setMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V

+###org/apache/commons/math3/stat/descriptive/rank/PSquarePercentile
@3.4
+#<init>(D)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#increment(D)V
+#toString()Ljava/lang/String;
+#getN()J
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#quantile()D
+#clear()V
+#getResult()D
+#newMarkers(Ljava/util/List;D)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$PSquareMarkers;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$PSquareMarkers
@3.4
+#getPercentileValue()D
+#clone()Ljava/lang/Object;
+#height(I)D
+#processDataPoint(D)D
+#estimate(I)D

+###org/apache/commons/math3/stat/descriptive/rank/Median
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Median;)V
@3.4
+#withEstimationType(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
+#withNaNStrategy(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
+#withKthSelector(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
+#withKthSelector(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
+#withNaNStrategy(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
+#withEstimationType(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;

+###org/apache/commons/math3/stat/descriptive/rank/Percentile
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;)V
+#setData([D)V
+#setData([DII)V
+#evaluate(D)D
+#evaluate([DD)D
+#evaluate([DII)D
+#evaluate([DIID)D
+#getQuantile()D
+#setQuantile(D)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
+#copy(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
@3.4
*#copy(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;)V[deprecated]
+#getEstimationType()Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;
+#withEstimationType(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
+#getNaNStrategy()Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
+#withNaNStrategy(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
+#getKthSelector()Lorg/apache/commons/math3/util/KthSelector;
+#getPivotingStrategy()Lorg/apache/commons/math3/util/PivotingStrategyInterface;
+#withKthSelector(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;

+###org/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType
@3.4
+#values()[Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;
+#evaluate([DDLorg/apache/commons/math3/util/KthSelector;)D

+###org/apache/commons/math3/stat/descriptive/rank/Max
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Max;)V
+#increment(D)V
+#clear()V
+#getResult()D
+#getN()J
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/rank/Max;
+#copy(Lorg/apache/commons/math3/stat/descriptive/rank/Max;Lorg/apache/commons/math3/stat/descriptive/rank/Max;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/rank/Min
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Min;)V
+#increment(D)V
+#clear()V
+#getResult()D
+#getN()J
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/rank/Min;
+#copy(Lorg/apache/commons/math3/stat/descriptive/rank/Min;Lorg/apache/commons/math3/stat/descriptive/rank/Min;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic
@3.0
+#increment(D)V
+#incrementAll([D)V
+#incrementAll([DII)V
+#getResult()D
+#getN()J
+#clear()V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/UnivariateStatistic
@3.0
+#evaluate([D)D
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic
@3.0
+#<init>()V
+#setData([D)V
+#getData()[D
+#setData([DII)V
+#evaluate()D
+#evaluate([D)D
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic
@3.0
+#<init>()V
+#evaluate([D)D
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#clear()V
+#getResult()D
+#increment(D)V
+#incrementAll([D)V
+#incrementAll([DII)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/summary/Product
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/summary/Product;)V
+#increment(D)V
+#getResult()D
+#getN()J
+#clear()V
+#evaluate([DII)D
+#evaluate([D[DII)D
+#evaluate([D[D)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/summary/Product;
+#copy(Lorg/apache/commons/math3/stat/descriptive/summary/Product;Lorg/apache/commons/math3/stat/descriptive/summary/Product;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/summary/SumOfSquares
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;)V
+#increment(D)V
+#getResult()D
+#getN()J
+#clear()V
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;
+#copy(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/summary/Sum
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/summary/Sum;)V
+#increment(D)V
+#getResult()D
+#getN()J
+#clear()V
+#evaluate([DII)D
+#evaluate([D[DII)D
+#evaluate([D[D)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/summary/Sum;
+#copy(Lorg/apache/commons/math3/stat/descriptive/summary/Sum;Lorg/apache/commons/math3/stat/descriptive/summary/Sum;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/descriptive/summary/SumOfLogs
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V
+#increment(D)V
+#getResult()D
+#getN()J
+#clear()V
+#evaluate([DII)D
+#copy()Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;
+#copy(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V
+#copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
+#copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;

+###org/apache/commons/math3/stat/inference/MannWhitneyUTest
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
+#mannWhitneyU([D[D)D
+#mannWhitneyUTest([D[D)D

+###org/apache/commons/math3/stat/inference/BinomialTest
@3.3
+#<init>()V
+#binomialTest(IIDLorg/apache/commons/math3/stat/inference/AlternativeHypothesis;D)Z
+#binomialTest(IIDLorg/apache/commons/math3/stat/inference/AlternativeHypothesis;)D

+###org/apache/commons/math3/stat/inference/AlternativeHypothesis
@3.3
+#values()[Lorg/apache/commons/math3/stat/inference/AlternativeHypothesis;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/inference/AlternativeHypothesis;

+###org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
+#wilcoxonSignedRank([D[D)D
+#wilcoxonSignedRankTest([D[DZ)D

+###org/apache/commons/math3/stat/inference/GTest
@3.1
+#<init>()V
+#g([D[J)D
+#gTest([D[J)D
+#gTestIntrinsic([D[J)D
+#gTest([D[JD)Z
+#gDataSetsComparison([J[J)D
+#rootLogLikelihoodRatio(JJJJ)D
+#gTestDataSetsComparison([J[J)D
+#gTestDataSetsComparison([J[JD)Z

+###org/apache/commons/math3/stat/inference/OneWayAnova
@3.0
+#<init>()V
+#anovaFValue(Ljava/util/Collection;)D
+#anovaPValue(Ljava/util/Collection;)D
+#anovaTest(Ljava/util/Collection;D)Z
@3.2
+#anovaPValue(Ljava/util/Collection;Z)D

+###org/apache/commons/math3/stat/inference/ChiSquareTest
@3.0
+#<init>()V
+#chiSquare([D[J)D
+#chiSquareTest([D[J)D
+#chiSquareTest([D[JD)Z
+#chiSquare([[J)D
+#chiSquareTest([[J)D
+#chiSquareTest([[JD)Z
+#chiSquareDataSetsComparison([J[J)D
+#chiSquareTestDataSetsComparison([J[J)D
+#chiSquareTestDataSetsComparison([J[JD)Z

+###org/apache/commons/math3/stat/inference/TTest
@3.0
+#<init>()V
+#pairedT([D[D)D
+#pairedTTest([D[D)D
+#pairedTTest([D[DD)Z
+#t(D[D)D
+#t(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#homoscedasticT([D[D)D
+#t([D[D)D
+#t(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#homoscedasticT(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#tTest(D[D)D
+#tTest(D[DD)Z
+#tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z
+#tTest([D[D)D
+#homoscedasticTTest([D[D)D
+#tTest([D[DD)Z
+#homoscedasticTTest([D[DD)Z
+#tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#homoscedasticTTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z

+###org/apache/commons/math3/stat/inference/TestUtils
@3.0
+#homoscedasticT([D[D)D
+#homoscedasticT(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#homoscedasticTTest([D[DD)Z
+#homoscedasticTTest([D[D)D
+#homoscedasticTTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#pairedT([D[D)D
+#pairedTTest([D[DD)Z
+#pairedTTest([D[D)D
+#t(D[D)D
+#t(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#t([D[D)D
+#t(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#tTest(D[DD)Z
+#tTest(D[D)D
+#tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z
+#tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#tTest([D[DD)Z
+#tTest([D[D)D
+#tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z
+#tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
+#chiSquare([D[J)D
+#chiSquare([[J)D
+#chiSquareTest([D[JD)Z
+#chiSquareTest([D[J)D
+#chiSquareTest([[JD)Z
+#chiSquareTest([[J)D
+#chiSquareDataSetsComparison([J[J)D
+#chiSquareTestDataSetsComparison([J[J)D
+#chiSquareTestDataSetsComparison([J[JD)Z
+#oneWayAnovaFValue(Ljava/util/Collection;)D
+#oneWayAnovaPValue(Ljava/util/Collection;)D
+#oneWayAnovaTest(Ljava/util/Collection;D)Z
@3.1
+#g([D[J)D
+#gTest([D[J)D
+#gTestIntrinsic([D[J)D
+#gTest([D[JD)Z
+#gDataSetsComparison([J[J)D
+#rootLogLikelihoodRatio(JJJJ)D
+#gTestDataSetsComparison([J[J)D
+#gTestDataSetsComparison([J[JD)Z
@3.3
+#kolmogorovSmirnovStatistic(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D
+#kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D
+#kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DZ)D
+#kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DD)Z
+#kolmogorovSmirnovStatistic([D[D)D
+#kolmogorovSmirnovTest([D[D)D
+#kolmogorovSmirnovTest([D[DZ)D
+#exactP(DIIZ)D
+#approximateP(DII)D
+#monteCarloP(DIIZI)D

+###org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest
@3.3
+#<init>()V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DZ)D
+#kolmogorovSmirnovStatistic(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D
+#kolmogorovSmirnovTest([D[DZ)D
+#kolmogorovSmirnovTest([D[D)D
+#kolmogorovSmirnovStatistic([D[D)D
+#kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D
+#kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DD)Z
+#cdf(DI)D
+#cdfExact(DI)D
+#cdf(DIZ)D
+#ksSum(DDI)D
+#exactP(DIIZ)D
+#approximateP(DII)D
+#monteCarloP(DIIZI)D
@3.4
+#pelzGood(DI)D
@3.6
*#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V[deprecated]
+#bootstrap([D[DIZ)D
+#bootstrap([D[DI)D

+###org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression
@3.0
+#<init>()V
+#newSampleData([D[[D[[D)V

+###org/apache/commons/math3/stat/regression/MillerUpdatingRegression
@3.0
+#<init>(IZD)V
+#<init>(IZ)V
+#hasIntercept()Z
+#getN()J
+#addObservation([DD)V
+#addObservations([[D[D)V
+#clear()V
+#getPartialCorrelations(I)[D
+#getDiagonalOfHatMatrix([D)D
+#getOrderOfRegressors()[I
+#regress()Lorg/apache/commons/math3/stat/regression/RegressionResults;
+#regress(I)Lorg/apache/commons/math3/stat/regression/RegressionResults;
+#regress([I)Lorg/apache/commons/math3/stat/regression/RegressionResults;

+###org/apache/commons/math3/stat/regression/RegressionResults
@3.0
+#<init>([D[[DZJIDDDZZ)V
+#getParameterEstimate(I)D
+#getParameterEstimates()[D
+#getStdErrorOfEstimate(I)D
+#getStdErrorOfEstimates()[D
+#getCovarianceOfParameters(II)D
+#getNumberOfParameters()I
+#getN()J
+#getTotalSumSquares()D
+#getRegressionSumSquares()D
+#getErrorSumSquares()D
+#getMeanSquareError()D
+#getRSquared()D
+#getAdjustedRSquared()D
+#hasIntercept()Z

+###org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression
@3.0
+#hasIntercept()Z
+#getN()J
+#addObservation([DD)V
+#addObservations([[D[D)V
+#clear()V
+#regress()Lorg/apache/commons/math3/stat/regression/RegressionResults;
+#regress([I)Lorg/apache/commons/math3/stat/regression/RegressionResults;

+###org/apache/commons/math3/stat/regression/SimpleRegression
@3.0
+#<init>()V
+#<init>(Z)V
+#addData(DD)V
+#removeData(DD)V
+#addData([[D)V
+#addObservation([DD)V
+#addObservations([[D[D)V
+#removeData([[D)V
+#clear()V
+#getN()J
+#predict(D)D
+#getIntercept()D
+#hasIntercept()Z
+#getSlope()D
+#getSumSquaredErrors()D
+#getTotalSumSquares()D
+#getXSumSquares()D
+#getSumOfCrossProducts()D
+#getRegressionSumSquares()D
+#getMeanSquareError()D
+#getR()D
+#getRSquare()D
+#getInterceptStdErr()D
+#getSlopeStdErr()D
+#getSlopeConfidenceInterval()D
+#getSlopeConfidenceInterval(D)D
+#getSignificance()D
+#regress()Lorg/apache/commons/math3/stat/regression/RegressionResults;
+#regress([I)Lorg/apache/commons/math3/stat/regression/RegressionResults;
@3.3
+#append(Lorg/apache/commons/math3/stat/regression/SimpleRegression;)V

+###org/apache/commons/math3/stat/regression/MultipleLinearRegression
@3.0
+#estimateRegressionParameters()[D
+#estimateRegressionParametersVariance()[[D
+#estimateResiduals()[D
+#estimateRegressandVariance()D
+#estimateRegressionParametersStandardErrors()[D

+###org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression
@3.0
+#<init>()V
+#isNoIntercept()Z
+#setNoIntercept(Z)V
+#newSampleData([DII)V
+#estimateRegressionParameters()[D
+#estimateResiduals()[D
+#estimateRegressionParametersVariance()[[D
+#estimateRegressionParametersStandardErrors()[D
+#estimateRegressandVariance()D
+#estimateErrorVariance()D
+#estimateRegressionStandardError()D

+###org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression
@3.0
+#<init>()V
+#newSampleData([D[[D)V
+#newSampleData([DII)V
+#calculateHat()Lorg/apache/commons/math3/linear/RealMatrix;
+#calculateTotalSumOfSquares()D
+#calculateResidualSumOfSquares()D
+#calculateRSquared()D
+#calculateAdjustedRSquared()D
@3.3
+#<init>(D)V

+###org/apache/commons/math3/stat/regression/ModelSpecificationException
@3.0
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V

+###org/apache/commons/math3/random/StableRandomGenerator
@3.0
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
+#nextNormalizedDouble()D

+###org/apache/commons/math3/random/Well512a
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([I)V
+#<init>(J)V

+###org/apache/commons/math3/random/Well19937a
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([I)V
+#<init>(J)V

+###org/apache/commons/math3/random/MersenneTwister
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([I)V
+#<init>(J)V
+#setSeed(I)V
+#setSeed([I)V
+#setSeed(J)V

+###org/apache/commons/math3/random/SynchronizedRandomGenerator
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#setSeed(I)V
+#setSeed([I)V
+#setSeed(J)V
+#nextBytes([B)V
+#nextInt()I
+#nextInt(I)I
+#nextLong()J
+#nextBoolean()Z
+#nextFloat()F
+#nextDouble()D
+#nextGaussian()D

+###org/apache/commons/math3/random/UniformRandomGenerator
@3.0
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#nextNormalizedDouble()D

+###org/apache/commons/math3/random/Well44497a
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([I)V
+#<init>(J)V

+###org/apache/commons/math3/random/UncorrelatedRandomVectorGenerator
@3.0
+#<init>([D[DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V
+#<init>(ILorg/apache/commons/math3/random/NormalizedRandomGenerator;)V
+#nextVector()[D

+###org/apache/commons/math3/random/EmpiricalDistribution
@3.0
+#<init>()V
+#<init>(I)V
+#<init>(ILorg/apache/commons/math3/random/RandomGenerator;)V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#<init>(ILorg/apache/commons/math3/random/RandomDataImpl;)V
+#<init>(Lorg/apache/commons/math3/random/RandomDataImpl;)V
+#load([D)V
+#load(Ljava/net/URL;)V
+#load(Ljava/io/File;)V
+#getNextValue()D
+#getSampleStats()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
+#getBinCount()I
+#getBinStats()Ljava/util/List;
+#getUpperBounds()[D
+#getGeneratorUpperBounds()[D
+#isLoaded()Z
+#reSeed(J)V
@3.1
*#<init>(ILorg/apache/commons/math3/random/RandomDataImpl;)V[deprecated]
*#<init>(Lorg/apache/commons/math3/random/RandomDataImpl;)V[deprecated]
+#probability(D)D
+#density(D)D
+#cumulativeProbability(D)D
+#inverseCumulativeProbability(D)D
+#getNumericalMean()D
+#getNumericalVariance()D
+#getSupportLowerBound()D
+#getSupportUpperBound()D
+#isSupportLowerBoundInclusive()Z
+#isSupportUpperBoundInclusive()Z
+#isSupportConnected()Z
+#sample()D
+#reseedRandomGenerator(J)V
@3.4
-#sample()D

+###org/apache/commons/math3/random/ValueServer
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/random/RandomDataImpl;)V
+#getNext()D
+#fill([D)V
+#fill(I)[D
+#computeDistribution()V
+#computeDistribution(I)V
+#getMode()I
+#setMode(I)V
+#getValuesFileURL()Ljava/net/URL;
+#setValuesFileURL(Ljava/lang/String;)V
+#setValuesFileURL(Ljava/net/URL;)V
+#getEmpiricalDistribution()Lorg/apache/commons/math3/random/EmpiricalDistribution;
+#resetReplayFile()V
+#closeReplayFile()V
+#getMu()D
+#setMu(D)V
+#getSigma()D
+#setSigma(D)V
+#reSeed(J)V
@3.1
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
@3.3
*#<init>(Lorg/apache/commons/math3/random/RandomDataImpl;)V[deprecated]

+###org/apache/commons/math3/random/Well44497b
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([I)V
+#<init>(J)V

+###org/apache/commons/math3/random/Well1024a
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([I)V
+#<init>(J)V

+###org/apache/commons/math3/random/RandomAdaptor
@3.0
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#createAdaptor(Lorg/apache/commons/math3/random/RandomGenerator;)Ljava/util/Random;
+#nextBoolean()Z
+#nextBytes([B)V
+#nextDouble()D
+#nextFloat()F
+#nextGaussian()D
+#nextInt()I
+#nextInt(I)I
+#nextLong()J
+#setSeed(I)V
+#setSeed([I)V
+#setSeed(J)V

+###org/apache/commons/math3/random/RandomGeneratorFactory
@3.3
+#createRandomGenerator(Ljava/util/Random;)Lorg/apache/commons/math3/random/RandomGenerator;
+#convertToLong([I)J

+###org/apache/commons/math3/random/JDKRandomGenerator
@3.0
+#<init>()V
+#setSeed(I)V
+#setSeed([I)V
@3.6
+#<init>(I)V

+###org/apache/commons/math3/random/UnitSphereRandomVectorGenerator
@3.0
+#<init>(ILorg/apache/commons/math3/random/RandomGenerator;)V
+#<init>(I)V
+#nextVector()[D

+###org/apache/commons/math3/random/GaussianRandomGenerator
@3.0
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#nextNormalizedDouble()D

+###org/apache/commons/math3/random/SobolSequenceGenerator
@3.3
+#<init>(I)V
+#<init>(ILjava/io/InputStream;)V
+#nextVector()[D
+#skipTo(I)[D
+#getNextIndex()I

+###org/apache/commons/math3/random/ISAACRandom
@3.0
+#<init>()V
+#<init>(J)V
+#<init>([I)V
+#setSeed(I)V
+#setSeed(J)V
+#setSeed([I)V

+###org/apache/commons/math3/random/AbstractRandomGenerator
@3.0
+#<init>()V
+#clear()V
+#setSeed(I)V
+#setSeed([I)V
+#setSeed(J)V
+#nextBytes([B)V
+#nextInt()I
+#nextInt(I)I
+#nextLong()J
+#nextBoolean()Z
+#nextFloat()F
+#nextDouble()D
+#nextGaussian()D

+###org/apache/commons/math3/random/NormalizedRandomGenerator
@3.0
+#nextNormalizedDouble()D

+###org/apache/commons/math3/random/CorrelatedRandomVectorGenerator
@3.0
+#<init>([DLorg/apache/commons/math3/linear/RealMatrix;DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V
+#getGenerator()Lorg/apache/commons/math3/random/NormalizedRandomGenerator;
+#getRank()I
+#getRootMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#nextVector()[D

+###org/apache/commons/math3/random/HaltonSequenceGenerator
@3.3
+#<init>(I)V
+#<init>(I[I[I)V
+#nextVector()[D
+#skipTo(I)[D
+#getNextIndex()I

+###org/apache/commons/math3/random/RandomDataGenerator
@3.1
+#<init>()V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#nextHexString(I)Ljava/lang/String;
+#nextInt(II)I
+#nextLong(JJ)J
+#nextSecureHexString(I)Ljava/lang/String;
+#nextSecureInt(II)I
+#nextSecureLong(JJ)J
+#nextPoisson(D)J
+#nextGaussian(DD)D
+#nextExponential(D)D
+#nextGamma(DD)D
+#nextHypergeometric(III)I
+#nextPascal(ID)I
+#nextT(D)D
+#nextWeibull(DD)D
+#nextZipf(ID)I
+#nextBeta(DD)D
+#nextBinomial(ID)I
+#nextCauchy(DD)D
+#nextChiSquare(D)D
+#nextF(DD)D
+#nextUniform(DD)D
+#nextUniform(DDZ)D
+#nextPermutation(II)[I
+#nextSample(Ljava/util/Collection;I)[Ljava/lang/Object;
+#reSeed(J)V
+#reSeedSecure()V
+#reSeedSecure(J)V
+#reSeed()V
+#setSecureAlgorithm(Ljava/lang/String;Ljava/lang/String;)V
@3.2
+#getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;

+###org/apache/commons/math3/random/RandomData
@3.0
+#nextHexString(I)Ljava/lang/String;
+#nextInt(II)I
+#nextLong(JJ)J
+#nextSecureHexString(I)Ljava/lang/String;
+#nextSecureInt(II)I
+#nextSecureLong(JJ)J
+#nextPoisson(D)J
+#nextGaussian(DD)D
+#nextExponential(D)D
+#nextUniform(DD)D
+#nextUniform(DDZ)D
+#nextPermutation(II)[I
+#nextSample(Ljava/util/Collection;I)[Ljava/lang/Object;

+###org/apache/commons/math3/random/RandomDataImpl
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#nextHexString(I)Ljava/lang/String;
+#nextInt(II)I
+#nextLong(JJ)J
+#nextSecureHexString(I)Ljava/lang/String;
+#nextSecureInt(II)I
+#nextSecureLong(JJ)J
+#nextPoisson(D)J
+#nextGaussian(DD)D
+#nextExponential(D)D
+#nextUniform(DD)D
+#nextUniform(DDZ)D
+#nextBeta(DD)D
+#nextBinomial(ID)I
+#nextCauchy(DD)D
+#nextChiSquare(D)D
+#nextF(DD)D
+#nextGamma(DD)D
+#nextHypergeometric(III)I
+#nextPascal(ID)I
+#nextT(D)D
+#nextWeibull(DD)D
+#nextZipf(ID)I
+#reSeed(J)V
+#reSeedSecure()V
+#reSeedSecure(J)V
+#reSeed()V
+#setSecureAlgorithm(Ljava/lang/String;Ljava/lang/String;)V
+#nextPermutation(II)[I
+#nextSample(Ljava/util/Collection;I)[Ljava/lang/Object;
+#nextInversionDeviate(Lorg/apache/commons/math3/distribution/RealDistribution;)D
+#nextInversionDeviate(Lorg/apache/commons/math3/distribution/IntegerDistribution;)I
@3.3
*#nextInversionDeviate(Lorg/apache/commons/math3/distribution/RealDistribution;)D[deprecated]
*#nextInversionDeviate(Lorg/apache/commons/math3/distribution/IntegerDistribution;)I[deprecated]

+###org/apache/commons/math3/random/BitsStreamGenerator
@3.0
+#<init>()V
+#setSeed(I)V
+#setSeed([I)V
+#setSeed(J)V
+#nextBoolean()Z
+#nextBytes([B)V
+#nextDouble()D
+#nextFloat()F
+#nextGaussian()D
+#nextInt()I
+#nextInt(I)I
+#nextLong()J
+#clear()V
@3.2
+#nextLong(J)J
@3.6
+#nextBytes([BII)V

+###org/apache/commons/math3/random/AbstractWell
@3.0
+#setSeed(I)V
+#setSeed([I)V
+#setSeed(J)V

+###org/apache/commons/math3/random/Well19937c
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([I)V
+#<init>(J)V

+###org/apache/commons/math3/random/RandomVectorGenerator
@3.0
+#nextVector()[D

+###org/apache/commons/math3/random/RandomGenerator
@3.0
+#setSeed(I)V
+#setSeed([I)V
+#setSeed(J)V
+#nextBytes([B)V
+#nextInt()I
+#nextInt(I)I
+#nextLong()J
+#nextBoolean()Z
+#nextFloat()F
+#nextDouble()D
+#nextGaussian()D

+###org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer
@3.3
+#<init>(ID)V
+#<init>(IDILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#<init>(IDILorg/apache/commons/math3/ml/distance/DistanceMeasure;DLorg/apache/commons/math3/random/RandomGenerator;)V
+#getK()I
+#getFuzziness()D
+#getMaxIterations()I
+#getEpsilon()D
+#getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;
+#getMembershipMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getDataPoints()Ljava/util/List;
+#getClusters()Ljava/util/List;
+#getObjectiveFunctionValue()D
+#cluster(Ljava/util/Collection;)Ljava/util/List;

+###org/apache/commons/math3/ml/clustering/DoublePoint
@3.2
+#<init>([D)V
+#<init>([I)V
+#getPoint()[D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/commons/math3/ml/clustering/MultiKMeansPlusPlusClusterer
@3.2
+#<init>(Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer;I)V
+#getClusterer()Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer;
+#getNumTrials()I
+#cluster(Ljava/util/Collection;)Ljava/util/List;
@3.3
+#<init>(Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer;ILorg/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator;)V
+#getClusterEvaluator()Lorg/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator;

+###org/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator
@3.3
+#<init>()V
+#<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#score(Ljava/util/List;)D
+#isBetterScore(DD)Z

+###org/apache/commons/math3/ml/clustering/evaluation/SumOfClusterVariances
@3.3
+#<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#score(Ljava/util/List;)D

+###org/apache/commons/math3/ml/clustering/CentroidCluster
@3.2
+#<init>(Lorg/apache/commons/math3/ml/clustering/Clusterable;)V
+#getCenter()Lorg/apache/commons/math3/ml/clustering/Clusterable;

+###org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer
@3.2
+#<init>(I)V
+#<init>(II)V
+#<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/random/RandomGenerator;)V
+#<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/random/RandomGenerator;Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;)V
+#getK()I
+#getMaxIterations()I
+#getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;
+#getEmptyClusterStrategy()Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;
+#cluster(Ljava/util/Collection;)Ljava/util/List;

+###org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy
@3.2
+#values()[Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;

+###org/apache/commons/math3/ml/clustering/Cluster
@3.2
+#<init>()V
+#addPoint(Lorg/apache/commons/math3/ml/clustering/Clusterable;)V
+#getPoints()Ljava/util/List;

+###org/apache/commons/math3/ml/clustering/Clusterable
@3.2
+#getPoint()[D

+###org/apache/commons/math3/ml/clustering/Clusterer
@3.2
+#cluster(Ljava/util/Collection;)Ljava/util/List;
+#getDistanceMeasure()Lorg/apache/commons/math3/ml/distance/DistanceMeasure;

+###org/apache/commons/math3/ml/clustering/DBSCANClusterer
@3.2
+#<init>(DI)V
+#<init>(DILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#getEps()D
+#getMinPts()I
+#cluster(Ljava/util/Collection;)Ljava/util/List;

+###org/apache/commons/math3/ml/distance/ChebyshevDistance
@3.2
+#<init>()V
+#compute([D[D)D

+###org/apache/commons/math3/ml/distance/EarthMoversDistance
@3.3
+#<init>()V
+#compute([D[D)D

+###org/apache/commons/math3/ml/distance/CanberraDistance
@3.2
+#<init>()V
+#compute([D[D)D

+###org/apache/commons/math3/ml/distance/ManhattanDistance
@3.2
+#<init>()V
+#compute([D[D)D

+###org/apache/commons/math3/ml/distance/DistanceMeasure
@3.2
+#compute([D[D)D

+###org/apache/commons/math3/ml/distance/EuclideanDistance
@3.2
+#<init>()V
+#compute([D[D)D

+###org/apache/commons/math3/ml/neuralnet/FeatureInitializerFactory
@3.3
+#uniform(Lorg/apache/commons/math3/random/RandomGenerator;DD)Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;
+#uniform(DD)Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;
+#function(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;
+#randomize(Lorg/apache/commons/math3/distribution/RealDistribution;Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;)Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;

+###org/apache/commons/math3/ml/neuralnet/oned/NeuronString
@3.3
+#<init>(IZ[Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;)V
+#getNetwork()Lorg/apache/commons/math3/ml/neuralnet/Network;
+#getSize()I
+#getFeatures(I)[D

+###org/apache/commons/math3/ml/neuralnet/MapUtils
@3.3
+#findBest([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
+#findBestAndSecondBest([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)Lorg/apache/commons/math3/util/Pair;
+#computeU(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)[[D
+#computeHitHistogram(Ljava/lang/Iterable;Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)[[I
+#computeQuantizationError(Ljava/lang/Iterable;Ljava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)D
+#computeTopographicError(Ljava/lang/Iterable;Lorg/apache/commons/math3/ml/neuralnet/Network;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)D
@3.6
+#sort([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)[Lorg/apache/commons/math3/ml/neuralnet/Neuron;

+###org/apache/commons/math3/ml/neuralnet/FeatureInitializer
@3.3
+#value()D

+###org/apache/commons/math3/ml/neuralnet/SquareNeighbourhood
@3.3
+#values()[Lorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;

+###org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D
@3.3
+#<init>(IZIZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;[Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;)V
+#getNetwork()Lorg/apache/commons/math3/ml/neuralnet/Network;
+#getNumberOfRows()I
+#getNumberOfColumns()I
+#getNeuron(II)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
@3.6
+#copy()Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;
+#iterator()Ljava/util/Iterator;
+#getNeuron(IILorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;)Lorg/apache/commons/math3/ml/neuralnet/Neuron;

+###org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction
@3.3
+#<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;)V
+#update(Lorg/apache/commons/math3/ml/neuralnet/Network;[D)V
+#getNumberOfCalls()J

+###org/apache/commons/math3/ml/neuralnet/sofm/KohonenTrainingTask
@3.3
+#<init>(Lorg/apache/commons/math3/ml/neuralnet/Network;Ljava/util/Iterator;Lorg/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction;)V
+#run()V

+###org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunctionFactory
@3.3
+#exponentialDecay(DDJ)Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;
+#quasiSigmoidDecay(DDJ)Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;

+###org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunctionFactory
@3.3
+#exponentialDecay(DDJ)Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;
+#quasiSigmoidDecay(DDJ)Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;

+###org/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction
@3.3
+#value(J)D

+###org/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction
@3.3
+#value(J)I

+###org/apache/commons/math3/ml/neuralnet/sofm/util/ExponentialDecayFunction
@3.3
+#<init>(DDJ)V
+#value(J)D

+###org/apache/commons/math3/ml/neuralnet/sofm/util/QuasiSigmoidDecayFunction
@3.3
+#<init>(DDJ)V
+#value(J)D

+###org/apache/commons/math3/ml/neuralnet/Neuron
@3.3
+#getIdentifier()J
+#getSize()I
+#getFeatures()[D
+#compareAndSetFeatures([D[D)Z
@3.6
+#copy()Lorg/apache/commons/math3/ml/neuralnet/Neuron;
+#getNumberOfAttemptedUpdates()J
+#getNumberOfSuccessfulUpdates()J

+###org/apache/commons/math3/ml/neuralnet/Network
@3.3
+#<init>(JI)V
+#iterator()Ljava/util/Iterator;
+#getNeurons(Ljava/util/Comparator;)Ljava/util/Collection;
+#createNeuron([D)J
+#deleteNeuron(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V
+#getFeaturesSize()I
+#addLink(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V
+#deleteLink(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V
+#getNeuron(J)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
+#getNeighbours(Ljava/lang/Iterable;)Ljava/util/Collection;
+#getNeighbours(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;
+#getNeighbours(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)Ljava/util/Collection;
+#getNeighbours(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Ljava/lang/Iterable;)Ljava/util/Collection;
@3.6
+#copy()Lorg/apache/commons/math3/ml/neuralnet/Network;

+###org/apache/commons/math3/ml/neuralnet/Network$NeuronIdentifierComparator
@3.3
+#<init>()V
+#compare(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/commons/math3/ml/neuralnet/UpdateAction
@3.3
+#update(Lorg/apache/commons/math3/ml/neuralnet/Network;[D)V

+###org/apache/commons/math3/optimization/SimpleBounds
@3.1
+#<init>([D[D)V
+#getLower()[D
+#getUpper()[D

+###org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V

+###org/apache/commons/math3/optimization/InitialGuess
@3.1
+#<init>([D)V
+#getInitialGuess()[D

+###org/apache/commons/math3/optimization/SimpleVectorValueChecker
@3.0
+#<init>()V
+#<init>(DD)V
+#converged(ILorg/apache/commons/math3/optimization/PointVectorValuePair;Lorg/apache/commons/math3/optimization/PointVectorValuePair;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z
@3.1
*#<init>()V[deprecated]
+#<init>(DDI)V

+###org/apache/commons/math3/optimization/Weight
@3.1
+#<init>([D)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#getWeight()Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/optimization/LeastSquaresConverter
@3.0
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D)V
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D)V
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[DLorg/apache/commons/math3/linear/RealMatrix;)V
+#value([D)D

+###org/apache/commons/math3/optimization/MultivariateMultiStartOptimizer
@3.0
+#<init>(Lorg/apache/commons/math3/optimization/MultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V

+###org/apache/commons/math3/optimization/SimpleValueChecker
@3.0
+#<init>()V
+#<init>(DD)V
+#converged(ILorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z
@3.1
*#<init>()V[deprecated]
+#<init>(DDI)V

+###org/apache/commons/math3/optimization/DifferentiableMultivariateMultiStartOptimizer
@3.0
+#<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V

+###org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V

+###org/apache/commons/math3/optimization/DifferentiableMultivariateVectorMultiStartOptimizer
@3.0
+#<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V

+###org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer
@3.0
+#getOptima()[Lorg/apache/commons/math3/optimization/PointVectorValuePair;
+#getMaxEvaluations()I
+#getEvaluations()I
+#getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;

+###org/apache/commons/math3/optimization/SimplePointChecker
@3.0
+#<init>()V
+#<init>(DD)V
+#converged(ILorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z
@3.1
*#<init>()V[deprecated]
+#<init>(DDI)V

+###org/apache/commons/math3/optimization/MultivariateOptimizer
@3.0

+###org/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer
@3.1

+###org/apache/commons/math3/optimization/fitting/GaussianFitter
@3.0
+#<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
+#fit([D)[D
+#fit()[D

+###org/apache/commons/math3/optimization/fitting/GaussianFitter$ParameterGuesser
@3.0
+#<init>([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V
+#guess()[D

+###org/apache/commons/math3/optimization/fitting/PolynomialFitter
@3.0
+#<init>(ILorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
+#fit()[D
@3.1
*#<init>(ILorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V[deprecated]
+#<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
*#fit()[D[deprecated]
+#fit(I[D)[D
+#fit([D)[D

+###org/apache/commons/math3/optimization/fitting/WeightedObservedPoint
@3.0
+#<init>(DDD)V
+#getWeight()D
+#getX()D
+#getY()D

+###org/apache/commons/math3/optimization/fitting/CurveFitter
@3.0
+#<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
+#addObservedPoint(DD)V
+#addObservedPoint(DDD)V
+#addObservedPoint(Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V
+#getObservations()[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;
+#clearObservations()V
+#fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
+#fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
@3.1
+#<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V
@3.3
*#<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V[deprecated]

+###org/apache/commons/math3/optimization/fitting/HarmonicFitter
@3.0
+#<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
+#fit([D)[D
+#fit()[D

+###org/apache/commons/math3/optimization/fitting/HarmonicFitter$ParameterGuesser
@3.0
+#<init>([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V
+#guess()[D

+###org/apache/commons/math3/optimization/linear/LinearOptimizer
@3.0
+#setMaxIterations(I)V
+#getMaxIterations()I
+#getIterations()I
+#optimize(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;Z)Lorg/apache/commons/math3/optimization/PointValuePair;

+###org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer
@3.0
+#setMaxIterations(I)V
+#getMaxIterations()I
+#getIterations()I
+#optimize(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;Z)Lorg/apache/commons/math3/optimization/PointValuePair;

+###org/apache/commons/math3/optimization/linear/SimplexSolver
@3.0
+#<init>()V
+#<init>(DI)V
+#doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;

+###org/apache/commons/math3/optimization/linear/UnboundedSolutionException
@3.0
+#<init>()V

+###org/apache/commons/math3/optimization/linear/Relationship
@3.0
+#values()[Lorg/apache/commons/math3/optimization/linear/Relationship;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optimization/linear/Relationship;
+#toString()Ljava/lang/String;
+#oppositeRelationship()Lorg/apache/commons/math3/optimization/linear/Relationship;

+###org/apache/commons/math3/optimization/linear/LinearConstraint
@3.0
+#<init>([DLorg/apache/commons/math3/optimization/linear/Relationship;D)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optimization/linear/Relationship;D)V
+#<init>([DDLorg/apache/commons/math3/optimization/linear/Relationship;[DD)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;DLorg/apache/commons/math3/optimization/linear/Relationship;Lorg/apache/commons/math3/linear/RealVector;D)V
+#getCoefficients()Lorg/apache/commons/math3/linear/RealVector;
+#getRelationship()Lorg/apache/commons/math3/optimization/linear/Relationship;
+#getValue()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException
@3.0
+#<init>()V

+###org/apache/commons/math3/optimization/linear/LinearObjectiveFunction
@3.0
+#<init>([DD)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;D)V
+#getCoefficients()Lorg/apache/commons/math3/linear/RealVector;
+#getConstantTerm()D
+#getValue([D)D
+#getValue(Lorg/apache/commons/math3/linear/RealVector;)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer
@3.0
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D[D[D)Lorg/apache/commons/math3/optimization/PointValuePair;

+###org/apache/commons/math3/optimization/AbstractConvergenceChecker
@3.0
+#<init>()V
+#<init>(DD)V
+#getRelativeThreshold()D
+#getAbsoluteThreshold()D
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z
@3.1
*#<init>()V[deprecated]

+###org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer
@3.0
+#<init>(Lorg/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer;ILorg/apache/commons/math3/random/RandomGenerator;)V
+#getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
+#getMaxEvaluations()I
+#getEvaluations()I
+#getOptima()[Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
+#optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
+#optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;

+###org/apache/commons/math3/optimization/univariate/UnivariateOptimizer
@3.0

+###org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer
@3.0
+#getMaxEvaluations()I
+#getEvaluations()I
+#getGoalType()Lorg/apache/commons/math3/optimization/GoalType;
+#getMin()D
+#getMax()D
+#getStartValue()D
+#optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
+#optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
+#getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;

+###org/apache/commons/math3/optimization/univariate/BrentOptimizer
@3.0
+#<init>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#<init>(DD)V

+###org/apache/commons/math3/optimization/univariate/BracketFinder
@3.0
+#<init>()V
+#<init>(DI)V
+#search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)V
+#getMaxEvaluations()I
+#getEvaluations()I
+#getLo()D
+#getFLo()D
+#getHi()D
+#getFHi()D
+#getMid()D
+#getFMid()D

+###org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer
@3.0
+#optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
+#optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;

+###org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair
@3.0
+#<init>(DD)V
+#getPoint()D
+#getValue()D

+###org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker
@3.1
+#<init>()V[deprecated]
+#<init>(DD)V
+#<init>(DDI)V
+#converged(ILorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer
@3.0

+###org/apache/commons/math3/optimization/PointVectorValuePair
@3.0
+#<init>([D[D)V
+#<init>([D[DZ)V
+#getPoint()[D
+#getPointRef()[D
+#getValue()[D
+#getValueRef()[D
+#getValue()Ljava/lang/Object;

+###org/apache/commons/math3/optimization/BaseMultivariateVectorOptimizer
@3.0
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
@3.1
*#optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;[deprecated]

+###org/apache/commons/math3/optimization/MultivariateDifferentiableOptimizer
@3.1

+###org/apache/commons/math3/optimization/Target
@3.1
+#<init>([D)V
+#getTarget()[D

+###org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer
@3.0
+#getOptima()[Lorg/apache/commons/math3/optimization/PointValuePair;
+#getMaxEvaluations()I
+#getEvaluations()I
+#getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;

+###org/apache/commons/math3/optimization/OptimizationData
@3.1

+###org/apache/commons/math3/optimization/DifferentiableMultivariateOptimizer
@3.0

+###org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex
@3.0
+#<init>(I)V
+#<init>(ID)V
+#<init>(IDD)V
+#<init>(IDDD)V
+#<init>([D)V
+#<init>([DDD)V
+#<init>([[D)V
+#<init>([[DDD)V
+#iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V

+###org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter
@3.0
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[D)V
+#unboundedToBounded([D)[D
+#boundedToUnbounded([D)[D
+#value([D)D

+###org/apache/commons/math3/optimization/direct/BOBYQAOptimizer
@3.0
+#<init>(I)V
+#<init>(IDD)V

+###org/apache/commons/math3/optimization/direct/NelderMeadSimplex
@3.0
+#<init>(I)V
+#<init>(ID)V
+#<init>(IDDDDD)V
+#<init>(IDDDD)V
+#<init>([D)V
+#<init>([DDDDD)V
+#<init>([[D)V
+#<init>([[DDDDD)V
+#iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V

+###org/apache/commons/math3/optimization/direct/SimplexOptimizer
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#<init>(DD)V
+#setSimplex(Lorg/apache/commons/math3/optimization/direct/AbstractSimplex;)V
@3.1
*#<init>()V[deprecated]
*#setSimplex(Lorg/apache/commons/math3/optimization/direct/AbstractSimplex;)V[deprecated]

+###org/apache/commons/math3/optimization/direct/PowellOptimizer
@3.0
+#<init>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#<init>(DD)V
@3.1
+#<init>(DDDDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#<init>(DDDD)V

+###org/apache/commons/math3/optimization/direct/CMAESOptimizer
@3.0
+#<init>()V
+#<init>(I)V
+#<init>(I[D)V
+#<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;Z)V
+#<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#getStatisticsSigmaHistory()Ljava/util/List;
+#getStatisticsMeanHistory()Ljava/util/List;
+#getStatisticsFitnessHistory()Ljava/util/List;
+#getStatisticsDHistory()Ljava/util/List;
@3.1
*#<init>(I[D)V[deprecated]
*#<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;Z)V[deprecated]
*#<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V[deprecated]
+#<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
@3.3
*#<init>()V[deprecated]
*#<init>(I)V[deprecated]

+###org/apache/commons/math3/optimization/direct/CMAESOptimizer$PopulationSize
@3.1
+#<init>(I)V
+#getPopulationSize()I

+###org/apache/commons/math3/optimization/direct/CMAESOptimizer$Sigma
@3.1
+#<init>([D)V
+#getSigma()[D

+###org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter
@3.0
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[DD[D)V
+#value([D)D

+###org/apache/commons/math3/optimization/direct/AbstractSimplex
@3.0
+#getDimension()I
+#getSize()I
+#iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
+#build([D)V
+#evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
+#getPoints()[Lorg/apache/commons/math3/optimization/PointValuePair;
+#getPoint(I)Lorg/apache/commons/math3/optimization/PointValuePair;

+###org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer
@3.0
+#getLowerBound()[D
+#getUpperBound()[D
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D[D[D)Lorg/apache/commons/math3/optimization/PointValuePair;
@3.2
-#getLowerBound()[D
-#getUpperBound()[D

+###org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer
@3.0
+#getMaxEvaluations()I
+#getEvaluations()I
+#getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
+#getStartPoint()[D
@3.1
*#optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;[deprecated]
+#getWeight()Lorg/apache/commons/math3/linear/RealMatrix;
+#getTarget()[D

+###org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer
@3.0
+#getMaxEvaluations()I
+#getEvaluations()I
+#getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;
+#getGoalType()Lorg/apache/commons/math3/optimization/GoalType;
+#getStartPoint()[D
@3.1
*#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;[deprecated]
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;
+#getLowerBound()[D
+#getUpperBound()[D

+###org/apache/commons/math3/optimization/general/GaussNewtonOptimizer
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#<init>(Z)V
+#<init>(ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair;
@3.1
*#<init>()V[deprecated]
*#<init>(Z)V[deprecated]

+###org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer
@3.1

+###org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer
@3.0
+#getJacobianEvaluations()I
+#getRMS()D
+#getChiSquare()D
+#getCovariances()[[D
+#getCovariances(D)[[D
+#guessParametersErrors()[D
+#optimize(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
@3.1
+#getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;
*#getCovariances()[[D[deprecated]
*#getCovariances(D)[[D[deprecated]
+#computeCovariances([DD)[[D
*#guessParametersErrors()[D[deprecated]
+#computeSigma([DD)[D
*#optimize(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;[deprecated]
+#optimize(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;[deprecated]
@3.6
*#optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;[deprecated]

+###org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#<init>(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V
+#<init>(DDD)V
+#<init>(DDDDD)V

+###org/apache/commons/math3/optimization/general/Preconditioner
@3.0
+#precondition([D[D)[D

+###org/apache/commons/math3/optimization/general/ConjugateGradientFormula
@3.0
+#values()[Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;

+###org/apache/commons/math3/optimization/general/AbstractScalarDifferentiableOptimizer
@3.0
+#optimize(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;
@3.1
+#optimize(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;
-#optimize(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;
-#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;

+###org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer
@3.0
+#<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;)V
+#<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
+#<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
+#<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optimization/general/Preconditioner;)V
+#setInitialStep(D)V
@3.1
*#<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;)V[deprecated]

+###org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer$IdentityPreconditioner
@3.0
+#<init>()V
+#precondition([D[D)[D

+###org/apache/commons/math3/optimization/ConvergenceChecker
@3.0
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/optimization/GoalType
@3.0
+#values()[Lorg/apache/commons/math3/optimization/GoalType;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optimization/GoalType;

+###org/apache/commons/math3/optimization/PointValuePair
@3.0
+#<init>([DD)V
+#<init>([DDZ)V
+#getPoint()[D
+#getPointRef()[D

+###org/apache/commons/math3/optimization/BaseOptimizer
@3.0
+#getMaxEvaluations()I
+#getEvaluations()I
+#getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;

+###org/apache/commons/math3/optimization/BaseMultivariateOptimizer
@3.0
+#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;
@3.1
*#optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;[deprecated]

+###org/apache/commons/math3/ode/JacobianMatrices
@3.0
+#<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;[D[Ljava/lang/String;)V
+#<init>(Lorg/apache/commons/math3/ode/MainStateJacobianProvider;[Ljava/lang/String;)V
+#registerVariationalEquations(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V
+#addParameterJacobianProvider(Lorg/apache/commons/math3/ode/ParameterJacobianProvider;)V
+#setParameterizedODE(Lorg/apache/commons/math3/ode/ParameterizedODE;)V
+#setParameterStep(Ljava/lang/String;D)V
+#setInitialMainStateJacobian([[D)V
+#setInitialParameterJacobian(Ljava/lang/String;[D)V
+#getCurrentMainSetJacobian([[D)V
+#getCurrentParameterJacobian(Ljava/lang/String;[D)V

+###org/apache/commons/math3/ode/JacobianMatrices$MismatchedEquations
@3.1
+#<init>()V

+###org/apache/commons/math3/ode/FirstOrderConverter
@3.0
+#<init>(Lorg/apache/commons/math3/ode/SecondOrderDifferentialEquations;)V
+#getDimension()I
+#computeDerivatives(D[D[D)V

+###org/apache/commons/math3/ode/ParameterJacobianProvider
@3.0
+#computeParameterJacobian(D[D[DLjava/lang/String;[D)V

+###org/apache/commons/math3/ode/SecondOrderDifferentialEquations
@3.0
+#getDimension()I
+#computeSecondDerivatives(D[D[D[D)V

+###org/apache/commons/math3/ode/SecondOrderIntegrator
@3.0
+#integrate(Lorg/apache/commons/math3/ode/SecondOrderDifferentialEquations;D[D[DD[D[D)V

+###org/apache/commons/math3/ode/MainStateJacobianProvider
@3.0
+#computeMainStateJacobian(D[D[D[[D)V

+###org/apache/commons/math3/ode/ParameterizedODE
@3.0
+#getParameter(Ljava/lang/String;)D
+#setParameter(Ljava/lang/String;D)V

+###org/apache/commons/math3/ode/Parameterizable
@3.0
+#getParametersNames()Ljava/util/Collection;
+#isSupported(Ljava/lang/String;)Z

+###org/apache/commons/math3/ode/AbstractParameterizable
@3.0
+#getParametersNames()Ljava/util/Collection;
+#isSupported(Ljava/lang/String;)Z
+#complainIfNotSupported(Ljava/lang/String;)V

+###org/apache/commons/math3/ode/UnknownParameterException
@3.1
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/commons/math3/ode/MultistepIntegrator
@3.0
+#getStarterIntegrator()Lorg/apache/commons/math3/ode/ODEIntegrator;
+#setStarterIntegrator(Lorg/apache/commons/math3/ode/FirstOrderIntegrator;)V
+#getMinReduction()D
+#setMinReduction(D)V
+#getMaxGrowth()D
+#setMaxGrowth(D)V
+#getSafety()D
+#setSafety(D)V
@3.6
+#getNSteps()I

+###org/apache/commons/math3/ode/MultistepIntegrator$NordsieckTransformer
@3.0
+#initializeHighOrderDerivatives(D[D[[D[[D)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;

+###org/apache/commons/math3/ode/SecondaryEquations
@3.0
+#getDimension()I
+#computeDerivatives(D[D[D[D[D)V

+###org/apache/commons/math3/ode/FirstOrderDifferentialEquations
@3.0
+#getDimension()I
+#computeDerivatives(D[D[D)V

+###org/apache/commons/math3/ode/ExpandableStatefulODE
@3.0
+#<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;)V
+#getPrimary()Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;
+#getTotalDimension()I
+#computeDerivatives(D[D[D)V
+#addSecondaryEquations(Lorg/apache/commons/math3/ode/SecondaryEquations;)I
+#getPrimaryMapper()Lorg/apache/commons/math3/ode/EquationsMapper;
+#getSecondaryMappers()[Lorg/apache/commons/math3/ode/EquationsMapper;
+#setTime(D)V
+#getTime()D
+#setPrimaryState([D)V
+#getPrimaryState()[D
+#getPrimaryStateDot()[D
+#setSecondaryState(I[D)V
+#getSecondaryState(I)[D
+#getSecondaryStateDot(I)[D
+#setCompleteState([D)V
+#getCompleteState()[D

+###org/apache/commons/math3/ode/EquationsMapper
@3.0
+#<init>(II)V
+#getFirstIndex()I
+#getDimension()I
+#extractEquationData([D[D)V
+#insertEquationData([D[D)V

+###org/apache/commons/math3/ode/FirstOrderIntegrator
@3.0
+#integrate(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;D[DD[D)D

+###org/apache/commons/math3/ode/AbstractIntegrator
@3.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#addStepHandler(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V
+#getStepHandlers()Ljava/util/Collection;
+#clearStepHandlers()V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDI)V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
+#getEventHandlers()Ljava/util/Collection;
+#clearEventHandlers()V
+#getCurrentStepStart()D
+#getCurrentSignedStepsize()D
+#setMaxEvaluations(I)V
+#getMaxEvaluations()I
+#getEvaluations()I
+#integrate(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;D[DD[D)D
+#integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
+#computeDerivatives(D[D[D)V

+###org/apache/commons/math3/ode/nonstiff/DormandPrince54Integrator
@3.0
+#<init>(DDDD)V
+#<init>(DD[D[D)V
+#getOrder()I

+###org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator
@3.0
+#<init>(DDDD)V
+#<init>(DD[D[D)V
+#setStabilityCheck(ZIID)V
+#setControlFactors(DDDD)V
+#setOrderControl(IDD)V
+#addStepHandler(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
+#setInterpolationControl(ZI)V
+#integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V

+###org/apache/commons/math3/ode/nonstiff/DormandPrince853Integrator
@3.0
+#<init>(DDDD)V
+#<init>(DD[D[D)V
+#getOrder()I

+###org/apache/commons/math3/ode/nonstiff/GillIntegrator
@3.0
+#<init>(D)V

+###org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator
@3.0
+#getOrder()I
+#getSafety()D
+#setSafety(D)V
+#integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
+#getMinReduction()D
+#setMinReduction(D)V
+#getMaxGrowth()D
+#setMaxGrowth(D)V

+###org/apache/commons/math3/ode/nonstiff/HighamHall54Integrator
@3.0
+#<init>(DDDD)V
+#<init>(DD[D[D)V
+#getOrder()I

+###org/apache/commons/math3/ode/nonstiff/LutherIntegrator
@3.3
+#<init>(D)V

+###org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator
@3.0
+#<init>(IDDDD)V
+#<init>(IDD[D[D)V
+#integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V

+###org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegrator
@3.0
+#<init>(D)V

+###org/apache/commons/math3/ode/nonstiff/EulerIntegrator
@3.0
+#<init>(D)V

+###org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegrator
@3.0
+#<init>(D)V

+###org/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer
@3.0
+#getInstance(I)Lorg/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer;
+#getNSteps()I
+#initializeHighOrderDerivatives(D[D[[D[[D)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
+#updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
+#updateHighOrderDerivativesPhase2([D[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V
@3.6
*#getNSteps()I[deprecated]

+###org/apache/commons/math3/ode/nonstiff/AdamsIntegrator
@3.0
+#<init>(Ljava/lang/String;IIDDDD)V
+#<init>(Ljava/lang/String;IIDD[D[D)V
+#integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
+#updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
+#updateHighOrderDerivativesPhase2([D[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V

+###org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator
@3.0
+#<init>(IDDDD)V
+#<init>(IDD[D[D)V
+#integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V

+###org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator
@3.0
+#<init>(Ljava/lang/String;DDDD)V
+#<init>(Ljava/lang/String;DD[D[D)V
+#setStepSizeControl(DDDD)V
+#setStepSizeControl(DD[D[D)V
+#setInitialStepSize(D)V
+#initializeStep(ZI[DD[D[D[D[D)D
+#integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
+#getCurrentStepStart()D
+#getMinStep()D
+#getMaxStep()D

+###org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator
@3.0
+#integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
@3.3
+#singleStep(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;D[DD)[D

+###org/apache/commons/math3/ode/nonstiff/MidpointIntegrator
@3.0
+#<init>(D)V

+###org/apache/commons/math3/ode/events/FilterType
@3.2
+#values()[Lorg/apache/commons/math3/ode/events/FilterType;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/events/FilterType;

+###org/apache/commons/math3/ode/events/EventFilter
@3.2
+#<init>(Lorg/apache/commons/math3/ode/events/EventHandler;Lorg/apache/commons/math3/ode/events/FilterType;)V
+#init(D[DD)V
+#g(D[D)D
+#eventOccurred(D[DZ)Lorg/apache/commons/math3/ode/events/EventHandler$Action;
+#resetState(D[D)V

+###org/apache/commons/math3/ode/events/EventState
@3.0
+#<init>(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
+#getEventHandler()Lorg/apache/commons/math3/ode/events/EventHandler;
+#getMaxCheckInterval()D
+#getConvergence()D
+#getMaxIterationCount()I
+#reinitializeBegin(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)V
+#evaluateStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)Z
+#getEventTime()D
+#stepAccepted(D[D)V
+#stop()Z
+#reset(D[D)Z
@3.3
+#setExpandable(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V

+###org/apache/commons/math3/ode/events/EventHandler
@3.0
+#init(D[DD)V
+#g(D[D)D
+#eventOccurred(D[DZ)Lorg/apache/commons/math3/ode/events/EventHandler$Action;
+#resetState(D[D)V

+###org/apache/commons/math3/ode/events/EventHandler$Action
@3.0
+#values()[Lorg/apache/commons/math3/ode/events/EventHandler$Action;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/events/EventHandler$Action;

+###org/apache/commons/math3/ode/ODEIntegrator
@3.0
+#getName()Ljava/lang/String;
+#addStepHandler(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V
+#getStepHandlers()Ljava/util/Collection;
+#clearStepHandlers()V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDI)V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
+#getEventHandlers()Ljava/util/Collection;
+#clearEventHandlers()V
+#getCurrentStepStart()D
+#getCurrentSignedStepsize()D
+#setMaxEvaluations(I)V
+#getMaxEvaluations()I
+#getEvaluations()I

+###org/apache/commons/math3/ode/ContinuousOutputModel
@3.0
+#<init>()V
+#append(Lorg/apache/commons/math3/ode/ContinuousOutputModel;)V
+#init(D[DD)V
+#handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V
+#getInitialTime()D
+#getFinalTime()D
+#getInterpolatedTime()D
+#setInterpolatedTime(D)V
+#getInterpolatedState()[D
@3.2
+#getInterpolatedSecondaryState(I)[D
@3.4
+#getInterpolatedDerivatives()[D
+#getInterpolatedSecondaryDerivatives(I)[D

+###org/apache/commons/math3/ode/sampling/StepNormalizer
@3.0
+#<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;)V
+#<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;)V
+#<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V
+#<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V
+#init(D[DD)V
+#handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V

+###org/apache/commons/math3/ode/sampling/FixedStepHandler
@3.0
+#init(D[DD)V
+#handleStep(D[D[DZ)V

+###org/apache/commons/math3/ode/sampling/StepNormalizerMode
@3.0
+#values()[Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;

+###org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/ode/sampling/NordsieckStepInterpolator;)V
+#reinitialize([DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
+#reinitialize(DD[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V
+#rescale(D)V
+#getInterpolatedStateVariation()[D
+#writeExternal(Ljava/io/ObjectOutput;)V
+#readExternal(Ljava/io/ObjectInput;)V

+###org/apache/commons/math3/ode/sampling/DummyStepHandler
@3.0
+#getInstance()Lorg/apache/commons/math3/ode/sampling/DummyStepHandler;
+#init(D[DD)V
+#handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V

+###org/apache/commons/math3/ode/sampling/StepNormalizerBounds
@3.0
+#values()[Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;
+#firstIncluded()Z
+#lastIncluded()Z

+###org/apache/commons/math3/ode/sampling/AbstractStepInterpolator
@3.0
+#copy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
+#shift()V
+#storeTime(D)V
+#setSoftPreviousTime(D)V
+#setSoftCurrentTime(D)V
+#getGlobalPreviousTime()D
+#getGlobalCurrentTime()D
+#getPreviousTime()D
+#getCurrentTime()D
+#getInterpolatedTime()D
+#setInterpolatedTime(D)V
+#isForward()Z
+#getInterpolatedState()[D
+#getInterpolatedDerivatives()[D
+#getInterpolatedSecondaryState(I)[D
+#getInterpolatedSecondaryDerivatives(I)[D
+#finalizeStep()V
+#writeExternal(Ljava/io/ObjectOutput;)V
+#readExternal(Ljava/io/ObjectInput;)V

+###org/apache/commons/math3/ode/sampling/StepHandler
@3.0
+#init(D[DD)V
+#handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V

+###org/apache/commons/math3/ode/sampling/StepInterpolator
@3.0
+#getPreviousTime()D
+#getCurrentTime()D
+#getInterpolatedTime()D
+#setInterpolatedTime(D)V
+#getInterpolatedState()[D
+#getInterpolatedDerivatives()[D
+#getInterpolatedSecondaryState(I)[D
+#getInterpolatedSecondaryDerivatives(I)[D
+#isForward()Z
+#copy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;

+###org/apache/commons/math3/geometry/hull/ConvexHullGenerator
@3.3
+#generate(Ljava/util/Collection;)Lorg/apache/commons/math3/geometry/hull/ConvexHull;

+###org/apache/commons/math3/geometry/hull/ConvexHull
@3.3
+#getVertices()[Lorg/apache/commons/math3/geometry/Point;
+#createRegion()Lorg/apache/commons/math3/geometry/partitioning/Region;

+###org/apache/commons/math3/geometry/spherical/oned/Arc
@3.3
+#<init>(DDD)V
+#getInf()D
+#getSup()D
+#getSize()D
+#getBarycenter()D
+#getTolerance()D
+#checkPoint(D)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;

+###org/apache/commons/math3/geometry/spherical/oned/ArcsSet
@3.3
+#<init>(D)V
+#<init>(DDD)V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
+#<init>(Ljava/util/Collection;D)V
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
+#projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
+#asList()Ljava/util/List;
+#iterator()Ljava/util/Iterator;
+#side(Lorg/apache/commons/math3/geometry/spherical/oned/Arc;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#split(Lorg/apache/commons/math3/geometry/spherical/oned/Arc;)Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet$Split;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
@3.6
*#side(Lorg/apache/commons/math3/geometry/spherical/oned/Arc;)Lorg/apache/commons/math3/geometry/partitioning/Side;[deprecated]

+###org/apache/commons/math3/geometry/spherical/oned/ArcsSet$InconsistentStateAt2PiWrapping
@3.3
+#<init>()V

+###org/apache/commons/math3/geometry/spherical/oned/ArcsSet$Split
@3.3
+#getPlus()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
+#getMinus()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
@3.6
+#getSide()Lorg/apache/commons/math3/geometry/partitioning/Side;

+###org/apache/commons/math3/geometry/spherical/oned/SubLimitAngle
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
+#getSize()D
+#isEmpty()Z
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
@3.6
-#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;

+###org/apache/commons/math3/geometry/spherical/oned/S1Point
@3.3
+#<init>(D)V
+#getAlpha()D
+#getVector()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#getSpace()Lorg/apache/commons/math3/geometry/Space;
+#isNaN()Z
+#distance(Lorg/apache/commons/math3/geometry/Point;)D
+#distance(Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/geometry/spherical/oned/LimitAngle
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;ZD)V
+#copySelf()Lorg/apache/commons/math3/geometry/spherical/oned/LimitAngle;
+#getOffset(Lorg/apache/commons/math3/geometry/Point;)D
+#isDirect()Z
+#getReverse()Lorg/apache/commons/math3/geometry/spherical/oned/LimitAngle;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/spherical/oned/SubLimitAngle;
+#wholeSpace()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
+#sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
+#getLocation()Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
+#project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#getTolerance()D
+#wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;

+###org/apache/commons/math3/geometry/spherical/oned/Sphere1D
@3.3
+#getInstance()Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D;
+#getDimension()I
+#getSubSpace()Lorg/apache/commons/math3/geometry/Space;

+###org/apache/commons/math3/geometry/spherical/oned/Sphere1D$NoSubSpaceException
@3.3
+#<init>()V

+###org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet
@3.3
+#<init>(D)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DID)V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
+#<init>(Ljava/util/Collection;D)V
+#<init>(D[Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)V
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet;
+#getBoundaryLoops()Ljava/util/List;
+#getEnclosingCap()Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;

+###org/apache/commons/math3/geometry/spherical/twod/SubCircle
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
@3.6
-#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;

+###org/apache/commons/math3/geometry/spherical/twod/S2Point
@3.3
+#<init>(DD)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#getTheta()D
+#getPhi()D
+#getVector()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getSpace()Lorg/apache/commons/math3/geometry/Space;
+#isNaN()Z
+#negate()Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
+#distance(Lorg/apache/commons/math3/geometry/Point;)D
+#distance(Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/geometry/spherical/twod/Circle
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
+#<init>(Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;D)V
+#<init>(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)V
+#copySelf()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
+#reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#revertSelf()V
+#getReverse()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
+#project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#getTolerance()D
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
+#getPhase(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
+#getPointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getXAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getYAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getPole()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getInsideArc(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/spherical/oned/Arc;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/spherical/twod/SubCircle;
+#wholeSpace()Lorg/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet;
+#getOffset(Lorg/apache/commons/math3/geometry/Point;)D
+#getOffset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
+#getTransform(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/partitioning/Transform;
+#wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;

+###org/apache/commons/math3/geometry/spherical/twod/Vertex
@3.3
+#getLocation()Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
+#getIncoming()Lorg/apache/commons/math3/geometry/spherical/twod/Edge;
+#getOutgoing()Lorg/apache/commons/math3/geometry/spherical/twod/Edge;

+###org/apache/commons/math3/geometry/spherical/twod/Edge
@3.3
+#getStart()Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;
+#getEnd()Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;
+#getLength()D
+#getCircle()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
+#getPointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;

+###org/apache/commons/math3/geometry/spherical/twod/Sphere2D
@3.3
+#getInstance()Lorg/apache/commons/math3/geometry/spherical/twod/Sphere2D;
+#getDimension()I
+#getSubSpace()Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D;
+#getSubSpace()Lorg/apache/commons/math3/geometry/Space;

+###org/apache/commons/math3/geometry/VectorFormat
@3.0
+#getAvailableLocales()[Ljava/util/Locale;
+#getPrefix()Ljava/lang/String;
+#getSuffix()Ljava/lang/String;
+#getSeparator()Ljava/lang/String;
+#getFormat()Ljava/text/NumberFormat;
+#format(Lorg/apache/commons/math3/geometry/Vector;)Ljava/lang/String;
+#format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/Vector;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/Vector;

+###org/apache/commons/math3/geometry/enclosing/EnclosingBall
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/Point;D[Lorg/apache/commons/math3/geometry/Point;)V
+#getCenter()Lorg/apache/commons/math3/geometry/Point;
+#getRadius()D
+#getSupport()[Lorg/apache/commons/math3/geometry/Point;
+#getSupportSize()I
+#contains(Lorg/apache/commons/math3/geometry/Point;)Z
+#contains(Lorg/apache/commons/math3/geometry/Point;D)Z

+###org/apache/commons/math3/geometry/enclosing/SupportBallGenerator
@3.3
+#ballOnSupport(Ljava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;

+###org/apache/commons/math3/geometry/enclosing/Encloser
@3.3
+#enclose(Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;

+###org/apache/commons/math3/geometry/enclosing/WelzlEncloser
@3.3
+#<init>(DLorg/apache/commons/math3/geometry/enclosing/SupportBallGenerator;)V
+#enclose(Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;
+#selectFarthest(Ljava/lang/Iterable;Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;)Lorg/apache/commons/math3/geometry/Point;

+###org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates
@3.2
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(DDD)V
+#getCartesian()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getR()D
+#getTheta()D
+#getPhi()D
+#toCartesianGradient([D)[D
+#toCartesianHessian([[D[D)[[D

+###org/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#getOutline(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;)[[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;

+###org/apache/commons/math3/geometry/euclidean/threed/SubPlane
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
@3.6
-#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;

+###org/apache/commons/math3/geometry/euclidean/threed/Plane
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)V
+#copySelf()Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
+#reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)V
+#getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getNormal()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getU()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getV()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#revertSelf()V
+#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getPointAt(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#isSimilarTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Z
+#rotate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
+#translate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
+#intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Line;
+#intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/threed/SubPlane;
+#wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
+#contains(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Z
+#getOffset(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)D
+#getOffset(Lorg/apache/commons/math3/geometry/Vector;)D
+#sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
+#wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
+#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V[deprecated]
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V[deprecated]
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V[deprecated]
+#project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#getTolerance()D
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getOffset(Lorg/apache/commons/math3/geometry/Point;)D
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
-#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
-#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;

+###org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
+#<init>(Ljava/util/Collection;)V
+#<init>(DDDDDD)V
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
+#firstIntersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#rotate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
+#translate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
@3.3
+#<init>(D)V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
+#<init>(Ljava/util/Collection;D)V
+#<init>(DDDDDDD)V
*#<init>()V[deprecated]
*#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V[deprecated]
*#<init>(Ljava/util/Collection;)V[deprecated]
*#<init>(DDDDDD)V[deprecated]
@3.5
+#<init>(Ljava/util/List;Ljava/util/List;D)V

+###org/apache/commons/math3/geometry/euclidean/threed/SphereGenerator
@3.3
+#<init>()V
+#ballOnSupport(Ljava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;

+###org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
+#getInstance()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat;
+#getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat;
+#format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/Vector;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/Vector;

+###org/apache/commons/math3/geometry/euclidean/threed/Segment
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V
+#getStart()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getEnd()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getLine()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;

+###org/apache/commons/math3/geometry/euclidean/threed/SubLine
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Segment;)V
+#getSegments()Ljava/util/List;
+#intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V

+###org/apache/commons/math3/geometry/euclidean/threed/Line
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V
+#reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;
+#getDirection()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getAbscissa(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#pointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#isSimilarTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Z
+#contains(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Z
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)D
+#closestPoint(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#wholeLine()Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;
+#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V[deprecated]
+#getTolerance()D
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
-#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
-#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;

+###org/apache/commons/math3/geometry/euclidean/threed/Euclidean3D
@3.0
+#getInstance()Lorg/apache/commons/math3/geometry/euclidean/threed/Euclidean3D;
+#getDimension()I
+#getSubSpace()Lorg/apache/commons/math3/geometry/euclidean/twod/Euclidean2D;
+#getSubSpace()Lorg/apache/commons/math3/geometry/Space;

+###org/apache/commons/math3/geometry/euclidean/threed/Vector3D
@3.0
+#<init>(DDD)V
+#<init>([D)V
+#<init>(DD)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#getX()D
+#getY()D
+#getZ()D
+#toArray()[D
+#getSpace()Lorg/apache/commons/math3/geometry/Space;
+#getZero()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getNorm1()D
+#getNorm()D
+#getNormSq()D
+#getNormInf()D
+#getAlpha()D
+#getDelta()D
+#add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#normalize()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#orthogonal()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#angle(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#negate()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#isNaN()Z
+#isInfinite()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D
+#crossProduct(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#distance1(Lorg/apache/commons/math3/geometry/Vector;)D
+#distance(Lorg/apache/commons/math3/geometry/Vector;)D
+#distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D
+#distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D
+#dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
+#toString()Ljava/lang/String;
+#toString(Ljava/text/NumberFormat;)Ljava/lang/String;
+#scalarMultiply(D)Lorg/apache/commons/math3/geometry/Vector;
+#normalize()Lorg/apache/commons/math3/geometry/Vector;
+#negate()Lorg/apache/commons/math3/geometry/Vector;
+#subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#getZero()Lorg/apache/commons/math3/geometry/Vector;
@3.3
+#distance(Lorg/apache/commons/math3/geometry/Point;)D

+###org/apache/commons/math3/geometry/euclidean/threed/Rotation
@3.0
+#<init>(DDDDZ)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
+#<init>([[DD)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;DDD)V
+#revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
+#getQ0()D
+#getQ1()D
+#getQ2()D
+#getQ3()D
+#getAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getAngle()D
+#getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[D
+#getMatrix()[[D
+#applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#applyTo([D[D)V
+#applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#applyInverseTo([D[D)V
+#applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
+#applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D
@3.6
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V[deprecated]
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;DDD)V[deprecated]
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V
*#getAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;[deprecated]
+#getAxis(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
*#getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[D[deprecated]
+#getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D
+#compose(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
+#composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;

+###org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException
@3.0
+#<init>(Z)V

+###org/apache/commons/math3/geometry/euclidean/threed/RotationOrder
@3.0
+#toString()Ljava/lang/String;
+#getA1()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getA2()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getA3()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;

+###org/apache/commons/math3/geometry/euclidean/threed/NotARotationMatrixException
@3.0
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V

+###org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D
@3.2
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
+#<init>([Lorg/apache/commons/math3/RealFieldElement;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#getX()Lorg/apache/commons/math3/RealFieldElement;
+#getY()Lorg/apache/commons/math3/RealFieldElement;
+#getZ()Lorg/apache/commons/math3/RealFieldElement;
+#toArray()[Lorg/apache/commons/math3/RealFieldElement;
+#toVector3D()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
+#getNorm1()Lorg/apache/commons/math3/RealFieldElement;
+#getNorm()Lorg/apache/commons/math3/RealFieldElement;
+#getNormSq()Lorg/apache/commons/math3/RealFieldElement;
+#getNormInf()Lorg/apache/commons/math3/RealFieldElement;
+#getAlpha()Lorg/apache/commons/math3/RealFieldElement;
+#getDelta()Lorg/apache/commons/math3/RealFieldElement;
+#add(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#add(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#add(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#add(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#add(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#add(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#subtract(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#subtract(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#subtract(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#subtract(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#subtract(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#subtract(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#normalize()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#orthogonal()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#angle(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#angle(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#angle(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#negate()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#scalarMultiply(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#isNaN()Z
+#isInfinite()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
+#toString()Ljava/lang/String;
+#toString(Ljava/text/NumberFormat;)Ljava/lang/String;

+###org/apache/commons/math3/geometry/euclidean/threed/FieldRotation
@3.2
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Z)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;)V
+#<init>([[Lorg/apache/commons/math3/RealFieldElement;D)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
+#revert()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#getQ0()Lorg/apache/commons/math3/RealFieldElement;
+#getQ1()Lorg/apache/commons/math3/RealFieldElement;
+#getQ2()Lorg/apache/commons/math3/RealFieldElement;
+#getQ3()Lorg/apache/commons/math3/RealFieldElement;
+#getAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#getAngle()Lorg/apache/commons/math3/RealFieldElement;
+#getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[Lorg/apache/commons/math3/RealFieldElement;
+#getMatrix()[[Lorg/apache/commons/math3/RealFieldElement;
+#toRotation()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
+#applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#applyTo([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
+#applyTo([D[Lorg/apache/commons/math3/RealFieldElement;)V
+#applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#applyInverseTo([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
+#applyInverseTo([D[Lorg/apache/commons/math3/RealFieldElement;)V
+#applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
+#applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/RealFieldElement;
@3.6
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;)V[deprecated]
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V[deprecated]
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
*#getAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;[deprecated]
+#getAxis(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
*#getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[Lorg/apache/commons/math3/RealFieldElement;[deprecated]
+#getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[Lorg/apache/commons/math3/RealFieldElement;
+#compose(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#compose(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
+#composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;

+###org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
+#getInstance()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat;
+#getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat;
+#format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/Vector;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/Vector;

+###org/apache/commons/math3/geometry/euclidean/twod/DiskGenerator
@3.3
+#<init>()V
+#ballOnSupport(Ljava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;

+###org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
+#<init>(Ljava/util/Collection;)V
+#<init>(DDDD)V
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;
+#getVertices()[[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
@3.1
+#<init>(D[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
@3.3
+#<init>(D)V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
+#<init>(Ljava/util/Collection;D)V
+#<init>(DDDDD)V
*#<init>()V[deprecated]
*#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V[deprecated]
*#<init>(Ljava/util/Collection;)V[deprecated]
*#<init>(DDDD)V[deprecated]

+###org/apache/commons/math3/geometry/euclidean/twod/SubLine
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;)V
+#getSegments()Ljava/util/List;
+#intersection(Lorg/apache/commons/math3/geometry/euclidean/twod/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V[deprecated]
@3.6
-#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;

+###org/apache/commons/math3/geometry/euclidean/twod/Line
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
+#copySelf()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
+#reset(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
+#reset(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
+#revertSelf()V
+#getReverse()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#intersection(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/twod/SubLine;
+#wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;
+#getOffset(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
+#getOffset(Lorg/apache/commons/math3/geometry/Vector;)D
+#sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
+#getPointAt(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;D)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#contains(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Z
+#isParallelTo(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Z
+#translateToPoint(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
+#getAngle()D
+#setAngle(D)V
+#getOriginOffset()D
+#setOriginOffset(D)V
+#getTransform(Ljava/awt/geom/AffineTransform;)Lorg/apache/commons/math3/geometry/partitioning/Transform;
+#wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
+#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
@3.1
+#distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DD)V
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V[deprecated]
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V[deprecated]
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#getTolerance()D
+#getOffset(Lorg/apache/commons/math3/geometry/Point;)D
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
-#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
-#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
@3.6
*#getTransform(Ljava/awt/geom/AffineTransform;)Lorg/apache/commons/math3/geometry/partitioning/Transform;[deprecated]
+#getTransform(DDDDDD)Lorg/apache/commons/math3/geometry/partitioning/Transform;

+###org/apache/commons/math3/geometry/euclidean/twod/Segment
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
+#getStart()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#getEnd()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#getLine()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
@3.1
+#distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D

+###org/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChain
@3.3
+#<init>()V
+#<init>(Z)V
+#<init>(ZD)V
+#findHullVertices(Ljava/util/Collection;)Ljava/util/Collection;
+#generate(Ljava/util/Collection;)Lorg/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D;
+#isIncludeCollinearPoints()Z
+#getTolerance()D

+###org/apache/commons/math3/geometry/euclidean/twod/hull/AklToussaintHeuristic
@3.3
+#reducePoints(Ljava/util/Collection;)Ljava/util/Collection;

+###org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHullGenerator2D
@3.3
+#generate(Ljava/util/Collection;)Lorg/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D;

+###org/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D
@3.3
+#<init>([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
+#getVertices()[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#getLineSegments()[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
+#createRegion()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#getVertices()[Lorg/apache/commons/math3/geometry/Point;

+###org/apache/commons/math3/geometry/euclidean/twod/Euclidean2D
@3.0
+#getInstance()Lorg/apache/commons/math3/geometry/euclidean/twod/Euclidean2D;
+#getDimension()I
+#getSubSpace()Lorg/apache/commons/math3/geometry/euclidean/oned/Euclidean1D;
+#getSubSpace()Lorg/apache/commons/math3/geometry/Space;

+###org/apache/commons/math3/geometry/euclidean/twod/Vector2D
@3.0
+#<init>(DD)V
+#<init>([D)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
+#getX()D
+#getY()D
+#toArray()[D
+#getSpace()Lorg/apache/commons/math3/geometry/Space;
+#getZero()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#getNorm1()D
+#getNorm()D
+#getNormSq()D
+#getNormInf()D
+#add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#normalize()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#negate()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
+#isNaN()Z
+#isInfinite()Z
+#distance1(Lorg/apache/commons/math3/geometry/Vector;)D
+#distance(Lorg/apache/commons/math3/geometry/Vector;)D
+#distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D
+#distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D
+#dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D
+#distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
+#distanceInf(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
+#distanceSq(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toString(Ljava/text/NumberFormat;)Ljava/lang/String;
+#scalarMultiply(D)Lorg/apache/commons/math3/geometry/Vector;
+#normalize()Lorg/apache/commons/math3/geometry/Vector;
+#negate()Lorg/apache/commons/math3/geometry/Vector;
+#subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#getZero()Lorg/apache/commons/math3/geometry/Vector;
@3.3
+#angle(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
+#distance(Lorg/apache/commons/math3/geometry/Point;)D
+#crossProduct(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D

+###org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Z)V
+#copySelf()Lorg/apache/commons/math3/geometry/euclidean/oned/OrientedPoint;
+#getOffset(Lorg/apache/commons/math3/geometry/Vector;)D
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
+#wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
+#sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
+#getLocation()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#isDirect()Z
+#revertSelf()V
+#wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V
*#<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Z)V[deprecated]
+#getOffset(Lorg/apache/commons/math3/geometry/Point;)D
+#project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#getTolerance()D

+###org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
+#getInstance()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat;
+#getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat;
+#format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/Vector;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/Vector;

+###org/apache/commons/math3/geometry/euclidean/oned/Interval
@3.0
+#<init>(DD)V
+#getLower()D
+#getUpper()D
+#getLength()D
+#getMidPoint()D
@3.1
+#getInf()D
*#getLower()D[deprecated]
+#getSup()D
*#getUpper()D[deprecated]
+#getSize()D
*#getLength()D[deprecated]
+#getBarycenter()D
*#getMidPoint()D[deprecated]
+#checkPoint(DD)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;

+###org/apache/commons/math3/geometry/euclidean/oned/Vector1D
@3.0
+#<init>(D)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V
+#<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V
+#getX()D
+#getSpace()Lorg/apache/commons/math3/geometry/Space;
+#getZero()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#getNorm1()D
+#getNorm()D
+#getNormSq()D
+#getNormInf()D
+#add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#normalize()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#negate()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
+#isNaN()Z
+#isInfinite()Z
+#distance1(Lorg/apache/commons/math3/geometry/Vector;)D
+#distance(Lorg/apache/commons/math3/geometry/Vector;)D
+#distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D
+#distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D
+#dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D
+#distance(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D
+#distanceInf(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D
+#distanceSq(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toString(Ljava/text/NumberFormat;)Ljava/lang/String;
+#scalarMultiply(D)Lorg/apache/commons/math3/geometry/Vector;
+#normalize()Lorg/apache/commons/math3/geometry/Vector;
+#negate()Lorg/apache/commons/math3/geometry/Vector;
+#subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#getZero()Lorg/apache/commons/math3/geometry/Vector;
@3.3
*#distance(Lorg/apache/commons/math3/geometry/Vector;)D[deprecated]
+#distance(Lorg/apache/commons/math3/geometry/Point;)D

+###org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet
@3.0
+#<init>()V
+#<init>(DD)V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
+#<init>(Ljava/util/Collection;)V
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
+#getInf()D
+#getSup()D
+#asList()Ljava/util/List;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
@3.3
+#<init>(D)V
+#<init>(DDD)V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
+#<init>(Ljava/util/Collection;D)V
*#<init>()V[deprecated]
*#<init>(DD)V[deprecated]
*#<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V[deprecated]
*#<init>(Ljava/util/Collection;)V[deprecated]
+#projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
+#iterator()Ljava/util/Iterator;

+###org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D
@3.0
+#getInstance()Lorg/apache/commons/math3/geometry/euclidean/oned/Euclidean1D;
+#getDimension()I
+#getSubSpace()Lorg/apache/commons/math3/geometry/Space;

+###org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D$NoSubSpaceException
@3.3
+#<init>()V

+###org/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
+#getSize()D
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
@3.3
+#isEmpty()Z
@3.6
-#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;

+###org/apache/commons/math3/geometry/Point
@3.3
+#getSpace()Lorg/apache/commons/math3/geometry/Space;
+#isNaN()Z
+#distance(Lorg/apache/commons/math3/geometry/Point;)D

+###org/apache/commons/math3/geometry/Vector
@3.0
+#getSpace()Lorg/apache/commons/math3/geometry/Space;
+#getZero()Lorg/apache/commons/math3/geometry/Vector;
+#getNorm1()D
+#getNorm()D
+#getNormSq()D
+#getNormInf()D
+#add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#negate()Lorg/apache/commons/math3/geometry/Vector;
+#normalize()Lorg/apache/commons/math3/geometry/Vector;
+#scalarMultiply(D)Lorg/apache/commons/math3/geometry/Vector;
+#isNaN()Z
+#isInfinite()Z
+#distance1(Lorg/apache/commons/math3/geometry/Vector;)D
+#distance(Lorg/apache/commons/math3/geometry/Vector;)D
+#distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D
+#distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D
+#dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D
+#toString(Ljava/text/NumberFormat;)Ljava/lang/String;
@3.3
-#getSpace()Lorg/apache/commons/math3/geometry/Space;
-#isNaN()Z

+###org/apache/commons/math3/geometry/Space
@3.0
+#getDimension()I
+#getSubSpace()Lorg/apache/commons/math3/geometry/Space;

+###org/apache/commons/math3/geometry/partitioning/BoundaryAttribute
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
+#getPlusOutside()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#getPlusInside()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
@3.4
*#<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V[deprecated]
+#getSplitters()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;

+###org/apache/commons/math3/geometry/partitioning/NodesSet
@3.4
+#<init>()V
+#add(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
+#addAll(Ljava/lang/Iterable;)V
+#iterator()Ljava/util/Iterator;

+###org/apache/commons/math3/geometry/partitioning/utilities/AVLTree
@3.0
+#<init>()V
+#insert(Ljava/lang/Comparable;)V
+#delete(Ljava/lang/Comparable;)Z
+#isEmpty()Z
+#size()I
+#getSmallest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
+#getLargest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
+#getNotSmaller(Ljava/lang/Comparable;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
+#getNotLarger(Ljava/lang/Comparable;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;

+###org/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node
@3.0
+#getElement()Ljava/lang/Comparable;
+#getPrevious()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
+#getNext()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
+#delete()V

+###org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple
@3.0
+#<init>([D)V
+#compareTo(Lorg/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getComponents()[D
+#compareTo(Ljava/lang/Object;)I

+###org/apache/commons/math3/geometry/partitioning/Embedding
@3.0
+#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
@3.3
+#toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
-#toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
-#toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;

+###org/apache/commons/math3/geometry/partitioning/RegionFactory
@3.0
+#<init>()V
+#buildConvex([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Region;
+#union(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
+#intersection(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
+#xor(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
+#difference(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
+#getComplement(Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;

+###org/apache/commons/math3/geometry/partitioning/AbstractRegion
@3.0
+#<init>([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)V
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
+#isEmpty()Z
+#isEmpty(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
+#contains(Lorg/apache/commons/math3/geometry/partitioning/Region;)Z
+#checkPoint(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
+#getTree(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#getBoundarySize()D
+#getSize()D
+#getBarycenter()Lorg/apache/commons/math3/geometry/Vector;
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#intersection(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#applyTransform(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
@3.3
+#<init>([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;D)V
+#getTolerance()D
+#isFull()Z
+#isFull(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
+#projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
+#checkPoint(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
+#getBarycenter()Lorg/apache/commons/math3/geometry/Point;
-#<init>([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)V
-#getBarycenter()Lorg/apache/commons/math3/geometry/Vector;
@3.6
*#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;[deprecated]

+###org/apache/commons/math3/geometry/partitioning/Transform
@3.0
+#apply(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
+#apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
+#apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
@3.3
+#apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
-#apply(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;

+###org/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane
@3.0
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
+#getHyperplane()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
+#getRemainingRegion()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#getSize()D
+#reunite(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
+#applyTransform(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
+#isEmpty()Z
+#reunite(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
@3.6
*#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;[deprecated]

+###org/apache/commons/math3/geometry/partitioning/BoundaryProjection
@3.3
+#<init>(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V
+#getOriginal()Lorg/apache/commons/math3/geometry/Point;
+#getProjected()Lorg/apache/commons/math3/geometry/Point;
+#getOffset()D

+###org/apache/commons/math3/geometry/partitioning/Region
@3.0
+#buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/Region;
+#isEmpty()Z
+#isEmpty(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
+#contains(Lorg/apache/commons/math3/geometry/partitioning/Region;)Z
+#checkPoint(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
+#getTree(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#getBoundarySize()D
+#getSize()D
+#getBarycenter()Lorg/apache/commons/math3/geometry/Vector;
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#intersection(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
@3.3
+#isFull()Z
+#isFull(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
+#checkPoint(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
+#projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
+#getBarycenter()Lorg/apache/commons/math3/geometry/Point;
-#checkPoint(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
-#getBarycenter()Lorg/apache/commons/math3/geometry/Vector;
@3.6
*#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;[deprecated]

+###org/apache/commons/math3/geometry/partitioning/Region$Location
@3.0
+#values()[Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;

+###org/apache/commons/math3/geometry/partitioning/Side
@3.0
+#values()[Lorg/apache/commons/math3/geometry/partitioning/Side;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/partitioning/Side;

+###org/apache/commons/math3/geometry/partitioning/Hyperplane
@3.0
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
+#getOffset(Lorg/apache/commons/math3/geometry/Vector;)D
+#sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
+#wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
@3.3
+#getOffset(Lorg/apache/commons/math3/geometry/Point;)D
+#project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
+#getTolerance()D
-#getOffset(Lorg/apache/commons/math3/geometry/Vector;)D

+###org/apache/commons/math3/geometry/partitioning/SubHyperplane
@3.0
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#getHyperplane()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
+#isEmpty()Z
+#getSize()D
+#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;
+#split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
+#reunite(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
@3.6
*#side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;[deprecated]

+###org/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane
@3.0
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
+#getPlus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#getMinus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
@3.6
+#getSide()Lorg/apache/commons/math3/geometry/partitioning/Side;

+###org/apache/commons/math3/geometry/partitioning/BSPTree
@3.0
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
+#insertCut(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
+#copySelf()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#getCut()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
+#getPlus()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#getMinus()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#getParent()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#setAttribute(Ljava/lang/Object;)V
+#getAttribute()Ljava/lang/Object;
+#visit(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
+#getCell(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$LeafMerger;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#split(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#insertInTree(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Z)V
@3.3
*#getCell(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;[deprecated]
+#getCell(Lorg/apache/commons/math3/geometry/Point;D)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
+#getCloseCuts(Lorg/apache/commons/math3/geometry/Point;D)Ljava/util/List;
+#pruneAroundConvexCell(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
@3.4
*#insertInTree(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Z)V[deprecated]
+#insertInTree(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZLorg/apache/commons/math3/geometry/partitioning/BSPTree$VanishingCutHandler;)V

+###org/apache/commons/math3/geometry/partitioning/BSPTree$VanishingCutHandler
@3.4
+#fixNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;

+###org/apache/commons/math3/geometry/partitioning/BSPTree$LeafMerger
@3.0
+#merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;

+###org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor
@3.0
+#visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
+#visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
+#visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V

+###org/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order
@3.0
+#values()[Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;

+###org/apache/commons/math3/Field
@3.0
+#getZero()Ljava/lang/Object;
+#getOne()Ljava/lang/Object;
+#getRuntimeClass()Ljava/lang/Class;

+###org/apache/commons/math3/linear/SingularOperatorException
@3.0
+#<init>()V

+###org/apache/commons/math3/linear/EigenDecomposition
@3.0
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
+#<init>([D[DD)V
+#getV()Lorg/apache/commons/math3/linear/RealMatrix;
+#getD()Lorg/apache/commons/math3/linear/RealMatrix;
+#getVT()Lorg/apache/commons/math3/linear/RealMatrix;
+#getRealEigenvalues()[D
+#getRealEigenvalue(I)D
+#getImagEigenvalues()[D
+#getImagEigenvalue(I)D
+#getEigenvector(I)Lorg/apache/commons/math3/linear/RealVector;
+#getDeterminant()D
+#getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;
@3.1
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
*#<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V[deprecated]
+#<init>([D[D)V
*#<init>([D[DD)V[deprecated]
+#hasComplexEigenvalues()Z
+#getSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/linear/DefaultIterativeLinearSolverEvent
@3.0
+#<init>(Ljava/lang/Object;ILorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;D)V
+#<init>(Ljava/lang/Object;ILorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;D)V
+#getNormOfResidual()D
+#getResidual()Lorg/apache/commons/math3/linear/RealVector;
+#getRightHandSideVector()Lorg/apache/commons/math3/linear/RealVector;
+#getSolution()Lorg/apache/commons/math3/linear/RealVector;
+#providesResidual()Z

+###org/apache/commons/math3/linear/SymmLQ
@3.0
+#<init>(IDZ)V
+#<init>(Lorg/apache/commons/math3/util/IterationManager;DZ)V
+#getCheck()Z
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;
+#solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;

+###org/apache/commons/math3/linear/SparseFieldVector
@3.0
+#<init>(Lorg/apache/commons/math3/Field;)V
+#<init>(Lorg/apache/commons/math3/Field;I)V
+#<init>(Lorg/apache/commons/math3/Field;II)V
+#<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V
+#<init>(Lorg/apache/commons/math3/linear/SparseFieldVector;)V
+#add(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#append(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#append(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#append(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#copy()Lorg/apache/commons/math3/linear/FieldVector;
+#dotProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
+#ebeDivide(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#getData()[Lorg/apache/commons/math3/FieldElement;
+#getDimension()I
+#getEntry(I)Lorg/apache/commons/math3/FieldElement;
+#getField()Lorg/apache/commons/math3/Field;
+#getSubVector(II)Lorg/apache/commons/math3/linear/FieldVector;
+#mapAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapAddToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapDivide(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapDivideToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapInv()Lorg/apache/commons/math3/linear/FieldVector;
+#mapInvToSelf()Lorg/apache/commons/math3/linear/FieldVector;
+#mapMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapMultiplyToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapSubtract(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapSubtractToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#outerProduct(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#outerProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#projection(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#set(Lorg/apache/commons/math3/FieldElement;)V
+#setEntry(ILorg/apache/commons/math3/FieldElement;)V
+#setSubVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#subtract(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/SparseFieldVector;
+#subtract(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#toArray()[Lorg/apache/commons/math3/FieldElement;
+#add(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.1
*#getData()[Lorg/apache/commons/math3/FieldElement;[deprecated]
@3.3
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/LUDecomposition
@3.0
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
+#getL()Lorg/apache/commons/math3/linear/RealMatrix;
+#getU()Lorg/apache/commons/math3/linear/RealMatrix;
+#getP()Lorg/apache/commons/math3/linear/RealMatrix;
+#getPivot()[I
+#getDeterminant()D
+#getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;

+###org/apache/commons/math3/linear/IllConditionedOperatorException
@3.0
+#<init>(D)V

+###org/apache/commons/math3/linear/NonPositiveDefiniteOperatorException
@3.0
+#<init>()V

+###org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver
@3.0
+#<init>(I)V
+#<init>(Lorg/apache/commons/math3/util/IterationManager;)V
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;

+###org/apache/commons/math3/linear/ConjugateGradient
@3.0
+#<init>(IDZ)V
+#<init>(Lorg/apache/commons/math3/util/IterationManager;DZ)V
+#getCheck()Z
+#solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;

+###org/apache/commons/math3/linear/RRQRDecomposition
@3.2
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
+#getP()Lorg/apache/commons/math3/linear/RealMatrix;
+#getRank(D)I
+#getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;

+###org/apache/commons/math3/linear/Array2DRowFieldMatrix
@3.0
+#<init>(Lorg/apache/commons/math3/Field;)V
+#<init>(Lorg/apache/commons/math3/Field;II)V
+#<init>([[Lorg/apache/commons/math3/FieldElement;)V
+#<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;)V
+#<init>([[Lorg/apache/commons/math3/FieldElement;Z)V
+#<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
+#<init>([Lorg/apache/commons/math3/FieldElement;)V
+#<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V
+#createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;
+#copy()Lorg/apache/commons/math3/linear/FieldMatrix;
+#add(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
+#subtract(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
+#multiply(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
+#getData()[[Lorg/apache/commons/math3/FieldElement;
+#getDataRef()[[Lorg/apache/commons/math3/FieldElement;
+#setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V
+#getEntry(II)Lorg/apache/commons/math3/FieldElement;
+#setEntry(IILorg/apache/commons/math3/FieldElement;)V
+#addToEntry(IILorg/apache/commons/math3/FieldElement;)V
+#multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V
+#getRowDimension()I
+#getColumnDimension()I
+#operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/DiagonalMatrix
@3.1.1
+#<init>(I)V
+#<init>([D)V
+#<init>([DZ)V
+#createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
+#copy()Lorg/apache/commons/math3/linear/RealMatrix;
+#add(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;
+#subtract(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;
+#multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;
+#multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#getData()[[D
+#getDataRef()[D
+#setSubMatrix([[DII)V
+#getEntry(II)D
+#setEntry(IID)V
+#addToEntry(IID)V
+#multiplyEntry(IID)V
+#getRowDimension()I
+#getColumnDimension()I
+#operate([D)[D
+#preMultiply([D)[D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
@3.2
-#setSubMatrix([[DII)V
-#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
-#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
-#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
-#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
-#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
-#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
-#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
-#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
@3.3
+#preMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#inverse()Lorg/apache/commons/math3/linear/DiagonalMatrix;
+#inverse(D)Lorg/apache/commons/math3/linear/DiagonalMatrix;
+#isSingular(D)Z

+###org/apache/commons/math3/linear/BlockRealMatrix
@3.0
+#<init>(II)V
+#<init>([[D)V
+#<init>(II[[DZ)V
+#toBlocksLayout([[D)[[D
+#createBlocksLayout(II)[[D
+#createMatrix(II)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#add(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#subtract(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#scalarAdd(D)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#multiply(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#getData()[[D
+#getNorm()D
+#getFrobeniusNorm()D
+#getSubMatrix(IIII)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#setSubMatrix([[DII)V
+#getRowMatrix(I)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#setRowMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
+#setRowMatrix(ILorg/apache/commons/math3/linear/BlockRealMatrix;)V
+#getColumnMatrix(I)Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#setColumnMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
+#getRowVector(I)Lorg/apache/commons/math3/linear/RealVector;
+#setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#getColumnVector(I)Lorg/apache/commons/math3/linear/RealVector;
+#setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#getRow(I)[D
+#setRow(I[D)V
+#getColumn(I)[D
+#setColumn(I[D)V
+#getEntry(II)D
+#setEntry(IID)V
+#addToEntry(IID)V
+#multiplyEntry(IID)V
+#transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;
+#getRowDimension()I
+#getColumnDimension()I
+#operate([D)[D
+#preMultiply([D)[D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#transpose()Lorg/apache/commons/math3/linear/RealMatrix;
+#getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#getRowMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#getSubMatrix(IIII)Lorg/apache/commons/math3/linear/RealMatrix;
+#multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#copy()Lorg/apache/commons/math3/linear/RealMatrix;
+#createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/linear/SingularValueDecomposition
@3.0
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#getU()Lorg/apache/commons/math3/linear/RealMatrix;
+#getUT()Lorg/apache/commons/math3/linear/RealMatrix;
+#getS()Lorg/apache/commons/math3/linear/RealMatrix;
+#getSingularValues()[D
+#getV()Lorg/apache/commons/math3/linear/RealMatrix;
+#getVT()Lorg/apache/commons/math3/linear/RealMatrix;
+#getCovariance(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#getNorm()D
+#getConditionNumber()D
+#getInverseConditionNumber()D
+#getRank()I
+#getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;

+###org/apache/commons/math3/linear/NonSymmetricMatrixException
@3.0
+#<init>(IID)V
+#getRow()I
+#getColumn()I
+#getThreshold()D

+###org/apache/commons/math3/linear/CholeskyDecomposition
@3.0
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;DD)V
+#getL()Lorg/apache/commons/math3/linear/RealMatrix;
+#getLT()Lorg/apache/commons/math3/linear/RealMatrix;
+#getDeterminant()D
+#getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;

+###org/apache/commons/math3/linear/IterativeLinearSolverEvent
@3.0
+#<init>(Ljava/lang/Object;I)V
+#getRightHandSideVector()Lorg/apache/commons/math3/linear/RealVector;
+#getNormOfResidual()D
+#getResidual()Lorg/apache/commons/math3/linear/RealVector;
+#getSolution()Lorg/apache/commons/math3/linear/RealVector;
+#providesResidual()Z

+###org/apache/commons/math3/linear/MatrixUtils
@3.0
+#createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
+#createFieldMatrix(Lorg/apache/commons/math3/Field;II)Lorg/apache/commons/math3/linear/FieldMatrix;
+#createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
+#createFieldMatrix([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#createRealIdentityMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#createFieldIdentityMatrix(Lorg/apache/commons/math3/Field;I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;
+#createFieldDiagonalMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#createRealVector([D)Lorg/apache/commons/math3/linear/RealVector;
+#createFieldVector([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#createRowRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;
+#createRowFieldMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;
+#createColumnFieldMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
+#checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
+#checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
+#checkSubMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
+#checkSubMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;[I[I)V
+#checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
+#checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
+#checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
+#fractionMatrixToRealMatrix(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
+#bigFractionMatrixToRealMatrix(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
+#serializeRealVector(Lorg/apache/commons/math3/linear/RealVector;Ljava/io/ObjectOutputStream;)V
+#deserializeRealVector(Ljava/lang/Object;Ljava/lang/String;Ljava/io/ObjectInputStream;)V
+#serializeRealMatrix(Lorg/apache/commons/math3/linear/RealMatrix;Ljava/io/ObjectOutputStream;)V
+#deserializeRealMatrix(Ljava/lang/Object;Ljava/lang/String;Ljava/io/ObjectInputStream;)V
+#solveLowerTriangularSystem(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)V
+#solveUpperTriangularSystem(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)V
@3.1
+#checkSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)V
+#isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z
+#blockInverse(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;
@3.3
+#inverse(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#inverse(Lorg/apache/commons/math3/linear/RealMatrix;D)Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/linear/DefaultRealMatrixPreservingVisitor
@3.0
+#<init>()V
+#start(IIIIII)V
+#visit(IID)V
+#end()D

+###org/apache/commons/math3/linear/BlockFieldMatrix
@3.0
+#<init>(Lorg/apache/commons/math3/Field;II)V
+#<init>([[Lorg/apache/commons/math3/FieldElement;)V
+#<init>(II[[Lorg/apache/commons/math3/FieldElement;Z)V
+#toBlocksLayout([[Lorg/apache/commons/math3/FieldElement;)[[Lorg/apache/commons/math3/FieldElement;
+#createBlocksLayout(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
+#createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;
+#copy()Lorg/apache/commons/math3/linear/FieldMatrix;
+#add(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#add(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
+#subtract(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#subtract(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
+#scalarAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#scalarMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#multiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#multiply(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
+#getData()[[Lorg/apache/commons/math3/FieldElement;
+#getSubMatrix(IIII)Lorg/apache/commons/math3/linear/FieldMatrix;
+#setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V
+#getRowMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#setRowMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
+#setRowMatrix(ILorg/apache/commons/math3/linear/BlockFieldMatrix;)V
+#getColumnMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#setColumnMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
+#getRowVector(I)Lorg/apache/commons/math3/linear/FieldVector;
+#setRowVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#getColumnVector(I)Lorg/apache/commons/math3/linear/FieldVector;
+#setColumnVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#getRow(I)[Lorg/apache/commons/math3/FieldElement;
+#setRow(I[Lorg/apache/commons/math3/FieldElement;)V
+#getColumn(I)[Lorg/apache/commons/math3/FieldElement;
+#setColumn(I[Lorg/apache/commons/math3/FieldElement;)V
+#getEntry(II)Lorg/apache/commons/math3/FieldElement;
+#setEntry(IILorg/apache/commons/math3/FieldElement;)V
+#addToEntry(IILorg/apache/commons/math3/FieldElement;)V
+#multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V
+#transpose()Lorg/apache/commons/math3/linear/FieldMatrix;
+#getRowDimension()I
+#getColumnDimension()I
+#operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/DefaultRealMatrixChangingVisitor
@3.0
+#<init>()V
+#start(IIIIII)V
+#visit(IID)D
+#end()D

+###org/apache/commons/math3/linear/NonPositiveDefiniteMatrixException
@3.0
+#<init>(DID)V
+#getRow()I
+#getColumn()I
+#getThreshold()D

+###org/apache/commons/math3/linear/RectangularCholeskyDecomposition
@3.0
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
+#getRootMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
+#getRank()I
@3.1
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V

+###org/apache/commons/math3/linear/FieldVectorChangingVisitor
@3.3
+#start(III)V
+#visit(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
+#end()Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/FieldVectorPreservingVisitor
@3.3
+#start(III)V
+#visit(ILorg/apache/commons/math3/FieldElement;)V
+#end()Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/ArrayFieldVector
@3.0
+#<init>(Lorg/apache/commons/math3/Field;)V
+#<init>(Lorg/apache/commons/math3/Field;I)V
+#<init>(ILorg/apache/commons/math3/FieldElement;)V
+#<init>([Lorg/apache/commons/math3/FieldElement;)V
+#<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V
+#<init>([Lorg/apache/commons/math3/FieldElement;Z)V
+#<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
+#<init>([Lorg/apache/commons/math3/FieldElement;II)V
+#<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;II)V
+#<init>(Lorg/apache/commons/math3/linear/FieldVector;)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;Z)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;[Lorg/apache/commons/math3/FieldElement;)V
+#<init>([Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
+#<init>([Lorg/apache/commons/math3/FieldElement;[Lorg/apache/commons/math3/FieldElement;)V
+#<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;[Lorg/apache/commons/math3/FieldElement;)V
+#getField()Lorg/apache/commons/math3/Field;
+#copy()Lorg/apache/commons/math3/linear/FieldVector;
+#add(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#add(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
+#subtract(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#subtract(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
+#mapAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapAddToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapSubtract(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapSubtractToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapMultiplyToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapDivide(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapDivideToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapInv()Lorg/apache/commons/math3/linear/FieldVector;
+#mapInvToSelf()Lorg/apache/commons/math3/linear/FieldVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
+#ebeDivide(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#ebeDivide(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
+#getData()[Lorg/apache/commons/math3/FieldElement;
+#getDataRef()[Lorg/apache/commons/math3/FieldElement;
+#dotProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
+#dotProduct(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;
+#projection(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#projection(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
+#outerProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#outerProduct(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#getEntry(I)Lorg/apache/commons/math3/FieldElement;
+#getDimension()I
+#append(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#append(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
+#append(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#getSubVector(II)Lorg/apache/commons/math3/linear/FieldVector;
+#setEntry(ILorg/apache/commons/math3/FieldElement;)V
+#setSubVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#set(ILorg/apache/commons/math3/linear/ArrayFieldVector;)V
+#set(Lorg/apache/commons/math3/FieldElement;)V
+#toArray()[Lorg/apache/commons/math3/FieldElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.2
*#<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V[deprecated]
+#<init>(Lorg/apache/commons/math3/linear/FieldVector;Lorg/apache/commons/math3/linear/FieldVector;)V
*#<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;[Lorg/apache/commons/math3/FieldElement;)V[deprecated]
+#<init>(Lorg/apache/commons/math3/linear/FieldVector;[Lorg/apache/commons/math3/FieldElement;)V
*#<init>([Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V[deprecated]
+#<init>([Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/FieldVector;)V
@3.3
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/FieldLUDecomposition
@3.0
+#<init>(Lorg/apache/commons/math3/linear/FieldMatrix;)V
+#getL()Lorg/apache/commons/math3/linear/FieldMatrix;
+#getU()Lorg/apache/commons/math3/linear/FieldMatrix;
+#getP()Lorg/apache/commons/math3/linear/FieldMatrix;
+#getPivot()[I
+#getDeterminant()Lorg/apache/commons/math3/FieldElement;
+#getSolver()Lorg/apache/commons/math3/linear/FieldDecompositionSolver;

+###org/apache/commons/math3/linear/FieldDecompositionSolver
@3.0
+#solve(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#solve(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#isNonSingular()Z
+#getInverse()Lorg/apache/commons/math3/linear/FieldMatrix;

+###org/apache/commons/math3/linear/AbstractFieldMatrix
@3.0
+#getField()Lorg/apache/commons/math3/Field;
+#createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;
+#copy()Lorg/apache/commons/math3/linear/FieldMatrix;
+#add(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#subtract(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#scalarAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#scalarMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#multiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#preMultiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#power(I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#getData()[[Lorg/apache/commons/math3/FieldElement;
+#getSubMatrix(IIII)Lorg/apache/commons/math3/linear/FieldMatrix;
+#getSubMatrix([I[I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#copySubMatrix(IIII[[Lorg/apache/commons/math3/FieldElement;)V
+#copySubMatrix([I[I[[Lorg/apache/commons/math3/FieldElement;)V
+#setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V
+#getRowMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#setRowMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
+#getColumnMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#setColumnMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
+#getRowVector(I)Lorg/apache/commons/math3/linear/FieldVector;
+#setRowVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#getColumnVector(I)Lorg/apache/commons/math3/linear/FieldVector;
+#setColumnVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#getRow(I)[Lorg/apache/commons/math3/FieldElement;
+#setRow(I[Lorg/apache/commons/math3/FieldElement;)V
+#getColumn(I)[Lorg/apache/commons/math3/FieldElement;
+#setColumn(I[Lorg/apache/commons/math3/FieldElement;)V
+#getEntry(II)Lorg/apache/commons/math3/FieldElement;
+#setEntry(IILorg/apache/commons/math3/FieldElement;)V
+#addToEntry(IILorg/apache/commons/math3/FieldElement;)V
+#multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V
+#transpose()Lorg/apache/commons/math3/linear/FieldMatrix;
+#isSquare()Z
+#getRowDimension()I
+#getColumnDimension()I
+#getTrace()Lorg/apache/commons/math3/FieldElement;
+#operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#operate(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#preMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/linear/SparseFieldMatrix
@3.0
+#<init>(Lorg/apache/commons/math3/Field;)V
+#<init>(Lorg/apache/commons/math3/Field;II)V
+#<init>(Lorg/apache/commons/math3/linear/SparseFieldMatrix;)V
+#<init>(Lorg/apache/commons/math3/linear/FieldMatrix;)V
+#addToEntry(IILorg/apache/commons/math3/FieldElement;)V
+#copy()Lorg/apache/commons/math3/linear/FieldMatrix;
+#createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;
+#getColumnDimension()I
+#getEntry(II)Lorg/apache/commons/math3/FieldElement;
+#getRowDimension()I
+#multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V
+#setEntry(IILorg/apache/commons/math3/FieldElement;)V

+###org/apache/commons/math3/linear/SparseRealVector
@3.0
+#<init>()V

+###org/apache/commons/math3/linear/OpenMapRealVector
@3.0
+#<init>()V
+#<init>(I)V
+#<init>(ID)V
+#<init>(II)V
+#<init>(IID)V
+#<init>([D)V
+#<init>([DD)V
+#<init>([Ljava/lang/Double;)V
+#<init>([Ljava/lang/Double;D)V
+#<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;)V
+#add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#add(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#append(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#append(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#copy()Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#dotProduct(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D
+#dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D
+#ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#getSubVector(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#getDimension()I
+#getDistance(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D
+#getDistance(Lorg/apache/commons/math3/linear/RealVector;)D
+#getEntry(I)D
+#getL1Distance(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D
+#getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D
+#getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D
+#isInfinite()Z
+#isNaN()Z
+#mapAdd(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#mapAddToSelf(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#projection(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#setEntry(ID)V
+#setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#set(D)V
+#subtract(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#unitVector()Lorg/apache/commons/math3/linear/OpenMapRealVector;
+#unitize()V
+#toArray()[D
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getSparsity()D
+#sparseIterator()Ljava/util/Iterator;
+#unitVector()Lorg/apache/commons/math3/linear/RealVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#copy()Lorg/apache/commons/math3/linear/RealVector;
+#mapAddToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapAdd(D)Lorg/apache/commons/math3/linear/RealVector;
+#getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;
+#append(D)Lorg/apache/commons/math3/linear/RealVector;
+#append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
@3.1
*#dotProduct(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D[deprecated]
-#dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D
-#projection(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;

+###org/apache/commons/math3/linear/OpenMapRealVector$OpenMapSparseIterator
@3.0
+#hasNext()Z
+#next()Lorg/apache/commons/math3/linear/RealVector$Entry;
+#remove()V
+#next()Ljava/lang/Object;

+###org/apache/commons/math3/linear/OpenMapRealVector$OpenMapEntry
@3.0
+#getValue()D
+#setValue(D)V
+#getIndex()I

+###org/apache/commons/math3/linear/Array2DRowRealMatrix
@3.0
+#<init>()V
+#<init>(II)V
+#<init>([[D)V
+#<init>([[DZ)V
+#<init>([D)V
+#createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
+#copy()Lorg/apache/commons/math3/linear/RealMatrix;
+#add(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
+#subtract(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
+#multiply(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
+#getData()[[D
+#getDataRef()[[D
+#setSubMatrix([[DII)V
+#getEntry(II)D
+#setEntry(IID)V
+#addToEntry(IID)V
+#multiplyEntry(IID)V
+#getRowDimension()I
+#getColumnDimension()I
+#operate([D)[D
+#preMultiply([D)[D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D

+###org/apache/commons/math3/linear/RealMatrixFormat
@3.1
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
+#getAvailableLocales()[Ljava/util/Locale;
+#getPrefix()Ljava/lang/String;
+#getSuffix()Ljava/lang/String;
+#getRowPrefix()Ljava/lang/String;
+#getRowSuffix()Ljava/lang/String;
+#getRowSeparator()Ljava/lang/String;
+#getColumnSeparator()Ljava/lang/String;
+#getFormat()Ljava/text/NumberFormat;
+#getInstance()Lorg/apache/commons/math3/linear/RealMatrixFormat;
+#getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/linear/RealMatrixFormat;
+#format(Lorg/apache/commons/math3/linear/RealMatrix;)Ljava/lang/String;
+#format(Lorg/apache/commons/math3/linear/RealMatrix;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/linear/RealMatrix;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/linear/SparseRealMatrix
@3.0

+###org/apache/commons/math3/linear/AbstractRealMatrix
@3.0
+#createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
+#copy()Lorg/apache/commons/math3/linear/RealMatrix;
+#add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#preMultiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#power(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#getData()[[D
+#getNorm()D
+#getFrobeniusNorm()D
+#getSubMatrix(IIII)Lorg/apache/commons/math3/linear/RealMatrix;
+#getSubMatrix([I[I)Lorg/apache/commons/math3/linear/RealMatrix;
+#copySubMatrix(IIII[[D)V
+#copySubMatrix([I[I[[D)V
+#setSubMatrix([[DII)V
+#getRowMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#setRowMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
+#getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#setColumnMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
+#getRowVector(I)Lorg/apache/commons/math3/linear/RealVector;
+#setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#getColumnVector(I)Lorg/apache/commons/math3/linear/RealVector;
+#setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#getRow(I)[D
+#setRow(I[D)V
+#getColumn(I)[D
+#setColumn(I[D)V
+#getEntry(II)D
+#setEntry(IID)V
+#addToEntry(IID)V
+#multiplyEntry(IID)V
+#transpose()Lorg/apache/commons/math3/linear/RealMatrix;
+#isSquare()Z
+#getRowDimension()I
+#getColumnDimension()I
+#getTrace()D
+#operate([D)[D
+#operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#preMultiply([D)[D
+#preMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/linear/OpenMapRealMatrix
@3.0
+#<init>(II)V
+#<init>(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)V
+#copy()Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
+#createMatrix(II)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
+#getColumnDimension()I
+#add(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
+#subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
+#subtract(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
+#multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#multiply(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
+#getEntry(II)D
+#getRowDimension()I
+#setEntry(IID)V
+#addToEntry(IID)V
+#multiplyEntry(IID)V
+#subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#copy()Lorg/apache/commons/math3/linear/RealMatrix;
+#createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/linear/DefaultFieldMatrixPreservingVisitor
@3.0
+#<init>(Lorg/apache/commons/math3/FieldElement;)V
+#start(IIIIII)V
+#visit(IILorg/apache/commons/math3/FieldElement;)V
+#end()Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/SingularMatrixException
@3.0
+#<init>()V

+###org/apache/commons/math3/linear/DecompositionSolver
@3.0
+#solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#isNonSingular()Z
+#getInverse()Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/linear/QRDecomposition
@3.0
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
+#getR()Lorg/apache/commons/math3/linear/RealMatrix;
+#getQ()Lorg/apache/commons/math3/linear/RealMatrix;
+#getQT()Lorg/apache/commons/math3/linear/RealMatrix;
+#getH()Lorg/apache/commons/math3/linear/RealMatrix;
+#getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;

+###org/apache/commons/math3/linear/RealVectorFormat
@3.0
+#<init>()V
+#<init>(Ljava/text/NumberFormat;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
+#getAvailableLocales()[Ljava/util/Locale;
+#getPrefix()Ljava/lang/String;
+#getSuffix()Ljava/lang/String;
+#getSeparator()Ljava/lang/String;
+#getFormat()Ljava/text/NumberFormat;
+#getInstance()Lorg/apache/commons/math3/linear/RealVectorFormat;
+#getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/linear/RealVectorFormat;
+#format(Lorg/apache/commons/math3/linear/RealVector;)Ljava/lang/String;
+#format(Lorg/apache/commons/math3/linear/RealVector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parse(Ljava/lang/String;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/linear/ArrayRealVector;

+###org/apache/commons/math3/linear/ArrayRealVector
@3.0
+#<init>()V
+#<init>(I)V
+#<init>(ID)V
+#<init>([D)V
+#<init>([DZ)V
+#<init>([DII)V
+#<init>([Ljava/lang/Double;)V
+#<init>([Ljava/lang/Double;II)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Z)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/RealVector;)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)V
+#<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;[D)V
+#<init>([DLorg/apache/commons/math3/linear/ArrayRealVector;)V
+#<init>([D[D)V
+#copy()Lorg/apache/commons/math3/linear/ArrayRealVector;
+#add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#mapAddToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapSubtractToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapMultiplyToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapDivideToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#getDataRef()[D
+#dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D
+#getNorm()D
+#getL1Norm()D
+#getLInfNorm()D
+#getDistance(Lorg/apache/commons/math3/linear/RealVector;)D
+#getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D
+#getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D
+#unitVector()Lorg/apache/commons/math3/linear/RealVector;
+#unitize()V
+#projection(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#outerProduct(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealMatrix;
+#getEntry(I)D
+#getDimension()I
+#append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#append(Lorg/apache/commons/math3/linear/ArrayRealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#append(D)Lorg/apache/commons/math3/linear/RealVector;
+#getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;
+#setEntry(ID)V
+#addToEntry(ID)V
+#setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#setSubVector(I[D)V
+#set(D)V
+#toArray()[D
+#toString()Ljava/lang/String;
+#isNaN()Z
+#isInfinite()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
+#combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
+#map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#copy()Lorg/apache/commons/math3/linear/RealVector;
+#subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
@3.1
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D
-#unitVector()Lorg/apache/commons/math3/linear/RealVector;
-#unitize()V
-#projection(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;

+###org/apache/commons/math3/linear/JacobiPreconditioner
@3.0
+#<init>([DZ)V
+#create(Lorg/apache/commons/math3/linear/RealLinearOperator;)Lorg/apache/commons/math3/linear/JacobiPreconditioner;
+#getColumnDimension()I
+#getRowDimension()I
+#operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
@3.1
+#sqrt()Lorg/apache/commons/math3/linear/RealLinearOperator;

+###org/apache/commons/math3/linear/NonSquareOperatorException
@3.0
+#<init>(II)V

+###org/apache/commons/math3/linear/RealLinearOperator
@3.0
+#<init>()V
+#getRowDimension()I
+#getColumnDimension()I
+#operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#operateTranspose(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#isTransposable()Z

+###org/apache/commons/math3/linear/IterativeLinearSolver
@3.0
+#<init>(I)V
+#<init>(Lorg/apache/commons/math3/util/IterationManager;)V
+#getIterationManager()Lorg/apache/commons/math3/util/IterationManager;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;

+###org/apache/commons/math3/linear/FieldMatrixPreservingVisitor
@3.0
+#start(IIIIII)V
+#visit(IILorg/apache/commons/math3/FieldElement;)V
+#end()Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/FieldVector
@3.0
+#getField()Lorg/apache/commons/math3/Field;
+#copy()Lorg/apache/commons/math3/linear/FieldVector;
+#add(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#subtract(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapAddToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapSubtract(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapSubtractToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapMultiplyToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapDivide(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapDivideToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#mapInv()Lorg/apache/commons/math3/linear/FieldVector;
+#mapInvToSelf()Lorg/apache/commons/math3/linear/FieldVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#ebeDivide(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#getData()[Lorg/apache/commons/math3/FieldElement;
+#dotProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
+#projection(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#outerProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#getEntry(I)Lorg/apache/commons/math3/FieldElement;
+#setEntry(ILorg/apache/commons/math3/FieldElement;)V
+#getDimension()I
+#append(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#append(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
+#getSubVector(II)Lorg/apache/commons/math3/linear/FieldVector;
+#setSubVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#set(Lorg/apache/commons/math3/FieldElement;)V
+#toArray()[Lorg/apache/commons/math3/FieldElement;
@3.1
*#getData()[Lorg/apache/commons/math3/FieldElement;[deprecated]

+###org/apache/commons/math3/linear/FieldMatrix
@3.0
+#getField()Lorg/apache/commons/math3/Field;
+#createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;
+#copy()Lorg/apache/commons/math3/linear/FieldMatrix;
+#add(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#subtract(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#scalarAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#scalarMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#multiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#preMultiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
+#power(I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#getData()[[Lorg/apache/commons/math3/FieldElement;
+#getSubMatrix(IIII)Lorg/apache/commons/math3/linear/FieldMatrix;
+#getSubMatrix([I[I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#copySubMatrix(IIII[[Lorg/apache/commons/math3/FieldElement;)V
+#copySubMatrix([I[I[[Lorg/apache/commons/math3/FieldElement;)V
+#setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V
+#getRowMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#setRowMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
+#getColumnMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;
+#setColumnMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
+#getRowVector(I)Lorg/apache/commons/math3/linear/FieldVector;
+#setRowVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#getColumnVector(I)Lorg/apache/commons/math3/linear/FieldVector;
+#setColumnVector(ILorg/apache/commons/math3/linear/FieldVector;)V
+#getRow(I)[Lorg/apache/commons/math3/FieldElement;
+#setRow(I[Lorg/apache/commons/math3/FieldElement;)V
+#getColumn(I)[Lorg/apache/commons/math3/FieldElement;
+#setColumn(I[Lorg/apache/commons/math3/FieldElement;)V
+#getEntry(II)Lorg/apache/commons/math3/FieldElement;
+#setEntry(IILorg/apache/commons/math3/FieldElement;)V
+#addToEntry(IILorg/apache/commons/math3/FieldElement;)V
+#multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V
+#transpose()Lorg/apache/commons/math3/linear/FieldMatrix;
+#getTrace()Lorg/apache/commons/math3/FieldElement;
+#operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#operate(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#preMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/NonSelfAdjointOperatorException
@3.0
+#<init>()V

+###org/apache/commons/math3/linear/FieldMatrixChangingVisitor
@3.0
+#start(IIIIII)V
+#visit(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
+#end()Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/DefaultFieldMatrixChangingVisitor
@3.0
+#<init>(Lorg/apache/commons/math3/FieldElement;)V
+#start(IIIIII)V
+#visit(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
+#end()Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/linear/RealVectorChangingVisitor
@3.1
+#start(III)V
+#visit(ID)D
+#end()D

+###org/apache/commons/math3/linear/RealVectorPreservingVisitor
@3.1
+#start(III)V
+#visit(ID)V
+#end()D

+###org/apache/commons/math3/linear/RealMatrixPreservingVisitor
@3.0
+#start(IIIIII)V
+#visit(IID)V
+#end()D

+###org/apache/commons/math3/linear/RealMatrixChangingVisitor
@3.0
+#start(IIIIII)V
+#visit(IID)D
+#end()D

+###org/apache/commons/math3/linear/RealVector
@3.0
+#<init>()V
+#getDimension()I
+#getEntry(I)D
+#setEntry(ID)V
+#addToEntry(ID)V
+#append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#append(D)Lorg/apache/commons/math3/linear/RealVector;
+#getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;
+#setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#isNaN()Z
+#isInfinite()Z
+#add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#mapAdd(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapAddToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#copy()Lorg/apache/commons/math3/linear/RealVector;
+#dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D
+#cosine(Lorg/apache/commons/math3/linear/RealVector;)D
+#ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#getDistance(Lorg/apache/commons/math3/linear/RealVector;)D
+#getNorm()D
+#getL1Norm()D
+#getLInfNorm()D
+#getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D
+#getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D
+#getMinIndex()I
+#getMinValue()D
+#getMaxIndex()I
+#getMaxValue()D
+#mapMultiply(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapMultiplyToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapSubtract(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapSubtractToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapDivide(D)Lorg/apache/commons/math3/linear/RealVector;
+#mapDivideToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
+#outerProduct(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealMatrix;
+#projection(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#set(D)V
+#toArray()[D
+#unitVector()Lorg/apache/commons/math3/linear/RealVector;
+#unitize()V
+#sparseIterator()Ljava/util/Iterator;
+#iterator()Ljava/util/Iterator;
+#map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
+#mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
+#combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#unmodifiableRealVector(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
@3.1
*#ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;[deprecated]
*#ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;[deprecated]
*#sparseIterator()Ljava/util/Iterator;[deprecated]
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D
+#walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/linear/RealVector$SparseEntryIterator
@3.0
+#hasNext()Z
+#next()Lorg/apache/commons/math3/linear/RealVector$Entry;
+#remove()V
+#next()Ljava/lang/Object;

+###org/apache/commons/math3/linear/RealVector$Entry
@3.0
+#<init>(Lorg/apache/commons/math3/linear/RealVector;)V
+#getValue()D
+#setValue(D)V
+#getIndex()I
+#setIndex(I)V

+###org/apache/commons/math3/linear/NonSquareMatrixException
@3.0
+#<init>(II)V

+###org/apache/commons/math3/linear/MatrixDimensionMismatchException
@3.0
+#<init>(IIII)V
+#getWrongRowDimension()I
+#getExpectedRowDimension()I
+#getWrongColumnDimension()I
+#getExpectedColumnDimension()I

+###org/apache/commons/math3/linear/AnyMatrix
@3.0
+#isSquare()Z
+#getRowDimension()I
+#getColumnDimension()I

+###org/apache/commons/math3/linear/RealMatrix
@3.0
+#createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
+#copy()Lorg/apache/commons/math3/linear/RealMatrix;
+#add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#preMultiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
+#power(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#getData()[[D
+#getNorm()D
+#getFrobeniusNorm()D
+#getSubMatrix(IIII)Lorg/apache/commons/math3/linear/RealMatrix;
+#getSubMatrix([I[I)Lorg/apache/commons/math3/linear/RealMatrix;
+#copySubMatrix(IIII[[D)V
+#copySubMatrix([I[I[[D)V
+#setSubMatrix([[DII)V
+#getRowMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#setRowMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
+#getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
+#setColumnMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
+#getRowVector(I)Lorg/apache/commons/math3/linear/RealVector;
+#setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#getColumnVector(I)Lorg/apache/commons/math3/linear/RealVector;
+#setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V
+#getRow(I)[D
+#setRow(I[D)V
+#getColumn(I)[D
+#setColumn(I[D)V
+#getEntry(II)D
+#setEntry(IID)V
+#addToEntry(IID)V
+#multiplyEntry(IID)V
+#transpose()Lorg/apache/commons/math3/linear/RealMatrix;
+#getTrace()D
+#operate([D)[D
+#operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#preMultiply([D)[D
+#preMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
+#walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D

+###org/apache/commons/math3/FieldElement
@3.0
+#add(Ljava/lang/Object;)Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#reciprocal()Ljava/lang/Object;
+#getField()Lorg/apache/commons/math3/Field;

+###org/apache/commons/math3/RealFieldElement
@3.2
+#getReal()D
+#add(D)Ljava/lang/Object;
+#subtract(D)Ljava/lang/Object;
+#multiply(D)Ljava/lang/Object;
+#divide(D)Ljava/lang/Object;
+#remainder(D)Ljava/lang/Object;
+#remainder(Ljava/lang/Object;)Ljava/lang/Object;
+#abs()Ljava/lang/Object;
+#ceil()Ljava/lang/Object;
+#floor()Ljava/lang/Object;
+#rint()Ljava/lang/Object;
+#round()J
+#signum()Ljava/lang/Object;
+#copySign(Ljava/lang/Object;)Ljava/lang/Object;
+#copySign(D)Ljava/lang/Object;
+#scalb(I)Ljava/lang/Object;
+#hypot(Ljava/lang/Object;)Ljava/lang/Object;
+#reciprocal()Ljava/lang/Object;
+#sqrt()Ljava/lang/Object;
+#cbrt()Ljava/lang/Object;
+#rootN(I)Ljava/lang/Object;
+#pow(D)Ljava/lang/Object;
+#pow(I)Ljava/lang/Object;
+#pow(Ljava/lang/Object;)Ljava/lang/Object;
+#exp()Ljava/lang/Object;
+#expm1()Ljava/lang/Object;
+#log()Ljava/lang/Object;
+#log1p()Ljava/lang/Object;
+#cos()Ljava/lang/Object;
+#sin()Ljava/lang/Object;
+#tan()Ljava/lang/Object;
+#acos()Ljava/lang/Object;
+#asin()Ljava/lang/Object;
+#atan()Ljava/lang/Object;
+#atan2(Ljava/lang/Object;)Ljava/lang/Object;
+#cosh()Ljava/lang/Object;
+#sinh()Ljava/lang/Object;
+#tanh()Ljava/lang/Object;
+#acosh()Ljava/lang/Object;
+#asinh()Ljava/lang/Object;
+#atanh()Ljava/lang/Object;
+#linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;

+###org/apache/commons/math3/exception/MathRuntimeException
@3.1
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
+#getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
+#getMessage()Ljava/lang/String;
+#getLocalizedMessage()Ljava/lang/String;

+###org/apache/commons/math3/exception/InsufficientDataException
@3.3
+#<init>()V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V

+###org/apache/commons/math3/exception/MathParseException
@3.0
+#<init>(Ljava/lang/String;ILjava/lang/Class;)V
+#<init>(Ljava/lang/String;I)V

+###org/apache/commons/math3/exception/MathInternalError
@3.0
+#<init>()V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V

+###org/apache/commons/math3/exception/NotFiniteNumberException
@3.0
+#<init>(Ljava/lang/Number;[Ljava/lang/Object;)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V

+###org/apache/commons/math3/exception/ConvergenceException
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V

+###org/apache/commons/math3/exception/ZeroException
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V

+###org/apache/commons/math3/exception/NoBracketingException
@3.0
+#<init>(DDDD)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;DDDD[Ljava/lang/Object;)V
+#getLo()D
+#getHi()D
+#getFLo()D
+#getFHi()D

+###org/apache/commons/math3/exception/NotANumberException
@3.1
+#<init>()V

+###org/apache/commons/math3/exception/NonMonotonicSequenceException
@3.0
+#<init>(Ljava/lang/Number;Ljava/lang/Number;I)V
+#<init>(Ljava/lang/Number;Ljava/lang/Number;ILorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V
+#getDirection()Lorg/apache/commons/math3/util/MathArrays$OrderDirection;
+#getStrict()Z
+#getIndex()I
+#getPrevious()Ljava/lang/Number;

+###org/apache/commons/math3/exception/MathUnsupportedOperationException
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
+#getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
+#getMessage()Ljava/lang/String;
+#getLocalizedMessage()Ljava/lang/String;

+###org/apache/commons/math3/exception/OutOfRangeException
@3.0
+#<init>(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
+#getLo()Ljava/lang/Number;
+#getHi()Ljava/lang/Number;

+###org/apache/commons/math3/exception/NotPositiveException
@3.0
+#<init>(Ljava/lang/Number;)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V

+###org/apache/commons/math3/exception/MultiDimensionMismatchException
@3.0
+#<init>([Ljava/lang/Integer;[Ljava/lang/Integer;)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Integer;[Ljava/lang/Integer;)V
+#getWrongDimensions()[Ljava/lang/Integer;
+#getExpectedDimensions()[Ljava/lang/Integer;
+#getWrongDimension(I)I
+#getExpectedDimension(I)I

+###org/apache/commons/math3/exception/NumberIsTooSmallException
@3.0
+#<init>(Ljava/lang/Number;Ljava/lang/Number;Z)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
+#getBoundIsAllowed()Z
+#getMin()Ljava/lang/Number;

+###org/apache/commons/math3/exception/NotStrictlyPositiveException
@3.0
+#<init>(Ljava/lang/Number;)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V

+###org/apache/commons/math3/exception/MathArithmeticException
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
+#getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
+#getMessage()Ljava/lang/String;
+#getLocalizedMessage()Ljava/lang/String;

+###org/apache/commons/math3/exception/NumberIsTooLargeException
@3.0
+#<init>(Ljava/lang/Number;Ljava/lang/Number;Z)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
+#getBoundIsAllowed()Z
+#getMax()Ljava/lang/Number;

+###org/apache/commons/math3/exception/TooManyIterationsException
@3.1
+#<init>(Ljava/lang/Number;)V

+###org/apache/commons/math3/exception/MathIllegalStateException
@3.0
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
+#<init>()V
+#getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
+#getMessage()Ljava/lang/String;
+#getLocalizedMessage()Ljava/lang/String;

+###org/apache/commons/math3/exception/MaxCountExceededException
@3.0
+#<init>(Ljava/lang/Number;)V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V
+#getMax()Ljava/lang/Number;

+###org/apache/commons/math3/exception/TooManyEvaluationsException
@3.0
+#<init>(Ljava/lang/Number;)V

+###org/apache/commons/math3/exception/MathIllegalNumberException
@3.0
+#getArgument()Ljava/lang/Number;

+###org/apache/commons/math3/exception/DimensionMismatchException
@3.0
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;II)V
+#<init>(II)V
+#getDimension()I

+###org/apache/commons/math3/exception/NoDataException
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;)V

+###org/apache/commons/math3/exception/util/ArgUtils
@3.0
+#flatten([Ljava/lang/Object;)[Ljava/lang/Object;

+###org/apache/commons/math3/exception/util/LocalizedFormats
@3.0
+#values()[Lorg/apache/commons/math3/exception/util/LocalizedFormats;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/exception/util/LocalizedFormats;
+#getSourceString()Ljava/lang/String;
+#getLocalizedString(Ljava/util/Locale;)Ljava/lang/String;

+###org/apache/commons/math3/exception/util/DummyLocalizable
@3.0
+#<init>(Ljava/lang/String;)V
+#getSourceString()Ljava/lang/String;
+#getLocalizedString(Ljava/util/Locale;)Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/commons/math3/exception/util/ExceptionContext
@3.0
+#<init>(Ljava/lang/Throwable;)V
+#getThrowable()Ljava/lang/Throwable;
+#addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
+#setValue(Ljava/lang/String;Ljava/lang/Object;)V
+#getValue(Ljava/lang/String;)Ljava/lang/Object;
+#getKeys()Ljava/util/Set;
+#getMessage()Ljava/lang/String;
+#getLocalizedMessage()Ljava/lang/String;
+#getMessage(Ljava/util/Locale;)Ljava/lang/String;
+#getMessage(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/math3/exception/util/Localizable
@3.0
+#getSourceString()Ljava/lang/String;
+#getLocalizedString(Ljava/util/Locale;)Ljava/lang/String;

+###org/apache/commons/math3/exception/util/ExceptionContextProvider
@3.0
+#getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;

+###org/apache/commons/math3/exception/MathIllegalArgumentException
@3.0
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
+#getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
+#getMessage()Ljava/lang/String;
+#getLocalizedMessage()Ljava/lang/String;

+###org/apache/commons/math3/exception/NullArgumentException
@3.0
+#<init>()V
+#<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V

+###org/apache/commons/math3/util/ContinuedFraction
@3.0
+#evaluate(D)D
+#evaluate(DD)D
+#evaluate(DI)D
+#evaluate(DDI)D

+###org/apache/commons/math3/util/CombinatoricsUtils
@3.3
+#binomialCoefficient(II)J
+#binomialCoefficientDouble(II)D
+#binomialCoefficientLog(II)D
+#factorial(I)J
+#factorialDouble(I)D
+#factorialLog(I)D
+#stirlingS2(II)J
+#combinationsIterator(II)Ljava/util/Iterator;
+#checkBinomial(II)V

+###org/apache/commons/math3/util/RandomPivotingStrategy
@3.4
+#<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
+#pivotIndex([DII)I

+###org/apache/commons/math3/util/Precision
@3.0
+#compareTo(DDD)I
+#compareTo(DDI)I
+#equals(FF)Z
+#equalsIncludingNaN(FF)Z
+#equals(FFF)Z
+#equalsIncludingNaN(FFF)Z
+#equals(FFI)Z
+#equalsIncludingNaN(FFI)Z
+#equals(DD)Z
+#equalsIncludingNaN(DD)Z
+#equals(DDD)Z
+#equalsIncludingNaN(DDD)Z
+#equals(DDI)Z
+#equalsIncludingNaN(DDI)Z
+#round(DI)D
+#round(DII)D
+#round(FI)F
+#round(FII)F
+#representableDelta(DD)D
@3.1
+#equalsWithRelativeTolerance(DDD)Z

+###org/apache/commons/math3/util/BigRealField
@3.0
+#getInstance()Lorg/apache/commons/math3/util/BigRealField;
+#getOne()Lorg/apache/commons/math3/util/BigReal;
+#getZero()Lorg/apache/commons/math3/util/BigReal;
+#getRuntimeClass()Ljava/lang/Class;
+#getOne()Ljava/lang/Object;
+#getZero()Ljava/lang/Object;

+###org/apache/commons/math3/util/CompositeFormat
@3.0
+#getDefaultNumberFormat()Ljava/text/NumberFormat;
+#getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;
+#parseAndIgnoreWhitespace(Ljava/lang/String;Ljava/text/ParsePosition;)V
+#parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C
+#parseNumber(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;
+#parseFixedstring(Ljava/lang/String;Ljava/lang/String;Ljava/text/ParsePosition;)Z
+#formatDouble(DLjava/text/NumberFormat;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;

+###org/apache/commons/math3/util/ArithmeticUtils
@3.0
+#addAndCheck(II)I
+#addAndCheck(JJ)J
+#binomialCoefficient(II)J
+#binomialCoefficientDouble(II)D
+#binomialCoefficientLog(II)D
+#factorial(I)J
+#factorialDouble(I)D
+#factorialLog(I)D
+#gcd(II)I
+#gcd(JJ)J
+#lcm(II)I
+#lcm(JJ)J
+#mulAndCheck(II)I
+#mulAndCheck(JJ)J
+#subAndCheck(II)I
+#subAndCheck(JJ)J
+#pow(II)I
+#pow(IJ)I
+#pow(JI)J
+#pow(JJ)J
+#pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
+#pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
+#pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#isPowerOfTwo(J)Z
@3.1
+#stirlingS2(II)J
@3.3
*#binomialCoefficient(II)J[deprecated]
*#binomialCoefficientDouble(II)D[deprecated]
*#binomialCoefficientLog(II)D[deprecated]
*#factorial(I)J[deprecated]
*#factorialDouble(I)D[deprecated]
*#factorialLog(I)D[deprecated]
*#pow(IJ)I[deprecated]
*#pow(JJ)J[deprecated]
*#stirlingS2(II)J[deprecated]

+###org/apache/commons/math3/util/MedianOf3PivotingStrategy
@3.4
+#<init>()V
+#pivotIndex([DII)I

+###org/apache/commons/math3/util/TransformerMap
@3.0
+#<init>()V
+#containsClass(Ljava/lang/Class;)Z
+#containsTransformer(Lorg/apache/commons/math3/util/NumberTransformer;)Z
+#getTransformer(Ljava/lang/Class;)Lorg/apache/commons/math3/util/NumberTransformer;
+#putTransformer(Ljava/lang/Class;Lorg/apache/commons/math3/util/NumberTransformer;)Lorg/apache/commons/math3/util/NumberTransformer;
+#removeTransformer(Ljava/lang/Class;)Lorg/apache/commons/math3/util/NumberTransformer;
+#clear()V
+#classes()Ljava/util/Set;
+#transformers()Ljava/util/Collection;
+#transform(Ljava/lang/Object;)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/util/CentralPivotingStrategy
@3.4
+#<init>()V
+#pivotIndex([DII)I

+###org/apache/commons/math3/util/PivotingStrategyInterface
@3.4
+#pivotIndex([DII)I

+###org/apache/commons/math3/util/KthSelector
@3.4
+#<init>()V
+#<init>(Lorg/apache/commons/math3/util/PivotingStrategyInterface;)V
+#getPivotingStrategy()Lorg/apache/commons/math3/util/PivotingStrategyInterface;
+#select([D[II)D

+###org/apache/commons/math3/util/MultidimensionalCounter
@3.0
+#<init>([I)V
+#iterator()Lorg/apache/commons/math3/util/MultidimensionalCounter$Iterator;
+#getDimension()I
+#getCounts(I)[I
+#getCount([I)I
+#getSize()I
+#getSizes()[I
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;

+###org/apache/commons/math3/util/MultidimensionalCounter$Iterator
@3.0
+#hasNext()Z
+#next()Ljava/lang/Integer;
+#getCount()I
+#getCounts()[I
+#getCount(I)I
+#remove()V
+#next()Ljava/lang/Object;

+###org/apache/commons/math3/util/ResizableDoubleArray
@3.0
+#<init>()V
+#<init>(I)V
+#<init>([D)V
+#<init>(IF)V
+#<init>(IFF)V
+#<init>(IFFI)V
+#<init>(Lorg/apache/commons/math3/util/ResizableDoubleArray;)V
+#addElement(D)V
+#addElements([D)V
+#addElementRolling(D)D
+#substituteMostRecentElement(D)D
+#clear()V
+#contract()V
+#discardFrontElements(I)V
+#discardMostRecentElements(I)V
+#getContractionCriteria()F
+#getElement(I)D
+#getElements()[D
+#getExpansionFactor()F
+#getExpansionMode()I
+#getNumElements()I
+#getInternalValues()[D
+#setContractionCriteria(F)V
+#setElement(ID)V
+#setExpansionFactor(F)V
+#setExpansionMode(I)V
+#setNumElements(I)V
+#start()I
+#copy(Lorg/apache/commons/math3/util/ResizableDoubleArray;Lorg/apache/commons/math3/util/ResizableDoubleArray;)V
+#copy()Lorg/apache/commons/math3/util/ResizableDoubleArray;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.1
*#<init>(IF)V[deprecated]
+#<init>(ID)V
*#<init>(IFF)V[deprecated]
+#<init>(IDD)V
+#<init>(IDDLorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;[D)V
*#getContractionCriteria()F[deprecated]
+#getContractionCriterion()D
*#getExpansionFactor()F[deprecated]
+#getCapacity()I
*#getInternalValues()[D[deprecated]
*#setContractionCriteria(F)V[deprecated]
+#compute(Lorg/apache/commons/math3/util/MathArrays$Function;)D
*#setExpansionFactor(F)V[deprecated]
*#setExpansionMode(I)V[deprecated]
+#setExpansionMode(Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;)V[deprecated]
*#start()I[deprecated]
@3.3
*#<init>(IFFI)V[deprecated]
*#getExpansionMode()I[deprecated]

+###org/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode
@3.1
+#values()[Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;

+###org/apache/commons/math3/util/Combinations
@3.3
+#<init>(II)V
+#getN()I
+#getK()I
+#iterator()Ljava/util/Iterator;
+#comparator()Ljava/util/Comparator;

+###org/apache/commons/math3/util/DoubleArray
@3.0
+#getNumElements()I
+#getElement(I)D
+#setElement(ID)V
+#addElement(D)V
+#addElements([D)V
+#addElementRolling(D)D
+#getElements()[D
+#clear()V

+###org/apache/commons/math3/util/OpenIntToFieldHashMap
@3.0
+#<init>(Lorg/apache/commons/math3/Field;)V
+#<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/FieldElement;)V
+#<init>(Lorg/apache/commons/math3/Field;I)V
+#<init>(Lorg/apache/commons/math3/Field;ILorg/apache/commons/math3/FieldElement;)V
+#<init>(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)V
+#get(I)Lorg/apache/commons/math3/FieldElement;
+#containsKey(I)Z
+#iterator()Lorg/apache/commons/math3/util/OpenIntToFieldHashMap$Iterator;
+#size()I
+#remove(I)Lorg/apache/commons/math3/FieldElement;
+#put(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/util/OpenIntToFieldHashMap$Iterator
@3.0
+#hasNext()Z
+#key()I
+#value()Lorg/apache/commons/math3/FieldElement;
+#advance()V

+###org/apache/commons/math3/util/Decimal64
@3.1
+#<init>(D)V
+#getField()Lorg/apache/commons/math3/Field;
+#add(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#subtract(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#negate()Lorg/apache/commons/math3/util/Decimal64;
+#multiply(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#multiply(I)Lorg/apache/commons/math3/util/Decimal64;
+#divide(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#reciprocal()Lorg/apache/commons/math3/util/Decimal64;
+#byteValue()B
+#shortValue()S
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#compareTo(Lorg/apache/commons/math3/util/Decimal64;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#isInfinite()Z
+#isNaN()Z
+#reciprocal()Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I
@3.2
+#getReal()D
+#add(D)Lorg/apache/commons/math3/util/Decimal64;
+#subtract(D)Lorg/apache/commons/math3/util/Decimal64;
+#multiply(D)Lorg/apache/commons/math3/util/Decimal64;
+#divide(D)Lorg/apache/commons/math3/util/Decimal64;
+#remainder(D)Lorg/apache/commons/math3/util/Decimal64;
+#remainder(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#abs()Lorg/apache/commons/math3/util/Decimal64;
+#ceil()Lorg/apache/commons/math3/util/Decimal64;
+#floor()Lorg/apache/commons/math3/util/Decimal64;
+#rint()Lorg/apache/commons/math3/util/Decimal64;
+#round()J
+#signum()Lorg/apache/commons/math3/util/Decimal64;
+#copySign(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#copySign(D)Lorg/apache/commons/math3/util/Decimal64;
+#scalb(I)Lorg/apache/commons/math3/util/Decimal64;
+#hypot(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#sqrt()Lorg/apache/commons/math3/util/Decimal64;
+#cbrt()Lorg/apache/commons/math3/util/Decimal64;
+#rootN(I)Lorg/apache/commons/math3/util/Decimal64;
+#pow(D)Lorg/apache/commons/math3/util/Decimal64;
+#pow(I)Lorg/apache/commons/math3/util/Decimal64;
+#pow(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#exp()Lorg/apache/commons/math3/util/Decimal64;
+#expm1()Lorg/apache/commons/math3/util/Decimal64;
+#log()Lorg/apache/commons/math3/util/Decimal64;
+#log1p()Lorg/apache/commons/math3/util/Decimal64;
+#log10()Lorg/apache/commons/math3/util/Decimal64;
+#cos()Lorg/apache/commons/math3/util/Decimal64;
+#sin()Lorg/apache/commons/math3/util/Decimal64;
+#tan()Lorg/apache/commons/math3/util/Decimal64;
+#acos()Lorg/apache/commons/math3/util/Decimal64;
+#asin()Lorg/apache/commons/math3/util/Decimal64;
+#atan()Lorg/apache/commons/math3/util/Decimal64;
+#atan2(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#cosh()Lorg/apache/commons/math3/util/Decimal64;
+#sinh()Lorg/apache/commons/math3/util/Decimal64;
+#tanh()Lorg/apache/commons/math3/util/Decimal64;
+#acosh()Lorg/apache/commons/math3/util/Decimal64;
+#asinh()Lorg/apache/commons/math3/util/Decimal64;
+#atanh()Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination([Lorg/apache/commons/math3/util/Decimal64;[Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination([D[Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#atanh()Ljava/lang/Object;
+#asinh()Ljava/lang/Object;
+#acosh()Ljava/lang/Object;
+#tanh()Ljava/lang/Object;
+#sinh()Ljava/lang/Object;
+#cosh()Ljava/lang/Object;
+#atan2(Ljava/lang/Object;)Ljava/lang/Object;
+#atan()Ljava/lang/Object;
+#asin()Ljava/lang/Object;
+#acos()Ljava/lang/Object;
+#tan()Ljava/lang/Object;
+#sin()Ljava/lang/Object;
+#cos()Ljava/lang/Object;
+#log1p()Ljava/lang/Object;
+#log()Ljava/lang/Object;
+#expm1()Ljava/lang/Object;
+#exp()Ljava/lang/Object;
+#pow(Ljava/lang/Object;)Ljava/lang/Object;
+#pow(I)Ljava/lang/Object;
+#pow(D)Ljava/lang/Object;
+#rootN(I)Ljava/lang/Object;
+#cbrt()Ljava/lang/Object;
+#sqrt()Ljava/lang/Object;
+#hypot(Ljava/lang/Object;)Ljava/lang/Object;
+#scalb(I)Ljava/lang/Object;
+#copySign(D)Ljava/lang/Object;
+#copySign(Ljava/lang/Object;)Ljava/lang/Object;
+#signum()Ljava/lang/Object;
+#rint()Ljava/lang/Object;
+#floor()Ljava/lang/Object;
+#ceil()Ljava/lang/Object;
+#abs()Ljava/lang/Object;
+#remainder(Ljava/lang/Object;)Ljava/lang/Object;
+#remainder(D)Ljava/lang/Object;
+#divide(D)Ljava/lang/Object;
+#multiply(D)Ljava/lang/Object;
+#subtract(D)Ljava/lang/Object;
+#add(D)Ljava/lang/Object;

+###org/apache/commons/math3/util/Decimal64Field
@3.1
+#getInstance()Lorg/apache/commons/math3/util/Decimal64Field;
+#getZero()Lorg/apache/commons/math3/util/Decimal64;
+#getOne()Lorg/apache/commons/math3/util/Decimal64;
+#getRuntimeClass()Ljava/lang/Class;
+#getOne()Ljava/lang/Object;
+#getZero()Ljava/lang/Object;

+###org/apache/commons/math3/util/OpenIntToDoubleHashMap
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(I)V
+#<init>(ID)V
+#<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V
+#get(I)D
+#containsKey(I)Z
+#iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;
+#size()I
+#remove(I)D
+#put(ID)D

+###org/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator
@3.0
+#hasNext()Z
+#key()I
+#value()D
+#advance()V

+###org/apache/commons/math3/util/DefaultTransformer
@3.0
+#<init>()V
+#transform(Ljava/lang/Object;)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/util/IterationEvent
@3.0
+#<init>(Ljava/lang/Object;I)V
+#getIterations()I

+###org/apache/commons/math3/util/IterationListener
@3.0
+#initializationPerformed(Lorg/apache/commons/math3/util/IterationEvent;)V
+#iterationPerformed(Lorg/apache/commons/math3/util/IterationEvent;)V
+#iterationStarted(Lorg/apache/commons/math3/util/IterationEvent;)V
+#terminationPerformed(Lorg/apache/commons/math3/util/IterationEvent;)V

+###org/apache/commons/math3/util/IterationManager
@3.0
+#<init>(I)V
+#addIterationListener(Lorg/apache/commons/math3/util/IterationListener;)V
+#fireInitializationEvent(Lorg/apache/commons/math3/util/IterationEvent;)V
+#fireIterationPerformedEvent(Lorg/apache/commons/math3/util/IterationEvent;)V
+#fireIterationStartedEvent(Lorg/apache/commons/math3/util/IterationEvent;)V
+#fireTerminationEvent(Lorg/apache/commons/math3/util/IterationEvent;)V
+#getIterations()I
+#getMaxIterations()I
+#incrementIterationCount()V
+#removeIterationListener(Lorg/apache/commons/math3/util/IterationListener;)V
+#resetIterationCount()V
@3.1
+#<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
@3.6
*#<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V[deprecated]
+#<init>(ILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V

+###org/apache/commons/math3/util/NumberTransformer
@3.0
+#transform(Ljava/lang/Object;)D

+###org/apache/commons/math3/util/FastMath
@3.0
+#sqrt(D)D
+#cosh(D)D
+#sinh(D)D
+#tanh(D)D
+#acosh(D)D
+#asinh(D)D
+#atanh(D)D
+#signum(D)D
+#signum(F)F
+#nextUp(D)D
+#nextUp(F)F
+#random()D
+#exp(D)D
+#expm1(D)D
+#log(D)D
+#log1p(D)D
+#log10(D)D
+#log(DD)D
+#pow(DD)D
+#sin(D)D
+#cos(D)D
+#tan(D)D
+#atan(D)D
+#atan2(DD)D
+#asin(D)D
+#acos(D)D
+#cbrt(D)D
+#toRadians(D)D
+#toDegrees(D)D
+#abs(I)I
+#abs(J)J
+#abs(F)F
+#abs(D)D
+#ulp(D)D
+#ulp(F)F
+#scalb(DI)D
+#scalb(FI)F
+#nextAfter(DD)D
+#nextAfter(FD)F
+#floor(D)D
+#ceil(D)D
+#rint(D)D
+#round(D)J
+#round(F)I
+#min(II)I
+#min(JJ)J
+#min(FF)F
+#min(DD)D
+#max(II)I
+#max(JJ)J
+#max(FF)F
+#max(DD)D
+#hypot(DD)D
+#IEEEremainder(DD)D
+#copySign(DD)D
+#copySign(FF)F
+#getExponent(D)I
+#getExponent(F)I
+#main([Ljava/lang/String;)V
@3.1
+#pow(DI)D
@3.4
+#nextDown(D)D
+#nextDown(F)F
+#toIntExact(J)I
+#incrementExact(I)I
+#incrementExact(J)J
+#decrementExact(I)I
+#decrementExact(J)J
+#addExact(II)I
+#addExact(JJ)J
+#subtractExact(II)I
+#subtractExact(JJ)J
+#multiplyExact(II)I
+#multiplyExact(JJ)J
+#floorDiv(II)I
+#floorDiv(JJ)J
+#floorMod(II)I
+#floorMod(JJ)J
@3.6
+#pow(DJ)D

+###org/apache/commons/math3/util/MathUtils
@3.0
+#hash(D)I
+#hash([D)I
+#normalizeAngle(DD)D
+#reduce(DDD)D
+#copySign(BB)B
+#copySign(SS)S
+#copySign(II)I
+#copySign(JJ)J
+#checkFinite(D)V
+#checkFinite([D)V
+#checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
+#checkNotNull(Ljava/lang/Object;)V
@3.3
+#equals(DD)Z
@3.6
+#max(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;
+#min(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/util/BigReal
@3.0
+#<init>(Ljava/math/BigDecimal;)V
+#<init>(Ljava/math/BigInteger;)V
+#<init>(Ljava/math/BigInteger;I)V
+#<init>(Ljava/math/BigInteger;ILjava/math/MathContext;)V
+#<init>(Ljava/math/BigInteger;Ljava/math/MathContext;)V
+#<init>([C)V
+#<init>([CII)V
+#<init>([CIILjava/math/MathContext;)V
+#<init>([CLjava/math/MathContext;)V
+#<init>(D)V
+#<init>(DLjava/math/MathContext;)V
+#<init>(I)V
+#<init>(ILjava/math/MathContext;)V
+#<init>(J)V
+#<init>(JLjava/math/MathContext;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/math/MathContext;)V
+#getRoundingMode()Ljava/math/RoundingMode;
+#setRoundingMode(Ljava/math/RoundingMode;)V
+#getScale()I
+#setScale(I)V
+#add(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;
+#subtract(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;
+#negate()Lorg/apache/commons/math3/util/BigReal;
+#divide(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;
+#reciprocal()Lorg/apache/commons/math3/util/BigReal;
+#multiply(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;
+#multiply(I)Lorg/apache/commons/math3/util/BigReal;
+#compareTo(Lorg/apache/commons/math3/util/BigReal;)I
+#doubleValue()D
+#bigDecimalValue()Ljava/math/BigDecimal;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getField()Lorg/apache/commons/math3/Field;
+#reciprocal()Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/commons/math3/util/MathArrays
@3.0
+#distance1([D[D)D
+#distance1([I[I)I
+#distance([D[D)D
+#distance([I[I)D
+#distanceInf([D[D)D
+#distanceInf([I[I)I
+#isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z
+#isMonotonic([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z
+#checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z
+#checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V
+#checkOrder([D)V
+#safeNorm([D)D
+#sortInPlace([D[[D)V
+#sortInPlace([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V
+#copyOf([I)[I
+#copyOf([D)[D
+#copyOf([II)[I
+#copyOf([DI)[D
+#linearCombination([D[D)D
+#linearCombination(DDDD)D
+#linearCombination(DDDDDD)D
+#linearCombination(DDDDDDDD)D
+#equals([F[F)Z
+#equalsIncludingNaN([F[F)Z
+#equals([D[D)Z
+#equalsIncludingNaN([D[D)Z
+#normalizeArray([DD)[D
@3.1
+#ebeAdd([D[D)[D
+#ebeSubtract([D[D)[D
+#ebeMultiply([D[D)[D
+#ebeDivide([D[D)[D
+#checkRectangular([[J)V
+#checkPositive([D)V
+#checkNonNegative([J)V
+#checkNonNegative([[J)V
@3.2
+#scale(D[D)[D
+#scaleInPlace(D[D)V
+#buildArray(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
+#buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
@3.3
+#convolve([D[D)[D
+#shuffle([IILorg/apache/commons/math3/util/MathArrays$Position;)V
+#shuffle([IILorg/apache/commons/math3/util/MathArrays$Position;Lorg/apache/commons/math3/random/RandomGenerator;)V
+#shuffle([ILorg/apache/commons/math3/random/RandomGenerator;)V
+#shuffle([I)V
+#natural(I)[I
+#verifyValues([DII)Z
+#verifyValues([DIIZ)Z
+#verifyValues([D[DII)Z
+#verifyValues([D[DIIZ)Z
@3.4
+#checkNotNaN([D)V
+#copyOfRange([DII)[D
+#sequence(III)[I
@3.6
+#cosAngle([D[D)D
+#checkEqualLength([D[DZ)Z
+#checkEqualLength([D[D)V
+#checkEqualLength([I[IZ)Z
+#checkEqualLength([I[I)V
+#concatenate([[D)[D
+#unique([D)[D

+###org/apache/commons/math3/util/MathArrays$Position
@3.3
+#values()[Lorg/apache/commons/math3/util/MathArrays$Position;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/util/MathArrays$Position;

+###org/apache/commons/math3/util/MathArrays$OrderDirection
@3.0
+#values()[Lorg/apache/commons/math3/util/MathArrays$OrderDirection;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/util/MathArrays$OrderDirection;

+###org/apache/commons/math3/util/MathArrays$Function
@3.1
+#evaluate([D)D
+#evaluate([DII)D

+###org/apache/commons/math3/util/Incrementor
@3.0
+#<init>()V
+#<init>(I)V
+#<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
+#setMaximalCount(I)V
+#getMaximalCount()I
+#getCount()I
+#canIncrement()Z
+#incrementCount(I)V
+#incrementCount()V
+#resetCount()V
@3.6
+#wrap(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;)Lorg/apache/commons/math3/util/Incrementor;

+###org/apache/commons/math3/util/Incrementor$MaxCountExceededCallback
@3.0
+#trigger(I)V

+###org/apache/commons/math3/util/Pair
@3.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Lorg/apache/commons/math3/util/Pair;)V
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.1
+#getFirst()Ljava/lang/Object;
+#getSecond()Ljava/lang/Object;
@3.3
+#toString()Ljava/lang/String;
+#create(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/math3/util/Pair;

+###org/apache/commons/math3/optim/SimpleBounds
@3.1
+#<init>([D[D)V
+#getLower()[D
+#getUpper()[D
+#unbounded(I)Lorg/apache/commons/math3/optim/SimpleBounds;

+###org/apache/commons/math3/optim/InitialGuess
@3.1
+#<init>([D)V
+#getInitialGuess()[D

+###org/apache/commons/math3/optim/MaxIter
@3.1
+#<init>(I)V
+#getMaxIter()I
+#unlimited()Lorg/apache/commons/math3/optim/MaxIter;

+###org/apache/commons/math3/optim/MaxEval
@3.1
+#<init>(I)V
+#getMaxEval()I
+#unlimited()Lorg/apache/commons/math3/optim/MaxEval;

+###org/apache/commons/math3/optim/SimplePointChecker
@3.1
+#<init>(DD)V
+#<init>(DDI)V
+#converged(ILorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/optim/SimpleVectorValueChecker
@3.1
+#<init>(DD)V
+#<init>(DDI)V
+#converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/optim/AbstractOptimizationProblem
@3.3
+#getEvaluationCounter()Lorg/apache/commons/math3/util/Incrementor;
+#getIterationCounter()Lorg/apache/commons/math3/util/Incrementor;
+#getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;

+###org/apache/commons/math3/optim/AbstractConvergenceChecker
@3.1
+#<init>(DD)V
+#getRelativeThreshold()D
+#getAbsoluteThreshold()D
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/optim/SimpleValueChecker
@3.1
+#<init>(DD)V
+#<init>(DDI)V
+#converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker
@3.1
+#<init>(DD)V
+#<init>(DDI)V
+#converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optim/univariate/UnivariateOptimizer;ILorg/apache/commons/math3/random/RandomGenerator;)V
+#getEvaluations()I
+#getOptima()[Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/univariate/SearchInterval
@3.1
+#<init>(DDD)V
+#<init>(DD)V
+#getMin()D
+#getMax()D
+#getStartValue()D

+###org/apache/commons/math3/optim/univariate/BrentOptimizer
@3.1
+#<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#<init>(DD)V

+###org/apache/commons/math3/optim/univariate/UnivariateObjectiveFunction
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V
+#getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/optim/univariate/BracketFinder
@3.1
+#<init>()V
+#<init>(DI)V
+#search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V
+#getMaxEvaluations()I
+#getEvaluations()I
+#getLo()D
+#getFLo()D
+#getHi()D
+#getFHi()D
+#getMid()D
+#getFMid()D

+###org/apache/commons/math3/optim/univariate/UnivariatePointValuePair
@3.1
+#<init>(DD)V
+#getPoint()D
+#getValue()D

+###org/apache/commons/math3/optim/univariate/UnivariateOptimizer
@3.1
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
+#getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
+#getStartValue()D
+#getMin()D
+#getMax()D
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/linear/LinearConstraintSet
@3.1
+#<init>([Lorg/apache/commons/math3/optim/linear/LinearConstraint;)V
+#<init>(Ljava/util/Collection;)V
+#getConstraints()Ljava/util/Collection;

+###org/apache/commons/math3/optim/linear/NonNegativeConstraint
@3.1
+#<init>(Z)V
+#isRestrictedToNonNegative()Z

+###org/apache/commons/math3/optim/linear/NoFeasibleSolutionException
@3.1
+#<init>()V

+###org/apache/commons/math3/optim/linear/UnboundedSolutionException
@3.1
+#<init>()V

+###org/apache/commons/math3/optim/linear/SimplexSolver
@3.1
+#<init>()V
+#<init>(DI)V
+#doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;
+#doOptimize()Ljava/lang/Object;
@3.2
+#<init>(D)V
+#<init>(DID)V
@3.3
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/linear/PivotSelectionRule
@3.3
+#values()[Lorg/apache/commons/math3/optim/linear/PivotSelectionRule;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optim/linear/PivotSelectionRule;

+###org/apache/commons/math3/optim/linear/LinearOptimizer
@3.1
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/linear/Relationship
@3.1
+#values()[Lorg/apache/commons/math3/optim/linear/Relationship;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optim/linear/Relationship;
+#toString()Ljava/lang/String;
+#oppositeRelationship()Lorg/apache/commons/math3/optim/linear/Relationship;

+###org/apache/commons/math3/optim/linear/LinearConstraint
@3.1
+#<init>([DLorg/apache/commons/math3/optim/linear/Relationship;D)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optim/linear/Relationship;D)V
+#<init>([DDLorg/apache/commons/math3/optim/linear/Relationship;[DD)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;DLorg/apache/commons/math3/optim/linear/Relationship;Lorg/apache/commons/math3/linear/RealVector;D)V
+#getCoefficients()Lorg/apache/commons/math3/linear/RealVector;
+#getRelationship()Lorg/apache/commons/math3/optim/linear/Relationship;
+#getValue()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/optim/linear/LinearObjectiveFunction
@3.1
+#<init>([DD)V
+#<init>(Lorg/apache/commons/math3/linear/RealVector;D)V
+#getCoefficients()Lorg/apache/commons/math3/linear/RealVector;
+#getConstantTerm()D
+#value([D)D
+#value(Lorg/apache/commons/math3/linear/RealVector;)D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/math3/optim/linear/SolutionCallback
@3.3
+#<init>()V
+#getSolution()Lorg/apache/commons/math3/optim/PointValuePair;
+#isSolutionOptimal()Z

+###org/apache/commons/math3/optim/OptimizationProblem
@3.3
+#getEvaluationCounter()Lorg/apache/commons/math3/util/Incrementor;
+#getIterationCounter()Lorg/apache/commons/math3/util/Incrementor;
+#getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;

+###org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optim/BaseMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
+#getEvaluations()I
+#getOptima()[Ljava/lang/Object;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/PointValuePair
@3.1
+#<init>([DD)V
+#<init>([DDZ)V
+#getPoint()[D
+#getPointRef()[D

+###org/apache/commons/math3/optim/OptimizationData
@3.1

+###org/apache/commons/math3/optim/ConvergenceChecker
@3.1
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/optim/PointVectorValuePair
@3.1
+#<init>([D[D)V
+#<init>([D[DZ)V
+#getPoint()[D
+#getPointRef()[D
+#getValue()[D
+#getValueRef()[D
+#getValue()Ljava/lang/Object;

+###org/apache/commons/math3/optim/BaseOptimizer
@3.1
+#getMaxEvaluations()I
+#getEvaluations()I
+#getMaxIterations()I
+#getIterations()I
+#getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
@3.3
+#optimize()Ljava/lang/Object;

+###org/apache/commons/math3/optim/BaseMultivariateOptimizer
@3.1
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
+#getStartPoint()[D
+#getLowerBound()[D
+#getUpperBound()[D

+###org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
+#getOptima()[Lorg/apache/commons/math3/optim/PointValuePair;
+#getOptima()[Ljava/lang/Object;

+###org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V
+#getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;

+###org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapter
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[DD[D)V
+#value([D)D

+###org/apache/commons/math3/optim/nonlinear/scalar/LeastSquaresConverter
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D)V
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D)V
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[DLorg/apache/commons/math3/linear/RealMatrix;)V
+#value([D)D

+###org/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunction
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V
+#getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;

+###org/apache/commons/math3/optim/nonlinear/scalar/GradientMultivariateOptimizer
@3.1
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[D)V
+#unboundedToBounded([D)[D
+#boundedToUnbounded([D)[D
+#value([D)D

+###org/apache/commons/math3/optim/nonlinear/scalar/LineSearch
@3.3
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;DDD)V
+#search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;

+###org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
@3.3
*#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V[deprecated]
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDD)V
*#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V[deprecated]
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDDLorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V

+###org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$IdentityPreconditioner
@3.1
+#<init>()V
+#precondition([D[D)[D

+###org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$BracketingStep
@3.1
+#<init>(D)V
+#getBracketingStep()D

+###org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula
@3.1
+#values()[Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;

+###org/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner
@3.1
+#precondition([D[D)[D

+###org/apache/commons/math3/optim/nonlinear/scalar/GoalType
@3.1
+#values()[Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;

+###org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer
@3.1
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
+#getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
@3.3
+#computeObjectiveValue([D)D

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer
@3.1
+#<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#getStatisticsSigmaHistory()Ljava/util/List;
+#getStatisticsMeanHistory()Ljava/util/List;
+#getStatisticsFitnessHistory()Ljava/util/List;
+#getStatisticsDHistory()Ljava/util/List;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$PopulationSize
@3.1
+#<init>(I)V
+#getPopulationSize()I

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$Sigma
@3.1
+#<init>([D)V
+#getSigma()[D

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/MultiDirectionalSimplex
@3.1
+#<init>(I)V
+#<init>(ID)V
+#<init>(IDD)V
+#<init>(IDDD)V
+#<init>([D)V
+#<init>([DDD)V
+#<init>([[D)V
+#<init>([[DDD)V
+#iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/NelderMeadSimplex
@3.1
+#<init>(I)V
+#<init>(ID)V
+#<init>(IDDDDD)V
+#<init>(IDDDD)V
+#<init>([D)V
+#<init>([DDDDD)V
+#<init>([[D)V
+#<init>([[DDDDD)V
+#iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer
@3.1
+#<init>(I)V
+#<init>(IDD)V

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer
@3.1
+#<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#<init>(DD)V
+#<init>(DDDD)V

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex
@3.1
+#getDimension()I
+#getSize()I
+#iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
+#build([D)V
+#evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
+#getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;
+#getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;

+###org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#<init>(DD)V
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/nonlinear/vector/Target
@3.1
+#<init>([D)V
+#getTarget()[D

+###org/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V
+#getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;

+###org/apache/commons/math3/optim/nonlinear/vector/Weight
@3.1
+#<init>([D)V
+#<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
+#getWeight()Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/optim/nonlinear/vector/ModelFunction
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V
+#getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;

+###org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer
@3.1
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;
+#doOptimize()Ljava/lang/Object;

+###org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer
@3.1
+#getRMS()D
+#getChiSquare()D
+#getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;
+#computeCovariances([DD)[[D
+#computeSigma([DD)[D
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer
@3.1
+#<init>()V
+#<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
+#<init>(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V
+#<init>(DDD)V
+#<init>(DDDDD)V

+###org/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer
@3.1
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
+#getOptima()[Lorg/apache/commons/math3/optim/PointVectorValuePair;
+#getOptima()[Ljava/lang/Object;

+###org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer
@3.1
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
+#getWeight()Lorg/apache/commons/math3/linear/RealMatrix;
+#getTarget()[D
+#getTargetSize()I
+#optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;

+###org/apache/commons/math3/analysis/TrivariateFunction
@3.0
+#value(DDD)D

+###org/apache/commons/math3/analysis/FunctionUtils
@3.0
+#compose([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#compose([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#add([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#add([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#multiply([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#multiply([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#combine(Lorg/apache/commons/math3/analysis/BivariateFunction;Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#collector(Lorg/apache/commons/math3/analysis/BivariateFunction;Lorg/apache/commons/math3/analysis/UnivariateFunction;D)Lorg/apache/commons/math3/analysis/MultivariateFunction;
+#collector(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/MultivariateFunction;
+#fix1stArgument(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#fix2ndArgument(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#sample(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDI)[D
@3.1
+#compose([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;
+#add([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;
*#add([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
+#multiply([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;
+#toDifferentiableUnivariateFunction(Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
+#toUnivariateDifferential(Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;[deprecated]
+#toDifferentiableMultivariateFunction(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateFunction;[deprecated]
+#toMultivariateDifferentiableFunction(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;[deprecated]
+#toDifferentiableMultivariateVectorFunction(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[deprecated]
+#toMultivariateDifferentiableVectorFunction(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[deprecated]
@3.3
*#compose([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
*#multiply([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]

+###org/apache/commons/math3/analysis/MultivariateMatrixFunction
@3.0
+#value([D)[[D

+###org/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction
@3.0
+#jacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;

+###org/apache/commons/math3/analysis/UnivariateVectorFunction
@3.0
+#value(D)[D

+###org/apache/commons/math3/analysis/DifferentiableUnivariateVectorFunction
@3.0
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateVectorFunction;

+###org/apache/commons/math3/analysis/UnivariateMatrixFunction
@3.0
+#value(D)[[D

+###org/apache/commons/math3/analysis/DifferentiableUnivariateMatrixFunction
@3.0
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateMatrixFunction;

+###org/apache/commons/math3/analysis/DifferentiableMultivariateFunction
@3.0
+#partialDerivative(I)Lorg/apache/commons/math3/analysis/MultivariateFunction;
+#gradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;

+###org/apache/commons/math3/analysis/BivariateFunction
@3.0
+#value(DD)D

+###org/apache/commons/math3/analysis/interpolation/LinearInterpolator
@3.0
+#<init>()V
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/NevilleInterpolator
@3.0
+#<init>()V
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm;
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/LoessInterpolator
@3.0
+#<init>()V
+#<init>(DI)V
+#<init>(DID)V
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
+#smooth([D[D[D)[D
+#smooth([D[D)[D
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/AkimaSplineInterpolator
@3.4
+#<init>()V
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/PiecewiseBicubicSplineInterpolator
@3.4
+#<init>()V
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/PiecewiseBicubicSplineInterpolatingFunction;
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction
@3.0
+#<init>([[D[DIILorg/apache/commons/math3/random/UnitSphereRandomVectorGenerator;)V
+#value([D)D

+###org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator
@3.2
+#<init>()V
+#addSamplePoint(Lorg/apache/commons/math3/FieldElement;[[Lorg/apache/commons/math3/FieldElement;)V
+#value(Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
+#derivatives(Lorg/apache/commons/math3/FieldElement;I)[[Lorg/apache/commons/math3/FieldElement;

+###org/apache/commons/math3/analysis/interpolation/TricubicInterpolatingFunction
@3.4
+#<init>([D[D[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D)V
+#value(DDD)D
+#isValidPoint(DDD)Z

+###org/apache/commons/math3/analysis/interpolation/TricubicInterpolator
@3.4
+#<init>()V
+#interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/interpolation/TricubicInterpolatingFunction;
+#interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/TrivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/BicubicInterpolatingFunction
@3.4
+#<init>([D[D[[D[[D[[D[[D)V
+#value(DD)D
+#isValidPoint(DD)Z

+###org/apache/commons/math3/analysis/interpolation/BicubicInterpolator
@3.4
+#<init>()V
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicInterpolatingFunction;
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator
@3.0
+#<init>(Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;DI)V
+#<init>(Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;D)V
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator
@3.0
+#interpolate([[D[D)Lorg/apache/commons/math3/analysis/MultivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator
@3.0
+#<init>()V
+#<init>(II)V
+#interpolate([[D[D)Lorg/apache/commons/math3/analysis/MultivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction
@3.0
+#<init>([D[D[[D[[D[[D[[D)V
+#value(DD)D
+#partialDerivativeX(DD)D
+#partialDerivativeY(DD)D
+#partialDerivativeXX(DD)D
+#partialDerivativeYY(DD)D
+#partialDerivativeXY(DD)D
@3.3
+#isValidPoint(DD)Z
@3.4
+#<init>([D[D[[D[[D[[D[[DZ)V

+###org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator
@3.0
+#<init>()V
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction;
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;
@3.4
+#<init>(Z)V

+###org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator
@3.0
+#<init>()V
+#<init>(I)V
+#<init>(II)V
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction;
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction
@3.0
+#<init>([D[D[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D)V
+#value(DDD)D

+###org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator
@3.0
+#interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/TrivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator
@3.0
+#<init>()V
+#interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction;
+#interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/TrivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator
@3.0
+#<init>()V
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm;
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/HermiteInterpolator
@3.1
+#<init>()V
+#addSamplePoint(D[[D)V
+#getPolynomials()[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#value(D)[D
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/interpolation/PiecewiseBicubicSplineInterpolatingFunction
@3.4
+#<init>([D[D[[D)V
+#value(DD)D
+#isValidPoint(DD)Z

+###org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator
@3.0
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/SplineInterpolator
@3.0
+#<init>()V
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
+#interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator
@3.0
+#interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;

+###org/apache/commons/math3/analysis/solvers/NewtonRaphsonSolver
@3.1
+#<init>()V
+#<init>(D)V
+#solve(ILorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;DD)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D

+###org/apache/commons/math3/analysis/solvers/BrentSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V
+#<init>(DDD)V

+###org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils
@3.0
+#solve(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D
+#solve(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D
+#forceSide(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/analysis/solvers/BracketedUnivariateSolver;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D
+#bracket(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDD)[D
+#bracket(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDDI)[D
+#midpoint(DD)D
+#isBracketing(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)Z
+#isSequence(DDD)Z
+#verifyInterval(DD)V
+#verifySequence(DDD)V
+#verifyBracketing(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)V
@3.3
+#bracket(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDDDDI)[D

+###org/apache/commons/math3/analysis/solvers/LaguerreSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V
+#<init>(DDD)V
+#doSolve()D
+#laguerre(DDDD)D
@3.1
*#laguerre(DDDD)D[deprecated]
+#solveAllComplex([DD)[Lorg/apache/commons/math3/complex/Complex;
+#solveComplex([DD)Lorg/apache/commons/math3/complex/Complex;
@3.5
+#solveAllComplex([DDI)[Lorg/apache/commons/math3/complex/Complex;
+#solveComplex([DDI)Lorg/apache/commons/math3/complex/Complex;

+###org/apache/commons/math3/analysis/solvers/MullerSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V

+###org/apache/commons/math3/analysis/solvers/DifferentiableUnivariateSolver
@3.0

+###org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver
@3.0

+###org/apache/commons/math3/analysis/solvers/NewtonSolver
@3.0
+#<init>()V
+#<init>(D)V
+#solve(ILorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;DD)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D

+###org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver
@3.1

+###org/apache/commons/math3/analysis/solvers/PegasusSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V
+#<init>(DDD)V

+###org/apache/commons/math3/analysis/solvers/MullerSolver2
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V

+###org/apache/commons/math3/analysis/solvers/RiddersSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V

+###org/apache/commons/math3/analysis/solvers/SecantSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V

+###org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver
@3.0
+#<init>()V
+#<init>(DI)V
+#<init>(DDI)V
+#<init>(DDDI)V
+#getMaximalOrder()I
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D

+###org/apache/commons/math3/analysis/solvers/BisectionSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V

+###org/apache/commons/math3/analysis/solvers/IllinoisSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V
+#<init>(DDD)V

+###org/apache/commons/math3/analysis/solvers/BracketedUnivariateSolver
@3.0
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D

+###org/apache/commons/math3/analysis/solvers/AbstractUnivariateSolver
@3.0

+###org/apache/commons/math3/analysis/solvers/BaseSecantSolver
@3.0
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D

+###org/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method
@3.0
+#values()[Lorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;

+###org/apache/commons/math3/analysis/solvers/RegulaFalsiSolver
@3.0
+#<init>()V
+#<init>(D)V
+#<init>(DD)V
+#<init>(DDD)V

+###org/apache/commons/math3/analysis/solvers/AllowedSolution
@3.0
+#values()[Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;

+###org/apache/commons/math3/analysis/solvers/UnivariateSolver
@3.0

+###org/apache/commons/math3/analysis/solvers/PolynomialSolver
@3.0

+###org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver
@3.0
+#getMaxEvaluations()I
+#getEvaluations()I
+#getMin()D
+#getMax()D
+#getStartValue()D
+#getAbsoluteAccuracy()D
+#getRelativeAccuracy()D
+#getFunctionValueAccuracy()D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;D)D

+###org/apache/commons/math3/analysis/solvers/AbstractPolynomialSolver
@3.0

+###org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver
@3.0
+#getMaxEvaluations()I
+#getEvaluations()I
+#getAbsoluteAccuracy()D
+#getRelativeAccuracy()D
+#getFunctionValueAccuracy()D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D
+#solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;D)D

+###org/apache/commons/math3/analysis/solvers/UnivariateDifferentiableSolver
@3.1

+###org/apache/commons/math3/analysis/MultivariateFunction
@3.0
+#value([D)D

+###org/apache/commons/math3/analysis/integration/SimpsonIntegrator
@3.0
+#<init>(DDII)V
+#<init>(II)V
+#<init>()V

+###org/apache/commons/math3/analysis/integration/TrapezoidIntegrator
@3.0
+#<init>(DDII)V
+#<init>(II)V
+#<init>()V

+###org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator
@3.0
+#<init>(IDDII)V
+#<init>(IDD)V
+#<init>(III)V

+###org/apache/commons/math3/analysis/integration/RombergIntegrator
@3.0
+#<init>(DDII)V
+#<init>(II)V
+#<init>()V

+###org/apache/commons/math3/analysis/integration/MidPointIntegrator
@3.3
+#<init>(DDII)V
+#<init>(II)V
+#<init>()V

+###org/apache/commons/math3/analysis/integration/UnivariateIntegrator
@3.0
+#getRelativeAccuracy()D
+#getAbsoluteAccuracy()D
+#getMinimalIterationCount()I
+#getMaximalIterationCount()I
+#integrate(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D
+#getEvaluations()I
+#getIterations()I

+###org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator
@3.0
+#getRelativeAccuracy()D
+#getAbsoluteAccuracy()D
+#getMinimalIterationCount()I
+#getMaximalIterationCount()I
+#getEvaluations()I
+#getIterations()I
+#integrate(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D

+###org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator
@3.1
+#<init>(IDDII)V
+#<init>(IDD)V
+#<init>(III)V

+###org/apache/commons/math3/analysis/integration/gauss/HermiteRuleFactory
@3.3
+#<init>()V

+###org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory
@3.1
+#<init>()V
+#<init>(Ljava/math/MathContext;)V

+###org/apache/commons/math3/analysis/integration/gauss/SymmetricGaussIntegrator
@3.3
+#<init>([D[D)V
+#<init>(Lorg/apache/commons/math3/util/Pair;)V
+#integrate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)D

+###org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator
@3.1
+#<init>([D[D)V
+#<init>(Lorg/apache/commons/math3/util/Pair;)V
+#integrate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)D
+#getNumberOfPoints()I
@3.3
+#getPoint(I)D
+#getWeight(I)D

+###org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory
@3.1
+#<init>()V
+#legendre(I)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
+#legendre(IDD)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
+#legendreHighPrecision(I)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
+#legendreHighPrecision(IDD)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
@3.3
+#hermite(I)Lorg/apache/commons/math3/analysis/integration/gauss/SymmetricGaussIntegrator;

+###org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory
@3.1
+#<init>()V
+#getRule(I)Lorg/apache/commons/math3/util/Pair;

+###org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory
@3.1
+#<init>()V

+###org/apache/commons/math3/analysis/function/Signum
@3.0
+#<init>()V
+#value(D)D

+###org/apache/commons/math3/analysis/function/Exp
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Max
@3.0
+#<init>()V
+#value(DD)D

+###org/apache/commons/math3/analysis/function/Asinh
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Atan
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Subtract
@3.0
+#<init>()V
+#value(DD)D

+###org/apache/commons/math3/analysis/function/Cosh
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
@3.6
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]

+###org/apache/commons/math3/analysis/function/Asin
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Ulp
@3.0
+#<init>()V
+#value(D)D

+###org/apache/commons/math3/analysis/function/Minus
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
@3.6
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]

+###org/apache/commons/math3/analysis/function/Add
@3.0
+#<init>()V
+#value(DD)D

+###org/apache/commons/math3/analysis/function/Sinc
@3.0
+#<init>()V
+#<init>(Z)V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Ceil
@3.0
+#<init>()V
+#value(D)D

+###org/apache/commons/math3/analysis/function/Pow
@3.0
+#<init>()V
+#value(DD)D

+###org/apache/commons/math3/analysis/function/Sinh
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
@3.6
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]

+###org/apache/commons/math3/analysis/function/Identity
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
@3.6
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]

+###org/apache/commons/math3/analysis/function/Cos
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Expm1
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Sin
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
@3.6
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]

+###org/apache/commons/math3/analysis/function/Tanh
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Log
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Divide
@3.0
+#<init>()V
+#value(DD)D

+###org/apache/commons/math3/analysis/function/Min
@3.0
+#<init>()V
+#value(DD)D

+###org/apache/commons/math3/analysis/function/Rint
@3.0
+#<init>()V
+#value(D)D

+###org/apache/commons/math3/analysis/function/Atanh
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Acosh
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Floor
@3.0
+#<init>()V
+#value(D)D

+###org/apache/commons/math3/analysis/function/Log10
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Abs
@3.0
+#<init>()V
+#value(D)D

+###org/apache/commons/math3/analysis/function/Tan
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/HarmonicOscillator
@3.0
+#<init>(DDD)V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/HarmonicOscillator$Parametric
@3.0
+#<init>()V
+#value(D[D)D
+#gradient(D[D)[D

+###org/apache/commons/math3/analysis/function/Gaussian
@3.0
+#<init>(DDD)V
+#<init>(DD)V
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Gaussian$Parametric
@3.0
+#<init>()V
+#value(D[D)D
+#gradient(D[D)[D

+###org/apache/commons/math3/analysis/function/Logit
@3.0
+#<init>()V
+#<init>(DD)V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Logit$Parametric
@3.0
+#<init>()V
+#value(D[D)D
+#gradient(D[D)[D

+###org/apache/commons/math3/analysis/function/Inverse
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Cbrt
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Power
@3.0
+#<init>(D)V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Constant
@3.0
+#<init>(D)V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
@3.6
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]

+###org/apache/commons/math3/analysis/function/StepFunction
@3.0
+#<init>([D[D)V
+#value(D)D

+###org/apache/commons/math3/analysis/function/Multiply
@3.0
+#<init>()V
+#value(DD)D

+###org/apache/commons/math3/analysis/function/Sqrt
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Log1p
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Atan2
@3.0
+#<init>()V
+#value(DD)D

+###org/apache/commons/math3/analysis/function/Logistic
@3.0
+#<init>(DDDDDD)V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Logistic$Parametric
@3.0
+#<init>()V
+#value(D[D)D
+#gradient(D[D)[D

+###org/apache/commons/math3/analysis/function/Acos
@3.0
+#<init>()V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Sigmoid
@3.0
+#<init>()V
+#<init>(DD)V
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#value(D)D
@3.1
*#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;[deprecated]
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/function/Sigmoid$Parametric
@3.0
+#<init>()V
+#value(D[D)D
+#gradient(D[D)[D

+###org/apache/commons/math3/analysis/MultivariateVectorFunction
@3.0
+#value([D)[D

+###org/apache/commons/math3/analysis/DifferentiableUnivariateFunction
@3.0
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;

+###org/apache/commons/math3/analysis/UnivariateFunction
@3.0
+#value(D)D

+###org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator
@3.1
+#<init>(ID)V
+#<init>(IDDD)V
+#getNbPoints()I
+#getStepSize()D
+#differentiate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;
+#differentiate(Lorg/apache/commons/math3/analysis/UnivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableVectorFunction;
+#differentiate(Lorg/apache/commons/math3/analysis/UnivariateMatrixFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableMatrixFunction;

+###org/apache/commons/math3/analysis/differentiation/GradientFunction
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;)V
+#value([D)[D

+###org/apache/commons/math3/analysis/differentiation/UnivariateFunctionDifferentiator
@3.1
+#differentiate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;

+###org/apache/commons/math3/analysis/differentiation/JacobianFunction
@3.1
+#<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)V
+#value([D)[[D

+###org/apache/commons/math3/analysis/differentiation/SparseGradient
@3.3
+#createConstant(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#createVariable(ID)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#numVars()I
+#getDerivative(I)D
+#getValue()D
+#getReal()D
+#add(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#addInPlace(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)V
+#add(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#subtract(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#subtract(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#multiply(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#multiplyInPlace(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)V
+#multiply(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#multiply(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#divide(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#divide(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#negate()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#getField()Lorg/apache/commons/math3/Field;
+#remainder(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#remainder(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#abs()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#ceil()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#floor()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#rint()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#round()J
+#signum()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#copySign(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#copySign(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#scalb(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#hypot(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#hypot(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#reciprocal()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#sqrt()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#cbrt()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#rootN(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#pow(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#pow(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#pow(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#pow(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#exp()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#expm1()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#log()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#log10()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#log1p()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#cos()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#sin()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#tan()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#acos()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#asin()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#atan()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#atan2(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#atan2(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#cosh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#sinh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#tanh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#acosh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#asinh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#atanh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#toDegrees()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#toRadians()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#taylor([D)D
+#compose(DD)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#linearCombination([Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;[Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#linearCombination([D[Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#atanh()Ljava/lang/Object;
+#asinh()Ljava/lang/Object;
+#acosh()Ljava/lang/Object;
+#tanh()Ljava/lang/Object;
+#sinh()Ljava/lang/Object;
+#cosh()Ljava/lang/Object;
+#atan2(Ljava/lang/Object;)Ljava/lang/Object;
+#atan()Ljava/lang/Object;
+#asin()Ljava/lang/Object;
+#acos()Ljava/lang/Object;
+#tan()Ljava/lang/Object;
+#sin()Ljava/lang/Object;
+#cos()Ljava/lang/Object;
+#log1p()Ljava/lang/Object;
+#log()Ljava/lang/Object;
+#expm1()Ljava/lang/Object;
+#exp()Ljava/lang/Object;
+#pow(Ljava/lang/Object;)Ljava/lang/Object;
+#pow(I)Ljava/lang/Object;
+#pow(D)Ljava/lang/Object;
+#rootN(I)Ljava/lang/Object;
+#cbrt()Ljava/lang/Object;
+#sqrt()Ljava/lang/Object;
+#reciprocal()Ljava/lang/Object;
+#hypot(Ljava/lang/Object;)Ljava/lang/Object;
+#scalb(I)Ljava/lang/Object;
+#copySign(D)Ljava/lang/Object;
+#copySign(Ljava/lang/Object;)Ljava/lang/Object;
+#signum()Ljava/lang/Object;
+#rint()Ljava/lang/Object;
+#floor()Ljava/lang/Object;
+#ceil()Ljava/lang/Object;
+#abs()Ljava/lang/Object;
+#remainder(Ljava/lang/Object;)Ljava/lang/Object;
+#remainder(D)Ljava/lang/Object;
+#divide(D)Ljava/lang/Object;
+#multiply(D)Ljava/lang/Object;
+#subtract(D)Ljava/lang/Object;
+#add(D)Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableMatrixFunction
@3.1
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/differentiation/UnivariateMatrixFunctionDifferentiator
@3.1
+#differentiate(Lorg/apache/commons/math3/analysis/UnivariateMatrixFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableMatrixFunction;

+###org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableVectorFunction
@3.1
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/differentiation/UnivariateVectorFunctionDifferentiator
@3.1
+#differentiate(Lorg/apache/commons/math3/analysis/UnivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableVectorFunction;

+###org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction
@3.1
+#value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction
@3.1
+#value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/differentiation/DSCompiler
@3.1
+#getCompiler(II)Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
+#getPartialDerivativeIndex([I)I
+#getPartialDerivativeOrders(I)[I
+#getFreeParameters()I
+#getOrder()I
+#getSize()I
+#linearCombination(D[DID[DI[DI)V
+#linearCombination(D[DID[DID[DI[DI)V
+#linearCombination(D[DID[DID[DID[DI[DI)V
+#add([DI[DI[DI)V
+#subtract([DI[DI[DI)V
+#multiply([DI[DI[DI)V
+#divide([DI[DI[DI)V
+#remainder([DI[DI[DI)V
+#pow([DID[DI)V
+#pow([DII[DI)V
+#pow([DI[DI[DI)V
+#rootN([DII[DI)V
+#exp([DI[DI)V
+#expm1([DI[DI)V
+#log([DI[DI)V
+#log1p([DI[DI)V
+#log10([DI[DI)V
+#cos([DI[DI)V
+#sin([DI[DI)V
+#tan([DI[DI)V
+#acos([DI[DI)V
+#asin([DI[DI)V
+#atan([DI[DI)V
+#atan2([DI[DI[DI)V
+#cosh([DI[DI)V
+#sinh([DI[DI)V
+#tanh([DI[DI)V
+#acosh([DI[DI)V
+#asinh([DI[DI)V
+#atanh([DI[DI)V
+#compose([DI[D[DI)V
+#taylor([DI[D)D
+#checkCompatibility(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
@3.3
+#pow(D[DI[DI)V

+###org/apache/commons/math3/analysis/differentiation/DerivativeStructure
@3.1
+#<init>(II)V
+#<init>(IID)V
+#<init>(IIID)V
+#<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
+#<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
+#<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
+#<init>(II[D)V
+#getFreeParameters()I
+#getOrder()I
+#getValue()D
+#getPartialDerivative([I)D
+#getAllDerivatives()[D
+#add(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#add(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#subtract(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#subtract(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#multiply(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#multiply(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#multiply(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#divide(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#divide(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#remainder(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#remainder(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#negate()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#abs()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#ceil()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#floor()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#rint()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#round()J
+#signum()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#copySign(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#getExponent()I
+#scalb(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#hypot(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#compose([D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#reciprocal()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#sqrt()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#cbrt()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#rootN(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#getField()Lorg/apache/commons/math3/Field;
+#pow(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#pow(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#pow(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#exp()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#expm1()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#log()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#log1p()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#log10()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#cos()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#sin()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#tan()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#acos()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#asin()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#atan()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#atan2(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#cosh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#sinh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#tanh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#acosh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#asinh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#atanh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#toDegrees()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#toRadians()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#taylor([D)D
+#reciprocal()Ljava/lang/Object;
+#divide(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(I)Ljava/lang/Object;
+#negate()Ljava/lang/Object;
+#subtract(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Ljava/lang/Object;
@3.2
+#getReal()D
+#copySign(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#hypot(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#atan2(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#linearCombination([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#linearCombination([D[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
+#linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
+#linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#atanh()Ljava/lang/Object;
+#asinh()Ljava/lang/Object;
+#acosh()Ljava/lang/Object;
+#tanh()Ljava/lang/Object;
+#sinh()Ljava/lang/Object;
+#cosh()Ljava/lang/Object;
+#atan2(Ljava/lang/Object;)Ljava/lang/Object;
+#atan()Ljava/lang/Object;
+#asin()Ljava/lang/Object;
+#acos()Ljava/lang/Object;
+#tan()Ljava/lang/Object;
+#sin()Ljava/lang/Object;
+#cos()Ljava/lang/Object;
+#log1p()Ljava/lang/Object;
+#log()Ljava/lang/Object;
+#expm1()Ljava/lang/Object;
+#exp()Ljava/lang/Object;
+#pow(Ljava/lang/Object;)Ljava/lang/Object;
+#pow(I)Ljava/lang/Object;
+#pow(D)Ljava/lang/Object;
+#rootN(I)Ljava/lang/Object;
+#cbrt()Ljava/lang/Object;
+#sqrt()Ljava/lang/Object;
+#hypot(Ljava/lang/Object;)Ljava/lang/Object;
+#scalb(I)Ljava/lang/Object;
+#copySign(D)Ljava/lang/Object;
+#copySign(Ljava/lang/Object;)Ljava/lang/Object;
+#signum()Ljava/lang/Object;
+#rint()Ljava/lang/Object;
+#floor()Ljava/lang/Object;
+#ceil()Ljava/lang/Object;
+#abs()Ljava/lang/Object;
+#remainder(Ljava/lang/Object;)Ljava/lang/Object;
+#remainder(D)Ljava/lang/Object;
+#divide(D)Ljava/lang/Object;
+#multiply(D)Ljava/lang/Object;
+#subtract(D)Ljava/lang/Object;
+#add(D)Ljava/lang/Object;
@3.3
+#createConstant(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
+#pow(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction
@3.1
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm
@3.0
+#<init>([D[D)V
+#value(D)D
+#degree()I
+#getInterpolatingPoints()[D
+#getInterpolatingValues()[D
+#getCoefficients()[D
+#evaluate([D[DD)D
+#verifyInterpolationArray([D[DZ)Z

+###org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm
@3.0
+#<init>([D[D)V
+#value(D)D
+#degree()I
+#getNewtonCoefficients()[D
+#getCenters()[D
+#getCoefficients()[D
+#evaluate([D[DD)D
@3.1
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/polynomials/PolynomialsUtils
@3.0
+#createChebyshevPolynomial(I)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#createHermitePolynomial(I)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#createLaguerrePolynomial(I)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#createLegendrePolynomial(I)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#createJacobiPolynomial(III)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#shift([DD)[D

+###org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction
@3.0
+#<init>([D[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)V
+#value(D)D
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#polynomialSplineDerivative()Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
+#getN()I
+#getPolynomials()[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#getKnots()[D
@3.1
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
@3.3
+#isValidPoint(D)Z

+###org/apache/commons/math3/analysis/polynomials/PolynomialFunction
@3.0
+#<init>([D)V
+#value(D)D
+#degree()I
+#getCoefficients()[D
+#add(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#subtract(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#negate()Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#multiply(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#polynomialDerivative()Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
+#derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.1
+#value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;

+###org/apache/commons/math3/analysis/polynomials/PolynomialFunction$Parametric
@3.0
+#<init>()V
+#gradient(D[D)[D
+#value(D[D)D

+###org/apache/commons/math3/analysis/ParametricUnivariateFunction
@3.0
+#value(D[D)D
+#gradient(D[D)[D

+###org/apache/commons/math3/fitting/HarmonicCurveFitter
@3.3
+#create()Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;
+#withStartPoint([D)Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;
+#withMaxIterations(I)Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;

+###org/apache/commons/math3/fitting/HarmonicCurveFitter$ParameterGuesser
@3.3
+#<init>(Ljava/util/Collection;)V
+#guess()[D

+###org/apache/commons/math3/fitting/HarmonicFitter
@3.1
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
+#fit([D)[D
+#fit()[D

+###org/apache/commons/math3/fitting/HarmonicFitter$ParameterGuesser
@3.1
+#<init>([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V
+#guess()[D

+###org/apache/commons/math3/fitting/GaussianFitter
@3.1
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
+#fit([D)[D
+#fit()[D

+###org/apache/commons/math3/fitting/GaussianFitter$ParameterGuesser
@3.1
+#<init>([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V
+#guess()[D

+###org/apache/commons/math3/fitting/PolynomialCurveFitter
@3.3
+#create(I)Lorg/apache/commons/math3/fitting/PolynomialCurveFitter;
+#withStartPoint([D)Lorg/apache/commons/math3/fitting/PolynomialCurveFitter;
+#withMaxIterations(I)Lorg/apache/commons/math3/fitting/PolynomialCurveFitter;

+###org/apache/commons/math3/fitting/SimpleCurveFitter
@3.4
+#create(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)Lorg/apache/commons/math3/fitting/SimpleCurveFitter;
+#withStartPoint([D)Lorg/apache/commons/math3/fitting/SimpleCurveFitter;
+#withMaxIterations(I)Lorg/apache/commons/math3/fitting/SimpleCurveFitter;

+###org/apache/commons/math3/fitting/AbstractCurveFitter
@3.3
+#<init>()V
+#fit(Ljava/util/Collection;)[D

+###org/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction
@3.3
+#<init>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;Ljava/util/Collection;)V
+#getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
+#getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;

+###org/apache/commons/math3/fitting/GaussianCurveFitter
@3.3
+#create()Lorg/apache/commons/math3/fitting/GaussianCurveFitter;
+#withStartPoint([D)Lorg/apache/commons/math3/fitting/GaussianCurveFitter;
+#withMaxIterations(I)Lorg/apache/commons/math3/fitting/GaussianCurveFitter;

+###org/apache/commons/math3/fitting/GaussianCurveFitter$ParameterGuesser
@3.3
+#<init>(Ljava/util/Collection;)V
+#guess()[D

+###org/apache/commons/math3/fitting/WeightedObservedPoints
@3.3
+#<init>()V
+#add(DD)V
+#add(DDD)V
+#add(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V
+#toList()Ljava/util/List;
+#clear()V

+###org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory
@3.3
+#create(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optim/ConvergenceChecker;II)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
+#create(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/optim/ConvergenceChecker;II)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
+#create(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;[D[DLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/optim/ConvergenceChecker;II)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
+#weightMatrix(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
+#weightDiagonal(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
+#countEvaluations(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/util/Incrementor;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
+#evaluationChecker(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/optim/ConvergenceChecker;
+#model(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;
@3.4
+#create(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/optim/ConvergenceChecker;IIZLorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;

+###org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder
@3.3
+#<init>()V
+#build()Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
+#maxEvaluations(I)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#maxIterations(I)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#checker(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#checkerPair(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#model(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#model(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#target(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#target([D)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#start(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#start([D)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#weight(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
@3.4
+#lazyEvaluation(Z)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
+#parameterValidator(Lorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;

+###org/apache/commons/math3/fitting/leastsquares/ValueAndJacobianFunction
@3.4
+#computeValue([D)Lorg/apache/commons/math3/linear/RealVector;
+#computeJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;

+###org/apache/commons/math3/fitting/leastsquares/ParameterValidator
@3.4
+#validate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;

+###org/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction
@3.3
+#value(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/util/Pair;

+###org/apache/commons/math3/fitting/leastsquares/EvaluationRmsChecker
@3.4
+#<init>(D)V
+#<init>(DD)V
+#converged(ILorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;)Z
+#converged(ILjava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer
@3.3
+#<init>()V
+#<init>(Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;)V
+#getDecomposition()Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;
+#withDecomposition(Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;)Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer;
+#optimize(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;
+#toString()Ljava/lang/String;

+###org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition
@3.3
+#values()[Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;

+###org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer
@3.3
+#<init>()V
+#<init>(DDDDD)V
+#withInitialStepBoundFactor(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
+#withCostRelativeTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
+#withParameterRelativeTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
+#withOrthoTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
+#withRankingThreshold(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
+#getInitialStepBoundFactor()D
+#getCostRelativeTolerance()D
+#getParameterRelativeTolerance()D
+#getOrthoTolerance()D
+#getRankingThreshold()D
+#optimize(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;

+###org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter
@3.3
+#<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)V
+#getStart()Lorg/apache/commons/math3/linear/RealVector;
+#getObservationSize()I
+#getParameterSize()I
+#evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;
+#getEvaluationCounter()Lorg/apache/commons/math3/util/Incrementor;
+#getIterationCounter()Lorg/apache/commons/math3/util/Incrementor;
+#getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;

+###org/apache/commons/math3/fitting/leastsquares/AbstractEvaluation
@3.3
+#getCovariances(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#getSigma(D)Lorg/apache/commons/math3/linear/RealVector;
+#getRMS()D
+#getCost()D

+###org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer
@3.3
+#optimize(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;

+###org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum
@3.3
+#getEvaluations()I
+#getIterations()I

+###org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem
@3.3
+#getStart()Lorg/apache/commons/math3/linear/RealVector;
+#getObservationSize()I
+#getParameterSize()I
+#evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;

+###org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation
@3.3
+#getCovariances(D)Lorg/apache/commons/math3/linear/RealMatrix;
+#getSigma(D)Lorg/apache/commons/math3/linear/RealVector;
+#getRMS()D
+#getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;
+#getCost()D
+#getResiduals()Lorg/apache/commons/math3/linear/RealVector;
+#getPoint()Lorg/apache/commons/math3/linear/RealVector;

+###org/apache/commons/math3/fitting/WeightedObservedPoint
@3.1
+#<init>(DDD)V
+#getWeight()D
+#getX()D
+#getY()D

+###org/apache/commons/math3/fitting/CurveFitter
@3.1
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
+#addObservedPoint(DD)V
+#addObservedPoint(DDD)V
+#addObservedPoint(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V
+#getObservations()[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;
+#clearObservations()V
+#fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
+#fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D

+###org/apache/commons/math3/fitting/PolynomialFitter
@3.1
+#<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
+#fit(I[D)[D
+#fit([D)[D

+###org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection
@3.6
+#values()[Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;

+###org/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection
@3.6
+#values()[Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;

+###org/apache/commons/math3/ml/neuralnet/twod/util/TopographicErrorHistogram
@3.6
+#<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D

+###org/apache/commons/math3/ml/neuralnet/twod/util/MapDataVisualization
@3.6
+#computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D

+###org/apache/commons/math3/ml/neuralnet/twod/util/UnifiedDistanceMatrix
@3.6
+#<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)[[D

+###org/apache/commons/math3/ml/neuralnet/twod/util/LocationFinder$Location
@3.6
+#<init>(II)V
+#getRow()I
+#getColumn()I

+###org/apache/commons/math3/ml/neuralnet/twod/util/MapVisualization
@3.6
+#computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)[[D

+###org/apache/commons/math3/ml/neuralnet/twod/util/LocationFinder
@3.6
+#<init>(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)V
+#getLocation(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)Lorg/apache/commons/math3/ml/neuralnet/twod/util/LocationFinder$Location;

+###org/apache/commons/math3/ml/neuralnet/twod/util/SmoothedDataHistogram
@3.6
+#<init>(ILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D

+###org/apache/commons/math3/ml/neuralnet/twod/util/HitHistogram
@3.6
+#<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D

+###org/apache/commons/math3/ml/neuralnet/twod/util/QuantizationError
@3.6
+#<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
+#computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D

+###org/apache/commons/math3/analysis/RealFieldUnivariateFunction
@3.6
+#value(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/analysis/solvers/FieldBracketingNthOrderBrentSolver
@3.6
+#<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;I)V
+#getMaximalOrder()I
+#getMaxEvaluations()I
+#getEvaluations()I
+#getAbsoluteAccuracy()Lorg/apache/commons/math3/RealFieldElement;
+#getRelativeAccuracy()Lorg/apache/commons/math3/RealFieldElement;
+#getFunctionValueAccuracy()Lorg/apache/commons/math3/RealFieldElement;
+#solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;
+#solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/analysis/solvers/BracketedRealFieldUnivariateSolver
@3.6
+#getMaxEvaluations()I
+#getEvaluations()I
+#getAbsoluteAccuracy()Lorg/apache/commons/math3/RealFieldElement;
+#getRelativeAccuracy()Lorg/apache/commons/math3/RealFieldElement;
+#getFunctionValueAccuracy()Lorg/apache/commons/math3/RealFieldElement;
+#solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;
+#solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/analysis/interpolation/MicrosphereProjectionInterpolator
@3.6
+#<init>(IIDDDDZD)V
+#<init>(Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;DZD)V
+#interpolate([[D[D)Lorg/apache/commons/math3/analysis/MultivariateFunction;

+###org/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere2D
@3.6
+#<init>(IDDD)V
+#copy()Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere2D;
+#copy()Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;

+###org/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere
@3.6
+#<init>(IIDDDLorg/apache/commons/math3/random/UnitSphereRandomVectorGenerator;)V
+#copy()Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;
+#getDimension()I
+#getSize()I
+#value([D[[D[DDD)D

+###org/apache/commons/math3/ode/MultistepFieldIntegrator
@3.6
+#getStarterIntegrator()Lorg/apache/commons/math3/ode/FirstOrderFieldIntegrator;
+#setStarterIntegrator(Lorg/apache/commons/math3/ode/FirstOrderFieldIntegrator;)V
+#getMinReduction()D
+#setMinReduction(D)V
+#getMaxGrowth()D
+#setMaxGrowth(D)V
+#getSafety()D
+#setSafety(D)V
+#getNSteps()I

+###org/apache/commons/math3/ode/nonstiff/AdamsFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDDDD)V
+#<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDD[D[D)V
+#integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
+#updateHighOrderDerivativesPhase2([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)V

+###org/apache/commons/math3/ode/nonstiff/EulerFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/nonstiff/MidpointFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/nonstiff/GillFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/nonstiff/AdamsBashforthFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;IDDDD)V
+#<init>(Lorg/apache/commons/math3/Field;IDD[D[D)V
+#integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;

+###org/apache/commons/math3/ode/nonstiff/HighamHall54FieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;DDDD)V
+#<init>(Lorg/apache/commons/math3/Field;DD[D[D)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;
+#getOrder()I

+###org/apache/commons/math3/ode/nonstiff/AdamsMoultonFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;IDDDD)V
+#<init>(Lorg/apache/commons/math3/Field;IDD[D[D)V
+#integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;

+###org/apache/commons/math3/ode/nonstiff/FieldButcherArrayProvider
@3.6
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/nonstiff/LutherFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/nonstiff/DormandPrince853FieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;DDDD)V
+#<init>(Lorg/apache/commons/math3/Field;DD[D[D)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;
+#getOrder()I

+###org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaFieldIntegrator
@3.6
+#getOrder()I
+#getSafety()Lorg/apache/commons/math3/RealFieldElement;
+#setSafety(Lorg/apache/commons/math3/RealFieldElement;)V
+#integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getMinReduction()Lorg/apache/commons/math3/RealFieldElement;
+#setMinReduction(Lorg/apache/commons/math3/RealFieldElement;)V
+#getMaxGrowth()Lorg/apache/commons/math3/RealFieldElement;
+#setMaxGrowth(Lorg/apache/commons/math3/RealFieldElement;)V

+###org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;DDDD)V
+#<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;DD[D[D)V
+#setStepSizeControl(DDDD)V
+#setStepSizeControl(DD[D[D)V
+#setInitialStepSize(Lorg/apache/commons/math3/RealFieldElement;)V
+#initializeStep(ZI[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/RealFieldElement;
+#getMinStep()Lorg/apache/commons/math3/RealFieldElement;
+#getMaxStep()Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/nonstiff/RungeKuttaFieldIntegrator
@3.6
+#integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#singleStep(Lorg/apache/commons/math3/ode/FirstOrderFieldDifferentialEquations;Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/nonstiff/AdamsNordsieckFieldTransformer
@3.6
+#getInstance(Lorg/apache/commons/math3/Field;I)Lorg/apache/commons/math3/ode/nonstiff/AdamsNordsieckFieldTransformer;
+#initializeHighOrderDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
+#updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
+#updateHighOrderDerivativesPhase2([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)V

+###org/apache/commons/math3/ode/nonstiff/DormandPrince54FieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;DDDD)V
+#<init>(Lorg/apache/commons/math3/Field;DD[D[D)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;
+#getOrder()I

+###org/apache/commons/math3/ode/nonstiff/ThreeEighthesFieldIntegrator
@3.6
+#<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
+#getC()[Lorg/apache/commons/math3/RealFieldElement;
+#getA()[[Lorg/apache/commons/math3/RealFieldElement;
+#getB()[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/FirstOrderFieldDifferentialEquations
@3.6
+#getDimension()I
+#init(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
+#computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/events/FieldEventState
@3.6
+#<init>(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DLorg/apache/commons/math3/RealFieldElement;ILorg/apache/commons/math3/analysis/solvers/BracketedRealFieldUnivariateSolver;)V
+#getEventHandler()Lorg/apache/commons/math3/ode/events/FieldEventHandler;
+#getMaxCheckInterval()D
+#getConvergence()Lorg/apache/commons/math3/RealFieldElement;
+#getMaxIterationCount()I
+#reinitializeBegin(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)V
+#evaluateStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)Z
+#getEventTime()Lorg/apache/commons/math3/RealFieldElement;
+#stepAccepted(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)V
+#stop()Z
+#reset(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/ode/FieldODEState;

+###org/apache/commons/math3/ode/events/Action
@3.6
+#values()[Lorg/apache/commons/math3/ode/events/Action;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/events/Action;

+###org/apache/commons/math3/ode/events/FieldEventHandler
@3.6
+#init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V
+#g(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/RealFieldElement;
+#eventOccurred(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Z)Lorg/apache/commons/math3/ode/events/Action;
+#resetState(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/ode/FieldODEState;

+###org/apache/commons/math3/ode/FieldSecondaryEquations
@3.6
+#getDimension()I
+#init(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
+#computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/sampling/FieldStepHandler
@3.6
+#init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V
+#handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V

+###org/apache/commons/math3/ode/sampling/FieldStepInterpolator
@3.6
+#getPreviousState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getCurrentState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getInterpolatedState(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#isForward()Z

+###org/apache/commons/math3/ode/sampling/FieldStepNormalizer
@3.6
+#<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;)V
+#<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;)V
+#<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V
+#<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V
+#init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V
+#handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V

+###org/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator
@3.6
+#restrictStep(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator;
+#getGlobalPreviousState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getGlobalCurrentState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getPreviousState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getCurrentState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getInterpolatedState(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#isForward()Z

+###org/apache/commons/math3/ode/sampling/FieldFixedStepHandler
@3.6
+#init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V
+#handleStep(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Z)V

+###org/apache/commons/math3/ode/FirstOrderFieldIntegrator
@3.6
+#getName()Ljava/lang/String;
+#addStepHandler(Lorg/apache/commons/math3/ode/sampling/FieldStepHandler;)V
+#getStepHandlers()Ljava/util/Collection;
+#clearStepHandlers()V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DDI)V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DDILorg/apache/commons/math3/analysis/solvers/BracketedRealFieldUnivariateSolver;)V
+#getEventHandlers()Ljava/util/Collection;
+#clearEventHandlers()V
+#getCurrentStepStart()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getCurrentSignedStepsize()Lorg/apache/commons/math3/RealFieldElement;
+#setMaxEvaluations(I)V
+#getMaxEvaluations()I
+#getEvaluations()I
+#integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;

+###org/apache/commons/math3/ode/FieldODEState
@3.6
+#<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)V
+#getTime()Lorg/apache/commons/math3/RealFieldElement;
+#getStateDimension()I
+#getState()[Lorg/apache/commons/math3/RealFieldElement;
+#getNumberOfSecondaryStates()I
+#getSecondaryStateDimension(I)I
+#getSecondaryState(I)[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/FieldExpandableODE
@3.6
+#<init>(Lorg/apache/commons/math3/ode/FirstOrderFieldDifferentialEquations;)V
+#getMapper()Lorg/apache/commons/math3/ode/FieldEquationsMapper;
+#addSecondaryEquations(Lorg/apache/commons/math3/ode/FieldSecondaryEquations;)I
+#init(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
+#computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/FieldEquationsMapper
@3.6
+#getNumberOfEquations()I
+#getTotalDimension()I
+#mapState(Lorg/apache/commons/math3/ode/FieldODEState;)[Lorg/apache/commons/math3/RealFieldElement;
+#mapDerivative(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)[Lorg/apache/commons/math3/RealFieldElement;
+#mapStateAndDerivative(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#extractEquationData(I[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
+#insertEquationData(I[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V

+###org/apache/commons/math3/ode/FieldODEStateAndDerivative
@3.6
+#<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
+#<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)V
+#getDerivative()[Lorg/apache/commons/math3/RealFieldElement;
+#getSecondaryDerivative(I)[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/ode/ContinuousOutputFieldModel
@3.6
+#<init>()V
+#append(Lorg/apache/commons/math3/ode/ContinuousOutputFieldModel;)V
+#init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V
+#handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V
+#getInitialTime()Lorg/apache/commons/math3/RealFieldElement;
+#getFinalTime()Lorg/apache/commons/math3/RealFieldElement;
+#getInterpolatedState(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;

+###org/apache/commons/math3/ode/AbstractFieldIntegrator
@3.6
+#getField()Lorg/apache/commons/math3/Field;
+#getName()Ljava/lang/String;
+#addStepHandler(Lorg/apache/commons/math3/ode/sampling/FieldStepHandler;)V
+#getStepHandlers()Ljava/util/Collection;
+#clearStepHandlers()V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DDI)V
+#addEventHandler(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DDILorg/apache/commons/math3/analysis/solvers/BracketedRealFieldUnivariateSolver;)V
+#getEventHandlers()Ljava/util/Collection;
+#clearEventHandlers()V
+#getCurrentStepStart()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
+#getCurrentSignedStepsize()Lorg/apache/commons/math3/RealFieldElement;
+#setMaxEvaluations(I)V
+#getMaxEvaluations()I
+#getEvaluations()I
+#computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;

+###org/apache/commons/math3/geometry/euclidean/threed/RotationConvention
@3.6
+#values()[Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;

+###org/apache/commons/math3/util/IntegerSequence
@3.6
+#range(II)Lorg/apache/commons/math3/util/IntegerSequence$Range;
+#range(III)Lorg/apache/commons/math3/util/IntegerSequence$Range;

+###org/apache/commons/math3/util/IntegerSequence$Range
@3.6
+#<init>(III)V
+#size()I
+#iterator()Ljava/util/Iterator;

+###org/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback
@3.6
+#trigger(I)V

+###org/apache/commons/math3/util/IntegerSequence$Incrementor
@3.6
+#create()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
+#withStart(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
+#withMaximalCount(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
+#withIncrement(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
+#withCallback(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
+#getMaximalCount()I
+#getCount()I
+#canIncrement()Z
+#canIncrement(I)Z
+#increment(I)V
+#increment()V
+#hasNext()Z
+#next()Ljava/lang/Integer;
+#remove()V
+#next()Ljava/lang/Object;
