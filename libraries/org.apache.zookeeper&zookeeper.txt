
+###org/apache/zookeeper/AddWatchMode
@3.6.0
+#values()[Lorg/apache/zookeeper/AddWatchMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/AddWatchMode;
+#getMode()I

+###org/apache/zookeeper/AsyncCallback$ACLCallback
@3.3.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/util/List;Lorg/apache/zookeeper/data/Stat;)V

+###org/apache/zookeeper/AsyncCallback$AllChildrenNumberCallback
@3.6.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;I)V

+###org/apache/zookeeper/AsyncCallback$Children2Callback
@3.3.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/util/List;Lorg/apache/zookeeper/data/Stat;)V

+###org/apache/zookeeper/AsyncCallback$ChildrenCallback
@3.3.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/util/List;)V

+###org/apache/zookeeper/AsyncCallback$Create2Callback
@3.5.0-alpha
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)V

+###org/apache/zookeeper/AsyncCallback$DataCallback
@3.3.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;[BLorg/apache/zookeeper/data/Stat;)V

+###org/apache/zookeeper/AsyncCallback$EphemeralsCallback
@3.6.0
+#processResult(ILjava/lang/Object;Ljava/util/List;)V

+###org/apache/zookeeper/AsyncCallback$MultiCallback
@3.4.7
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/util/List;)V

+###org/apache/zookeeper/AsyncCallback$StatCallback
@3.3.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V

+###org/apache/zookeeper/AsyncCallback$StringCallback
@3.3.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V

+###org/apache/zookeeper/AsyncCallback$VoidCallback
@3.3.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;)V

+###org/apache/zookeeper/AsyncCallback
@3.3.0

+###org/apache/zookeeper/ClientCnxn
@3.3.0
+#getSessionId()J
+#getSessionPasswd()[B
+#getSessionTimeout()I
+#toString()Ljava/lang/String;
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;J[B)V
+#getDisableAutoResetWatch()Z
+#setDisableAutoResetWatch(Z)V
+#start()V
+#disconnect()V
+#close()V
+#submitRequest(Lorg/apache/zookeeper/proto/RequestHeader;Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/ZooKeeper$WatchRegistration;)Lorg/apache/zookeeper/proto/ReplyHeader;
+#addAuthInfo(Ljava/lang/String;[B)V
@3.4.0
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/HostProvider;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;Lorg/apache/zookeeper/ClientCnxnSocket;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/HostProvider;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;Lorg/apache/zookeeper/ClientCnxnSocket;J[BZ)V
+#queuePacket(Lorg/apache/zookeeper/proto/RequestHeader;Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/AsyncCallback;)V
-#<init>(Ljava/lang/String;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;)V
-#<init>(Ljava/lang/String;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;J[B)V
@3.4.4
+#getLastZxid()J
+#getXid()I
+#enableWrite()V
+#sendPacket(Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/AsyncCallback;I)V
-#queuePacket(Lorg/apache/zookeeper/proto/RequestHeader;Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/AsyncCallback;)V
@3.5.0-alpha
+#submitRequest(Lorg/apache/zookeeper/proto/RequestHeader;Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/ZooKeeper$WatchRegistration;Lorg/apache/zookeeper/WatchDeregistration;)Lorg/apache/zookeeper/proto/ReplyHeader;
@3.5.1-alpha
+#saslCompleted()V
-#enableWrite()V
@3.5.2-alpha
-#getDisableAutoResetWatch()Z
-#setDisableAutoResetWatch(Z)V
@3.5.3-beta
+#queuePacket(Lorg/apache/zookeeper/proto/RequestHeader;Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/AsyncCallback;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/ZooKeeper$WatchRegistration;)Lorg/apache/zookeeper/ClientCnxn$Packet;
+#queuePacket(Lorg/apache/zookeeper/proto/RequestHeader;Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Lorg/apache/jute/Record;Lorg/apache/zookeeper/AsyncCallback;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/ZooKeeper$WatchRegistration;Lorg/apache/zookeeper/WatchDeregistration;)Lorg/apache/zookeeper/ClientCnxn$Packet;
@3.5.10
+#getZooKeeperSaslClient()Lorg/apache/zookeeper/client/ZooKeeperSaslClient;
@3.6.0
-#getZooKeeperSaslClient()Lorg/apache/zookeeper/client/ZooKeeperSaslClient;
@3.6.2
+#isInEventThread()Z
@3.7.0
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/HostProvider;ILorg/apache/zookeeper/client/ZKClientConfig;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/ClientCnxnSocket;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/HostProvider;ILorg/apache/zookeeper/client/ZKClientConfig;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/ClientCnxnSocket;J[BZ)V
-#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/HostProvider;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;Lorg/apache/zookeeper/ClientCnxnSocket;Z)V
-#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/HostProvider;ILorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/ClientWatchManager;Lorg/apache/zookeeper/ClientCnxnSocket;J[BZ)V
@3.7.1
+#getZooKeeperSaslClient()Lorg/apache/zookeeper/client/ZooKeeperSaslClient;

+###org/apache/zookeeper/ClientCnxnSocketNIO
@3.4.0
@3.4.4
+#disableWrite()V
@3.5.1-alpha
-#disableWrite()V

+###org/apache/zookeeper/ClientCnxnSocketNetty
@3.5.1-alpha
+#<init>()V
@3.5.2-alpha
-#<init>()V

+###org/apache/zookeeper/ClientWatchManager
@3.3.0
+#materialize(Lorg/apache/zookeeper/Watcher$Event$KeeperState;Lorg/apache/zookeeper/Watcher$Event$EventType;Ljava/lang/String;)Ljava/util/Set;

+###org/apache/zookeeper/CreateMode
@3.3.0
+#values()[Lorg/apache/zookeeper/CreateMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/CreateMode;
+#isEphemeral()Z
+#isSequential()Z
+#toFlag()I
+#fromFlag(I)Lorg/apache/zookeeper/CreateMode;
@3.5.1-alpha
+#isContainer()Z
+#fromFlag(ILorg/apache/zookeeper/CreateMode;)Lorg/apache/zookeeper/CreateMode;
@3.5.3-beta
+#isTTL()Z

+###org/apache/zookeeper/DigestWatcher
@3.6.0
+#process(J)V

+###org/apache/zookeeper/Environment$Entry
@3.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/Environment
@3.3.0
+#<init>()V
+#list()Ljava/util/List;
+#logEnv(Ljava/lang/String;Lorg/apache/log4j/Logger;)V
@3.4.0
+#logEnv(Ljava/lang/String;Lorg/slf4j/Logger;)V
-#logEnv(Ljava/lang/String;Lorg/apache/log4j/Logger;)V

+###org/apache/zookeeper/KeeperException$APIErrorException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$AuthFailedException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$BadArgumentsException
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$BadVersionException
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$Code
@3.3.0
+#values()[Lorg/apache/zookeeper/KeeperException$Code;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/KeeperException$Code;
+#intValue()I
+#get(I)Lorg/apache/zookeeper/KeeperException$Code;

+###org/apache/zookeeper/KeeperException$CodeDeprecated
@3.3.0

+###org/apache/zookeeper/KeeperException$ConnectionLossException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$DataInconsistencyException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$EphemeralOnLocalSessionException
@3.5.0-alpha
+#<init>()V

+###org/apache/zookeeper/KeeperException$InvalidACLException
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$InvalidCallbackException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$MarshallingErrorException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$NewConfigNoQuorum
@3.5.0-alpha
+#<init>()V

+###org/apache/zookeeper/KeeperException$NoAuthException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$NoChildrenForEphemeralsException
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$NoNodeException
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$NoWatcherException
@3.5.0-alpha
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$NodeExistsException
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$NotEmptyException
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$NotReadOnlyException
@3.4.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$OperationTimeoutException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$QuotaExceededException
@3.7.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$ReconfigDisabledException
@3.5.3-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$ReconfigInProgress
@3.5.0-alpha
+#<init>()V

+###org/apache/zookeeper/KeeperException$RequestTimeoutException
@3.5.5
+#<init>()V

+###org/apache/zookeeper/KeeperException$RuntimeInconsistencyException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$SessionClosedRequireAuthException
@3.5.9
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/KeeperException$SessionExpiredException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$SessionMovedException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$SystemErrorException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$ThrottledOpException
@3.7.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$UnimplementedException
@3.3.0
+#<init>()V

+###org/apache/zookeeper/KeeperException$UnknownSessionException
@3.5.0-alpha
+#<init>()V

+###org/apache/zookeeper/KeeperException
@3.3.0
+#create(Lorg/apache/zookeeper/KeeperException$Code;Ljava/lang/String;)Lorg/apache/zookeeper/KeeperException;
+#create(ILjava/lang/String;)Lorg/apache/zookeeper/KeeperException;[deprecated]
+#create(I)Lorg/apache/zookeeper/KeeperException;[deprecated]
+#create(Lorg/apache/zookeeper/KeeperException$Code;)Lorg/apache/zookeeper/KeeperException;
+#setCode(I)V[deprecated]
+#<init>(Lorg/apache/zookeeper/KeeperException$Code;)V
+#getCode()I[deprecated]
+#code()Lorg/apache/zookeeper/KeeperException$Code;
+#getPath()Ljava/lang/String;
+#getMessage()Ljava/lang/String;
@3.4.0
+#getResults()Ljava/util/List;

+###org/apache/zookeeper/Login
@3.4.0
+#<init>(Ljava/lang/String;Ljavax/security/auth/callback/CallbackHandler;)V
+#startThreadIfNeeded()V
+#shutdown()V
+#getSubject()Ljavax/security/auth/Subject;
@3.4.5
+#getLoginContextName()Ljava/lang/String;
@3.5.2-alpha
+#<init>(Ljava/lang/String;Ljavax/security/auth/callback/CallbackHandler;Lorg/apache/zookeeper/common/ZKConfig;)V
-#<init>(Ljava/lang/String;Ljavax/security/auth/callback/CallbackHandler;)V
@3.5.10
+#getUserName()Ljava/lang/String;
+#getLastLogin()J
@3.6.0
-#getLastLogin()J
@3.6.4
+#getLastLogin()J
@3.7.0
-#getLastLogin()J
@3.7.1
+#getLastLogin()J
@3.8.0
-#getLastLogin()J
@3.8.1
+#getLastLogin()J

+###org/apache/zookeeper/MultiOperationRecord
@3.6.0
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#iterator()Ljava/util/Iterator;
+#add(Lorg/apache/zookeeper/Op;)V
+#size()I
+#getOpKind()Lorg/apache/zookeeper/Op$OpKind;
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/MultiResponse
@3.4.0
+#<init>()V
+#add(Lorg/apache/zookeeper/OpResult;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#getResultList()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/Op$Check
@3.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;

+###org/apache/zookeeper/Op$Create
@3.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;

+###org/apache/zookeeper/Op$CreateTTL
@3.5.3-beta
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;

+###org/apache/zookeeper/Op$Delete
@3.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;

+###org/apache/zookeeper/Op$GetChildren
@3.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;

+###org/apache/zookeeper/Op$GetData
@3.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;

+###org/apache/zookeeper/Op$OpKind
@3.6.0
+#values()[Lorg/apache/zookeeper/Op$OpKind;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/Op$OpKind;

+###org/apache/zookeeper/Op$SetData
@3.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toRequestRecord()Lorg/apache/jute/Record;

+###org/apache/zookeeper/Op
@3.4.0
+#create(Ljava/lang/String;[BLjava/util/List;I)Lorg/apache/zookeeper/Op;
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Lorg/apache/zookeeper/Op;
+#delete(Ljava/lang/String;I)Lorg/apache/zookeeper/Op;
+#setData(Ljava/lang/String;[BI)Lorg/apache/zookeeper/Op;
+#check(Ljava/lang/String;I)Lorg/apache/zookeeper/Op;
+#getType()I
+#getPath()Ljava/lang/String;
+#toRequestRecord()Lorg/apache/jute/Record;
@3.5.3-beta
+#create(Ljava/lang/String;[BLjava/util/List;IJ)Lorg/apache/zookeeper/Op;
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;J)Lorg/apache/zookeeper/Op;
@3.6.0
+#getChildren(Ljava/lang/String;)Lorg/apache/zookeeper/Op;
+#getData(Ljava/lang/String;)Lorg/apache/zookeeper/Op;
+#getKind()Lorg/apache/zookeeper/Op$OpKind;

+###org/apache/zookeeper/OpResult$CheckResult
@3.4.0
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/OpResult$CreateResult
@3.4.0
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.5.0-alpha
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;

+###org/apache/zookeeper/OpResult$DeleteResult
@3.4.0
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/OpResult$ErrorResult
@3.4.0
+#<init>(I)V
+#getErr()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/OpResult$GetChildrenResult
@3.6.0
+#<init>(Ljava/util/List;)V
+#getChildren()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/OpResult$GetDataResult
@3.6.0
+#<init>([BLorg/apache/zookeeper/data/Stat;)V
+#getData()[B
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/OpResult$SetDataResult
@3.4.0
+#<init>(Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/OpResult
@3.4.0
+#getType()I

+###org/apache/zookeeper/Quotas
@3.3.0
+#<init>()V
+#quotaPath(Ljava/lang/String;)Ljava/lang/String;
+#statPath(Ljava/lang/String;)Ljava/lang/String;
@3.7.0
+#limitPath(Ljava/lang/String;)Ljava/lang/String;
+#trimQuotaPath(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/zookeeper/SaslClientCallbackHandler
@3.4.10
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
@3.5.0-alpha
-###org/apache/zookeeper/SaslClientCallbackHandler

+###org/apache/zookeeper/SaslServerPrincipal
@3.4.14
+#<init>()V
@3.5.0-alpha
-###org/apache/zookeeper/SaslServerPrincipal

+###org/apache/zookeeper/ServerAdminClient
@3.3.0
+#<init>()V
+#ruok(Ljava/lang/String;I)V
+#dump(Ljava/lang/String;I)V
+#stat(Ljava/lang/String;I)V
+#kill(Ljava/lang/String;I)V
+#setTraceMask(Ljava/lang/String;ILjava/lang/String;)V
+#getTraceMask(Ljava/lang/String;I)V
+#main([Ljava/lang/String;)V

+###org/apache/zookeeper/Shell$ExitCodeException
@3.4.0
+#<init>(ILjava/lang/String;)V
+#getExitCode()I

+###org/apache/zookeeper/Shell$ShellCommandExecutor
@3.4.0
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;Ljava/io/File;)V
+#<init>([Ljava/lang/String;Ljava/io/File;Ljava/util/Map;)V
+#<init>([Ljava/lang/String;Ljava/io/File;Ljava/util/Map;J)V
+#execute()V
+#getOutput()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/Shell
@3.4.0
+#getGroupsCommand()[Ljava/lang/String;
+#getGroupsForUserCommand(Ljava/lang/String;)[Ljava/lang/String;
+#getGET_PERMISSION_COMMAND()[Ljava/lang/String;
+#getUlimitMemoryCommand(I)[Ljava/lang/String;
+#<init>()V
+#<init>(J)V
+#getProcess()Ljava/lang/Process;
+#getExitCode()I
+#isTimedOut()Z
+#execCommand([Ljava/lang/String;)Ljava/lang/String;
+#execCommand(Ljava/util/Map;[Ljava/lang/String;J)Ljava/lang/String;
+#execCommand(Ljava/util/Map;[Ljava/lang/String;)Ljava/lang/String;

+###org/apache/zookeeper/StatsTrack
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getCount()I
+#setCount(I)V
+#getBytes()J
+#setBytes(J)V
+#toString()Ljava/lang/String;
@3.7.0
+#<init>([B)V
+#getCount()J
+#setCount(J)V
+#getCountHardLimit()J
+#setCountHardLimit(J)V
+#getByteHardLimit()J
+#setByteHardLimit(J)V
+#getStatsBytes()[B
-#getCount()I
-#setCount(I)V
@3.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/Testable
@3.4.13
+#injectSessionExpiration()V
@3.6.0
+#queueEvent(Lorg/apache/zookeeper/WatchedEvent;)V

+###org/apache/zookeeper/Transaction
@3.4.0
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Lorg/apache/zookeeper/Transaction;
+#delete(Ljava/lang/String;I)Lorg/apache/zookeeper/Transaction;
+#check(Ljava/lang/String;I)Lorg/apache/zookeeper/Transaction;
+#setData(Ljava/lang/String;[BI)Lorg/apache/zookeeper/Transaction;
+#commit()Ljava/util/List;
@3.4.7
+#commit(Lorg/apache/zookeeper/AsyncCallback$MultiCallback;Ljava/lang/Object;)V

+###org/apache/zookeeper/Version
@3.3.0
+#<init>()V
+#getRevision()I
+#getBuildDate()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getVersionRevision()Ljava/lang/String;
+#getFullVersion()Ljava/lang/String;
+#printUsage()V
+#main([Ljava/lang/String;)V
@3.4.10
*#getRevision()I[deprecated]
+#getRevisionHash()Ljava/lang/String;
@3.5.0-alpha
-#getRevisionHash()Ljava/lang/String;
@3.5.3-beta
*#getRevision()I[deprecated]
+#getRevisionHash()Ljava/lang/String;
@3.5.6
-#getRevision()I[deprecated]
@3.5.8
+#getRevision()I[deprecated]
@3.6.0
-#getRevision()I[deprecated]
@3.6.1
+#getRevision()I[deprecated]

+###org/apache/zookeeper/WatchDeregistration
@3.5.0-alpha
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/Watcher$WatcherType;ZLorg/apache/zookeeper/ZooKeeper$ZKWatchManager;)V
+#unregister(I)Ljava/util/Map;
+#getClientPath()Ljava/lang/String;
@3.7.0
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/Watcher$WatcherType;ZLorg/apache/zookeeper/ZKWatchManager;)V
-#<init>(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/Watcher$WatcherType;ZLorg/apache/zookeeper/ZooKeeper$ZKWatchManager;)V

+###org/apache/zookeeper/WatchedEvent
@3.3.0
+#<init>(Lorg/apache/zookeeper/Watcher$Event$EventType;Lorg/apache/zookeeper/Watcher$Event$KeeperState;Ljava/lang/String;)V
+#<init>(Lorg/apache/zookeeper/proto/WatcherEvent;)V
+#getState()Lorg/apache/zookeeper/Watcher$Event$KeeperState;
+#getType()Lorg/apache/zookeeper/Watcher$Event$EventType;
+#getPath()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getWrapper()Lorg/apache/zookeeper/proto/WatcherEvent;

+###org/apache/zookeeper/Watcher$Event$EventType
@3.3.0
+#values()[Lorg/apache/zookeeper/Watcher$Event$EventType;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/Watcher$Event$EventType;
+#getIntValue()I
+#fromInt(I)Lorg/apache/zookeeper/Watcher$Event$EventType;

+###org/apache/zookeeper/Watcher$Event$KeeperState
@3.3.0
+#values()[Lorg/apache/zookeeper/Watcher$Event$KeeperState;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/Watcher$Event$KeeperState;
+#getIntValue()I
+#fromInt(I)Lorg/apache/zookeeper/Watcher$Event$KeeperState;

+###org/apache/zookeeper/Watcher$Event
@3.3.0

+###org/apache/zookeeper/Watcher$WatcherType
@3.5.0-alpha
+#values()[Lorg/apache/zookeeper/Watcher$WatcherType;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/Watcher$WatcherType;
+#getIntValue()I
+#fromInt(I)Lorg/apache/zookeeper/Watcher$WatcherType;

+###org/apache/zookeeper/Watcher
@3.3.0
+#process(Lorg/apache/zookeeper/WatchedEvent;)V

+###org/apache/zookeeper/ZKUtil
@3.4.0
+#<init>()V
+#deleteRecursive(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)V
+#deleteRecursive(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
+#listSubTreeBFS(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)Ljava/util/List;
@3.5.3-beta
+#visitSubTreeDFS(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$StringCallback;)V
@3.6.0
+#deleteRecursive(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;I)Z
+#validateFileInput(Ljava/lang/String;)Ljava/lang/String;
+#getPermString(I)Ljava/lang/String;
+#aclToString(Ljava/util/List;)Ljava/lang/String;
-#deleteRecursive(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)V
@3.6.1
+#deleteRecursive(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)V

+###org/apache/zookeeper/ZooDefs$AddWatchModes
@3.6.0

+###org/apache/zookeeper/ZooDefs$Ids
@3.3.0

+###org/apache/zookeeper/ZooDefs$OpCode
@3.3.0

+###org/apache/zookeeper/ZooDefs$Perms
@3.3.0

+###org/apache/zookeeper/ZooDefs
@3.3.0
+#<init>()V

+###org/apache/zookeeper/ZooKeeper$States
@3.3.0
+#values()[Lorg/apache/zookeeper/ZooKeeper$States;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/ZooKeeper$States;
+#isAlive()Z
@3.4.0
+#isConnected()Z

+###org/apache/zookeeper/ZooKeeper$WatchRegistration
@3.5.3-beta
+#<init>(Lorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/Watcher;Ljava/lang/String;)V
+#register(I)V
@3.7.0
+#<init>(Lorg/apache/zookeeper/Watcher;Ljava/lang/String;)V
-#<init>(Lorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/Watcher;Ljava/lang/String;)V

+###org/apache/zookeeper/ZooKeeper
@3.3.0
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;J[B)V
+#getSessionId()J
+#getSessionPasswd()[B
+#getSessionTimeout()I
+#addAuthInfo(Ljava/lang/String;[B)V
+#register(Lorg/apache/zookeeper/Watcher;)V
+#close()V
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;Lorg/apache/zookeeper/AsyncCallback$StringCallback;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;I)V
+#delete(Ljava/lang/String;ILorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
+#exists(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Lorg/apache/zookeeper/data/Stat;
+#exists(Ljava/lang/String;Z)Lorg/apache/zookeeper/data/Stat;
+#exists(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
+#exists(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/data/Stat;)[B
+#getData(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#getData(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#setData(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;
+#setData(Ljava/lang/String;[BILorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/AsyncCallback$ACLCallback;Ljava/lang/Object;)V
+#setACL(Ljava/lang/String;Ljava/util/List;I)Lorg/apache/zookeeper/data/Stat;
+#setACL(Ljava/lang/String;Ljava/util/List;ILorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Ljava/util/List;
+#getChildren(Ljava/lang/String;Z)Ljava/util/List;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$ChildrenCallback;Ljava/lang/Object;)V
+#getChildren(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$ChildrenCallback;Ljava/lang/Object;)V
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#getChildren(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$Children2Callback;Ljava/lang/Object;)V
+#getChildren(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$Children2Callback;Ljava/lang/Object;)V
+#sync(Ljava/lang/String;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
+#getState()Lorg/apache/zookeeper/ZooKeeper$States;
+#toString()Ljava/lang/String;
@3.4.0
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;Z)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;J[BZ)V
+#multi(Ljava/lang/Iterable;)Ljava/util/List;
+#transaction()Lorg/apache/zookeeper/Transaction;
@3.4.5
+#getSaslClient()Lorg/apache/zookeeper/client/ZooKeeperSaslClient;
@3.4.7
+#multi(Ljava/lang/Iterable;Lorg/apache/zookeeper/AsyncCallback$MultiCallback;Ljava/lang/Object;)V
@3.4.13
+#getTestable()Lorg/apache/zookeeper/Testable;
@3.5.0-alpha
+#updateServerList(Ljava/lang/String;)V
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;Lorg/apache/zookeeper/data/Stat;)Ljava/lang/String;
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;Lorg/apache/zookeeper/AsyncCallback$Create2Callback;Ljava/lang/Object;)V
+#getConfig(Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/data/Stat;)[B
+#getConfig(Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#getConfig(ZLorg/apache/zookeeper/data/Stat;)[B
+#getConfig(ZLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#reconfig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/zookeeper/data/Stat;)[B
+#reconfig(Ljava/util/List;Ljava/util/List;Ljava/util/List;JLorg/apache/zookeeper/data/Stat;)[B
+#reconfig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#reconfig(Ljava/util/List;Ljava/util/List;Ljava/util/List;JLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#removeWatches(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/Watcher$WatcherType;Z)V
+#removeWatches(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/Watcher$WatcherType;ZLorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
+#removeAllWatches(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$WatcherType;Z)V
+#removeAllWatches(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$WatcherType;ZLorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
@3.5.1-alpha
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;ZLorg/apache/zookeeper/client/HostProvider;)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;J[BZLorg/apache/zookeeper/client/HostProvider;)V
@3.5.2-alpha
+#getClientConfig()Lorg/apache/zookeeper/client/ZKClientConfig;
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/client/ZKClientConfig;)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;ZLorg/apache/zookeeper/client/HostProvider;Lorg/apache/zookeeper/client/ZKClientConfig;)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;ZLorg/apache/zookeeper/client/ZKClientConfig;)V
@3.5.3-beta
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;Lorg/apache/zookeeper/data/Stat;J)Ljava/lang/String;
+#create(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;Lorg/apache/zookeeper/AsyncCallback$Create2Callback;Ljava/lang/Object;J)V
*#reconfig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/zookeeper/data/Stat;)[B[deprecated]
*#reconfig(Ljava/util/List;Ljava/util/List;Ljava/util/List;JLorg/apache/zookeeper/data/Stat;)[B[deprecated]
*#reconfig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V[deprecated]
*#reconfig(Ljava/util/List;Ljava/util/List;Ljava/util/List;JLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V[deprecated]
@3.5.4-beta
+#close(I)Z
@3.5.5
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;J[BZLorg/apache/zookeeper/client/HostProvider;Lorg/apache/zookeeper/client/ZKClientConfig;)V
@3.6.0
+#getAllChildrenNumber(Ljava/lang/String;)I
+#getAllChildrenNumber(Ljava/lang/String;Lorg/apache/zookeeper/AsyncCallback$AllChildrenNumberCallback;Ljava/lang/Object;)V
+#getEphemerals()Ljava/util/List;
+#getEphemerals(Ljava/lang/String;)Ljava/util/List;
+#getEphemerals(Ljava/lang/String;Lorg/apache/zookeeper/AsyncCallback$EphemeralsCallback;Ljava/lang/Object;)V
+#getEphemerals(Lorg/apache/zookeeper/AsyncCallback$EphemeralsCallback;Ljava/lang/Object;)V
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AddWatchMode;)V
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/AddWatchMode;)V
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AddWatchMode;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/AddWatchMode;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
-#reconfig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/zookeeper/data/Stat;)[B[deprecated]
-#reconfig(Ljava/util/List;Ljava/util/List;Ljava/util/List;JLorg/apache/zookeeper/data/Stat;)[B[deprecated]
-#reconfig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V[deprecated]
-#reconfig(Ljava/util/List;Ljava/util/List;Ljava/util/List;JLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V[deprecated]
@3.7.0
+#whoAmI()Ljava/util/List;

+###org/apache/zookeeper/ZooKeeperMain
@3.3.0
+#getPrintWatches()Z
+#getCommands()Ljava/util/List;
+#printMessage(Ljava/lang/String;)V
+#main([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;)V
+#<init>(Lorg/apache/zookeeper/ZooKeeper;)V
+#executeLine(Ljava/lang/String;)V
+#delQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;ZZ)Z
+#createQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;JI)Z
@3.6.0
-#delQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;ZZ)Z
-#createQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;JI)Z

+###org/apache/zookeeper/ZookeeperBanner
@3.6.0
+#<init>()V
+#printBanner(Lorg/slf4j/Logger;)V

+###org/apache/zookeeper/admin/ZooKeeperAdmin
@3.5.3-beta
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/client/ZKClientConfig;)V
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;Z)V
+#reconfigure(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/zookeeper/data/Stat;)[B
+#reconfigure(Ljava/util/List;Ljava/util/List;Ljava/util/List;JLorg/apache/zookeeper/data/Stat;)[B
+#reconfigure(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#reconfigure(Ljava/util/List;Ljava/util/List;Ljava/util/List;JLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@3.6.1
+#<init>(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;ZLorg/apache/zookeeper/client/ZKClientConfig;)V

+###org/apache/zookeeper/audit/AuditConstants
@3.6.0

+###org/apache/zookeeper/audit/AuditEvent$FieldName
@3.6.0
+#values()[Lorg/apache/zookeeper/audit/AuditEvent$FieldName;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/audit/AuditEvent$FieldName;

+###org/apache/zookeeper/audit/AuditEvent$Result
@3.6.0
+#values()[Lorg/apache/zookeeper/audit/AuditEvent$Result;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/audit/AuditEvent$Result;

+###org/apache/zookeeper/audit/AuditEvent
@3.6.0
+#getLogEntries()Ljava/util/Set;
+#getValue(Lorg/apache/zookeeper/audit/AuditEvent$FieldName;)Ljava/lang/String;
+#getResult()Lorg/apache/zookeeper/audit/AuditEvent$Result;
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/audit/AuditHelper
@3.6.0
+#<init>()V
+#addAuditLog(Lorg/apache/zookeeper/server/Request;Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;)V
+#addAuditLog(Lorg/apache/zookeeper/server/Request;Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;Z)V

+###org/apache/zookeeper/audit/AuditLogger
@3.6.0
+#initialize()V
+#logAuditEvent(Lorg/apache/zookeeper/audit/AuditEvent;)V

+###org/apache/zookeeper/audit/Log4jAuditLogger
@3.6.0
+#<init>()V
+#logAuditEvent(Lorg/apache/zookeeper/audit/AuditEvent;)V
@3.8.0
-###org/apache/zookeeper/audit/Log4jAuditLogger

+###org/apache/zookeeper/audit/ZKAuditProvider
@3.6.0
+#<init>()V
+#isAuditEnabled()Z
+#log(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/audit/AuditEvent$Result;)V
+#addZKStartStopAuditLog()V
+#addServerStartFailureAuditLog()V
+#getZKUser()Ljava/lang/String;

+###org/apache/zookeeper/cli/AclParser
@3.5.0-alpha
+#<init>()V
+#parse(Ljava/lang/String;)Ljava/util/List;

+###org/apache/zookeeper/cli/AddAuthCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/AddWatchCommand
@3.6.0
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/CliCommand
@3.5.0-alpha
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setOut(Ljava/io/PrintStream;)V
+#setErr(Ljava/io/PrintStream;)V
+#setZk(Lorg/apache/zookeeper/ZooKeeper;)V
+#getCmdStr()Ljava/lang/String;
+#getOptionStr()Ljava/lang/String;
+#getUsageStr()Ljava/lang/String;
+#addToMap(Ljava/util/Map;)V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/CliException
@3.5.3-beta
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;I)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;I)V
+#getExitCode()I

+###org/apache/zookeeper/cli/CliParseException
@3.5.3-beta
+#<init>(Lorg/apache/commons/cli/ParseException;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/cli/CliWrapperException
@3.5.3-beta
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/zookeeper/cli/CloseCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/CommandFactory$Command
@3.7.0
+#values()[Lorg/apache/zookeeper/cli/CommandFactory$Command;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/cli/CommandFactory$Command;

+###org/apache/zookeeper/cli/CommandFactory
@3.7.0
+#<init>()V
+#getInstance(Lorg/apache/zookeeper/cli/CommandFactory$Command;)Lorg/apache/zookeeper/cli/CliCommand;

+###org/apache/zookeeper/cli/CommandNotFoundException
@3.5.3-beta
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/cli/CreateCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/DelQuotaCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z
+#delQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;ZZ)Z
@3.7.0
+#delQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;Lorg/apache/zookeeper/StatsTrack;)Z
-#delQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;ZZ)Z

+###org/apache/zookeeper/cli/DeleteAllCommand
@3.5.0-alpha
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/DeleteCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/GetAclCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/GetAllChildrenNumberCommand
@3.6.0
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/GetCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/GetConfigCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/GetEphemeralsCommand
@3.6.0
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/ListQuotaCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z
@3.7.0
+#listQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;)Ljava/util/List;

+###org/apache/zookeeper/cli/LsCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/MalformedCommandException
@3.5.3-beta
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/cli/MalformedPathException
@3.5.4-beta
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/cli/ReconfigCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/RemoveWatchesCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/SetAclCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/SetCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/SetQuotaCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z
+#createQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;JI)Z
@3.7.0
+#createQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;Lorg/apache/zookeeper/StatsTrack;)Z
-#createQuota(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;JI)Z

+###org/apache/zookeeper/cli/StatCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/StatPrinter
@3.5.0-alpha
+#<init>(Ljava/io/PrintStream;)V
+#print(Lorg/apache/zookeeper/data/Stat;)V

+###org/apache/zookeeper/cli/SyncCommand
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/VersionCommand
@3.6.0
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/cli/WhoAmICommand
@3.7.0
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z

+###org/apache/zookeeper/client/ConnectStringParser
@3.4.0
+#<init>(Ljava/lang/String;)V
+#getChrootPath()Ljava/lang/String;
+#getServerAddresses()Ljava/util/ArrayList;

+###org/apache/zookeeper/client/FourLetterWordMain
@3.3.5
+#<init>()V
+#send4LetterWord(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@3.4.0
-###org/apache/zookeeper/client/FourLetterWordMain

+###org/apache/zookeeper/client/HostProvider
@3.4.0
+#size()I
+#next(J)Ljava/net/InetSocketAddress;
+#onConnected()V
@3.5.0-alpha
+#updateServerList(Ljava/util/Collection;Ljava/net/InetSocketAddress;)Z

+###org/apache/zookeeper/client/StaticHostProvider$Resolver
@3.4.13
+#getAllByName(Ljava/lang/String;)[Ljava/net/InetAddress;
@3.5.0-alpha
-###org/apache/zookeeper/client/StaticHostProvider$Resolver

+###org/apache/zookeeper/client/StaticHostProvider
@3.4.0
+#<init>(Ljava/util/Collection;)V
+#size()I
+#next(J)Ljava/net/InetSocketAddress;
+#onConnected()V
@3.4.13
+#<init>(Ljava/util/Collection;Lorg/apache/zookeeper/client/StaticHostProvider$Resolver;)V
@3.5.0-alpha
+#<init>(Ljava/util/Collection;J)V
+#updateServerList(Ljava/util/Collection;Ljava/net/InetSocketAddress;)Z
+#getServerAtIndex(I)Ljava/net/InetSocketAddress;
+#getServerAtCurrentIndex()Ljava/net/InetSocketAddress;
-#<init>(Ljava/util/Collection;Lorg/apache/zookeeper/client/StaticHostProvider$Resolver;)V
@3.5.5
+#<init>(Ljava/util/Collection;Lorg/apache/zookeeper/client/StaticHostProvider$Resolver;)V

+###org/apache/zookeeper/client/ZKClientConfig
@3.5.2-alpha
+#<init>()V
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/lang/String;)V
+#isSaslClientEnabled()Z
@3.5.5
+#getLong(Ljava/lang/String;J)J

+###org/apache/zookeeper/client/ZooKeeperSaslClient$SaslState
@3.4.0
+#values()[Lorg/apache/zookeeper/client/ZooKeeperSaslClient$SaslState;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/client/ZooKeeperSaslClient$SaslState;

+###org/apache/zookeeper/client/ZooKeeperSaslClient$ServerSaslResponseCallback
@3.4.0
+#<init>()V
+#processResult(ILjava/lang/String;Ljava/lang/Object;[BLorg/apache/zookeeper/data/Stat;)V

+###org/apache/zookeeper/client/ZooKeeperSaslClient
@3.4.0
+#getSaslState()Lorg/apache/zookeeper/client/ZooKeeperSaslClient$SaslState;
+#<init>(Lorg/apache/zookeeper/ClientCnxn;Ljava/lang/String;)V
+#isComplete()Z
+#createSaslToken()[B
+#queueSaslPacket([B)V
+#queueSaslPacket()V
+#readyToSendSaslAuthEvent()Z
+#initialize()V
@3.4.3
+#getLoginContext()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#isFailed()Z
+#initialize(Lorg/apache/zookeeper/ClientCnxn;)V
-#<init>(Lorg/apache/zookeeper/ClientCnxn;Ljava/lang/String;)V
-#createSaslToken()[B
-#queueSaslPacket([B)V
-#queueSaslPacket()V
-#initialize()V
@3.4.4
+#getConfigStatus()Ljava/lang/String;
+#respondToServer([BLorg/apache/zookeeper/ClientCnxn;)V
+#getKeeperState()Lorg/apache/zookeeper/Watcher$Event$KeeperState;
+#clientTunneledAuthenticationInProgress()Z
-#readyToSendSaslAuthEvent()Z
@3.4.6
+#isEnabled()Z
@3.5.2-alpha
*#isEnabled()Z[deprecated]
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/client/ZKClientConfig;)V
+#shutdown()V
-#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/common/AtomicFileOutputStream
@3.4.4
+#<init>(Ljava/io/File;)V
+#close()V
+#abort()V
@3.4.11
+#write([BII)V
@3.5.0-alpha
-#write([BII)V
@3.5.4-beta
+#write([BII)V

+###org/apache/zookeeper/common/AtomicFileWritingIdiom$OutputStreamStatement
@3.5.0-alpha
+#write(Ljava/io/OutputStream;)V

+###org/apache/zookeeper/common/AtomicFileWritingIdiom$WriterStatement
@3.5.0-alpha
+#write(Ljava/io/Writer;)V

+###org/apache/zookeeper/common/AtomicFileWritingIdiom
@3.5.0-alpha
+#<init>(Ljava/io/File;Lorg/apache/zookeeper/common/AtomicFileWritingIdiom$OutputStreamStatement;)V
+#<init>(Ljava/io/File;Lorg/apache/zookeeper/common/AtomicFileWritingIdiom$WriterStatement;)V

+###org/apache/zookeeper/common/ClientX509Util
@3.5.5
+#<init>()V
+#getSslAuthProviderProperty()Ljava/lang/String;

+###org/apache/zookeeper/common/FileChangeWatcher$State
@3.5.5
+#values()[Lorg/apache/zookeeper/common/FileChangeWatcher$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/common/FileChangeWatcher$State;

+###org/apache/zookeeper/common/FileChangeWatcher
@3.5.5
+#<init>(Ljava/nio/file/Path;Ljava/util/function/Consumer;)V
+#getState()Lorg/apache/zookeeper/common/FileChangeWatcher$State;
+#start()V
+#stop()V

+###org/apache/zookeeper/common/FileKeyStoreLoaderBuilderProvider
@3.5.5
+#<init>()V

+###org/apache/zookeeper/common/IOUtils
@3.4.4
+#<init>()V
+#closeStream(Ljava/io/Closeable;)V
+#cleanup(Lorg/slf4j/Logger;[Ljava/io/Closeable;)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;I)V

+###org/apache/zookeeper/common/KeyStoreFileType
@3.5.5
+#values()[Lorg/apache/zookeeper/common/KeyStoreFileType;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/common/KeyStoreFileType;
+#getPropertyValue()Ljava/lang/String;
+#getDefaultFileExtension()Ljava/lang/String;
+#fromPropertyValue(Ljava/lang/String;)Lorg/apache/zookeeper/common/KeyStoreFileType;
+#fromFilename(Ljava/lang/String;)Lorg/apache/zookeeper/common/KeyStoreFileType;
+#fromPropertyValueOrFileName(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/zookeeper/common/KeyStoreFileType;

+###org/apache/zookeeper/common/NetUtils
@3.5.6
+#<init>()V
+#formatInetAddr(Ljava/net/InetSocketAddress;)Ljava/lang/String;
@3.5.9
+#getIPV6HostAndPort(Ljava/lang/String;)[Ljava/lang/String;
@3.6.0
-#getIPV6HostAndPort(Ljava/lang/String;)[Ljava/lang/String;
@3.6.2
+#getIPV6HostAndPort(Ljava/lang/String;)[Ljava/lang/String;

+###org/apache/zookeeper/common/NettyUtils
@3.5.5
+#<init>()V
+#newNioOrEpollEventLoopGroup()Lio/netty/channel/EventLoopGroup;
+#newNioOrEpollEventLoopGroup(I)Lio/netty/channel/EventLoopGroup;
+#nioOrEpollSocketChannel()Ljava/lang/Class;
+#nioOrEpollServerSocketChannel()Ljava/lang/Class;
+#getClientReachableLocalInetAddressCount()I

+###org/apache/zookeeper/common/PathTrie
@3.3.0
+#<init>()V
+#addPath(Ljava/lang/String;)V
+#deletePath(Ljava/lang/String;)V
+#findMaxPrefix(Ljava/lang/String;)Ljava/lang/String;
@3.4.6
+#clear()V
@3.6.0
+#existsNode(Ljava/lang/String;)Z

+###org/apache/zookeeper/common/PathUtils
@3.3.0
+#<init>()V
+#validatePath(Ljava/lang/String;Z)V
+#validatePath(Ljava/lang/String;)V
@3.5.0-alpha
+#normalizeFileSystemPath(Ljava/lang/String;)Ljava/lang/String;
@3.8.0
+#getTopNamespace(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/zookeeper/common/QuorumX509Util
@3.5.5
+#<init>()V

+###org/apache/zookeeper/common/SSLContextAndOptions
@3.5.5
+#getSSLContext()Ljavax/net/ssl/SSLContext;
+#createSSLSocket()Ljavax/net/ssl/SSLSocket;
+#createSSLSocket(Ljava/net/Socket;[B)Ljavax/net/ssl/SSLSocket;
+#createSSLServerSocket()Ljavax/net/ssl/SSLServerSocket;
+#createSSLServerSocket(I)Ljavax/net/ssl/SSLServerSocket;
+#getHandshakeDetectionTimeoutMillis()I
@3.5.7
+#createNettyJdkSslContext(Ljavax/net/ssl/SSLContext;Z)Lio/netty/handler/ssl/SslContext;

+###org/apache/zookeeper/common/StandardTypeFileKeyStoreLoader$SupportedStandardKeyFormat
@3.5.10
+#values()[Lorg/apache/zookeeper/common/StandardTypeFileKeyStoreLoader$SupportedStandardKeyFormat;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/common/StandardTypeFileKeyStoreLoader$SupportedStandardKeyFormat;
@3.6.0
-###org/apache/zookeeper/common/StandardTypeFileKeyStoreLoader$SupportedStandardKeyFormat

+###org/apache/zookeeper/common/StringUtils
@3.5.0-alpha
+#split(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
+#joinStrings(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
@3.7.0
+#isBlank(Ljava/lang/String;)Z
+#isEmpty(Ljava/lang/String;)Z

+###org/apache/zookeeper/common/Time
@3.4.11
+#<init>()V
+#currentElapsedTime()J
+#currentWallTime()J
+#elapsedTimeToDate(J)Ljava/util/Date;
@3.5.0-alpha
-###org/apache/zookeeper/common/Time

+###org/apache/zookeeper/common/X509Exception$KeyManagerException
@3.5.1-alpha
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/zookeeper/common/X509Exception$SSLContextException
@3.5.1-alpha
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/zookeeper/common/X509Exception$TrustManagerException
@3.5.1-alpha
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/zookeeper/common/X509Exception
@3.5.1-alpha
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/zookeeper/common/X509Util$ClientAuth
@3.5.5
+#values()[Lorg/apache/zookeeper/common/X509Util$ClientAuth;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/common/X509Util$ClientAuth;
+#fromPropertyValue(Ljava/lang/String;)Lorg/apache/zookeeper/common/X509Util$ClientAuth;
@3.5.7
+#toNettyClientAuth()Lio/netty/handler/ssl/ClientAuth;

+###org/apache/zookeeper/common/X509Util
@3.5.1-alpha
+#<init>()V
+#createSSLContext()Ljavax/net/ssl/SSLContext;
+#createKeyManager(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/X509KeyManager;
+#createTrustManager(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/X509TrustManager;
@3.5.2-alpha
+#createSSLContext(Lorg/apache/zookeeper/common/ZKConfig;)Ljavax/net/ssl/SSLContext;
@3.5.5
+#<init>(Lorg/apache/zookeeper/common/ZKConfig;)V
+#getSslProtocolProperty()Ljava/lang/String;
+#getSslEnabledProtocolsProperty()Ljava/lang/String;
+#getCipherSuitesProperty()Ljava/lang/String;
+#getSslKeystoreLocationProperty()Ljava/lang/String;
+#getSslCipherSuitesProperty()Ljava/lang/String;
+#getSslKeystorePasswdProperty()Ljava/lang/String;
+#getSslKeystoreTypeProperty()Ljava/lang/String;
+#getSslTruststoreLocationProperty()Ljava/lang/String;
+#getSslTruststorePasswdProperty()Ljava/lang/String;
+#getSslTruststoreTypeProperty()Ljava/lang/String;
+#getSslHostnameVerificationEnabledProperty()Ljava/lang/String;
+#getSslCrlEnabledProperty()Ljava/lang/String;
+#getSslOcspEnabledProperty()Ljava/lang/String;
+#getSslClientAuthProperty()Ljava/lang/String;
+#getSslHandshakeDetectionTimeoutMillisProperty()Ljava/lang/String;
+#getDefaultSSLContext()Ljavax/net/ssl/SSLContext;
+#getDefaultSSLContextAndOptions()Lorg/apache/zookeeper/common/SSLContextAndOptions;
+#getSslHandshakeTimeoutMillis()I
+#createSSLContextAndOptions(Lorg/apache/zookeeper/common/ZKConfig;)Lorg/apache/zookeeper/common/SSLContextAndOptions;
+#createKeyManager(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/X509KeyManager;
+#createTrustManager(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljavax/net/ssl/X509TrustManager;
+#createSSLSocket()Ljavax/net/ssl/SSLSocket;
+#createSSLSocket(Ljava/net/Socket;[B)Ljavax/net/ssl/SSLSocket;
+#createSSLServerSocket()Ljavax/net/ssl/SSLServerSocket;
+#createSSLServerSocket(I)Ljavax/net/ssl/SSLServerSocket;
+#enableCertFileReloading()V
+#close()V
-#createSSLContext()Ljavax/net/ssl/SSLContext;
-#createKeyManager(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/X509KeyManager;
-#createTrustManager(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/X509TrustManager;
@3.6.0
+#getSslContextSupplierClassProperty()Ljava/lang/String;
+#createSSLContextAndOptionsFromConfig(Lorg/apache/zookeeper/common/ZKConfig;)Lorg/apache/zookeeper/common/SSLContextAndOptions;
+#loadKeyStore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
+#loadTrustStore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;
@3.8.0
+#getSslKeystorePasswdPathProperty()Ljava/lang/String;
+#getSslTruststorePasswdPathProperty()Ljava/lang/String;
+#getPasswordFromConfigPropertyOrFile(Lorg/apache/zookeeper/common/ZKConfig;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/zookeeper/common/ZKConfig
@3.5.2-alpha
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/File;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getJaasConfKey()Ljava/lang/String;
+#setProperty(Ljava/lang/String;Ljava/lang/String;)V
+#addConfiguration(Ljava/io/File;)V
+#addConfiguration(Ljava/lang/String;)V
+#getBoolean(Ljava/lang/String;)Z
@3.5.3-beta
+#getInt(Ljava/lang/String;I)I
@3.5.5
+#getBoolean(Ljava/lang/String;Z)Z

+###org/apache/zookeeper/common/ZKTrustManager
@3.5.5
+#getAcceptedIssuers()[Ljava/security/cert/X509Certificate;
+#checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V
+#checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V
+#checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V
+#checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V
+#checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V

+###org/apache/zookeeper/jmx/MBeanRegistry
@3.3.0
+#<init>()V
+#getInstance()Lorg/apache/zookeeper/jmx/MBeanRegistry;
+#register(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
+#unregister(Lorg/apache/zookeeper/jmx/ZKMBeanInfo;)V
+#unregisterAll()V
+#makeFullPath(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
@3.4.0
+#getPlatformMBeanServer()Ljavax/management/MBeanServer;
@3.4.7
+#setInstance(Lorg/apache/zookeeper/jmx/MBeanRegistry;)V
@3.5.0-alpha
+#getRegisteredBeans()Ljava/util/Set;
-#setInstance(Lorg/apache/zookeeper/jmx/MBeanRegistry;)V
-#unregisterAll()V
@3.5.2-alpha
+#setInstance(Lorg/apache/zookeeper/jmx/MBeanRegistry;)V

+###org/apache/zookeeper/jmx/ManagedUtil
@3.3.0
+#<init>()V
+#registerLog4jMBeans()V

+###org/apache/zookeeper/jmx/ZKMBeanInfo
@3.3.0
+#getName()Ljava/lang/String;
+#isHidden()Z

+###org/apache/zookeeper/metrics/Counter
@3.6.0
+#inc()V
+#add(J)V
+#get()J

+###org/apache/zookeeper/metrics/Gauge
@3.6.0
+#get()Ljava/lang/Number;

+###org/apache/zookeeper/metrics/MetricsContext$DetailLevel
@3.6.0
+#values()[Lorg/apache/zookeeper/metrics/MetricsContext$DetailLevel;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/metrics/MetricsContext$DetailLevel;

+###org/apache/zookeeper/metrics/MetricsContext
@3.6.0
+#getContext(Ljava/lang/String;)Lorg/apache/zookeeper/metrics/MetricsContext;
+#getCounter(Ljava/lang/String;)Lorg/apache/zookeeper/metrics/Counter;
+#registerGauge(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
+#unregisterGauge(Ljava/lang/String;)V
+#getSummary(Ljava/lang/String;Lorg/apache/zookeeper/metrics/MetricsContext$DetailLevel;)Lorg/apache/zookeeper/metrics/Summary;
+#getSummarySet(Ljava/lang/String;Lorg/apache/zookeeper/metrics/MetricsContext$DetailLevel;)Lorg/apache/zookeeper/metrics/SummarySet;
@3.8.0
+#getCounterSet(Ljava/lang/String;)Lorg/apache/zookeeper/metrics/CounterSet;
+#registerGaugeSet(Ljava/lang/String;Lorg/apache/zookeeper/metrics/GaugeSet;)V
+#unregisterGaugeSet(Ljava/lang/String;)V

+###org/apache/zookeeper/metrics/MetricsProvider
@3.6.0
+#configure(Ljava/util/Properties;)V
+#start()V
+#getRootContext()Lorg/apache/zookeeper/metrics/MetricsContext;
+#stop()V
+#dump(Ljava/util/function/BiConsumer;)V
+#resetAllValues()V

+###org/apache/zookeeper/metrics/MetricsProviderLifeCycleException
@3.6.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/zookeeper/metrics/Summary
@3.6.0
+#add(J)V

+###org/apache/zookeeper/metrics/SummarySet
@3.6.0
+#add(Ljava/lang/String;J)V

+###org/apache/zookeeper/metrics/impl/DefaultMetricsProvider
@3.6.0
+#<init>()V
+#configure(Ljava/util/Properties;)V
+#start()V
+#getRootContext()Lorg/apache/zookeeper/metrics/MetricsContext;
+#stop()V
+#dump(Ljava/util/function/BiConsumer;)V
+#resetAllValues()V

+###org/apache/zookeeper/metrics/impl/MetricsProviderBootstrap
@3.6.0
+#<init>()V
+#startMetricsProvider(Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/zookeeper/metrics/MetricsProvider;

+###org/apache/zookeeper/metrics/impl/NullMetricsProvider$NullMetricsContext
@3.6.0
+#<init>()V
+#getContext(Ljava/lang/String;)Lorg/apache/zookeeper/metrics/MetricsContext;
+#getCounter(Ljava/lang/String;)Lorg/apache/zookeeper/metrics/Counter;
+#registerGauge(Ljava/lang/String;Lorg/apache/zookeeper/metrics/Gauge;)V
+#unregisterGauge(Ljava/lang/String;)V
+#getSummary(Ljava/lang/String;Lorg/apache/zookeeper/metrics/MetricsContext$DetailLevel;)Lorg/apache/zookeeper/metrics/Summary;
+#getSummarySet(Ljava/lang/String;Lorg/apache/zookeeper/metrics/MetricsContext$DetailLevel;)Lorg/apache/zookeeper/metrics/SummarySet;
@3.8.0
+#getCounterSet(Ljava/lang/String;)Lorg/apache/zookeeper/metrics/CounterSet;
+#registerGaugeSet(Ljava/lang/String;Lorg/apache/zookeeper/metrics/GaugeSet;)V
+#unregisterGaugeSet(Ljava/lang/String;)V

+###org/apache/zookeeper/metrics/impl/NullMetricsProvider
@3.6.0
+#<init>()V
+#configure(Ljava/util/Properties;)V
+#start()V
+#getRootContext()Lorg/apache/zookeeper/metrics/MetricsContext;
+#dump(Ljava/util/function/BiConsumer;)V
+#resetAllValues()V
+#stop()V

+###org/apache/zookeeper/server/AuthenticationHelper
@3.7.0
+#<init>()V
+#isEnforceAuthEnabled()Z
+#enforceAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;I)Z
+#isSaslAuthRequired()Z

+###org/apache/zookeeper/server/BlueThrottle
@3.6.0
+#<init>()V
+#setMaxTokens(I)V
+#setFillTime(I)V
+#setFillCount(I)V
+#setFreezeTime(I)V
+#setDropIncrease(D)V
+#setDropDecrease(D)V
+#setDecreasePoint(D)V
+#getMaxTokens()I
+#getFillTime()I
+#getFillCount()I
+#getFreezeTime()I
+#getDropIncrease()D
+#getDropDecrease()D
+#getDecreasePoint()D
+#getDropChance()D
+#getDeficit()I
+#getRequiredTokensForGlobal()I
+#getRequiredTokensForLocal()I
+#getRequiredTokensForRenew()I
+#isConnectionWeightEnabled()Z
+#checkLimit(I)Z
+#checkBlue(J)Z

+###org/apache/zookeeper/server/ByteBufferInputStream
@3.3.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
+#available()I
+#read([BII)I
+#read([B)I
+#skip(J)J
@3.4.0
+#byteBuffer2Record(Ljava/nio/ByteBuffer;Lorg/apache/jute/Record;)V

+###org/apache/zookeeper/server/ByteBufferOutputStream
@3.4.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#record2ByteBuffer(Lorg/apache/jute/Record;Ljava/nio/ByteBuffer;)V

+###org/apache/zookeeper/server/ClientCnxnLimitException
@3.6.0
+#<init>()V

+###org/apache/zookeeper/server/ConnectionBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/ServerCnxn;Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getSessionId()Ljava/lang/String;
+#getSourceIP()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getEphemeralNodes()[Ljava/lang/String;
+#getStartedTime()Ljava/lang/String;
+#terminateSession()V
+#terminateConnection()V
+#resetCounters()V
+#toString()Ljava/lang/String;
+#getOutstandingRequests()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getSessionTimeout()I
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getLastOperation()Ljava/lang/String;
+#getLastCxid()Ljava/lang/String;
+#getLastZxid()Ljava/lang/String;
+#getLastResponseTime()Ljava/lang/String;
+#getLastLatency()J

+###org/apache/zookeeper/server/ConnectionMXBean
@3.3.0
+#getSourceIP()Ljava/lang/String;
+#getSessionId()Ljava/lang/String;
+#getStartedTime()Ljava/lang/String;
+#getEphemeralNodes()[Ljava/lang/String;
+#getPacketsReceived()J
+#getPacketsSent()J
+#getOutstandingRequests()J
+#getSessionTimeout()I
+#terminateSession()V
+#terminateConnection()V
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getLastOperation()Ljava/lang/String;
+#getLastCxid()Ljava/lang/String;
+#getLastZxid()Ljava/lang/String;
+#getLastResponseTime()Ljava/lang/String;
+#getLastLatency()J
+#resetCounters()V

+###org/apache/zookeeper/server/ContainerManager
@3.5.1-alpha
+#<init>(Lorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/RequestProcessor;II)V
+#start()V
+#stop()V
+#checkContainers()V
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/RequestProcessor;IIJ)V

+###org/apache/zookeeper/server/DataNode
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/DataNode;[BLjava/lang/Long;Lorg/apache/zookeeper/data/StatPersisted;)V
+#addChild(Ljava/lang/String;)Z
+#removeChild(Ljava/lang/String;)Z
+#setChildren(Ljava/util/HashSet;)V
+#getChildren()Ljava/util/Set;
+#copyStat(Lorg/apache/zookeeper/data/Stat;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
@3.5.0-alpha
+#<init>([BLjava/lang/Long;Lorg/apache/zookeeper/data/StatPersisted;)V
+#getApproximateDataSize()J
-#<init>(Lorg/apache/zookeeper/server/DataNode;[BLjava/lang/Long;Lorg/apache/zookeeper/data/StatPersisted;)V
@3.6.0
+#isDigestCached()Z
+#setDigestCached(Z)V
+#getDigest()J
+#setDigest(J)V
+#getData()[B
-#getApproximateDataSize()J

+###org/apache/zookeeper/server/DataTree$ProcessTxnResult
@3.3.0
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/server/DataTree$ZxidDigest
@3.6.0
+#serialize(Lorg/apache/jute/OutputArchive;)V
+#deserialize(Lorg/apache/jute/InputArchive;)V
+#getZxid()J
+#getDigestVersion()I
+#getDigest()J

+###org/apache/zookeeper/server/DataTree
@3.3.0
+#getEphemerals(J)Ljava/util/HashSet;
+#getEphemeralsMap()Ljava/util/Map;
+#convertAcls(Ljava/util/List;)Ljava/lang/Long;
+#convertLong(Ljava/lang/Long;)Ljava/util/List;
+#getSessions()Ljava/util/Collection;
+#addDataNode(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)V
+#getNode(Ljava/lang/String;)Lorg/apache/zookeeper/server/DataNode;
+#getNodeCount()I
+#getWatchCount()I
+#approximateDataSize()J
+#<init>()V
+#copyStatPersisted(Lorg/apache/zookeeper/data/StatPersisted;Lorg/apache/zookeeper/data/StatPersisted;)V
+#copyStat(Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/data/Stat;)V
+#updateCount(Ljava/lang/String;I)V
+#updateBytes(Ljava/lang/String;J)V
+#createNode(Ljava/lang/String;[BLjava/util/List;JJJ)Ljava/lang/String;
+#deleteNode(Ljava/lang/String;J)V
+#setData(Ljava/lang/String;[BIJJ)Lorg/apache/zookeeper/data/Stat;
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)[B
+#statNode(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Lorg/apache/zookeeper/data/Stat;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)Ljava/util/List;
+#setACL(Ljava/lang/String;Ljava/util/List;I)Lorg/apache/zookeeper/data/Stat;
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#dumpWatchesSummary(Ljava/io/PrintWriter;)V
+#dumpWatches(Ljava/io/PrintWriter;Z)V
+#dumpEphemerals(Ljava/io/PrintWriter;)V
+#removeCnxn(Lorg/apache/zookeeper/Watcher;)V
+#clear()V
+#setWatches(JLjava/util/List;Ljava/util/List;Ljava/util/List;Lorg/apache/zookeeper/Watcher;)V
@3.3.4
+#getMaxPrefixWithQuota(Ljava/lang/String;)Ljava/lang/String;
+#incrementCversion(Ljava/lang/String;J)V
@3.4.0
+#getEphemeralsCount()I
+#createNode(Ljava/lang/String;[BLjava/util/List;JIJJ)Ljava/lang/String;
+#setCversionPzxid(Ljava/lang/String;IJ)V
-#createNode(Ljava/lang/String;[BLjava/util/List;JJJ)Ljava/lang/String;
-#incrementCversion(Ljava/lang/String;J)V
@3.4.9
+#getACL(Lorg/apache/zookeeper/server/DataNode;)Ljava/util/List;
+#getACL(Lorg/apache/zookeeper/server/upgrade/DataNodeV1;)Ljava/lang/Long;
+#aclCacheSize()I
-#convertAcls(Ljava/util/List;)Ljava/lang/Long;
-#convertLong(Ljava/lang/Long;)Ljava/util/List;
@3.5.0-alpha
+#getEphemerals(J)Ljava/util/Set;
+#convertAcls(Ljava/util/List;)Ljava/lang/Long;
+#convertLong(Ljava/lang/Long;)Ljava/util/List;
+#addConfigNode()V
+#createNode(Ljava/lang/String;[BLjava/util/List;JIJJ)V
+#createNode(Ljava/lang/String;[BLjava/util/List;JIJJLorg/apache/zookeeper/data/Stat;)V
+#getWatches()Lorg/apache/zookeeper/server/WatchesReport;
+#getWatchesByPath()Lorg/apache/zookeeper/server/WatchesPathReport;
+#getWatchesSummary()Lorg/apache/zookeeper/server/WatchesSummary;
+#getEphemerals()Ljava/util/Map;
+#containsWatcher(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$WatcherType;Lorg/apache/zookeeper/Watcher;)Z
+#removeWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$WatcherType;Lorg/apache/zookeeper/Watcher;)Z
-#getEphemerals(J)Ljava/util/HashSet;
-#getEphemeralsMap()Ljava/util/Map;
-#addDataNode(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)V
-#createNode(Ljava/lang/String;[BLjava/util/List;JIJJ)Ljava/lang/String;
-#getACL(Lorg/apache/zookeeper/server/DataNode;)Ljava/util/List;
-#getACL(Lorg/apache/zookeeper/server/upgrade/DataNodeV1;)Ljava/lang/Long;
-#aclCacheSize()I
-#clear()V
@3.5.1-alpha
+#getContainers()Ljava/util/Set;
@3.5.2-alpha
+#getACL(Lorg/apache/zookeeper/server/DataNode;)Ljava/util/List;
+#aclCacheSize()I
-#convertAcls(Ljava/util/List;)Ljava/lang/Long;
-#convertLong(Ljava/lang/Long;)Ljava/util/List;
@3.5.3-beta
+#getTtls()Ljava/util/Set;
@3.5.4-beta
+#getReferenceCountedAclCache()Lorg/apache/zookeeper/server/ReferenceCountedACLCache;
@3.5.5
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Z)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
+#serializeNodeData(Lorg/apache/jute/OutputArchive;Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)V
@3.6.0
+#cachedApproximateDataSize()J
+#updateCountBytes(Ljava/lang/String;JI)V
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;I)V
+#getAllChildrenNumber(Ljava/lang/String;)I
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
+#serializeAcls(Lorg/apache/jute/OutputArchive;)V
+#serializeNodes(Lorg/apache/jute/OutputArchive;)V
+#getWatches()Lorg/apache/zookeeper/server/watch/WatchesReport;
+#getWatchesByPath()Lorg/apache/zookeeper/server/watch/WatchesPathReport;
+#getWatchesSummary()Lorg/apache/zookeeper/server/watch/WatchesSummary;
+#shutdownWatcher()V
+#setWatches(JLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/apache/zookeeper/Watcher;)V
+#serializeZxidDigest(Lorg/apache/jute/OutputArchive;)Z
+#deserializeZxidDigest(Lorg/apache/jute/InputArchive;J)Z
+#compareSnapshotDigests(J)V
+#compareDigest(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)Z
+#reportDigestMismatch(J)V
+#getTreeDigest()J
+#getLastProcessedZxidDigest()Lorg/apache/zookeeper/server/DataTree$ZxidDigest;
+#getDigestFromLoadedSnapshot()Lorg/apache/zookeeper/server/DataTree$ZxidDigest;
+#addDigestWatcher(Lorg/apache/zookeeper/DigestWatcher;)V
+#getDigestLog()Ljava/util/List;
+#createStat(JJJ)Lorg/apache/zookeeper/data/StatPersisted;
-#updateCount(Ljava/lang/String;I)V
-#updateBytes(Ljava/lang/String;J)V
-#getWatches()Lorg/apache/zookeeper/server/WatchesReport;
-#getWatchesByPath()Lorg/apache/zookeeper/server/WatchesPathReport;
-#getWatchesSummary()Lorg/apache/zookeeper/server/WatchesSummary;
-#setWatches(JLjava/util/List;Ljava/util/List;Ljava/util/List;Lorg/apache/zookeeper/Watcher;)V
@3.7.0
+#updateQuotaStat(Ljava/lang/String;JI)V
-#updateCountBytes(Ljava/lang/String;JI)V

+###org/apache/zookeeper/server/DataTreeBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/DataTree;)V
+#getNodeCount()I
+#approximateDataSize()J
+#countEphemerals()I
+#getWatchCount()I
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getLastZxid()Ljava/lang/String;

+###org/apache/zookeeper/server/DataTreeMXBean
@3.3.0
+#getNodeCount()I
+#getLastZxid()Ljava/lang/String;
+#getWatchCount()I
+#approximateDataSize()J
+#countEphemerals()I

+###org/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus
@3.4.0
+#values()[Lorg/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus;

+###org/apache/zookeeper/server/DatadirCleanupManager
@3.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;II)V
+#start()V
+#shutdown()V
+#getPurgeTaskStatus()Lorg/apache/zookeeper/server/DatadirCleanupManager$PurgeTaskStatus;
+#getSnapDir()Ljava/lang/String;
+#getDataLogDir()Ljava/lang/String;
+#getPurgeInterval()I
+#getSnapRetainCount()I
@3.5.0-alpha
+#<init>(Ljava/io/File;Ljava/io/File;II)V
+#getSnapDir()Ljava/io/File;
+#getDataLogDir()Ljava/io/File;
-#<init>(Ljava/lang/String;Ljava/lang/String;II)V
-#getSnapDir()Ljava/lang/String;
-#getDataLogDir()Ljava/lang/String;

+###org/apache/zookeeper/server/DigestCalculator
@3.6.0
+#<init>()V

+###org/apache/zookeeper/server/DumbWatcher
@3.6.0
+#<init>()V
+#<init>(J)V
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
+#close(Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V
+#sendCloseSession()V
+#getSessionId()J
+#getOutstandingRequests()J
+#getRemoteSocketAddress()Ljava/net/InetSocketAddress;
+#getInterestOps()I
+#isSecure()Z
+#getClientCertificateChain()[Ljava/security/cert/Certificate;
+#setClientCertificateChain([Ljava/security/cert/Certificate;)V
@3.7.0
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)I
-#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V

+###org/apache/zookeeper/server/EphemeralType
@3.5.3-beta
+#values()[Lorg/apache/zookeeper/server/EphemeralType;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/EphemeralType;
+#get(J)Lorg/apache/zookeeper/server/EphemeralType;
+#validateTTL(Lorg/apache/zookeeper/CreateMode;J)V
+#getTTL(J)J
+#ttlToEphemeralOwner(J)J
@3.5.4-beta
+#maxValue()J
+#toEphemeralOwner(J)J
+#getValue(J)J
+#extendedEphemeralTypesEnabled()Z
+#validateServerId(J)V
-#getTTL(J)J
-#ttlToEphemeralOwner(J)J

+###org/apache/zookeeper/server/EphemeralTypeEmulate353
@3.5.4-beta
+#values()[Lorg/apache/zookeeper/server/EphemeralTypeEmulate353;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/EphemeralTypeEmulate353;
+#get(J)Lorg/apache/zookeeper/server/EphemeralTypeEmulate353;
+#ttlToEphemeralOwner(J)J

+###org/apache/zookeeper/server/ExitCode
@3.4.7
+#<init>()V
@3.5.0-alpha
-###org/apache/zookeeper/server/ExitCode

+###org/apache/zookeeper/server/ExpiryQueue
@3.5.0-alpha
+#<init>(I)V
+#remove(Ljava/lang/Object;)Ljava/lang/Long;
+#update(Ljava/lang/Object;I)Ljava/lang/Long;
+#getWaitTime()J
+#poll()Ljava/util/Set;
+#dump(Ljava/io/PrintWriter;)V
+#getExpiryMap()Ljava/util/Map;

+###org/apache/zookeeper/server/FinalRequestProcessor
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V

+###org/apache/zookeeper/server/NIOServerCnxn
@3.3.0
+#sendCloseSession()V
+#disableRecv()V
+#enableRecv()V
+#getSessionTimeout()I
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SelectionKey;Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;)V
+#toString()Ljava/lang/String;
+#close()V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
+#finishSessionInit(Z)V
+#getSessionId()J
+#setSessionId(J)V
+#getAuthInfo()Ljava/util/ArrayList;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getStats()Lorg/apache/zookeeper/server/ServerCnxn$Stats;
@3.4.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SelectionKey;Lorg/apache/zookeeper/server/NIOServerCnxnFactory;)V
+#sendBuffer(Ljava/nio/ByteBuffer;)V
+#getOutstandingRequests()J
+#setSessionTimeout(I)V
+#getInterestOps()I
+#getRemoteSocketAddress()Ljava/net/InetSocketAddress;
-#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SelectionKey;Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;)V
-#finishSessionInit(Z)V
-#getAuthInfo()Ljava/util/ArrayList;
-#getRemoteAddress()Ljava/net/InetSocketAddress;
-#getStats()Lorg/apache/zookeeper/server/ServerCnxn$Stats;
@3.4.11
+#getSocketAddress()Ljava/net/InetAddress;
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SelectionKey;Lorg/apache/zookeeper/server/NIOServerCnxnFactory;Lorg/apache/zookeeper/server/NIOServerCnxnFactory$SelectorThread;)V
+#isSelectable()Z
+#disableSelectable()V
+#enableSelectable()V
+#closeSock(Ljava/nio/channels/SocketChannel;)V
-#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SelectionKey;Lorg/apache/zookeeper/server/NIOServerCnxnFactory;)V
@3.5.1-alpha
+#isSecure()Z
+#getClientCertificateChain()[Ljava/security/cert/Certificate;
+#setClientCertificateChain([Ljava/security/cert/Certificate;)V
@3.6.0
+#sendBuffer([Ljava/nio/ByteBuffer;)V
+#disableRecv(Z)V
+#close(Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V
-#sendBuffer(Ljava/nio/ByteBuffer;)V
-#disableRecv()V
-#getOutstandingRequests()J
-#close()V
-#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V
@3.7.0
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)I
-#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V

+###org/apache/zookeeper/server/NIOServerCnxnFactory$SelectorThread
@3.7.0
+#<init>(Lorg/apache/zookeeper/server/NIOServerCnxnFactory;I)V
+#addAcceptedConnection(Ljava/nio/channels/SocketChannel;)Z
+#addInterestOpsUpdateRequest(Ljava/nio/channels/SelectionKey;)Z
+#run()V
+#wakeupSelector()V

+###org/apache/zookeeper/server/NIOServerCnxnFactory
@3.4.0
+#<init>()V
+#configure(Ljava/net/InetSocketAddress;I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#start()V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getLocalPort()I
+#run()V
+#closeAll()V
+#shutdown()V
+#closeSession(J)V
+#join()V
+#getConnections()Ljava/lang/Iterable;
@3.4.11
+#removeCnxn(Lorg/apache/zookeeper/server/NIOServerCnxn;)V
@3.5.0-alpha
+#getDirectBuffer()Ljava/nio/ByteBuffer;
+#reconfigure(Ljava/net/InetSocketAddress;)V
+#removeCnxn(Lorg/apache/zookeeper/server/NIOServerCnxn;)Z
+#touchCnxn(Lorg/apache/zookeeper/server/NIOServerCnxn;)V
+#stop()V
+#addSession(JLorg/apache/zookeeper/server/NIOServerCnxn;)V
+#dumpConnections(Ljava/io/PrintWriter;)V
+#resetAllConnectionStats()V
+#getAllConnectionInfo(Z)Ljava/lang/Iterable;
-#removeCnxn(Lorg/apache/zookeeper/server/NIOServerCnxn;)V
-#run()V
@3.5.1-alpha
+#configure(Ljava/net/InetSocketAddress;IZ)V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;Z)V
+#closeSession(J)Z
-#configure(Ljava/net/InetSocketAddress;I)V
-#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
-#closeSession(J)V
@3.6.0
+#configure(Ljava/net/InetSocketAddress;IIZ)V
+#getSocketListenBacklog()I
+#closeAll(Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
-#configure(Ljava/net/InetSocketAddress;IZ)V
-#closeAll()V
-#addSession(JLorg/apache/zookeeper/server/NIOServerCnxn;)V
-#closeSession(J)Z

+###org/apache/zookeeper/server/NettyServerCnxn$HandshakeState
@3.6.0
+#values()[Lorg/apache/zookeeper/server/NettyServerCnxn$HandshakeState;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/NettyServerCnxn$HandshakeState;

+###org/apache/zookeeper/server/NettyServerCnxn
@3.4.0
+#close()V
+#getSessionId()J
+#getSessionTimeout()I
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V
+#setSessionId(J)V
+#enableRecv()V
+#sendBuffer(Ljava/nio/ByteBuffer;)V
+#receiveMessage(Lorg/jboss/netty/buffer/ChannelBuffer;)V
+#disableRecv()V
+#getOutstandingRequests()J
+#setSessionTimeout(I)V
+#getInterestOps()I
+#getRemoteSocketAddress()Ljava/net/InetSocketAddress;
+#sendCloseSession()V
@3.4.11
+#getSocketAddress()Ljava/net/InetAddress;
@3.5.0-alpha
-#getSocketAddress()Ljava/net/InetAddress;
@3.5.1-alpha
+#isSecure()Z
+#getClientCertificateChain()[Ljava/security/cert/Certificate;
+#setClientCertificateChain([Ljava/security/cert/Certificate;)V
@3.5.5
-#receiveMessage(Lorg/jboss/netty/buffer/ChannelBuffer;)V
@3.6.0
+#close(Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V
+#sendBuffer([Ljava/nio/ByteBuffer;)V
+#disableRecv(Z)V
+#getQueuedReadableBytes()I
+#setHandshakeState(Lorg/apache/zookeeper/server/NettyServerCnxn$HandshakeState;)V
+#getHandshakeState()Lorg/apache/zookeeper/server/NettyServerCnxn$HandshakeState;
-#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V
-#sendBuffer(Ljava/nio/ByteBuffer;)V
-#disableRecv()V
-#getOutstandingRequests()J
@3.7.0
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)I
-#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V

+###org/apache/zookeeper/server/NettyServerCnxnFactory
@3.4.0
+#closeAll()V
+#closeSession(J)V
+#configure(Ljava/net/InetSocketAddress;I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#getLocalPort()I
+#join()V
+#shutdown()V
+#start()V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getConnections()Ljava/lang/Iterable;
+#getLocalAddress()Ljava/net/InetSocketAddress;
@3.4.11
+#removeCnxn(Lorg/apache/zookeeper/server/ServerCnxn;)V
@3.5.0-alpha
+#reconfigure(Ljava/net/InetSocketAddress;)V
+#resetAllConnectionStats()V
+#getAllConnectionInfo(Z)Ljava/lang/Iterable;
-#removeCnxn(Lorg/apache/zookeeper/server/ServerCnxn;)V
@3.5.1-alpha
+#closeSession(J)Z
+#configure(Ljava/net/InetSocketAddress;IZ)V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;Z)V
-#closeSession(J)V
-#configure(Ljava/net/InetSocketAddress;I)V
-#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
@3.6.0
+#setOutstandingHandshakeLimit(I)V
+#closeAll(Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
+#configure(Ljava/net/InetSocketAddress;IIZ)V
+#getSocketListenBacklog()I
+#setAdvancedFlowControlEnabled(Z)V
+#setSecure(Z)V
+#getParentChannel()Lio/netty/channel/Channel;
+#getOutstandingHandshakeNum()I
-#closeAll()V
-#closeSession(J)Z
-#configure(Ljava/net/InetSocketAddress;IZ)V

+###org/apache/zookeeper/server/NodeHashMap
@3.6.0
+#put(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)Lorg/apache/zookeeper/server/DataNode;
+#putWithoutDigest(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)Lorg/apache/zookeeper/server/DataNode;
+#get(Ljava/lang/String;)Lorg/apache/zookeeper/server/DataNode;
+#remove(Ljava/lang/String;)Lorg/apache/zookeeper/server/DataNode;
+#entrySet()Ljava/util/Set;
+#clear()V
+#size()I
+#preChange(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)V
+#postChange(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)V
+#getDigest()J

+###org/apache/zookeeper/server/NodeHashMapImpl
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V
+#put(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)Lorg/apache/zookeeper/server/DataNode;
+#putWithoutDigest(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)Lorg/apache/zookeeper/server/DataNode;
+#get(Ljava/lang/String;)Lorg/apache/zookeeper/server/DataNode;
+#remove(Ljava/lang/String;)Lorg/apache/zookeeper/server/DataNode;
+#entrySet()Ljava/util/Set;
+#clear()V
+#size()I
+#preChange(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)V
+#postChange(Ljava/lang/String;Lorg/apache/zookeeper/server/DataNode;)V
+#getDigest()J

+###org/apache/zookeeper/server/ObserverBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/Observer;Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getPendingRevalidationCount()I
+#getQuorumAddress()Ljava/lang/String;
@3.4.7
+#getName()Ljava/lang/String;
@3.5.0-alpha
-#getName()Ljava/lang/String;
@3.5.2-alpha
+#getName()Ljava/lang/String;
@3.6.0
+#getLearnerMaster()Ljava/lang/String;
+#setLearnerMaster(Ljava/lang/String;)V

+###org/apache/zookeeper/server/PrepRequestProcessor$DigestOpCode
@3.6.0
+#values()[Lorg/apache/zookeeper/server/PrepRequestProcessor$DigestOpCode;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/PrepRequestProcessor$DigestOpCode;

+###org/apache/zookeeper/server/PrepRequestProcessor
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#setFailCreate(Z)V
+#run()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@3.6.0
+#fixupACL(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/util/List;

+###org/apache/zookeeper/server/PurgeTxnLog
@3.3.0
+#<init>()V
+#purge(Ljava/io/File;Ljava/io/File;I)V
+#main([Ljava/lang/String;)V

+###org/apache/zookeeper/server/RateLogger
@3.5.0-alpha
+#<init>(Lorg/slf4j/Logger;)V
+#flush()V
+#rateLimitLog(Ljava/lang/String;)V
@3.6.0
+#<init>(Lorg/slf4j/Logger;J)V
+#rateLimitLog(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/zookeeper/server/ReferenceCountedACLCache
@3.4.9
+#<init>()V
+#convertAcls(Ljava/util/List;)Ljava/lang/Long;
+#convertLong(Ljava/lang/Long;)Ljava/util/List;
+#deserialize(Lorg/apache/jute/InputArchive;)V
+#serialize(Lorg/apache/jute/OutputArchive;)V
+#size()I
+#addUsage(Ljava/lang/Long;)V
+#removeUsage(Ljava/lang/Long;)V
+#purgeUnused()V
@3.5.0-alpha
-###org/apache/zookeeper/server/ReferenceCountedACLCache

+###org/apache/zookeeper/server/Request
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/ServerCnxn;JIILjava/nio/ByteBuffer;Ljava/util/List;)V
+#getOwner()Ljava/lang/Object;
+#setOwner(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#setException(Lorg/apache/zookeeper/KeeperException;)V
+#getException()Lorg/apache/zookeeper/KeeperException;
@3.4.13
+#<init>(JIILorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;J)V
@3.5.0-alpha
+#isLocalSession()Z
+#setLocalSession(Z)V
+#getHdr()Lorg/apache/zookeeper/txn/TxnHeader;
+#setHdr(Lorg/apache/zookeeper/txn/TxnHeader;)V
+#getTxn()Lorg/apache/jute/Record;
+#setTxn(Lorg/apache/jute/Record;)V
+#isQuorum()Z
@3.6.0
+#setLargeRequestSize(I)V
+#getLargeRequestSize()I
+#getConnection()Lorg/apache/zookeeper/server/ServerCnxn;
+#getStaleLatencyCheck()Z
+#setStaleLatencyCheck(Z)V
+#getStaleConnectionCheck()Z
+#setStaleConnectionCheck(Z)V
+#isStale()Z
+#mustDrop()Z
+#op2String(I)Ljava/lang/String;
+#logLatency(Lorg/apache/zookeeper/metrics/Summary;)V
+#logLatency(Lorg/apache/zookeeper/metrics/Summary;J)V
+#logLatency(Lorg/apache/zookeeper/metrics/SummarySet;Ljava/lang/String;J)V
+#logLatency(Lorg/apache/zookeeper/metrics/SummarySet;Ljava/lang/String;)V
+#getUsers()Ljava/lang/String;
+#getTxnDigest()Lorg/apache/zookeeper/txn/TxnDigest;
+#setTxnDigest(Lorg/apache/zookeeper/txn/TxnDigest;)V
@3.7.0
+#isThrottled()Z
+#setIsThrottled(Z)V
+#isThrottlable()Z
+#getUsersForAudit()Ljava/lang/String;
+#isFromLearner()Z
-#getUsers()Ljava/lang/String;

+###org/apache/zookeeper/server/RequestProcessor$RequestProcessorException
@3.3.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.4.0
-###org/apache/zookeeper/server/RequestProcessor$RequestProcessorException

+###org/apache/zookeeper/server/RequestProcessor
@3.3.0
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V

+###org/apache/zookeeper/server/RequestThrottler
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getMaxRequests()I
+#setMaxRequests(I)V
+#getStallTime()I
+#setStallTime(I)V
+#getDropStaleRequests()Z
+#setDropStaleRequests(Z)V
+#run()V
+#throttleWake()V
+#submitRequest(Lorg/apache/zookeeper/server/Request;)V
+#getInflight()I
+#shutdown()V

+###org/apache/zookeeper/server/ResponseCache
@3.6.0
+#<init>(I)V
+#getCacheSize()I
+#put(Ljava/lang/String;[BLorg/apache/zookeeper/data/Stat;)V
+#get(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)[B
+#isEnabled()Z
@3.7.0
+#<init>(ILjava/lang/String;)V
-#<init>(I)V

+###org/apache/zookeeper/server/ServerCnxn$CloseRequestException
@3.4.0
+#<init>(Ljava/lang/String;)V
@3.6.0
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
+#getReason()Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;
-#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/server/ServerCnxn$DisconnectReason
@3.6.0
+#values()[Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;
+#toDisconnectReasonString()Ljava/lang/String;

+###org/apache/zookeeper/server/ServerCnxn$EndOfStreamException
@3.4.0
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@3.6.0
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
+#getReason()Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;
-#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/server/ServerCnxn
@3.3.0
+#getSessionTimeout()I
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V
+#sendCloseSession()V
+#finishSessionInit(Z)V
+#process(Lorg/apache/zookeeper/WatchedEvent;)V
+#getSessionId()J
+#setSessionId(J)V
+#getAuthInfo()Ljava/util/ArrayList;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getStats()Lorg/apache/zookeeper/server/ServerCnxn$Stats;
@3.4.0
+#<init>()V
+#getAuthInfo()Ljava/util/List;
+#addAuthInfo(Lorg/apache/zookeeper/data/Id;)V
+#removeAuthInfo(Lorg/apache/zookeeper/data/Id;)Z
+#resetStats()V
+#getEstablished()Ljava/util/Date;
+#getOutstandingRequests()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getLastOperation()Ljava/lang/String;
+#getLastCxid()J
+#getLastZxid()J
+#getLastResponseTime()J
+#getLastLatency()J
+#toString()Ljava/lang/String;
+#getRemoteSocketAddress()Ljava/net/InetSocketAddress;
+#getInterestOps()I
-#getSessionTimeout()I
-#sendCloseSession()V
-#finishSessionInit(Z)V
-#getSessionId()J
-#setSessionId(J)V
-#getAuthInfo()Ljava/util/ArrayList;
-#getRemoteAddress()Ljava/net/InetSocketAddress;
-#getStats()Lorg/apache/zookeeper/server/ServerCnxn$Stats;
@3.4.10
+#resetWhiteList()V
+#getCommandString(I)Ljava/lang/String;
+#isKnown(I)Z
+#isEnabled(Ljava/lang/String;)Z
@3.4.11
+#getSocketAddress()Ljava/net/InetAddress;
@3.5.0-alpha
+#getConnectionInfo(Z)Ljava/util/Map;
-#getSocketAddress()Ljava/net/InetAddress;
-#resetWhiteList()V
-#getCommandString(I)Ljava/lang/String;
-#isKnown(I)Z
-#isEnabled(Ljava/lang/String;)Z
@3.5.1-alpha
+#getSessionId()J
+#isSecure()Z
+#getClientCertificateChain()[Ljava/security/cert/Certificate;
+#setClientCertificateChain([Ljava/security/cert/Certificate;)V
+#dumpConnectionInfo(Ljava/io/PrintWriter;Z)V
+#cleanupWriterSocket(Ljava/io/PrintWriter;)V
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#incrOutstandingAndCheckThrottle(Lorg/apache/zookeeper/proto/RequestHeader;)V
+#decrOutstandingAndCheckThrottle(Lorg/apache/zookeeper/proto/ReplyHeader;)V
+#close(Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V
+#sendCloseSession()V
+#isStale()Z
+#setStale()V
+#isInvalid()Z
+#setInvalid()V
+#getHostAddress()Ljava/lang/String;
+#getSessionIdHex()Ljava/lang/String;
-#<init>()V
@3.7.0
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)I
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)I
+#isZKServerRunning()Z
-#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;I)V
-#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)V

+###org/apache/zookeeper/server/ServerCnxnFactory
@3.4.0
+#<init>()V
+#getLocalPort()I
+#getConnections()Ljava/lang/Iterable;
+#closeSession(J)V
+#configure(Ljava/net/InetSocketAddress;I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#join()V
+#shutdown()V
+#start()V
+#setZooKeeperServer(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#closeAll()V
+#createFactory()Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#createFactory(II)Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#createFactory(Ljava/net/InetSocketAddress;I)Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#unregisterConnection(Lorg/apache/zookeeper/server/ServerCnxn;)V
+#registerConnection(Lorg/apache/zookeeper/server/ServerCnxn;)V
@3.4.4
+#getNumAliveConnections()I
@3.4.11
+#addSession(JLorg/apache/zookeeper/server/ServerCnxn;)V
@3.5.0-alpha
+#getZooKeeperServer()Lorg/apache/zookeeper/server/ZooKeeperServer;
+#reconfigure(Ljava/net/InetSocketAddress;)V
+#resetAllConnectionStats()V
+#getAllConnectionInfo(Z)Ljava/lang/Iterable;
-#addSession(JLorg/apache/zookeeper/server/ServerCnxn;)V
@3.5.1-alpha
+#closeSession(J)Z
+#configure(Ljava/net/InetSocketAddress;IZ)V
+#isSecure()Z
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;Z)V
-#closeSession(J)V
@3.6.0
+#addSession(JLorg/apache/zookeeper/server/ServerCnxn;)V
+#removeCnxnFromSessionMap(Lorg/apache/zookeeper/server/ServerCnxn;)V
+#closeSession(JLorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)Z
+#configure(Ljava/net/InetSocketAddress;II)V
+#configure(Ljava/net/InetSocketAddress;IIZ)V
+#getSocketListenBacklog()I
+#closeAll(Lorg/apache/zookeeper/server/ServerCnxn$DisconnectReason;)V
+#createFactory(III)Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#createFactory(Ljava/net/InetSocketAddress;II)Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#getUserName()Ljava/lang/String;
+#getMaxCnxns()I
-#closeSession(J)Z
-#configure(Ljava/net/InetSocketAddress;IZ)V
-#closeAll()V

+###org/apache/zookeeper/server/ServerCnxnHelper
@3.6.0
+#<init>()V
+#getMaxCnxns(Lorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/ServerCnxnFactory;)I

+###org/apache/zookeeper/server/ServerConfig
@3.3.0
+#<init>()V
+#parse([Ljava/lang/String;)V
+#parse(Ljava/lang/String;)V
+#readFrom(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
+#getClientPortAddress()Ljava/net/InetSocketAddress;
+#getDataDir()Ljava/lang/String;
+#getDataLogDir()Ljava/lang/String;
+#getTickTime()I
+#getMaxClientCnxns()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
@3.5.0-alpha
+#getDataDir()Ljava/io/File;
+#getDataLogDir()Ljava/io/File;
-#getDataDir()Ljava/lang/String;
-#getDataLogDir()Ljava/lang/String;
@3.5.1-alpha
+#getSecureClientPortAddress()Ljava/net/InetSocketAddress;
@3.5.10
+#getJvmPauseInfoThresholdMs()J
+#getJvmPauseWarnThresholdMs()J
+#getJvmPauseSleepTimeMs()J
+#isJvmPauseMonitorToRun()Z
@3.6.0
+#getMetricsProviderClassName()Ljava/lang/String;
+#getMetricsProviderConfiguration()Ljava/util/Properties;
+#getClientPortListenBacklog()I

+###org/apache/zookeeper/server/ServerMetrics
@3.6.0
+#getMetrics()Lorg/apache/zookeeper/server/ServerMetrics;
+#metricsProviderInitialized(Lorg/apache/zookeeper/metrics/MetricsProvider;)V
+#resetAll()V
+#getMetricsProvider()Lorg/apache/zookeeper/metrics/MetricsProvider;

+###org/apache/zookeeper/server/ServerStats$Provider
@3.3.0
+#getOutstandingRequests()J
+#getLastProcessedZxid()J
+#getState()Ljava/lang/String;
@3.4.4
+#getNumAliveConnections()I
@3.5.1-alpha
+#getDataDirSize()J
+#getLogDirSize()J

+###org/apache/zookeeper/server/ServerStats
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/ServerStats$Provider;)V
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getOutstandingRequests()J
+#getLastProcessedZxid()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getServerState()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#resetLatency()V
+#resetMaxLatency()V
+#incrementPacketsReceived()V
+#incrementPacketsSent()V
+#resetRequestCounters()V
+#reset()V
@3.4.4
+#getNumAliveClientConnections()I
@3.4.13
+#getFsyncThresholdExceedCount()J
+#incrementFsyncThresholdExceedCount()V
+#resetFsyncThresholdExceedCount()V
@3.5.0-alpha
+#isProviderNull()Z
-#getFsyncThresholdExceedCount()J
-#incrementFsyncThresholdExceedCount()V
-#resetFsyncThresholdExceedCount()V
@3.5.1-alpha
+#getDataDirSize()J
+#getLogDirSize()J
@3.5.5
+#getFsyncThresholdExceedCount()J
+#incrementFsyncThresholdExceedCount()V
+#resetFsyncThresholdExceedCount()V
+#updateClientResponseSize(I)V
+#getClientResponseStats()Lorg/apache/zookeeper/server/quorum/BufferStats;
@3.6.0
+#getAvgLatency()D
+#getUptime()J
+#updateLatency(Lorg/apache/zookeeper/server/Request;J)V
-#getAvgLatency()J
@3.6.3
+#getNonMTLSLocalConnCount()J
+#incrementNonMTLSLocalConnCount()V
+#resetNonMTLSLocalConnCount()V
+#getNonMTLSRemoteConnCount()J
+#incrementNonMTLSRemoteConnCount()V
+#resetNonMTLSRemoteConnCount()V
+#getAuthFailedCount()J
+#incrementAuthFailedCount()V
+#resetAuthFailedCount()V

+###org/apache/zookeeper/server/SessionTracker$Session
@3.3.0
+#getSessionId()J
+#getTimeout()I
@3.3.4
+#isClosing()Z

+###org/apache/zookeeper/server/SessionTracker$SessionExpirer
@3.3.0
+#expire(Lorg/apache/zookeeper/server/SessionTracker$Session;)V
+#getServerId()J

+###org/apache/zookeeper/server/SessionTracker
@3.3.0
+#createSession(I)J
+#addSession(JI)V
+#touchSession(JI)Z
+#shutdown()V
+#removeSession(J)V
+#checkSession(JLjava/lang/Object;)V
+#setOwner(JLjava/lang/Object;)V
+#dumpSessions(Ljava/io/PrintWriter;)V
@3.3.4
+#setSessionClosing(J)V
@3.5.0-alpha
+#addGlobalSession(JI)Z
+#addSession(JI)Z
+#isTrackingSession(J)Z
+#checkGlobalSession(JLjava/lang/Object;)V
+#getSessionExpiryMap()Ljava/util/Map;
-#addSession(JI)V
@3.6.0
+#trackSession(JI)Z
+#commitSession(JI)Z
+#getLocalSessionCount()J
+#isLocalSessionsEnabled()Z
-#addGlobalSession(JI)Z
-#addSession(JI)Z
@3.7.1
+#globalSessions()Ljava/util/Set;
+#localSessions()Ljava/util/Set;

+###org/apache/zookeeper/server/SessionTrackerImpl$SessionImpl
@3.3.0
+#getSessionId()J
+#getTimeout()I
@3.3.4
+#isClosing()Z
@3.5.0-alpha
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/SessionTrackerImpl
@3.3.0
+#initializeNextSession(J)J
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;IJ)V
+#dumpSessions(Ljava/io/PrintWriter;)V
+#toString()Ljava/lang/String;
+#run()V
+#touchSession(JI)Z
+#removeSession(J)V
+#shutdown()V
+#createSession(I)J
+#addSession(JI)V
+#checkSession(JLjava/lang/Object;)V
+#setOwner(JLjava/lang/Object;)V
@3.3.4
+#setSessionClosing(J)V
@3.4.7
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;IJLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;IJ)V
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJ)V
+#getSessionExpiryMap()Ljava/util/Map;
+#getSessionTimeout(J)I
+#addGlobalSession(JI)Z
+#addSession(JI)Z
+#isTrackingSession(J)Z
+#checkGlobalSession(JLjava/lang/Object;)V
-#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;IJLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#addSession(JI)V
@3.5.1-alpha
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJ)V
@3.6.0
+#initializeNextSessionId(J)J
+#trackSession(JI)Z
+#commitSession(JI)Z
+#getLocalSessionCount()J
+#isLocalSessionsEnabled()Z
-#initializeNextSession(J)J
-#addGlobalSession(JI)Z
-#addSession(JI)Z
@3.7.1
+#globalSessions()Ljava/util/Set;
+#localSessions()Ljava/util/Set;

+###org/apache/zookeeper/server/SnapshotComparer$TreeInfo$TreeNode$AlphabeticComparator
@3.7.0
+#<init>()V
+#compare(Lorg/apache/zookeeper/server/SnapshotComparer$TreeInfo$TreeNode;Lorg/apache/zookeeper/server/SnapshotComparer$TreeInfo$TreeNode;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/zookeeper/server/SnapshotComparer$TreeInfo$TreeNode
@3.7.0
+#<init>(Ljava/lang/String;J)V

+###org/apache/zookeeper/server/SnapshotComparer
@3.7.0
+#main([Ljava/lang/String;)V

+###org/apache/zookeeper/server/SnapshotFormatter
@3.4.4
+#<init>()V
+#main([Ljava/lang/String;)V
+#run(Ljava/lang/String;)V
@3.5.10
+#run(Ljava/lang/String;ZZ)V
-#run(Ljava/lang/String;)V

+###org/apache/zookeeper/server/SyncRequestProcessor
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#setSnapCount(I)V
+#getSnapCount()I
+#run()V
+#shutdown()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
@3.6.0
+#setSnapSizeInBytes(J)V

+###org/apache/zookeeper/server/TraceFormatter
@3.3.0
+#<init>()V
+#main([Ljava/lang/String;)V
@3.4.13
+#op2String(I)Ljava/lang/String;
@3.6.0
-#op2String(I)Ljava/lang/String;

+###org/apache/zookeeper/server/TxnLogEntry
@3.6.0
+#<init>(Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/zookeeper/txn/TxnDigest;)V
+#getTxn()Lorg/apache/jute/Record;
+#getHeader()Lorg/apache/zookeeper/txn/TxnHeader;
+#getDigest()Lorg/apache/zookeeper/txn/TxnDigest;

+###org/apache/zookeeper/server/TxnLogProposalIterator
@3.5.0-alpha
+#hasNext()Z
+#next()Lorg/apache/zookeeper/server/quorum/Leader$Proposal;
+#remove()V
+#close()V
+#<init>(Lorg/apache/zookeeper/server/persistence/TxnLog$TxnIterator;)V
+#next()Ljava/lang/Object;

+###org/apache/zookeeper/server/UnimplementedRequestProcessor
@3.4.6
+#<init>()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V

+###org/apache/zookeeper/server/WorkerService$WorkRequest
@3.5.0-alpha
+#<init>()V
+#doWork()V
+#cleanup()V

+###org/apache/zookeeper/server/WorkerService
@3.5.0-alpha
+#<init>(Ljava/lang/String;IZ)V
+#schedule(Lorg/apache/zookeeper/server/WorkerService$WorkRequest;)V
+#schedule(Lorg/apache/zookeeper/server/WorkerService$WorkRequest;J)V
+#start()V
+#stop()V
+#join(J)V

+###org/apache/zookeeper/server/ZKDatabase
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;)V
+#isInitialized()Z
+#clear()V
+#getDataTree()Lorg/apache/zookeeper/server/DataTree;
+#getmaxCommittedLog()J
+#getminCommittedLog()J
+#getCommittedLog()Ljava/util/LinkedList;
+#getDataTreeLastProcessedZxid()J
+#setDataTreeInit(Z)V
+#getSessions()Ljava/util/Collection;
+#getSessionWithTimeOuts()Ljava/util/concurrent/ConcurrentHashMap;
+#loadDataBase()J
+#addCommittedProposal(Lorg/apache/zookeeper/server/Request;)V
+#removeCnxn(Lorg/apache/zookeeper/server/ServerCnxn;)V
+#killSession(JJ)V
+#dumpEphemerals(Ljava/io/PrintWriter;)V
+#getNodeCount()I
+#getEphemerals(J)Ljava/util/HashSet;
+#setlastProcessedZxid(J)V
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
+#statNode(Ljava/lang/String;Lorg/apache/zookeeper/server/ServerCnxn;)Lorg/apache/zookeeper/data/Stat;
+#getNode(Ljava/lang/String;)Lorg/apache/zookeeper/server/DataNode;
+#convertLong(Ljava/lang/Long;)Ljava/util/List;
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)[B
+#setWatches(JLjava/util/List;Ljava/util/List;Ljava/util/List;Lorg/apache/zookeeper/Watcher;)V
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)Ljava/util/List;
+#isSpecialPath(Ljava/lang/String;)Z
+#getAclSize()I
+#truncateLog(J)Z
+#deserializeSnapshot(Lorg/apache/jute/InputArchive;)V
+#serializeSnapshot(Lorg/apache/jute/OutputArchive;)V
+#append(Lorg/apache/zookeeper/server/Request;)Z
+#rollLog()V
+#commit()V
+#close()V
@3.3.3
+#getLogLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@3.4.9
+#aclForNode(Lorg/apache/zookeeper/server/DataNode;)Ljava/util/List;
-#convertLong(Ljava/lang/Long;)Ljava/util/List;
@3.4.12
+#fastForwardDataBase()J
@3.5.0-alpha
+#getCommittedLog()Ljava/util/List;
+#getSnapshotSizeFactor()D
+#calculateTxnLogSizeLimit()J
+#getProposalsFromTxnLog(JJ)Ljava/util/Iterator;
+#getEphemerals()Ljava/util/Map;
+#getEphemerals(J)Ljava/util/Set;
+#convertLong(Ljava/lang/Long;)Ljava/util/List;
+#initConfigInZKDatabase(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#setSnapshotSizeFactor(D)V
+#containsWatcher(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$WatcherType;Lorg/apache/zookeeper/Watcher;)Z
+#removeWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$WatcherType;Lorg/apache/zookeeper/Watcher;)Z
-#getCommittedLog()Ljava/util/LinkedList;
-#setDataTreeInit(Z)V
-#fastForwardDataBase()J
-#aclForNode(Lorg/apache/zookeeper/server/DataNode;)Ljava/util/List;
-#getEphemerals(J)Ljava/util/HashSet;
@3.5.2-alpha
+#aclForNode(Lorg/apache/zookeeper/server/DataNode;)Ljava/util/List;
-#convertLong(Ljava/lang/Long;)Ljava/util/List;
@3.5.4-beta
+#fastForwardDataBase()J
+#isTxnLogSyncEnabled()Z
-#getSnapshotSizeFactor()D
@3.5.5
+#createDataTree()Lorg/apache/zookeeper/server/DataTree;
@3.6.0
+#getCommittedLog()Ljava/util/Collection;
+#getSessionCount()J
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
+#setWatches(JLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/apache/zookeeper/Watcher;)V
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;I)V
+#getAllChildrenNumber(Ljava/lang/String;)I
+#resetTxnCount()V
+#getTxnCount()I
+#getTxnSize()J
+#compareDigest(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)Z
-#getCommittedLog()Ljava/util/List;
-#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
-#setWatches(JLjava/util/List;Ljava/util/List;Ljava/util/List;Lorg/apache/zookeeper/Watcher;)V

+###org/apache/zookeeper/server/ZooKeeperCriticalThread
@3.4.7
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/server/ZooKeeperServerListener;)V
@3.5.0-alpha
+#<init>(Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Lorg/apache/zookeeper/server/ZooKeeperServerListener;)V
@3.5.1-alpha
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/server/ZooKeeperSaslServer
@3.4.0
+#evaluateResponse([B)[B
+#isComplete()Z
+#getAuthorizationID()Ljava/lang/String;

+###org/apache/zookeeper/server/ZooKeeperServer$MissingSessionException
@3.3.0
+#<init>(Ljava/lang/String;)V

+###org/apache/zookeeper/server/ZooKeeperServer$State
@3.4.9
+#values()[Lorg/apache/zookeeper/server/ZooKeeperServer$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/ZooKeeperServer$State;
@3.5.0-alpha
-###org/apache/zookeeper/server/ZooKeeperServer$State

+###org/apache/zookeeper/server/ZooKeeperServer
@3.3.0
+#<init>()V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;Lorg/apache/zookeeper/server/ZKDatabase;)V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;ILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;)V
+#serverStats()Lorg/apache/zookeeper/server/ServerStats;
+#dumpConf(Ljava/io/PrintWriter;)V
+#<init>(Ljava/io/File;Ljava/io/File;I)V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;Lorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;)V
+#getZKDatabase()Lorg/apache/zookeeper/server/ZKDatabase;
+#setZKDatabase(Lorg/apache/zookeeper/server/ZKDatabase;)V
+#loadData()V
+#takeSnapshot()V
+#getZxid()J
+#setZxid(J)V
+#closeSession(J)V
+#expire(Lorg/apache/zookeeper/server/SessionTracker$Session;)V
+#startup()V
+#isRunning()Z
+#shutdown()V
+#incInProcess()V
+#decInProcess()V
+#getInProcess()I
+#setOwner(JLjava/lang/Object;)V
+#reopenSession(Lorg/apache/zookeeper/server/ServerCnxn;J[BI)V
+#closeSession(Lorg/apache/zookeeper/server/ServerCnxn;Lorg/apache/zookeeper/proto/RequestHeader;)V
+#getServerId()J
+#submitRequest(Lorg/apache/zookeeper/server/Request;)V
+#byteBuffer2Record(Ljava/nio/ByteBuffer;Lorg/apache/jute/Record;)V
+#getSnapCount()I
+#getGlobalOutstandingLimit()I
+#setServerCnxnFactory(Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;)V
+#getServerCnxnFactory()Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;
+#getLastProcessedZxid()J
+#getOutstandingRequests()J
+#truncateLog(J)V
+#getTickTime()I
+#setTickTime(I)V
+#getMinSessionTimeout()I
+#setMinSessionTimeout(I)V
+#getMaxSessionTimeout()I
+#setMaxSessionTimeout(I)V
+#getClientPort()I
+#setTxnLogFactory(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;)V
+#getTxnLogFactory()Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;
+#getState()Ljava/lang/String;
+#dumpEphemerals(Ljava/io/PrintWriter;)V
@3.3.2
+#startdata()V
@3.3.5
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
@3.4.0
+#finishSessionInit(Lorg/apache/zookeeper/server/ServerCnxn;Z)V
+#setServerCnxnFactory(Lorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#getServerCnxnFactory()Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#processConnectRequest(Lorg/apache/zookeeper/server/ServerCnxn;Ljava/nio/ByteBuffer;)V
+#shouldThrottle(J)Z
+#processPacket(Lorg/apache/zookeeper/server/ServerCnxn;Ljava/nio/ByteBuffer;)V
-#byteBuffer2Record(Ljava/nio/ByteBuffer;Lorg/apache/jute/Record;)V
-#setServerCnxnFactory(Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;)V
-#getServerCnxnFactory()Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;
-#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
@3.4.3
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
@3.4.4
+#getNumAliveConnections()I
@3.4.7
+#getZooKeeperServerListener()Lorg/apache/zookeeper/server/ZooKeeperServerListener;
@3.4.10
+#shutdown(Z)V
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZKDatabase;)V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;I)V
+#getConf()Lorg/apache/zookeeper/server/ZooKeeperServerConf;
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;)V
+#getSessionTracker()Lorg/apache/zookeeper/server/SessionTracker;
+#getEphemerals()Ljava/util/Map;
+#processTxn(Lorg/apache/zookeeper/server/Request;)Lorg/apache/zookeeper/server/DataTree$ProcessTxnResult;
+#getSessionExpiryMap()Ljava/util/Map;
-#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;Lorg/apache/zookeeper/server/ZKDatabase;)V
-#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;ILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;)V
-#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;Lorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;)V
-#getZooKeeperServerListener()Lorg/apache/zookeeper/server/ZooKeeperServerListener;
-#shutdown(Z)V
@3.5.1-alpha
+#getDataDirSize()J
+#getLogDirSize()J
+#getZooKeeperServerListener()Lorg/apache/zookeeper/server/ZooKeeperServerListener;
+#setSecureServerCnxnFactory(Lorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#getSecureClientPort()I
+#getMaxClientCnxnsPerHost()I
@3.5.3-beta
+#shutdown(Z)V
@3.5.4-beta
+#setCreateSessionTrackerServerId(I)V
+#getTxnLogElapsedSyncTime()J
@3.5.5
+#getSecureServerCnxnFactory()Lorg/apache/zookeeper/server/ServerCnxnFactory;
@3.5.9
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZKDatabase;Z)V
+#isReconfigEnabled()Z
@3.5.10
+#<init>(Lorg/apache/zookeeper/server/util/JvmPauseMonitor;Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZKDatabase;Z)V
+#takeSnapshot(Z)V
+#shouldForceWriteInitialSnapshotAfterLeaderElection()Z
+#startupWithoutServing()V
+#startServing()V
@3.6.0
+#isCloseSessionTxnEnabled()Z
+#setCloseSessionTxnEnabled(Z)V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIIILorg/apache/zookeeper/server/ZKDatabase;Ljava/lang/String;)V
+#getInitialConfig()Ljava/lang/String;
+#<init>(Lorg/apache/zookeeper/server/util/JvmPauseMonitor;Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIIILorg/apache/zookeeper/server/ZKDatabase;Ljava/lang/String;)V
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;ILjava/lang/String;)V
+#getRequestPathMetricsCollector()Lorg/apache/zookeeper/server/util/RequestPathMetricsCollector;
+#connThrottle()Lorg/apache/zookeeper/server/BlueThrottle;
+#getInflight()I
+#enqueueRequest(Lorg/apache/zookeeper/server/Request;)V
+#submitRequestNow(Lorg/apache/zookeeper/server/Request;)V
+#getSnapSizeInBytes()J
+#getClientPortListenBacklog()I
+#setClientPortListenBacklog(I)V
+#getConnectionDropChance()D
+#getLargeRequestMaxBytes()I
+#setLargeRequestMaxBytes(I)V
+#getLargeRequestThreshold()I
+#setLargeRequestThreshold(I)V
+#getLargeRequestBytes()I
+#checkRequestSizeWhenReceivingMessage(I)Z
+#requestFinished(Lorg/apache/zookeeper/server/Request;)V
+#isResponseCachingEnabled()Z
+#setResponseCachingEnabled(Z)V
+#getReadResponseCache()Lorg/apache/zookeeper/server/ResponseCache;
+#getGetChildrenResponseCache()Lorg/apache/zookeeper/server/ResponseCache;
+#dumpMonitorValues(Ljava/util/function/BiConsumer;)V
+#checkACL(Lorg/apache/zookeeper/server/ServerCnxn;Ljava/util/List;ILjava/util/List;Ljava/lang/String;Ljava/util/List;)V
+#isDigestEnabled()Z
+#setDigestEnabled(Z)V
+#authWriteRequest(Lorg/apache/zookeeper/server/Request;)Z
+#getOutstandingHandshakeNum()I
-#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZKDatabase;)V
-#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZKDatabase;Z)V
-#<init>(Lorg/apache/zookeeper/server/util/JvmPauseMonitor;Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZKDatabase;Z)V
-#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;I)V
-#shouldForceWriteInitialSnapshotAfterLeaderElection()Z
-#startupWithoutServing()V
-#startServing()V
-#isReconfigEnabled()Z
@3.6.2
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIIILorg/apache/zookeeper/server/ZKDatabase;Ljava/lang/String;Z)V
+#isReconfigEnabled()Z
@3.6.3
+#startupWithoutServing()V
+#startServing()V
@3.6.4
+#isEnableEagerACLCheck()Z
+#setEnableEagerACLCheck(Z)V
+#shouldForceWriteInitialSnapshotAfterLeaderElection()Z
@3.7.0
+#getThrottledOpWaitTime()I
+#setThrottledOpWaitTime(I)V
+#checkQuota(Ljava/lang/String;[B[BI)V
+#getZkShutdownHandler()Lorg/apache/zookeeper/server/ZooKeeperServerShutdownHandler;
-#isEnableEagerACLCheck()Z
-#setEnableEagerACLCheck(Z)V
@3.7.1
+#expire(J)V
@3.8.1
+#isEnableEagerACLCheck()Z
+#setEnableEagerACLCheck(Z)V

+###org/apache/zookeeper/server/ZooKeeperServerBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getClientPort()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getStartTime()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getAvgRequestLatency()J
+#getMaxRequestLatency()J
+#getMinRequestLatency()J
+#getOutstandingRequests()J
+#getTickTime()I
+#setTickTime(I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#getMinSessionTimeout()I
+#setMinSessionTimeout(I)V
+#getMaxSessionTimeout()I
+#setMaxSessionTimeout(I)V
+#getPacketsReceived()J
+#getPacketsSent()J
+#resetLatency()V
+#resetMaxLatency()V
+#resetStatistics()V
@3.4.4
+#getNumAliveConnections()J
@3.4.13
+#getFsyncThresholdExceedCount()J
+#resetFsyncThresholdExceedCount()V
+#getJuteMaxBufferSize()I
@3.5.0-alpha
-#getFsyncThresholdExceedCount()J
-#resetFsyncThresholdExceedCount()V
-#getJuteMaxBufferSize()I
@3.5.1-alpha
+#getDataDirSize()J
+#getLogDirSize()J
@3.5.2-alpha
+#getSecureClientPort()Ljava/lang/String;
+#getSecureClientAddress()Ljava/lang/String;
@3.5.4-beta
+#getTxnLogElapsedSyncTime()J
+#getJuteMaxBufferSize()I
@3.5.5
+#getFsyncThresholdExceedCount()J
+#resetFsyncThresholdExceedCount()V
+#getLastClientResponseSize()I
+#getMinClientResponseSize()I
+#getMaxClientResponseSize()I
@3.6.0
+#getAvgRequestLatency()D
+#getResponseCachingEnabled()Z
+#setResponseCachingEnabled(Z)V
+#getConnectionMaxTokens()I
+#setConnectionMaxTokens(I)V
+#getConnectionTokenFillTime()I
+#setConnectionTokenFillTime(I)V
+#getConnectionTokenFillCount()I
+#setConnectionTokenFillCount(I)V
+#getConnectionFreezeTime()I
+#setConnectionFreezeTime(I)V
+#getConnectionDropIncrease()D
+#setConnectionDropIncrease(D)V
+#getConnectionDropDecrease()D
+#setConnectionDropDecrease(D)V
+#getConnectionDecreaseRatio()D
+#setConnectionDecreaseRatio(D)V
+#getCommitProcMaxReadBatchSize()I
+#setCommitProcMaxReadBatchSize(I)V
+#getCommitProcMaxCommitBatchSize()I
+#setCommitProcMaxCommitBatchSize(I)V
+#getFlushDelay()J
+#setFlushDelay(J)V
+#getRequestThrottleLimit()I
+#setRequestThrottleLimit(I)V
+#getRequestThrottleStallTime()I
+#setRequestThrottleStallTime(I)V
+#getRequestThrottleDropStale()Z
+#setRequestThrottleDropStale(Z)V
+#getMaxWriteQueuePollTime()J
+#setMaxWriteQueuePollTime(J)V
+#getRequestStaleLatencyCheck()Z
+#setRequestStaleLatencyCheck(Z)V
+#getMaxBatchSize()I
+#setMaxBatchSize(I)V
+#getRequestStaleConnectionCheck()Z
+#setRequestStaleConnectionCheck(Z)V
+#getLargeRequestMaxBytes()I
+#setLargeRequestMaxBytes(I)V
+#getLargeRequestThreshold()I
+#setLargeRequestThreshold(I)V
+#getMaxCnxns()I
-#getAvgRequestLatency()J
@3.6.3
+#getAuthFailedCount()J
+#getNonMTLSRemoteConnCount()J
+#getNonMTLSLocalConnCount()J
+#resetAuthFailedCount()V
+#resetNonMTLSConnCount()V
@3.7.0
+#getThrottledOpWaitTime()I
+#setThrottledOpWaitTime(I)V

+###org/apache/zookeeper/server/ZooKeeperServerConf
@3.5.0-alpha
+#getClientPort()I
+#getDataDir()Ljava/lang/String;
+#getDataLogDir()Ljava/lang/String;
+#getTickTime()I
+#getMaxClientCnxnsPerHost()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
+#getServerId()J
+#toMap()Ljava/util/Map;
@3.6.0
+#getClientPortListenBacklog()I

+###org/apache/zookeeper/server/ZooKeeperServerListener
@3.4.7
+#notifyStopping(Ljava/lang/String;I)V
@3.5.0-alpha
-###org/apache/zookeeper/server/ZooKeeperServerListener

+###org/apache/zookeeper/server/ZooKeeperServerMXBean
@3.3.0
+#getClientPort()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getStartTime()Ljava/lang/String;
+#getMinRequestLatency()J
+#getAvgRequestLatency()J
+#getMaxRequestLatency()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getOutstandingRequests()J
+#getTickTime()I
+#setTickTime(I)V
+#getMaxClientCnxnsPerHost()I
+#setMaxClientCnxnsPerHost(I)V
+#getMinSessionTimeout()I
+#setMinSessionTimeout(I)V
+#getMaxSessionTimeout()I
+#setMaxSessionTimeout(I)V
+#resetStatistics()V
+#resetLatency()V
+#resetMaxLatency()V
@3.4.4
+#getNumAliveConnections()J
@3.4.13
+#getFsyncThresholdExceedCount()J
+#resetFsyncThresholdExceedCount()V
+#getJuteMaxBufferSize()I
@3.5.0-alpha
-#getFsyncThresholdExceedCount()J
-#resetFsyncThresholdExceedCount()V
-#getJuteMaxBufferSize()I
@3.5.1-alpha
+#getDataDirSize()J
+#getLogDirSize()J
@3.5.2-alpha
+#getSecureClientPort()Ljava/lang/String;
+#getSecureClientAddress()Ljava/lang/String;
@3.5.4-beta
+#getTxnLogElapsedSyncTime()J
+#getJuteMaxBufferSize()I
@3.5.5
+#getFsyncThresholdExceedCount()J
+#resetFsyncThresholdExceedCount()V
+#getLastClientResponseSize()I
+#getMinClientResponseSize()I
+#getMaxClientResponseSize()I
@3.6.0
+#getAvgRequestLatency()D
+#getResponseCachingEnabled()Z
+#setResponseCachingEnabled(Z)V
+#getConnectionMaxTokens()I
+#setConnectionMaxTokens(I)V
+#getConnectionTokenFillTime()I
+#setConnectionTokenFillTime(I)V
+#getConnectionTokenFillCount()I
+#setConnectionTokenFillCount(I)V
+#getConnectionFreezeTime()I
+#setConnectionFreezeTime(I)V
+#getConnectionDropIncrease()D
+#setConnectionDropIncrease(D)V
+#getConnectionDropDecrease()D
+#setConnectionDropDecrease(D)V
+#getConnectionDecreaseRatio()D
+#setConnectionDecreaseRatio(D)V
+#getCommitProcMaxReadBatchSize()I
+#setCommitProcMaxReadBatchSize(I)V
+#getCommitProcMaxCommitBatchSize()I
+#setCommitProcMaxCommitBatchSize(I)V
+#getRequestThrottleLimit()I
+#setRequestThrottleLimit(I)V
+#getRequestThrottleStallTime()I
+#setRequestThrottleStallTime(I)V
+#getRequestThrottleDropStale()Z
+#setRequestThrottleDropStale(Z)V
+#getRequestStaleLatencyCheck()Z
+#setRequestStaleLatencyCheck(Z)V
+#getRequestStaleConnectionCheck()Z
+#setRequestStaleConnectionCheck(Z)V
+#getLargeRequestMaxBytes()I
+#setLargeRequestMaxBytes(I)V
+#getLargeRequestThreshold()I
+#setLargeRequestThreshold(I)V
+#getFlushDelay()J
+#setFlushDelay(J)V
+#getMaxWriteQueuePollTime()J
+#setMaxWriteQueuePollTime(J)V
+#getMaxBatchSize()I
+#setMaxBatchSize(I)V
+#getMaxCnxns()I
-#getAvgRequestLatency()J
@3.6.3
+#getAuthFailedCount()J
+#getNonMTLSLocalConnCount()J
+#getNonMTLSRemoteConnCount()J
+#resetNonMTLSConnCount()V
+#resetAuthFailedCount()V
@3.7.0
+#getThrottledOpWaitTime()I
+#setThrottledOpWaitTime(I)V

+###org/apache/zookeeper/server/ZooKeeperServerMain
@3.3.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#runFromConfig(Lorg/apache/zookeeper/server/ServerConfig;)V
@3.7.0
+#close()V

+###org/apache/zookeeper/server/ZooKeeperServerShutdownHandler
@3.7.0
+#handle(Lorg/apache/zookeeper/server/ZooKeeperServer$State;)V

+###org/apache/zookeeper/server/ZooKeeperThread
@3.4.7
+#<init>(Ljava/lang/Runnable;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
@3.5.0-alpha
-#<init>(Ljava/lang/Runnable;Ljava/lang/String;)V

+###org/apache/zookeeper/server/ZooTrace
@3.3.0
+#<init>()V
+#getTextTraceLevel()J
+#setTextTraceLevel(J)V
+#isTraceEnabled(Lorg/apache/log4j/Logger;J)Z
+#logTraceMessage(Lorg/apache/log4j/Logger;JLjava/lang/String;)V
+#logQuorumPacket(Lorg/apache/log4j/Logger;JCLorg/apache/zookeeper/server/quorum/QuorumPacket;)V
+#logRequest(Lorg/apache/log4j/Logger;JCLorg/apache/zookeeper/server/Request;Ljava/lang/String;)V
@3.4.0
+#isTraceEnabled(Lorg/slf4j/Logger;J)Z
+#logTraceMessage(Lorg/slf4j/Logger;JLjava/lang/String;)V
+#logQuorumPacket(Lorg/slf4j/Logger;JCLorg/apache/zookeeper/server/quorum/QuorumPacket;)V
+#logRequest(Lorg/slf4j/Logger;JCLorg/apache/zookeeper/server/Request;Ljava/lang/String;)V
-#isTraceEnabled(Lorg/apache/log4j/Logger;J)Z
-#logTraceMessage(Lorg/apache/log4j/Logger;JLjava/lang/String;)V
-#logQuorumPacket(Lorg/apache/log4j/Logger;JCLorg/apache/zookeeper/server/quorum/QuorumPacket;)V
-#logRequest(Lorg/apache/log4j/Logger;JCLorg/apache/zookeeper/server/Request;Ljava/lang/String;)V

+###org/apache/zookeeper/server/admin/AdminServer$AdminServerException
@3.5.0-alpha
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/zookeeper/server/admin/AdminServer
@3.5.0-alpha
+#start()V
+#shutdown()V
+#setZooKeeperServer(Lorg/apache/zookeeper/server/ZooKeeperServer;)V

+###org/apache/zookeeper/server/admin/AdminServerFactory
@3.5.0-alpha
+#<init>()V
+#createAdminServer()Lorg/apache/zookeeper/server/admin/AdminServer;

+###org/apache/zookeeper/server/admin/Command
@3.5.0-alpha
+#getNames()Ljava/util/Set;
+#getPrimaryName()Ljava/lang/String;
+#getDoc()Ljava/lang/String;
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;
@3.6.0
+#isServerRequired()Z

+###org/apache/zookeeper/server/admin/CommandBase
@3.5.0-alpha
+#getPrimaryName()Ljava/lang/String;
+#getNames()Ljava/util/Set;
+#getDoc()Ljava/lang/String;
@3.6.0
+#isServerRequired()Z

+###org/apache/zookeeper/server/admin/CommandOutputter
@3.5.0-alpha
+#getContentType()Ljava/lang/String;
+#output(Lorg/apache/zookeeper/server/admin/CommandResponse;Ljava/io/PrintWriter;)V

+###org/apache/zookeeper/server/admin/CommandResponse
@3.5.0-alpha
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getCommand()Ljava/lang/String;
+#getError()Ljava/lang/String;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#toMap()Ljava/util/Map;

+###org/apache/zookeeper/server/admin/Commands$CnxnStatResetCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$ConfCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$ConsCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$DigestCommand
@3.6.0
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$DirsCommand
@3.5.1-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$DumpCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$EnvCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$GetTraceMaskCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$InitialConfigurationCommand
@3.6.0
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$IsroCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$LastSnapshotCommand
@3.5.10
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$LeaderCommand
@3.6.0
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$MonitorCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$ObserverCnxnStatResetCommand
@3.6.0
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$RuokCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$SetTraceMaskCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$SrvrCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$StatCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$StatResetCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$SyncedObserverConsCommand
@3.6.0
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$SystemPropertiesCommand
@3.6.0
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$VotingViewCommand
@3.6.0
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$WatchCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$WatchSummaryCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$WatchesByPathCommand
@3.5.0-alpha
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands$ZabStateCommand
@3.5.10
+#<init>()V
+#run(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;

+###org/apache/zookeeper/server/admin/Commands
@3.5.0-alpha
+#registerCommand(Lorg/apache/zookeeper/server/admin/Command;)V
+#runCommand(Ljava/lang/String;Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/util/Map;)Lorg/apache/zookeeper/server/admin/CommandResponse;
+#getPrimaryNames()Ljava/util/Set;
+#getCommand(Ljava/lang/String;)Lorg/apache/zookeeper/server/admin/Command;

+###org/apache/zookeeper/server/admin/DummyAdminServer
@3.5.0-alpha
+#<init>()V
+#start()V
+#shutdown()V
+#setZooKeeperServer(Lorg/apache/zookeeper/server/ZooKeeperServer;)V

+###org/apache/zookeeper/server/admin/JettyAdminServer
@3.5.0-alpha
+#<init>()V
+#<init>(ILjava/lang/String;)V
+#start()V
+#shutdown()V
+#setZooKeeperServer(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
@3.5.1-alpha
+#<init>(Ljava/lang/String;ILjava/lang/String;)V
-#<init>(ILjava/lang/String;)V
@3.5.3-beta
+#<init>(Ljava/lang/String;IILjava/lang/String;)V
-#<init>(Ljava/lang/String;ILjava/lang/String;)V
@3.6.0
+#<init>(Ljava/lang/String;IILjava/lang/String;IZ)V
-#<init>(Ljava/lang/String;IILjava/lang/String;)V
@3.6.3
+#<init>(Ljava/lang/String;IILjava/lang/String;IZZ)V
-#<init>(Ljava/lang/String;IILjava/lang/String;IZ)V
@3.7.0
+#<init>(Ljava/lang/String;IILjava/lang/String;IZ)V
-#<init>(Ljava/lang/String;IILjava/lang/String;IZZ)V
@3.7.1
+#<init>(Ljava/lang/String;IILjava/lang/String;IZZ)V
-#<init>(Ljava/lang/String;IILjava/lang/String;IZ)V

+###org/apache/zookeeper/server/admin/JsonOutputter
@3.5.0-alpha
+#<init>()V
+#getContentType()Ljava/lang/String;
+#output(Lorg/apache/zookeeper/server/admin/CommandResponse;Ljava/io/PrintWriter;)V

+###org/apache/zookeeper/server/admin/ReadAheadEndpoint
@3.6.0
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#isOpen()Z
+#getCreatedTimeStamp()J
+#isOutputShutdown()Z
+#isInputShutdown()Z
+#shutdownOutput()V
+#close()V
+#getTransport()Ljava/lang/Object;
+#getIdleTimeout()J
+#getConnection()Lorg/eclipse/jetty/io/Connection;
+#onOpen()V
+#onClose()V
+#isOptimizedForDirectBuffers()Z
+#isFillInterested()Z
+#tryFillInterested(Lorg/eclipse/jetty/util/Callback;)Z
+#flush([Ljava/nio/ByteBuffer;)Z
+#setIdleTimeout(J)V
+#write(Lorg/eclipse/jetty/util/Callback;[Ljava/nio/ByteBuffer;)V
+#setConnection(Lorg/eclipse/jetty/io/Connection;)V
+#upgrade(Lorg/eclipse/jetty/io/Connection;)V
+#fillInterested(Lorg/eclipse/jetty/util/Callback;)V
+#<init>(Lorg/eclipse/jetty/io/EndPoint;I)V
+#fill(Ljava/nio/ByteBuffer;)I
+#getBytes()[B

+###org/apache/zookeeper/server/admin/UnifiedConnectionFactory
@3.6.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/eclipse/jetty/util/ssl/SslContextFactory;Ljava/lang/String;)V
+#newConnection(Lorg/eclipse/jetty/server/Connector;Lorg/eclipse/jetty/io/EndPoint;)Lorg/eclipse/jetty/io/Connection;
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/auth/AuthenticationProvider
@3.3.0
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z
@3.6.0
+#getUserName(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/zookeeper/server/auth/DigestAuthenticationProvider
@3.3.0
+#<init>()V
+#getScheme()Ljava/lang/String;
+#generateDigest(Ljava/lang/String;)Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#main([Ljava/lang/String;)V
@3.6.0
+#getUserName(Ljava/lang/String;)Ljava/lang/String;
@3.7.0
+#isEnabled()Z
+#digest(Ljava/lang/String;)[B

+###org/apache/zookeeper/server/auth/DigestLoginModule
@3.4.0
+#<init>()V
+#abort()Z
+#commit()Z
+#initialize(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;Ljava/util/Map;Ljava/util/Map;)V
+#logout()Z
+#login()Z

+###org/apache/zookeeper/server/auth/EnsembleAuthenticationProvider
@3.6.0
+#<init>()V
+#setEnsembleNames(Ljava/lang/String;)V
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z

+###org/apache/zookeeper/server/auth/IPAuthenticationProvider
@3.3.0
+#<init>()V
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z

+###org/apache/zookeeper/server/auth/KerberosName$BadFormatString
@3.4.0

+###org/apache/zookeeper/server/auth/KerberosName$NoMatchingRule
@3.4.0

+###org/apache/zookeeper/server/auth/KerberosName
@3.4.0
+#<init>(Ljava/lang/String;)V
+#getDefaultRealm()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getServiceName()Ljava/lang/String;
+#getHostName()Ljava/lang/String;
+#getRealm()Ljava/lang/String;
+#setConfiguration()V
+#getShortName()Ljava/lang/String;
+#main([Ljava/lang/String;)V

+###org/apache/zookeeper/server/auth/KeyAuthenticationProvider
@3.6.0
+#<init>()V
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/auth/ServerAuthenticationProvider$ServerObjs;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Lorg/apache/zookeeper/server/auth/ServerAuthenticationProvider$ServerObjs;Lorg/apache/zookeeper/server/auth/ServerAuthenticationProvider$MatchValues;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z

+###org/apache/zookeeper/server/auth/ProviderRegistry
@3.3.0
+#<init>()V
+#initialize()V
+#getProvider(Ljava/lang/String;)Lorg/apache/zookeeper/server/auth/AuthenticationProvider;
+#listProviders()Ljava/lang/String;
@3.6.0
+#reset()V
+#getServerProvider(Ljava/lang/String;)Lorg/apache/zookeeper/server/auth/ServerAuthenticationProvider;
+#removeProvider(Ljava/lang/String;)V

+###org/apache/zookeeper/server/auth/SASLAuthenticationProvider
@3.4.0
+#<init>()V
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z

+###org/apache/zookeeper/server/auth/SaslServerCallbackHandler
@3.4.0
+#<init>(Ljavax/security/auth/login/Configuration;)V
+#handle([Ljavax/security/auth/callback/Callback;)V

+###org/apache/zookeeper/server/auth/ServerAuthenticationProvider$MatchValues
@3.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;)V
+#getPath()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#getAclExpr()Ljava/lang/String;
+#getPerm()I
+#getSetAcls()Ljava/util/List;

+###org/apache/zookeeper/server/auth/ServerAuthenticationProvider$ServerObjs
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#getZks()Lorg/apache/zookeeper/server/ZooKeeperServer;
+#getCnxn()Lorg/apache/zookeeper/server/ServerCnxn;

+###org/apache/zookeeper/server/auth/ServerAuthenticationProvider
@3.6.0
+#<init>()V
+#handleAuthentication(Lorg/apache/zookeeper/server/auth/ServerAuthenticationProvider$ServerObjs;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Lorg/apache/zookeeper/server/auth/ServerAuthenticationProvider$ServerObjs;Lorg/apache/zookeeper/server/auth/ServerAuthenticationProvider$MatchValues;)Z
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z

+###org/apache/zookeeper/server/auth/X509AuthenticationProvider
@3.5.1-alpha
+#<init>()V
+#<init>(Ljavax/net/ssl/X509TrustManager;Ljavax/net/ssl/X509KeyManager;)V
+#getScheme()Ljava/lang/String;
+#handleAuthentication(Lorg/apache/zookeeper/server/ServerCnxn;[B)Lorg/apache/zookeeper/KeeperException$Code;
+#matches(Ljava/lang/String;Ljava/lang/String;)Z
+#isAuthenticated()Z
+#isValid(Ljava/lang/String;)Z
+#getTrustManager()Ljavax/net/ssl/X509TrustManager;
+#getKeyManager()Ljavax/net/ssl/X509KeyManager;

+###org/apache/zookeeper/server/command/AbstractFourLetterCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#start()V
+#run()V
+#setZkServer(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#setFactory(Lorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/CnxnStatResetCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/CommandExecutor
@3.5.1-alpha
+#<init>()V
+#execute(Lorg/apache/zookeeper/server/ServerCnxn;Ljava/io/PrintWriter;ILorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/ServerCnxnFactory;)Z

+###org/apache/zookeeper/server/command/ConfCommand
@3.5.1-alpha
+#commandRun()V

+###org/apache/zookeeper/server/command/ConsCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/DigestCommand
@3.6.0
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/DirsCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/DumpCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/EnvCommand
@3.5.1-alpha
+#commandRun()V

+###org/apache/zookeeper/server/command/FourLetterCommands
@3.5.1-alpha
+#<init>()V
@3.5.3-beta
+#resetWhiteList()V
+#getCommandString(I)Ljava/lang/String;
+#isKnown(I)Z
+#isEnabled(Ljava/lang/String;)Z

+###org/apache/zookeeper/server/command/IsroCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/MonitorCommand
@3.5.1-alpha
+#commandRun()V

+###org/apache/zookeeper/server/command/NopCommand
@3.5.3-beta
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;Ljava/lang/String;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/RuokCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/SetTraceMaskCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;J)V
+#commandRun()V

+###org/apache/zookeeper/server/command/StatCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;I)V
+#commandRun()V

+###org/apache/zookeeper/server/command/StatResetCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;)V
+#commandRun()V

+###org/apache/zookeeper/server/command/TraceMaskCommand
@3.5.1-alpha
+#commandRun()V

+###org/apache/zookeeper/server/command/WatchCommand
@3.5.1-alpha
+#<init>(Ljava/io/PrintWriter;Lorg/apache/zookeeper/server/ServerCnxn;I)V
+#commandRun()V

+###org/apache/zookeeper/server/controller/CommandClient
@3.7.0
+#<init>(II)V
+#<init>(Ljava/net/InetSocketAddress;I)V
+#<init>(I)V
+#close()V
+#trySendCommand(Lorg/apache/zookeeper/server/controller/ControlCommand$Action;)Z
+#trySendCommand(Lorg/apache/zookeeper/server/controller/ControlCommand$Action;Ljava/lang/String;)Z
+#sendCommand(Lorg/apache/zookeeper/server/controller/ControlCommand$Action;Ljava/lang/String;)Lorg/eclipse/jetty/client/api/ContentResponse;

+###org/apache/zookeeper/server/controller/CommandListener
@3.7.0
+#<init>(Lorg/apache/zookeeper/server/controller/ZooKeeperServerController;Lorg/apache/zookeeper/server/controller/ControllerServerConfig;)V
+#close()V

+###org/apache/zookeeper/server/controller/ControlCommand$Action
@3.7.0
+#values()[Lorg/apache/zookeeper/server/controller/ControlCommand$Action;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/controller/ControlCommand$Action;

+###org/apache/zookeeper/server/controller/ControlCommand
@3.7.0
+#getAction()Lorg/apache/zookeeper/server/controller/ControlCommand$Action;
+#<init>(Lorg/apache/zookeeper/server/controller/ControlCommand$Action;)V
+#<init>(Lorg/apache/zookeeper/server/controller/ControlCommand$Action;Ljava/lang/String;)V
+#createCommandUri(Lorg/apache/zookeeper/server/controller/ControlCommand$Action;Ljava/lang/String;)Ljava/lang/String;
+#parseUri(Ljava/lang/String;)Lorg/apache/zookeeper/server/controller/ControlCommand;

+###org/apache/zookeeper/server/controller/ControllableConnection
@3.7.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SelectionKey;Lorg/apache/zookeeper/server/NIOServerCnxnFactory;Lorg/apache/zookeeper/server/NIOServerCnxnFactory$SelectorThread;)V
+#sendResponse(Lorg/apache/zookeeper/proto/ReplyHeader;Lorg/apache/jute/Record;Ljava/lang/String;)I

+###org/apache/zookeeper/server/controller/ControllableConnectionFactory
@3.7.0
+#<init>()V
+#delayRequestIfNeeded()V
+#shouldFailNextRequest()Z
+#shouldSendResponse()Z
+#delayResponses(J)V
+#resetBadBehavior()V
+#failAllFutureRequests()V
+#failFutureRequests(J)V
+#holdAllFutureResponses()V
+#holdFutureResponses(J)V

+###org/apache/zookeeper/server/controller/ControllerServerConfig
@3.7.0
+#getControllerAddress()Ljava/net/InetSocketAddress;
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/net/InetAddress;IILjava/lang/String;)V
+#<init>(IILjava/lang/String;)V
+#getZooKeeperServerConfig()Lorg/apache/zookeeper/server/ServerConfig;
+#parse(Ljava/lang/String;)V
+#ensureComplete()V

+###org/apache/zookeeper/server/controller/ControllerService
@3.7.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#start(Lorg/apache/zookeeper/server/controller/ControllerServerConfig;)Ljava/lang/Thread;
+#shutdown()V
+#initializeAndRun([Ljava/lang/String;)V
+#runFromConfig(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
+#isReady()Z

+###org/apache/zookeeper/server/controller/ZooKeeperServerController
@3.7.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
+#run()V
+#shutdown()V
+#isReady()Z
+#processCommand(Lorg/apache/zookeeper/server/controller/ControlCommand;)V

+###org/apache/zookeeper/server/embedded/ExitHandler
@3.7.0
+#values()[Lorg/apache/zookeeper/server/embedded/ExitHandler;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/embedded/ExitHandler;

+###org/apache/zookeeper/server/embedded/ZooKeeperServerEmbedded$ZookKeeperServerEmbeddedBuilder
@3.7.0
+#<init>()V
+#baseDir(Ljava/nio/file/Path;)Lorg/apache/zookeeper/server/embedded/ZooKeeperServerEmbedded$ZookKeeperServerEmbeddedBuilder;
+#configuration(Ljava/util/Properties;)Lorg/apache/zookeeper/server/embedded/ZooKeeperServerEmbedded$ZookKeeperServerEmbeddedBuilder;
+#exitHandler(Lorg/apache/zookeeper/server/embedded/ExitHandler;)Lorg/apache/zookeeper/server/embedded/ZooKeeperServerEmbedded$ZookKeeperServerEmbeddedBuilder;
+#build()Lorg/apache/zookeeper/server/embedded/ZooKeeperServerEmbedded;

+###org/apache/zookeeper/server/embedded/ZooKeeperServerEmbedded
@3.7.0
+#builder()Lorg/apache/zookeeper/server/embedded/ZooKeeperServerEmbedded$ZookKeeperServerEmbeddedBuilder;
+#start()V
+#close()V
@3.7.1
+#start(J)V
+#getConnectionString()Ljava/lang/String;
+#getSecureConnectionString()Ljava/lang/String;

+###org/apache/zookeeper/server/metric/AvgMinMaxCounter
@3.6.0
+#<init>(Ljava/lang/String;)V
+#addDataPoint(J)V
+#getAvg()D
+#getCount()J
+#getMax()J
+#getMin()J
+#getTotal()J
+#resetMax()V
+#reset()V
+#add(J)V
+#values()Ljava/util/Map;

+###org/apache/zookeeper/server/metric/AvgMinMaxCounterSet
@3.6.0
+#<init>(Ljava/lang/String;)V
+#addDataPoint(Ljava/lang/String;J)V
+#resetMax()V
+#reset()V
+#add(Ljava/lang/String;J)V
+#values()Ljava/util/Map;

+###org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounter
@3.6.0
+#<init>(Ljava/lang/String;)V
+#addDataPoint(J)V
+#resetMax()V
+#reset()V
+#add(J)V
+#values()Ljava/util/Map;

+###org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterSet
@3.6.0
+#<init>(Ljava/lang/String;)V
+#addDataPoint(Ljava/lang/String;J)V
+#resetMax()V
+#reset()V
+#add(Ljava/lang/String;J)V
+#values()Ljava/util/Map;

+###org/apache/zookeeper/server/metric/Metric
@3.6.0
+#<init>()V
+#add(J)V
+#add(IJ)V
+#add(Ljava/lang/String;J)V
+#reset()V
+#values()Ljava/util/Map;

+###org/apache/zookeeper/server/metric/SimpleCounter
@3.6.0
+#<init>(Ljava/lang/String;)V
+#add(J)V
+#reset()V
+#get()J
+#values()Ljava/util/Map;

+###org/apache/zookeeper/server/persistence/FilePadding
@3.4.13
+#<init>()V
+#getPreAllocSize()J
+#setPreallocSize(J)V
+#setCurrentSize(J)V
+#calculateFileSizeWithPadding(JJJ)J
@3.5.0-alpha
-###org/apache/zookeeper/server/persistence/FilePadding

+###org/apache/zookeeper/server/persistence/FileSnap
@3.3.0
+#<init>(Ljava/io/File;)V
+#deserialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;)J
+#deserialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/jute/InputArchive;)V
+#findMostRecentSnapshot()Ljava/io/File;
+#findNRecentSnapshots(I)Ljava/util/List;
+#serialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Ljava/io/File;)V
+#close()V
@3.5.10
+#getLastSnapshotInfo()Lorg/apache/zookeeper/server/persistence/SnapshotInfo;
+#serialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Ljava/io/File;Z)V
-#serialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Ljava/io/File;)V

+###org/apache/zookeeper/server/persistence/FileTxnLog$FileTxnIterator
@3.3.0
+#<init>(Ljava/io/File;J)V
+#next()Z
+#getHeader()Lorg/apache/zookeeper/txn/TxnHeader;
+#getTxn()Lorg/apache/jute/Record;
+#close()V
@3.5.0-alpha
+#<init>(Ljava/io/File;JZ)V
+#getStorageSize()J
@3.6.0
+#getDigest()Lorg/apache/zookeeper/txn/TxnDigest;

+###org/apache/zookeeper/server/persistence/FileTxnLog
@3.3.0
+#<init>(Ljava/io/File;)V
+#setPreallocSize(J)V
+#rollLog()V
+#close()V
+#append(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Z
+#getLogFiles([Ljava/io/File;J)[Ljava/io/File;
+#getLastLoggedZxid()J
+#commit()V
+#read(J)Lorg/apache/zookeeper/server/persistence/TxnLog$TxnIterator;
+#truncate(J)Z
+#getDbId()J
@3.3.4
+#isForceSync()Z
@3.4.12
+#calculateFileSizeWithPadding(JJJ)J
@3.4.13
+#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
-#calculateFileSizeWithPadding(JJJ)J
@3.5.0-alpha
+#read(JZ)Lorg/apache/zookeeper/server/persistence/TxnLog$TxnIterator;
-#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
@3.5.4-beta
+#getTxnLogSyncElapsedTime()J
@3.5.5
+#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
@3.6.0
+#setTxnLogSizeLimit(J)V
+#getCurrentLogSize()J
+#setTotalLogSize(J)V
+#getTotalLogSize()J
+#append(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)Z

+###org/apache/zookeeper/server/persistence/FileTxnSnapLog$DatadirException
@3.4.12
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Exception;)V

+###org/apache/zookeeper/server/persistence/FileTxnSnapLog$LogDirContentCheckException
@3.4.12
+#<init>(Ljava/lang/String;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/persistence/FileTxnSnapLog$LogDirContentCheckException

+###org/apache/zookeeper/server/persistence/FileTxnSnapLog$PlayBackListener
@3.3.0
+#onTxnLoaded(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)V
@3.6.0
+#onTxnLoaded(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)V
-#onTxnLoaded(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)V

+###org/apache/zookeeper/server/persistence/FileTxnSnapLog$SnapDirContentCheckException
@3.4.12
+#<init>(Ljava/lang/String;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/persistence/FileTxnSnapLog$SnapDirContentCheckException

+###org/apache/zookeeper/server/persistence/FileTxnSnapLog
@3.3.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#getDataDir()Ljava/io/File;
+#getSnapDir()Ljava/io/File;
+#restore(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog$PlayBackListener;)J
+#getLastLoggedZxid()J
+#save(Lorg/apache/zookeeper/server/DataTree;Ljava/util/concurrent/ConcurrentHashMap;)V
+#truncateLog(J)Z
+#findMostRecentSnapshot()Ljava/io/File;
+#findNRecentSnapshots(I)Ljava/util/List;
+#getSnapshotLogs(J)[Ljava/io/File;
+#append(Lorg/apache/zookeeper/server/Request;)Z
+#commit()V
+#rollLog()V
+#close()V
@3.3.4
+#processTransaction(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/jute/Record;)V
@3.4.12
+#fastForwardFromEdits(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog$PlayBackListener;)J
@3.4.13
+#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
@3.5.0-alpha
+#readTxnLog(J)Lorg/apache/zookeeper/server/persistence/TxnLog$TxnIterator;
+#readTxnLog(JZ)Lorg/apache/zookeeper/server/persistence/TxnLog$TxnIterator;
-#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
-#fastForwardFromEdits(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog$PlayBackListener;)J
@3.5.4-beta
+#fastForwardFromEdits(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog$PlayBackListener;)J
+#getTxnLogElapsedSyncTime()J
@3.5.5
+#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
@3.5.10
+#getLastSnapshotInfo()Lorg/apache/zookeeper/server/persistence/SnapshotInfo;
+#shouldForceWriteInitialSnapshotAfterLeaderElection()Z
+#save(Lorg/apache/zookeeper/server/DataTree;Ljava/util/concurrent/ConcurrentHashMap;Z)V
-#save(Lorg/apache/zookeeper/server/DataTree;Ljava/util/concurrent/ConcurrentHashMap;)V
@3.6.0
+#findNValidSnapshots(I)Ljava/util/List;
+#setTotalLogSize(J)V
+#getTotalLogSize()J
-#shouldForceWriteInitialSnapshotAfterLeaderElection()Z
@3.6.4
+#shouldForceWriteInitialSnapshotAfterLeaderElection()Z

+###org/apache/zookeeper/server/persistence/SnapShot
@3.3.0
+#deserialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;)J
+#serialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Ljava/io/File;)V
+#findMostRecentSnapshot()Ljava/io/File;
+#close()V
@3.5.10
+#serialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Ljava/io/File;Z)V
+#getLastSnapshotInfo()Lorg/apache/zookeeper/server/persistence/SnapshotInfo;
-#serialize(Lorg/apache/zookeeper/server/DataTree;Ljava/util/Map;Ljava/io/File;)V

+###org/apache/zookeeper/server/persistence/SnapStream$StreamMode
@3.6.0
+#values()[Lorg/apache/zookeeper/server/persistence/SnapStream$StreamMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/persistence/SnapStream$StreamMode;
+#getName()Ljava/lang/String;
+#getFileExtension()Ljava/lang/String;
+#fromString(Ljava/lang/String;)Lorg/apache/zookeeper/server/persistence/SnapStream$StreamMode;

+###org/apache/zookeeper/server/persistence/SnapStream
@3.6.0
+#<init>()V
+#getInputStream(Ljava/io/File;)Ljava/util/zip/CheckedInputStream;
+#getOutputStream(Ljava/io/File;Z)Ljava/util/zip/CheckedOutputStream;
+#sealStream(Ljava/util/zip/CheckedOutputStream;Lorg/apache/jute/OutputArchive;)V
+#isValidSnapshot(Ljava/io/File;)Z
+#setStreamMode(Lorg/apache/zookeeper/server/persistence/SnapStream$StreamMode;)V
+#getStreamMode()Lorg/apache/zookeeper/server/persistence/SnapStream$StreamMode;
+#getStreamMode(Ljava/lang/String;)Lorg/apache/zookeeper/server/persistence/SnapStream$StreamMode;

+###org/apache/zookeeper/server/persistence/SnapshotInfo
@3.5.10

+###org/apache/zookeeper/server/persistence/TxnLog$TxnIterator
@3.3.0
+#getHeader()Lorg/apache/zookeeper/txn/TxnHeader;
+#getTxn()Lorg/apache/jute/Record;
+#next()Z
+#close()V
@3.5.0-alpha
+#getStorageSize()J
@3.6.0
+#getDigest()Lorg/apache/zookeeper/txn/TxnDigest;

+###org/apache/zookeeper/server/persistence/TxnLog
@3.3.0
+#rollLog()V
+#append(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Z
+#read(J)Lorg/apache/zookeeper/server/persistence/TxnLog$TxnIterator;
+#getLastLoggedZxid()J
+#truncate(J)Z
+#getDbId()J
+#commit()V
+#close()V
@3.4.13
+#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
@3.5.0-alpha
-#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
@3.5.4-beta
+#getTxnLogSyncElapsedTime()J
@3.5.5
+#setServerStats(Lorg/apache/zookeeper/server/ServerStats;)V
@3.6.0
+#append(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)Z
+#setTotalLogSize(J)V
+#getTotalLogSize()J

+###org/apache/zookeeper/server/persistence/TxnLogToolkit
@3.4.13
+#main([Ljava/lang/String;)V
+#<init>(ZZLjava/lang/String;Z)V
+#dump(Ljava/util/Scanner;)V
+#close()V
@3.5.0-alpha
-###org/apache/zookeeper/server/persistence/TxnLogToolkit

+###org/apache/zookeeper/server/persistence/Util
@3.3.0
+#<init>()V
+#makeURIString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#makeFileLoggerURL(Ljava/io/File;Ljava/io/File;)Ljava/net/URI;
+#makeFileLoggerURL(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/net/URI;
+#makeLogName(J)Ljava/lang/String;
+#makeSnapshotName(J)Ljava/lang/String;
+#getSnapDir(Ljava/util/Properties;)Ljava/io/File;
+#getLogDir(Ljava/util/Properties;)Ljava/io/File;
+#getFormatConversionPolicy(Ljava/util/Properties;)Ljava/lang/String;
+#getZxidFromName(Ljava/lang/String;Ljava/lang/String;)J
+#isValidSnapshot(Ljava/io/File;)Z
+#padLogFile(Ljava/io/FileOutputStream;JJ)J
+#readTxnBytes(Lorg/apache/jute/InputArchive;)[B
+#marshallTxnEntry(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)[B
+#writeTxnBytes(Lorg/apache/jute/OutputArchive;[B)V
+#sortDataDir([Ljava/io/File;Ljava/lang/String;Z)Ljava/util/List;
@3.4.12
+#isLogFileName(Ljava/lang/String;)Z
+#isSnapshotFileName(Ljava/lang/String;)Z
-#padLogFile(Ljava/io/FileOutputStream;JJ)J
@3.5.0-alpha
+#padLogFile(Ljava/io/FileOutputStream;JJ)J
-#isLogFileName(Ljava/lang/String;)Z
-#isSnapshotFileName(Ljava/lang/String;)Z
@3.5.4-beta
+#isLogFileName(Ljava/lang/String;)Z
+#isSnapshotFileName(Ljava/lang/String;)Z
-#padLogFile(Ljava/io/FileOutputStream;JJ)J
@3.6.0
+#marshallTxnEntry(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)[B
-#isValidSnapshot(Ljava/io/File;)Z

+###org/apache/zookeeper/server/quorum/BufferStats
@3.5.5
+#<init>()V
+#getLastBufferSize()I
+#setLastBufferSize(I)V
+#getMinBufferSize()I
+#getMaxBufferSize()I
+#reset()V
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/CommitProcessor
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;Z)V
+#run()V
+#commit(Lorg/apache/zookeeper/server/Request;)V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V
@3.4.7
+#<init>(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;ZLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;Z)V
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;Z)V
+#start()V
-#<init>(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;ZLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
@3.5.1-alpha
+#<init>(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;ZLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Lorg/apache/zookeeper/server/RequestProcessor;Ljava/lang/String;Z)V
@3.6.0
+#getMaxReadBatchSize()I
+#getMaxCommitBatchSize()I
+#setMaxReadBatchSize(I)V
+#setMaxCommitBatchSize(I)V

+###org/apache/zookeeper/server/quorum/Election
@3.3.0
+#lookForLeader()Lorg/apache/zookeeper/server/quorum/Vote;
+#shutdown()V

+###org/apache/zookeeper/server/quorum/FastLeaderElection$Messenger
@3.4.6
+#queueEmpty()Z
@3.4.12
-#queueEmpty()Z

+###org/apache/zookeeper/server/quorum/FastLeaderElection$Notification
@3.3.0
+#<init>()V
@3.4.6
+#toString()Ljava/lang/String;
@3.5.0-alpha
-#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/FastLeaderElection$ToSend
@3.3.0

+###org/apache/zookeeper/server/quorum/FastLeaderElection
@3.3.0
+#getLogicalClock()J
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;)V
+#getCnxManager()Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;
+#shutdown()V
+#lookForLeader()Lorg/apache/zookeeper/server/quorum/Vote;
@3.5.0-alpha
+#start()V
+#getVote()Lorg/apache/zookeeper/server/quorum/Vote;

+###org/apache/zookeeper/server/quorum/Follower
@3.3.0
+#toString()Ljava/lang/String;
+#getZxid()J
+#shutdown()V
@3.6.0
+#getSyncedObserverSize()Ljava/lang/Integer;
+#getSyncedObserversInfo()Ljava/lang/Iterable;
+#resetObserverConnectionStats()V

+###org/apache/zookeeper/server/quorum/FollowerBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/Follower;Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getName()Ljava/lang/String;
+#getQuorumAddress()Ljava/lang/String;
+#getLastQueuedZxid()Ljava/lang/String;
+#getPendingRevalidationCount()I
@3.4.10
+#getElectionTimeTaken()J
@3.5.0-alpha
-#getElectionTimeTaken()J
@3.5.3-beta
+#getElectionTimeTaken()J
@3.6.0
+#getObserverMasterPacketSizeLimit()I
+#setObserverMasterPacketSizeLimit(I)V
+#getMaxConcurrentSnapSyncs()I
+#setMaxConcurrentSnapSyncs(I)V
+#getMaxConcurrentDiffSyncs()I
+#setMaxConcurrentDiffSyncs(I)V

+###org/apache/zookeeper/server/quorum/FollowerMXBean
@3.3.0
+#getQuorumAddress()Ljava/lang/String;
+#getLastQueuedZxid()Ljava/lang/String;
+#getPendingRevalidationCount()I
@3.4.10
+#getElectionTimeTaken()J
@3.5.0-alpha
-#getElectionTimeTaken()J
@3.5.3-beta
+#getElectionTimeTaken()J
@3.6.0
+#getObserverMasterPacketSizeLimit()I
+#setObserverMasterPacketSizeLimit(I)V
+#getMaxConcurrentSnapSyncs()I
+#setMaxConcurrentSnapSyncs(I)V
+#getMaxConcurrentDiffSyncs()I
+#setMaxConcurrentDiffSyncs(I)V

+###org/apache/zookeeper/server/quorum/FollowerRequestProcessor
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/FollowerZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#run()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V

+###org/apache/zookeeper/server/quorum/FollowerZooKeeperServer
@3.3.0
+#getFollower()Lorg/apache/zookeeper/server/quorum/Follower;
+#logRequest(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)V
+#commit(J)V
+#sync()V
+#getGlobalOutstandingLimit()I
+#shutdown()V
+#getState()Ljava/lang/String;
+#getLearner()Lorg/apache/zookeeper/server/quorum/Learner;
@3.5.0-alpha
-#shutdown()V
@3.6.0
+#logRequest(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;Lorg/apache/zookeeper/txn/TxnDigest;)V
-#logRequest(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)V

+###org/apache/zookeeper/server/quorum/Leader$Proposal
@3.3.0
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/Leader$XidRolloverException
@3.3.5
+#<init>(Ljava/lang/String;)V
@3.4.0
-###org/apache/zookeeper/server/quorum/Leader$XidRolloverException

+###org/apache/zookeeper/server/quorum/Leader
@3.3.0
+#processAck(JJLjava/net/SocketAddress;)V
+#commit(J)V
+#inform(Lorg/apache/zookeeper/server/quorum/Leader$Proposal;)V
+#propose(Lorg/apache/zookeeper/server/Request;)Lorg/apache/zookeeper/server/quorum/Leader$Proposal;
+#processSync(Lorg/apache/zookeeper/server/quorum/LearnerSyncRequest;)V
+#sendSync(Lorg/apache/zookeeper/server/quorum/LearnerSyncRequest;)V
+#startForwarding(Lorg/apache/zookeeper/server/quorum/LearnerHandler;J)J
@3.3.2
+#getEpoch()J
@3.4.0
+#getEpochToPropose(JJ)J
+#waitForEpochAck(JLorg/apache/zookeeper/server/quorum/StateSummary;)V
@3.4.4
+#getLearners()Ljava/util/List;
+#getForwardingFollowers()Ljava/util/List;
+#getObservingLearners()Ljava/util/List;
+#getNumPendingSyncs()I
+#getPacketType(I)Ljava/lang/String;
@3.4.6
+#waitForNewLeaderAck(JJLorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
@3.4.13
+#getProposalStats()Lorg/apache/zookeeper/server/quorum/ProposalStats;
+#waitForNewLeaderAck(JJ)V
-#waitForNewLeaderAck(JJLorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
@3.5.0-alpha
+#isQuorumSynced(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)Z
+#tryToCommit(Lorg/apache/zookeeper/server/quorum/Leader$Proposal;JLjava/net/SocketAddress;)Z
+#commitAndActivate(JJ)V
+#informAndActivate(Lorg/apache/zookeeper/server/quorum/Leader$Proposal;J)V
+#getLearnerSnapshotThrottler()Lorg/apache/zookeeper/server/quorum/LearnerSnapshotThrottler;
+#waitForNewLeaderAck(JJLorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
-#getProposalStats()Lorg/apache/zookeeper/server/quorum/ProposalStats;
-#waitForNewLeaderAck(JJ)V
@3.5.4-beta
+#getProposalStats()Lorg/apache/zookeeper/server/quorum/ProposalStats;
+#waitForNewLeaderAck(JJ)V
-#waitForNewLeaderAck(JJLorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
@3.5.5
+#getProposalStats()Lorg/apache/zookeeper/server/quorum/BufferStats;
+#createLearnerSnapshotThrottler(IJ)Lorg/apache/zookeeper/server/quorum/LearnerSnapshotThrottler;
-#getProposalStats()Lorg/apache/zookeeper/server/quorum/ProposalStats;
@3.6.0
+#setAckLoggingFrequency(I)V
+#getAckLoggingFrequency()I
+#getNonVotingFollowers()Ljava/util/List;
+#getObservingLearnersInfo()Ljava/lang/Iterable;
+#resetObserverConnectionStats()V
+#addLearnerHandler(Lorg/apache/zookeeper/server/quorum/LearnerHandler;)V
+#removeLearnerHandler(Lorg/apache/zookeeper/server/quorum/LearnerHandler;)V
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;)V
+#getUptime()J
+#buildInformAndActivePacket(JJ[B)Lorg/apache/zookeeper/server/quorum/QuorumPacket;
+#getLastProposed()J
+#waitForStartup()V
+#setMaxTimeToWaitForEpoch(I)V
+#setLeadingVoteSet(Lorg/apache/zookeeper/server/quorum/SyncedLearnerTracker;)V
+#reportLookingSid(J)V
+#getZKDatabase()Lorg/apache/zookeeper/server/ZKDatabase;
+#getCurrentTick()I
+#syncTimeout()I
+#getTickOfNextAckDeadline()I
+#getTickOfInitialAckDeadline()I
+#getAndDecrementFollowerCounter()J
+#touch(JI)V
+#submitLearnerRequest(Lorg/apache/zookeeper/server/Request;)V
+#getQuorumVerifierVersion()J
+#getPeerInfo(J)Ljava/lang/String;
+#getQuorumVerifierBytes()[B
+#getQuorumAuthServer()Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthServer;
+#revalidateSession(Lorg/apache/zookeeper/server/quorum/QuorumPacket;Lorg/apache/zookeeper/server/quorum/LearnerHandler;)V
+#registerLearnerHandlerBean(Lorg/apache/zookeeper/server/quorum/LearnerHandler;Ljava/net/Socket;)V
+#unregisterLearnerHandlerBean(Lorg/apache/zookeeper/server/quorum/LearnerHandler;)V
-#createLearnerSnapshotThrottler(IJ)Lorg/apache/zookeeper/server/quorum/LearnerSnapshotThrottler;
-#getLearnerSnapshotThrottler()Lorg/apache/zookeeper/server/quorum/LearnerSnapshotThrottler;

+###org/apache/zookeeper/server/quorum/LeaderBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/Leader;Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getName()Ljava/lang/String;
+#getCurrentZxid()Ljava/lang/String;
+#followerInfo()Ljava/lang/String;
@3.4.10
+#getElectionTimeTaken()J
@3.4.13
+#getLastProposalSize()I
+#getMinProposalSize()I
+#getMaxProposalSize()I
+#resetProposalStatistics()V
@3.5.0-alpha
-#getElectionTimeTaken()J
-#getLastProposalSize()I
-#getMinProposalSize()I
-#getMaxProposalSize()I
-#resetProposalStatistics()V
@3.5.3-beta
+#getElectionTimeTaken()J
@3.5.4-beta
+#getLastProposalSize()I
+#getMinProposalSize()I
+#getMaxProposalSize()I
+#resetProposalStatistics()V
@3.6.0
+#nonVotingFollowerInfo()Ljava/lang/String;
+#getMaxConcurrentSnapSyncs()I
+#setMaxConcurrentSnapSyncs(I)V
+#getMaxConcurrentDiffSyncs()I
+#setMaxConcurrentDiffSyncs(I)V

+###org/apache/zookeeper/server/quorum/LeaderElectionBean
@3.3.0
+#<init>()V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getStartTime()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/LeaderElectionMXBean
@3.3.0
+#getStartTime()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/LeaderMXBean
@3.3.0
+#getCurrentZxid()Ljava/lang/String;
+#followerInfo()Ljava/lang/String;
@3.4.10
+#getElectionTimeTaken()J
@3.4.13
+#getLastProposalSize()I
+#getMinProposalSize()I
+#getMaxProposalSize()I
+#resetProposalStatistics()V
@3.5.0-alpha
-#getElectionTimeTaken()J
-#getLastProposalSize()I
-#getMinProposalSize()I
-#getMaxProposalSize()I
-#resetProposalStatistics()V
@3.5.3-beta
+#getElectionTimeTaken()J
@3.5.4-beta
+#getLastProposalSize()I
+#getMinProposalSize()I
+#getMaxProposalSize()I
+#resetProposalStatistics()V
@3.6.0
+#nonVotingFollowerInfo()Ljava/lang/String;
+#getMaxConcurrentSnapSyncs()I
+#setMaxConcurrentSnapSyncs(I)V
+#getMaxConcurrentDiffSyncs()I
+#setMaxConcurrentDiffSyncs(I)V

+###org/apache/zookeeper/server/quorum/LeaderRequestProcessor
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V

+###org/apache/zookeeper/server/quorum/LeaderSessionTracker
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJZ)V
+#removeSession(J)V
+#start()V
+#shutdown()V
+#isGlobalSession(J)Z
+#addGlobalSession(JI)Z
+#addSession(JI)Z
+#touchSession(JI)Z
+#createSession(I)J
+#getServerIdFromSessionId(J)J
+#checkSession(JLjava/lang/Object;)V
+#checkGlobalSession(JLjava/lang/Object;)V
+#setOwner(JLjava/lang/Object;)V
+#dumpSessions(Ljava/io/PrintWriter;)V
+#setSessionClosing(J)V
+#getSessionExpiryMap()Ljava/util/Map;
@3.5.1-alpha
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJZLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJZ)V
@3.6.0
+#trackSession(JI)Z
+#commitSession(JI)Z
-#addGlobalSession(JI)Z
-#addSession(JI)Z
@3.7.1
+#globalSessions()Ljava/util/Set;

+###org/apache/zookeeper/server/quorum/LeaderZooKeeperServer
@3.3.0
+#getLeader()Lorg/apache/zookeeper/server/quorum/Leader;
+#getGlobalOutstandingLimit()I
+#touch(JI)Z
+#registerJMX(Lorg/apache/zookeeper/server/quorum/LeaderBean;Lorg/apache/zookeeper/server/quorum/LocalPeerBean;)V
+#getState()Ljava/lang/String;
+#getServerId()J
@3.3.5
+#createSessionTracker()V
@3.4.0
-#createSessionTracker()V
@3.4.3
+#createSessionTracker()V
@3.5.0-alpha
+#checkIfValidGlobalSession(JI)Z
+#submitLearnerRequest(Lorg/apache/zookeeper/server/Request;)V
@3.5.1-alpha
+#startup()V
+#shutdown()V
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;Lorg/apache/zookeeper/server/quorum/QuorumPeer;Lorg/apache/zookeeper/server/ZKDatabase;)V

+###org/apache/zookeeper/server/quorum/Learner
@3.3.0
+#<init>()V
+#getSocket()Ljava/net/Socket;
+#getPendingRevalidationsCount()I
+#shutdown()V

+###org/apache/zookeeper/server/quorum/LearnerHandler
@3.3.0
+#getSocket()Ljava/net/Socket;
+#toString()Ljava/lang/String;
+#getLearnerType()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
+#packetToString(Lorg/apache/zookeeper/server/quorum/QuorumPacket;)Ljava/lang/String;
+#run()V
+#shutdown()V
+#tickOfLastAck()J
+#ping()V
+#synced()Z
@3.4.6
+#tickOfNextAckDeadline()J
-#tickOfLastAck()J
@3.5.0-alpha
+#syncFollower(JLorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/Leader;)Z
+#getQueuedPackets()Ljava/util/Queue;
+#setFirstPacket(Z)V
@3.6.0
+#getLastZxid()J
+#getEstablished()Ljava/util/Date;
+#getLearnerHandlerInfo()Ljava/util/Map;
+#resetObserverConnectionStats()V
-#syncFollower(JLorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/Leader;)Z

+###org/apache/zookeeper/server/quorum/LearnerHandlerBean
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/quorum/LearnerHandler;Ljava/net/Socket;)V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#terminateConnection()V
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/LearnerHandlerMXBean
@3.6.0
+#terminateConnection()V

+###org/apache/zookeeper/server/quorum/LearnerMaster
@3.6.0
+#<init>()V
+#getMaxConcurrentSnapSyncs()I
+#setMaxConcurrentSnapSyncs(I)V
+#getMaxConcurrentDiffSyncs()I
+#setMaxConcurrentDiffSyncs(I)V
+#getLearnerSnapSyncThrottler()Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler;
+#getLearnerDiffSyncThrottler()Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler;

+###org/apache/zookeeper/server/quorum/LearnerSender
@3.6.3
+#<init>(Lorg/apache/zookeeper/server/quorum/Learner;)V
+#run()V
+#queuePacket(Lorg/apache/zookeeper/server/quorum/QuorumPacket;)V
+#shutdown()V

+###org/apache/zookeeper/server/quorum/LearnerSessionTracker
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;J)V
+#removeSession(J)V
+#shutdown()V
+#addSession(JI)V
+#touchSession(JI)Z
+#createSession(I)J
+#checkSession(JLjava/lang/Object;)V
+#setOwner(JLjava/lang/Object;)V
+#dumpSessions(Ljava/io/PrintWriter;)V
@3.3.4
+#setSessionClosing(J)V
@3.4.7
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;JLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;J)V
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJZ)V
+#start()V
+#isGlobalSession(J)Z
+#addGlobalSession(JI)Z
+#addSession(JI)Z
+#snapshot()Ljava/util/Map;
+#getSessionExpiryMap()Ljava/util/Map;
-#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentHashMap;JLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#addSession(JI)V
@3.5.1-alpha
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJZLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJZ)V
@3.6.0
+#trackSession(JI)Z
+#commitSession(JI)Z
-#addGlobalSession(JI)Z
-#addSession(JI)Z
@3.7.1
+#globalSessions()Ljava/util/Set;

+###org/apache/zookeeper/server/quorum/LearnerSyncRequest
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/LearnerHandler;JIILjava/nio/ByteBuffer;Ljava/util/List;)V

+###org/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType
@3.6.0
+#values()[Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType;

+###org/apache/zookeeper/server/quorum/LearnerSyncThrottler
@3.6.0
+#<init>(ILorg/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType;)V
+#endSync()V
+#setMaxConcurrentSyncs(I)V
+#getSyncInProgress()I

+###org/apache/zookeeper/server/quorum/LearnerZooKeeperServer
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;Lorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#getLearner()Lorg/apache/zookeeper/server/quorum/Learner;
+#getServerId()J
+#registerJMX(Lorg/apache/zookeeper/server/ZooKeeperServerBean;Lorg/apache/zookeeper/server/quorum/LocalPeerBean;)V
@3.3.5
+#createSessionTracker()V
@3.4.0
-#createSessionTracker()V
@3.4.3
+#createSessionTracker()V
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#shutdown()V
-#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder;Lorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIIILorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
-#<init>(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;IIILorg/apache/zookeeper/server/ZKDatabase;Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V

+###org/apache/zookeeper/server/quorum/LocalPeerBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getTickTime()I
+#getMaxClientCnxnsPerHost()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
+#getInitLimit()I
+#getSyncLimit()I
+#getTick()I
+#getState()Ljava/lang/String;
+#getQuorumAddress()Ljava/lang/String;
+#getElectionType()I
@3.5.0-alpha
+#getElectionAddress()Ljava/lang/String;
+#getClientAddress()Ljava/lang/String;
+#getLearnerType()Ljava/lang/String;
+#getConfigVersion()J
+#getQuorumSystemInfo()Ljava/lang/String;
+#isPartOfEnsemble()Z
@3.5.5
+#isLeader()Z
@3.6.0
+#setInitLimit(I)V
+#setSyncLimit(I)V
+#getMaxCnxns()I

+###org/apache/zookeeper/server/quorum/LocalPeerMXBean
@3.3.0
+#getTickTime()I
+#getMaxClientCnxnsPerHost()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
+#getInitLimit()I
+#getSyncLimit()I
+#getTick()I
+#getState()Ljava/lang/String;
+#getQuorumAddress()Ljava/lang/String;
+#getElectionType()I
@3.5.0-alpha
+#getElectionAddress()Ljava/lang/String;
+#getClientAddress()Ljava/lang/String;
+#getLearnerType()Ljava/lang/String;
+#getConfigVersion()J
+#getQuorumSystemInfo()Ljava/lang/String;
+#isPartOfEnsemble()Z
@3.5.5
+#isLeader()Z
@3.6.0
+#setInitLimit(I)V
+#setSyncLimit(I)V
+#getMaxCnxns()I

+###org/apache/zookeeper/server/quorum/LocalSessionTracker
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJ)V
+#isLocalSession(J)Z
+#isGlobalSession(J)Z
+#addGlobalSession(JI)Z
@3.5.1-alpha
+#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#<init>(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;Ljava/util/concurrent/ConcurrentMap;IJ)V
@3.6.0
+#createSession(I)J
-#addGlobalSession(JI)Z
@3.7.1
+#localSessions()Ljava/util/Set;

+###org/apache/zookeeper/server/quorum/MultipleAddresses
@3.6.0
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#<init>(Ljava/net/InetSocketAddress;)V
+#<init>(Ljava/util/Collection;Ljava/time/Duration;)V
+#isEmpty()Z
+#getAllAddresses()Ljava/util/Set;
+#getWildcardAddresses()Ljava/util/Set;
+#getAllPorts()Ljava/util/List;
+#getAllHostStrings()Ljava/util/List;
+#addAddress(Ljava/net/InetSocketAddress;)V
+#getReachableAddress()Ljava/net/InetSocketAddress;
+#getAllReachableAddresses()Ljava/util/Set;
+#getReachableOrOne()Ljava/net/InetSocketAddress;
+#recreateSocketAddresses()V
+#getOne()Ljava/net/InetSocketAddress;
+#size()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.6.1
+#getAllReachableAddressesOrAll()Ljava/util/Set;

+###org/apache/zookeeper/server/quorum/Observer
@3.3.0
+#toString()Ljava/lang/String;
+#shutdown()V
@3.6.0
+#getLearnerMasterId()J
+#setLearnerMaster(Ljava/lang/String;)Z
+#getCurrentLearnerMaster()Lorg/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer;
+#getObserverElectionDelayMs()J
+#setObserverElectionDelayMs(J)V

+###org/apache/zookeeper/server/quorum/ObserverMXBean
@3.3.0
+#getPendingRevalidationCount()I
+#getQuorumAddress()Ljava/lang/String;
@3.6.0
+#getLearnerMaster()Ljava/lang/String;
+#setLearnerMaster(Ljava/lang/String;)V

+###org/apache/zookeeper/server/quorum/ObserverMaster
@3.6.0
+#addLearnerHandler(Lorg/apache/zookeeper/server/quorum/LearnerHandler;)V
+#removeLearnerHandler(Lorg/apache/zookeeper/server/quorum/LearnerHandler;)V
+#syncTimeout()I
+#getTickOfNextAckDeadline()I
+#getTickOfInitialAckDeadline()I
+#getAndDecrementFollowerCounter()J
+#waitForEpochAck(JLorg/apache/zookeeper/server/quorum/StateSummary;)V
+#waitForStartup()V
+#getLastProposed()J
+#getEpochToPropose(JJ)J
+#getZKDatabase()Lorg/apache/zookeeper/server/ZKDatabase;
+#waitForNewLeaderAck(JJ)V
+#getCurrentTick()I
+#processAck(JJLjava/net/SocketAddress;)V
+#touch(JI)V
+#revalidateSession(Lorg/apache/zookeeper/server/quorum/QuorumPacket;Lorg/apache/zookeeper/server/quorum/LearnerHandler;)V
+#submitLearnerRequest(Lorg/apache/zookeeper/server/Request;)V
+#startForwarding(Lorg/apache/zookeeper/server/quorum/LearnerHandler;J)J
+#getQuorumVerifierVersion()J
+#getPeerInfo(J)Ljava/lang/String;
+#getQuorumVerifierBytes()[B
+#getQuorumAuthServer()Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthServer;
+#start()V
+#run()V
+#stop()V
+#getActiveObservers()Ljava/lang/Iterable;
+#resetObserverConnectionStats()V
+#registerLearnerHandlerBean(Lorg/apache/zookeeper/server/quorum/LearnerHandler;Ljava/net/Socket;)V
+#unregisterLearnerHandlerBean(Lorg/apache/zookeeper/server/quorum/LearnerHandler;)V

+###org/apache/zookeeper/server/quorum/ObserverRequestProcessor
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/ObserverZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#run()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V

+###org/apache/zookeeper/server/quorum/ObserverZooKeeperServer
@3.3.0
+#getObserver()Lorg/apache/zookeeper/server/quorum/Observer;
+#getLearner()Lorg/apache/zookeeper/server/quorum/Learner;
+#commitRequest(Lorg/apache/zookeeper/server/Request;)V
+#sync()V
+#getState()Ljava/lang/String;
@3.4.6
+#shutdown()V
@3.6.0
+#dumpMonitorValues(Ljava/util/function/BiConsumer;)V

+###org/apache/zookeeper/server/quorum/PrependableSocket
@3.5.5
+#<init>(Ljava/net/SocketImpl;)V
+#getInputStream()Ljava/io/InputStream;
+#prependToInputStream([BII)V

+###org/apache/zookeeper/server/quorum/ProposalRequestProcessor
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/LeaderZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#initialize()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V

+###org/apache/zookeeper/server/quorum/QuorumBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getQuorumSize()I
@3.5.5
+#isSslQuorum()Z
+#isPortUnification()Z
@3.6.0
+#getSyncLimit()I
+#getInitLimit()I
+#setInitLimit(I)V
+#setSyncLimit(I)V
+#getObserverElectionDelayMS()J
+#setObserverElectionDelayMS(J)V
+#getDigestEnabled()Z
+#disableDigest()V

+###org/apache/zookeeper/server/quorum/QuorumCnxManager$InitialMessage$InitialMessageException
@3.5.1-alpha

+###org/apache/zookeeper/server/quorum/QuorumCnxManager$InitialMessage
@3.5.1-alpha
+#parse(Ljava/lang/Long;Ljava/io/DataInputStream;)Lorg/apache/zookeeper/server/quorum/QuorumCnxManager$InitialMessage;
@3.5.8
+#isWildcardAddress(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;
@3.6.0
-#isWildcardAddress(Ljava/lang/String;)Z
-#toString()Ljava/lang/String;
@3.6.1
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/QuorumCnxManager$Listener
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;)V
+#run()V
@3.5.6
+#setSocketBindErrorHandler(Ljava/lang/Runnable;)V
@3.6.0
-#setSocketBindErrorHandler(Ljava/lang/Runnable;)V

+###org/apache/zookeeper/server/quorum/QuorumCnxManager$Message
@3.3.0

+###org/apache/zookeeper/server/quorum/QuorumCnxManager
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#testInitiateConnection(J)V
+#initiateConnection(Ljava/nio/channels/SocketChannel;Ljava/lang/Long;)Z
+#toSend(Ljava/lang/Long;Ljava/nio/ByteBuffer;)V
+#connectAll()V
+#halt()V
+#softHalt()V
@3.3.3
+#getThreadCount()J
+#getQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
@3.4.0
+#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)Z
+#receiveConnection(Ljava/net/Socket;)Z
+#addToRecvQueue(Lorg/apache/zookeeper/server/quorum/QuorumCnxManager$Message;)V
+#pollRecvQueue(JLjava/util/concurrent/TimeUnit;)Lorg/apache/zookeeper/server/quorum/QuorumCnxManager$Message;
-#initiateConnection(Ljava/nio/channels/SocketChannel;Ljava/lang/Long;)Z
@3.4.7
+#receiveConnection(Ljava/net/Socket;)V
-#receiveConnection(Ljava/net/Socket;)Z
@3.4.10
+#<init>(JLjava/util/Map;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthServer;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthLearner;IZIZ)V
+#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)V
+#initiateConnectionAsync(Ljava/net/Socket;Ljava/lang/Long;)V
+#receiveConnectionAsync(Ljava/net/Socket;)V
+#connectOne(J)V
+#getConnectionThreadCount()J
+#connectedToPeer(J)Z
-#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
-#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)Z
-#getQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
@3.4.11
+#<init>(JLjava/util/Map;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthServer;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthLearner;IZIZLjava/util/concurrent/ConcurrentHashMap;)V
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)Z
+#receiveConnection(Ljava/net/Socket;)Z
+#getQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
-#<init>(JLjava/util/Map;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthServer;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthLearner;IZIZ)V
-#<init>(JLjava/util/Map;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthServer;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthLearner;IZIZLjava/util/concurrent/ConcurrentHashMap;)V
-#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)V
-#initiateConnectionAsync(Ljava/net/Socket;Ljava/lang/Long;)V
-#receiveConnection(Ljava/net/Socket;)V
-#receiveConnectionAsync(Ljava/net/Socket;)V
-#connectOne(J)V
-#getConnectionThreadCount()J
-#connectedToPeer(J)Z
@3.5.1-alpha
+#receiveConnection(Ljava/net/Socket;)V
-#receiveConnection(Ljava/net/Socket;)Z
@3.5.4-beta
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;JLjava/util/Map;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthServer;Lorg/apache/zookeeper/server/quorum/auth/QuorumAuthLearner;IZIZ)V
+#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)V
+#initiateConnectionAsync(Ljava/net/Socket;Ljava/lang/Long;)V
+#receiveConnectionAsync(Ljava/net/Socket;)V
+#getConnectionThreadCount()J
+#connectedToPeer(J)Z
-#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
-#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)Z
-#getQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
@3.5.8
+#initiateConnection(Ljava/net/InetSocketAddress;Ljava/lang/Long;)V
+#initiateConnectionAsync(Ljava/net/InetSocketAddress;Ljava/lang/Long;)Z
-#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)V
-#initiateConnectionAsync(Ljava/net/Socket;Ljava/lang/Long;)V
@3.5.9
+#isReconfigEnabled()Z
@3.6.0
+#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)V
+#initiateConnectionAsync(Ljava/net/Socket;Ljava/lang/Long;)V
-#initiateConnection(Ljava/net/InetSocketAddress;Ljava/lang/Long;)V
-#initiateConnectionAsync(Ljava/net/InetSocketAddress;Ljava/lang/Long;)Z
-#isReconfigEnabled()Z
@3.6.1
+#initiateConnection(Lorg/apache/zookeeper/server/quorum/MultipleAddresses;Ljava/lang/Long;)V
+#initiateConnectionAsync(Lorg/apache/zookeeper/server/quorum/MultipleAddresses;Ljava/lang/Long;)Z
-#initiateConnection(Ljava/net/Socket;Ljava/lang/Long;)V
-#initiateConnectionAsync(Ljava/net/Socket;Ljava/lang/Long;)V
@3.6.2
+#isReconfigEnabled()Z

+###org/apache/zookeeper/server/quorum/QuorumMXBean
@3.3.0
+#getName()Ljava/lang/String;
+#getQuorumSize()I
@3.5.5
+#isSslQuorum()Z
+#isPortUnification()Z
@3.6.0
+#getInitLimit()I
+#getSyncLimit()I
+#setInitLimit(I)V
+#setSyncLimit(I)V
+#getObserverElectionDelayMS()J
+#setObserverElectionDelayMS(J)V
+#getDigestEnabled()Z
+#disableDigest()V

+###org/apache/zookeeper/server/quorum/QuorumPeer$AddressTuple
@3.5.5
+#<init>(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/quorum/MultipleAddresses;Lorg/apache/zookeeper/server/quorum/MultipleAddresses;Ljava/net/InetSocketAddress;)V
-#<init>(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V

+###org/apache/zookeeper/server/quorum/QuorumPeer$LearnerType
@3.3.0
+#values()[Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;

+###org/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer
@3.3.0
+#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
+#<init>(JLjava/net/InetSocketAddress;)V
+#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
@3.4.7
+#<init>(JLjava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
+#recreateSocketAddresses()V
-#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
-#<init>(JLjava/net/InetSocketAddress;)V
-#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
@3.4.10
+#<init>(JLjava/net/InetSocketAddress;)V
@3.4.11
+#getReachableAddress(Ljava/lang/String;I)Ljava/net/InetAddress;
@3.5.0-alpha
+#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
+#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
+#<init>(JLjava/lang/String;)V
+#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
+#<init>(JLjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
-#<init>(JLjava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
-#recreateSocketAddresses()V
-#getReachableAddress(Ljava/lang/String;I)Ljava/net/InetAddress;
@3.5.1-alpha
+#recreateSocketAddresses()V
+#checkAddressDuplicate(Lorg/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer;)V
@3.5.5
+#getId()J
@3.6.0
+#delimitedHostString(Ljava/net/InetSocketAddress;)Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/QuorumPeer$ServerState
@3.3.0
+#values()[Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;

+###org/apache/zookeeper/server/quorum/QuorumPeer$SyncMode
@3.5.10
+#values()[Lorg/apache/zookeeper/server/quorum/QuorumPeer$SyncMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/QuorumPeer$SyncMode;

+###org/apache/zookeeper/server/quorum/QuorumPeer$ZabState
@3.5.10
+#values()[Lorg/apache/zookeeper/server/quorum/QuorumPeer$ZabState;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/QuorumPeer$ZabState;

+###org/apache/zookeeper/server/quorum/QuorumPeer
@3.3.0
+#getPeerType()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
+#setPeerType(Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
+#getQuorumSize()I
+#getId()J
+#getCurrentVote()Lorg/apache/zookeeper/server/quorum/Vote;
+#setCurrentVote(Lorg/apache/zookeeper/server/quorum/Vote;)V
+#setPeerState(Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;)V
+#getPeerState()Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;
+#getQuorumAddress()Ljava/net/InetSocketAddress;
+#<init>()V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/NIOServerCnxn$Factory;)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/NIOServerCnxn$Factory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#start()V
+#stopLeaderElection()V
+#startLeaderElection()V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIII)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIIILorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#getLastLoggedZxid()J
+#getActiveServer()Lorg/apache/zookeeper/server/ZooKeeperServer;
+#run()V
+#shutdown()V
+#getView()Ljava/util/Map;
+#getVotingView()Ljava/util/Map;
+#getObservingView()Ljava/util/Map;
+#viewContains(Ljava/lang/Long;)Z
+#getQuorumPeers()[Ljava/lang/String;
+#getServerState()Ljava/lang/String;
+#getMyid()J
+#setMyid(J)V
+#getTickTime()I
+#setTickTime(I)V
+#getMinSessionTimeout()I
+#setMinSessionTimeout(I)V
+#getMaxSessionTimeout()I
+#setMaxSessionTimeout(I)V
+#getInitLimit()I
+#setInitLimit(I)V
+#getTick()I
+#getQuorumVerifier()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#setQuorumVerifier(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#getElectionAlg()Lorg/apache/zookeeper/server/quorum/Election;
+#getSyncLimit()I
+#setSyncLimit(I)V
+#getElectionType()I
+#setElectionType(I)V
+#getCnxnFactory()Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;
+#setCnxnFactory(Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;)V
+#setQuorumPeers(Ljava/util/Map;)V
+#getClientPort()I
+#setClientPortAddress(Ljava/net/InetSocketAddress;)V
+#setTxnFactory(Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;)V
+#getTxnFactory()Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;
+#setZKDatabase(Lorg/apache/zookeeper/server/ZKDatabase;)V
+#setRunning(Z)V
+#isRunning()Z
@3.3.1
+#getLearnerType()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
+#setLearnerType(Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
-#getPeerType()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
-#setPeerType(Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;)V
@3.3.3
+#getQuorumCnxManager()Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;
@3.4.0
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#getMaxClientCnxnsPerHost()I
+#getCnxnFactory()Lorg/apache/zookeeper/server/ServerCnxnFactory;
+#setCnxnFactory(Lorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#getCurrentEpoch()J
+#getAcceptedEpoch()J
+#setCurrentEpoch(J)V
+#setAcceptedEpoch(J)V
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/NIOServerCnxn$Factory;)V
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/NIOServerCnxn$Factory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
-#getCnxnFactory()Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;
-#setCnxnFactory(Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;)V
@3.4.6
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#getSyncEnabled()Z
+#setSyncEnabled(Z)V
+#getQuorumListenOnAllIPs()Z
+#setQuorumListenOnAllIPs(Z)V
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
@3.4.10
+#testingQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
+#initialize()V
+#hasAuthInitialized()Z
+#createCnxnManager()Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;
-#<init>()V
@3.5.0-alpha
+#reconfigFlagSet()V
+#reconfigFlagClear()V
+#isReconfigStateChange()Z
+#setQuorumAddress(Ljava/net/InetSocketAddress;)V
+#getElectionAddress()Ljava/net/InetSocketAddress;
+#setElectionAddress(Ljava/net/InetSocketAddress;)V
+#getClientAddress()Ljava/net/InetSocketAddress;
+#setClientAddress(Ljava/net/InetSocketAddress;)V
+#<init>()V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Ljava/lang/String;)V
+#getCurrentAndNextConfigVoters()Ljava/util/Set;
+#areLocalSessionsEnabled()Z
+#enableLocalSessions(Z)V
+#isLocalSessionsUpgradingEnabled()Z
+#enableLocalSessionsUpgrading(Z)V
+#configFromString(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#getLastSeenQuorumVerifier()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#connectNewPeers()V
+#restartLeaderElection(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#setLastSeenQuorumVerifier(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Z)V
+#setQuorumVerifier(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Z)Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#initConfigInZKDatabase()V
+#processReconfig(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Ljava/lang/Long;Ljava/lang/Long;Z)Z
-#testingQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
-#initialize()V
-#getMyid()J
-#setQuorumVerifier(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
-#setQuorumPeers(Ljava/util/Map;)V
-#setClientPortAddress(Ljava/net/InetSocketAddress;)V
-#hasAuthInitialized()Z
-#createCnxnManager()Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;
@3.5.1-alpha
+#recreateSocketAddresses(J)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#getNextDynamicConfigFilename()Ljava/lang/String;
+#setSecureCnxnFactory(Lorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#setZooKeeperServer(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#closeAllConnections()V
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Ljava/lang/String;)V
-#getCnxnFactory()Lorg/apache/zookeeper/server/ServerCnxnFactory;
@3.5.3-beta
-#connectNewPeers()V
@3.5.4-beta
+#testingQuorumPeer()Lorg/apache/zookeeper/server/quorum/QuorumPeer;
+#initialize()V
+#createCnxnManager()Lorg/apache/zookeeper/server/quorum/QuorumCnxManager;
-#setRunning(Z)V
@3.5.5
+#isSslQuorum()Z
+#shouldUsePortUnification()Z
+#setSslQuorum(Z)V
+#setUsePortUnification(Z)V
-#setQuorumAddress(Ljava/net/InetSocketAddress;)V
-#setElectionAddress(Ljava/net/InetSocketAddress;)V
-#setClientAddress(Ljava/net/InetSocketAddress;)V
@3.5.9
+#isReconfigEnabled()Z
@3.5.10
+#setJvmPauseMonitor(Lorg/apache/zookeeper/server/util/JvmPauseMonitor;)V
+#setZabState(Lorg/apache/zookeeper/server/quorum/QuorumPeer$ZabState;)V
+#setSyncMode(Lorg/apache/zookeeper/server/quorum/QuorumPeer$SyncMode;)V
+#getZabState()Lorg/apache/zookeeper/server/quorum/QuorumPeer$ZabState;
+#getSyncMode()Lorg/apache/zookeeper/server/quorum/QuorumPeer$SyncMode;
+#getDetailedPeerState()Ljava/lang/String;
@3.6.0
+#getObserverMasterPort()I
+#setObserverMasterPort(I)V
+#isMultiAddressEnabled()Z
+#setMultiAddressEnabled(Z)V
+#getMultiAddressReachabilityCheckTimeoutMs()I
+#setMultiAddressReachabilityCheckTimeoutMs(I)V
+#isMultiAddressReachabilityCheckEnabled()Z
+#setMultiAddressReachabilityCheckEnabled(Z)V
+#setLeaderAddressAndId(Lorg/apache/zookeeper/server/quorum/MultipleAddresses;J)V
+#getLeaderAddress()Ljava/lang/String;
+#getLeaderId()J
+#getQuorumAddress()Lorg/apache/zookeeper/server/quorum/MultipleAddresses;
+#getElectionAddress()Lorg/apache/zookeeper/server/quorum/MultipleAddresses;
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIILorg/apache/zookeeper/server/ServerCnxnFactory;)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIIII)V
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIIIILorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#setInitialConfig(Ljava/lang/String;)V
+#getInitialConfig()Ljava/lang/String;
+#getClientPortListenBacklog()I
+#setClientPortListenBacklog(I)V
+#getConnectToLearnerMasterLimit()I
+#setConnectToLearnerMasterLimit(I)V
+#getSynced_observers_metric()Ljava/lang/Integer;
-#getQuorumAddress()Ljava/net/InetSocketAddress;
-#getElectionAddress()Ljava/net/InetSocketAddress;
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIILorg/apache/zookeeper/server/ServerCnxnFactory;)V
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IJIIIZLorg/apache/zookeeper/server/ServerCnxnFactory;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIII)V
-#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIIILorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
-#isReconfigEnabled()Z
@3.6.2
+#isReconfigEnabled()Z
@3.7.0
+#createFromConfig(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)Lorg/apache/zookeeper/server/quorum/QuorumPeer;
@3.8.0
+#<init>(Ljava/util/Map;Ljava/io/File;Ljava/io/File;IIJIIIILjava/lang/String;)V
@3.8.1
+#getMyId()J
-#getId()J

+###org/apache/zookeeper/server/quorum/QuorumPeerConfig$ConfigException
@3.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Exception;)V

+###org/apache/zookeeper/server/quorum/QuorumPeerConfig
@3.3.0
+#<init>()V
+#parse(Ljava/lang/String;)V
+#parseProperties(Ljava/util/Properties;)V
+#getClientPortAddress()Ljava/net/InetSocketAddress;
+#getDataDir()Ljava/lang/String;
+#getDataLogDir()Ljava/lang/String;
+#getTickTime()I
+#getMaxClientCnxns()I
+#getMinSessionTimeout()I
+#getMaxSessionTimeout()I
+#getInitLimit()I
+#getSyncLimit()I
+#getElectionAlg()I
+#getElectionPort()I
+#getQuorumVerifier()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#getServers()Ljava/util/Map;
+#getServerId()J
+#isDistributed()Z
+#getPeerType()Lorg/apache/zookeeper/server/quorum/QuorumPeer$LearnerType;
@3.4.0
+#getSnapRetainCount()I
+#getPurgeInterval()I
@3.4.6
+#getSyncEnabled()Z
+#getQuorumListenOnAllIPs()Ljava/lang/Boolean;
@3.5.0-alpha
+#writeDynamicConfig(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Z)V
+#deleteFile(Ljava/lang/String;)V
+#parseDynamicConfig(Ljava/util/Properties;IZZ)Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#checkValidity()V
+#getDataDir()Ljava/io/File;
+#getDataLogDir()Ljava/io/File;
+#areLocalSessionsEnabled()Z
+#isLocalSessionsUpgradingEnabled()Z
+#getLastSeenQuorumVerifier()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#getDynamicConfigFilename()Ljava/lang/String;
+#getConfigFilename()Ljava/lang/String;
+#getConfigBackwardCompatibility()Z
+#isStandaloneEnabled()Z
+#setStandaloneEnabled(Z)V
-#getDataDir()Ljava/lang/String;
-#getDataLogDir()Ljava/lang/String;
@3.5.1-alpha
+#getVersionFromFilename(Ljava/lang/String;)Ljava/lang/String;
+#writeDynamicConfig(Ljava/lang/String;Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Z)V
+#editStaticConfig(Ljava/lang/String;Ljava/lang/String;Z)V
+#getSecureClientPortAddress()Ljava/net/InetSocketAddress;
-#writeDynamicConfig(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Z)V
-#getDynamicConfigFilename()Ljava/lang/String;
-#getConfigBackwardCompatibility()Z
@3.5.3-beta
+#isReconfigEnabled()Z
+#setReconfigEnabled(Z)V
@3.5.5
+#isSslQuorum()Z
+#shouldUsePortUnification()Z
@3.5.7
+#configureSSLAuth()V
@3.5.10
+#getJvmPauseInfoThresholdMs()J
+#getJvmPauseWarnThresholdMs()J
+#getJvmPauseSleepTimeMs()J
+#isJvmPauseMonitorToRun()Z
@3.6.0
+#getObserverMasterPort()I
+#getInitialConfig()Ljava/lang/String;
+#getMetricsProviderClassName()Ljava/lang/String;
+#getMetricsProviderConfiguration()Ljava/util/Properties;
+#getClientPortListenBacklog()I
+#getConnectToLearnerMasterLimit()I
+#isMultiAddressEnabled()Z
+#isMultiAddressReachabilityCheckEnabled()Z
+#getMultiAddressReachabilityCheckTimeoutMs()I
@3.8.0
+#parseDynamicConfig(Ljava/util/Properties;IZZLjava/lang/String;)Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
-#parseDynamicConfig(Ljava/util/Properties;IZZ)Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;

+###org/apache/zookeeper/server/quorum/QuorumPeerMain
@3.3.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#runFromConfig(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
@3.7.0
+#close()V
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/QuorumStats$Provider
@3.3.0
+#getQuorumPeers()[Ljava/lang/String;
+#getServerState()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/QuorumStats
@3.3.0
+#getServerState()Ljava/lang/String;
+#getQuorumPeers()[Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/QuorumZooKeeperServer
@3.3.0
+#dumpConf(Ljava/io/PrintWriter;)V
@3.5.0-alpha
+#checkUpgradeSession(Lorg/apache/zookeeper/server/Request;)Lorg/apache/zookeeper/server/Request;
+#upgrade(J)V
@3.6.0
+#dumpMonitorValues(Ljava/util/function/BiConsumer;)V

+###org/apache/zookeeper/server/quorum/ReadOnlyBean
@3.4.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getName()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor
@3.4.0
+#<init>(Lorg/apache/zookeeper/server/ZooKeeperServer;Lorg/apache/zookeeper/server/RequestProcessor;)V
+#run()V
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#shutdown()V

+###org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer
@3.4.0
+#startup()V
+#registerJMX(Lorg/apache/zookeeper/server/ZooKeeperServerBean;Lorg/apache/zookeeper/server/quorum/LocalPeerBean;)V
+#getState()Ljava/lang/String;
+#getServerId()J
+#shutdown()V
@3.5.0-alpha
+#dumpConf(Ljava/io/PrintWriter;)V
@3.7.0
+#createSessionTracker()V

+###org/apache/zookeeper/server/quorum/RemotePeerBean
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer;)V
+#getName()Ljava/lang/String;
+#isHidden()Z
+#getQuorumAddress()Ljava/lang/String;
@3.5.0-alpha
+#setQuorumServer(Lorg/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer;)V
+#getElectionAddress()Ljava/lang/String;
+#getClientAddress()Ljava/lang/String;
+#getLearnerType()Ljava/lang/String;
@3.5.5
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;Lorg/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer;)V
+#isLeader()Z
-#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer$QuorumServer;)V

+###org/apache/zookeeper/server/quorum/RemotePeerMXBean
@3.3.0
+#getName()Ljava/lang/String;
+#getQuorumAddress()Ljava/lang/String;
@3.5.0-alpha
+#getElectionAddress()Ljava/lang/String;
+#getClientAddress()Ljava/lang/String;
+#getLearnerType()Ljava/lang/String;
@3.5.5
+#isLeader()Z

+###org/apache/zookeeper/server/quorum/SendAckRequestProcessor
@3.3.0
+#processRequest(Lorg/apache/zookeeper/server/Request;)V
+#flush()V
+#shutdown()V

+###org/apache/zookeeper/server/quorum/ServerBean
@3.3.0
+#<init>()V
+#isHidden()Z
+#getStartTime()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/ServerMXBean
@3.3.0
+#getName()Ljava/lang/String;
+#getStartTime()Ljava/lang/String;

+###org/apache/zookeeper/server/quorum/StateSummary
@3.4.0
+#<init>(JJ)V
+#getCurrentEpoch()J
+#getLastZxid()J
+#isMoreRecentThan(Lorg/apache/zookeeper/server/quorum/StateSummary;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/server/quorum/SyncThrottleException
@3.6.0
+#<init>(IILorg/apache/zookeeper/server/quorum/LearnerSyncThrottler$SyncType;)V

+###org/apache/zookeeper/server/quorum/SyncedLearnerTracker$QuorumVerifierAcksetPair
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;Ljava/util/HashSet;)V
+#getQuorumVerifier()Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;
+#getAckset()Ljava/util/HashSet;

+###org/apache/zookeeper/server/quorum/SyncedLearnerTracker
@3.5.0-alpha
+#<init>()V
+#addQuorumVerifier(Lorg/apache/zookeeper/server/quorum/flexible/QuorumVerifier;)V
+#addAck(Ljava/lang/Long;)Z
+#hasAllQuorums()Z
+#ackSetsToString()Ljava/lang/String;
@3.6.0
+#hasSid(J)Z

+###org/apache/zookeeper/server/quorum/UnifiedServerSocket$UnifiedSocket
@3.5.5
+#isSecureSocket()Z
+#isPlaintextSocket()Z
+#isModeKnown()Z
+#getSslSocket()Ljavax/net/ssl/SSLSocket;
+#connect(Ljava/net/SocketAddress;)V
+#connect(Ljava/net/SocketAddress;I)V
+#bind(Ljava/net/SocketAddress;)V
+#getInetAddress()Ljava/net/InetAddress;
+#getLocalAddress()Ljava/net/InetAddress;
+#getPort()I
+#getLocalPort()I
+#getRemoteSocketAddress()Ljava/net/SocketAddress;
+#getLocalSocketAddress()Ljava/net/SocketAddress;
+#getChannel()Ljava/nio/channels/SocketChannel;
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#setTcpNoDelay(Z)V
+#getTcpNoDelay()Z
+#setSoLinger(ZI)V
+#getSoLinger()I
+#sendUrgentData(I)V
+#setOOBInline(Z)V
+#getOOBInline()Z
+#setSoTimeout(I)V
+#getSoTimeout()I
+#setSendBufferSize(I)V
+#getSendBufferSize()I
+#setReceiveBufferSize(I)V
+#getReceiveBufferSize()I
+#setKeepAlive(Z)V
+#getKeepAlive()Z
+#setTrafficClass(I)V
+#getTrafficClass()I
+#setReuseAddress(Z)V
+#getReuseAddress()Z
+#close()V
+#shutdownInput()V
+#shutdownOutput()V
+#toString()Ljava/lang/String;
+#isConnected()Z
+#isBound()Z
+#isClosed()Z
+#isInputShutdown()Z
+#isOutputShutdown()Z
+#setPerformancePreferences(III)V

+###org/apache/zookeeper/server/quorum/UnifiedServerSocket
@3.5.5
+#<init>(Lorg/apache/zookeeper/common/X509Util;Z)V
+#<init>(Lorg/apache/zookeeper/common/X509Util;ZI)V
+#<init>(Lorg/apache/zookeeper/common/X509Util;ZII)V
+#<init>(Lorg/apache/zookeeper/common/X509Util;ZIILjava/net/InetAddress;)V
+#accept()Ljava/net/Socket;

+###org/apache/zookeeper/server/quorum/UpgradeableSessionTracker
@3.5.0-alpha
+#<init>()V
+#start()V
+#createLocalSessionTracker(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;IJ)V
+#isTrackingSession(J)Z
+#isLocalSession(J)Z
+#isGlobalSession(J)Z
+#upgradeSession(J)I
+#checkGlobalSession(JLjava/lang/Object;)V
@3.5.1-alpha
+#createLocalSessionTracker(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;IJLorg/apache/zookeeper/server/ZooKeeperServerListener;)V
-#createLocalSessionTracker(Lorg/apache/zookeeper/server/SessionTracker$SessionExpirer;IJ)V
@3.6.0
+#isLocalSessionsEnabled()Z
+#isUpgradingSession(J)Z
+#finishedUpgrading(J)V
+#getLocalSessionCount()J
@3.7.1
+#localSessions()Ljava/util/Set;

+###org/apache/zookeeper/server/quorum/Vote
@3.3.0
+#<init>(JJ)V
+#<init>(JJJ)V
+#<init>(JJJLorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.4.0
+#<init>(JJJJ)V
+#<init>(JJJJLorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;)V
+#getId()J
+#getZxid()J
+#getElectionEpoch()J
+#getPeerEpoch()J
+#getState()Lorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;
-#<init>(JJJLorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;)V
@3.4.6
+#<init>(IJJJJLorg/apache/zookeeper/server/quorum/QuorumPeer$ServerState;)V
+#getVersion()I

+###org/apache/zookeeper/server/quorum/auth/NullQuorumAuthLearner
@3.4.10
+#<init>()V
+#authenticate(Ljava/net/Socket;Ljava/lang/String;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/NullQuorumAuthLearner

+###org/apache/zookeeper/server/quorum/auth/NullQuorumAuthServer
@3.4.10
+#<init>()V
+#authenticate(Ljava/net/Socket;Ljava/io/DataInputStream;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/NullQuorumAuthServer

+###org/apache/zookeeper/server/quorum/auth/QuorumAuth$Status
@3.4.10
+#values()[Lorg/apache/zookeeper/server/quorum/auth/QuorumAuth$Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/quorum/auth/QuorumAuth$Status;
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/QuorumAuth$Status

+###org/apache/zookeeper/server/quorum/auth/QuorumAuth
@3.4.10
+#<init>()V
+#createPacket(Lorg/apache/zookeeper/server/quorum/auth/QuorumAuth$Status;[B)Lorg/apache/zookeeper/server/quorum/QuorumAuthPacket;
+#nextPacketIsAuth(Ljava/io/DataInputStream;)Z
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/QuorumAuth

+###org/apache/zookeeper/server/quorum/auth/QuorumAuthLearner
@3.4.10
+#authenticate(Ljava/net/Socket;Ljava/lang/String;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/QuorumAuthLearner

+###org/apache/zookeeper/server/quorum/auth/QuorumAuthServer
@3.4.10
+#authenticate(Ljava/net/Socket;Ljava/io/DataInputStream;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/QuorumAuthServer

+###org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner
@3.4.10
+#<init>(ZLjava/lang/String;Ljava/lang/String;)V
+#authenticate(Ljava/net/Socket;Ljava/lang/String;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner

+###org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer
@3.4.10
+#<init>(ZLjava/lang/String;Ljava/util/Set;)V
+#authenticate(Ljava/net/Socket;Ljava/io/DataInputStream;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer

+###org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler
@3.4.10
+#<init>(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/util/Set;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler

+###org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical
@3.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/Properties;)V
+#<init>(ILjava/util/HashMap;Ljava/util/HashMap;)V
+#getWeight(J)J
+#containsQuorum(Ljava/util/HashSet;)Z
@3.4.13
+#containsQuorum(Ljava/util/Set;)Z
-#containsQuorum(Ljava/util/HashSet;)Z
@3.5.0-alpha
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getAllMembers()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#getVotingMembers()Ljava/util/Map;
+#getObservingMembers()Ljava/util/Map;
+#getVersion()J
+#setVersion(J)V
-#<init>(ILjava/util/HashMap;Ljava/util/HashMap;)V

+###org/apache/zookeeper/server/quorum/flexible/QuorumMaj
@3.3.0
+#<init>(I)V
+#getWeight(J)J
+#containsQuorum(Ljava/util/HashSet;)Z
@3.4.13
+#containsQuorum(Ljava/util/Set;)Z
-#containsQuorum(Ljava/util/HashSet;)Z
@3.5.0-alpha
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Properties;)V
+#toString()Ljava/lang/String;
+#getAllMembers()Ljava/util/Map;
+#getVotingMembers()Ljava/util/Map;
+#getObservingMembers()Ljava/util/Map;
+#getVersion()J
+#setVersion(J)V
-#<init>(I)V

+###org/apache/zookeeper/server/quorum/flexible/QuorumVerifier
@3.3.0
+#getWeight(J)J
+#containsQuorum(Ljava/util/HashSet;)Z
@3.4.13
+#containsQuorum(Ljava/util/Set;)Z
-#containsQuorum(Ljava/util/HashSet;)Z
@3.5.0-alpha
+#getVersion()J
+#setVersion(J)V
+#getAllMembers()Ljava/util/Map;
+#getVotingMembers()Ljava/util/Map;
+#getObservingMembers()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.8.0
+#updateNeedOracle(Ljava/util/List;)Z
+#getNeedOracle()Z
+#askOracle()Z
+#overrideQuorumDecision(Ljava/util/List;)Z
+#revalidateOutstandingProp(Lorg/apache/zookeeper/server/quorum/Leader;Ljava/util/ArrayList;J)Z
+#revalidateVoteset(Lorg/apache/zookeeper/server/quorum/SyncedLearnerTracker;Z)Z
+#getOraclePath()Ljava/lang/String;

+###org/apache/zookeeper/server/util/AdHash
@3.6.0
+#<init>()V
+#addDigest(J)Lorg/apache/zookeeper/server/util/AdHash;
+#removeDigest(J)Lorg/apache/zookeeper/server/util/AdHash;
+#getHash()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#clear()V

+###org/apache/zookeeper/server/util/AuthUtil
@3.6.0
+#getUser(Lorg/apache/zookeeper/data/Id;)Ljava/lang/String;
@3.7.0
+#getUsers(Ljava/util/List;)Ljava/lang/String;
+#getClientInfos(Ljava/util/List;)Ljava/util/List;

+###org/apache/zookeeper/server/util/BitHashSet
@3.6.0
+#<init>()V
+#<init>(I)V
+#add(Ljava/lang/Integer;)Z
+#remove(Ljava/util/Set;Ljava/util/BitSet;)I
+#remove(Ljava/lang/Integer;)Z
+#contains(Ljava/lang/Integer;)Z
+#size()I
+#iterator()Ljava/util/Iterator;
+#cachedSize()I
+#isEmpty()Z

+###org/apache/zookeeper/server/util/BitMap
@3.6.0
+#<init>()V
+#add(Ljava/lang/Object;)Ljava/lang/Integer;
+#get(I)Ljava/lang/Object;
+#getBit(Ljava/lang/Object;)Ljava/lang/Integer;
+#remove(Ljava/lang/Object;)I
+#remove(I)Ljava/lang/Object;
+#size()I

+###org/apache/zookeeper/server/util/CircularBuffer
@3.6.0
+#<init>(Ljava/lang/Class;I)V
+#write(Ljava/lang/Object;)V
+#take()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#isFull()Z
+#reset()V

+###org/apache/zookeeper/server/util/ConfigUtils
@3.5.0-alpha
+#<init>()V
+#getClientConfigStr(Ljava/lang/String;)Ljava/lang/String;
@3.5.7
+#getHostAndPort(Ljava/lang/String;)[Ljava/lang/String;
@3.6.3
+#getPropertyBackwardCompatibleWay(Ljava/lang/String;)Ljava/lang/String;
@3.7.0
-#getPropertyBackwardCompatibleWay(Ljava/lang/String;)Ljava/lang/String;
@3.7.1
+#getPropertyBackwardCompatibleWay(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/zookeeper/server/util/JvmPauseMonitor
@3.5.10
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeerConfig;)V
+#<init>(Lorg/apache/zookeeper/server/ServerConfig;)V
+#serviceStart()V
+#serviceStop()V
+#isStarted()Z
+#getNumGcWarnThresholdExceeded()J
+#getNumGcInfoThresholdExceeded()J
+#getTotalGcExtraSleepTime()J

+###org/apache/zookeeper/server/util/KerberosUtil
@3.4.4
+#<init>()V
+#getDefaultRealm()Ljava/lang/String;

+###org/apache/zookeeper/server/util/LogChopper
@3.6.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#chop(Ljava/io/InputStream;Ljava/io/OutputStream;J)Z

+###org/apache/zookeeper/server/util/MessageTracker
@3.6.0
+#<init>(I)V
+#trackSent(J)V
+#trackSent(I)V
+#trackReceived(J)V
+#trackReceived(I)V
+#peekSent()Lorg/apache/zookeeper/server/util/MessageTracker$BufferedMessage;
+#peekReceived()Lorg/apache/zookeeper/server/util/MessageTracker$BufferedMessage;
+#peekSentTimestamp()J
+#peekReceivedTimestamp()J
+#dumpToLog(Ljava/lang/String;)V

+###org/apache/zookeeper/server/util/OSMXBean
@3.4.6
+#<init>()V
+#getUnix()Z
+#getOpenFileDescriptorCount()J
+#getMaxFileDescriptorCount()J

+###org/apache/zookeeper/server/util/RequestPathMetricsCollector
@3.6.0
+#<init>()V
+#<init>(Z)V
+#shutdown()V
+#start()V
+#registerRequest(ILjava/lang/String;)V
+#dumpTopRequestPath(Ljava/io/PrintWriter;Ljava/lang/String;I)V
+#dumpTopReadPaths(Ljava/io/PrintWriter;I)V
+#dumpTopWritePaths(Ljava/io/PrintWriter;I)V
+#dumpTopPaths(Ljava/io/PrintWriter;I)V

+###org/apache/zookeeper/server/util/SerializeUtils
@3.3.0
+#<init>()V
+#deserializeTxn(Lorg/apache/jute/InputArchive;Lorg/apache/zookeeper/txn/TxnHeader;)Lorg/apache/jute/Record;
+#deserializeSnapshot(Lorg/apache/zookeeper/server/DataTree;Lorg/apache/jute/InputArchive;Ljava/util/Map;)V
+#serializeSnapshot(Lorg/apache/zookeeper/server/DataTree;Lorg/apache/jute/OutputArchive;Ljava/util/Map;)V
@3.4.0
+#deserializeTxn([BLorg/apache/zookeeper/txn/TxnHeader;)Lorg/apache/jute/Record;
-#deserializeTxn(Lorg/apache/jute/InputArchive;Lorg/apache/zookeeper/txn/TxnHeader;)Lorg/apache/jute/Record;
@3.4.13
+#serializeRequest(Lorg/apache/zookeeper/server/Request;)[B
@3.5.0-alpha
-#serializeRequest(Lorg/apache/zookeeper/server/Request;)[B
@3.5.4-beta
+#serializeRequest(Lorg/apache/zookeeper/server/Request;)[B
@3.6.0
+#deserializeTxn([B)Lorg/apache/zookeeper/server/TxnLogEntry;
-#deserializeTxn([BLorg/apache/zookeeper/txn/TxnHeader;)Lorg/apache/jute/Record;

+###org/apache/zookeeper/server/util/VerifyingFileFactory$Builder
@3.5.0-alpha
+#<init>(Lorg/slf4j/Logger;)V
+#warnForRelativePath()Lorg/apache/zookeeper/server/util/VerifyingFileFactory$Builder;
+#failForNonExistingPath()Lorg/apache/zookeeper/server/util/VerifyingFileFactory$Builder;
+#build()Lorg/apache/zookeeper/server/util/VerifyingFileFactory;

+###org/apache/zookeeper/server/util/VerifyingFileFactory
@3.5.0-alpha
+#<init>(Lorg/apache/zookeeper/server/util/VerifyingFileFactory$Builder;)V
+#create(Ljava/lang/String;)Ljava/io/File;
@3.5.2-alpha
+#validate(Ljava/io/File;)Ljava/io/File;

+###org/apache/zookeeper/server/util/ZxidUtils
@3.4.0
+#<init>()V
+#getEpochFromZxid(J)J
+#getCounterFromZxid(J)J
+#makeZxid(JJ)J
+#zxidToString(J)Ljava/lang/String;

+###org/apache/zookeeper/server/watch/IDeadWatcherListener
@3.6.0
+#processDeadWatchers(Ljava/util/Set;)V

+###org/apache/zookeeper/server/watch/IWatchManager
@3.6.0
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/server/watch/WatcherMode;)Z
+#containsWatcher(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#removeWatcher(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#removeWatcher(Lorg/apache/zookeeper/Watcher;)V
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;)Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;)Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;
+#size()I
+#shutdown()V
+#getWatchesSummary()Lorg/apache/zookeeper/server/watch/WatchesSummary;
+#getWatches()Lorg/apache/zookeeper/server/watch/WatchesReport;
+#getWatchesByPath()Lorg/apache/zookeeper/server/watch/WatchesPathReport;
+#dumpWatches(Ljava/io/PrintWriter;Z)V
+#getRecursiveWatchQty()I

+###org/apache/zookeeper/server/watch/PathParentIterator
@3.6.0
+#forAll(Ljava/lang/String;)Lorg/apache/zookeeper/server/watch/PathParentIterator;
+#forPathOnly(Ljava/lang/String;)Lorg/apache/zookeeper/server/watch/PathParentIterator;
+#asIterable()Ljava/lang/Iterable;
+#hasNext()Z
+#atParentPath()Z
+#next()Ljava/lang/String;
+#remove()V
+#next()Ljava/lang/Object;

+###org/apache/zookeeper/server/watch/WatchManager
@3.6.0
+#<init>()V
+#size()I
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/server/watch/WatcherMode;)Z
+#removeWatcher(Lorg/apache/zookeeper/Watcher;)V
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;)Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;)Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;
+#toString()Ljava/lang/String;
+#dumpWatches(Ljava/io/PrintWriter;Z)V
+#containsWatcher(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#removeWatcher(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#getWatches()Lorg/apache/zookeeper/server/watch/WatchesReport;
+#getWatchesByPath()Lorg/apache/zookeeper/server/watch/WatchesPathReport;
+#getWatchesSummary()Lorg/apache/zookeeper/server/watch/WatchesSummary;
+#shutdown()V
+#getRecursiveWatchQty()I

+###org/apache/zookeeper/server/watch/WatchManagerFactory
@3.6.0
+#<init>()V
+#createWatchManager()Lorg/apache/zookeeper/server/watch/IWatchManager;

+###org/apache/zookeeper/server/watch/WatchManagerOptimized
@3.6.0
+#<init>()V
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#containsWatcher(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#removeWatcher(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Z
+#removeWatcher(Lorg/apache/zookeeper/Watcher;)V
+#processDeadWatchers(Ljava/util/Set;)V
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;)Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;)Lorg/apache/zookeeper/server/watch/WatcherOrBitSet;
+#size()I
+#shutdown()V
+#getWatchesSummary()Lorg/apache/zookeeper/server/watch/WatchesSummary;
+#getWatches()Lorg/apache/zookeeper/server/watch/WatchesReport;
+#getWatchesByPath()Lorg/apache/zookeeper/server/watch/WatchesPathReport;
+#getWatcher2PathesMap()Ljava/util/Map;
+#dumpWatches(Ljava/io/PrintWriter;Z)V
+#toString()Ljava/lang/String;

+###org/apache/zookeeper/server/watch/WatcherCleaner
@3.6.0
+#<init>(Lorg/apache/zookeeper/server/watch/IDeadWatcherListener;)V
+#<init>(Lorg/apache/zookeeper/server/watch/IDeadWatcherListener;IIII)V
+#addDeadWatcher(I)V
+#run()V
+#shutdown()V

+###org/apache/zookeeper/server/watch/WatcherMode
@3.6.0
+#values()[Lorg/apache/zookeeper/server/watch/WatcherMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/zookeeper/server/watch/WatcherMode;
+#fromZooDef(I)Lorg/apache/zookeeper/server/watch/WatcherMode;
+#isPersistent()Z
+#isRecursive()Z

+###org/apache/zookeeper/server/watch/WatcherOrBitSet
@3.6.0
+#<init>(Ljava/util/Set;)V
+#<init>(Lorg/apache/zookeeper/server/util/BitHashSet;)V
+#contains(Lorg/apache/zookeeper/Watcher;)Z
+#contains(I)Z
+#size()I

+###org/apache/zookeeper/server/watch/WatchesPathReport
@3.6.0
+#hasSessions(Ljava/lang/String;)Z
+#getSessions(Ljava/lang/String;)Ljava/util/Set;
+#toMap()Ljava/util/Map;

+###org/apache/zookeeper/server/watch/WatchesReport
@3.6.0
+#hasPaths(J)Z
+#getPaths(J)Ljava/util/Set;
+#toMap()Ljava/util/Map;

+###org/apache/zookeeper/server/watch/WatchesSummary
@3.6.0
+#getNumConnections()I
+#getNumPaths()I
+#getTotalWatches()I
+#toMap()Ljava/util/Map;

+###org/apache/zookeeper/util/CircularBlockingQueue
@3.6.0
+#<init>(I)V
+#offer(Ljava/lang/Object;)Z
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#take()Ljava/lang/Object;
+#isEmpty()Z
+#size()I
+#getDroppedCount()J
+#drainTo(Ljava/util/Collection;)I
+#poll()Ljava/lang/Object;
+#element()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#remove()Ljava/lang/Object;
+#addAll(Ljava/util/Collection;)Z
+#clear()V
+#containsAll(Ljava/util/Collection;)Z
+#iterator()Ljava/util/Iterator;
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#drainTo(Ljava/util/Collection;I)I
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#put(Ljava/lang/Object;)V
+#remainingCapacity()I
+#remove(Ljava/lang/Object;)Z

+###org/apache/zookeeper/util/PemReader
@3.5.5
+#loadTrustStore(Ljava/io/File;)Ljava/security/KeyStore;
+#loadKeyStore(Ljava/io/File;Ljava/io/File;Ljava/util/Optional;)Ljava/security/KeyStore;
+#readCertificateChain(Ljava/io/File;)Ljava/util/List;
+#readCertificateChain(Ljava/lang/String;)Ljava/util/List;
+#loadPrivateKey(Ljava/io/File;Ljava/util/Optional;)Ljava/security/PrivateKey;
+#loadPrivateKey(Ljava/lang/String;Ljava/util/Optional;)Ljava/security/PrivateKey;
+#loadPublicKey(Ljava/io/File;)Ljava/security/PublicKey;
+#loadPublicKey(Ljava/lang/String;)Ljava/security/PublicKey;

+###org/apache/zookeeper/util/SecurityUtils
@3.4.10
+#<init>()V
+#createSaslClient(Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/slf4j/Logger;Ljava/lang/String;)Ljavax/security/sasl/SaslClient;
+#createSaslServer(Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljavax/security/auth/callback/CallbackHandler;Lorg/slf4j/Logger;)Ljavax/security/sasl/SaslServer;
+#getServerPrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.5.0-alpha
-###org/apache/zookeeper/util/SecurityUtils

+###org/apache/zookeeper/util/ServiceUtils
@3.6.0
+#setSystemExitProcedure(Ljava/util/function/Consumer;)V
+#requestSystemExit(I)V

+###org/apache/zookeeper/version/Info
@3.3.0

+###org/apache/zookeeper/version/VersionInfoMain
@3.6.0
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/jute/BinaryInputArchive
@3.3.0
+#getArchive(Ljava/io/InputStream;)Lorg/apache/jute/BinaryInputArchive;
+#<init>(Ljava/io/DataInput;)V
+#readByte(Ljava/lang/String;)B
+#readBool(Ljava/lang/String;)Z
+#readInt(Ljava/lang/String;)I
+#readLong(Ljava/lang/String;)J
+#readFloat(Ljava/lang/String;)F
+#readDouble(Ljava/lang/String;)D
+#readString(Ljava/lang/String;)Ljava/lang/String;
+#readBuffer(Ljava/lang/String;)[B
+#readRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Ljava/lang/String;)V
+#endRecord(Ljava/lang/String;)V
+#startVector(Ljava/lang/String;)Lorg/apache/jute/Index;
+#endVector(Ljava/lang/String;)V
+#startMap(Ljava/lang/String;)Lorg/apache/jute/Index;
+#endMap(Ljava/lang/String;)V
@3.5.5
-###org/apache/jute/BinaryInputArchive

+###org/apache/jute/BinaryOutputArchive
@3.3.0
+#getArchive(Ljava/io/OutputStream;)Lorg/apache/jute/BinaryOutputArchive;
+#<init>(Ljava/io/DataOutput;)V
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer([BLjava/lang/String;)V
+#writeRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/List;Ljava/lang/String;)V
+#endVector(Ljava/util/List;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V
@3.5.5
-###org/apache/jute/BinaryOutputArchive

+###org/apache/jute/CsvOutputArchive
@3.3.0
+#<init>(Ljava/io/OutputStream;)V
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer([BLjava/lang/String;)V
+#writeRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/List;Ljava/lang/String;)V
+#endVector(Ljava/util/List;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V
@3.5.5
-###org/apache/jute/CsvOutputArchive

+###org/apache/jute/Index
@3.3.0
+#done()Z
+#incr()V
@3.5.5
-###org/apache/jute/Index

+###org/apache/jute/InputArchive
@3.3.0
+#readByte(Ljava/lang/String;)B
+#readBool(Ljava/lang/String;)Z
+#readInt(Ljava/lang/String;)I
+#readLong(Ljava/lang/String;)J
+#readFloat(Ljava/lang/String;)F
+#readDouble(Ljava/lang/String;)D
+#readString(Ljava/lang/String;)Ljava/lang/String;
+#readBuffer(Ljava/lang/String;)[B
+#readRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Ljava/lang/String;)V
+#endRecord(Ljava/lang/String;)V
+#startVector(Ljava/lang/String;)Lorg/apache/jute/Index;
+#endVector(Ljava/lang/String;)V
+#startMap(Ljava/lang/String;)Lorg/apache/jute/Index;
+#endMap(Ljava/lang/String;)V
@3.5.5
-###org/apache/jute/InputArchive

+###org/apache/jute/OutputArchive
@3.3.0
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer([BLjava/lang/String;)V
+#writeRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/jute/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/List;Ljava/lang/String;)V
+#endVector(Ljava/util/List;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V
@3.5.5
-###org/apache/jute/OutputArchive

+###org/apache/jute/Record
@3.3.0
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
@3.5.5
-###org/apache/jute/Record

+###org/apache/jute/RecordReader
@3.3.0
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#read(Lorg/apache/jute/Record;)V
@3.5.5
-###org/apache/jute/RecordReader

+###org/apache/jute/RecordWriter
@3.3.0
+#<init>(Ljava/io/OutputStream;Ljava/lang/String;)V
+#write(Lorg/apache/jute/Record;)V
@3.5.5
-###org/apache/jute/RecordWriter

+###org/apache/jute/Utils
@3.3.0
+#bufEquals([B[B)Z
+#compareBytes([BII[BII)I
@3.5.5
-###org/apache/jute/Utils

+###org/apache/jute/compiler/CSharpGenerator
@3.4.0
@3.5.5
-###org/apache/jute/compiler/CSharpGenerator

+###org/apache/jute/compiler/JBoolean
@3.3.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;)Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JBoolean

+###org/apache/jute/compiler/JBuffer
@3.3.0
+#<init>()V
+#genCppGetSet(Ljava/lang/String;I)Ljava/lang/String;
+#getSignature()Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;)Ljava/lang/String;
+#genJavaCompareToWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaEquals(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
+#genJavaSlurpBytes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaCompareBytes()Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JBuffer

+###org/apache/jute/compiler/JByte
@3.3.0
+#<init>()V
+#getSignature()Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JByte

+###org/apache/jute/compiler/JDouble
@3.3.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JDouble

+###org/apache/jute/compiler/JField
@3.3.0
+#<init>(Lorg/apache/jute/compiler/JType;Ljava/lang/String;)V
+#getSignature()Ljava/lang/String;
+#genCppDecl()Ljava/lang/String;
+#genCDecl()Ljava/lang/String;
+#genJavaDecl()Ljava/lang/String;
+#genJavaConstructorParam(Ljava/lang/String;)Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getTag()Ljava/lang/String;
+#getType()Lorg/apache/jute/compiler/JType;
+#genCppGetSet(I)Ljava/lang/String;
+#genJavaGetSet(I)Ljava/lang/String;
+#genJavaWriteMethodName()Ljava/lang/String;
+#genJavaReadMethodName()Ljava/lang/String;
+#genJavaCompareTo()Ljava/lang/String;
+#genJavaEquals()Ljava/lang/String;
+#genJavaHashCode()Ljava/lang/String;
+#genJavaConstructorSet(Ljava/lang/String;)Ljava/lang/String;
@3.4.0
+#genCsharpDecl()Ljava/lang/String;
+#genCsharpConstructorParam(Ljava/lang/String;)Ljava/lang/String;
+#getCsharpName()Ljava/lang/String;
+#genCsharpConstructorSet(Ljava/lang/String;)Ljava/lang/String;
+#genCsharpGetSet(I)Ljava/lang/String;
+#genCsharpWriteMethodName()Ljava/lang/String;
+#genCsharpReadMethodName()Ljava/lang/String;
+#genCsharpCompareTo()Ljava/lang/String;
+#genCsharpEquals()Ljava/lang/String;
+#genCsharpHashCode()Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JField

+###org/apache/jute/compiler/JFile
@3.3.0
+#<init>(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;)V
+#genCode(Ljava/lang/String;Ljava/io/File;)V
@3.5.5
-###org/apache/jute/compiler/JFile

+###org/apache/jute/compiler/JFloat
@3.3.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JFloat

+###org/apache/jute/compiler/JInt
@3.3.0
+#<init>()V
+#getSignature()Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JInt

+###org/apache/jute/compiler/JLong
@3.3.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaHashCode(Ljava/lang/String;)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JLong

+###org/apache/jute/compiler/JMap
@3.3.0
+#<init>(Lorg/apache/jute/compiler/JType;Lorg/apache/jute/compiler/JType;)V
+#getSignature()Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;)Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaReadMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaWriteMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.4.0
+#genCsharpWriteWrapper(Ljava/lang/String;I)Ljava/lang/String;
+#genCsharpReadWrapper(Ljava/lang/String;IZ)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JMap

+###org/apache/jute/compiler/JRecord
@3.3.0
+#<init>(Ljava/lang/String;Ljava/util/ArrayList;)V
+#getName()Ljava/lang/String;
+#getJavaFQName()Ljava/lang/String;
+#getCppFQName()Ljava/lang/String;
+#getJavaPackage()Ljava/lang/String;
+#getCppNameSpace()Ljava/lang/String;
+#getFields()Ljava/util/ArrayList;
+#getSignature()Ljava/lang/String;
+#genCppDecl(Ljava/lang/String;)Ljava/lang/String;
+#genJavaReadMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genCCode(Ljava/io/FileWriter;Ljava/io/FileWriter;)V
+#genCppCode(Ljava/io/FileWriter;Ljava/io/FileWriter;)V
+#genJavaCode(Ljava/io/File;)V
@3.4.0
+#getCsharpName()Ljava/lang/String;
+#getCsharpNameSpace()Ljava/lang/String;
+#genCsharpReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genCsharpWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genCsharpCode(Ljava/io/File;)V
+#getCsharpFQName(Ljava/lang/String;)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JRecord

+###org/apache/jute/compiler/JString
@3.3.0
+#<init>()V
+#getSignature()Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JString

+###org/apache/jute/compiler/JType
@3.3.0
@3.4.0
+#genCsharpDecl(Ljava/lang/String;)Ljava/lang/String;
+#genCsharpConstructorParam(Ljava/lang/String;)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JType

+###org/apache/jute/compiler/JVector
@3.3.0
+#<init>(Lorg/apache/jute/compiler/JType;)V
+#getSignature()Ljava/lang/String;
+#genJavaCompareTo(Ljava/lang/String;)Ljava/lang/String;
+#genJavaReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#genJavaReadMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genJavaWriteMethod(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getElementType()Lorg/apache/jute/compiler/JType;
+#extractVectorName(Lorg/apache/jute/compiler/JType;)Ljava/lang/String;
@3.4.0
+#genCsharpWriteWrapper(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#genCsharpReadWrapper(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/JVector

+###org/apache/jute/compiler/generated/ParseException
@3.3.0
+#<init>(Lorg/apache/jute/compiler/generated/Token;[[I[Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;
@3.5.0-alpha
-#getMessage()Ljava/lang/String;
@3.5.5
-###org/apache/jute/compiler/generated/ParseException

+###org/apache/jute/compiler/generated/Rcc
@3.3.0
+#main([Ljava/lang/String;)V
+#parseFile(Ljava/io/File;)Lorg/apache/jute/compiler/JFile;
+#Input()Lorg/apache/jute/compiler/JFile;
+#Include()Lorg/apache/jute/compiler/JFile;
+#Module()Ljava/util/ArrayList;
+#ModuleName()Ljava/lang/String;
+#RecordList()Ljava/util/ArrayList;
+#Record()Lorg/apache/jute/compiler/JRecord;
+#Field()Lorg/apache/jute/compiler/JField;
+#Type()Lorg/apache/jute/compiler/JType;
+#Map()Lorg/apache/jute/compiler/JMap;
+#Vector()Lorg/apache/jute/compiler/JVector;
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#ReInit(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/Reader;)V
+#ReInit(Ljava/io/Reader;)V
+#<init>(Lorg/apache/jute/compiler/generated/RccTokenManager;)V
+#ReInit(Lorg/apache/jute/compiler/generated/RccTokenManager;)V
+#getNextToken()Lorg/apache/jute/compiler/generated/Token;
+#getToken(I)Lorg/apache/jute/compiler/generated/Token;
+#generateParseException()Lorg/apache/jute/compiler/generated/ParseException;
+#enable_tracing()V
+#disable_tracing()V
@3.5.5
-###org/apache/jute/compiler/generated/Rcc

+###org/apache/jute/compiler/generated/RccConstants
@3.3.0
@3.5.5
-###org/apache/jute/compiler/generated/RccConstants

+###org/apache/jute/compiler/generated/RccTokenManager
@3.3.0
+#setDebugStream(Ljava/io/PrintStream;)V
+#<init>(Lorg/apache/jute/compiler/generated/SimpleCharStream;)V
+#<init>(Lorg/apache/jute/compiler/generated/SimpleCharStream;I)V
+#ReInit(Lorg/apache/jute/compiler/generated/SimpleCharStream;)V
+#ReInit(Lorg/apache/jute/compiler/generated/SimpleCharStream;I)V
+#SwitchTo(I)V
+#getNextToken()Lorg/apache/jute/compiler/generated/Token;
@3.5.5
-###org/apache/jute/compiler/generated/RccTokenManager

+###org/apache/jute/compiler/generated/SimpleCharStream
@3.3.0
+#BeginToken()C
+#readChar()C
+#getColumn()I
+#getLine()I
+#getEndColumn()I
+#getEndLine()I
+#getBeginColumn()I
+#getBeginLine()I
+#backup(I)V
+#<init>(Ljava/io/Reader;III)V
+#<init>(Ljava/io/Reader;II)V
+#<init>(Ljava/io/Reader;)V
+#ReInit(Ljava/io/Reader;III)V
+#ReInit(Ljava/io/Reader;II)V
+#ReInit(Ljava/io/Reader;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;III)V
+#<init>(Ljava/io/InputStream;III)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;II)V
+#<init>(Ljava/io/InputStream;II)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;III)V
+#ReInit(Ljava/io/InputStream;III)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;)V
+#ReInit(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;II)V
+#ReInit(Ljava/io/InputStream;II)V
+#GetImage()Ljava/lang/String;
+#GetSuffix(I)[C
+#Done()V
+#adjustBeginLineColumn(II)V
@3.5.0-alpha
*#getColumn()I[deprecated]
*#getLine()I[deprecated]
@3.5.5
-###org/apache/jute/compiler/generated/SimpleCharStream

+###org/apache/jute/compiler/generated/Token
@3.3.0
+#<init>()V
+#toString()Ljava/lang/String;
+#newToken(I)Lorg/apache/jute/compiler/generated/Token;
@3.5.0-alpha
+#getValue()Ljava/lang/Object;
+#<init>(I)V
+#<init>(ILjava/lang/String;)V
+#newToken(ILjava/lang/String;)Lorg/apache/jute/compiler/generated/Token;
@3.5.5
-###org/apache/jute/compiler/generated/Token

+###org/apache/jute/compiler/generated/TokenMgrError
@3.3.0
+#getMessage()Ljava/lang/String;
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(ZIIILjava/lang/String;CI)V
@3.5.5
-###org/apache/jute/compiler/generated/TokenMgrError

+###org/apache/zookeeper/MultiTransactionRecord
@3.4.0
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#iterator()Ljava/util/Iterator;
+#add(Lorg/apache/zookeeper/Op;)V
+#size()I
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.6.0
-###org/apache/zookeeper/MultiTransactionRecord

+###org/apache/zookeeper/client/ZooKeeperSaslClient$ClientCallbackHandler
@3.4.0
+#<init>(Ljava/lang/String;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
@3.4.10
-###org/apache/zookeeper/client/ZooKeeperSaslClient$ClientCallbackHandler

+###org/apache/zookeeper/data/ACL
@3.3.0
+#<init>()V
+#<init>(ILorg/apache/zookeeper/data/Id;)V
+#getPerms()I
+#setPerms(I)V
+#getId()Lorg/apache/zookeeper/data/Id;
+#setId(Lorg/apache/zookeeper/data/Id;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/data/ACL

+###org/apache/zookeeper/data/Id
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getScheme()Ljava/lang/String;
+#setScheme(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/data/Id

+###org/apache/zookeeper/data/Stat
@3.3.0
+#<init>()V
+#<init>(JJJJIIIJIIJ)V
+#getCzxid()J
+#setCzxid(J)V
+#getMzxid()J
+#setMzxid(J)V
+#getCtime()J
+#setCtime(J)V
+#getMtime()J
+#setMtime(J)V
+#getVersion()I
+#setVersion(I)V
+#getCversion()I
+#setCversion(I)V
+#getAversion()I
+#setAversion(I)V
+#getEphemeralOwner()J
+#setEphemeralOwner(J)V
+#getDataLength()I
+#setDataLength(I)V
+#getNumChildren()I
+#setNumChildren(I)V
+#getPzxid()J
+#setPzxid(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/data/Stat

+###org/apache/zookeeper/data/StatPersisted
@3.3.0
+#<init>()V
+#<init>(JJJJIIIJJ)V
+#getCzxid()J
+#setCzxid(J)V
+#getMzxid()J
+#setMzxid(J)V
+#getCtime()J
+#setCtime(J)V
+#getMtime()J
+#setMtime(J)V
+#getVersion()I
+#setVersion(I)V
+#getCversion()I
+#setCversion(I)V
+#getAversion()I
+#setAversion(I)V
+#getEphemeralOwner()J
+#setEphemeralOwner(J)V
+#getPzxid()J
+#setPzxid(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/data/StatPersisted

+###org/apache/zookeeper/data/StatPersistedV1
@3.3.0
+#<init>()V
+#<init>(JJJJIIIJ)V
+#getCzxid()J
+#setCzxid(J)V
+#getMzxid()J
+#setMzxid(J)V
+#getCtime()J
+#setCtime(J)V
+#getMtime()J
+#setMtime(J)V
+#getVersion()I
+#setVersion(I)V
+#getCversion()I
+#setCversion(I)V
+#getAversion()I
+#setAversion(I)V
+#getEphemeralOwner()J
+#setEphemeralOwner(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.0-alpha
-###org/apache/zookeeper/data/StatPersistedV1

+###org/apache/zookeeper/jmx/CommonNames
@3.3.0
+#<init>()V
@3.6.0
-###org/apache/zookeeper/jmx/CommonNames

+###org/apache/zookeeper/proto/AuthPacket
@3.3.0
+#<init>()V
+#<init>(ILjava/lang/String;[B)V
+#getType()I
+#setType(I)V
+#getScheme()Ljava/lang/String;
+#setScheme(Ljava/lang/String;)V
+#getAuth()[B
+#setAuth([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/AuthPacket

+###org/apache/zookeeper/proto/CheckVersionRequest
@3.4.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/CheckVersionRequest

+###org/apache/zookeeper/proto/ConnectRequest
@3.3.0
+#<init>()V
+#<init>(IJIJ[B)V
+#getProtocolVersion()I
+#setProtocolVersion(I)V
+#getLastZxidSeen()J
+#setLastZxidSeen(J)V
+#getTimeOut()I
+#setTimeOut(I)V
+#getSessionId()J
+#setSessionId(J)V
+#getPasswd()[B
+#setPasswd([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/ConnectRequest

+###org/apache/zookeeper/proto/ConnectResponse
@3.3.0
+#<init>()V
+#<init>(IIJ[B)V
+#getProtocolVersion()I
+#setProtocolVersion(I)V
+#getTimeOut()I
+#setTimeOut(I)V
+#getSessionId()J
+#setSessionId(J)V
+#getPasswd()[B
+#setPasswd([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/ConnectResponse

+###org/apache/zookeeper/proto/CreateRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getFlags()I
+#setFlags(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/CreateRequest

+###org/apache/zookeeper/proto/CreateResponse
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/CreateResponse

+###org/apache/zookeeper/proto/DeleteRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/DeleteRequest

+###org/apache/zookeeper/proto/ErrorResponse
@3.4.0
+#<init>()V
+#<init>(I)V
+#getErr()I
+#setErr(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/ErrorResponse

+###org/apache/zookeeper/proto/ExistsRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getWatch()Z
+#setWatch(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/ExistsRequest

+###org/apache/zookeeper/proto/ExistsResponse
@3.3.0
+#<init>()V
+#<init>(Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/ExistsResponse

+###org/apache/zookeeper/proto/GetACLRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetACLRequest

+###org/apache/zookeeper/proto/GetACLResponse
@3.3.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/zookeeper/data/Stat;)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetACLResponse

+###org/apache/zookeeper/proto/GetChildren2Request
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getWatch()Z
+#setWatch(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetChildren2Request

+###org/apache/zookeeper/proto/GetChildren2Response
@3.3.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/zookeeper/data/Stat;)V
+#getChildren()Ljava/util/List;
+#setChildren(Ljava/util/List;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetChildren2Response

+###org/apache/zookeeper/proto/GetChildrenRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getWatch()Z
+#setWatch(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetChildrenRequest

+###org/apache/zookeeper/proto/GetChildrenResponse
@3.3.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#getChildren()Ljava/util/List;
+#setChildren(Ljava/util/List;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetChildrenResponse

+###org/apache/zookeeper/proto/GetDataRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getWatch()Z
+#setWatch(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetDataRequest

+###org/apache/zookeeper/proto/GetDataResponse
@3.3.0
+#<init>()V
+#<init>([BLorg/apache/zookeeper/data/Stat;)V
+#getData()[B
+#setData([B)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetDataResponse

+###org/apache/zookeeper/proto/GetMaxChildrenRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetMaxChildrenRequest

+###org/apache/zookeeper/proto/GetMaxChildrenResponse
@3.3.0
+#<init>()V
+#<init>(I)V
+#getMax()I
+#setMax(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetMaxChildrenResponse

+###org/apache/zookeeper/proto/GetSASLRequest
@3.4.0
+#<init>()V
+#<init>([B)V
+#getToken()[B
+#setToken([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/GetSASLRequest

+###org/apache/zookeeper/proto/MultiHeader
@3.4.0
+#<init>()V
+#<init>(IZI)V
+#getType()I
+#setType(I)V
+#getDone()Z
+#setDone(Z)V
+#getErr()I
+#setErr(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/MultiHeader

+###org/apache/zookeeper/proto/ReplyHeader
@3.3.0
+#<init>()V
+#<init>(IJI)V
+#getXid()I
+#setXid(I)V
+#getZxid()J
+#setZxid(J)V
+#getErr()I
+#setErr(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/ReplyHeader

+###org/apache/zookeeper/proto/RequestHeader
@3.3.0
+#<init>()V
+#<init>(II)V
+#getXid()I
+#setXid(I)V
+#getType()I
+#setType(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/RequestHeader

+###org/apache/zookeeper/proto/SetACLRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/util/List;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SetACLRequest

+###org/apache/zookeeper/proto/SetACLResponse
@3.3.0
+#<init>()V
+#<init>(Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SetACLResponse

+###org/apache/zookeeper/proto/SetDataRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;[BI)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SetDataRequest

+###org/apache/zookeeper/proto/SetDataResponse
@3.3.0
+#<init>()V
+#<init>(Lorg/apache/zookeeper/data/Stat;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SetDataResponse

+###org/apache/zookeeper/proto/SetMaxChildrenRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getMax()I
+#setMax(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SetMaxChildrenRequest

+###org/apache/zookeeper/proto/SetSASLRequest
@3.4.0
+#<init>()V
+#<init>([B)V
+#getToken()[B
+#setToken([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SetSASLRequest

+###org/apache/zookeeper/proto/SetSASLResponse
@3.4.0
+#<init>()V
+#<init>([B)V
+#getToken()[B
+#setToken([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SetSASLResponse

+###org/apache/zookeeper/proto/SetWatches
@3.3.0
+#<init>()V
+#<init>(JLjava/util/List;Ljava/util/List;Ljava/util/List;)V
+#getRelativeZxid()J
+#setRelativeZxid(J)V
+#getDataWatches()Ljava/util/List;
+#setDataWatches(Ljava/util/List;)V
+#getExistWatches()Ljava/util/List;
+#setExistWatches(Ljava/util/List;)V
+#getChildWatches()Ljava/util/List;
+#setChildWatches(Ljava/util/List;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SetWatches

+###org/apache/zookeeper/proto/SyncRequest
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SyncRequest

+###org/apache/zookeeper/proto/SyncResponse
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/SyncResponse

+###org/apache/zookeeper/proto/WatcherEvent
@3.3.0
+#<init>()V
+#<init>(IILjava/lang/String;)V
+#getType()I
+#setType(I)V
+#getState()I
+#setState(I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/WatcherEvent

+###org/apache/zookeeper/server/LogFormatter
@3.3.0
+#<init>()V
+#main([Ljava/lang/String;)V
@3.7.0
-###org/apache/zookeeper/server/LogFormatter

+###org/apache/zookeeper/server/ServerCnxnFactory$PacketProcessor
@3.4.0
+#processPacket(Ljava/nio/ByteBuffer;Lorg/apache/zookeeper/server/ServerCnxn;)V
@3.5.1-alpha
-###org/apache/zookeeper/server/ServerCnxnFactory$PacketProcessor

+###org/apache/zookeeper/server/WatchManager
@3.3.0
+#<init>()V
+#size()I
+#addWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)V
+#removeWatcher(Lorg/apache/zookeeper/Watcher;)V
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;)Ljava/util/Set;
+#triggerWatch(Ljava/lang/String;Lorg/apache/zookeeper/Watcher$Event$EventType;Ljava/util/Set;)Ljava/util/Set;
+#toString()Ljava/lang/String;
+#dumpWatches(Ljava/io/PrintWriter;Z)V
@3.5.0-alpha
-###org/apache/zookeeper/server/WatchManager

+###org/apache/zookeeper/server/ZooKeeperServer$BasicDataTreeBuilder
@3.3.0
+#<init>()V
+#build()Lorg/apache/zookeeper/server/DataTree;
@3.5.0-alpha
-###org/apache/zookeeper/server/ZooKeeperServer$BasicDataTreeBuilder

+###org/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder
@3.3.0
+#build()Lorg/apache/zookeeper/server/DataTree;
@3.5.0-alpha
-###org/apache/zookeeper/server/ZooKeeperServer$DataTreeBuilder

+###org/apache/zookeeper/server/persistence/FileHeader
@3.3.0
+#<init>()V
+#<init>(IIJ)V
+#getMagic()I
+#setMagic(I)V
+#getVersion()I
+#setVersion(I)V
+#getDbid()J
+#setDbid(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/server/persistence/FileHeader

+###org/apache/zookeeper/server/quorum/AuthFastLeaderElection$Notification
@3.3.0
+#<init>()V
@3.6.0
-###org/apache/zookeeper/server/quorum/AuthFastLeaderElection$Notification

+###org/apache/zookeeper/server/quorum/AuthFastLeaderElection$ToSend
@3.3.0
@3.6.0
-###org/apache/zookeeper/server/quorum/AuthFastLeaderElection$ToSend

+###org/apache/zookeeper/server/quorum/AuthFastLeaderElection
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;Z)V
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#shutdown()V
+#lookForLeader()Lorg/apache/zookeeper/server/quorum/Vote;
@3.6.0
-###org/apache/zookeeper/server/quorum/AuthFastLeaderElection

+###org/apache/zookeeper/server/quorum/LeaderElection$ElectionResult
@3.3.0
+#<init>()V
@3.4.0
-#<init>()V
@3.6.0
-###org/apache/zookeeper/server/quorum/LeaderElection$ElectionResult

+###org/apache/zookeeper/server/quorum/LeaderElection
@3.3.0
+#<init>(Lorg/apache/zookeeper/server/quorum/QuorumPeer;)V
+#shutdown()V
+#lookForLeader()Lorg/apache/zookeeper/server/quorum/Vote;
@3.6.0
-###org/apache/zookeeper/server/quorum/LeaderElection

+###org/apache/zookeeper/server/quorum/LearnerInfo
@3.4.0
+#<init>()V
+#<init>(JI)V
+#getServerid()J
+#setServerid(J)V
+#getProtocolVersion()I
+#setProtocolVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.0-alpha
+#<init>(JIJ)V
+#getConfigVersion()J
+#setConfigVersion(J)V
-#<init>(JI)V
@3.5.5
-###org/apache/zookeeper/server/quorum/LearnerInfo

+###org/apache/zookeeper/server/quorum/QuorumPacket
@3.3.0
+#<init>()V
+#<init>(IJ[BLjava/util/List;)V
+#getType()I
+#setType(I)V
+#getZxid()J
+#setZxid(J)V
+#getData()[B
+#setData([B)V
+#getAuthinfo()Ljava/util/List;
+#setAuthinfo(Ljava/util/List;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/server/quorum/QuorumPacket

+###org/apache/zookeeper/server/upgrade/DataNodeV1
@3.3.0
+#setChildren(Ljava/util/HashSet;)V
+#getChildren()Ljava/util/HashSet;
+#copyStat(Lorg/apache/zookeeper/data/Stat;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/upgrade/DataNodeV1

+###org/apache/zookeeper/server/upgrade/DataTreeV1$ProcessTxnResult
@3.3.0
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.5.0-alpha
-###org/apache/zookeeper/server/upgrade/DataTreeV1$ProcessTxnResult

+###org/apache/zookeeper/server/upgrade/DataTreeV1
@3.3.0
+#getEphemeralsMap()Ljava/util/Map;
+#setEphemeralsMap(Ljava/util/Map;)V
+#getEphemerals(J)Ljava/util/HashSet;
+#getSessions()Ljava/util/Collection;
+#getNode(Ljava/lang/String;)Lorg/apache/zookeeper/server/upgrade/DataNodeV1;
+#<init>()V
+#copyStatPersisted(Lorg/apache/zookeeper/data/StatPersistedV1;Lorg/apache/zookeeper/data/StatPersistedV1;)V
+#copyStat(Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/data/Stat;)V
+#createNode(Ljava/lang/String;[BLjava/util/List;JJJ)Ljava/lang/String;
+#deleteNode(Ljava/lang/String;)V
+#setData(Ljava/lang/String;[BIJJ)Lorg/apache/zookeeper/data/Stat;
+#getData(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)[B
+#statNode(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Lorg/apache/zookeeper/data/Stat;
+#getChildren(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;Lorg/apache/zookeeper/Watcher;)Ljava/util/ArrayList;
+#setACL(Ljava/lang/String;Ljava/util/List;I)Lorg/apache/zookeeper/data/Stat;
+#getACL(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)Ljava/util/List;
+#processTxn(Lorg/apache/zookeeper/txn/TxnHeader;Lorg/apache/jute/Record;)Lorg/apache/zookeeper/server/upgrade/DataTreeV1$ProcessTxnResult;
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#dumpEphemerals()Ljava/lang/String;
+#removeCnxn(Lorg/apache/zookeeper/Watcher;)V
+#clear()V
@3.5.0-alpha
-###org/apache/zookeeper/server/upgrade/DataTreeV1

+###org/apache/zookeeper/server/upgrade/UpgradeMain
@3.3.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#runUpgrade()V
+#main([Ljava/lang/String;)V
@3.5.0-alpha
-###org/apache/zookeeper/server/upgrade/UpgradeMain

+###org/apache/zookeeper/server/upgrade/UpgradeSnapShot
@3.3.0
+#getNewDataTree()Lorg/apache/zookeeper/server/DataTree;
+#getSessionWithTimeOuts()Ljava/util/concurrent/ConcurrentHashMap;
@3.5.0-alpha
-###org/apache/zookeeper/server/upgrade/UpgradeSnapShot

+###org/apache/zookeeper/server/upgrade/UpgradeSnapShotV1
@3.3.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#playLog(Lorg/apache/jute/InputArchive;)J
+#getNewDataTree()Lorg/apache/zookeeper/server/DataTree;
+#getSessionWithTimeOuts()Ljava/util/concurrent/ConcurrentHashMap;
@3.5.0-alpha
-###org/apache/zookeeper/server/upgrade/UpgradeSnapShotV1

+###org/apache/zookeeper/server/util/Profiler$Operation
@3.3.0
+#execute()Ljava/lang/Object;
@3.5.0-alpha
-###org/apache/zookeeper/server/util/Profiler$Operation

+###org/apache/zookeeper/server/util/Profiler
@3.3.0
+#<init>()V
+#profile(Lorg/apache/zookeeper/server/util/Profiler$Operation;JLjava/lang/String;)Ljava/lang/Object;
@3.5.0-alpha
-###org/apache/zookeeper/server/util/Profiler

+###org/apache/zookeeper/txn/CheckVersionTxn
@3.4.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/CheckVersionTxn

+###org/apache/zookeeper/txn/CreateSessionTxn
@3.3.0
+#<init>()V
+#<init>(I)V
+#getTimeOut()I
+#setTimeOut(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/CreateSessionTxn

+###org/apache/zookeeper/txn/CreateTxn
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getEphemeral()Z
+#setEphemeral(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.4.0
+#<init>(Ljava/lang/String;[BLjava/util/List;ZI)V
+#getParentCVersion()I
+#setParentCVersion(I)V
-#<init>(Ljava/lang/String;[BLjava/util/List;Z)V
@3.5.5
-###org/apache/zookeeper/txn/CreateTxn

+###org/apache/zookeeper/txn/CreateTxnV0
@3.4.0
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;Z)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getEphemeral()Z
+#setEphemeral(Z)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/CreateTxnV0

+###org/apache/zookeeper/txn/DeleteTxn
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/DeleteTxn

+###org/apache/zookeeper/txn/ErrorTxn
@3.3.0
+#<init>()V
+#<init>(I)V
+#getErr()I
+#setErr(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/ErrorTxn

+###org/apache/zookeeper/txn/MultiTxn
@3.4.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#getTxns()Ljava/util/List;
+#setTxns(Ljava/util/List;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/MultiTxn

+###org/apache/zookeeper/txn/SetACLTxn
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/util/List;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/SetACLTxn

+###org/apache/zookeeper/txn/SetDataTxn
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;[BI)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getVersion()I
+#setVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/SetDataTxn

+###org/apache/zookeeper/txn/SetMaxChildrenTxn
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getMax()I
+#setMax(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/SetMaxChildrenTxn

+###org/apache/zookeeper/txn/Txn
@3.4.0
+#<init>()V
+#<init>(I[B)V
+#getType()I
+#setType(I)V
+#getData()[B
+#setData([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/Txn

+###org/apache/zookeeper/txn/TxnHeader
@3.3.0
+#<init>()V
+#<init>(JIJJI)V
+#getClientId()J
+#setClientId(J)V
+#getCxid()I
+#setCxid(I)V
+#getZxid()J
+#setZxid(J)V
+#getTime()J
+#setTime(J)V
+#getType()I
+#setType(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/TxnHeader

+###org/apache/zookeeper/version/util/VerGen$Version
@3.3.3
+#<init>()V
@3.7.0
-###org/apache/zookeeper/version/util/VerGen$Version

+###org/apache/zookeeper/version/util/VerGen
@3.3.0
+#<init>()V
+#main([Ljava/lang/String;)V
@3.3.3
+#generateFile(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;ILjava/lang/String;)V
+#parseVersionString(Ljava/lang/String;)Lorg/apache/zookeeper/version/util/VerGen$Version;
@3.4.10
+#generateFile(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;Ljava/lang/String;Ljava/lang/String;)V
-#generateFile(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;ILjava/lang/String;)V
@3.5.0-alpha
+#generateFile(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;ILjava/lang/String;)V
-#generateFile(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;Ljava/lang/String;Ljava/lang/String;)V
@3.5.3-beta
+#generateFile(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;Ljava/lang/String;Ljava/lang/String;)V
-#generateFile(Ljava/io/File;Lorg/apache/zookeeper/version/util/VerGen$Version;ILjava/lang/String;)V
@3.7.0
-###org/apache/zookeeper/version/util/VerGen

+###org/apache/zookeeper/server/quorum/LearnerSnapshotThrottler
@3.5.0-alpha
+#<init>(IJ)V
+#<init>(I)V
+#beginSnapshot(Z)Lorg/apache/zookeeper/server/quorum/LearnerSnapshot;
+#endSnapshot()V
@3.6.0
-###org/apache/zookeeper/server/quorum/LearnerSnapshotThrottler

+###org/apache/zookeeper/server/quorum/SnapshotThrottleException
@3.5.0-alpha
+#<init>(II)V
@3.6.0
-###org/apache/zookeeper/server/quorum/SnapshotThrottleException

+###org/apache/zookeeper/server/WatchesPathReport
@3.5.0-alpha
+#hasSessions(Ljava/lang/String;)Z
+#getSessions(Ljava/lang/String;)Ljava/util/Set;
+#toMap()Ljava/util/Map;
@3.6.0
-###org/apache/zookeeper/server/WatchesPathReport

+###org/apache/zookeeper/server/WatchesReport
@3.5.0-alpha
+#hasPaths(J)Z
+#getPaths(J)Ljava/util/Set;
+#toMap()Ljava/util/Map;
@3.6.0
-###org/apache/zookeeper/server/WatchesReport

+###org/apache/zookeeper/server/WatchesSummary
@3.5.0-alpha
+#getNumConnections()I
+#getNumPaths()I
+#getTotalWatches()I
+#toMap()Ljava/util/Map;
@3.6.0
-###org/apache/zookeeper/server/WatchesSummary

+###org/apache/zookeeper/cli/Ls2Command
@3.5.0-alpha
+#<init>()V
+#parse([Ljava/lang/String;)Lorg/apache/zookeeper/cli/CliCommand;
+#exec()Z
@3.6.0
-###org/apache/zookeeper/cli/Ls2Command

+###org/apache/zookeeper/server/quorum/LearnerSnapshot
@3.5.0-alpha
+#close()V
+#getConcurrentSnapshotNumber()I
+#isEssential()Z
@3.6.0
-###org/apache/zookeeper/server/quorum/LearnerSnapshot

+###org/apache/zookeeper/server/quorum/QuorumAuthPacket
@3.4.10
+#<init>()V
+#<init>(JI[B)V
+#getMagic()J
+#setMagic(J)V
+#getStatus()I
+#setStatus(I)V
+#getToken()[B
+#setToken([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/QuorumAuthPacket

+###org/apache/zookeeper/common/HostNameUtils
@3.5.0-alpha
+#getHostString(Ljava/net/InetSocketAddress;)Ljava/lang/String;
@3.5.1-alpha
-###org/apache/zookeeper/common/HostNameUtils

+###org/apache/zookeeper/proto/CheckWatchesRequest
@3.5.0-alpha
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getType()I
+#setType(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/CheckWatchesRequest

+###org/apache/zookeeper/proto/Create2Request
@3.5.0-alpha
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getFlags()I
+#setFlags(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.1-alpha
-###org/apache/zookeeper/proto/Create2Request

+###org/apache/zookeeper/proto/Create2Response
@3.5.0-alpha
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#setStat(Lorg/apache/zookeeper/data/Stat;)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/Create2Response

+###org/apache/zookeeper/proto/ReconfigRequest
@3.5.0-alpha
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
+#getJoiningServers()Ljava/lang/String;
+#setJoiningServers(Ljava/lang/String;)V
+#getLeavingServers()Ljava/lang/String;
+#setLeavingServers(Ljava/lang/String;)V
+#getNewMembers()Ljava/lang/String;
+#setNewMembers(Ljava/lang/String;)V
+#getCurConfigId()J
+#setCurConfigId(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/ReconfigRequest

+###org/apache/zookeeper/proto/RemoveWatchesRequest
@3.5.0-alpha
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getType()I
+#setType(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/RemoveWatchesRequest

+###org/apache/zookeeper/proto/op_result_t
@3.3.0
+#<init>()V
+#<init>(II[B)V
+#getRc()I
+#setRc(I)V
+#getOp()I
+#setOp(I)V
+#getResponse()[B
+#setResponse([B)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.4.0
-###org/apache/zookeeper/proto/op_result_t

+###org/apache/zookeeper/server/NIOServerCnxn$Factory
@3.3.0
+#<init>(Ljava/net/InetSocketAddress;)V
+#<init>(Ljava/net/InetSocketAddress;I)V
+#start()V
+#startup(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#setZooKeeperServer(Lorg/apache/zookeeper/server/ZooKeeperServer;)V
+#getZooKeeperServer()Lorg/apache/zookeeper/server/ZooKeeperServer;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getLocalPort()I
+#getMaxClientCnxns()I
+#run()V
+#clear()V
+#shutdown()V
@3.4.0
-###org/apache/zookeeper/server/NIOServerCnxn$Factory

+###org/apache/zookeeper/server/ServerCnxn$Stats
@3.3.0
+#getEstablished()Ljava/util/Date;
+#getOutstandingRequests()J
+#getPacketsReceived()J
+#getPacketsSent()J
+#getMinLatency()J
+#getAvgLatency()J
+#getMaxLatency()J
+#getLastOperation()Ljava/lang/String;
+#getLastCxid()J
+#getLastZxid()J
+#getLastResponseTime()J
+#getLastLatency()J
+#reset()V
@3.4.0
-###org/apache/zookeeper/server/ServerCnxn$Stats

+###org/apache/zookeeper/server/ZooKeeperServer$Factory
@3.3.0
+#createServer()Lorg/apache/zookeeper/server/ZooKeeperServer;
+#createConnectionFactory()Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;
@3.4.0
-###org/apache/zookeeper/server/ZooKeeperServer$Factory

+###org/apache/zookeeper/server/quorum/QuorumPeer$Factory
@3.3.0
+#create(Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;)Lorg/apache/zookeeper/server/quorum/QuorumPeer;
+#createConnectionFactory()Lorg/apache/zookeeper/server/NIOServerCnxn$Factory;
@3.4.0
-###org/apache/zookeeper/server/quorum/QuorumPeer$Factory

+###org/apache/zookeeper/txn/CreateContainerTxn
@3.5.1-alpha
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;I)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getParentCVersion()I
+#setParentCVersion(I)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/CreateContainerTxn

+###org/apache/zookeeper/proto/CreateTTLRequest
@3.5.3-beta
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;IJ)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getFlags()I
+#setFlags(I)V
+#getTtl()J
+#setTtl(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/proto/CreateTTLRequest

+###org/apache/zookeeper/txn/CreateTTLTxn
@3.5.3-beta
+#<init>()V
+#<init>(Ljava/lang/String;[BLjava/util/List;IJ)V
+#getPath()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getData()[B
+#setData([B)V
+#getAcl()Ljava/util/List;
+#setAcl(Ljava/util/List;)V
+#getParentCVersion()I
+#setParentCVersion(I)V
+#getTtl()J
+#setTtl(J)V
+#serialize(Lorg/apache/jute/OutputArchive;Ljava/lang/String;)V
+#deserialize(Lorg/apache/jute/InputArchive;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#signature()Ljava/lang/String;
@3.5.5
-###org/apache/zookeeper/txn/CreateTTLTxn

+###org/apache/zookeeper/server/quorum/ProposalStats
@3.4.13
+#<init>()V
+#getLastProposalSize()I
+#getMinProposalSize()I
+#getMaxProposalSize()I
+#reset()V
+#toString()Ljava/lang/String;
@3.5.0-alpha
-###org/apache/zookeeper/server/quorum/ProposalStats

+###org/apache/zookeeper/audit/Slf4jAuditLogger
@3.8.0
+#<init>()V
+#logAuditEvent(Lorg/apache/zookeeper/audit/AuditEvent;)V

+###org/apache/zookeeper/common/SecretUtils
@3.8.0
+#readSecret(Ljava/lang/String;)[C

+###org/apache/zookeeper/metrics/CounterSet
@3.8.0
+#inc(Ljava/lang/String;)V
+#add(Ljava/lang/String;J)V

+###org/apache/zookeeper/metrics/GaugeSet
@3.8.0
+#values()Ljava/util/Map;

+###org/apache/zookeeper/server/metric/SimpleCounterSet
@3.8.0
+#<init>(Ljava/lang/String;)V
+#add(Ljava/lang/String;J)V
+#reset()V
+#values()Ljava/util/Map;

+###org/apache/zookeeper/server/quorum/flexible/QuorumOracleMaj
@3.8.0
+#<init>(Ljava/util/Map;Ljava/lang/String;)V
+#<init>(Ljava/util/Properties;Ljava/lang/String;)V
+#updateNeedOracle(Ljava/util/List;)Z
+#askOracle()Z
+#getNeedOracle()Z
+#getOraclePath()Ljava/lang/String;
+#overrideQuorumDecision(Ljava/util/List;)Z
+#revalidateOutstandingProp(Lorg/apache/zookeeper/server/quorum/Leader;Ljava/util/ArrayList;J)Z
+#revalidateVoteset(Lorg/apache/zookeeper/server/quorum/SyncedLearnerTracker;Z)Z
+#containsQuorum(Ljava/util/Set;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/zookeeper/server/util/QuotaMetricsUtils
@3.8.0
+#getQuotaCountLimit(Lorg/apache/zookeeper/server/DataTree;)Ljava/util/Map;
+#getQuotaBytesLimit(Lorg/apache/zookeeper/server/DataTree;)Ljava/util/Map;
+#getQuotaCountUsage(Lorg/apache/zookeeper/server/DataTree;)Ljava/util/Map;
+#getQuotaBytesUsage(Lorg/apache/zookeeper/server/DataTree;)Ljava/util/Map;
