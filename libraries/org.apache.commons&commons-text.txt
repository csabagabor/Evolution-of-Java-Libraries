
+###org/apache/commons/text/beta/CompositeFormat
@1.0-beta-1
+#<init>(Ljava/text/Format;Ljava/text/Format;)V
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
+#getParser()Ljava/text/Format;
+#getFormatter()Ljava/text/Format;
+#reformat(Ljava/lang/String;)Ljava/lang/String;
@1.0
-###org/apache/commons/text/beta/CompositeFormat

+###org/apache/commons/text/beta/diff/DeleteCommand
@1.0-beta-1
+#<init>(Ljava/lang/Object;)V
+#accept(Lorg/apache/commons/text/beta/diff/CommandVisitor;)V
@1.0
-###org/apache/commons/text/beta/diff/DeleteCommand

+###org/apache/commons/text/beta/diff/EditCommand
@1.0-beta-1
+#accept(Lorg/apache/commons/text/beta/diff/CommandVisitor;)V
@1.0
-###org/apache/commons/text/beta/diff/EditCommand

+###org/apache/commons/text/beta/ExtendedMessageFormat
@1.0-beta-1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Locale;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V
+#toPattern()Ljava/lang/String;
+#applyPattern(Ljava/lang/String;)V
+#setFormat(ILjava/text/Format;)V
+#setFormatByArgumentIndex(ILjava/text/Format;)V
+#setFormats([Ljava/text/Format;)V
+#setFormatsByArgumentIndex([Ljava/text/Format;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0
-###org/apache/commons/text/beta/ExtendedMessageFormat

+###org/apache/commons/text/beta/similarity/CosineSimilarity
@1.0-beta-1
+#<init>()V
+#cosineSimilarity(Ljava/util/Map;Ljava/util/Map;)Ljava/lang/Double;
@1.0
-###org/apache/commons/text/beta/similarity/CosineSimilarity

+###org/apache/commons/text/beta/similarity/FuzzyScore
@1.0-beta-1
+#<init>(Ljava/util/Locale;)V
+#fuzzyScore(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#getLocale()Ljava/util/Locale;
@1.0
-###org/apache/commons/text/beta/similarity/FuzzyScore

+###org/apache/commons/text/beta/similarity/LongestCommonSubsequence
@1.0-beta-1
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#logestCommonSubsequence(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
+#longestCommonSubstringLengthArray(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)[[I
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/LongestCommonSubsequence

+###org/apache/commons/text/beta/StrBuilder
@1.0-beta-1
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;)V
+#getNewLineText()Ljava/lang/String;
+#setNewLineText(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#getNullText()Ljava/lang/String;
+#setNullText(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#length()I
+#setLength(I)Lorg/apache/commons/text/beta/StrBuilder;
+#capacity()I
+#ensureCapacity(I)Lorg/apache/commons/text/beta/StrBuilder;
+#minimizeCapacity()Lorg/apache/commons/text/beta/StrBuilder;
+#size()I
+#isEmpty()Z
+#clear()Lorg/apache/commons/text/beta/StrBuilder;
+#charAt(I)C
+#setCharAt(IC)Lorg/apache/commons/text/beta/StrBuilder;
+#deleteCharAt(I)Lorg/apache/commons/text/beta/StrBuilder;
+#toCharArray()[C
+#toCharArray(II)[C
+#getChars([C)[C
+#getChars(II[CI)V
+#readFrom(Ljava/lang/Readable;)I
+#appendNewLine()Lorg/apache/commons/text/beta/StrBuilder;
+#appendNull()Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/Object;)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/CharSequence;)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/CharSequence;II)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/String;II)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/nio/CharBuffer;)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/nio/CharBuffer;II)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Lorg/apache/commons/text/beta/StrBuilder;)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Lorg/apache/commons/text/beta/StrBuilder;II)Lorg/apache/commons/text/beta/StrBuilder;
+#append([C)Lorg/apache/commons/text/beta/StrBuilder;
+#append([CII)Lorg/apache/commons/text/beta/StrBuilder;
+#append(Z)Lorg/apache/commons/text/beta/StrBuilder;
+#append(C)Lorg/apache/commons/text/beta/StrBuilder;
+#append(I)Lorg/apache/commons/text/beta/StrBuilder;
+#append(J)Lorg/apache/commons/text/beta/StrBuilder;
+#append(F)Lorg/apache/commons/text/beta/StrBuilder;
+#append(D)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Ljava/lang/Object;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Ljava/lang/String;II)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Lorg/apache/commons/text/beta/StrBuilder;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Lorg/apache/commons/text/beta/StrBuilder;II)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln([C)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln([CII)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(Z)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(C)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(I)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(J)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(F)Lorg/apache/commons/text/beta/StrBuilder;
+#appendln(D)Lorg/apache/commons/text/beta/StrBuilder;
+#appendAll([Ljava/lang/Object;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendAll(Ljava/lang/Iterable;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendAll(Ljava/util/Iterator;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendWithSeparators([Ljava/lang/Object;Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendWithSeparators(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendWithSeparators(Ljava/util/Iterator;Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendSeparator(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendSeparator(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#appendSeparator(C)Lorg/apache/commons/text/beta/StrBuilder;
+#appendSeparator(CC)Lorg/apache/commons/text/beta/StrBuilder;
+#appendSeparator(Ljava/lang/String;I)Lorg/apache/commons/text/beta/StrBuilder;
+#appendSeparator(CI)Lorg/apache/commons/text/beta/StrBuilder;
+#appendPadding(IC)Lorg/apache/commons/text/beta/StrBuilder;
+#appendFixedWidthPadLeft(Ljava/lang/Object;IC)Lorg/apache/commons/text/beta/StrBuilder;
+#appendFixedWidthPadLeft(IIC)Lorg/apache/commons/text/beta/StrBuilder;
+#appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/text/beta/StrBuilder;
+#appendFixedWidthPadRight(IIC)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(ILjava/lang/Object;)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(ILjava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(I[C)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(I[CII)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(IZ)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(IC)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(II)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(IJ)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(IF)Lorg/apache/commons/text/beta/StrBuilder;
+#insert(ID)Lorg/apache/commons/text/beta/StrBuilder;
+#delete(II)Lorg/apache/commons/text/beta/StrBuilder;
+#deleteAll(C)Lorg/apache/commons/text/beta/StrBuilder;
+#deleteFirst(C)Lorg/apache/commons/text/beta/StrBuilder;
+#deleteAll(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#deleteFirst(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#deleteAll(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrBuilder;
+#deleteFirst(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrBuilder;
+#replace(IILjava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#replaceAll(CC)Lorg/apache/commons/text/beta/StrBuilder;
+#replaceFirst(CC)Lorg/apache/commons/text/beta/StrBuilder;
+#replaceAll(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#replaceFirst(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#replaceAll(Lorg/apache/commons/text/beta/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#replaceFirst(Lorg/apache/commons/text/beta/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/text/beta/StrBuilder;
+#replace(Lorg/apache/commons/text/beta/StrMatcher;Ljava/lang/String;III)Lorg/apache/commons/text/beta/StrBuilder;
+#reverse()Lorg/apache/commons/text/beta/StrBuilder;
+#trim()Lorg/apache/commons/text/beta/StrBuilder;
+#startsWith(Ljava/lang/String;)Z
+#endsWith(Ljava/lang/String;)Z
+#subSequence(II)Ljava/lang/CharSequence;
+#substring(I)Ljava/lang/String;
+#substring(II)Ljava/lang/String;
+#leftString(I)Ljava/lang/String;
+#rightString(I)Ljava/lang/String;
+#midString(II)Ljava/lang/String;
+#contains(C)Z
+#contains(Ljava/lang/String;)Z
+#contains(Lorg/apache/commons/text/beta/StrMatcher;)Z
+#indexOf(C)I
+#indexOf(CI)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Ljava/lang/String;I)I
+#indexOf(Lorg/apache/commons/text/beta/StrMatcher;)I
+#indexOf(Lorg/apache/commons/text/beta/StrMatcher;I)I
+#lastIndexOf(C)I
+#lastIndexOf(CI)I
+#lastIndexOf(Ljava/lang/String;)I
+#lastIndexOf(Ljava/lang/String;I)I
+#lastIndexOf(Lorg/apache/commons/text/beta/StrMatcher;)I
+#lastIndexOf(Lorg/apache/commons/text/beta/StrMatcher;I)I
+#asTokenizer()Lorg/apache/commons/text/beta/StrTokenizer;
+#asReader()Ljava/io/Reader;
+#asWriter()Ljava/io/Writer;
+#appendTo(Ljava/lang/Appendable;)V
+#equalsIgnoreCase(Lorg/apache/commons/text/beta/StrBuilder;)Z
+#equals(Lorg/apache/commons/text/beta/StrBuilder;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toStringBuffer()Ljava/lang/StringBuffer;
+#toStringBuilder()Ljava/lang/StringBuilder;
+#build()Ljava/lang/String;
+#append(C)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
+#build()Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/StrBuilder

+###org/apache/commons/text/beta/StrSubstitutor
@1.0-beta-1
+#replace(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/String;
+#replace(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/String;
+#replaceSystemProperties(Ljava/lang/Object;)Ljava/lang/String;
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;C)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V
+#<init>(Lorg/apache/commons/text/beta/StrLookup;)V
+#<init>(Lorg/apache/commons/text/beta/StrLookup;Ljava/lang/String;Ljava/lang/String;C)V
+#<init>(Lorg/apache/commons/text/beta/StrLookup;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V
+#<init>(Lorg/apache/commons/text/beta/StrLookup;Lorg/apache/commons/text/beta/StrMatcher;Lorg/apache/commons/text/beta/StrMatcher;C)V
+#<init>(Lorg/apache/commons/text/beta/StrLookup;Lorg/apache/commons/text/beta/StrMatcher;Lorg/apache/commons/text/beta/StrMatcher;CLorg/apache/commons/text/beta/StrMatcher;)V
+#replace(Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;II)Ljava/lang/String;
+#replace([C)Ljava/lang/String;
+#replace([CII)Ljava/lang/String;
+#replace(Ljava/lang/StringBuffer;)Ljava/lang/String;
+#replace(Ljava/lang/StringBuffer;II)Ljava/lang/String;
+#replace(Ljava/lang/CharSequence;)Ljava/lang/String;
+#replace(Ljava/lang/CharSequence;II)Ljava/lang/String;
+#replace(Lorg/apache/commons/text/beta/StrBuilder;)Ljava/lang/String;
+#replace(Lorg/apache/commons/text/beta/StrBuilder;II)Ljava/lang/String;
+#replace(Ljava/lang/Object;)Ljava/lang/String;
+#replaceIn(Ljava/lang/StringBuffer;)Z
+#replaceIn(Ljava/lang/StringBuffer;II)Z
+#replaceIn(Ljava/lang/StringBuilder;)Z
+#replaceIn(Ljava/lang/StringBuilder;II)Z
+#replaceIn(Lorg/apache/commons/text/beta/StrBuilder;)Z
+#replaceIn(Lorg/apache/commons/text/beta/StrBuilder;II)Z
+#getEscapeChar()C
+#setEscapeChar(C)V
+#getVariablePrefixMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#setVariablePrefixMatcher(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrSubstitutor;
+#setVariablePrefix(C)Lorg/apache/commons/text/beta/StrSubstitutor;
+#setVariablePrefix(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrSubstitutor;
+#getVariableSuffixMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#setVariableSuffixMatcher(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrSubstitutor;
+#setVariableSuffix(C)Lorg/apache/commons/text/beta/StrSubstitutor;
+#setVariableSuffix(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrSubstitutor;
+#getValueDelimiterMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#setValueDelimiterMatcher(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrSubstitutor;
+#setValueDelimiter(C)Lorg/apache/commons/text/beta/StrSubstitutor;
+#setValueDelimiter(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrSubstitutor;
+#getVariableResolver()Lorg/apache/commons/text/beta/StrLookup;
+#setVariableResolver(Lorg/apache/commons/text/beta/StrLookup;)V
+#isEnableSubstitutionInVariables()Z
+#setEnableSubstitutionInVariables(Z)V
+#isPreserveEscapes()Z
+#setPreserveEscapes(Z)V
@1.0
-###org/apache/commons/text/beta/StrSubstitutor

+###org/apache/commons/text/beta/translate/CsvTranslators$CsvUnescaper
@1.0-beta-1
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.0
-###org/apache/commons/text/beta/translate/CsvTranslators$CsvUnescaper

+###org/apache/commons/text/beta/translate/JavaUnicodeEscaper
@1.0-beta-1
+#above(I)Lorg/apache/commons/text/beta/translate/JavaUnicodeEscaper;
+#below(I)Lorg/apache/commons/text/beta/translate/JavaUnicodeEscaper;
+#between(II)Lorg/apache/commons/text/beta/translate/JavaUnicodeEscaper;
+#outsideOf(II)Lorg/apache/commons/text/beta/translate/JavaUnicodeEscaper;
+#<init>(IIZ)V
@1.0
-###org/apache/commons/text/beta/translate/JavaUnicodeEscaper

+###org/apache/commons/text/beta/translate/NumericEntityEscaper
@1.0-beta-1
+#<init>()V
+#below(I)Lorg/apache/commons/text/beta/translate/NumericEntityEscaper;
+#above(I)Lorg/apache/commons/text/beta/translate/NumericEntityEscaper;
+#between(II)Lorg/apache/commons/text/beta/translate/NumericEntityEscaper;
+#outsideOf(II)Lorg/apache/commons/text/beta/translate/NumericEntityEscaper;
+#translate(ILjava/io/Writer;)Z
@1.0
-###org/apache/commons/text/beta/translate/NumericEntityEscaper

+###org/apache/commons/text/beta/translate/NumericEntityUnescaper
@1.0-beta-1
+#<init>([Lorg/apache/commons/text/beta/translate/NumericEntityUnescaper$OPTION;)V
+#isSet(Lorg/apache/commons/text/beta/translate/NumericEntityUnescaper$OPTION;)Z
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.0
-###org/apache/commons/text/beta/translate/NumericEntityUnescaper

+###org/apache/commons/text/beta/translate/SingleLookupTranslator
@1.0-beta-1
+#<init>([Ljava/util/Map;)V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.0
-###org/apache/commons/text/beta/translate/SingleLookupTranslator

+###org/apache/commons/text/beta/translate/UnicodeUnpairedSurrogateRemover
@1.0-beta-1
+#<init>()V
+#translate(ILjava/io/Writer;)Z
@1.0
-###org/apache/commons/text/beta/translate/UnicodeUnpairedSurrogateRemover

+###org/apache/commons/text/beta/diff/CommandVisitor
@1.0-beta-1
+#visitInsertCommand(Ljava/lang/Object;)V
+#visitKeepCommand(Ljava/lang/Object;)V
+#visitDeleteCommand(Ljava/lang/Object;)V
@1.0
-###org/apache/commons/text/beta/diff/CommandVisitor

+###org/apache/commons/text/beta/diff/ReplacementsFinder
@1.0-beta-1
+#<init>(Lorg/apache/commons/text/beta/diff/ReplacementsHandler;)V
+#visitInsertCommand(Ljava/lang/Object;)V
+#visitKeepCommand(Ljava/lang/Object;)V
+#visitDeleteCommand(Ljava/lang/Object;)V
@1.0
-###org/apache/commons/text/beta/diff/ReplacementsFinder

+###org/apache/commons/text/beta/similarity/JaroWinklerDistance
@1.0-beta-1
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/JaroWinklerDistance

+###org/apache/commons/text/beta/similarity/SimilarityScoreFrom
@1.0-beta-1
+#<init>(Lorg/apache/commons/text/beta/similarity/SimilarityScore;Ljava/lang/CharSequence;)V
+#apply(Ljava/lang/CharSequence;)Ljava/lang/Object;
+#getLeft()Ljava/lang/CharSequence;
+#getSimilarityScore()Lorg/apache/commons/text/beta/similarity/SimilarityScore;
@1.0
-###org/apache/commons/text/beta/similarity/SimilarityScoreFrom

+###org/apache/commons/text/beta/Builder
@1.0-beta-1
+#build()Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/Builder

+###org/apache/commons/text/beta/diff/ReplacementsHandler
@1.0-beta-1
+#handleReplacement(ILjava/util/List;Ljava/util/List;)V
@1.0
-###org/apache/commons/text/beta/diff/ReplacementsHandler

+###org/apache/commons/text/beta/similarity/LevenshteinDetailedDistance
@1.0-beta-1
+#<init>()V
+#<init>(Ljava/lang/Integer;)V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/apache/commons/text/beta/similarity/LevenshteinResults;
+#getDefaultInstance()Lorg/apache/commons/text/beta/similarity/LevenshteinDetailedDistance;
+#getThreshold()Ljava/lang/Integer;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/LevenshteinDetailedDistance

+###org/apache/commons/text/beta/AlphabetConverter
@1.0-beta-1
+#encode(Ljava/lang/String;)Ljava/lang/String;
+#decode(Ljava/lang/String;)Ljava/lang/String;
+#getEncodedCharLength()I
+#getOriginalToEncoded()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#createConverterFromMap(Ljava/util/Map;)Lorg/apache/commons/text/beta/AlphabetConverter;
+#createConverterFromChars([Ljava/lang/Character;[Ljava/lang/Character;[Ljava/lang/Character;)Lorg/apache/commons/text/beta/AlphabetConverter;
+#createConverter([Ljava/lang/Integer;[Ljava/lang/Integer;[Ljava/lang/Integer;)Lorg/apache/commons/text/beta/AlphabetConverter;
@1.0
-###org/apache/commons/text/beta/AlphabetConverter

+###org/apache/commons/text/beta/diff/EditScript
@1.0-beta-1
+#<init>()V
+#append(Lorg/apache/commons/text/beta/diff/KeepCommand;)V
+#append(Lorg/apache/commons/text/beta/diff/InsertCommand;)V
+#append(Lorg/apache/commons/text/beta/diff/DeleteCommand;)V
+#visit(Lorg/apache/commons/text/beta/diff/CommandVisitor;)V
+#getLCSLength()I
+#getModifications()I
@1.0
-###org/apache/commons/text/beta/diff/EditScript

+###org/apache/commons/text/beta/similarity/EditDistance
@1.0-beta-1
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/EditDistance

+###org/apache/commons/text/beta/similarity/JaccardDistance
@1.0-beta-1
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/JaccardDistance

+###org/apache/commons/text/beta/StrTokenizer
@1.0-beta-1
+#getCSVInstance()Lorg/apache/commons/text/beta/StrTokenizer;
+#getCSVInstance(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrTokenizer;
+#getCSVInstance([C)Lorg/apache/commons/text/beta/StrTokenizer;
+#getTSVInstance()Lorg/apache/commons/text/beta/StrTokenizer;
+#getTSVInstance(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrTokenizer;
+#getTSVInstance([C)Lorg/apache/commons/text/beta/StrTokenizer;
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;C)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/text/beta/StrMatcher;)V
+#<init>(Ljava/lang/String;CC)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/text/beta/StrMatcher;Lorg/apache/commons/text/beta/StrMatcher;)V
+#<init>([C)V
+#<init>([CC)V
+#<init>([CLjava/lang/String;)V
+#<init>([CLorg/apache/commons/text/beta/StrMatcher;)V
+#<init>([CCC)V
+#<init>([CLorg/apache/commons/text/beta/StrMatcher;Lorg/apache/commons/text/beta/StrMatcher;)V
+#size()I
+#nextToken()Ljava/lang/String;
+#previousToken()Ljava/lang/String;
+#getTokenArray()[Ljava/lang/String;
+#getTokenList()Ljava/util/List;
+#reset()Lorg/apache/commons/text/beta/StrTokenizer;
+#reset(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrTokenizer;
+#reset([C)Lorg/apache/commons/text/beta/StrTokenizer;
+#hasNext()Z
+#next()Ljava/lang/String;
+#nextIndex()I
+#hasPrevious()Z
+#previous()Ljava/lang/String;
+#previousIndex()I
+#remove()V
+#set(Ljava/lang/String;)V
+#add(Ljava/lang/String;)V
+#getDelimiterMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#setDelimiterMatcher(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrTokenizer;
+#setDelimiterChar(C)Lorg/apache/commons/text/beta/StrTokenizer;
+#setDelimiterString(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrTokenizer;
+#getQuoteMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#setQuoteMatcher(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrTokenizer;
+#setQuoteChar(C)Lorg/apache/commons/text/beta/StrTokenizer;
+#getIgnoredMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#setIgnoredMatcher(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrTokenizer;
+#setIgnoredChar(C)Lorg/apache/commons/text/beta/StrTokenizer;
+#getTrimmerMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#setTrimmerMatcher(Lorg/apache/commons/text/beta/StrMatcher;)Lorg/apache/commons/text/beta/StrTokenizer;
+#isEmptyTokenAsNull()Z
+#setEmptyTokenAsNull(Z)Lorg/apache/commons/text/beta/StrTokenizer;
+#isIgnoreEmptyTokens()Z
+#setIgnoreEmptyTokens(Z)Lorg/apache/commons/text/beta/StrTokenizer;
+#getContent()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#add(Ljava/lang/Object;)V
+#set(Ljava/lang/Object;)V
+#previous()Ljava/lang/Object;
+#next()Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/StrTokenizer

+###org/apache/commons/text/beta/translate/EntityArrays
@1.0-beta-1
+#<init>()V
+#invert(Ljava/util/Map;)Ljava/util/Map;
@1.0
-###org/apache/commons/text/beta/translate/EntityArrays

+###org/apache/commons/text/beta/translate/UnicodeEscaper
@1.0-beta-1
+#<init>()V
+#below(I)Lorg/apache/commons/text/beta/translate/UnicodeEscaper;
+#above(I)Lorg/apache/commons/text/beta/translate/UnicodeEscaper;
+#outsideOf(II)Lorg/apache/commons/text/beta/translate/UnicodeEscaper;
+#between(II)Lorg/apache/commons/text/beta/translate/UnicodeEscaper;
+#translate(ILjava/io/Writer;)Z
@1.0
-###org/apache/commons/text/beta/translate/UnicodeEscaper

+###org/apache/commons/text/beta/CharacterPredicate
@1.0-beta-1
+#test(I)Z
@1.0
-###org/apache/commons/text/beta/CharacterPredicate

+###org/apache/commons/text/beta/diff/StringsComparator
@1.0-beta-1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getScript()Lorg/apache/commons/text/beta/diff/EditScript;
@1.0
-###org/apache/commons/text/beta/diff/StringsComparator

+###org/apache/commons/text/beta/FormatFactory
@1.0-beta-1
+#getFormat(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;
@1.0
-###org/apache/commons/text/beta/FormatFactory

+###org/apache/commons/text/beta/FormattableUtils
@1.0-beta-1
+#<init>()V
+#toString(Ljava/util/Formattable;)Ljava/lang/String;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;III)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIIC)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIILjava/lang/CharSequence;)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;
@1.0
-###org/apache/commons/text/beta/FormattableUtils

+###org/apache/commons/text/beta/similarity/CosineDistance
@1.0-beta-1
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/CosineDistance

+###org/apache/commons/text/beta/similarity/HammingDistance
@1.0-beta-1
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/HammingDistance

+###org/apache/commons/text/beta/similarity/LevenshteinResults
@1.0-beta-1
+#<init>(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V
+#getDistance()Ljava/lang/Integer;
+#getInsertCount()Ljava/lang/Integer;
+#getDeleteCount()Ljava/lang/Integer;
+#getSubstituteCount()Ljava/lang/Integer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.0
-###org/apache/commons/text/beta/similarity/LevenshteinResults

+###org/apache/commons/text/beta/diff/InsertCommand
@1.0-beta-1
+#<init>(Ljava/lang/Object;)V
+#accept(Lorg/apache/commons/text/beta/diff/CommandVisitor;)V
@1.0
-###org/apache/commons/text/beta/diff/InsertCommand

+###org/apache/commons/text/beta/similarity/EditDistanceFrom
@1.0-beta-1
+#<init>(Lorg/apache/commons/text/beta/similarity/EditDistance;Ljava/lang/CharSequence;)V
+#apply(Ljava/lang/CharSequence;)Ljava/lang/Object;
+#getLeft()Ljava/lang/CharSequence;
+#getEditDistance()Lorg/apache/commons/text/beta/similarity/EditDistance;
@1.0
-###org/apache/commons/text/beta/similarity/EditDistanceFrom

+###org/apache/commons/text/beta/similarity/JaccardSimilarity
@1.0-beta-1
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/JaccardSimilarity

+###org/apache/commons/text/beta/similarity/SimilarityScore
@1.0-beta-1
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/SimilarityScore

+###org/apache/commons/text/beta/diff/KeepCommand
@1.0-beta-1
+#<init>(Ljava/lang/Object;)V
+#accept(Lorg/apache/commons/text/beta/diff/CommandVisitor;)V
@1.0
-###org/apache/commons/text/beta/diff/KeepCommand

+###org/apache/commons/text/beta/similarity/LongestCommonSubsequenceDistance
@1.0-beta-1
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/LongestCommonSubsequenceDistance

+###org/apache/commons/text/beta/StringEscapeUtils$Builder
@1.0-beta-1
+#escape(Ljava/lang/String;)Lorg/apache/commons/text/beta/StringEscapeUtils$Builder;
+#append(Ljava/lang/String;)Lorg/apache/commons/text/beta/StringEscapeUtils$Builder;
+#toString()Ljava/lang/String;
@1.0
-###org/apache/commons/text/beta/StringEscapeUtils$Builder

+###org/apache/commons/text/beta/StringEscapeUtils
@1.0-beta-1
+#<init>()V
+#builder(Lorg/apache/commons/text/beta/translate/CharSequenceTranslator;)Lorg/apache/commons/text/beta/StringEscapeUtils$Builder;
+#escapeJava(Ljava/lang/String;)Ljava/lang/String;
+#escapeEcmaScript(Ljava/lang/String;)Ljava/lang/String;
+#escapeJson(Ljava/lang/String;)Ljava/lang/String;
+#unescapeJava(Ljava/lang/String;)Ljava/lang/String;
+#unescapeEcmaScript(Ljava/lang/String;)Ljava/lang/String;
+#unescapeJson(Ljava/lang/String;)Ljava/lang/String;
+#escapeHtml4(Ljava/lang/String;)Ljava/lang/String;
+#escapeHtml4Once(Ljava/lang/String;)Ljava/lang/String;
+#escapeHtml3(Ljava/lang/String;)Ljava/lang/String;
+#escapeHtml3Once(Ljava/lang/String;)Ljava/lang/String;
+#unescapeHtml4(Ljava/lang/String;)Ljava/lang/String;
+#unescapeHtml3(Ljava/lang/String;)Ljava/lang/String;
+#escapeXml10(Ljava/lang/String;)Ljava/lang/String;
+#escapeXml11(Ljava/lang/String;)Ljava/lang/String;
+#unescapeXml(Ljava/lang/String;)Ljava/lang/String;
+#escapeCsv(Ljava/lang/String;)Ljava/lang/String;
+#unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
+#escapeXSI(Ljava/lang/String;)Ljava/lang/String;
+#unescapeXSI(Ljava/lang/String;)Ljava/lang/String;
@1.0
-###org/apache/commons/text/beta/StringEscapeUtils

+###org/apache/commons/text/beta/StrLookup
@1.0-beta-1
+#noneLookup()Lorg/apache/commons/text/beta/StrLookup;
+#systemPropertiesLookup()Lorg/apache/commons/text/beta/StrLookup;
+#mapLookup(Ljava/util/Map;)Lorg/apache/commons/text/beta/StrLookup;
+#lookup(Ljava/lang/String;)Ljava/lang/String;
@1.0
-###org/apache/commons/text/beta/StrLookup

+###org/apache/commons/text/beta/StrMatcher
@1.0-beta-1
+#commaMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#tabMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#spaceMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#splitMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#trimMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#singleQuoteMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#doubleQuoteMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#quoteMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#noneMatcher()Lorg/apache/commons/text/beta/StrMatcher;
+#charMatcher(C)Lorg/apache/commons/text/beta/StrMatcher;
+#charSetMatcher([C)Lorg/apache/commons/text/beta/StrMatcher;
+#charSetMatcher(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrMatcher;
+#stringMatcher(Ljava/lang/String;)Lorg/apache/commons/text/beta/StrMatcher;
+#isMatch([CIII)I
+#isMatch([CI)I
@1.0
-###org/apache/commons/text/beta/StrMatcher

+###org/apache/commons/text/beta/translate/AggregateTranslator
@1.0-beta-1
+#<init>([Lorg/apache/commons/text/beta/translate/CharSequenceTranslator;)V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.0
-###org/apache/commons/text/beta/translate/AggregateTranslator

+###org/apache/commons/text/beta/translate/CharSequenceTranslator
@1.0-beta-1
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
+#translate(Ljava/lang/CharSequence;)Ljava/lang/String;
+#translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V
+#with([Lorg/apache/commons/text/beta/translate/CharSequenceTranslator;)Lorg/apache/commons/text/beta/translate/CharSequenceTranslator;
+#hex(I)Ljava/lang/String;
@1.0
-###org/apache/commons/text/beta/translate/CharSequenceTranslator

+###org/apache/commons/text/beta/translate/CodePointTranslator
@1.0-beta-1
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
+#translate(ILjava/io/Writer;)Z
@1.0
-###org/apache/commons/text/beta/translate/CodePointTranslator

+###org/apache/commons/text/beta/translate/CsvTranslators$CsvEscaper
@1.0-beta-1
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.0
-###org/apache/commons/text/beta/translate/CsvTranslators$CsvEscaper

+###org/apache/commons/text/beta/translate/CsvTranslators
@1.0-beta-1
@1.0
-###org/apache/commons/text/beta/translate/CsvTranslators

+###org/apache/commons/text/beta/translate/LookupTranslator
@1.0-beta-1
+#<init>(Ljava/util/Map;)V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.0
-###org/apache/commons/text/beta/translate/LookupTranslator

+###org/apache/commons/text/beta/translate/NumericEntityUnescaper$OPTION
@1.0-beta-1
+#values()[Lorg/apache/commons/text/beta/translate/NumericEntityUnescaper$OPTION;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/text/beta/translate/NumericEntityUnescaper$OPTION;
@1.0
-###org/apache/commons/text/beta/translate/NumericEntityUnescaper$OPTION

+###org/apache/commons/text/beta/translate/OctalUnescaper
@1.0-beta-1
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.0
-###org/apache/commons/text/beta/translate/OctalUnescaper

+###org/apache/commons/text/beta/translate/UnicodeUnescaper
@1.0-beta-1
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
@1.0
-###org/apache/commons/text/beta/translate/UnicodeUnescaper

+###org/apache/commons/text/beta/CharacterPredicates
@1.0-beta-1
+#values()[Lorg/apache/commons/text/beta/CharacterPredicates;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/text/beta/CharacterPredicates;
@1.0
-###org/apache/commons/text/beta/CharacterPredicates

+###org/apache/commons/text/beta/similarity/LevenshteinDistance
@1.0-beta-1
+#<init>()V
+#<init>(Ljava/lang/Integer;)V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#getDefaultInstance()Lorg/apache/commons/text/beta/similarity/LevenshteinDistance;
+#getThreshold()Ljava/lang/Integer;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.0
-###org/apache/commons/text/beta/similarity/LevenshteinDistance

+###org/apache/commons/text/FormatFactory
@1.0
+#getFormat(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/Format;

+###org/apache/commons/text/translate/CodePointTranslator
@1.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
+#translate(ILjava/io/Writer;)Z

+###org/apache/commons/text/translate/CharSequenceTranslator
@1.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I
+#translate(Ljava/lang/CharSequence;)Ljava/lang/String;
+#translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V
+#with([Lorg/apache/commons/text/translate/CharSequenceTranslator;)Lorg/apache/commons/text/translate/CharSequenceTranslator;
+#hex(I)Ljava/lang/String;

+###org/apache/commons/text/similarity/JaccardSimilarity
@1.0
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/similarity/JaccardDistance
@1.0
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/similarity/FuzzyScore
@1.0
+#<init>(Ljava/util/Locale;)V
+#fuzzyScore(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#getLocale()Ljava/util/Locale;

+###org/apache/commons/text/ExtendedMessageFormat
@1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Locale;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V
+#toPattern()Ljava/lang/String;
+#applyPattern(Ljava/lang/String;)V
+#setFormat(ILjava/text/Format;)V
+#setFormatByArgumentIndex(ILjava/text/Format;)V
+#setFormats([Ljava/text/Format;)V
+#setFormatsByArgumentIndex([Ljava/text/Format;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/text/diff/CommandVisitor
@1.0
+#visitInsertCommand(Ljava/lang/Object;)V
+#visitKeepCommand(Ljava/lang/Object;)V
+#visitDeleteCommand(Ljava/lang/Object;)V

+###org/apache/commons/text/RandomStringGenerator
@1.1
+#generate(I)Ljava/lang/String;
@1.2
+#generate(II)Ljava/lang/String;

+###org/apache/commons/text/StrTokenizer
@1.0
+#getCSVInstance()Lorg/apache/commons/text/StrTokenizer;
+#getCSVInstance(Ljava/lang/String;)Lorg/apache/commons/text/StrTokenizer;
+#getCSVInstance([C)Lorg/apache/commons/text/StrTokenizer;
+#getTSVInstance()Lorg/apache/commons/text/StrTokenizer;
+#getTSVInstance(Ljava/lang/String;)Lorg/apache/commons/text/StrTokenizer;
+#getTSVInstance([C)Lorg/apache/commons/text/StrTokenizer;
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;C)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/text/StrMatcher;)V
+#<init>(Ljava/lang/String;CC)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/text/StrMatcher;Lorg/apache/commons/text/StrMatcher;)V
+#<init>([C)V
+#<init>([CC)V
+#<init>([CLjava/lang/String;)V
+#<init>([CLorg/apache/commons/text/StrMatcher;)V
+#<init>([CCC)V
+#<init>([CLorg/apache/commons/text/StrMatcher;Lorg/apache/commons/text/StrMatcher;)V
+#size()I
+#nextToken()Ljava/lang/String;
+#previousToken()Ljava/lang/String;
+#getTokenArray()[Ljava/lang/String;
+#getTokenList()Ljava/util/List;
+#reset()Lorg/apache/commons/text/StrTokenizer;
+#reset(Ljava/lang/String;)Lorg/apache/commons/text/StrTokenizer;
+#reset([C)Lorg/apache/commons/text/StrTokenizer;
+#hasNext()Z
+#next()Ljava/lang/String;
+#nextIndex()I
+#hasPrevious()Z
+#previous()Ljava/lang/String;
+#previousIndex()I
+#remove()V
+#set(Ljava/lang/String;)V
+#add(Ljava/lang/String;)V
+#getDelimiterMatcher()Lorg/apache/commons/text/StrMatcher;
+#setDelimiterMatcher(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrTokenizer;
+#setDelimiterChar(C)Lorg/apache/commons/text/StrTokenizer;
+#setDelimiterString(Ljava/lang/String;)Lorg/apache/commons/text/StrTokenizer;
+#getQuoteMatcher()Lorg/apache/commons/text/StrMatcher;
+#setQuoteMatcher(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrTokenizer;
+#setQuoteChar(C)Lorg/apache/commons/text/StrTokenizer;
+#getIgnoredMatcher()Lorg/apache/commons/text/StrMatcher;
+#setIgnoredMatcher(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrTokenizer;
+#setIgnoredChar(C)Lorg/apache/commons/text/StrTokenizer;
+#getTrimmerMatcher()Lorg/apache/commons/text/StrMatcher;
+#setTrimmerMatcher(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrTokenizer;
+#isEmptyTokenAsNull()Z
+#setEmptyTokenAsNull(Z)Lorg/apache/commons/text/StrTokenizer;
+#isIgnoreEmptyTokens()Z
+#setIgnoreEmptyTokens(Z)Lorg/apache/commons/text/StrTokenizer;
+#getContent()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#add(Ljava/lang/Object;)V
+#set(Ljava/lang/Object;)V
+#previous()Ljava/lang/Object;
+#next()Ljava/lang/Object;

+###org/apache/commons/text/StrBuilder
@1.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;)V
+#getNewLineText()Ljava/lang/String;
+#setNewLineText(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#getNullText()Ljava/lang/String;
+#setNullText(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#length()I
+#setLength(I)Lorg/apache/commons/text/StrBuilder;
+#capacity()I
+#ensureCapacity(I)Lorg/apache/commons/text/StrBuilder;
+#minimizeCapacity()Lorg/apache/commons/text/StrBuilder;
+#size()I
+#isEmpty()Z
+#clear()Lorg/apache/commons/text/StrBuilder;
+#charAt(I)C
+#setCharAt(IC)Lorg/apache/commons/text/StrBuilder;
+#deleteCharAt(I)Lorg/apache/commons/text/StrBuilder;
+#toCharArray()[C
+#toCharArray(II)[C
+#getChars([C)[C
+#getChars(II[CI)V
+#readFrom(Ljava/lang/Readable;)I
+#appendNewLine()Lorg/apache/commons/text/StrBuilder;
+#appendNull()Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/CharSequence;)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/CharSequence;II)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/String;II)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/nio/CharBuffer;)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/nio/CharBuffer;II)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/StrBuilder;
+#append(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/StrBuilder;
+#append(Lorg/apache/commons/text/StrBuilder;)Lorg/apache/commons/text/StrBuilder;
+#append(Lorg/apache/commons/text/StrBuilder;II)Lorg/apache/commons/text/StrBuilder;
+#append([C)Lorg/apache/commons/text/StrBuilder;
+#append([CII)Lorg/apache/commons/text/StrBuilder;
+#append(Z)Lorg/apache/commons/text/StrBuilder;
+#append(C)Lorg/apache/commons/text/StrBuilder;
+#append(I)Lorg/apache/commons/text/StrBuilder;
+#append(J)Lorg/apache/commons/text/StrBuilder;
+#append(F)Lorg/apache/commons/text/StrBuilder;
+#append(D)Lorg/apache/commons/text/StrBuilder;
+#appendln(Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;
+#appendln(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#appendln(Ljava/lang/String;II)Lorg/apache/commons/text/StrBuilder;
+#appendln(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;
+#appendln(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/StrBuilder;
+#appendln(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/StrBuilder;
+#appendln(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/StrBuilder;
+#appendln(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/StrBuilder;
+#appendln(Lorg/apache/commons/text/StrBuilder;)Lorg/apache/commons/text/StrBuilder;
+#appendln(Lorg/apache/commons/text/StrBuilder;II)Lorg/apache/commons/text/StrBuilder;
+#appendln([C)Lorg/apache/commons/text/StrBuilder;
+#appendln([CII)Lorg/apache/commons/text/StrBuilder;
+#appendln(Z)Lorg/apache/commons/text/StrBuilder;
+#appendln(C)Lorg/apache/commons/text/StrBuilder;
+#appendln(I)Lorg/apache/commons/text/StrBuilder;
+#appendln(J)Lorg/apache/commons/text/StrBuilder;
+#appendln(F)Lorg/apache/commons/text/StrBuilder;
+#appendln(D)Lorg/apache/commons/text/StrBuilder;
+#appendAll([Ljava/lang/Object;)Lorg/apache/commons/text/StrBuilder;
+#appendAll(Ljava/lang/Iterable;)Lorg/apache/commons/text/StrBuilder;
+#appendAll(Ljava/util/Iterator;)Lorg/apache/commons/text/StrBuilder;
+#appendWithSeparators([Ljava/lang/Object;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#appendWithSeparators(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#appendWithSeparators(Ljava/util/Iterator;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#appendSeparator(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#appendSeparator(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#appendSeparator(C)Lorg/apache/commons/text/StrBuilder;
+#appendSeparator(CC)Lorg/apache/commons/text/StrBuilder;
+#appendSeparator(Ljava/lang/String;I)Lorg/apache/commons/text/StrBuilder;
+#appendSeparator(CI)Lorg/apache/commons/text/StrBuilder;
+#appendPadding(IC)Lorg/apache/commons/text/StrBuilder;
+#appendFixedWidthPadLeft(Ljava/lang/Object;IC)Lorg/apache/commons/text/StrBuilder;
+#appendFixedWidthPadLeft(IIC)Lorg/apache/commons/text/StrBuilder;
+#appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/text/StrBuilder;
+#appendFixedWidthPadRight(IIC)Lorg/apache/commons/text/StrBuilder;
+#insert(ILjava/lang/Object;)Lorg/apache/commons/text/StrBuilder;
+#insert(ILjava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#insert(I[C)Lorg/apache/commons/text/StrBuilder;
+#insert(I[CII)Lorg/apache/commons/text/StrBuilder;
+#insert(IZ)Lorg/apache/commons/text/StrBuilder;
+#insert(IC)Lorg/apache/commons/text/StrBuilder;
+#insert(II)Lorg/apache/commons/text/StrBuilder;
+#insert(IJ)Lorg/apache/commons/text/StrBuilder;
+#insert(IF)Lorg/apache/commons/text/StrBuilder;
+#insert(ID)Lorg/apache/commons/text/StrBuilder;
+#delete(II)Lorg/apache/commons/text/StrBuilder;
+#deleteAll(C)Lorg/apache/commons/text/StrBuilder;
+#deleteFirst(C)Lorg/apache/commons/text/StrBuilder;
+#deleteAll(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#deleteFirst(Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#deleteAll(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrBuilder;
+#deleteFirst(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrBuilder;
+#replace(IILjava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#replaceAll(CC)Lorg/apache/commons/text/StrBuilder;
+#replaceFirst(CC)Lorg/apache/commons/text/StrBuilder;
+#replaceAll(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#replaceFirst(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#replaceAll(Lorg/apache/commons/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#replaceFirst(Lorg/apache/commons/text/StrMatcher;Ljava/lang/String;)Lorg/apache/commons/text/StrBuilder;
+#replace(Lorg/apache/commons/text/StrMatcher;Ljava/lang/String;III)Lorg/apache/commons/text/StrBuilder;
+#reverse()Lorg/apache/commons/text/StrBuilder;
+#trim()Lorg/apache/commons/text/StrBuilder;
+#startsWith(Ljava/lang/String;)Z
+#endsWith(Ljava/lang/String;)Z
+#subSequence(II)Ljava/lang/CharSequence;
+#substring(I)Ljava/lang/String;
+#substring(II)Ljava/lang/String;
+#leftString(I)Ljava/lang/String;
+#rightString(I)Ljava/lang/String;
+#midString(II)Ljava/lang/String;
+#contains(C)Z
+#contains(Ljava/lang/String;)Z
+#contains(Lorg/apache/commons/text/StrMatcher;)Z
+#indexOf(C)I
+#indexOf(CI)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Ljava/lang/String;I)I
+#indexOf(Lorg/apache/commons/text/StrMatcher;)I
+#indexOf(Lorg/apache/commons/text/StrMatcher;I)I
+#lastIndexOf(C)I
+#lastIndexOf(CI)I
+#lastIndexOf(Ljava/lang/String;)I
+#lastIndexOf(Ljava/lang/String;I)I
+#lastIndexOf(Lorg/apache/commons/text/StrMatcher;)I
+#lastIndexOf(Lorg/apache/commons/text/StrMatcher;I)I
+#asTokenizer()Lorg/apache/commons/text/StrTokenizer;
+#asReader()Ljava/io/Reader;
+#asWriter()Ljava/io/Writer;
+#appendTo(Ljava/lang/Appendable;)V
+#equalsIgnoreCase(Lorg/apache/commons/text/StrBuilder;)Z
+#equals(Lorg/apache/commons/text/StrBuilder;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toStringBuffer()Ljava/lang/StringBuffer;
+#toStringBuilder()Ljava/lang/StringBuilder;
+#build()Ljava/lang/String;
+#append(C)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
+#build()Ljava/lang/Object;
@1.10.0
+#isNotEmpty()Z

+###org/apache/commons/text/translate/UnicodeEscaper
@1.0
+#<init>()V
+#below(I)Lorg/apache/commons/text/translate/UnicodeEscaper;
+#above(I)Lorg/apache/commons/text/translate/UnicodeEscaper;
+#outsideOf(II)Lorg/apache/commons/text/translate/UnicodeEscaper;
+#between(II)Lorg/apache/commons/text/translate/UnicodeEscaper;
+#translate(ILjava/io/Writer;)Z

+###org/apache/commons/text/translate/CsvTranslators
@1.0

+###org/apache/commons/text/translate/AggregateTranslator
@1.0
+#<init>([Lorg/apache/commons/text/translate/CharSequenceTranslator;)V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I

+###org/apache/commons/text/similarity/JaroWinklerDistance
@1.0
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/similarity/CosineDistance
@1.0
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/diff/KeepCommand
@1.0
+#<init>(Ljava/lang/Object;)V
+#accept(Lorg/apache/commons/text/diff/CommandVisitor;)V

+###org/apache/commons/text/CharacterPredicates
@1.0
+#values()[Lorg/apache/commons/text/CharacterPredicates;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/text/CharacterPredicates;

+###org/apache/commons/text/matcher/StringMatcher
@1.3
+#isMatch([CIII)I
@1.9
+#andThen(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/matcher/StringMatcher;
+#isMatch([CI)I
+#isMatch(Ljava/lang/CharSequence;I)I
+#isMatch(Ljava/lang/CharSequence;III)I
+#size()I

+###org/apache/commons/text/AlphabetConverter
@1.0
+#encode(Ljava/lang/String;)Ljava/lang/String;
+#decode(Ljava/lang/String;)Ljava/lang/String;
+#getEncodedCharLength()I
+#getOriginalToEncoded()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#createConverterFromMap(Ljava/util/Map;)Lorg/apache/commons/text/AlphabetConverter;
+#createConverterFromChars([Ljava/lang/Character;[Ljava/lang/Character;[Ljava/lang/Character;)Lorg/apache/commons/text/AlphabetConverter;
+#createConverter([Ljava/lang/Integer;[Ljava/lang/Integer;[Ljava/lang/Integer;)Lorg/apache/commons/text/AlphabetConverter;

+###org/apache/commons/text/StringTokenizer
@1.3
+#getCSVInstance()Lorg/apache/commons/text/StringTokenizer;
+#getCSVInstance(Ljava/lang/String;)Lorg/apache/commons/text/StringTokenizer;
+#getCSVInstance([C)Lorg/apache/commons/text/StringTokenizer;
+#getTSVInstance()Lorg/apache/commons/text/StringTokenizer;
+#getTSVInstance(Ljava/lang/String;)Lorg/apache/commons/text/StringTokenizer;
+#getTSVInstance([C)Lorg/apache/commons/text/StringTokenizer;
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;C)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/text/matcher/StringMatcher;)V
+#<init>(Ljava/lang/String;CC)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/text/matcher/StringMatcher;Lorg/apache/commons/text/matcher/StringMatcher;)V
+#<init>([C)V
+#<init>([CC)V
+#<init>([CLjava/lang/String;)V
+#<init>([CLorg/apache/commons/text/matcher/StringMatcher;)V
+#<init>([CCC)V
+#<init>([CLorg/apache/commons/text/matcher/StringMatcher;Lorg/apache/commons/text/matcher/StringMatcher;)V
+#size()I
+#nextToken()Ljava/lang/String;
+#previousToken()Ljava/lang/String;
+#getTokenArray()[Ljava/lang/String;
+#getTokenList()Ljava/util/List;
+#reset()Lorg/apache/commons/text/StringTokenizer;
+#reset(Ljava/lang/String;)Lorg/apache/commons/text/StringTokenizer;
+#reset([C)Lorg/apache/commons/text/StringTokenizer;
+#hasNext()Z
+#next()Ljava/lang/String;
+#nextIndex()I
+#hasPrevious()Z
+#previous()Ljava/lang/String;
+#previousIndex()I
+#remove()V
+#set(Ljava/lang/String;)V
+#add(Ljava/lang/String;)V
+#getDelimiterMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#setDelimiterMatcher(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringTokenizer;
+#setDelimiterChar(C)Lorg/apache/commons/text/StringTokenizer;
+#setDelimiterString(Ljava/lang/String;)Lorg/apache/commons/text/StringTokenizer;
+#getQuoteMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#setQuoteMatcher(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringTokenizer;
+#setQuoteChar(C)Lorg/apache/commons/text/StringTokenizer;
+#getIgnoredMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#setIgnoredMatcher(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringTokenizer;
+#setIgnoredChar(C)Lorg/apache/commons/text/StringTokenizer;
+#getTrimmerMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#setTrimmerMatcher(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringTokenizer;
+#isEmptyTokenAsNull()Z
+#setEmptyTokenAsNull(Z)Lorg/apache/commons/text/StringTokenizer;
+#isIgnoreEmptyTokens()Z
+#setIgnoreEmptyTokens(Z)Lorg/apache/commons/text/StringTokenizer;
+#getContent()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#add(Ljava/lang/Object;)V
+#set(Ljava/lang/Object;)V
+#previous()Ljava/lang/Object;
+#next()Ljava/lang/Object;

+###org/apache/commons/text/translate/LookupTranslator
@1.0
+#<init>(Ljava/util/Map;)V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I

+###org/apache/commons/text/translate/NumericEntityUnescaper$OPTION
@1.0
+#values()[Lorg/apache/commons/text/translate/NumericEntityUnescaper$OPTION;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/text/translate/NumericEntityUnescaper$OPTION;

+###org/apache/commons/text/translate/NumericEntityEscaper
@1.0
+#<init>()V
+#below(I)Lorg/apache/commons/text/translate/NumericEntityEscaper;
+#above(I)Lorg/apache/commons/text/translate/NumericEntityEscaper;
+#between(II)Lorg/apache/commons/text/translate/NumericEntityEscaper;
+#outsideOf(II)Lorg/apache/commons/text/translate/NumericEntityEscaper;
+#translate(ILjava/io/Writer;)Z

+###org/apache/commons/text/similarity/LongestCommonSubsequence
@1.0
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#logestCommonSubsequence(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
+#longestCommonSubstringLengthArray(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)[[I
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;
@1.2
*#logestCommonSubsequence(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;[deprecated]
+#longestCommonSubsequence(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
@1.10.0
*#longestCommonSubstringLengthArray(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)[[I[deprecated]

+###org/apache/commons/text/similarity/LongestCommonSubsequenceDistance
@1.0
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/lookup/StringLookup
@1.3
+#lookup(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/text/lookup/StringLookupFactory
@1.3
+#dateStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#environmentVariableStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#interpolatorStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#interpolatorStringLookup(Ljava/util/Map;)Lorg/apache/commons/text/lookup/StringLookup;
+#interpolatorStringLookup(Lorg/apache/commons/text/lookup/StringLookup;)Lorg/apache/commons/text/lookup/StringLookup;
+#javaPlatformStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#localHostStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#mapStringLookup(Ljava/util/Map;)Lorg/apache/commons/text/lookup/StringLookup;
+#nullStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#resourceBundleStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#systemPropertyStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
@1.4
+#interpolatorStringLookup(Ljava/util/Map;Lorg/apache/commons/text/lookup/StringLookup;Z)Lorg/apache/commons/text/lookup/StringLookup;
@1.5
+#clear()V
+#addDefaultStringLookups(Ljava/util/Map;)V
+#base64StringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#constantStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#fileStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#propertiesStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#resourceBundleStringLookup(Ljava/lang/String;)Lorg/apache/commons/text/lookup/StringLookup;
+#scriptStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#urlStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#xmlStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
@1.6
+#base64DecoderStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#base64EncoderStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
*#base64StringLookup()Lorg/apache/commons/text/lookup/StringLookup;[deprecated]
+#urlDecoderStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#urlEncoderStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
@1.8
+#dnsStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
@1.9
+#biFunctionStringLookup(Ljava/util/function/BiFunction;)Lorg/apache/commons/text/lookup/BiStringLookup;
+#functionStringLookup(Ljava/util/function/Function;)Lorg/apache/commons/text/lookup/StringLookup;

+###org/apache/commons/text/diff/DeleteCommand
@1.0
+#<init>(Ljava/lang/Object;)V
+#accept(Lorg/apache/commons/text/diff/CommandVisitor;)V

+###org/apache/commons/text/StrLookup
@1.0
+#noneLookup()Lorg/apache/commons/text/StrLookup;
+#systemPropertiesLookup()Lorg/apache/commons/text/StrLookup;
+#mapLookup(Ljava/util/Map;)Lorg/apache/commons/text/StrLookup;
+#lookup(Ljava/lang/String;)Ljava/lang/String;
@1.2
+#resourceBundleLookup(Ljava/util/ResourceBundle;)Lorg/apache/commons/text/StrLookup;
@1.3
-#lookup(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/text/StringEscapeUtils$Builder
@1.0
+#escape(Ljava/lang/String;)Lorg/apache/commons/text/StringEscapeUtils$Builder;
+#append(Ljava/lang/String;)Lorg/apache/commons/text/StringEscapeUtils$Builder;
+#toString()Ljava/lang/String;

+###org/apache/commons/text/StringSubstitutor
@1.3
+#replace(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/String;
+#replace(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/String;
+#replaceSystemProperties(Ljava/lang/Object;)Ljava/lang/String;
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;C)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V
+#<init>(Lorg/apache/commons/text/lookup/StringLookup;)V
+#<init>(Lorg/apache/commons/text/lookup/StringLookup;Ljava/lang/String;Ljava/lang/String;C)V
+#<init>(Lorg/apache/commons/text/lookup/StringLookup;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V
+#<init>(Lorg/apache/commons/text/lookup/StringLookup;Lorg/apache/commons/text/matcher/StringMatcher;Lorg/apache/commons/text/matcher/StringMatcher;C)V
+#<init>(Lorg/apache/commons/text/lookup/StringLookup;Lorg/apache/commons/text/matcher/StringMatcher;Lorg/apache/commons/text/matcher/StringMatcher;CLorg/apache/commons/text/matcher/StringMatcher;)V
+#getEscapeChar()C
+#getStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#getValueDelimiterMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#getVariablePrefixMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#getVariableSuffixMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#isDisableSubstitutionInValues()Z
+#isEnableSubstitutionInVariables()Z
+#isPreserveEscapes()Z
+#replace([C)Ljava/lang/String;
+#replace([CII)Ljava/lang/String;
+#replace(Ljava/lang/CharSequence;)Ljava/lang/String;
+#replace(Ljava/lang/CharSequence;II)Ljava/lang/String;
+#replace(Ljava/lang/Object;)Ljava/lang/String;
+#replace(Lorg/apache/commons/text/TextStringBuilder;)Ljava/lang/String;
+#replace(Lorg/apache/commons/text/TextStringBuilder;II)Ljava/lang/String;
+#replace(Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;II)Ljava/lang/String;
+#replace(Ljava/lang/StringBuffer;)Ljava/lang/String;
+#replace(Ljava/lang/StringBuffer;II)Ljava/lang/String;
+#replaceIn(Lorg/apache/commons/text/TextStringBuilder;)Z
+#replaceIn(Lorg/apache/commons/text/TextStringBuilder;II)Z
+#replaceIn(Ljava/lang/StringBuffer;)Z
+#replaceIn(Ljava/lang/StringBuffer;II)Z
+#replaceIn(Ljava/lang/StringBuilder;)Z
+#replaceIn(Ljava/lang/StringBuilder;II)Z
+#setDisableSubstitutionInValues(Z)Lorg/apache/commons/text/StringSubstitutor;
+#setEnableSubstitutionInVariables(Z)Lorg/apache/commons/text/StringSubstitutor;
+#setEscapeChar(C)Lorg/apache/commons/text/StringSubstitutor;
+#setPreserveEscapes(Z)Lorg/apache/commons/text/StringSubstitutor;
+#setValueDelimiter(C)Lorg/apache/commons/text/StringSubstitutor;
+#setValueDelimiter(Ljava/lang/String;)Lorg/apache/commons/text/StringSubstitutor;
+#setValueDelimiterMatcher(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringSubstitutor;
+#setVariablePrefix(C)Lorg/apache/commons/text/StringSubstitutor;
+#setVariablePrefix(Ljava/lang/String;)Lorg/apache/commons/text/StringSubstitutor;
+#setVariablePrefixMatcher(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringSubstitutor;
+#setVariableResolver(Lorg/apache/commons/text/lookup/StringLookup;)Lorg/apache/commons/text/StringSubstitutor;
+#setVariableSuffix(C)Lorg/apache/commons/text/StringSubstitutor;
+#setVariableSuffix(Ljava/lang/String;)Lorg/apache/commons/text/StringSubstitutor;
+#setVariableSuffixMatcher(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/StringSubstitutor;
@1.7
+#isEnableUndefinedVariableException()Z
+#setEnableUndefinedVariableException(Z)Lorg/apache/commons/text/StringSubstitutor;
@1.8
+#createInterpolator()Lorg/apache/commons/text/StringSubstitutor;
@1.9
+#<init>(Lorg/apache/commons/text/StringSubstitutor;)V

+###org/apache/commons/text/CharacterPredicate
@1.0
+#test(I)Z

+###org/apache/commons/text/translate/NumericEntityUnescaper
@1.0
+#<init>([Lorg/apache/commons/text/translate/NumericEntityUnescaper$OPTION;)V
+#isSet(Lorg/apache/commons/text/translate/NumericEntityUnescaper$OPTION;)Z
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I

+###org/apache/commons/text/TextStringBuilder
@1.3
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/lang/String;)V
+#getNewLineText()Ljava/lang/String;
+#setNewLineText(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#getNullText()Ljava/lang/String;
+#setNullText(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#length()I
+#setLength(I)Lorg/apache/commons/text/TextStringBuilder;
+#capacity()I
+#ensureCapacity(I)Lorg/apache/commons/text/TextStringBuilder;
+#minimizeCapacity()Lorg/apache/commons/text/TextStringBuilder;
+#size()I
+#isEmpty()Z
+#clear()Lorg/apache/commons/text/TextStringBuilder;
+#charAt(I)C
+#setCharAt(IC)Lorg/apache/commons/text/TextStringBuilder;
+#deleteCharAt(I)Lorg/apache/commons/text/TextStringBuilder;
+#toCharArray()[C
+#toCharArray(II)[C
+#getChars([C)[C
+#getChars(II[CI)V
+#readFrom(Ljava/lang/Readable;)I
+#appendNewLine()Lorg/apache/commons/text/TextStringBuilder;
+#appendNull()Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/CharSequence;)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/CharSequence;II)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/String;II)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/nio/CharBuffer;)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/nio/CharBuffer;II)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/TextStringBuilder;
+#append(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/TextStringBuilder;
+#append(Lorg/apache/commons/text/TextStringBuilder;)Lorg/apache/commons/text/TextStringBuilder;
+#append(Lorg/apache/commons/text/TextStringBuilder;II)Lorg/apache/commons/text/TextStringBuilder;
+#append([C)Lorg/apache/commons/text/TextStringBuilder;
+#append([CII)Lorg/apache/commons/text/TextStringBuilder;
+#append(Z)Lorg/apache/commons/text/TextStringBuilder;
+#append(C)Lorg/apache/commons/text/TextStringBuilder;
+#append(I)Lorg/apache/commons/text/TextStringBuilder;
+#append(J)Lorg/apache/commons/text/TextStringBuilder;
+#append(F)Lorg/apache/commons/text/TextStringBuilder;
+#append(D)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Ljava/lang/String;II)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Ljava/lang/StringBuffer;)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Ljava/lang/StringBuilder;)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Ljava/lang/StringBuilder;II)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Ljava/lang/StringBuffer;II)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Lorg/apache/commons/text/TextStringBuilder;)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Lorg/apache/commons/text/TextStringBuilder;II)Lorg/apache/commons/text/TextStringBuilder;
+#appendln([C)Lorg/apache/commons/text/TextStringBuilder;
+#appendln([CII)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(Z)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(C)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(I)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(J)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(F)Lorg/apache/commons/text/TextStringBuilder;
+#appendln(D)Lorg/apache/commons/text/TextStringBuilder;
+#appendAll([Ljava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;
+#appendAll(Ljava/lang/Iterable;)Lorg/apache/commons/text/TextStringBuilder;
+#appendAll(Ljava/util/Iterator;)Lorg/apache/commons/text/TextStringBuilder;
+#appendWithSeparators([Ljava/lang/Object;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#appendWithSeparators(Ljava/lang/Iterable;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#appendWithSeparators(Ljava/util/Iterator;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#appendSeparator(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#appendSeparator(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#appendSeparator(C)Lorg/apache/commons/text/TextStringBuilder;
+#appendSeparator(CC)Lorg/apache/commons/text/TextStringBuilder;
+#appendSeparator(Ljava/lang/String;I)Lorg/apache/commons/text/TextStringBuilder;
+#appendSeparator(CI)Lorg/apache/commons/text/TextStringBuilder;
+#appendPadding(IC)Lorg/apache/commons/text/TextStringBuilder;
+#appendFixedWidthPadLeft(Ljava/lang/Object;IC)Lorg/apache/commons/text/TextStringBuilder;
+#appendFixedWidthPadLeft(IIC)Lorg/apache/commons/text/TextStringBuilder;
+#appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/text/TextStringBuilder;
+#appendFixedWidthPadRight(IIC)Lorg/apache/commons/text/TextStringBuilder;
+#insert(ILjava/lang/Object;)Lorg/apache/commons/text/TextStringBuilder;
+#insert(ILjava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#insert(I[C)Lorg/apache/commons/text/TextStringBuilder;
+#insert(I[CII)Lorg/apache/commons/text/TextStringBuilder;
+#insert(IZ)Lorg/apache/commons/text/TextStringBuilder;
+#insert(IC)Lorg/apache/commons/text/TextStringBuilder;
+#insert(II)Lorg/apache/commons/text/TextStringBuilder;
+#insert(IJ)Lorg/apache/commons/text/TextStringBuilder;
+#insert(IF)Lorg/apache/commons/text/TextStringBuilder;
+#insert(ID)Lorg/apache/commons/text/TextStringBuilder;
+#delete(II)Lorg/apache/commons/text/TextStringBuilder;
+#deleteAll(C)Lorg/apache/commons/text/TextStringBuilder;
+#deleteFirst(C)Lorg/apache/commons/text/TextStringBuilder;
+#deleteAll(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#deleteFirst(Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#deleteAll(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/TextStringBuilder;
+#deleteFirst(Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/TextStringBuilder;
+#replace(IILjava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#replaceAll(CC)Lorg/apache/commons/text/TextStringBuilder;
+#replaceFirst(CC)Lorg/apache/commons/text/TextStringBuilder;
+#replaceAll(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#replaceFirst(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#replaceAll(Lorg/apache/commons/text/matcher/StringMatcher;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#replaceFirst(Lorg/apache/commons/text/matcher/StringMatcher;Ljava/lang/String;)Lorg/apache/commons/text/TextStringBuilder;
+#replace(Lorg/apache/commons/text/matcher/StringMatcher;Ljava/lang/String;III)Lorg/apache/commons/text/TextStringBuilder;
+#reverse()Lorg/apache/commons/text/TextStringBuilder;
+#trim()Lorg/apache/commons/text/TextStringBuilder;
+#startsWith(Ljava/lang/String;)Z
+#endsWith(Ljava/lang/String;)Z
+#subSequence(II)Ljava/lang/CharSequence;
+#substring(I)Ljava/lang/String;
+#substring(II)Ljava/lang/String;
+#leftString(I)Ljava/lang/String;
+#rightString(I)Ljava/lang/String;
+#midString(II)Ljava/lang/String;
+#contains(C)Z
+#contains(Ljava/lang/String;)Z
+#contains(Lorg/apache/commons/text/matcher/StringMatcher;)Z
+#indexOf(C)I
+#indexOf(CI)I
+#indexOf(Ljava/lang/String;)I
+#indexOf(Ljava/lang/String;I)I
+#indexOf(Lorg/apache/commons/text/matcher/StringMatcher;)I
+#indexOf(Lorg/apache/commons/text/matcher/StringMatcher;I)I
+#lastIndexOf(C)I
+#lastIndexOf(CI)I
+#lastIndexOf(Ljava/lang/String;)I
+#lastIndexOf(Ljava/lang/String;I)I
+#lastIndexOf(Lorg/apache/commons/text/matcher/StringMatcher;)I
+#lastIndexOf(Lorg/apache/commons/text/matcher/StringMatcher;I)I
+#asTokenizer()Lorg/apache/commons/text/StringTokenizer;
+#asReader()Ljava/io/Reader;
+#asWriter()Ljava/io/Writer;
+#appendTo(Ljava/lang/Appendable;)V
+#equalsIgnoreCase(Lorg/apache/commons/text/TextStringBuilder;)Z
+#equals(Lorg/apache/commons/text/TextStringBuilder;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toStringBuffer()Ljava/lang/StringBuffer;
+#toStringBuilder()Ljava/lang/StringBuilder;
+#build()Ljava/lang/String;
+#append(C)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
+#build()Ljava/lang/Object;
@1.9
+#wrap([C)Lorg/apache/commons/text/TextStringBuilder;
+#wrap([CI)Lorg/apache/commons/text/TextStringBuilder;
+#<init>(Ljava/lang/CharSequence;)V
+#drainChar(I)C
+#drainChars(II[CI)I
+#isNotEmpty()Z
+#isReallocated()Z
+#readFrom(Ljava/nio/CharBuffer;)I
+#readFrom(Ljava/io/Reader;)I
+#readFrom(Ljava/io/Reader;I)I
+#set(Ljava/lang/CharSequence;)Lorg/apache/commons/text/TextStringBuilder;

+###org/apache/commons/text/similarity/LevenshteinResults
@1.0
+#<init>(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V
+#getDistance()Ljava/lang/Integer;
+#getInsertCount()Ljava/lang/Integer;
+#getDeleteCount()Ljava/lang/Integer;
+#getSubstituteCount()Ljava/lang/Integer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/commons/text/StrSubstitutor
@1.0
+#replace(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/String;
+#replace(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/Object;Ljava/util/Properties;)Ljava/lang/String;
+#replaceSystemProperties(Ljava/lang/Object;)Ljava/lang/String;
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;C)V
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V
+#<init>(Lorg/apache/commons/text/StrLookup;)V
+#<init>(Lorg/apache/commons/text/StrLookup;Ljava/lang/String;Ljava/lang/String;C)V
+#<init>(Lorg/apache/commons/text/StrLookup;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V
+#<init>(Lorg/apache/commons/text/StrLookup;Lorg/apache/commons/text/StrMatcher;Lorg/apache/commons/text/StrMatcher;C)V
+#<init>(Lorg/apache/commons/text/StrLookup;Lorg/apache/commons/text/StrMatcher;Lorg/apache/commons/text/StrMatcher;CLorg/apache/commons/text/StrMatcher;)V
+#replace(Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;II)Ljava/lang/String;
+#replace([C)Ljava/lang/String;
+#replace([CII)Ljava/lang/String;
+#replace(Ljava/lang/StringBuffer;)Ljava/lang/String;
+#replace(Ljava/lang/StringBuffer;II)Ljava/lang/String;
+#replace(Ljava/lang/CharSequence;)Ljava/lang/String;
+#replace(Ljava/lang/CharSequence;II)Ljava/lang/String;
+#replace(Lorg/apache/commons/text/StrBuilder;)Ljava/lang/String;
+#replace(Lorg/apache/commons/text/StrBuilder;II)Ljava/lang/String;
+#replace(Ljava/lang/Object;)Ljava/lang/String;
+#replaceIn(Ljava/lang/StringBuffer;)Z
+#replaceIn(Ljava/lang/StringBuffer;II)Z
+#replaceIn(Ljava/lang/StringBuilder;)Z
+#replaceIn(Ljava/lang/StringBuilder;II)Z
+#replaceIn(Lorg/apache/commons/text/StrBuilder;)Z
+#replaceIn(Lorg/apache/commons/text/StrBuilder;II)Z
+#getEscapeChar()C
+#setEscapeChar(C)V
+#getVariablePrefixMatcher()Lorg/apache/commons/text/StrMatcher;
+#setVariablePrefixMatcher(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrSubstitutor;
+#setVariablePrefix(C)Lorg/apache/commons/text/StrSubstitutor;
+#setVariablePrefix(Ljava/lang/String;)Lorg/apache/commons/text/StrSubstitutor;
+#getVariableSuffixMatcher()Lorg/apache/commons/text/StrMatcher;
+#setVariableSuffixMatcher(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrSubstitutor;
+#setVariableSuffix(C)Lorg/apache/commons/text/StrSubstitutor;
+#setVariableSuffix(Ljava/lang/String;)Lorg/apache/commons/text/StrSubstitutor;
+#getValueDelimiterMatcher()Lorg/apache/commons/text/StrMatcher;
+#setValueDelimiterMatcher(Lorg/apache/commons/text/StrMatcher;)Lorg/apache/commons/text/StrSubstitutor;
+#setValueDelimiter(C)Lorg/apache/commons/text/StrSubstitutor;
+#setValueDelimiter(Ljava/lang/String;)Lorg/apache/commons/text/StrSubstitutor;
+#getVariableResolver()Lorg/apache/commons/text/StrLookup;
+#setVariableResolver(Lorg/apache/commons/text/StrLookup;)V
+#isEnableSubstitutionInVariables()Z
+#setEnableSubstitutionInVariables(Z)V
+#isPreserveEscapes()Z
+#setPreserveEscapes(Z)V
@1.2
+#isDisableSubstitutionInValues()Z
+#setDisableSubstitutionInValues(Z)V

+###org/apache/commons/text/RandomStringGenerator$Builder
@1.1
+#<init>()V
+#withinRange(II)Lorg/apache/commons/text/RandomStringGenerator$Builder;
+#filteredBy([Lorg/apache/commons/text/CharacterPredicate;)Lorg/apache/commons/text/RandomStringGenerator$Builder;
+#usingRandom(Lorg/apache/commons/text/TextRandomProvider;)Lorg/apache/commons/text/RandomStringGenerator$Builder;
+#build()Lorg/apache/commons/text/RandomStringGenerator;
+#build()Ljava/lang/Object;
@1.2
+#withinRange([[C)Lorg/apache/commons/text/RandomStringGenerator$Builder;
+#selectFrom([C)Lorg/apache/commons/text/RandomStringGenerator$Builder;

+###org/apache/commons/text/WordUtils
@1.1
+#<init>()V
+#wrap(Ljava/lang/String;I)Ljava/lang/String;
+#wrap(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;
+#wrap(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;
+#capitalize(Ljava/lang/String;)Ljava/lang/String;
+#capitalize(Ljava/lang/String;[C)Ljava/lang/String;
+#capitalizeFully(Ljava/lang/String;)Ljava/lang/String;
+#capitalizeFully(Ljava/lang/String;[C)Ljava/lang/String;
+#uncapitalize(Ljava/lang/String;)Ljava/lang/String;
+#uncapitalize(Ljava/lang/String;[C)Ljava/lang/String;
+#swapCase(Ljava/lang/String;)Ljava/lang/String;
+#initials(Ljava/lang/String;)Ljava/lang/String;
+#initials(Ljava/lang/String;[C)Ljava/lang/String;
+#containsAllWords(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z
+#isDelimiter(C[C)Z
+#isDelimiter(I[C)Z
+#abbreviate(Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;
@1.2
*#isDelimiter(C[C)Z[deprecated]
*#isDelimiter(I[C)Z[deprecated]

+###org/apache/commons/text/translate/UnicodeUnescaper
@1.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I

+###org/apache/commons/text/translate/UnicodeUnpairedSurrogateRemover
@1.0
+#<init>()V
+#translate(ILjava/io/Writer;)Z

+###org/apache/commons/text/similarity/EditDistanceFrom
@1.0
+#<init>(Lorg/apache/commons/text/similarity/EditDistance;Ljava/lang/CharSequence;)V
+#apply(Ljava/lang/CharSequence;)Ljava/lang/Object;
+#getLeft()Ljava/lang/CharSequence;
+#getEditDistance()Lorg/apache/commons/text/similarity/EditDistance;

+###org/apache/commons/text/similarity/HammingDistance
@1.0
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/similarity/EditDistance
@1.0
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/similarity/SimilarityScore
@1.0
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/similarity/LevenshteinDistance
@1.0
+#<init>()V
+#<init>(Ljava/lang/Integer;)V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Integer;
+#getDefaultInstance()Lorg/apache/commons/text/similarity/LevenshteinDistance;
+#getThreshold()Ljava/lang/Integer;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/diff/EditScript
@1.0
+#<init>()V
+#append(Lorg/apache/commons/text/diff/KeepCommand;)V
+#append(Lorg/apache/commons/text/diff/InsertCommand;)V
+#append(Lorg/apache/commons/text/diff/DeleteCommand;)V
+#visit(Lorg/apache/commons/text/diff/CommandVisitor;)V
+#getLCSLength()I
+#getModifications()I

+###org/apache/commons/text/diff/ReplacementsFinder
@1.0
+#<init>(Lorg/apache/commons/text/diff/ReplacementsHandler;)V
+#visitInsertCommand(Ljava/lang/Object;)V
+#visitKeepCommand(Ljava/lang/Object;)V
+#visitDeleteCommand(Ljava/lang/Object;)V

+###org/apache/commons/text/translate/JavaUnicodeEscaper
@1.0
+#above(I)Lorg/apache/commons/text/translate/JavaUnicodeEscaper;
+#below(I)Lorg/apache/commons/text/translate/JavaUnicodeEscaper;
+#between(II)Lorg/apache/commons/text/translate/JavaUnicodeEscaper;
+#outsideOf(II)Lorg/apache/commons/text/translate/JavaUnicodeEscaper;
+#<init>(IIZ)V

+###org/apache/commons/text/similarity/LevenshteinDetailedDistance
@1.0
+#<init>()V
+#<init>(Ljava/lang/Integer;)V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/apache/commons/text/similarity/LevenshteinResults;
+#getDefaultInstance()Lorg/apache/commons/text/similarity/LevenshteinDetailedDistance;
+#getThreshold()Ljava/lang/Integer;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/diff/EditCommand
@1.0
+#accept(Lorg/apache/commons/text/diff/CommandVisitor;)V

+###org/apache/commons/text/Builder
@1.0
+#build()Ljava/lang/Object;

+###org/apache/commons/text/StringEscapeUtils
@1.0
+#<init>()V
+#builder(Lorg/apache/commons/text/translate/CharSequenceTranslator;)Lorg/apache/commons/text/StringEscapeUtils$Builder;
+#escapeJava(Ljava/lang/String;)Ljava/lang/String;
+#escapeEcmaScript(Ljava/lang/String;)Ljava/lang/String;
+#escapeJson(Ljava/lang/String;)Ljava/lang/String;
+#unescapeJava(Ljava/lang/String;)Ljava/lang/String;
+#unescapeEcmaScript(Ljava/lang/String;)Ljava/lang/String;
+#unescapeJson(Ljava/lang/String;)Ljava/lang/String;
+#escapeHtml4(Ljava/lang/String;)Ljava/lang/String;
+#escapeHtml3(Ljava/lang/String;)Ljava/lang/String;
+#unescapeHtml4(Ljava/lang/String;)Ljava/lang/String;
+#unescapeHtml3(Ljava/lang/String;)Ljava/lang/String;
+#escapeXml10(Ljava/lang/String;)Ljava/lang/String;
+#escapeXml11(Ljava/lang/String;)Ljava/lang/String;
+#unescapeXml(Ljava/lang/String;)Ljava/lang/String;
+#escapeCsv(Ljava/lang/String;)Ljava/lang/String;
+#unescapeCsv(Ljava/lang/String;)Ljava/lang/String;
+#escapeXSI(Ljava/lang/String;)Ljava/lang/String;
+#unescapeXSI(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/text/CompositeFormat
@1.0
+#<init>(Ljava/text/Format;Ljava/text/Format;)V
+#format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#parseObject(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
+#getParser()Ljava/text/Format;
+#getFormatter()Ljava/text/Format;
+#reformat(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/text/translate/CsvTranslators$CsvUnescaper
@1.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I

+###org/apache/commons/text/translate/EntityArrays
@1.0
+#<init>()V
+#invert(Ljava/util/Map;)Ljava/util/Map;

+###org/apache/commons/text/similarity/CosineSimilarity
@1.0
+#<init>()V
+#cosineSimilarity(Ljava/util/Map;Ljava/util/Map;)Ljava/lang/Double;

+###org/apache/commons/text/diff/InsertCommand
@1.0
+#<init>(Ljava/lang/Object;)V
+#accept(Lorg/apache/commons/text/diff/CommandVisitor;)V

+###org/apache/commons/text/CaseUtils
@1.2
+#<init>()V
+#toCamelCase(Ljava/lang/String;Z[C)Ljava/lang/String;

+###org/apache/commons/text/translate/OctalUnescaper
@1.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I

+###org/apache/commons/text/translate/CsvTranslators$CsvEscaper
@1.0
+#<init>()V
+#translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I

+###org/apache/commons/text/TextRandomProvider
@1.1
+#nextInt(I)I

+###org/apache/commons/text/similarity/SimilarityScoreFrom
@1.0
+#<init>(Lorg/apache/commons/text/similarity/SimilarityScore;Ljava/lang/CharSequence;)V
+#apply(Ljava/lang/CharSequence;)Ljava/lang/Object;
+#getLeft()Ljava/lang/CharSequence;
+#getSimilarityScore()Lorg/apache/commons/text/similarity/SimilarityScore;

+###org/apache/commons/text/FormattableUtils
@1.0
+#<init>()V
+#toString(Ljava/util/Formattable;)Ljava/lang/String;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;III)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIIC)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIILjava/lang/CharSequence;)Ljava/util/Formatter;
+#append(Ljava/lang/CharSequence;Ljava/util/Formatter;IIICLjava/lang/CharSequence;)Ljava/util/Formatter;

+###org/apache/commons/text/diff/ReplacementsHandler
@1.0
+#handleReplacement(ILjava/util/List;Ljava/util/List;)V

+###org/apache/commons/text/diff/StringsComparator
@1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getScript()Lorg/apache/commons/text/diff/EditScript;

+###org/apache/commons/text/matcher/StringMatcherFactory
@1.3
+#charMatcher(C)Lorg/apache/commons/text/matcher/StringMatcher;
+#charSetMatcher([C)Lorg/apache/commons/text/matcher/StringMatcher;
+#charSetMatcher(Ljava/lang/String;)Lorg/apache/commons/text/matcher/StringMatcher;
+#commaMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#doubleQuoteMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#noneMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#quoteMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#singleQuoteMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#spaceMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#splitMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#stringMatcher(Ljava/lang/String;)Lorg/apache/commons/text/matcher/StringMatcher;
+#tabMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
+#trimMatcher()Lorg/apache/commons/text/matcher/StringMatcher;
@1.9
+#andMatcher([Lorg/apache/commons/text/matcher/StringMatcher;)Lorg/apache/commons/text/matcher/StringMatcher;
+#stringMatcher([C)Lorg/apache/commons/text/matcher/StringMatcher;

+###org/apache/commons/text/StrMatcher
@1.0
+#commaMatcher()Lorg/apache/commons/text/StrMatcher;
+#tabMatcher()Lorg/apache/commons/text/StrMatcher;
+#spaceMatcher()Lorg/apache/commons/text/StrMatcher;
+#splitMatcher()Lorg/apache/commons/text/StrMatcher;
+#trimMatcher()Lorg/apache/commons/text/StrMatcher;
+#singleQuoteMatcher()Lorg/apache/commons/text/StrMatcher;
+#doubleQuoteMatcher()Lorg/apache/commons/text/StrMatcher;
+#quoteMatcher()Lorg/apache/commons/text/StrMatcher;
+#noneMatcher()Lorg/apache/commons/text/StrMatcher;
+#charMatcher(C)Lorg/apache/commons/text/StrMatcher;
+#charSetMatcher([C)Lorg/apache/commons/text/StrMatcher;
+#charSetMatcher(Ljava/lang/String;)Lorg/apache/commons/text/StrMatcher;
+#stringMatcher(Ljava/lang/String;)Lorg/apache/commons/text/StrMatcher;
+#isMatch([CIII)I
+#isMatch([CI)I

+###org/apache/commons/text/lookup/DefaultStringLookup
@1.7
+#values()[Lorg/apache/commons/text/lookup/DefaultStringLookup;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/text/lookup/DefaultStringLookup;
+#getStringLookup()Lorg/apache/commons/text/lookup/StringLookup;
+#getKey()Ljava/lang/String;

+###org/apache/commons/text/similarity/IntersectionSimilarity
@1.7
+#<init>(Ljava/util/function/Function;)V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lorg/apache/commons/text/similarity/IntersectionResult;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/similarity/IntersectionResult
@1.7
+#<init>(III)V
+#getSizeA()I
+#getSizeB()I
+#getIntersection()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/commons/text/similarity/JaroWinklerSimilarity
@1.7
+#<init>()V
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Double;
+#apply(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/Object;

+###org/apache/commons/text/io/StringSubstitutorReader
@1.9
+#<init>(Ljava/io/Reader;Lorg/apache/commons/text/StringSubstitutor;)V
+#read()I
+#read([CII)I

+###org/apache/commons/text/lookup/BiStringLookup
@1.9
+#lookup(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;

+###org/apache/commons/text/numbers/DoubleFormat$Builder
@1.10.0
+#allowSignedZero(Z)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#alwaysIncludeExponent(Z)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#build()Ljava/util/function/DoubleFunction;
+#decimalSeparator(C)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#digits(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#exponentSeparator(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#formatSymbols(Ljava/text/DecimalFormatSymbols;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#groupingSeparator(C)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#groupThousands(Z)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#includeFractionPlaceholder(Z)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#infinity(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#maxPrecision(I)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#minDecimalExponent(I)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#minusSign(C)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#nan(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#plainFormatMaxDecimalExponent(I)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
+#plainFormatMinDecimalExponent(I)Lorg/apache/commons/text/numbers/DoubleFormat$Builder;

+###org/apache/commons/text/numbers/DoubleFormat
@1.10.0
+#values()[Lorg/apache/commons/text/numbers/DoubleFormat;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/text/numbers/DoubleFormat;
+#builder()Lorg/apache/commons/text/numbers/DoubleFormat$Builder;
