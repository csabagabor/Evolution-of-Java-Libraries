
+###org/netbeans/modules/openide/filesystems/DefaultURLMapperProxy
@RELEASE90
+#setDefault(Lorg/openide/filesystems/URLMapper;)V
+#<init>()V
+#getURL(Lorg/openide/filesystems/FileObject;I)Ljava/net/URL;
+#getFileObjects(Ljava/net/URL;)[Lorg/openide/filesystems/FileObject;

+###org/netbeans/modules/openide/filesystems/RecognizeInstanceFiles
@RELEASE90
+#<init>()V
+#create(Ljava/lang/String;)Lorg/openide/util/Lookup;
+#lookupObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#createInstance(Ljava/lang/Class;)Ljava/lang/Object;

+###org/netbeans/modules/openide/filesystems/declmime/MIMEResolverImpl
@RELEASE90
+#<init>()V
+#forDescriptor(Lorg/openide/filesystems/FileObject;)Lorg/openide/filesystems/MIMEResolver;
+#isDeclarative(Lorg/openide/filesystems/MIMEResolver;)Z
+#getMIMETypes(Lorg/openide/filesystems/MIMEResolver;)[Ljava/lang/String;
+#isUserDefined(Lorg/openide/filesystems/FileObject;)Z
+#getMIMEToExtensions(Lorg/openide/filesystems/FileObject;)Ljava/util/Map;
+#getUserDefinedResolver()Lorg/openide/filesystems/FileObject;
+#storeUserDefinedResolver(Ljava/util/Map;)Z
+#getOrderedResolvers()Ljava/util/Collection;
+#create(Lorg/openide/filesystems/FileObject;)Lorg/openide/filesystems/MIMEResolver;

+###org/netbeans/modules/openide/filesystems/declmime/MIMEResolverProcessor
@RELEASE90
+#<init>()V
+#getSupportedAnnotationTypes()Ljava/util/Set;

+###org/openide/filesystems/AbstractFileSystem$Attr
@RELEASE90
+#readAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#writeAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#attributes(Ljava/lang/String;)Ljava/util/Enumeration;
+#renameAttributes(Ljava/lang/String;Ljava/lang/String;)V
+#deleteAttributes(Ljava/lang/String;)V

+###org/openide/filesystems/AbstractFileSystem$Change
@RELEASE90
+#createFolder(Ljava/lang/String;)V
+#createData(Ljava/lang/String;)V
+#rename(Ljava/lang/String;Ljava/lang/String;)V
+#delete(Ljava/lang/String;)V

+###org/openide/filesystems/AbstractFileSystem$Info
@RELEASE90
+#lastModified(Ljava/lang/String;)Ljava/util/Date;
+#folder(Ljava/lang/String;)Z
+#readOnly(Ljava/lang/String;)Z
+#mimeType(Ljava/lang/String;)Ljava/lang/String;
+#size(Ljava/lang/String;)J
+#inputStream(Ljava/lang/String;)Ljava/io/InputStream;
+#outputStream(Ljava/lang/String;)Ljava/io/OutputStream;
+#lock(Ljava/lang/String;)V
+#unlock(Ljava/lang/String;)V
+#markUnimportant(Ljava/lang/String;)V

+###org/openide/filesystems/AbstractFileSystem$List
@RELEASE90
+#children(Ljava/lang/String;)[Ljava/lang/String;

+###org/openide/filesystems/AbstractFileSystem$SymlinkInfo
@RELEASE90
+#isSymbolicLink(Ljava/lang/String;)Z
+#readSymbolicLink(Ljava/lang/String;)Ljava/lang/String;
+#getCanonicalName(Ljava/lang/String;)Ljava/lang/String;

+###org/openide/filesystems/AbstractFileSystem$Transfer
@RELEASE90
+#move(Ljava/lang/String;Lorg/openide/filesystems/AbstractFileSystem$Transfer;Ljava/lang/String;)Z
+#copy(Ljava/lang/String;Lorg/openide/filesystems/AbstractFileSystem$Transfer;Ljava/lang/String;)Z

+###org/openide/filesystems/AbstractFileSystem
@RELEASE90
+#<init>()V
+#refresh(Z)V
+#getDisplayName()Ljava/lang/String;
+#getRoot()Lorg/openide/filesystems/FileObject;
+#findResource(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;

+###org/openide/filesystems/DefaultAttributes
@RELEASE90
+#<init>(Lorg/openide/filesystems/AbstractFileSystem$Info;Lorg/openide/filesystems/AbstractFileSystem$Change;Lorg/openide/filesystems/AbstractFileSystem$List;)V
+#children(Ljava/lang/String;)[Ljava/lang/String;
+#readAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#writeAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#attributes(Ljava/lang/String;)Ljava/util/Enumeration;
+#renameAttributes(Ljava/lang/String;Ljava/lang/String;)V
+#deleteAttributes(Ljava/lang/String;)V

+###org/openide/filesystems/FileAlreadyLockedException
@RELEASE90
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/openide/filesystems/FileAttributeEvent
@RELEASE90
+#<init>(Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Z)V
+#getName()Ljava/lang/String;
+#getOldValue()Ljava/lang/Object;
+#getNewValue()Ljava/lang/Object;

+###org/openide/filesystems/FileChangeAdapter
@RELEASE90
+#<init>()V
+#fileFolderCreated(Lorg/openide/filesystems/FileEvent;)V
+#fileDataCreated(Lorg/openide/filesystems/FileEvent;)V
+#fileChanged(Lorg/openide/filesystems/FileEvent;)V
+#fileDeleted(Lorg/openide/filesystems/FileEvent;)V
+#fileRenamed(Lorg/openide/filesystems/FileRenameEvent;)V
+#fileAttributeChanged(Lorg/openide/filesystems/FileAttributeEvent;)V

+###org/openide/filesystems/FileChangeListener
@RELEASE90
+#fileFolderCreated(Lorg/openide/filesystems/FileEvent;)V
+#fileDataCreated(Lorg/openide/filesystems/FileEvent;)V
+#fileChanged(Lorg/openide/filesystems/FileEvent;)V
+#fileDeleted(Lorg/openide/filesystems/FileEvent;)V
+#fileRenamed(Lorg/openide/filesystems/FileRenameEvent;)V
+#fileAttributeChanged(Lorg/openide/filesystems/FileAttributeEvent;)V

+###org/openide/filesystems/FileEvent
@RELEASE90
+#<init>(Lorg/openide/filesystems/FileObject;)V
+#<init>(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;)V
+#<init>(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Z)V
+#<init>(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;ZJ)V
+#getFile()Lorg/openide/filesystems/FileObject;
+#getTime()J
+#isExpected()Z
+#runWhenDeliveryOver(Ljava/lang/Runnable;)V
+#toString()Ljava/lang/String;
+#firedFrom(Lorg/openide/filesystems/FileSystem$AtomicAction;)Z

+###org/openide/filesystems/FileLock
@RELEASE90
+#<init>()V
+#releaseLock()V
+#close()V
+#isValid()Z
+#finalize()V

+###org/openide/filesystems/FileObject
@RELEASE90
+#<init>()V
+#getName()Ljava/lang/String;
+#getExt()Ljava/lang/String;
+#rename(Lorg/openide/filesystems/FileLock;Ljava/lang/String;Ljava/lang/String;)V
+#copy(Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#move(Lorg/openide/filesystems/FileLock;Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#toString()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#getPackageNameExt(CC)Ljava/lang/String;[deprecated]
+#getPackageName(C)Ljava/lang/String;[deprecated]
+#getNameExt()Ljava/lang/String;
+#getFileSystem()Lorg/openide/filesystems/FileSystem;
+#getParent()Lorg/openide/filesystems/FileObject;
+#isFolder()Z
+#lastModified()Ljava/util/Date;
+#isRoot()Z
+#isData()Z
+#isValid()Z
+#existsExt(Ljava/lang/String;)Z
+#delete(Lorg/openide/filesystems/FileLock;)V
+#delete()V
+#getLookup()Lorg/openide/util/Lookup;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttributes()Ljava/util/Enumeration;
+#hasExt(Ljava/lang/String;)Z
+#addFileChangeListener(Lorg/openide/filesystems/FileChangeListener;)V
+#removeFileChangeListener(Lorg/openide/filesystems/FileChangeListener;)V
+#addRecursiveListener(Lorg/openide/filesystems/FileChangeListener;)V
+#removeRecursiveListener(Lorg/openide/filesystems/FileChangeListener;)V
+#getMIMEType()Ljava/lang/String;
+#getMIMEType([Ljava/lang/String;)Ljava/lang/String;
+#getSize()J
+#getInputStream()Ljava/io/InputStream;
+#asBytes()[B
+#asText(Ljava/lang/String;)Ljava/lang/String;
+#asText()Ljava/lang/String;
+#asLines()Ljava/util/List;
+#asLines(Ljava/lang/String;)Ljava/util/List;
+#getOutputStream(Lorg/openide/filesystems/FileLock;)Ljava/io/OutputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#lock()Lorg/openide/filesystems/FileLock;
+#isLocked()Z
+#setImportant(Z)V[deprecated]
+#getChildren()[Lorg/openide/filesystems/FileObject;
+#getChildren(Z)Ljava/util/Enumeration;
+#getFolders(Z)Ljava/util/Enumeration;
+#getData(Z)Ljava/util/Enumeration;
+#getFileObject(Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#getFileObject(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#createFolder(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#createData(Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#createData(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#createAndOpen(Ljava/lang/String;)Ljava/io/OutputStream;
+#isReadOnly()Z[deprecated]
+#canWrite()Z
+#canRead()Z
+#canRevert()Z
+#revert()V
+#refresh(Z)V
+#refresh()V
+#getURL()Ljava/net/URL;[deprecated]
+#toURL()Ljava/net/URL;
+#toURI()Ljava/net/URI;
+#isVirtual()Z
+#isSymbolicLink()Z
+#readSymbolicLink()Lorg/openide/filesystems/FileObject;
+#readSymbolicLinkPath()Ljava/lang/String;
+#getCanonicalFileObject()Lorg/openide/filesystems/FileObject;
@RELEASE124
+#getFileObject(Ljava/lang/String;Z)Lorg/openide/filesystems/FileObject;

+###org/openide/filesystems/FileRenameEvent
@RELEASE90
+#<init>(Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/String;Z)V
+#getName()Ljava/lang/String;
+#getExt()Ljava/lang/String;

+###org/openide/filesystems/FileStateInvalidException
@RELEASE90
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getFileSystemName()Ljava/lang/String;

+###org/openide/filesystems/FileStatusEvent
@RELEASE90
+#<init>(Lorg/openide/filesystems/FileSystem;Ljava/util/Set;ZZ)V
+#<init>(Lorg/openide/filesystems/FileSystem;Lorg/openide/filesystems/FileObject;ZZ)V
+#<init>(Lorg/openide/filesystems/FileSystem;ZZ)V
+#getFileSystem()Lorg/openide/filesystems/FileSystem;
+#isNameChange()Z
+#isIconChange()Z
+#hasChanged(Lorg/openide/filesystems/FileObject;)Z

+###org/openide/filesystems/FileStatusListener
@RELEASE90
+#annotationChanged(Lorg/openide/filesystems/FileStatusEvent;)V

+###org/openide/filesystems/FileSystem$AtomicAction
@RELEASE90
+#run()V

+###org/openide/filesystems/FileSystem
@RELEASE90
+#<init>()V
+#refresh(Z)V
+#isValid()Z
+#getDisplayName()Ljava/lang/String;
+#getSystemName()Ljava/lang/String;[deprecated]
+#isDefault()Z
+#isReadOnly()Z
+#getRoot()Lorg/openide/filesystems/FileObject;
+#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;[deprecated]
+#findResource(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#getTempFolder()Lorg/openide/filesystems/FileObject;
+#createTempFile(Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/String;Z)Lorg/openide/filesystems/FileObject;
+#findExtrasFor(Ljava/util/Set;)Lorg/openide/util/Lookup;
+#toString()Ljava/lang/String;
+#getDecorator()Lorg/openide/filesystems/StatusDecorator;
+#runAtomicAction(Lorg/openide/filesystems/FileSystem$AtomicAction;)V
+#addFileStatusListener(Lorg/openide/filesystems/FileStatusListener;)V
+#removeFileStatusListener(Lorg/openide/filesystems/FileStatusListener;)V
+#addVetoableChangeListener(Ljava/beans/VetoableChangeListener;)V
+#removeVetoableChangeListener(Ljava/beans/VetoableChangeListener;)V
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#addNotify()V
+#removeNotify()V
+#addFileChangeListener(Lorg/openide/filesystems/FileChangeListener;)V
+#removeFileChangeListener(Lorg/openide/filesystems/FileChangeListener;)V

+###org/openide/filesystems/FileURL$Handler
@RELEASE90
+#<init>()V
+#openConnection(Ljava/net/URL;)Ljava/net/URLConnection;

+###org/openide/filesystems/FileUtil
@RELEASE90
+#refreshFor([Ljava/io/File;)V
+#refreshAll()V
+#addFileChangeListener(Lorg/openide/filesystems/FileChangeListener;)V
+#removeFileChangeListener(Lorg/openide/filesystems/FileChangeListener;)V
+#addFileChangeListener(Lorg/openide/filesystems/FileChangeListener;Ljava/io/File;)V
+#removeFileChangeListener(Lorg/openide/filesystems/FileChangeListener;Ljava/io/File;)V
+#addRecursiveListener(Lorg/openide/filesystems/FileChangeListener;Ljava/io/File;)V
+#addRecursiveListener(Lorg/openide/filesystems/FileChangeListener;Ljava/io/File;Ljava/util/concurrent/Callable;)V
+#addRecursiveListener(Lorg/openide/filesystems/FileChangeListener;Ljava/io/File;Ljava/io/FileFilter;Ljava/util/concurrent/Callable;)V
+#removeRecursiveListener(Lorg/openide/filesystems/FileChangeListener;Ljava/io/File;)V
+#runAtomicAction(Lorg/openide/filesystems/FileSystem$AtomicAction;)V
+#runAtomicAction(Ljava/lang/Runnable;)V
+#createFolder(Ljava/io/File;)Lorg/openide/filesystems/FileObject;
+#createData(Ljava/io/File;)Lorg/openide/filesystems/FileObject;
+#copy(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#createMemoryFileSystem()Lorg/openide/filesystems/FileSystem;
+#copyFile(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#copyFile(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#moveFile(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#createFolder(Lorg/openide/filesystems/FileObject;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#createData(Lorg/openide/filesystems/FileObject;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#toFile(Lorg/openide/filesystems/FileObject;)Ljava/io/File;
+#toFileObject(Ljava/io/File;)Lorg/openide/filesystems/FileObject;
+#fromFile(Ljava/io/File;)[Lorg/openide/filesystems/FileObject;[deprecated]
+#copyAttributes(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;)V
+#extractJar(Lorg/openide/filesystems/FileObject;Ljava/io/InputStream;)V[deprecated]
+#getExtension(Ljava/lang/String;)Ljava/lang/String;
+#findFreeFileName(Lorg/openide/filesystems/FileObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#findFreeFolderName(Lorg/openide/filesystems/FileObject;Ljava/lang/String;)Ljava/lang/String;
+#getRelativePath(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;)Ljava/lang/String;
+#findBrother(Lorg/openide/filesystems/FileObject;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#getMIMEType(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#getMIMEType(Lorg/openide/filesystems/FileObject;)Ljava/lang/String;
+#getMIMEType(Lorg/openide/filesystems/FileObject;[Ljava/lang/String;)Ljava/lang/String;
+#setMIMEType(Ljava/lang/String;Ljava/lang/String;)V
+#getMIMETypeExtensions(Ljava/lang/String;)Ljava/util/List;
+#nbfsURLStreamHandler()Ljava/net/URLStreamHandler;[deprecated]
+#isParentOf(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;)Z
+#isRecursiveSymbolicLink(Lorg/openide/filesystems/FileObject;)Z
+#weakFileChangeListener(Lorg/openide/filesystems/FileChangeListener;Ljava/lang/Object;)Lorg/openide/filesystems/FileChangeListener;
+#weakFileStatusListener(Lorg/openide/filesystems/FileStatusListener;Ljava/lang/Object;)Lorg/openide/filesystems/FileStatusListener;
+#getFileDisplayName(Lorg/openide/filesystems/FileObject;)Ljava/lang/String;
+#normalizePath(Ljava/lang/String;)Ljava/lang/String;
+#normalizeFile(Ljava/io/File;)Ljava/io/File;
+#getArchiveRoot(Lorg/openide/filesystems/FileObject;)Lorg/openide/filesystems/FileObject;
+#getArchiveRoot(Ljava/net/URL;)Ljava/net/URL;
+#getArchiveFile(Lorg/openide/filesystems/FileObject;)Lorg/openide/filesystems/FileObject;
+#getArchiveFile(Ljava/net/URL;)Ljava/net/URL;
+#isArchiveFile(Lorg/openide/filesystems/FileObject;)Z
+#isArchiveFile(Ljava/net/URL;)Z
+#isArchiveArtifact(Lorg/openide/filesystems/FileObject;)Z
+#isArchiveArtifact(Ljava/net/URL;)Z
+#urlForArchiveOrDir(Ljava/io/File;)Ljava/net/URL;
+#archiveOrDirForURL(Ljava/net/URL;)Ljava/io/File;
+#preventFileChooserSymlinkTraversal(Ljavax/swing/JFileChooser;Ljava/io/File;)V[deprecated]
+#getOrder(Ljava/util/Collection;Z)Ljava/util/List;
+#setOrder(Ljava/util/List;)V
+#affectsOrder(Lorg/openide/filesystems/FileAttributeEvent;)Z
+#getConfigFile(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#getSystemConfigFile(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#getConfigObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getSystemConfigObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getConfigRoot()Lorg/openide/filesystems/FileObject;
+#getSystemConfigRoot()Lorg/openide/filesystems/FileObject;
@RELEASE125
+#isValidFileName(Ljava/lang/String;)Z
@RELEASE130
+#defaultAttributesTransformer()Ljava/util/function/BiFunction;
+#copyAttributes(Lorg/openide/filesystems/FileObject;Lorg/openide/filesystems/FileObject;Ljava/util/function/BiFunction;)V
@RELEASE170
+#toPath(Lorg/openide/filesystems/FileObject;)Ljava/nio/file/Path;
+#toFileObject(Ljava/nio/file/Path;)Lorg/openide/filesystems/FileObject;

+###org/openide/filesystems/JarFileSystem$Impl
@RELEASE90
+#<init>(Lorg/openide/filesystems/JarFileSystem;)V
+#children(Ljava/lang/String;)[Ljava/lang/String;
+#createFolder(Ljava/lang/String;)V
+#createData(Ljava/lang/String;)V
+#rename(Ljava/lang/String;Ljava/lang/String;)V
+#delete(Ljava/lang/String;)V
+#lastModified(Ljava/lang/String;)Ljava/util/Date;
+#folder(Ljava/lang/String;)Z
+#readOnly(Ljava/lang/String;)Z
+#mimeType(Ljava/lang/String;)Ljava/lang/String;
+#size(Ljava/lang/String;)J
+#inputStream(Ljava/lang/String;)Ljava/io/InputStream;
+#outputStream(Ljava/lang/String;)Ljava/io/OutputStream;
+#lock(Ljava/lang/String;)V
+#unlock(Ljava/lang/String;)V
+#markUnimportant(Ljava/lang/String;)V
+#readAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#writeAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#attributes(Ljava/lang/String;)Ljava/util/Enumeration;
+#renameAttributes(Ljava/lang/String;Ljava/lang/String;)V
+#deleteAttributes(Ljava/lang/String;)V

+###org/openide/filesystems/JarFileSystem
@RELEASE90
+#<init>()V
+#<init>(Ljava/io/File;)V
+#getManifest()Ljava/util/jar/Manifest;
+#setJarFile(Ljava/io/File;)V
+#getJarFile()Ljava/io/File;
+#getDisplayName()Ljava/lang/String;
+#isReadOnly()Z
+#removeNotify()V

+###org/openide/filesystems/LocalFileSystem$Impl
@RELEASE90
+#<init>(Lorg/openide/filesystems/LocalFileSystem;)V
+#children(Ljava/lang/String;)[Ljava/lang/String;
+#createFolder(Ljava/lang/String;)V
+#createData(Ljava/lang/String;)V
+#rename(Ljava/lang/String;Ljava/lang/String;)V
+#delete(Ljava/lang/String;)V
+#lastModified(Ljava/lang/String;)Ljava/util/Date;
+#folder(Ljava/lang/String;)Z
+#readOnly(Ljava/lang/String;)Z
+#mimeType(Ljava/lang/String;)Ljava/lang/String;
+#size(Ljava/lang/String;)J
+#inputStream(Ljava/lang/String;)Ljava/io/InputStream;
+#outputStream(Ljava/lang/String;)Ljava/io/OutputStream;
+#lock(Ljava/lang/String;)V
+#unlock(Ljava/lang/String;)V
+#markUnimportant(Ljava/lang/String;)V
+#isSymbolicLink(Ljava/lang/String;)Z
+#readSymbolicLink(Ljava/lang/String;)Ljava/lang/String;
+#getCanonicalName(Ljava/lang/String;)Ljava/lang/String;

+###org/openide/filesystems/LocalFileSystem
@RELEASE90
+#<init>()V
+#getDisplayName()Ljava/lang/String;
+#setRootDirectory(Ljava/io/File;)V
+#getRootDirectory()Ljava/io/File;
+#setReadOnly(Z)V
+#isReadOnly()Z

+###org/openide/filesystems/MIMEResolver$ExtensionRegistration
@RELEASE90
+#displayName()Ljava/lang/String;
+#mimeType()Ljava/lang/String;
+#extension()[Ljava/lang/String;
+#position()I
+#showInFileChooser()[Ljava/lang/String;

+###org/openide/filesystems/MIMEResolver$NamespaceRegistration
@RELEASE90
+#displayName()Ljava/lang/String;
+#mimeType()Ljava/lang/String;
+#position()I
+#acceptedExtension()[Ljava/lang/String;
+#checkedExtension()[Ljava/lang/String;
+#elementName()Ljava/lang/String;
+#elementNS()[Ljava/lang/String;
+#doctypePublicId()[Ljava/lang/String;

+###org/openide/filesystems/MIMEResolver$Registration
@RELEASE90
+#resource()Ljava/lang/String;
+#position()I
+#displayName()Ljava/lang/String;
+#showInFileChooser()[Ljava/lang/String;

+###org/openide/filesystems/MIMEResolver$UIHelpers
@RELEASE90

+###org/openide/filesystems/MIMEResolver
@RELEASE90
+#<init>([Ljava/lang/String;)V
+#<init>()V[deprecated]
+#findMIMEType(Lorg/openide/filesystems/FileObject;)Ljava/lang/String;

+###org/openide/filesystems/MemoryFileSystem$Handler
@RELEASE90
+#<init>()V

+###org/openide/filesystems/MemoryFileSystem$Mapper
@RELEASE90
+#<init>()V
+#getURL(Lorg/openide/filesystems/FileObject;I)Ljava/net/URL;
+#getFileObjects(Ljava/net/URL;)[Lorg/openide/filesystems/FileObject;

+###org/openide/filesystems/MultiFileSystem
@RELEASE90
+#<init>([Lorg/openide/filesystems/FileSystem;)V
+#refresh(Z)V
+#getPropagateMasks()Z
+#isReadOnly()Z
+#getDisplayName()Ljava/lang/String;
+#getRoot()Lorg/openide/filesystems/FileObject;
+#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;[deprecated]
+#findResource(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;
+#addNotify()V
+#removeNotify()V

+###org/openide/filesystems/Repository$LayerProvider
@RELEASE90
+#<init>()V

+###org/openide/filesystems/Repository$LocalProvider
@RELEASE90
+#<init>()V
+#getRepository()Lorg/openide/filesystems/Repository;

+###org/openide/filesystems/Repository
@RELEASE90
+#<init>(Lorg/openide/filesystems/FileSystem;)V
+#getDefault()Lorg/openide/filesystems/Repository;
+#getDefaultFileSystem()Lorg/openide/filesystems/FileSystem;[deprecated]
+#addFileSystem(Lorg/openide/filesystems/FileSystem;)V[deprecated]
+#removeFileSystem(Lorg/openide/filesystems/FileSystem;)V[deprecated]
+#reorder([I)V[deprecated]
+#getFileSystems()Ljava/util/Enumeration;[deprecated]
+#fileSystems()Ljava/util/Enumeration;[deprecated]
+#toArray()[Lorg/openide/filesystems/FileSystem;[deprecated]
+#findFileSystem(Ljava/lang/String;)Lorg/openide/filesystems/FileSystem;[deprecated]
+#writeExternal(Ljava/io/ObjectOutput;)V[deprecated]
+#readExternal(Ljava/io/ObjectInput;)V[deprecated]
+#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/FileObject;[deprecated]
+#findResource(Ljava/lang/String;)Lorg/openide/filesystems/FileObject;[deprecated]
+#findAllResources(Ljava/lang/String;)Ljava/util/Enumeration;[deprecated]
+#findAll(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Enumeration;[deprecated]
+#addRepositoryListener(Lorg/openide/filesystems/RepositoryListener;)V[deprecated]
+#removeRepositoryListener(Lorg/openide/filesystems/RepositoryListener;)V[deprecated]
+#addFileChangeListener(Lorg/openide/filesystems/FileChangeListener;)V[deprecated]
+#removeFileChangeListener(Lorg/openide/filesystems/FileChangeListener;)V[deprecated]

+###org/openide/filesystems/RepositoryAdapter
@RELEASE90
+#<init>()V
+#fileSystemAdded(Lorg/openide/filesystems/RepositoryEvent;)V
+#fileSystemRemoved(Lorg/openide/filesystems/RepositoryEvent;)V
+#fileSystemPoolReordered(Lorg/openide/filesystems/RepositoryReorderedEvent;)V

+###org/openide/filesystems/RepositoryEvent
@RELEASE90
+#<init>(Lorg/openide/filesystems/Repository;Lorg/openide/filesystems/FileSystem;Z)V
+#getRepository()Lorg/openide/filesystems/Repository;
+#getFileSystem()Lorg/openide/filesystems/FileSystem;
+#isAdded()Z

+###org/openide/filesystems/RepositoryListener
@RELEASE90
+#fileSystemAdded(Lorg/openide/filesystems/RepositoryEvent;)V
+#fileSystemRemoved(Lorg/openide/filesystems/RepositoryEvent;)V
+#fileSystemPoolReordered(Lorg/openide/filesystems/RepositoryReorderedEvent;)V

+###org/openide/filesystems/RepositoryReorderedEvent
@RELEASE90
+#<init>(Lorg/openide/filesystems/Repository;[I)V
+#getRepository()Lorg/openide/filesystems/Repository;
+#getPermutation()[I

+###org/openide/filesystems/StatusDecorator
@RELEASE90
+#annotateName(Ljava/lang/String;Ljava/util/Set;)Ljava/lang/String;
+#annotateNameHtml(Ljava/lang/String;Ljava/util/Set;)Ljava/lang/String;

+###org/openide/filesystems/URLMapper
@RELEASE90
+#<init>()V
+#findURL(Lorg/openide/filesystems/FileObject;I)Ljava/net/URL;
+#getURL(Lorg/openide/filesystems/FileObject;I)Ljava/net/URL;
+#findFileObjects(Ljava/net/URL;)[Lorg/openide/filesystems/FileObject;[deprecated]
+#findFileObject(Ljava/net/URL;)Lorg/openide/filesystems/FileObject;
+#getFileObjects(Ljava/net/URL;)[Lorg/openide/filesystems/FileObject;

+###org/openide/filesystems/XMLFileSystem$Impl
@RELEASE90
+#<init>(Lorg/openide/filesystems/XMLFileSystem;)V
+#children(Ljava/lang/String;)[Ljava/lang/String;
+#createFolder(Ljava/lang/String;)V
+#createData(Ljava/lang/String;)V
+#rename(Ljava/lang/String;Ljava/lang/String;)V
+#delete(Ljava/lang/String;)V
+#lastModified(Ljava/lang/String;)Ljava/util/Date;
+#folder(Ljava/lang/String;)Z
+#readOnly(Ljava/lang/String;)Z
+#mimeType(Ljava/lang/String;)Ljava/lang/String;
+#size(Ljava/lang/String;)J
+#inputStream(Ljava/lang/String;)Ljava/io/InputStream;
+#outputStream(Ljava/lang/String;)Ljava/io/OutputStream;
+#lock(Ljava/lang/String;)V
+#unlock(Ljava/lang/String;)V
+#markUnimportant(Ljava/lang/String;)V
+#readAttribute(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#writeAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#attributes(Ljava/lang/String;)Ljava/util/Enumeration;
+#renameAttributes(Ljava/lang/String;Ljava/lang/String;)V
+#deleteAttributes(Ljava/lang/String;)V

+###org/openide/filesystems/XMLFileSystem
@RELEASE90
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/net/URL;)V
+#getXmlUrl()Ljava/net/URL;
+#setXmlUrl(Ljava/net/URL;)V
+#setXmlUrl(Ljava/net/URL;Z)V
+#getXmlUrls()[Ljava/net/URL;
+#setXmlUrls([Ljava/net/URL;)V
+#getDisplayName()Ljava/lang/String;
+#isReadOnly()Z
+#addNotify()V
+#removeNotify()V

+###org/openide/filesystems/annotations/LayerBuilder$File
@RELEASE90
+#getPath()Ljava/lang/String;
+#contents(Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#url(Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#stringvalue(Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#bytevalue(Ljava/lang/String;B)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#shortvalue(Ljava/lang/String;S)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#intvalue(Ljava/lang/String;I)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#longvalue(Ljava/lang/String;J)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#floatvalue(Ljava/lang/String;F)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#doublevalue(Ljava/lang/String;D)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#boolvalue(Ljava/lang/String;Z)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#charvalue(Ljava/lang/String;C)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#urlvalue(Ljava/lang/String;Ljava/net/URI;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#urlvalue(Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#methodvalue(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#newvalue(Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#instanceAttribute(Ljava/lang/String;Ljava/lang/Class;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#instanceAttribute(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#bundlevalue(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#bundlevalue(Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#bundlevalue(Ljava/lang/String;Ljava/lang/String;Ljava/lang/annotation/Annotation;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#serialvalue(Ljava/lang/String;[B)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#position(I)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#write()Lorg/openide/filesystems/annotations/LayerBuilder;

+###org/openide/filesystems/annotations/LayerBuilder
@RELEASE90
+#file(Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#folder(Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#instanceFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#instanceFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#instanceFile(Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#instanceFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/annotation/Annotation;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#shadowFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/openide/filesystems/annotations/LayerBuilder$File;
+#validateResource(Ljava/lang/String;Ljavax/lang/model/element/Element;Ljava/lang/annotation/Annotation;Ljava/lang/String;Z)Ljavax/tools/FileObject;
+#absolutizeResource(Ljavax/lang/model/element/Element;Ljava/lang/String;)Ljava/lang/String;

+###org/openide/filesystems/annotations/LayerGeneratingProcessor
@RELEASE90
+#process(Ljava/util/Set;Ljavax/annotation/processing/RoundEnvironment;)Z
@RELEASE113
+#getSupportedSourceVersion()Ljavax/lang/model/SourceVersion;

+###org/openide/filesystems/annotations/LayerGenerationException
@RELEASE90
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljavax/lang/model/element/Element;)V
+#<init>(Ljava/lang/String;Ljavax/lang/model/element/Element;Ljavax/lang/model/element/AnnotationMirror;)V
+#<init>(Ljava/lang/String;Ljavax/lang/model/element/Element;Ljavax/lang/model/element/AnnotationMirror;Ljavax/lang/model/element/AnnotationValue;)V
+#<init>(Ljava/lang/String;Ljavax/lang/model/element/Element;Ljavax/annotation/processing/ProcessingEnvironment;Ljava/lang/annotation/Annotation;)V
+#<init>(Ljava/lang/String;Ljavax/lang/model/element/Element;Ljavax/annotation/processing/ProcessingEnvironment;Ljava/lang/annotation/Annotation;Ljava/lang/String;)V

+###org/openide/filesystems/spi/ArchiveRootProvider
@RELEASE90
+#isArchiveFile(Ljava/net/URL;Z)Z
+#isArchiveFile(Lorg/openide/filesystems/FileObject;Z)Z
+#isArchiveArtifact(Ljava/net/URL;)Z
+#isArchiveArtifact(Lorg/openide/filesystems/FileObject;)Z
+#getArchiveFile(Ljava/net/URL;)Ljava/net/URL;
+#getArchiveFile(Lorg/openide/filesystems/FileObject;)Lorg/openide/filesystems/FileObject;
+#getArchiveRoot(Ljava/net/URL;)Ljava/net/URL;
+#getArchiveRoot(Lorg/openide/filesystems/FileObject;)Lorg/openide/filesystems/FileObject;

+###org/openide/filesystems/spi/CustomInstanceFactory
@RELEASE90
+#createInstance(Ljava/lang/Class;)Ljava/lang/Object;
