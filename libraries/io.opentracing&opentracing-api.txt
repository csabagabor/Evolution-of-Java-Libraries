
+###io/opentracing/tag/IntTag
@0.2.0
+#set(Lio/opentracing/Span;Ljava/lang/Integer;)V
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V
@0.20.8
+#<init>(Ljava/lang/String;)V
@0.30.0.RC3
+#set(Lio/opentracing/BaseSpan;Ljava/lang/Integer;)V
+#set(Lio/opentracing/BaseSpan;Ljava/lang/Object;)V
-#set(Lio/opentracing/Span;Ljava/lang/Integer;)V
-#set(Lio/opentracing/Span;Ljava/lang/Object;)V
@0.31.0-RC1
+#set(Lio/opentracing/Span;Ljava/lang/Integer;)V
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V
-#set(Lio/opentracing/BaseSpan;Ljava/lang/Integer;)V
-#set(Lio/opentracing/BaseSpan;Ljava/lang/Object;)V

+###io/opentracing/tag/IntOrStringTag
@0.31.0-RC1
+#<init>(Ljava/lang/String;)V
+#set(Lio/opentracing/Span;Ljava/lang/String;)V

+###io/opentracing/tag/BooleanTag
@0.2.0
+#set(Lio/opentracing/Span;Ljava/lang/Boolean;)V
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V
@0.20.8
+#<init>(Ljava/lang/String;)V
@0.30.0.RC3
+#set(Lio/opentracing/BaseSpan;Ljava/lang/Boolean;)V
+#set(Lio/opentracing/BaseSpan;Ljava/lang/Object;)V
-#set(Lio/opentracing/Span;Ljava/lang/Boolean;)V
-#set(Lio/opentracing/Span;Ljava/lang/Object;)V
@0.31.0-RC1
+#set(Lio/opentracing/Span;Ljava/lang/Boolean;)V
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V
-#set(Lio/opentracing/BaseSpan;Ljava/lang/Boolean;)V
-#set(Lio/opentracing/BaseSpan;Ljava/lang/Object;)V

+###io/opentracing/tag/Tags
@0.2.0

+###io/opentracing/tag/StringTag
@0.2.0
+#set(Lio/opentracing/Span;Ljava/lang/String;)V
+#set(Lio/opentracing/Span;Lio/opentracing/tag/StringTag;)V
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V
@0.20.8
+#<init>(Ljava/lang/String;)V
@0.30.0.RC3
+#set(Lio/opentracing/BaseSpan;Ljava/lang/String;)V
+#set(Lio/opentracing/BaseSpan;Lio/opentracing/tag/StringTag;)V
+#set(Lio/opentracing/BaseSpan;Ljava/lang/Object;)V
-#set(Lio/opentracing/Span;Ljava/lang/String;)V
-#set(Lio/opentracing/Span;Lio/opentracing/tag/StringTag;)V
-#set(Lio/opentracing/Span;Ljava/lang/Object;)V
@0.31.0-RC1
+#set(Lio/opentracing/Span;Ljava/lang/String;)V
+#set(Lio/opentracing/Span;Lio/opentracing/tag/StringTag;)V
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V
-#set(Lio/opentracing/BaseSpan;Ljava/lang/String;)V
-#set(Lio/opentracing/BaseSpan;Lio/opentracing/tag/StringTag;)V
-#set(Lio/opentracing/BaseSpan;Ljava/lang/Object;)V
@0.32.0-RC1
*#set(Lio/opentracing/Span;Lio/opentracing/tag/StringTag;)V[deprecated]
@0.33.0
-#set(Lio/opentracing/Span;Lio/opentracing/tag/StringTag;)V[deprecated]

+###io/opentracing/Span
@0.2.0
+#finish()V
+#close()V
+#setTag(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Span;
+#setTag(Ljava/lang/String;Z)Lio/opentracing/Span;
+#setTag(Ljava/lang/String;Ljava/lang/Number;)Lio/opentracing/Span;
+#setBaggageItem(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Span;
+#getBaggageItem(Ljava/lang/String;)Ljava/lang/String;
+#log(Ljava/lang/String;Ljava/lang/Object;)Lio/opentracing/Span;
+#log(JLjava/lang/String;Ljava/lang/Object;)Lio/opentracing/Span;
@0.9.0
+#context()Lio/opentracing/SpanContext;
-#setBaggageItem(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Span;
-#getBaggageItem(Ljava/lang/String;)Ljava/lang/String;
@0.12.0
+#finish(J)V
@0.13.0
+#setBaggageItem(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Span;
+#getBaggageItem(Ljava/lang/String;)Ljava/lang/String;
@0.15.0
+#setOperationName(Ljava/lang/String;)Lio/opentracing/Span;
@0.16.0
+#log(Ljava/util/Map;)Lio/opentracing/Span;
+#log(JLjava/util/Map;)Lio/opentracing/Span;
+#log(Ljava/lang/String;)Lio/opentracing/Span;
+#log(JLjava/lang/String;)Lio/opentracing/Span;
@0.30.0.RC2
-#context()Lio/opentracing/SpanContext;
-#close()V
-#setTag(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Span;
-#setTag(Ljava/lang/String;Z)Lio/opentracing/Span;
-#setTag(Ljava/lang/String;Ljava/lang/Number;)Lio/opentracing/Span;
-#log(Ljava/util/Map;)Lio/opentracing/Span;
-#log(JLjava/util/Map;)Lio/opentracing/Span;
-#log(Ljava/lang/String;)Lio/opentracing/Span;
-#log(JLjava/lang/String;)Lio/opentracing/Span;
-#setBaggageItem(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Span;
-#getBaggageItem(Ljava/lang/String;)Ljava/lang/String;
-#setOperationName(Ljava/lang/String;)Lio/opentracing/Span;
-#log(Ljava/lang/String;Ljava/lang/Object;)Lio/opentracing/Span;
-#log(JLjava/lang/String;Ljava/lang/Object;)Lio/opentracing/Span;
@0.31.0-RC1
+#context()Lio/opentracing/SpanContext;
+#setTag(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Span;
+#setTag(Ljava/lang/String;Z)Lio/opentracing/Span;
+#setTag(Ljava/lang/String;Ljava/lang/Number;)Lio/opentracing/Span;
+#log(Ljava/util/Map;)Lio/opentracing/Span;
+#log(JLjava/util/Map;)Lio/opentracing/Span;
+#log(Ljava/lang/String;)Lio/opentracing/Span;
+#log(JLjava/lang/String;)Lio/opentracing/Span;
+#setBaggageItem(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Span;
+#getBaggageItem(Ljava/lang/String;)Ljava/lang/String;
+#setOperationName(Ljava/lang/String;)Lio/opentracing/Span;
@0.32.0-RC1
+#setTag(Lio/opentracing/tag/Tag;Ljava/lang/Object;)Lio/opentracing/Span;

+###io/opentracing/SpanContext
@0.9.0
+#setBaggageItem(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/SpanContext;
+#getBaggageItem(Ljava/lang/String;)Ljava/lang/String;
@0.13.0
+#baggageItems()Ljava/lang/Iterable;
-#setBaggageItem(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/SpanContext;
-#getBaggageItem(Ljava/lang/String;)Ljava/lang/String;
@0.32.0-RC1
+#toTraceId()Ljava/lang/String;
+#toSpanId()Ljava/lang/String;

+###io/opentracing/propagation/TextMapExtractAdapter
@0.10.0
+#<init>(Ljava/util/Map;)V
+#getEntries()Ljava/util/Iterator;
+#put(Ljava/lang/String;Ljava/lang/String;)V
@0.11.0
+#iterator()Ljava/util/Iterator;
-#getEntries()Ljava/util/Iterator;
@0.32.0-RC2
-#put(Ljava/lang/String;Ljava/lang/String;)V

+###io/opentracing/propagation/TextMap
@0.10.0
+#getEntries()Ljava/util/Iterator;
+#put(Ljava/lang/String;Ljava/lang/String;)V
@0.11.0
+#iterator()Ljava/util/Iterator;
-#getEntries()Ljava/util/Iterator;
@0.32.0-RC2
-#iterator()Ljava/util/Iterator;
-#put(Ljava/lang/String;Ljava/lang/String;)V

+###io/opentracing/propagation/Format$Builtin
@0.10.0
+#<init>()V
@0.20.10
+#toString()Ljava/lang/String;
-#<init>()V

+###io/opentracing/propagation/Format
@0.10.0

+###io/opentracing/propagation/TextMapInjectAdapter
@0.10.0
+#<init>(Ljava/util/Map;)V
+#getEntries()Ljava/util/Iterator;
+#put(Ljava/lang/String;Ljava/lang/String;)V
@0.11.0
+#iterator()Ljava/util/Iterator;
-#getEntries()Ljava/util/Iterator;
@0.32.0-RC2
-#iterator()Ljava/util/Iterator;

+###io/opentracing/Scope
@0.31.0-RC1
+#close()V
+#span()Lio/opentracing/Span;
@0.32.0-RC1
*#span()Lio/opentracing/Span;[deprecated]
@0.33.0
-#span()Lio/opentracing/Span;[deprecated]

+###io/opentracing/References
@0.9.0

+###io/opentracing/Tracer$SpanBuilder
@0.2.0
+#withOperationName(Ljava/lang/String;)Lio/opentracing/Tracer$SpanBuilder;
+#withParent(Lio/opentracing/Span;)Lio/opentracing/Tracer$SpanBuilder;
+#withTag(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/Tracer$SpanBuilder;
+#withTag(Ljava/lang/String;Z)Lio/opentracing/Tracer$SpanBuilder;
+#withTag(Ljava/lang/String;Ljava/lang/Number;)Lio/opentracing/Tracer$SpanBuilder;
+#withStartTimestamp(J)Lio/opentracing/Tracer$SpanBuilder;
+#start()Lio/opentracing/Span;
@0.9.0
+#asChildOf(Lio/opentracing/SpanContext;)Lio/opentracing/Tracer$SpanBuilder;
+#addReference(Ljava/lang/String;Lio/opentracing/SpanContext;)Lio/opentracing/Tracer$SpanBuilder;
-#withOperationName(Ljava/lang/String;)Lio/opentracing/Tracer$SpanBuilder;
-#withParent(Lio/opentracing/Span;)Lio/opentracing/Tracer$SpanBuilder;
@0.9.1
+#asChildOf(Lio/opentracing/Span;)Lio/opentracing/Tracer$SpanBuilder;
@0.30.0.RC2
+#asChildOf(Lio/opentracing/BaseSpan;)Lio/opentracing/Tracer$SpanBuilder;
+#ignoreActiveSpan()Lio/opentracing/Tracer$SpanBuilder;
+#startActive()Lio/opentracing/ActiveSpan;
+#startManual()Lio/opentracing/Span;
*#start()Lio/opentracing/Span;[deprecated]
-#asChildOf(Lio/opentracing/Span;)Lio/opentracing/Tracer$SpanBuilder;
@0.31.0-RC1
+#asChildOf(Lio/opentracing/Span;)Lio/opentracing/Tracer$SpanBuilder;
+#startActive()Lio/opentracing/Scope;
+#startActive(Z)Lio/opentracing/Scope;
-#asChildOf(Lio/opentracing/BaseSpan;)Lio/opentracing/Tracer$SpanBuilder;
-#startActive()Lio/opentracing/ActiveSpan;
@0.31.0-RC2
*#startManual()Lio/opentracing/Span;[deprecated]
-#startActive()Lio/opentracing/Scope;
@0.32.0-RC1
+#withTag(Lio/opentracing/tag/Tag;Ljava/lang/Object;)Lio/opentracing/Tracer$SpanBuilder;
*#startActive(Z)Lio/opentracing/Scope;[deprecated]
@0.33.0
-#startManual()Lio/opentracing/Span;[deprecated]
-#startActive(Z)Lio/opentracing/Scope;[deprecated]

+###io/opentracing/Tracer
@0.2.0
+#buildSpan(Ljava/lang/String;)Lio/opentracing/Tracer$SpanBuilder;
+#inject(Lio/opentracing/Span;Ljava/lang/Object;)V
+#join(Ljava/lang/Object;)Lio/opentracing/Tracer$SpanBuilder;
@0.9.0
+#inject(Lio/opentracing/SpanContext;Ljava/lang/Object;)V
+#extract(Ljava/lang/Object;)Lio/opentracing/SpanContext;
-#inject(Lio/opentracing/Span;Ljava/lang/Object;)V
-#join(Ljava/lang/Object;)Lio/opentracing/Tracer$SpanBuilder;
@0.10.0
+#inject(Lio/opentracing/SpanContext;Lio/opentracing/propagation/Format;Ljava/lang/Object;)V
+#extract(Lio/opentracing/propagation/Format;Ljava/lang/Object;)Lio/opentracing/SpanContext;
-#inject(Lio/opentracing/SpanContext;Ljava/lang/Object;)V
-#extract(Ljava/lang/Object;)Lio/opentracing/SpanContext;
@0.31.0-RC1
+#scopeManager()Lio/opentracing/ScopeManager;
@0.31.0-RC2
+#activeSpan()Lio/opentracing/Span;
@0.32.0-RC1
+#activateSpan(Lio/opentracing/Span;)Lio/opentracing/Scope;
@0.32.0
+#close()V

+###io/opentracing/ScopeManager
@0.31.0-RC1
+#activate(Lio/opentracing/Span;)Lio/opentracing/Scope;
+#activate(Lio/opentracing/Span;Z)Lio/opentracing/Scope;
+#active()Lio/opentracing/Scope;
@0.31.0-RC2
-#activate(Lio/opentracing/Span;)Lio/opentracing/Scope;
@0.32.0-RC1
+#activate(Lio/opentracing/Span;)Lio/opentracing/Scope;
+#activeSpan()Lio/opentracing/Span;
*#activate(Lio/opentracing/Span;Z)Lio/opentracing/Scope;[deprecated]
@0.32.0-RC2
*#active()Lio/opentracing/Scope;[deprecated]
@0.33.0
-#active()Lio/opentracing/Scope;[deprecated]
-#activate(Lio/opentracing/Span;Z)Lio/opentracing/Scope;[deprecated]

+###io/opentracing/log/Fields
@0.31.0-RC1

+###io/opentracing/tag/AbstractTag
@0.2.0
+#getKey()Ljava/lang/String;
@0.20.8
+#<init>(Ljava/lang/String;)V
@0.32.0-RC1
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V

+###io/opentracing/tag/ShortTag
@0.2.0
+#set(Lio/opentracing/Span;Ljava/lang/Short;)V
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V
@0.20.8
+#<init>(Ljava/lang/String;)V
@0.30.0.RC3
+#set(Lio/opentracing/BaseSpan;Ljava/lang/Short;)V
+#set(Lio/opentracing/BaseSpan;Ljava/lang/Object;)V
-#set(Lio/opentracing/Span;Ljava/lang/Short;)V
-#set(Lio/opentracing/Span;Ljava/lang/Object;)V
@0.31.0-RC1
-###io/opentracing/tag/ShortTag

+###io/opentracing/tag/Tag
@0.32.0-RC1
+#getKey()Ljava/lang/String;
+#set(Lio/opentracing/Span;Ljava/lang/Object;)V

+###io/opentracing/propagation/BinaryExtract
@0.32.0-RC2
+#extractionBuffer()Ljava/nio/ByteBuffer;

+###io/opentracing/propagation/BinaryInject
@0.32.0-RC2
+#injectionBuffer(I)Ljava/nio/ByteBuffer;

+###io/opentracing/propagation/BinaryAdapters
@0.32.0-RC1
+#extractionCarrier(Ljava/nio/ByteBuffer;)Lio/opentracing/propagation/Binary;
+#injectionCarrier(Ljava/nio/ByteBuffer;)Lio/opentracing/propagation/Binary;
@0.32.0-RC2
+#extractionCarrier(Ljava/nio/ByteBuffer;)Lio/opentracing/propagation/BinaryExtract;
+#injectionCarrier(Ljava/nio/ByteBuffer;)Lio/opentracing/propagation/BinaryInject;
-#extractionCarrier(Ljava/nio/ByteBuffer;)Lio/opentracing/propagation/Binary;
-#injectionCarrier(Ljava/nio/ByteBuffer;)Lio/opentracing/propagation/Binary;

+###io/opentracing/propagation/TextMapInject
@0.32.0-RC2
+#put(Ljava/lang/String;Ljava/lang/String;)V

+###io/opentracing/propagation/Binary
@0.31.0-RC2
+#write(Ljava/nio/ByteBuffer;)I
+#read(Ljava/nio/ByteBuffer;)I
@0.31.0
-###io/opentracing/propagation/Binary

+###io/opentracing/propagation/TextMapAdapter
@0.32.0-RC2
+#<init>(Ljava/util/Map;)V
+#put(Ljava/lang/String;Ljava/lang/String;)V

+###io/opentracing/propagation/TextMapExtract
@0.32.0-RC2
+#iterator()Ljava/util/Iterator;

+###io/opentracing/propagation/Adapters
@0.31.0-RC2
+#injectBinary(Ljava/io/OutputStream;)Lio/opentracing/propagation/Binary;
+#injectBinary(Ljava/nio/channels/WritableByteChannel;)Lio/opentracing/propagation/Binary;
+#extractBinary(Ljava/io/InputStream;)Lio/opentracing/propagation/Binary;
+#extractBinary(Ljava/nio/channels/ReadableByteChannel;)Lio/opentracing/propagation/Binary;
@0.31.0
-###io/opentracing/propagation/Adapters

+###io/opentracing/propagation/HttpHeaderReader
@0.9.0
+#getEntries()Ljava/util/Iterator;
@0.10.0
-###io/opentracing/propagation/HttpHeaderReader

+###io/opentracing/propagation/TextMapReader
@0.2.0
+#getEntries()Ljava/lang/Iterable;
@0.9.0
+#getEntries()Ljava/util/Iterator;
-#getEntries()Ljava/lang/Iterable;
@0.10.0
-###io/opentracing/propagation/TextMapReader

+###io/opentracing/propagation/TextMapWriter
@0.2.0
+#put(Ljava/lang/String;Ljava/lang/String;)V
@0.10.0
-###io/opentracing/propagation/TextMapWriter

+###io/opentracing/propagation/HttpHeaderWriter
@0.9.0
+#put(Ljava/lang/String;Ljava/lang/String;)V
@0.10.0
-###io/opentracing/propagation/HttpHeaderWriter

+###io/opentracing/BaseSpan
@0.30.0.RC2
+#context()Lio/opentracing/SpanContext;
+#setTag(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/BaseSpan;
+#setTag(Ljava/lang/String;Z)Lio/opentracing/BaseSpan;
+#setTag(Ljava/lang/String;Ljava/lang/Number;)Lio/opentracing/BaseSpan;
+#log(Ljava/util/Map;)Lio/opentracing/BaseSpan;
+#log(JLjava/util/Map;)Lio/opentracing/BaseSpan;
+#log(Ljava/lang/String;)Lio/opentracing/BaseSpan;
+#log(JLjava/lang/String;)Lio/opentracing/BaseSpan;
+#setBaggageItem(Ljava/lang/String;Ljava/lang/String;)Lio/opentracing/BaseSpan;
+#getBaggageItem(Ljava/lang/String;)Ljava/lang/String;
+#setOperationName(Ljava/lang/String;)Lio/opentracing/BaseSpan;
+#log(Ljava/lang/String;Ljava/lang/Object;)Lio/opentracing/BaseSpan;[deprecated]
+#log(JLjava/lang/String;Ljava/lang/Object;)Lio/opentracing/BaseSpan;[deprecated]
@0.31.0-RC1
-###io/opentracing/BaseSpan

+###io/opentracing/ActiveSpan$Continuation
@0.30.0.RC2
+#activate()Lio/opentracing/ActiveSpan;
@0.31.0-RC1
-###io/opentracing/ActiveSpan$Continuation

+###io/opentracing/ActiveSpan
@0.30.0.RC2
+#deactivate()V
+#close()V
+#capture()Lio/opentracing/ActiveSpan$Continuation;
@0.31.0-RC1
-###io/opentracing/ActiveSpan

+###io/opentracing/ActiveSpanSource
@0.30.0.RC2
+#activeSpan()Lio/opentracing/ActiveSpan;
+#makeActive(Lio/opentracing/Span;)Lio/opentracing/ActiveSpan;
@0.31.0-RC1
-###io/opentracing/ActiveSpanSource

+###io/opentracing/propagation/BinaryReader
@0.2.0
@0.9.0
-###io/opentracing/propagation/BinaryReader

+###io/opentracing/propagation/BinaryWriter
@0.2.0
@0.9.0
-###io/opentracing/propagation/BinaryWriter
