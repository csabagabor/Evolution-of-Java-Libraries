
+###reactor/core/Scannable$Attr
@3.0.6.RELEASE
+#values()[Lreactor/core/Scannable$Attr;
+#valueOf(Ljava/lang/String;)Lreactor/core/Scannable$Attr;
@3.1.0.RELEASE
+#defaultValue()Ljava/lang/Object;
-#values()[Lreactor/core/Scannable$Attr;
-#valueOf(Ljava/lang/String;)Lreactor/core/Scannable$Attr;

+###reactor/core/scheduler/Scheduler
@2.5.0.M3
+#schedule(Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
+#createWorker()Lreactor/core/scheduler/Scheduler$Worker;
+#start()V
+#shutdown()V
@3.0.0.RC1
+#schedule(Ljava/lang/Runnable;)Lreactor/core/Cancellation;
-#schedule(Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
@3.0.4.RELEASE
+#dispose()V
*#shutdown()V[deprecated]
@3.0.6.RELEASE
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
+#now(Ljava/util/concurrent/TimeUnit;)J
@3.1.0.RELEASE
+#schedule(Ljava/lang/Runnable;)Lreactor/core/Disposable;
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
-#schedule(Ljava/lang/Runnable;)Lreactor/core/Cancellation;
-#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#shutdown()V[deprecated]
@3.4.23
+#disposeGracefully()Lreactor/core/publisher/Mono;
@3.4.25
*#start()V[deprecated]
+#init()V

+###reactor/core/scheduler/Schedulers$Factory
@3.0.0.RELEASE
+#newElastic(ILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
+#newParallel(ILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
+#newSingle(Ljava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
+#newTimer(Ljava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/TimedScheduler;
@3.0.5.RELEASE
+#decorateExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ExecutorService;
+#decorateScheduledExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;
@3.1.0.RELEASE
+#decorateExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;
-#decorateExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ExecutorService;
-#decorateScheduledExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;
-#newTimer(Ljava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/TimedScheduler;
@3.2.3.RELEASE
*#decorateExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;[deprecated]
@3.3.0.RELEASE
+#newBoundedElastic(IILjava/util/concurrent/ThreadFactory;I)Lreactor/core/scheduler/Scheduler;
-#decorateExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;[deprecated]
@3.4.0
*#newElastic(ILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;[deprecated]
@3.5.0
-#newElastic(ILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;[deprecated]

+###reactor/core/scheduler/NonBlocking
@3.1.6.RELEASE

+###reactor/core/scheduler/Schedulers
@2.5.0.M4
+#<init>()V
+#computation()Lreactor/core/scheduler/Scheduler;
+#fromExecutor(Ljava/util/concurrent/Executor;)Lreactor/core/scheduler/Scheduler;
+#fromExecutor(Ljava/util/concurrent/Executor;Z)Lreactor/core/scheduler/Scheduler;
+#fromExecutorService(Ljava/util/concurrent/ExecutorService;)Lreactor/core/scheduler/Scheduler;
+#elastic()Lreactor/core/scheduler/Scheduler;
+#immediate()Lreactor/core/scheduler/Scheduler;
+#newComputation(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
+#newComputation(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;
+#newComputation(Ljava/lang/String;II)Lreactor/core/scheduler/Scheduler;
+#newComputation(Ljava/lang/String;IZ)Lreactor/core/scheduler/Scheduler;
+#newComputation(Ljava/lang/String;IIZ)Lreactor/core/scheduler/Scheduler;
+#newComputation(IILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
+#newElastic(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
+#newElastic(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;
+#newElastic(Ljava/lang/String;IZ)Lreactor/core/scheduler/Scheduler;
+#newElastic(ILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
+#newParallel(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
+#newParallel(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;
+#newParallel(Ljava/lang/String;IZ)Lreactor/core/scheduler/Scheduler;
+#newParallel(ILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
+#newSingle(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
+#newSingle(Ljava/lang/String;Z)Lreactor/core/scheduler/Scheduler;
+#newSingle(Ljava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
+#newTimer(Ljava/lang/String;)Lreactor/core/scheduler/TimedScheduler;
+#newTimer(Ljava/lang/String;I)Lreactor/core/scheduler/TimedScheduler;
+#newTimer(Ljava/lang/String;II)Lreactor/core/scheduler/TimedScheduler;
+#parallel()Lreactor/core/scheduler/Scheduler;
+#setComputationFactory(Ljava/lang/Class;)V
+#shutdownNow()V
+#single()Lreactor/core/scheduler/Scheduler;
+#single(Lreactor/core/scheduler/Scheduler;)Lreactor/core/scheduler/Scheduler;
+#timer()Lreactor/core/scheduler/TimedScheduler;
@3.0.0.RC1
+#newTimer(Ljava/lang/String;Z)Lreactor/core/scheduler/TimedScheduler;
+#newTimer(Ljava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/TimedScheduler;
-#newTimer(Ljava/lang/String;I)Lreactor/core/scheduler/TimedScheduler;
-#newTimer(Ljava/lang/String;II)Lreactor/core/scheduler/TimedScheduler;
@3.0.0.RELEASE
+#resetFactory()V
+#setFactory(Lreactor/core/scheduler/Schedulers$Factory;)V
-#computation()Lreactor/core/scheduler/Scheduler;
-#newComputation(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
-#newComputation(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;
-#newComputation(Ljava/lang/String;II)Lreactor/core/scheduler/Scheduler;
-#newComputation(Ljava/lang/String;IZ)Lreactor/core/scheduler/Scheduler;
-#newComputation(Ljava/lang/String;IIZ)Lreactor/core/scheduler/Scheduler;
-#newComputation(IILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
-#setComputationFactory(Ljava/lang/Class;)V
@3.0.1.RELEASE
+#fromExecutorService(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/scheduler/Scheduler;
@3.0.4.RELEASE
+#onHandleError(Ljava/util/function/BiConsumer;)V
+#resetOnHandleError()V
@3.0.5.RELEASE
+#decorateExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ExecutorService;
+#decorateScheduledExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;
@3.0.6.RELEASE
*#newTimer(Ljava/lang/String;)Lreactor/core/scheduler/TimedScheduler;[deprecated]
*#newTimer(Ljava/lang/String;Z)Lreactor/core/scheduler/TimedScheduler;[deprecated]
*#newTimer(Ljava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/TimedScheduler;[deprecated]
*#timer()Lreactor/core/scheduler/TimedScheduler;[deprecated]
@3.1.0.RELEASE
-#fromExecutorService(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/scheduler/Scheduler;
-#newTimer(Ljava/lang/String;)Lreactor/core/scheduler/TimedScheduler;[deprecated]
-#newTimer(Ljava/lang/String;Z)Lreactor/core/scheduler/TimedScheduler;[deprecated]
-#newTimer(Ljava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/TimedScheduler;[deprecated]
-#timer()Lreactor/core/scheduler/TimedScheduler;[deprecated]
-#decorateExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ExecutorService;
-#decorateScheduledExecutorService(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;
@3.1.6.RELEASE
+#isInNonBlockingThread()Z
+#isNonBlockingThread(Ljava/lang/Thread;)Z
@3.2.3.RELEASE
+#enableMetrics()V
+#disableMetrics()V
+#addExecutorServiceDecorator(Ljava/lang/String;Ljava/util/function/BiFunction;)Z
+#setExecutorServiceDecorator(Ljava/lang/String;Ljava/util/function/BiFunction;)V
+#removeExecutorServiceDecorator(Ljava/lang/String;)Ljava/util/function/BiFunction;
+#decorateExecutorService(Lreactor/core/scheduler/Scheduler;Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;
@3.2.11.RELEASE
+#fromExecutorService(Ljava/util/concurrent/ExecutorService;Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
@3.3.0.RELEASE
+#boundedElastic()Lreactor/core/scheduler/Scheduler;
+#newBoundedElastic(IILjava/lang/String;)Lreactor/core/scheduler/Scheduler;
+#newBoundedElastic(IILjava/lang/String;I)Lreactor/core/scheduler/Scheduler;
+#newBoundedElastic(IILjava/lang/String;IZ)Lreactor/core/scheduler/Scheduler;
+#newBoundedElastic(IILjava/util/concurrent/ThreadFactory;I)Lreactor/core/scheduler/Scheduler;
+#onScheduleHook(Ljava/lang/String;Ljava/util/function/Function;)V
+#resetOnScheduleHook(Ljava/lang/String;)V
+#resetOnScheduleHooks()V
+#onSchedule(Ljava/lang/Runnable;)Ljava/lang/Runnable;
@3.4.0
*#elastic()Lreactor/core/scheduler/Scheduler;[deprecated]
*#newElastic(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;[deprecated]
*#newElastic(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;[deprecated]
*#newElastic(Ljava/lang/String;IZ)Lreactor/core/scheduler/Scheduler;[deprecated]
*#newElastic(ILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;[deprecated]
+#setFactoryWithSnapshot(Lreactor/core/scheduler/Schedulers$Factory;)Lreactor/core/scheduler/Schedulers$Snapshot;
+#resetFrom(Lreactor/core/scheduler/Schedulers$Snapshot;)V
@3.4.19
+#onHandleError(Ljava/lang/String;Ljava/util/function/BiConsumer;)V
+#resetOnHandleError(Ljava/lang/String;)V
@3.5.0
*#enableMetrics()V[deprecated]
*#disableMetrics()V[deprecated]
-#elastic()Lreactor/core/scheduler/Scheduler;[deprecated]
-#newElastic(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;[deprecated]
-#newElastic(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;[deprecated]
-#newElastic(Ljava/lang/String;IZ)Lreactor/core/scheduler/Scheduler;[deprecated]
-#newElastic(ILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;[deprecated]

+###reactor/core/scheduler/Scheduler$Worker
@2.5.0.M3
+#schedule(Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
+#shutdown()V
@3.0.0.RC1
+#schedule(Ljava/lang/Runnable;)Lreactor/core/Cancellation;
-#schedule(Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
@3.0.4.RELEASE
*#shutdown()V[deprecated]
+#dispose()V
@3.0.6.RELEASE
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
@3.1.0.RELEASE
+#schedule(Ljava/lang/Runnable;)Lreactor/core/Disposable;
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
-#schedule(Ljava/lang/Runnable;)Lreactor/core/Cancellation;
-#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#shutdown()V[deprecated]
-#dispose()V

+###reactor/core/Fuseable$ConditionalSubscriber
@3.0.0.RC1
+#tryOnNext(Ljava/lang/Object;)Z

+###reactor/core/Fuseable
@3.0.0.RC1
@3.4.7
+#fusionModeName(I)Ljava/lang/String;
+#fusionModeName(IZ)Ljava/lang/String;

+###reactor/core/Disposable$Swap
@3.1.0.RELEASE
+#update(Lreactor/core/Disposable;)Z
+#replace(Lreactor/core/Disposable;)Z

+###reactor/core/Fuseable$SynchronousSubscription
@3.0.0.RC1
+#requestFusion(I)I

+###reactor/core/Fuseable$ScalarCallable
@3.0.0.RC1
+#call()Ljava/lang/Object;
@3.1.0.RELEASE
-#call()Ljava/lang/Object;

+###reactor/core/Scannable
@3.0.6.RELEASE
+#from(Ljava/lang/Object;)Lreactor/core/Scannable;
+#actuals()Ljava/util/stream/Stream;
+#inners()Ljava/util/stream/Stream;
+#isScanAvailable()Z
+#parents()Ljava/util/stream/Stream;
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#scan(Lreactor/core/Scannable$Attr;Ljava/lang/Class;)Ljava/lang/Object;
+#scanOrDefault(Lreactor/core/Scannable$Attr;Ljava/lang/Object;)Ljava/lang/Object;
@3.1.0.RELEASE
+#name()Ljava/lang/String;
+#operatorName()Ljava/lang/String;
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#tags()Ljava/util/stream/Stream;
-#scan(Lreactor/core/Scannable$Attr;Ljava/lang/Class;)Ljava/lang/Object;
@3.2.0.RELEASE
+#stepName()Ljava/lang/String;
+#steps()Ljava/util/stream/Stream;
-#operatorName()Ljava/lang/String;
@3.5.0
+#tagsDeduplicated()Ljava/util/Map;

+###reactor/core/publisher/Hooks
@3.0.0.RELEASE
+#onErrorDropped(Ljava/util/function/Consumer;)V
+#onNextDropped(Ljava/util/function/Consumer;)V
+#onOperator(Ljava/util/function/Function;)V
+#onOperatorError(Ljava/util/function/BiFunction;)V
+#resetOnErrorDropped()V
+#resetOnNextDropped()V
+#resetOnOperator()V
+#resetOnOperatorError()V
@3.1.0.RELEASE
+#onEachOperator(Ljava/util/function/Function;)V
+#onEachOperator(Ljava/lang/String;Ljava/util/function/Function;)V
+#resetOnEachOperator(Ljava/lang/String;)V
+#resetOnEachOperator()V
+#onLastOperator(Ljava/util/function/Function;)V
+#onLastOperator(Ljava/lang/String;Ljava/util/function/Function;)V
+#resetOnLastOperator(Ljava/lang/String;)V
+#resetOnLastOperator()V
+#onNextDroppedFail()V
+#onOperatorDebug()V
+#resetOnOperatorDebug()V
+#onOperatorError(Ljava/lang/String;Ljava/util/function/BiFunction;)V
+#resetOnOperatorError(Ljava/lang/String;)V
-#onOperator(Ljava/util/function/Function;)V
-#resetOnOperator()V
@3.2.0.RELEASE
+#onNextError(Ljava/util/function/BiFunction;)V
+#resetOnNextError()V
@3.2.17.RELEASE
+#convertToFluxBypassingHooks(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#convertToMonoBypassingHooks(Lorg/reactivestreams/Publisher;Z)Lreactor/core/publisher/Mono;
@3.3.0.RELEASE
+#addReturnInfo(Lorg/reactivestreams/Publisher;Ljava/lang/String;)Lorg/reactivestreams/Publisher;[deprecated]
+#addCallSiteInfo(Lorg/reactivestreams/Publisher;Ljava/lang/String;)Lorg/reactivestreams/Publisher;[deprecated]
-#convertToFluxBypassingHooks(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#convertToMonoBypassingHooks(Lorg/reactivestreams/Publisher;Z)Lreactor/core/publisher/Mono;
@3.3.1.RELEASE
+#enableContextLossTracking()V
+#disableContextLossTracking()V
@3.3.5.RELEASE
+#convertToFluxBypassingHooks(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#convertToMonoBypassingHooks(Lorg/reactivestreams/Publisher;Z)Lreactor/core/publisher/Mono;
@3.3.14.RELEASE
+#addQueueWrapper(Ljava/lang/String;Ljava/util/function/Function;)V
+#removeQueueWrapper(Ljava/lang/String;)V
+#removeQueueWrappers()V
+#wrapQueue(Ljava/util/Queue;)Ljava/util/Queue;
@3.4.0
-#addQueueWrapper(Ljava/lang/String;Ljava/util/function/Function;)V
-#removeQueueWrapper(Ljava/lang/String;)V
-#removeQueueWrappers()V
-#wrapQueue(Ljava/util/Queue;)Ljava/util/Queue;
@3.4.3
+#addQueueWrapper(Ljava/lang/String;Ljava/util/function/Function;)V
+#removeQueueWrapper(Ljava/lang/String;)V
+#removeQueueWrappers()V
+#wrapQueue(Ljava/util/Queue;)Ljava/util/Queue;
@3.5.3
+#enableAutomaticContextPropagation()V
+#disableAutomaticContextPropagation()V

+###reactor/core/publisher/SynchronousSink
@3.0.0.RC1
+#complete()V
+#fail(Ljava/lang/Throwable;)V
+#next(Ljava/lang/Object;)V
@3.0.0.RELEASE
+#error(Ljava/lang/Throwable;)V
-#fail(Ljava/lang/Throwable;)V
@3.1.0.RELEASE
+#currentContext()Lreactor/util/context/Context;
@3.4.17
*#currentContext()Lreactor/util/context/Context;[deprecated]
+#contextView()Lreactor/util/context/ContextView;

+###reactor/core/publisher/OnNextFailureStrategy$ResumeDropStrategy
@3.2.0.RELEASE
+#test(Ljava/lang/Throwable;Ljava/lang/Object;)Z
+#process(Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z

+###reactor/core/publisher/GroupedFlux
@2.5.0.M2
+#<init>()V
+#key()Ljava/lang/Object;

+###reactor/core/publisher/MonoProcessor
@2.5.0.M2
+#create()Lreactor/core/publisher/MonoProcessor;
+#cancel()V
+#downstream()Lorg/reactivestreams/Subscriber;
+#expectedFromUpstream()J
+#get(J)Ljava/lang/Object;
+#get(Ljava/time/Duration;)Ljava/lang/Object;
+#getError()Ljava/lang/Throwable;
+#getMode()I
+#getPending()J
+#isCancelled()Z
+#isError()Z
+#isStarted()Z
+#isSuccess()Z
+#isTerminated()Z
+#limit()J
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#onNext(Ljava/lang/Object;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#peek()Ljava/lang/Object;
+#request(J)V
+#run()V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#upstream()Ljava/lang/Object;
+#downstream()Ljava/lang/Object;
@2.5.0.M3
+#dispose()V
-#run()V
@2.5.0.M4
+#create(Lreactor/core/util/WaitStrategy;)Lreactor/core/publisher/MonoProcessor;
+#block(J)Ljava/lang/Object;
+#getAsLong()J
+#complete()V
+#complete(Ljava/lang/Object;)V
+#fail(Ljava/lang/Throwable;)V
+#setCancellation(Lreactor/core/flow/Cancellation;)V
-#get(J)Ljava/lang/Object;
-#get(Ljava/time/Duration;)Ljava/lang/Object;
@3.0.0.RC1
+#create(Lreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/MonoProcessor;
+#blockMillis(J)Ljava/lang/Object;
+#setCancellation(Lreactor/core/Cancellation;)V
-#create(Lreactor/core/util/WaitStrategy;)Lreactor/core/publisher/MonoProcessor;
-#block(J)Ljava/lang/Object;
-#getMode()I
-#setCancellation(Lreactor/core/flow/Cancellation;)V
@3.0.0.RELEASE
+#block()Ljava/lang/Object;
-#complete()V
-#complete(Ljava/lang/Object;)V
-#fail(Ljava/lang/Throwable;)V
-#setCancellation(Lreactor/core/Cancellation;)V
@3.0.3.RELEASE
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
+#hasDownstreams()Z
@3.0.4.RELEASE
+#isDisposed()Z
@3.0.6.RELEASE
+#block(Ljava/time/Duration;)Ljava/lang/Object;
-#blockMillis(J)Ljava/lang/Object;
@3.1.0.RELEASE
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#downstream()Lorg/reactivestreams/Subscriber;
-#expectedFromUpstream()J
-#getPending()J
-#isStarted()Z
-#limit()J
-#subscribe(Lorg/reactivestreams/Subscriber;)V
-#upstream()Ljava/lang/Object;
-#downstreams()Ljava/util/Iterator;
-#downstream()Ljava/lang/Object;
@3.1.7.RELEASE
+#inners()Ljava/util/stream/Stream;
+#currentContext()Lreactor/util/context/Context;
@3.3.0.RELEASE
-#create(Lreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/MonoProcessor;
-#getAsLong()J
@3.4.0
+#<init>()V
*#create()Lreactor/core/publisher/MonoProcessor;[deprecated]
*#cancel()V[deprecated]
*#isCancelled()Z[deprecated]
*#request(J)V[deprecated]
*#peek()Ljava/lang/Object;[deprecated]
-#onComplete()V
-#onError(Ljava/lang/Throwable;)V
-#onNext(Ljava/lang/Object;)V
-#onSubscribe(Lorg/reactivestreams/Subscription;)V
-#subscribe(Lreactor/core/CoreSubscriber;)V

+###reactor/core/publisher/ReplayProcessor
@2.5.0.M4
+#cacheLast()Lreactor/core/publisher/ReplayProcessor;
+#cacheLastOrDefault(Ljava/lang/Object;)Lreactor/core/publisher/ReplayProcessor;
+#create()Lreactor/core/publisher/ReplayProcessor;
+#create(I)Lreactor/core/publisher/ReplayProcessor;
+#create(IZ)Lreactor/core/publisher/ReplayProcessor;
+#<init>(IZ)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
+#getCapacity()J
+#isTerminated()Z
+#isStarted()Z
+#upstream()Ljava/lang/Object;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#connect()Lreactor/core/publisher/ReplayProcessor;
+#connect()Lreactor/core/publisher/FluxProcessor;
+#connect()Lreactor/core/subscriber/BaseSubscriber;
@3.0.0.RC1
+#getPrefetch()J
-#connect()Lreactor/core/subscriber/BaseSubscriber;
@3.0.0.RELEASE
+#serialize()Lreactor/core/publisher/FluxProcessor;
@3.0.1.RELEASE
+#createTimeout(Ljava/time/Duration;)Lreactor/core/publisher/ReplayProcessor;
+#createTimeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ReplayProcessor;
+#createSizeAndTimeout(ILjava/time/Duration;)Lreactor/core/publisher/ReplayProcessor;
+#createSizeAndTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ReplayProcessor;
-#serialize()Lreactor/core/publisher/FluxProcessor;
-#<init>(IZ)V
@3.0.6.RELEASE
+#createTimeout(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/ReplayProcessor;
*#createTimeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#createSizeAndTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ReplayProcessor;[deprecated]
+#createSizeAndTimeout(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/ReplayProcessor;
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#inners()Ljava/util/stream/Stream;
+#getBufferSize()I
-#downstreams()Ljava/util/Iterator;
-#getCapacity()J
@3.0.7.RELEASE
*#getBufferSize()I[deprecated]
*#isStarted()Z[deprecated]
*#connect()Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#connect()Lreactor/core/publisher/FluxProcessor;[deprecated]
@3.1.0.RELEASE
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#getError()Ljava/lang/Throwable;
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#getPrefetch()I
-#createTimeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ReplayProcessor;[deprecated]
-#createSizeAndTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ReplayProcessor;[deprecated]
-#subscribe(Lorg/reactivestreams/Subscriber;)V
-#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#upstream()Ljava/lang/Object;
-#getBufferSize()I[deprecated]
-#isStarted()Z[deprecated]
-#getPrefetch()J
-#connect()Lreactor/core/publisher/ReplayProcessor;[deprecated]
-#connect()Lreactor/core/publisher/FluxProcessor;[deprecated]
@3.1.7.RELEASE
+#currentContext()Lreactor/util/context/Context;
@3.4.0
+#tryEmitComplete()Lreactor/core/publisher/Sinks$EmitResult;
+#tryEmitError(Ljava/lang/Throwable;)Lreactor/core/publisher/Sinks$EmitResult;
+#tryEmitNext(Ljava/lang/Object;)Lreactor/core/publisher/Sinks$EmitResult;
+#currentSubscriberCount()I
+#asFlux()Lreactor/core/publisher/Flux;
@3.4.1
*#cacheLast()Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#cacheLastOrDefault(Ljava/lang/Object;)Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#create()Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#create(I)Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#create(IZ)Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#createTimeout(Ljava/time/Duration;)Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#createTimeout(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#createSizeAndTimeout(ILjava/time/Duration;)Lreactor/core/publisher/ReplayProcessor;[deprecated]
*#createSizeAndTimeout(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/ReplayProcessor;[deprecated]

+###reactor/core/publisher/TopicProcessor
@2.5.0.M1
+#create()Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/lang/String;)Lreactor/core/publisher/TopicProcessor;
+#create(Z)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/lang/String;I)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/lang/String;IZ)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Lreactor/fn/Supplier;)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#share()Lreactor/core/publisher/TopicProcessor;
+#share(Z)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;I)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;IZ)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILreactor/fn/Supplier;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Lreactor/fn/Supplier;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#drain()Lreactor/core/publisher/Flux;
+#onNext(Ljava/lang/Object;)V
+#isWork()Z
+#getPending()J
+#toString()Ljava/lang/String;
+#getAvailableCapacity()J
+#getCapacity()J
+#isStarted()Z
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
@2.5.0.M2
+#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILjava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Lreactor/fn/Supplier;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;ILreactor/fn/Supplier;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Lreactor/fn/Supplier;)Lreactor/core/publisher/TopicProcessor;
@2.5.0.M4
+#newComputation(IILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
+#run()V
-#onNext(Ljava/lang/Object;)V
-#isWork()Z
-#getCapacity()J
-#isStarted()Z
@3.0.0.RC1
+#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#newComputation(IILjava/util/concurrent/ThreadFactory;)Lreactor/core/scheduler/Scheduler;
-#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#toString()Ljava/lang/String;
@3.0.1.RELEASE
-#share()Lreactor/core/publisher/TopicProcessor;
@3.0.6.RELEASE
+#create(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#share(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
+#inners()Ljava/util/stream/Stream;
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#upstream()Lorg/reactivestreams/Subscription;
-#downstreams()Ljava/util/Iterator;
-#getAvailableCapacity()J
@3.0.7.RELEASE
+#isSerialized()Z
@3.1.0.RELEASE
+#builder()Lreactor/core/publisher/TopicProcessor$Builder;
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#create(Ljava/lang/String;)Lreactor/core/publisher/TopicProcessor;
-#create(Z)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/lang/String;IZ)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#create(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#share(Z)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;IZ)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;ILjava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#share(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/TopicProcessor;
-#subscribe(Lorg/reactivestreams/Subscriber;)V
-#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#upstream()Lorg/reactivestreams/Subscription;
@3.3.10.RELEASE
+#currentContext()Lreactor/util/context/Context;
@3.4.0
-###reactor/core/publisher/TopicProcessor

+###reactor/core/publisher/WorkQueueProcessor
@2.5.0.M1
+#create()Lreactor/core/publisher/WorkQueueProcessor;
+#create(Z)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/lang/String;)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/lang/String;I)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/lang/String;IZ)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#share()Lreactor/core/publisher/WorkQueueProcessor;
+#share(Z)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/lang/String;I)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/lang/String;IZ)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#drain()Lreactor/core/publisher/Flux;
+#onNext(Ljava/lang/Object;)V
+#isStarted()Z
+#getAvailableCapacity()J
+#toString()Ljava/lang/String;
+#getCapacity()J
+#isWork()Z
+#getPending()J
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
@2.5.0.M4
+#run()V
-#onNext(Ljava/lang/Object;)V
-#isStarted()Z
-#getCapacity()J
-#isWork()Z
@3.0.0.RC1
+#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/lang/String;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;ILreactor/core/util/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#toString()Ljava/lang/String;
@3.0.1.RELEASE
-#share()Lreactor/core/publisher/WorkQueueProcessor;
@3.0.6.RELEASE
+#create(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#share(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
+#inners()Ljava/util/stream/Stream;
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#upstream()Lorg/reactivestreams/Subscription;
-#downstreams()Ljava/util/Iterator;
-#getAvailableCapacity()J
@3.0.7.RELEASE
+#isSerialized()Z
@3.1.0.RELEASE
+#builder()Lreactor/core/publisher/WorkQueueProcessor$Builder;
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#create(Z)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/lang/String;)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/lang/String;IZ)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#create(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Z)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/lang/String;IZ)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/lang/String;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#share(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;Z)Lreactor/core/publisher/WorkQueueProcessor;
-#subscribe(Lorg/reactivestreams/Subscriber;)V
-#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#upstream()Lorg/reactivestreams/Subscription;
@3.3.10.RELEASE
+#currentContext()Lreactor/util/context/Context;
@3.4.0
-###reactor/core/publisher/WorkQueueProcessor

+###reactor/core/publisher/Flux
@2.5.0.M1
+#amb([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#amb(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#concat(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#concat(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#concat([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#create(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
+#create(Lreactor/fn/Consumer;Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#create(Lreactor/fn/Consumer;Lreactor/fn/Function;Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
+#dispatchOn(Lorg/reactivestreams/Publisher;Ljava/util/concurrent/Callable;ZILreactor/fn/Supplier;)Lreactor/core/publisher/Flux;
+#empty()Lreactor/core/publisher/Flux;
+#error(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
+#flatMap(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;IIZ)Lreactor/core/publisher/Flux;
+#from(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#fromArray([Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#fromIterable(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#fromTuple(Lreactor/fn/tuple/Tuple;)Lreactor/core/publisher/Flux;
+#generate(Lreactor/fn/BiConsumer;Lreactor/fn/Function;Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
+#interval(J)Lreactor/core/publisher/Flux;
+#interval(JLjava/util/concurrent/TimeUnit;)Lreactor/core/publisher/Flux;
+#interval(JLjava/util/concurrent/TimeUnit;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#just([Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#just(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#log(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/util/logging/Level;I)Lreactor/core/publisher/Flux;
+#mapSignal(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Supplier;)Lreactor/core/publisher/Flux;
+#merge(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#merge(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#merge([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#never()Lreactor/core/publisher/Flux;
+#onErrorResumeWith(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#publishOn(Lorg/reactivestreams/Publisher;Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Flux;
+#yield(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zip(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#zip(Ljava/lang/Iterable;Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#zip(Lreactor/fn/Function;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#as(Lreactor/fn/Function;)Lorg/reactivestreams/Publisher;
+#after()Lreactor/core/publisher/Mono;
+#ambWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#capacity(J)Lreactor/core/publisher/Flux;
+#concatMap(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#concatWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#debug()Lreactor/core/util/ReactiveStateUtils$Graph;
+#defaultIfEmpty(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#dispatchOn(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Flux;
+#doAfterTerminate(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
+#doOnCancel(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
+#doOnComplete(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
+#doOnError(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
+#doOnNext(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
+#doOnSubscribe(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
+#doOnTerminate(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
+#flatMap(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#flatMap(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Supplier;)Lreactor/core/publisher/Flux;
+#getName()Ljava/lang/String;
+#getMode()I
+#lift(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#log()Lreactor/core/publisher/Flux;
+#log(Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#log(Ljava/lang/String;Ljava/util/logging/Level;)Lreactor/core/publisher/Flux;
+#log(Ljava/lang/String;Ljava/util/logging/Level;I)Lreactor/core/publisher/Flux;
+#map(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#mergeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#next()Lreactor/core/publisher/Mono;
+#onErrorResumeWith(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#onErrorReturn(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#publishOn(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Flux;
+#switchOnError(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#switchIfEmpty(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#subscribe()Ljava/lang/Runnable;
+#subscribeWith(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
+#toIterable()Ljava/lang/Iterable;
+#toIterable(J)Ljava/lang/Iterable;
+#toIterable(JLreactor/fn/Supplier;)Ljava/lang/Iterable;
+#zipWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zipWith(Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/core/publisher/Flux;
@2.5.0.M2
+#combineLatest(Ljava/util/function/Function;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#combineLatest(Ljava/util/function/Function;I[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#combineLatest(Ljava/lang/Iterable;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#combineLatest(Ljava/lang/Iterable;ILjava/util/function/Function;)Lreactor/core/publisher/Flux;
+#concat(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Flux;
+#create(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#create(Ljava/util/function/Consumer;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#create(Ljava/util/function/Consumer;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#defer(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#error(Ljava/lang/Throwable;Z)Lreactor/core/publisher/Flux;
+#fromStream(Ljava/util/stream/Stream;)Lreactor/core/publisher/Flux;
+#generate(Ljava/util/function/BiConsumer;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#generate(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Flux;
+#interval(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#interval(JLreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#interval(Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#interval(JJ)Lreactor/core/publisher/Flux;
+#interval(Ljava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#interval(JJLreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#interval(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#merge(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Flux;
+#merge(Lorg/reactivestreams/Publisher;II)Lreactor/core/publisher/Flux;
+#merge(I[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#onErrorResumeWith(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#range(II)Lreactor/core/publisher/Flux;
+#switchOnNext()Lreactor/core/publisher/FluxProcessor;
+#switchOnNext(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#switchOnNext(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Flux;
+#using(Ljava/util/concurrent/Callable;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#using(Ljava/util/concurrent/Callable;Ljava/util/function/Function;Ljava/util/function/Consumer;Z)Lreactor/core/publisher/Flux;
+#yield(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#zip(Ljava/lang/Iterable;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#zip(Ljava/lang/Iterable;ILjava/util/function/Function;)Lreactor/core/publisher/Flux;
+#zip(Ljava/util/function/Function;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zip(Ljava/util/function/Function;I[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#as(Ljava/util/function/Function;)Lorg/reactivestreams/Publisher;
+#as(Ljava/lang/Class;)Ljava/lang/Object;
+#after(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#after(Ljava/util/function/Supplier;Z)Lreactor/core/publisher/Flux;
+#all(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
+#buffer()Lreactor/core/publisher/Flux;
+#buffer(I)Lreactor/core/publisher/Flux;
+#buffer(II)Lreactor/core/publisher/Flux;
+#buffer(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#buffer(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#buffer(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#buffer(Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#buffer(Ljava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#buffer(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#buffer(IJ)Lreactor/core/publisher/Flux;
+#buffer(ILjava/time/Duration;)Lreactor/core/publisher/Flux;
+#buffer(IJLreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#buffer(ILjava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#cache()Lreactor/core/publisher/Flux;
+#cache(I)Lreactor/core/publisher/Flux;
+#cast(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#collect(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
+#concatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#concatMap(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#concatMapDelayError(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#concatMapDelayError(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#consume(Ljava/util/function/Consumer;)Ljava/lang/Runnable;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Ljava/lang/Runnable;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#count()Lreactor/core/publisher/Mono;
+#delay(J)Lreactor/core/publisher/Flux;
+#delay(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#delaySubscription(J)Lreactor/core/publisher/Flux;
+#delaySubscription(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#delaySubscription(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#dematerialize()Lreactor/core/publisher/Flux;
+#dispatchOn(Ljava/util/concurrent/Callable;I)Lreactor/core/publisher/Flux;
+#distinct()Lreactor/core/publisher/Flux;
+#distinct(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#distinctUntilChanged()Lreactor/core/publisher/Flux;
+#distinctUntilChanged(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#doOnError(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#doOnError(Ljava/lang/Class;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#doOnNext(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#doOnRequest(Ljava/util/function/LongConsumer;)Lreactor/core/publisher/Flux;
+#doOnSubscribe(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#elapsed()Lreactor/core/publisher/Flux;
+#elementAt(I)Lreactor/core/publisher/Mono;
+#elementAtOrDefault(ILjava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#every(I)Lreactor/core/publisher/Flux;
+#everyFirst(I)Lreactor/core/publisher/Flux;
+#exists(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
+#filter(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;II)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;IIZ)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#getTimer()Lreactor/core/timer/Timer;
+#groupBy(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#groupBy(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#hasElements()Lreactor/core/publisher/Mono;
+#hide()Lreactor/core/publisher/Flux;
+#ignoreElements()Lreactor/core/publisher/Mono;
+#last()Lreactor/core/publisher/Mono;
+#lift(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#map(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#materialize()Lreactor/core/publisher/Flux;
+#multiplex(ILjava/util/function/Function;)Lreactor/core/publisher/Flux;
+#multicast(Lorg/reactivestreams/Processor;)Lreactor/core/publisher/ConnectableFlux;
+#multicast(Ljava/util/function/Supplier;)Lreactor/core/publisher/ConnectableFlux;
+#multicast(Lorg/reactivestreams/Processor;Ljava/util/function/Function;)Lreactor/core/publisher/ConnectableFlux;
+#multicast(Ljava/util/function/Supplier;Ljava/util/function/Function;)Lreactor/core/publisher/ConnectableFlux;
+#nest()Lreactor/core/publisher/Mono;
+#onBackpressureBuffer()Lreactor/core/publisher/Flux;
+#onBackpressureDrop()Lreactor/core/publisher/Flux;
+#onBackpressureDrop(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#onBackpressureError()Lreactor/core/publisher/Flux;
+#onBackpressureLatest()Lreactor/core/publisher/Flux;
+#onErrorResumeWith(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#partition()Lreactor/core/publisher/Flux;
+#partition(I)Lreactor/core/publisher/Flux;
+#publish()Lreactor/core/publisher/ConnectableFlux;
+#publish(I)Lreactor/core/publisher/ConnectableFlux;
+#publishNext()Lreactor/core/publisher/Mono;
+#reduce(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#reduce(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#reduceWith(Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#repeat()Lreactor/core/publisher/Flux;
+#repeat(Ljava/util/function/BooleanSupplier;)Lreactor/core/publisher/Flux;
+#repeat(J)Lreactor/core/publisher/Flux;
+#repeat(JLjava/util/function/BooleanSupplier;)Lreactor/core/publisher/Flux;
+#repeatWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#retry()Lreactor/core/publisher/Flux;
+#retry(J)Lreactor/core/publisher/Flux;
+#retry(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#retry(JLjava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#retryWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#sample(J)Lreactor/core/publisher/Flux;
+#sample(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#sample(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sampleFirst(J)Lreactor/core/publisher/Flux;
+#sampleFirst(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#sampleFirst(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#sampleTimeout(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#sampleTimeout(Ljava/util/function/Function;J)Lreactor/core/publisher/Flux;
+#scan(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#scan(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#single()Lreactor/core/publisher/Mono;
+#singleOrDefault(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#singleOrEmpty()Lreactor/core/publisher/Mono;
+#skip(J)Lreactor/core/publisher/Flux;
+#skip(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#skipLast(I)Lreactor/core/publisher/Flux;
+#skipUntil(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#skipWhile(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#startWith(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#startWith([Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#startWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#stream()Ljava/util/stream/Stream;
+#stream(I)Ljava/util/stream/Stream;
+#switchMap(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#switchMap(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#take(J)Lreactor/core/publisher/Flux;
+#take(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#takeLast(I)Lreactor/core/publisher/Flux;
+#takeUntil(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#takeWhile(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#tap()Lreactor/core/publisher/FluxTap;
+#timeout(J)Lreactor/core/publisher/Flux;
+#timeout(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#timeout(Ljava/time/Duration;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#timeout(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#timeout(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#timeout(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#timestamp()Lreactor/core/publisher/Flux;
+#toIterable(JLjava/util/function/Supplier;)Ljava/lang/Iterable;
+#toList()Lreactor/core/publisher/Mono;
+#toSortedList()Lreactor/core/publisher/Mono;
+#toSortedList(Ljava/util/Comparator;)Lreactor/core/publisher/Mono;
+#toMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#toMap(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#toMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#toMultimap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#toMultimap(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#toMultimap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#useCapacity(J)Lreactor/core/publisher/Flux;
+#useName(Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#useTimer(Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
+#window(I)Lreactor/core/publisher/Flux;
+#window(II)Lreactor/core/publisher/Flux;
+#window(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#window(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#window(J)Lreactor/core/publisher/Flux;
+#window(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#window(JJ)Lreactor/core/publisher/Flux;
+#window(Ljava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#window(ILjava/time/Duration;)Lreactor/core/publisher/Flux;
+#withLatestFrom(Lorg/reactivestreams/Publisher;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#zipWith(Lorg/reactivestreams/Publisher;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#zipWith(Lorg/reactivestreams/Publisher;ILjava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#zipWith(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Flux;
+#zipWithIterable(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#zipWithIterable(Ljava/lang/Iterable;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
-#create(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
-#create(Lreactor/fn/Consumer;Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#create(Lreactor/fn/Consumer;Lreactor/fn/Function;Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
-#dispatchOn(Lorg/reactivestreams/Publisher;Ljava/util/concurrent/Callable;ZILreactor/fn/Supplier;)Lreactor/core/publisher/Flux;
-#flatMap(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;IIZ)Lreactor/core/publisher/Flux;
-#fromTuple(Lreactor/fn/tuple/Tuple;)Lreactor/core/publisher/Flux;
-#generate(Lreactor/fn/BiConsumer;Lreactor/fn/Function;Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
-#interval(JLjava/util/concurrent/TimeUnit;)Lreactor/core/publisher/Flux;
-#interval(JLjava/util/concurrent/TimeUnit;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#log(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/util/logging/Level;I)Lreactor/core/publisher/Flux;
-#mapSignal(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Supplier;)Lreactor/core/publisher/Flux;
-#onErrorResumeWith(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#publishOn(Lorg/reactivestreams/Publisher;Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Flux;
-#yield(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
-#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/core/publisher/Flux;
-#zip(Ljava/lang/Iterable;Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#zip(Lreactor/fn/Function;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#as(Lreactor/fn/Function;)Lorg/reactivestreams/Publisher;
-#capacity(J)Lreactor/core/publisher/Flux;
-#concatMap(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#doOnError(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
-#doOnNext(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
-#doOnSubscribe(Lreactor/fn/Consumer;)Lreactor/core/publisher/Flux;
-#flatMap(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#flatMap(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Supplier;)Lreactor/core/publisher/Flux;
-#lift(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#map(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#onErrorResumeWith(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#toIterable(JLreactor/fn/Supplier;)Ljava/lang/Iterable;
-#zipWith(Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/core/publisher/Flux;
@2.5.0.M3
+#interval(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#interval(Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#interval(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#interval(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#after(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#afterCompleteOrError(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#buffer(Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#buffer(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#buffer(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#buffer(ILjava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#collect(Ljava/util/stream/Collector;)Lreactor/core/publisher/Mono;
+#concatMapIterable(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#concatMapIterable(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#consume(Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
+#publishOn(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#publishOn(Lreactor/core/scheduler/Scheduler;I)Lreactor/core/publisher/Flux;
+#flatMapIterable(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#flatMapIterable(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#getTimer()Lreactor/core/scheduler/TimedScheduler;
+#publishOn(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/Flux;
+#publishOn(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/Flux;
+#subscribe()Lreactor/core/flow/Cancellation;
+#subscribeOn(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#subscribeOn(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/Flux;
+#useTimer(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#interval(JLreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#interval(Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#interval(JJLreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#interval(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#as(Ljava/lang/Class;)Ljava/lang/Object;
-#after(Ljava/util/function/Supplier;Z)Lreactor/core/publisher/Flux;
-#buffer(Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#buffer(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#buffer(IJLreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#buffer(ILjava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
-#consume(Ljava/util/function/Consumer;)Ljava/lang/Runnable;
-#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Ljava/lang/Runnable;
-#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/lang/Runnable;
-#dispatchOn(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Flux;
-#dispatchOn(Ljava/util/concurrent/Callable;I)Lreactor/core/publisher/Flux;
-#getTimer()Lreactor/core/timer/Timer;
-#publishOn(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Flux;
-#subscribe()Ljava/lang/Runnable;
-#useTimer(Lreactor/core/timer/Timer;)Lreactor/core/publisher/Flux;
@2.5.0.M4
+#create(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxEmitter$BackpressureHandling;)Lreactor/core/publisher/Flux;
+#firstEmitting([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#firstEmitting(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#generate(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#generate(Ljava/util/concurrent/Callable;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#generate(Ljava/util/concurrent/Callable;Ljava/util/function/BiFunction;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#as(Ljava/util/function/Function;)Ljava/lang/Object;
+#any(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
+#collectList()Lreactor/core/publisher/Mono;
+#collectSortedList()Lreactor/core/publisher/Mono;
+#collectSortedList(Ljava/util/Comparator;)Lreactor/core/publisher/Mono;
+#collectMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#collectMap(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#collectMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#collectMultimap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#collectMultimap(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#collectMultimap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#compose(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#concatMapDelayError(Ljava/util/function/Function;ZI)Lreactor/core/publisher/Flux;
+#doOnError(Ljava/util/function/Predicate;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#firstEmittingWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;ZII)Lreactor/core/publisher/Flux;
+#hasElement(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#mapError(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#mapError(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#mapError(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#onErrorResumeWith(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#onErrorResumeWith(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#onErrorReturn(Ljava/lang/Class;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#onErrorReturn(Ljava/util/function/Predicate;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#onTerminateDetach()Lreactor/core/publisher/Flux;
+#parallel()Lreactor/core/publisher/ParallelFlux;
+#parallel(I)Lreactor/core/publisher/ParallelFlux;
+#parallel(II)Lreactor/core/publisher/ParallelFlux;
+#process(Lorg/reactivestreams/Processor;)Lreactor/core/publisher/ConnectableFlux;
+#process(Ljava/util/function/Supplier;)Lreactor/core/publisher/ConnectableFlux;
+#process(Lorg/reactivestreams/Processor;Ljava/util/function/Function;)Lreactor/core/publisher/ConnectableFlux;
+#process(Ljava/util/function/Supplier;Ljava/util/function/Function;)Lreactor/core/publisher/ConnectableFlux;
+#publish(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#publish(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#replay()Lreactor/core/publisher/ConnectableFlux;
+#replay(I)Lreactor/core/publisher/ConnectableFlux;
+#subscribe(Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
+#switchOnError(Ljava/lang/Class;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#switchOnError(Ljava/util/function/Predicate;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#takeUntil(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#then()Lreactor/core/publisher/Mono;
+#then(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#then(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#thenMany(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#thenMany(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#toStream()Ljava/util/stream/Stream;
+#toStream(I)Ljava/util/stream/Stream;
+#window()Lreactor/core/publisher/Flux;
-#amb([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#amb(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
-#create(Ljava/util/function/Consumer;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
-#create(Ljava/util/function/Consumer;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
-#generate(Ljava/util/function/BiConsumer;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
-#generate(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Flux;
-#onErrorResumeWith(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
-#switchOnNext()Lreactor/core/publisher/FluxProcessor;
-#yield(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
-#as(Ljava/util/function/Function;)Lorg/reactivestreams/Publisher;
-#after()Lreactor/core/publisher/Mono;
-#after(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#after(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
-#afterCompleteOrError(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
-#ambWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#consume(Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
-#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
-#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
-#exists(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
-#flatMap(Ljava/util/function/Function;IIZ)Lreactor/core/publisher/Flux;
-#lift(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
-#multiplex(ILjava/util/function/Function;)Lreactor/core/publisher/Flux;
-#multicast(Lorg/reactivestreams/Processor;)Lreactor/core/publisher/ConnectableFlux;
-#multicast(Ljava/util/function/Supplier;)Lreactor/core/publisher/ConnectableFlux;
-#multicast(Lorg/reactivestreams/Processor;Ljava/util/function/Function;)Lreactor/core/publisher/ConnectableFlux;
-#multicast(Ljava/util/function/Supplier;Ljava/util/function/Function;)Lreactor/core/publisher/ConnectableFlux;
-#partition()Lreactor/core/publisher/Flux;
-#partition(I)Lreactor/core/publisher/Flux;
-#publishOn(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/Flux;
-#publishOn(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/publisher/Flux;
-#stream()Ljava/util/stream/Stream;
-#stream(I)Ljava/util/stream/Stream;
-#subscribeOn(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/Flux;
-#tap()Lreactor/core/publisher/FluxTap;
-#toList()Lreactor/core/publisher/Mono;
-#toSortedList()Lreactor/core/publisher/Mono;
-#toSortedList(Ljava/util/Comparator;)Lreactor/core/publisher/Mono;
-#toMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#toMap(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#toMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#toMultimap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#toMultimap(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#toMultimap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
@3.0.0.RC1
+#<init>()V
+#create(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/Flux;
+#intervalMillis(J)Lreactor/core/publisher/Flux;
+#intervalMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#intervalMillis(JJ)Lreactor/core/publisher/Flux;
+#intervalMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#bufferMillis(J)Lreactor/core/publisher/Flux;
+#bufferMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#bufferMillis(JJ)Lreactor/core/publisher/Flux;
+#bufferMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#bufferMillis(IJ)Lreactor/core/publisher/Flux;
+#bufferMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#delayMillis(J)Lreactor/core/publisher/Flux;
+#delayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#delaySubscriptionMillis(J)Lreactor/core/publisher/Flux;
+#delaySubscriptionMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#getPrefetch()J
+#log(Ljava/lang/String;Ljava/util/logging/Level;[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Flux;
+#sampleFirstMillis(J)Lreactor/core/publisher/Flux;
+#sampleMillis(J)Lreactor/core/publisher/Flux;
+#sampleTimeout(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#scanWith(Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#skipMillis(J)Lreactor/core/publisher/Flux;
+#skipMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#skipUntil(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#skipUntilOther(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#subscribe()Lreactor/core/Cancellation;
+#subscribe(I)Lreactor/core/Cancellation;
+#subscribe(Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
+#subscribe(Ljava/util/function/Consumer;I)Lreactor/core/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;I)Lreactor/core/Cancellation;
+#takeMillis(J)Lreactor/core/publisher/Flux;
+#takeMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#takeUntilOther(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#timeoutMillis(J)Lreactor/core/publisher/Flux;
+#timeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#timeoutMillis(JLorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#timeoutMillis(JLorg/reactivestreams/Publisher;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#toString()Ljava/lang/String;
+#windowMillis(J)Lreactor/core/publisher/Flux;
+#windowMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#windowMillis(JJ)Lreactor/core/publisher/Flux;
+#windowMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#windowMillis(IJ)Lreactor/core/publisher/Flux;
+#windowMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#create(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxEmitter$BackpressureHandling;)Lreactor/core/publisher/Flux;
-#interval(J)Lreactor/core/publisher/Flux;
-#interval(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#interval(Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#interval(JJ)Lreactor/core/publisher/Flux;
-#interval(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#interval(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#buffer(Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#buffer(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#buffer(IJ)Lreactor/core/publisher/Flux;
-#buffer(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#buffer(ILjava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#debug()Lreactor/core/util/ReactiveStateUtils$Graph;
-#delay(J)Lreactor/core/publisher/Flux;
-#delaySubscription(J)Lreactor/core/publisher/Flux;
-#getMode()I
-#getName()Ljava/lang/String;
-#getTimer()Lreactor/core/scheduler/TimedScheduler;
-#log(Ljava/lang/String;Ljava/util/logging/Level;)Lreactor/core/publisher/Flux;
-#log(Ljava/lang/String;Ljava/util/logging/Level;I)Lreactor/core/publisher/Flux;
-#nest()Lreactor/core/publisher/Mono;
-#sample(J)Lreactor/core/publisher/Flux;
-#sampleFirst(J)Lreactor/core/publisher/Flux;
-#sampleTimeout(Ljava/util/function/Function;J)Lreactor/core/publisher/Flux;
-#skipUntil(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#subscribe()Lreactor/core/flow/Cancellation;
-#subscribe(Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
-#takeUntil(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#timeout(J)Lreactor/core/publisher/Flux;
-#useCapacity(J)Lreactor/core/publisher/Flux;
-#useName(Ljava/lang/String;)Lreactor/core/publisher/Flux;
-#useTimer(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#window(J)Lreactor/core/publisher/Flux;
-#window(JJ)Lreactor/core/publisher/Flux;
@3.0.0.RELEASE
+#concatDelayError(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#concatDelayError(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Flux;
+#concatDelayError(Lorg/reactivestreams/Publisher;ZI)Lreactor/core/publisher/Flux;
+#concatDelayError([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#awaitOnSubscribe()Lreactor/core/publisher/Flux;
+#blockFirst()Ljava/lang/Object;
+#blockFirst(Ljava/time/Duration;)Ljava/lang/Object;
+#blockFirstMillis(J)Ljava/lang/Object;
+#blockLast()Ljava/lang/Object;
+#blockLast(Ljava/time/Duration;)Ljava/lang/Object;
+#blockLastMillis(J)Ljava/lang/Object;
+#groupJoin(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#handle(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Flux;
+#join(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#transform(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
@3.0.1.RELEASE
+#generate(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#buffer(ILjava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#buffer(IILjava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#buffer(Lorg/reactivestreams/Publisher;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#buffer(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#buffer(ILjava/time/Duration;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#bufferMillis(IJLreactor/core/scheduler/TimedScheduler;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#cache(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#cache(ILjava/time/Duration;)Lreactor/core/publisher/Flux;
+#cancelOn(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#elapsed(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#elementAt(ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#last(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#log(Ljava/lang/String;Ljava/util/logging/Level;Z[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Flux;
+#ofType(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#onBackpressureBuffer(I)Lreactor/core/publisher/Flux;
+#onBackpressureBuffer(ILjava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#replay(Ljava/time/Duration;)Lreactor/core/publisher/ConnectableFlux;
+#replay(ILjava/time/Duration;)Lreactor/core/publisher/ConnectableFlux;
+#replayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ConnectableFlux;
+#replayMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ConnectableFlux;
+#share()Lreactor/core/publisher/Flux;
+#single(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#sort()Lreactor/core/publisher/Flux;
+#sort(Ljava/util/Comparator;)Lreactor/core/publisher/Flux;
+#timestamp(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
-#generate(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
-#elementAtOrDefault(ILjava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#every(I)Lreactor/core/publisher/Flux;
-#everyFirst(I)Lreactor/core/publisher/Flux;
-#process(Lorg/reactivestreams/Processor;)Lreactor/core/publisher/ConnectableFlux;
-#process(Ljava/util/function/Supplier;)Lreactor/core/publisher/ConnectableFlux;
-#process(Lorg/reactivestreams/Processor;Ljava/util/function/Function;)Lreactor/core/publisher/ConnectableFlux;
-#process(Ljava/util/function/Supplier;Ljava/util/function/Function;)Lreactor/core/publisher/ConnectableFlux;
-#singleOrDefault(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#windowMillis(JJ)Lreactor/core/publisher/Flux;
@3.0.3.RELEASE
+#merge(IZ[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeSequential(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeSequential(Lorg/reactivestreams/Publisher;ZII)Lreactor/core/publisher/Flux;
+#mergeSequential([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeSequential(IZ[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeSequential(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#mergeSequential(Ljava/lang/Iterable;ZII)Lreactor/core/publisher/Flux;
+#flatMapSequential(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#flatMapSequential(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#flatMapSequential(Ljava/util/function/Function;II)Lreactor/core/publisher/Flux;
+#flatMapSequential(Ljava/util/function/Function;ZII)Lreactor/core/publisher/Flux;
+#limitRate(I)Lreactor/core/publisher/Flux;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
*#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;I)Lreactor/core/Cancellation;[deprecated]
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;I)Lreactor/core/Cancellation;[deprecated]
*#then(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;[deprecated]
+#thenEmpty(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
@3.0.4.RELEASE
+#bufferUntil(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#bufferUntil(Ljava/util/function/Predicate;Z)Lreactor/core/publisher/Flux;
+#bufferWhile(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#doOnEach(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#doFinally(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#onBackpressureBuffer(ILreactor/core/publisher/BufferOverflowStrategy;)Lreactor/core/publisher/Flux;
+#onBackpressureBuffer(ILjava/util/function/Consumer;Lreactor/core/publisher/BufferOverflowStrategy;)Lreactor/core/publisher/Flux;
+#subscribe()Lreactor/core/Disposable;
+#subscribe(I)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;I)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;I)Lreactor/core/Disposable;[deprecated]
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;I)Lreactor/core/Disposable;[deprecated]
-#subscribe()Lreactor/core/Cancellation;
-#subscribe(I)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;I)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;I)Lreactor/core/Cancellation;[deprecated]
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;I)Lreactor/core/Cancellation;[deprecated]
@3.0.5.RELEASE
*#zip(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;[deprecated]
*#buffer(ILjava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
*#buffer(ILjava/time/Duration;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
+#bufferTimeout(ILjava/time/Duration;)Lreactor/core/publisher/Flux;
+#bufferTimeout(ILjava/time/Duration;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
*#bufferMillis(IJ)Lreactor/core/publisher/Flux;[deprecated]
*#bufferMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#bufferMillis(IJLreactor/core/scheduler/TimedScheduler;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
+#bufferTimeoutMillis(IJ)Lreactor/core/publisher/Flux;
+#bufferTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#bufferTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#checkpoint()Lreactor/core/publisher/Flux;
+#checkpoint(Ljava/lang/String;)Lreactor/core/publisher/Flux;
*#delay(Ljava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
+#delayElements(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
*#delayMillis(J)Lreactor/core/publisher/Flux;[deprecated]
+#delayElementsMillis(J)Lreactor/core/publisher/Flux;
*#delayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#delayElementsMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#groupBy(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#groupBy(Ljava/util/function/Function;Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#publishOn(Lreactor/core/scheduler/Scheduler;ZI)Lreactor/core/publisher/Flux;
*#subscribe(I)Lreactor/core/Disposable;[deprecated]
*#window()Lreactor/core/publisher/Flux;[deprecated]
*#window(ILjava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
+#windowTimeout(ILjava/time/Duration;)Lreactor/core/publisher/Flux;
*#windowMillis(IJ)Lreactor/core/publisher/Flux;[deprecated]
*#windowMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#windowTimeoutMillis(IJ)Lreactor/core/publisher/Flux;
+#windowTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;
+#windowUntil(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#windowUntil(Ljava/util/function/Predicate;Z)Lreactor/core/publisher/Flux;
+#windowUntil(Ljava/util/function/Predicate;ZI)Lreactor/core/publisher/Flux;
+#windowWhile(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
+#windowWhile(Ljava/util/function/Predicate;I)Lreactor/core/publisher/Flux;
@3.0.6.RELEASE
+#push(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#push(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/Flux;
+#interval(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#interval(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
*#intervalMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#intervalMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#intervalMillis(JJ)Lreactor/core/publisher/Flux;[deprecated]
*#intervalMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#mergeDelayError(I[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
*#merge(IZ[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
+#mergeSequential(Lorg/reactivestreams/Publisher;II)Lreactor/core/publisher/Flux;
+#mergeSequentialDelayError(Lorg/reactivestreams/Publisher;II)Lreactor/core/publisher/Flux;
*#mergeSequential(Lorg/reactivestreams/Publisher;ZII)Lreactor/core/publisher/Flux;[deprecated]
+#mergeSequential(I[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeSequentialDelayError(I[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
*#mergeSequential(IZ[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
+#mergeSequential(Ljava/lang/Iterable;II)Lreactor/core/publisher/Flux;
+#mergeSequentialDelayError(Ljava/lang/Iterable;II)Lreactor/core/publisher/Flux;
*#mergeSequential(Ljava/lang/Iterable;ZII)Lreactor/core/publisher/Flux;[deprecated]
*#blockFirstMillis(J)Ljava/lang/Object;[deprecated]
*#blockLastMillis(J)Ljava/lang/Object;[deprecated]
+#buffer(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#buffer(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#bufferTimeout(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#bufferTimeout(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
*#bufferMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#bufferMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#bufferMillis(JJ)Lreactor/core/publisher/Flux;[deprecated]
*#bufferMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#bufferTimeoutMillis(IJ)Lreactor/core/publisher/Flux;[deprecated]
*#bufferTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#bufferTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
+#delayElements(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
*#delayElementsMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#delayElementsMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#delaySubscription(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
*#delaySubscriptionMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#delaySubscriptionMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#elapsed(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#elapsed(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#filterWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#filterWhen(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#flatMapDelayError(Ljava/util/function/Function;II)Lreactor/core/publisher/Flux;
*#flatMap(Ljava/util/function/Function;ZII)Lreactor/core/publisher/Flux;[deprecated]
+#flatMapSequentialDelayError(Ljava/util/function/Function;II)Lreactor/core/publisher/Flux;
*#flatMapSequential(Ljava/util/function/Function;ZII)Lreactor/core/publisher/Flux;[deprecated]
+#replay(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/ConnectableFlux;
+#replay(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/ConnectableFlux;
*#replayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ConnectableFlux;[deprecated]
*#replayMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ConnectableFlux;[deprecated]
*#sampleMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#sampleFirstMillis(J)Lreactor/core/publisher/Flux;[deprecated]
+#skip(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
*#skipMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#skipMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#take(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
*#takeMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#takeMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#timeout(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#timeout(Ljava/time/Duration;Lorg/reactivestreams/Publisher;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
*#timeoutMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#timeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#timeoutMillis(JLorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
*#timeoutMillis(JLorg/reactivestreams/Publisher;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#timestamp(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#timestamp(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#window(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#window(Ljava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#windowTimeout(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
*#windowMillis(J)Lreactor/core/publisher/Flux;[deprecated]
*#windowMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#windowMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#windowTimeoutMillis(IJ)Lreactor/core/publisher/Flux;[deprecated]
*#windowTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
@3.0.7.RELEASE
*#buffer(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
*#buffer(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
+#bufferWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#bufferWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
*#mapError(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
*#mapError(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
*#mapError(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
+#onErrorMap(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#onErrorMap(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#onErrorMap(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
*#onErrorResumeWith(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
*#onErrorResumeWith(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
*#onErrorResumeWith(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
+#onErrorResume(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#onErrorResume(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#onErrorResume(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
*#subscribe(Ljava/util/function/Consumer;I)Lreactor/core/Disposable;[deprecated]
*#switchOnError(Ljava/lang/Class;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
*#switchOnError(Ljava/util/function/Predicate;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
*#switchOnError(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
*#then(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;[deprecated]
*#thenMany(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
*#window(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
+#windowWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
@3.1.0.RELEASE
+#first([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#first(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#checkpoint(Ljava/lang/String;Z)Lreactor/core/publisher/Flux;
+#delayUntil(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#distinct(Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#distinctUntilChanged(Ljava/util/function/Function;Ljava/util/function/BiPredicate;)Lreactor/core/publisher/Flux;
+#expandDeep(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#expandDeep(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#expand(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#expand(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#getPrefetch()I
+#name(Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#onBackpressureBuffer(Ljava/time/Duration;ILjava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#onBackpressureBuffer(Ljava/time/Duration;ILjava/util/function/Consumer;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#or(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#subscriberContext(Lreactor/util/context/Context;)Lreactor/core/publisher/Flux;
+#subscriberContext(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#subscribeOn(Lreactor/core/scheduler/Scheduler;Z)Lreactor/core/publisher/Flux;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#then(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#toIterable(I)Ljava/lang/Iterable;
+#toIterable(ILjava/util/function/Supplier;)Ljava/lang/Iterable;
-#firstEmitting([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#firstEmitting(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
-#intervalMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#intervalMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#intervalMillis(JJ)Lreactor/core/publisher/Flux;[deprecated]
-#intervalMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#merge(IZ[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
-#mergeSequential(Lorg/reactivestreams/Publisher;ZII)Lreactor/core/publisher/Flux;[deprecated]
-#mergeSequential(IZ[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
-#mergeSequential(Ljava/lang/Iterable;ZII)Lreactor/core/publisher/Flux;[deprecated]
-#zip(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;[deprecated]
-#awaitOnSubscribe()Lreactor/core/publisher/Flux;
-#blockFirstMillis(J)Ljava/lang/Object;[deprecated]
-#blockLastMillis(J)Ljava/lang/Object;[deprecated]
-#buffer(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#buffer(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
-#buffer(ILjava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
-#buffer(ILjava/time/Duration;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
-#bufferMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#bufferMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#bufferMillis(JJ)Lreactor/core/publisher/Flux;[deprecated]
-#bufferMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#bufferMillis(IJ)Lreactor/core/publisher/Flux;[deprecated]
-#bufferMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#bufferMillis(IJLreactor/core/scheduler/TimedScheduler;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
-#bufferTimeoutMillis(IJ)Lreactor/core/publisher/Flux;[deprecated]
-#bufferTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#bufferTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
-#delay(Ljava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
-#delayMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#delayElementsMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#delayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#delayElementsMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#delaySubscriptionMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#delaySubscriptionMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#elapsed(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#firstEmittingWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
-#flatMap(Ljava/util/function/Function;ZII)Lreactor/core/publisher/Flux;[deprecated]
-#flatMapSequential(Ljava/util/function/Function;ZII)Lreactor/core/publisher/Flux;[deprecated]
-#getPrefetch()J
-#mapError(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#mapError(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#mapError(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#onErrorResumeWith(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#onErrorResumeWith(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#onErrorResumeWith(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#replayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ConnectableFlux;[deprecated]
-#replayMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/ConnectableFlux;[deprecated]
-#sampleMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#sampleFirstMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#skipMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#skipMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#subscribe(I)Lreactor/core/Disposable;[deprecated]
-#subscribe(Ljava/util/function/Consumer;I)Lreactor/core/Disposable;[deprecated]
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;I)Lreactor/core/Disposable;[deprecated]
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;I)Lreactor/core/Disposable;[deprecated]
-#switchOnError(Ljava/lang/Class;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
-#switchOnError(Ljava/util/function/Predicate;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
-#switchOnError(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
-#takeMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#takeMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#then(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;[deprecated]
-#then(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;[deprecated]
-#thenMany(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
-#timeoutMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#timeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#timeoutMillis(JLorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
-#timeoutMillis(JLorg/reactivestreams/Publisher;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#timestamp(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#toIterable(J)Ljava/lang/Iterable;
-#toIterable(JLjava/util/function/Supplier;)Ljava/lang/Iterable;
-#window()Lreactor/core/publisher/Flux;[deprecated]
-#window(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#window(ILjava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
-#windowMillis(J)Lreactor/core/publisher/Flux;[deprecated]
-#windowMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#windowMillis(JJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#windowMillis(IJ)Lreactor/core/publisher/Flux;[deprecated]
-#windowMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#windowTimeoutMillis(IJ)Lreactor/core/publisher/Flux;[deprecated]
-#windowTimeoutMillis(IJLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Flux;[deprecated]
@3.1.1.RELEASE
+#limitRate(II)Lreactor/core/publisher/Flux;
+#limitRequest(J)Lreactor/core/publisher/Flux;
@3.1.2.RELEASE
+#fromStream(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#index()Lreactor/core/publisher/Flux;
+#index(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
@3.1.3.RELEASE
+#delaySequence(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#delaySequence(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
@3.1.4.RELEASE
+#concatWithValues([Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#mergeOrdered([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeOrdered(Ljava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeOrdered(ILjava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#distinct(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/BiPredicate;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#log(Lreactor/util/Logger;)Lreactor/core/publisher/Flux;
+#log(Lreactor/util/Logger;Ljava/util/logging/Level;Z[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Flux;
+#mergeOrderedWith(Lorg/reactivestreams/Publisher;Ljava/util/Comparator;)Lreactor/core/publisher/Flux;
@3.2.0.RELEASE
+#error(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#cache(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#cache(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#doOnDiscard(Ljava/lang/Class;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#metrics()Lreactor/core/publisher/Flux;
+#onErrorContinue(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Flux;
+#onErrorContinue(Ljava/lang/Class;Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Flux;
+#onErrorContinue(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Flux;
+#onErrorStop()Lreactor/core/publisher/Flux;
+#retryBackoff(JLjava/time/Duration;)Lreactor/core/publisher/Flux;
+#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Flux;
+#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;D)Lreactor/core/publisher/Flux;
@3.2.4.RELEASE
+#switchOnFirst(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
@3.2.10.RELEASE
+#doFirst(Ljava/lang/Runnable;)Lreactor/core/publisher/Flux;
+#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
+#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;DLreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
@3.3.0.RELEASE
+#deferWithContext(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
*#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
*#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
+#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#bufferUntilChanged()Lreactor/core/publisher/Flux;
+#bufferUntilChanged(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#bufferUntilChanged(Ljava/util/function/Function;Ljava/util/function/BiPredicate;)Lreactor/core/publisher/Flux;
*#compose(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Lreactor/util/context/Context;)Lreactor/core/Disposable;
+#transformDeferred(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#windowUntilChanged()Lreactor/core/publisher/Flux;
+#windowUntilChanged(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#windowUntilChanged(Ljava/util/function/Function;Ljava/util/function/BiPredicate;)Lreactor/core/publisher/Flux;
@3.3.4.RELEASE
*#retry(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;[deprecated]
*#retry(JLjava/util/function/Predicate;)Lreactor/core/publisher/Flux;[deprecated]
*#retryWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
+#retryWhen(Lreactor/util/retry/Retry;)Lreactor/core/publisher/Flux;
*#retryBackoff(JLjava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
*#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
*#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;[deprecated]
*#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;D)Lreactor/core/publisher/Flux;[deprecated]
*#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;DLreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;[deprecated]
+#switchOnFirst(Ljava/util/function/BiFunction;Z)Lreactor/core/publisher/Flux;
@3.4.0
*#deferWithContext(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
+#deferContextual(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
*#first([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
*#first(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;[deprecated]
+#firstWithSignal([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#firstWithSignal(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#firstWithValue(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#firstWithValue(Lorg/reactivestreams/Publisher;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#contextWrite(Lreactor/util/context/ContextView;)Lreactor/core/publisher/Flux;
+#contextWrite(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
*#publishNext()Lreactor/core/publisher/Mono;[deprecated]
+#shareNext()Lreactor/core/publisher/Mono;
*#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)Lreactor/core/Disposable;[deprecated]
*#subscriberContext(Lreactor/util/context/Context;)Lreactor/core/publisher/Flux;[deprecated]
*#subscriberContext(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
+#transformDeferredContextual(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
-#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#compose(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#retry(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;[deprecated]
-#retry(JLjava/util/function/Predicate;)Lreactor/core/publisher/Flux;[deprecated]
-#retryWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#retryBackoff(JLjava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
-#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Flux;[deprecated]
-#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;[deprecated]
-#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;D)Lreactor/core/publisher/Flux;[deprecated]
-#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;DLreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;[deprecated]
@3.4.1
+#timed()Lreactor/core/publisher/Flux;
+#timed(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
@3.4.3
*#switchOnNext(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/Flux;[deprecated]
*#switchMap(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;[deprecated]
@3.4.4
+#mapNotNull(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
@3.4.6
*#limitRequest(J)Lreactor/core/publisher/Flux;[deprecated]
+#take(JZ)Lreactor/core/publisher/Flux;
@3.4.8
+#mergeComparing([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeComparing(Ljava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeComparing(ILjava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergeComparingDelayError(ILjava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
*#mergeOrdered([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
*#mergeOrdered(Ljava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
*#mergeOrdered(ILjava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;[deprecated]
*#mergeOrderedWith(Lorg/reactivestreams/Publisher;Ljava/util/Comparator;)Lreactor/core/publisher/Flux;[deprecated]
+#mergeComparingWith(Lorg/reactivestreams/Publisher;Ljava/util/Comparator;)Lreactor/core/publisher/Flux;
@3.4.19
+#windowTimeout(ILjava/time/Duration;Z)Lreactor/core/publisher/Flux;
+#windowTimeout(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;Z)Lreactor/core/publisher/Flux;
@3.4.23
+#onErrorComplete()Lreactor/core/publisher/Flux;
+#onErrorComplete(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#onErrorComplete(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
@3.4.25
+#mergePriority([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergePriority(Ljava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergePriority(ILjava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mergePriorityDelayError(ILjava/util/Comparator;[Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@3.5.0
+#contextCapture()Lreactor/core/publisher/Flux;
*#metrics()Lreactor/core/publisher/Flux;[deprecated]
+#tap(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#tap(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#tap(Lreactor/core/observability/SignalListenerFactory;)Lreactor/core/publisher/Flux;
-#deferWithContext(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#subscriberContext(Lreactor/util/context/Context;)Lreactor/core/publisher/Flux;[deprecated]
-#subscriberContext(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]

+###reactor/core/publisher/ConnectableFlux
@2.5.0.M2
+#<init>()V
+#autoConnect()Lreactor/core/publisher/Flux;
+#autoConnect(I)Lreactor/core/publisher/Flux;
+#autoConnect(ILjava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#connect()Ljava/lang/Runnable;
+#connect(Ljava/util/function/Consumer;)V
+#refCount()Lreactor/core/publisher/Flux;
+#refCount(I)Lreactor/core/publisher/Flux;
@2.5.0.M3
+#connect()Lreactor/core/flow/Cancellation;
-#connect()Ljava/lang/Runnable;
@3.0.0.RC1
+#connect()Lreactor/core/Cancellation;
-#connect()Lreactor/core/flow/Cancellation;
@3.0.4.RELEASE
+#connect()Lreactor/core/Disposable;
-#connect()Lreactor/core/Cancellation;
@3.1.0.RELEASE
+#refCount(ILjava/time/Duration;)Lreactor/core/publisher/Flux;
+#refCount(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
@3.3.0.RELEASE
+#hide()Lreactor/core/publisher/ConnectableFlux;
+#hide()Lreactor/core/publisher/Flux;

+###reactor/core/publisher/Operators$DeferredSubscription
@3.0.0.RELEASE
+#<init>()V
+#set(Lorg/reactivestreams/Subscription;)Z
+#request(J)V
+#cancel()V
+#isCancelled()Z
+#isStarted()Z
+#isTerminated()Z
+#requestedFromDownstream()J
+#upstream()Lorg/reactivestreams/Subscription;
+#upstream()Ljava/lang/Object;
@3.0.6.RELEASE
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#isCancelled()Z
-#isStarted()Z
-#isTerminated()Z
-#requestedFromDownstream()J
@3.0.7.RELEASE
+#isCancelled()Z
@3.1.0.RELEASE
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#isCancelled()Z
-#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#upstream()Lorg/reactivestreams/Subscription;
-#upstream()Ljava/lang/Object;

+###reactor/core/publisher/Operators$MonoSubscriber
@3.0.0.RELEASE
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#request(J)V
+#cancel()V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onComplete()V
+#isCancelled()Z
+#downstream()Lorg/reactivestreams/Subscriber;
+#setValue(Ljava/lang/Object;)V
+#complete(Ljava/lang/Object;)V
+#isStarted()Z
+#connectedOutput()Ljava/lang/Object;
+#isTerminated()Z
+#upstream()Ljava/lang/Object;
+#requestFusion(I)I
+#poll()Ljava/lang/Object;
+#isEmpty()Z
+#clear()V
+#size()I
+#downstream()Ljava/lang/Object;
@3.0.5.RELEASE
-#connectedOutput()Ljava/lang/Object;
@3.0.6.RELEASE
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#actual()Lorg/reactivestreams/Subscriber;
-#isStarted()Z
-#isTerminated()Z
@3.1.0.RELEASE
+#<init>(Lreactor/core/CoreSubscriber;)V
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#actual()Lreactor/core/CoreSubscriber;
-#<init>(Lorg/reactivestreams/Subscriber;)V
-#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#downstream()Lorg/reactivestreams/Subscriber;
-#upstream()Ljava/lang/Object;
-#actual()Lorg/reactivestreams/Subscriber;
-#downstream()Ljava/lang/Object;

+###reactor/core/publisher/MonoSink
@3.0.0.RC1
+#complete()V
+#complete(Ljava/lang/Object;)V
+#fail(Ljava/lang/Throwable;)V
+#setCancellation(Lreactor/core/Cancellation;)V
@3.0.0.RELEASE
+#success()V
+#success(Ljava/lang/Object;)V
+#error(Ljava/lang/Throwable;)V
-#complete()V
-#complete(Ljava/lang/Object;)V
-#fail(Ljava/lang/Throwable;)V
@3.0.6.RELEASE
+#onRequest(Ljava/util/function/LongConsumer;)Lreactor/core/publisher/MonoSink;
+#onCancel(Lreactor/core/Disposable;)Lreactor/core/publisher/MonoSink;
+#onDispose(Lreactor/core/Disposable;)Lreactor/core/publisher/MonoSink;
*#setCancellation(Lreactor/core/Cancellation;)V[deprecated]
@3.1.0.RELEASE
+#currentContext()Lreactor/util/context/Context;
-#setCancellation(Lreactor/core/Cancellation;)V[deprecated]
@3.4.17
*#currentContext()Lreactor/util/context/Context;[deprecated]
+#contextView()Lreactor/util/context/ContextView;

+###reactor/core/publisher/FluxOperator
@3.1.0.RELEASE
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;

+###reactor/core/publisher/DirectProcessor
@2.5.0.M4
+#create()Lreactor/core/publisher/DirectProcessor;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#isStarted()Z
+#isTerminated()Z
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
+#hasDownstreams()Z
+#hasCompleted()Z
+#hasError()Z
+#getError()Ljava/lang/Throwable;
+#upstream()Ljava/lang/Object;
+#getMode()I
@3.0.0.RC1
+#getPrefetch()J
-#getMode()I
@3.0.0.RELEASE
+#serialize()Lreactor/core/publisher/FluxProcessor;
@3.0.1.RELEASE
-#serialize()Lreactor/core/publisher/FluxProcessor;
@3.0.6.RELEASE
+#inners()Ljava/util/stream/Stream;
-#isStarted()Z
-#downstreams()Ljava/util/Iterator;
@3.1.0.RELEASE
+#getPrefetch()I
+#subscribe(Lreactor/core/CoreSubscriber;)V
-#getPrefetch()J
-#subscribe(Lorg/reactivestreams/Subscriber;)V
-#hasCompleted()Z
-#hasError()Z
-#upstream()Ljava/lang/Object;
@3.3.10.RELEASE
+#currentContext()Lreactor/util/context/Context;
@3.4.0
+#add(Lreactor/core/publisher/SinkManyBestEffort$DirectInner;)Z
+#remove(Lreactor/core/publisher/SinkManyBestEffort$DirectInner;)V
@3.4.1
*#create()Lreactor/core/publisher/DirectProcessor;[deprecated]

+###reactor/core/publisher/FluxProcessor
@2.5.0.M1
+#async(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/FluxProcessor;
+#blackbox(Lorg/reactivestreams/Subscriber;Lreactor/fn/Function;)Lreactor/core/publisher/FluxProcessor;
+#blackbox(Lreactor/fn/Function;)Lreactor/core/publisher/FluxProcessor;
+#blocking()Lreactor/core/publisher/FluxProcessor;
+#create(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/FluxProcessor;
+#start()Lreactor/core/publisher/FluxProcessor;
+#startEmitter()Lreactor/core/subscriber/SignalEmitter;
+#bindEmitter(Z)Lreactor/core/subscriber/SignalEmitter;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#getCapacity()J
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#accept(Ljava/lang/Object;)V
+#upstream()Lorg/reactivestreams/Subscription;
+#getPending()J
+#getMode()I
+#upstream()Ljava/lang/Object;
@2.5.0.M2
+#blackbox(Lorg/reactivestreams/Subscriber;Ljava/util/function/Function;)Lreactor/core/publisher/FluxProcessor;
+#blackbox(Ljava/util/function/Function;)Lreactor/core/publisher/FluxProcessor;
+#serialize()Lreactor/core/publisher/FluxProcessor;
+#connect()Lreactor/core/publisher/FluxProcessor;
+#connect()Lreactor/core/subscriber/BaseSubscriber;
-#blackbox(Lorg/reactivestreams/Subscriber;Lreactor/fn/Function;)Lreactor/core/publisher/FluxProcessor;
-#blackbox(Lreactor/fn/Function;)Lreactor/core/publisher/FluxProcessor;
-#start()Lreactor/core/publisher/FluxProcessor;
-#startEmitter()Lreactor/core/subscriber/SignalEmitter;
-#bindEmitter(Z)Lreactor/core/subscriber/SignalEmitter;
-#onNext(Ljava/lang/Object;)V
-#onError(Ljava/lang/Throwable;)V
-#getPending()J
@2.5.0.M3
-#async(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/FluxProcessor;
-#serialize()Lreactor/core/publisher/FluxProcessor;
-#accept(Ljava/lang/Object;)V
@2.5.0.M4
+#<init>()V
+#switchOnNext()Lreactor/core/publisher/FluxProcessor;
+#wrap(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/FluxProcessor;
-#blackbox(Lorg/reactivestreams/Subscriber;Ljava/util/function/Function;)Lreactor/core/publisher/FluxProcessor;
-#blackbox(Ljava/util/function/Function;)Lreactor/core/publisher/FluxProcessor;
-#blocking()Lreactor/core/publisher/FluxProcessor;
-#create(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/FluxProcessor;
-#onSubscribe(Lorg/reactivestreams/Subscription;)V
-#upstream()Lorg/reactivestreams/Subscription;
-#getMode()I
-#upstream()Ljava/lang/Object;
@3.0.0.RC1
+#connectSink()Lreactor/core/publisher/BlockingSink;
+#connectSink(Z)Lreactor/core/publisher/BlockingSink;
-#connect()Lreactor/core/subscriber/BaseSubscriber;
@3.0.1.RELEASE
+#serialize()Lreactor/core/publisher/FluxProcessor;
@3.0.6.RELEASE
+#getBufferSize()I
+#getError()Ljava/lang/Throwable;
+#dispose()V
+#isStarted()Z
+#isTerminated()Z
+#downstreamCount()J
+#hasDownstreams()Z
+#downstreams()Ljava/util/Iterator;
+#inners()Ljava/util/stream/Stream;
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
@3.0.7.RELEASE
*#connect()Lreactor/core/publisher/FluxProcessor;[deprecated]
*#connectSink()Lreactor/core/publisher/BlockingSink;[deprecated]
*#connectSink(Z)Lreactor/core/publisher/BlockingSink;[deprecated]
*#getCapacity()J[deprecated]
*#isStarted()Z[deprecated]
+#isSerialized()Z
*#downstreams()Ljava/util/Iterator;[deprecated]
+#sink()Lreactor/core/publisher/FluxSink;
+#sink(Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/FluxSink;
@3.1.0.RELEASE
+#hasCompleted()Z
+#hasError()Z
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#connect()Lreactor/core/publisher/FluxProcessor;[deprecated]
-#connectSink()Lreactor/core/publisher/BlockingSink;[deprecated]
-#connectSink(Z)Lreactor/core/publisher/BlockingSink;[deprecated]
-#getCapacity()J[deprecated]
-#isStarted()Z[deprecated]
-#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#downstreams()Ljava/util/Iterator;[deprecated]
-#subscribe(Lorg/reactivestreams/Subscriber;)V
@3.3.2.RELEASE
+#currentContext()Lreactor/util/context/Context;
@3.4.0
*#switchOnNext()Lreactor/core/publisher/FluxProcessor;[deprecated]
*#sink()Lreactor/core/publisher/FluxSink;[deprecated]
*#sink(Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/FluxSink;[deprecated]

+###reactor/core/publisher/UnicastProcessor
@2.5.0.M4
+#create()Lreactor/core/publisher/UnicastProcessor;
+#create(Ljava/util/Queue;)Lreactor/core/publisher/UnicastProcessor;
+#create(Ljava/util/Queue;Ljava/lang/Runnable;)Lreactor/core/publisher/UnicastProcessor;
+#connect()Lreactor/core/publisher/UnicastProcessor;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#getMode()I
+#request(J)V
+#cancel()V
+#poll()Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#clear()V
+#requestFusion(I)I
+#isCancelled()Z
+#isStarted()Z
+#isTerminated()Z
+#getError()Ljava/lang/Throwable;
+#downstream()Ljava/lang/Object;
+#upstream()Ljava/lang/Object;
+#requestedFromDownstream()J
+#getCapacity()J
+#connect()Lreactor/core/publisher/FluxProcessor;
+#connect()Lreactor/core/subscriber/BaseSubscriber;
@3.0.0.RC1
+#<init>(Ljava/util/Queue;)V
+#<init>(Ljava/util/Queue;Ljava/lang/Runnable;)V
+#getPrefetch()J
-#connect()Lreactor/core/publisher/UnicastProcessor;
-#getMode()I
-#connect()Lreactor/core/publisher/FluxProcessor;
-#connect()Lreactor/core/subscriber/BaseSubscriber;
@3.0.0.RELEASE
+#serialize()Lreactor/core/publisher/FluxProcessor;
@3.0.1.RELEASE
+#create(Ljava/util/Queue;Lreactor/core/Cancellation;)Lreactor/core/publisher/UnicastProcessor;
+#create(Ljava/util/Queue;Ljava/util/function/Consumer;Lreactor/core/Cancellation;)Lreactor/core/publisher/UnicastProcessor;
+#<init>(Ljava/util/Queue;Lreactor/core/Cancellation;)V
+#<init>(Ljava/util/Queue;Ljava/util/function/Consumer;Lreactor/core/Cancellation;)V
-#create(Ljava/util/Queue;Ljava/lang/Runnable;)Lreactor/core/publisher/UnicastProcessor;
-#serialize()Lreactor/core/publisher/FluxProcessor;
-#<init>(Ljava/util/Queue;Ljava/lang/Runnable;)V
@3.0.4.RELEASE
+#create(Ljava/util/Queue;Lreactor/core/Disposable;)Lreactor/core/publisher/UnicastProcessor;
+#create(Ljava/util/Queue;Ljava/util/function/Consumer;Lreactor/core/Disposable;)Lreactor/core/publisher/UnicastProcessor;
+#<init>(Ljava/util/Queue;Lreactor/core/Disposable;)V
+#<init>(Ljava/util/Queue;Ljava/util/function/Consumer;Lreactor/core/Disposable;)V
-#create(Ljava/util/Queue;Lreactor/core/Cancellation;)Lreactor/core/publisher/UnicastProcessor;
-#create(Ljava/util/Queue;Ljava/util/function/Consumer;Lreactor/core/Cancellation;)Lreactor/core/publisher/UnicastProcessor;
-#<init>(Ljava/util/Queue;Lreactor/core/Cancellation;)V
-#<init>(Ljava/util/Queue;Ljava/util/function/Consumer;Lreactor/core/Cancellation;)V
@3.0.5.RELEASE
+#downstream()Lorg/reactivestreams/Subscriber;
@3.0.6.RELEASE
+#isDisposed()Z
+#actual()Lorg/reactivestreams/Subscriber;
+#downstreamCount()J
+#hasDownstreams()Z
-#isCancelled()Z
-#getCapacity()J
-#requestedFromDownstream()J
@3.0.7.RELEASE
*#isStarted()Z[deprecated]
@3.1.0.RELEASE
+#getBufferSize()I
+#getPrefetch()I
+#currentContext()Lreactor/util/context/Context;
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#actual()Lreactor/core/CoreSubscriber;
-#getPrefetch()J
-#subscribe(Lorg/reactivestreams/Subscriber;)V
-#downstream()Lorg/reactivestreams/Subscriber;
-#upstream()Ljava/lang/Object;
-#isStarted()Z[deprecated]
-#actual()Lorg/reactivestreams/Subscriber;
-#downstream()Ljava/lang/Object;
@3.1.1.RELEASE
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
@3.4.0
*#create(Ljava/util/Queue;Ljava/util/function/Consumer;Lreactor/core/Disposable;)Lreactor/core/publisher/UnicastProcessor;[deprecated]
*#<init>(Ljava/util/Queue;Ljava/util/function/Consumer;Lreactor/core/Disposable;)V[deprecated]
+#inners()Ljava/util/stream/Stream;
+#tryEmitComplete()Lreactor/core/publisher/Sinks$EmitResult;
+#tryEmitError(Ljava/lang/Throwable;)Lreactor/core/publisher/Sinks$EmitResult;
+#emitNext(Ljava/lang/Object;Lreactor/core/publisher/Sinks$EmitFailureHandler;)V
+#tryEmitNext(Ljava/lang/Object;)Lreactor/core/publisher/Sinks$EmitResult;
+#currentSubscriberCount()I
+#asFlux()Lreactor/core/publisher/Flux;
@3.4.1
*#create()Lreactor/core/publisher/UnicastProcessor;[deprecated]
*#create(Ljava/util/Queue;)Lreactor/core/publisher/UnicastProcessor;[deprecated]
*#create(Ljava/util/Queue;Lreactor/core/Disposable;)Lreactor/core/publisher/UnicastProcessor;[deprecated]

+###reactor/core/publisher/Operators
@3.0.0.RC1
+#addAndGet(Ljava/util/concurrent/atomic/AtomicLong;J)J
+#addAndGet(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
+#addCap(JJ)J
+#as(Lorg/reactivestreams/Subscription;)Lreactor/core/Fuseable$QueueSubscription;
+#cancelledSubscription()Lorg/reactivestreams/Subscription;
+#checkRequest(J)V
+#checkRequest(JLorg/reactivestreams/Subscriber;)Z
+#complete(Lorg/reactivestreams/Subscriber;)V
+#emptySubscription()Lorg/reactivestreams/Subscription;
+#error(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
+#getAndAddCap(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
+#getAndSub(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
+#getAndSub(Ljava/util/concurrent/atomic/AtomicLong;J)J
+#multiplyCap(JJ)J
+#replace(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
+#reportBadRequest(J)V
+#reportMoreProduced()V
+#reportSubscriptionSet()V
+#set(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
+#setOnce(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
+#subOrZero(JJ)J
+#terminate(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
+#validate(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
+#validate(J)Z
+#scalarSubscription(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)Lorg/reactivestreams/Subscription;
+#serialize(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
@3.0.0.RELEASE
+#onErrorDropped(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
+#onErrorDropped(Ljava/lang/Throwable;)V
+#onNextDropped(Ljava/lang/Object;)V
+#onOperatorError(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#onOperatorError(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#onOperatorError(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Throwable;
@3.0.1.RELEASE
+#produced(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
-#getAndSub(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
-#getAndSub(Ljava/util/concurrent/atomic/AtomicLong;J)J
@3.0.4.RELEASE
+#onRejectedExecution()Ljava/lang/RuntimeException;
+#onRejectedExecution(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/RuntimeException;
@3.0.5.RELEASE
*#addAndGet(Ljava/util/concurrent/atomic/AtomicLong;J)J[deprecated]
+#drainSubscriber()Lorg/reactivestreams/Subscriber;
@3.1.0.RELEASE
+#addCap(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
+#drainSubscriber()Lreactor/core/CoreSubscriber;
+#emptySubscriber()Lreactor/core/CoreSubscriber;
+#lift(Ljava/util/function/BiFunction;)Ljava/util/function/Function;
+#lift(Ljava/util/function/Predicate;Ljava/util/function/BiFunction;)Ljava/util/function/Function;
+#onErrorDropped(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
+#onNextDropped(Ljava/lang/Object;Lreactor/util/context/Context;)V
+#onOperatorError(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
+#onOperatorError(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
+#onOperatorError(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
+#onRejectedExecution(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
+#onRejectedExecution(Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
+#scalarSubscription(Lreactor/core/CoreSubscriber;Ljava/lang/Object;)Lorg/reactivestreams/Subscription;
+#serialize(Lreactor/core/CoreSubscriber;)Lreactor/core/CoreSubscriber;
+#toCoreSubscriber(Lorg/reactivestreams/Subscriber;)Lreactor/core/CoreSubscriber;
-#addAndGet(Ljava/util/concurrent/atomic/AtomicLong;J)J[deprecated]
-#addAndGet(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
-#checkRequest(J)V
-#checkRequest(JLorg/reactivestreams/Subscriber;)Z
-#drainSubscriber()Lorg/reactivestreams/Subscriber;
-#getAndAddCap(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
-#onErrorDropped(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
-#onErrorDropped(Ljava/lang/Throwable;)V
-#onNextDropped(Ljava/lang/Object;)V
-#onOperatorError(Ljava/lang/Throwable;)Ljava/lang/Throwable;
-#onOperatorError(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;)Ljava/lang/Throwable;
-#onOperatorError(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Throwable;
-#onRejectedExecution()Ljava/lang/RuntimeException;
-#onRejectedExecution(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/RuntimeException;
-#scalarSubscription(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)Lorg/reactivestreams/Subscription;
-#serialize(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
@3.2.0.RELEASE
+#liftPublisher(Ljava/util/function/BiFunction;)Ljava/util/function/Function;
+#liftPublisher(Ljava/util/function/Predicate;Ljava/util/function/BiFunction;)Ljava/util/function/Function;
+#enableOnDiscard(Lreactor/util/context/Context;Ljava/util/function/Consumer;)Lreactor/util/context/Context;
+#onDiscard(Ljava/lang/Object;Lreactor/util/context/Context;)V
+#onDiscardQueueWithClear(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
+#onDiscardMultiple(Ljava/util/stream/Stream;Lreactor/util/context/Context;)V
+#onDiscardMultiple(Ljava/util/Collection;Lreactor/util/context/Context;)V
+#onNextErrorFunction(Lreactor/util/context/Context;)Ljava/util/function/BiFunction;
+#onNextError(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
+#onNextInnerError(Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
+#onNextPollError(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
@3.2.4.RELEASE
+#toConditionalSubscriber(Lreactor/core/CoreSubscriber;)Lreactor/core/Fuseable$ConditionalSubscriber;
@3.2.13.RELEASE
+#onNextError(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
@3.2.15.RELEASE
+#onDiscardMultiple(Ljava/util/Iterator;ZLreactor/util/context/Context;)V
@3.3.0.RELEASE
+#onLastAssembly(Lreactor/core/CorePublisher;)Lreactor/core/CorePublisher;
-#onDiscardMultiple(Ljava/util/Iterator;ZLreactor/util/context/Context;)V
-#onNextError(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
@3.3.1.RELEASE
+#onNextError(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
@3.3.3.RELEASE
+#onDiscardMultiple(Ljava/util/Iterator;ZLreactor/util/context/Context;)V
@3.3.5.RELEASE
+#canAppearAfterOnSubscribe(Lorg/reactivestreams/Subscription;)Z
+#reportThrowInSubscribe(Lreactor/core/CoreSubscriber;Ljava/lang/Throwable;)V
@3.3.14.RELEASE
+#scalarSubscription(Lreactor/core/CoreSubscriber;Ljava/lang/Object;Ljava/lang/String;)Lorg/reactivestreams/Subscription;
@3.4.0
-#scalarSubscription(Lreactor/core/CoreSubscriber;Ljava/lang/Object;Ljava/lang/String;)Lorg/reactivestreams/Subscription;
@3.4.3
+#scalarSubscription(Lreactor/core/CoreSubscriber;Ljava/lang/Object;Ljava/lang/String;)Lorg/reactivestreams/Subscription;
@3.4.26
+#onDiscardMultiple(Ljava/util/Spliterator;ZLreactor/util/context/Context;)V
@3.5.0
-#onDiscardMultiple(Ljava/util/Spliterator;ZLreactor/util/context/Context;)V
@3.5.1
+#onDiscardMultiple(Ljava/util/Spliterator;ZLreactor/util/context/Context;)V

+###reactor/core/publisher/EventLoopProcessor$Slot
@3.0.0.RC1
+#<init>()V
@3.4.0
-###reactor/core/publisher/EventLoopProcessor$Slot

+###reactor/core/publisher/WorkQueueProcessor$Builder
@3.1.0.RELEASE
+#name(Ljava/lang/String;)Lreactor/core/publisher/WorkQueueProcessor$Builder;
+#bufferSize(I)Lreactor/core/publisher/WorkQueueProcessor$Builder;
+#waitStrategy(Lreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/WorkQueueProcessor$Builder;
+#autoCancel(Z)Lreactor/core/publisher/WorkQueueProcessor$Builder;
+#executor(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/WorkQueueProcessor$Builder;
+#requestTaskExecutor(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/WorkQueueProcessor$Builder;
+#share(Z)Lreactor/core/publisher/WorkQueueProcessor$Builder;
+#build()Lreactor/core/publisher/WorkQueueProcessor;
@3.4.0
-###reactor/core/publisher/WorkQueueProcessor$Builder

+###reactor/core/publisher/FluxBufferPredicate$Mode
@3.0.4.RELEASE
+#values()[Lreactor/core/publisher/FluxBufferPredicate$Mode;
+#valueOf(Ljava/lang/String;)Lreactor/core/publisher/FluxBufferPredicate$Mode;

+###reactor/core/publisher/EmitterProcessor
@2.5.0.M1
+#create()Lreactor/core/publisher/EmitterProcessor;
+#create(Z)Lreactor/core/publisher/EmitterProcessor;
+#create(I)Lreactor/core/publisher/EmitterProcessor;
+#create(II)Lreactor/core/publisher/EmitterProcessor;
+#create(IZ)Lreactor/core/publisher/EmitterProcessor;
+#create(IIZ)Lreactor/core/publisher/EmitterProcessor;
+#replay()Lreactor/core/publisher/EmitterProcessor;
+#replay(I)Lreactor/core/publisher/EmitterProcessor;
+#replay(II)Lreactor/core/publisher/EmitterProcessor;
+#replay(IIZ)Lreactor/core/publisher/EmitterProcessor;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#getPending()J
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#getError()Ljava/lang/Throwable;
+#isCancelled()Z
+#getCapacity()J
+#isStarted()Z
+#isTerminated()Z
+#limit()J
+#expectedFromUpstream()J
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
+#toString()Ljava/lang/String;
@2.5.0.M2
+#replayLast()Lreactor/core/publisher/EmitterProcessor;
+#replayLastOrDefault(Ljava/lang/Object;)Lreactor/core/publisher/EmitterProcessor;
+#connect()Lreactor/core/publisher/EmitterProcessor;
+#connect()Lreactor/core/publisher/FluxProcessor;
+#connect()Lreactor/core/subscriber/BaseSubscriber;
@2.5.0.M3
+#async(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/FluxProcessor;
+#serialize()Lreactor/core/publisher/FluxProcessor;
@2.5.0.M4
+#upstream()Lorg/reactivestreams/Subscription;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#upstream()Ljava/lang/Object;
-#async(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/FluxProcessor;
-#replay()Lreactor/core/publisher/EmitterProcessor;
-#replay(I)Lreactor/core/publisher/EmitterProcessor;
-#replay(II)Lreactor/core/publisher/EmitterProcessor;
-#replay(IIZ)Lreactor/core/publisher/EmitterProcessor;
-#replayLast()Lreactor/core/publisher/EmitterProcessor;
-#replayLastOrDefault(Ljava/lang/Object;)Lreactor/core/publisher/EmitterProcessor;
@3.0.0.RC1
-#connect()Lreactor/core/subscriber/BaseSubscriber;
@3.0.1.RELEASE
-#serialize()Lreactor/core/publisher/FluxProcessor;
@3.0.6.RELEASE
+#inners()Ljava/util/stream/Stream;
+#getBufferSize()I
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#getCapacity()J
-#limit()J
-#expectedFromUpstream()J
-#downstreams()Ljava/util/Iterator;
@3.0.7.RELEASE
*#create(II)Lreactor/core/publisher/EmitterProcessor;[deprecated]
*#create(IIZ)Lreactor/core/publisher/EmitterProcessor;[deprecated]
*#upstream()Lorg/reactivestreams/Subscription;[deprecated]
*#connect()Lreactor/core/publisher/EmitterProcessor;[deprecated]
*#isStarted()Z[deprecated]
*#connect()Lreactor/core/publisher/FluxProcessor;[deprecated]
*#upstream()Ljava/lang/Object;[deprecated]
-#toString()Ljava/lang/String;
@3.1.0.RELEASE
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#getPending()I
+#getPrefetch()I
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#create(II)Lreactor/core/publisher/EmitterProcessor;[deprecated]
-#create(IIZ)Lreactor/core/publisher/EmitterProcessor;[deprecated]
-#upstream()Lorg/reactivestreams/Subscription;[deprecated]
-#subscribe(Lorg/reactivestreams/Subscriber;)V
-#connect()Lreactor/core/publisher/EmitterProcessor;[deprecated]
-#getPending()J
-#isStarted()Z[deprecated]
-#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
-#connect()Lreactor/core/publisher/FluxProcessor;[deprecated]
-#upstream()Ljava/lang/Object;[deprecated]
@3.3.10.RELEASE
+#currentContext()Lreactor/util/context/Context;
@3.4.0
+#tryEmitComplete()Lreactor/core/publisher/Sinks$EmitResult;
+#tryEmitError(Ljava/lang/Throwable;)Lreactor/core/publisher/Sinks$EmitResult;
+#tryEmitNext(Ljava/lang/Object;)Lreactor/core/publisher/Sinks$EmitResult;
+#currentSubscriberCount()I
+#asFlux()Lreactor/core/publisher/Flux;
+#isDisposed()Z
@3.4.1
*#create()Lreactor/core/publisher/EmitterProcessor;[deprecated]
*#create(Z)Lreactor/core/publisher/EmitterProcessor;[deprecated]
*#create(I)Lreactor/core/publisher/EmitterProcessor;[deprecated]
*#create(IZ)Lreactor/core/publisher/EmitterProcessor;[deprecated]
@3.4.19
+#subscribeTo(Lorg/reactivestreams/Publisher;)Lreactor/core/Disposable;

+###reactor/core/publisher/ParallelFlux
@2.5.0.M4
+#<init>()V
+#from(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/ParallelFlux;
+#from(Lorg/reactivestreams/Publisher;I)Lreactor/core/publisher/ParallelFlux;
+#from(Lorg/reactivestreams/Publisher;IILjava/util/function/Supplier;)Lreactor/core/publisher/ParallelFlux;
+#from([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/ParallelFlux;
+#as(Ljava/util/function/Function;)Ljava/lang/Object;
+#collect(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;)Lreactor/core/publisher/ParallelFlux;
+#collectSortedList(Ljava/util/Comparator;)Lreactor/core/publisher/Flux;
+#collectSortedList(Ljava/util/Comparator;I)Lreactor/core/publisher/Flux;
+#compose(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
+#concatMap(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
+#concatMap(Ljava/util/function/Function;I)Lreactor/core/publisher/ParallelFlux;
+#concatMapDelayError(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
+#doAfterTerminated(Ljava/lang/Runnable;)Lreactor/core/publisher/ParallelFlux;
+#doOnCancel(Ljava/util/function/Consumer;)Lreactor/core/publisher/ParallelFlux;
+#doOnCancel(Ljava/lang/Runnable;)Lreactor/core/publisher/ParallelFlux;
+#doOnComplete(Ljava/lang/Runnable;)Lreactor/core/publisher/ParallelFlux;
+#doOnError(Ljava/util/function/Consumer;)Lreactor/core/publisher/ParallelFlux;
+#doOnNext(Ljava/util/function/Consumer;)Lreactor/core/publisher/ParallelFlux;
+#doOnRequest(Ljava/util/function/LongConsumer;)Lreactor/core/publisher/ParallelFlux;
+#filter(Ljava/util/function/Predicate;)Lreactor/core/publisher/ParallelFlux;
+#flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
+#flatMap(Ljava/util/function/Function;Z)Lreactor/core/publisher/ParallelFlux;
+#flatMap(Ljava/util/function/Function;ZI)Lreactor/core/publisher/ParallelFlux;
+#flatMap(Ljava/util/function/Function;ZII)Lreactor/core/publisher/ParallelFlux;
+#groups()Lreactor/core/publisher/Flux;
+#isOrdered()Z
+#map(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
+#parallelism()I
+#reduce(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
+#reduce(Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Lreactor/core/publisher/ParallelFlux;
+#runOn(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/ParallelFlux;
+#runOn(Lreactor/core/scheduler/Scheduler;I)Lreactor/core/publisher/ParallelFlux;
+#sequential()Lreactor/core/publisher/Flux;
+#sequential(I)Lreactor/core/publisher/Flux;
+#sorted(Ljava/util/Comparator;)Lreactor/core/publisher/Flux;
+#sorted(Ljava/util/Comparator;I)Lreactor/core/publisher/Flux;
+#subscribe([Lorg/reactivestreams/Subscriber;)V
+#subscribe(Ljava/util/function/Consumer;)V
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
@3.0.0.RC1
+#getPrefetch()J
@3.0.1.RELEASE
+#collectSortedList(Ljava/util/Comparator;)Lreactor/core/publisher/Mono;
+#collectSortedList(Ljava/util/Comparator;I)Lreactor/core/publisher/Mono;
+#doAfterTerminate(Ljava/lang/Runnable;)Lreactor/core/publisher/ParallelFlux;
+#doOnSubscribe(Ljava/util/function/Consumer;)Lreactor/core/publisher/ParallelFlux;
+#doOnTerminate(Ljava/lang/Runnable;)Lreactor/core/publisher/ParallelFlux;
+#hide()Lreactor/core/publisher/ParallelFlux;
+#log()Lreactor/core/publisher/ParallelFlux;
+#log(Ljava/lang/String;)Lreactor/core/publisher/ParallelFlux;
+#log(Ljava/lang/String;Ljava/util/logging/Level;[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/ParallelFlux;
+#log(Ljava/lang/String;Ljava/util/logging/Level;Z[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/ParallelFlux;
+#reduce(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#transform(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
-#collectSortedList(Ljava/util/Comparator;)Lreactor/core/publisher/Flux;
-#collectSortedList(Ljava/util/Comparator;I)Lreactor/core/publisher/Flux;
-#compose(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
-#doAfterTerminated(Ljava/lang/Runnable;)Lreactor/core/publisher/ParallelFlux;
-#doOnCancel(Ljava/util/function/Consumer;)Lreactor/core/publisher/ParallelFlux;
-#reduce(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Flux;
@3.0.3.RELEASE
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)V
@3.0.5.RELEASE
+#checkpoint()Lreactor/core/publisher/ParallelFlux;
+#checkpoint(Ljava/lang/String;)Lreactor/core/publisher/ParallelFlux;
+#doOnEach(Ljava/util/function/Consumer;)Lreactor/core/publisher/ParallelFlux;
*#isOrdered()Z[deprecated]
+#composeGroup(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
@3.1.0.RELEASE
+#checkpoint(Ljava/lang/String;Z)Lreactor/core/publisher/ParallelFlux;
+#name(Ljava/lang/String;)Lreactor/core/publisher/ParallelFlux;
+#subscribe()Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/ParallelFlux;
+#toString()Ljava/lang/String;
+#getPrefetch()I
-#isOrdered()Z[deprecated]
-#subscribe([Lorg/reactivestreams/Subscriber;)V
-#subscribe(Ljava/util/function/Consumer;)V
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)V
-#getPrefetch()J
@3.1.4.RELEASE
+#ordered(Ljava/util/Comparator;)Lreactor/core/publisher/Flux;
+#ordered(Ljava/util/Comparator;I)Lreactor/core/publisher/Flux;
@3.3.0.RELEASE
*#composeGroup(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;[deprecated]
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Lreactor/util/context/Context;)Lreactor/core/Disposable;[deprecated]
+#then()Lreactor/core/publisher/Mono;
+#transformGroups(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;
@3.4.0
+#subscribe([Lreactor/core/CoreSubscriber;)V
-#composeGroup(Ljava/util/function/Function;)Lreactor/core/publisher/ParallelFlux;[deprecated]

+###reactor/core/publisher/OnNextFailureStrategy$ResumeStrategy
@3.2.0.RELEASE
+#test(Ljava/lang/Throwable;Ljava/lang/Object;)Z
+#process(Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z

+###reactor/core/publisher/SignalType
@3.0.0.RC1
+#values()[Lreactor/core/publisher/SignalType;
+#valueOf(Ljava/lang/String;)Lreactor/core/publisher/SignalType;
@3.0.0.RELEASE
+#toString()Ljava/lang/String;

+###reactor/core/publisher/BaseSubscriber
@3.0.4.RELEASE
+#<init>()V
+#upstream()Lorg/reactivestreams/Subscription;
+#isStarted()Z
+#isDisposed()Z
+#dispose()V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
+#cancel()V
+#isTerminated()Z
+#toString()Ljava/lang/String;
+#upstream()Ljava/lang/Object;
@3.0.6.RELEASE
*#isTerminated()Z[deprecated]
+#requestUnbounded()V
@3.1.0.RELEASE
-#upstream()Lorg/reactivestreams/Subscription;
-#isStarted()Z
-#isTerminated()Z[deprecated]
-#upstream()Ljava/lang/Object;

+###reactor/core/publisher/TopicProcessor$Builder
@3.1.0.RELEASE
+#name(Ljava/lang/String;)Lreactor/core/publisher/TopicProcessor$Builder;
+#bufferSize(I)Lreactor/core/publisher/TopicProcessor$Builder;
+#waitStrategy(Lreactor/util/concurrent/WaitStrategy;)Lreactor/core/publisher/TopicProcessor$Builder;
+#autoCancel(Z)Lreactor/core/publisher/TopicProcessor$Builder;
+#executor(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/TopicProcessor$Builder;
+#requestTaskExecutor(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/TopicProcessor$Builder;
+#share(Z)Lreactor/core/publisher/TopicProcessor$Builder;
+#signalSupplier(Ljava/util/function/Supplier;)Lreactor/core/publisher/TopicProcessor$Builder;
+#build()Lreactor/core/publisher/TopicProcessor;
@3.4.0
-###reactor/core/publisher/TopicProcessor$Builder

+###reactor/core/publisher/Signal
@2.5.0.M2
+#next(Ljava/lang/Object;)Lreactor/core/publisher/Signal;
+#error(Ljava/lang/Throwable;)Lreactor/core/publisher/Signal;
+#complete()Lreactor/core/publisher/Signal;
+#subscribe(Lorg/reactivestreams/Subscription;)Lreactor/core/publisher/Signal;
+#getThrowable()Ljava/lang/Throwable;
+#getSubscription()Lorg/reactivestreams/Subscription;
+#get()Ljava/lang/Object;
+#hasValue()Z
+#hasError()Z
+#getType()Lreactor/core/util/SignalKind;
+#isOnError()Z
+#isOnComplete()Z
+#isOnSubscribe()Z
+#isOnNext()Z
+#accept(Lorg/reactivestreams/Subscriber;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#accept(Ljava/lang/Object;)V
@3.0.0.RC1
+#getType()Lreactor/core/publisher/SignalType;
-#getType()Lreactor/core/util/SignalKind;
@3.0.1.RELEASE
+#isComplete(Ljava/lang/Object;)Z
+#isError(Ljava/lang/Object;)Z
@3.0.4.RELEASE
+#<init>()V
@3.1.0.RELEASE
-#<init>()V
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@3.1.3.RELEASE
+#complete(Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
+#error(Ljava/lang/Throwable;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
+#next(Ljava/lang/Object;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
+#subscribe(Lorg/reactivestreams/Subscription;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
+#getContext()Lreactor/util/context/Context;
@3.4.0
*#getContext()Lreactor/util/context/Context;[deprecated]
+#getContextView()Lreactor/util/context/ContextView;
@3.5.0
-#getContext()Lreactor/util/context/Context;[deprecated]

+###reactor/core/publisher/MonoOperator
@3.1.0.RELEASE
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;

+###reactor/core/publisher/OnNextFailureStrategy$LambdaOnNextErrorStrategy
@3.2.0.RELEASE
+#<init>(Ljava/util/function/BiFunction;)V
+#test(Ljava/lang/Throwable;Ljava/lang/Object;)Z
+#process(Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z

+###reactor/core/publisher/FluxSink
@3.0.0.RC1
+#complete()V
+#fail(Ljava/lang/Throwable;)V
+#next(Ljava/lang/Object;)V
+#setCancellation(Lreactor/core/Cancellation;)V
@3.0.0.RELEASE
+#error(Ljava/lang/Throwable;)V
-#fail(Ljava/lang/Throwable;)V
@3.0.1.RELEASE
+#requestedFromDownstream()J
+#isCancelled()Z
+#serialize()Lreactor/core/publisher/FluxSink;
@3.0.6.RELEASE
*#serialize()Lreactor/core/publisher/FluxSink;[deprecated]
+#onRequest(Ljava/util/function/LongConsumer;)Lreactor/core/publisher/FluxSink;
+#onCancel(Lreactor/core/Disposable;)Lreactor/core/publisher/FluxSink;
+#onDispose(Lreactor/core/Disposable;)Lreactor/core/publisher/FluxSink;
*#setCancellation(Lreactor/core/Cancellation;)V[deprecated]
@3.1.0.RELEASE
+#currentContext()Lreactor/util/context/Context;
+#next(Ljava/lang/Object;)Lreactor/core/publisher/FluxSink;
-#next(Ljava/lang/Object;)V
-#serialize()Lreactor/core/publisher/FluxSink;[deprecated]
-#setCancellation(Lreactor/core/Cancellation;)V[deprecated]
@3.4.17
*#currentContext()Lreactor/util/context/Context;[deprecated]
+#contextView()Lreactor/util/context/ContextView;

+###reactor/core/publisher/FluxSink$OverflowStrategy
@3.0.0.RC1
+#values()[Lreactor/core/publisher/FluxSink$OverflowStrategy;
+#valueOf(Ljava/lang/String;)Lreactor/core/publisher/FluxSink$OverflowStrategy;

+###reactor/core/publisher/Mono
@2.5.0.M1
+#any([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#any(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#defer(Lreactor/fn/Supplier;)Lreactor/core/publisher/Mono;
+#delay(J)Lreactor/core/publisher/Mono;
+#delay(JLjava/util/concurrent/TimeUnit;)Lreactor/core/publisher/Mono;
+#delay(JLjava/util/concurrent/TimeUnit;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Mono;
+#empty()Lreactor/core/publisher/Mono;
+#empty(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#error(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
+#from(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#fromCallable(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
+#fromRunnable(Ljava/lang/Runnable;)Lreactor/core/publisher/Mono;
+#ignoreElements(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#just(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#never()Lreactor/core/publisher/Mono;
+#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#when(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#when(Lreactor/fn/Function;Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#as(Lreactor/fn/Function;)Lorg/reactivestreams/Publisher;
+#and(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#after()Lreactor/core/publisher/Mono;
+#after(Lreactor/fn/Supplier;)Lreactor/core/publisher/Mono;
+#debug()Lreactor/core/util/ReactiveStateUtils$Graph;
+#defaultIfEmpty(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#dispatchOn(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
+#doAfterTerminate(Lreactor/fn/BiConsumer;)Lreactor/core/publisher/Mono;
+#doOnCancel(Ljava/lang/Runnable;)Lreactor/core/publisher/Mono;
+#doOnSuccess(Lreactor/fn/Consumer;)Lreactor/core/publisher/Mono;
+#doOnError(Lreactor/fn/Consumer;)Lreactor/core/publisher/Mono;
+#doOnSubscribe(Lreactor/fn/Consumer;)Lreactor/core/publisher/Mono;
+#doOnTerminate(Lreactor/fn/BiConsumer;)Lreactor/core/publisher/Mono;
+#flatMap(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
+#flatMap(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Supplier;)Lreactor/core/publisher/Flux;
+#flux()Lreactor/core/publisher/Flux;
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#getCapacity()J
+#getMode()I
+#getName()Ljava/lang/String;
+#getPending()J
+#lift(Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#log()Lreactor/core/publisher/Mono;
+#log(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#log(Ljava/lang/String;Ljava/util/logging/Level;)Lreactor/core/publisher/Mono;
+#log(Ljava/lang/String;Ljava/util/logging/Level;I)Lreactor/core/publisher/Mono;
+#map(Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#mergeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#or(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#otherwise(Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#otherwiseIfEmpty(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#otherwiseJust(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#publishOn(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
+#subscribe()Ljava/lang/Runnable;
+#then(Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#then(Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#then(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#then(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#then(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#then(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
+#subscribeWith(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
+#where(Lreactor/fn/Predicate;)Lreactor/core/publisher/Mono;
@2.5.0.M2
+#defer(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#delay(Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#delay(JLreactor/core/timer/Timer;)Lreactor/core/publisher/Mono;
+#delay(Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Mono;
+#fromCompletableFuture(Ljava/util/concurrent/CompletableFuture;)Lreactor/core/publisher/Mono;
+#fromFuture(Ljava/util/concurrent/Future;)Lreactor/core/publisher/Mono;
+#fromFuture(Ljava/util/concurrent/Future;J)Lreactor/core/publisher/Mono;
+#fromFuture(Ljava/util/concurrent/Future;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#justOrEmpty(Ljava/util/Optional;)Lreactor/core/publisher/Mono;
+#justOrEmpty(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#when(Ljava/util/function/Function;Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#as(Ljava/util/function/Function;)Lorg/reactivestreams/Publisher;
+#as(Ljava/lang/Class;)Ljava/lang/Object;
+#after(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#after(Ljava/util/function/Supplier;Z)Lreactor/core/publisher/Mono;
+#cast(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#cache()Lreactor/core/publisher/Mono;
+#consume(Ljava/util/function/Consumer;)Ljava/lang/Runnable;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Ljava/lang/Runnable;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#delaySubscription(J)Lreactor/core/publisher/Mono;
+#delaySubscription(Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#delaySubscription(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#dematerialize()Lreactor/core/publisher/Mono;
+#doAfterTerminate(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
+#doOnSuccess(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#doOnError(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#doOnRequest(Ljava/util/function/LongConsumer;)Lreactor/core/publisher/Mono;
+#doOnSubscribe(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#doOnTerminate(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
+#elapsed()Lreactor/core/publisher/Mono;
+#flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#get(J)Ljava/lang/Object;
+#get(Ljava/time/Duration;)Ljava/lang/Object;
+#hasElement()Lreactor/core/publisher/Mono;
+#ignoreElement()Lreactor/core/publisher/Mono;
+#lift(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#map(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#materialize()Lreactor/core/publisher/Mono;
+#nest()Lreactor/core/publisher/Mono;
+#otherwise(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#repeatWhenEmpty(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#repeatWhenEmpty(ILjava/util/function/Function;)Lreactor/core/publisher/Mono;
+#retry()Lreactor/core/publisher/Mono;
+#retry(J)Lreactor/core/publisher/Mono;
+#retry(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
+#retry(JLjava/util/function/Predicate;)Lreactor/core/publisher/Mono;
+#retryWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#subscribe()Lreactor/core/publisher/MonoProcessor;
+#then(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#then(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#then(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#then(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#then(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#then(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#timeout(J)Lreactor/core/publisher/Mono;
+#timeout(Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#timeout(Ljava/time/Duration;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#timeout(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#timeout(Lorg/reactivestreams/Publisher;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#timestamp()Lreactor/core/publisher/Mono;
+#toCompletableFuture()Ljava/util/concurrent/CompletableFuture;
+#where(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
-#defer(Lreactor/fn/Supplier;)Lreactor/core/publisher/Mono;
-#delay(JLjava/util/concurrent/TimeUnit;)Lreactor/core/publisher/Mono;
-#delay(JLjava/util/concurrent/TimeUnit;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Mono;
-#when(Lreactor/fn/Function;Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
-#as(Lreactor/fn/Function;)Lorg/reactivestreams/Publisher;
-#after(Lreactor/fn/Supplier;)Lreactor/core/publisher/Mono;
-#doAfterTerminate(Lreactor/fn/BiConsumer;)Lreactor/core/publisher/Mono;
-#doOnSuccess(Lreactor/fn/Consumer;)Lreactor/core/publisher/Mono;
-#doOnError(Lreactor/fn/Consumer;)Lreactor/core/publisher/Mono;
-#doOnSubscribe(Lreactor/fn/Consumer;)Lreactor/core/publisher/Mono;
-#doOnTerminate(Lreactor/fn/BiConsumer;)Lreactor/core/publisher/Mono;
-#flatMap(Lreactor/fn/Function;)Lreactor/core/publisher/Flux;
-#flatMap(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Supplier;)Lreactor/core/publisher/Flux;
-#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
-#getPending()J
-#lift(Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#map(Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#otherwise(Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#subscribe()Ljava/lang/Runnable;
-#then(Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#then(Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#then(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#then(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#then(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#then(Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;Lreactor/fn/Function;)Lreactor/core/publisher/Mono;
-#where(Lreactor/fn/Predicate;)Lreactor/core/publisher/Mono;
@2.5.0.M3
+#delay(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
+#delay(Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
+#fromSupplier(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#when([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#whenDelayError([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zip(Ljava/util/function/Function;Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#after(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#afterSuccessOrError(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#consume(Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
+#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
+#concatWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#flatMapIterable(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#flatMapIterable(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#hide()Lreactor/core/publisher/Mono;
+#publishOn(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#publishOn(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/Mono;
+#subscribeOn(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#subscribeOn(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/Mono;
-#delay(JLreactor/core/timer/Timer;)Lreactor/core/publisher/Mono;
-#delay(Ljava/time/Duration;Lreactor/core/timer/Timer;)Lreactor/core/publisher/Mono;
-#when(Ljava/util/function/Function;Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
-#as(Ljava/lang/Class;)Ljava/lang/Object;
-#after(Ljava/util/function/Supplier;Z)Lreactor/core/publisher/Mono;
-#consume(Ljava/util/function/Consumer;)Ljava/lang/Runnable;
-#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Ljava/lang/Runnable;
-#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/lang/Runnable;
-#dispatchOn(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
-#publishOn(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
@2.5.0.M4
+#create(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#first([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#first(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#fromCallableOrEmpty(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
+#fromFuture(Ljava/util/concurrent/CompletableFuture;)Lreactor/core/publisher/Mono;
+#using(Ljava/util/concurrent/Callable;Ljava/util/function/Function;Ljava/util/function/Consumer;Z)Lreactor/core/publisher/Mono;
+#using(Ljava/util/concurrent/Callable;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#zip(Ljava/util/function/Function;[Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#as(Ljava/util/function/Function;)Ljava/lang/Object;
+#block()Ljava/lang/Object;
+#block(J)Ljava/lang/Object;
+#block(Ljava/time/Duration;)Ljava/lang/Object;
+#block(Lreactor/core/util/WaitStrategy;)Ljava/lang/Object;
+#compose(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#doOnNext(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#doOnError(Ljava/lang/Class;Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#doOnError(Ljava/util/function/Predicate;Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#filter(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
+#mapError(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#mapError(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#mapError(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#otherwise(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#otherwise(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#otherwiseReturn(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#otherwiseReturn(Ljava/lang/Class;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#otherwiseReturn(Ljava/util/function/Predicate;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#onTerminateDetach()Lreactor/core/publisher/Mono;
+#publish(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#repeat()Lreactor/core/publisher/Flux;
+#repeat(Ljava/util/function/BooleanSupplier;)Lreactor/core/publisher/Flux;
+#repeat(J)Lreactor/core/publisher/Flux;
+#repeat(JLjava/util/function/BooleanSupplier;)Lreactor/core/publisher/Flux;
+#repeatWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#subscribe(Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
+#then()Lreactor/core/publisher/Mono;
+#then(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#then(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#thenMany(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#thenMany(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
+#toFuture()Ljava/util/concurrent/CompletableFuture;
-#any([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#any(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
-#fromCompletableFuture(Ljava/util/concurrent/CompletableFuture;)Lreactor/core/publisher/Mono;
-#fromFuture(Ljava/util/concurrent/Future;)Lreactor/core/publisher/Mono;
-#fromFuture(Ljava/util/concurrent/Future;J)Lreactor/core/publisher/Mono;
-#fromFuture(Ljava/util/concurrent/Future;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
-#as(Ljava/util/function/Function;)Lorg/reactivestreams/Publisher;
-#after()Lreactor/core/publisher/Mono;
-#after(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#after(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#afterSuccessOrError(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#consume(Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
-#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
-#consume(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
-#flatMap(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
-#flatMapIterable(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
-#get()Ljava/lang/Object;
-#get(J)Ljava/lang/Object;
-#get(Ljava/time/Duration;)Ljava/lang/Object;
-#lift(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#otherwiseJust(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
-#publishOn(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/Mono;
-#subscribeOn(Ljava/util/concurrent/ExecutorService;)Lreactor/core/publisher/Mono;
-#then(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#then(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#then(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#then(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#then(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#toCompletableFuture()Ljava/util/concurrent/CompletableFuture;
-#where(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
@3.0.0.RC1
+#<init>()V
+#delayMillis(J)Lreactor/core/publisher/Mono;
+#delayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
+#blockMillis(J)Ljava/lang/Object;
+#block(Lreactor/util/concurrent/WaitStrategy;)Ljava/lang/Object;
+#delaySubscriptionMillis(J)Lreactor/core/publisher/Mono;
+#delaySubscriptionMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
+#log(Ljava/lang/String;Ljava/util/logging/Level;[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Mono;
+#subscribe(Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Cancellation;
+#timeoutMillis(J)Lreactor/core/publisher/Mono;
+#timeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
+#timeoutMillis(JLreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#timeoutMillis(JLreactor/core/publisher/Mono;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;
-#delay(J)Lreactor/core/publisher/Mono;
-#delay(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
-#delay(Ljava/time/Duration;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
-#block(J)Ljava/lang/Object;
-#block(Lreactor/core/util/WaitStrategy;)Ljava/lang/Object;
-#debug()Lreactor/core/util/ReactiveStateUtils$Graph;
-#delaySubscription(J)Lreactor/core/publisher/Mono;
-#getCapacity()J
-#getMode()I
-#getName()Ljava/lang/String;
-#log(Ljava/lang/String;Ljava/util/logging/Level;)Lreactor/core/publisher/Mono;
-#log(Ljava/lang/String;Ljava/util/logging/Level;I)Lreactor/core/publisher/Mono;
-#nest()Lreactor/core/publisher/Mono;
-#subscribe(Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/flow/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
-#timeout(J)Lreactor/core/publisher/Mono;
@3.0.0.RELEASE
+#when(Ljava/lang/Iterable;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#when([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#when(Ljava/util/function/Function;[Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#whenDelayError([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#whenDelayError(Ljava/util/function/Function;[Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#awaitOnSubscribe()Lreactor/core/publisher/Mono;
+#handle(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
+#transform(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#fromCallableOrEmpty(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
-#when([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#whenDelayError([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#block(Lreactor/util/concurrent/WaitStrategy;)Ljava/lang/Object;
@3.0.1.RELEASE
+#sequenceEqual(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#sequenceEqual(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/BiPredicate;)Lreactor/core/publisher/Mono;
+#sequenceEqual(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/BiPredicate;I)Lreactor/core/publisher/Mono;
+#cancelOn(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#elapsed(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
+#log(Ljava/lang/String;Ljava/util/logging/Level;Z[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Mono;
+#ofType(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#timestamp(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
@3.0.3.RELEASE
+#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#and(Lreactor/core/publisher/Mono;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
@3.0.4.RELEASE
+#and(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#and(Ljava/util/function/Function;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#doFinally(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#subscribe(Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Disposable;
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)Lreactor/core/Disposable;
+#thenEmpty(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
-#subscribe(Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Cancellation;
-#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/util/function/Consumer;)Lreactor/core/Cancellation;
@3.0.5.RELEASE
+#fromCompletionStage(Ljava/util/concurrent/CompletionStage;)Lreactor/core/publisher/Mono;
+#checkpoint()Lreactor/core/publisher/Mono;
+#checkpoint(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#delayElement(Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#delayElementMillis(J)Lreactor/core/publisher/Mono;
+#delayElementMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;
+#doOnEach(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
@3.0.6.RELEASE
+#delay(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
*#delayMillis(J)Lreactor/core/publisher/Mono;[deprecated]
*#delayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
+#fromDirect(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#untilOther(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#untilOtherDelayError(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#whenDelayError(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#whenDelayError(Ljava/lang/Iterable;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
*#blockMillis(J)Ljava/lang/Object;[deprecated]
+#delayElement(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
*#delayElementMillis(J)Lreactor/core/publisher/Mono;[deprecated]
*#delayElementMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
+#delaySubscription(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
*#delaySubscriptionMillis(J)Lreactor/core/publisher/Mono;[deprecated]
*#delaySubscriptionMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
*#elapsed(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
+#elapsed(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#filterWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#timeout(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#timeout(Ljava/time/Duration;Lreactor/core/publisher/Mono;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
*#timeoutMillis(J)Lreactor/core/publisher/Mono;[deprecated]
*#timeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
*#timeoutMillis(JLreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;[deprecated]
*#timeoutMillis(JLreactor/core/publisher/Mono;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
*#timestamp(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
+#timestamp(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
@3.0.7.RELEASE
*#flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
*#flatMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
+#flatMapMany(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#flatMapMany(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
*#mapError(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
*#mapError(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
*#mapError(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
+#onErrorMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#onErrorMap(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#onErrorMap(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
*#otherwise(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
*#otherwise(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
*#otherwise(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
*#otherwiseIfEmpty(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;[deprecated]
*#otherwiseReturn(Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]
*#otherwiseReturn(Ljava/lang/Class;Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]
*#otherwiseReturn(Ljava/util/function/Predicate;Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]
+#onErrorResume(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#onErrorResume(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#onErrorResume(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#onErrorReturn(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#onErrorReturn(Ljava/lang/Class;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#onErrorReturn(Ljava/util/function/Predicate;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#switchIfEmpty(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
*#then(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;[deprecated]
*#thenMany(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
@3.1.0.RELEASE
+#subscriberContext()Lreactor/core/publisher/Mono;
+#zip(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zip(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#zip(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zip(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zip(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zip(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zip(Ljava/lang/Iterable;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#zipDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zipDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zipDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zipDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zipDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zipDelayError(Ljava/lang/Iterable;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#zipDelayError(Ljava/util/function/Function;[Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#and(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#cache(Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#checkpoint(Ljava/lang/String;Z)Lreactor/core/publisher/Mono;
+#delayUntil(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#doAfterSuccessOrError(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
+#doAfterTerminate(Ljava/lang/Runnable;)Lreactor/core/publisher/Mono;
+#doOnSuccessOrError(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
+#doOnTerminate(Ljava/lang/Runnable;)Lreactor/core/publisher/Mono;
+#expandDeep(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#expandDeep(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#expand(Ljava/util/function/Function;I)Lreactor/core/publisher/Flux;
+#expand(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
+#flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#name(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#subscribe()Lreactor/core/Disposable;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#subscribe(Lreactor/core/CoreSubscriber;)V
+#subscriberContext(Lreactor/util/context/Context;)Lreactor/core/publisher/Mono;
+#subscriberContext(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#take(Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#take(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#takeUntilOther(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#toProcessor()Lreactor/core/publisher/MonoProcessor;
+#zipWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#zipWhen(Ljava/util/function/Function;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
+#zipWith(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zipWith(Lreactor/core/publisher/Mono;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
-#delayMillis(J)Lreactor/core/publisher/Mono;[deprecated]
-#delayMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
-#empty(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
-#untilOther(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
-#untilOtherDelayError(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
-#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
-#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#when(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#when(Ljava/lang/Iterable;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#when(Ljava/util/function/Function;[Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#whenDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#whenDelayError(Ljava/lang/Iterable;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#whenDelayError(Ljava/util/function/Function;[Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#zip(Ljava/util/function/Function;Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
-#and(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#and(Lreactor/core/publisher/Mono;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
-#and(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#and(Ljava/util/function/Function;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
-#awaitOnSubscribe()Lreactor/core/publisher/Mono;
-#blockMillis(J)Ljava/lang/Object;[deprecated]
-#delayElementMillis(J)Lreactor/core/publisher/Mono;[deprecated]
-#delayElementMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
-#delaySubscriptionMillis(J)Lreactor/core/publisher/Mono;[deprecated]
-#delaySubscriptionMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
-#doAfterTerminate(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
-#doOnTerminate(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
-#elapsed(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
-#flatMap(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;[deprecated]
-#flatMap(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
-#mapError(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#mapError(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#mapError(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#otherwise(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#otherwise(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#otherwise(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#otherwiseIfEmpty(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;[deprecated]
-#otherwiseReturn(Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]
-#otherwiseReturn(Ljava/lang/Class;Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]
-#otherwiseReturn(Ljava/util/function/Predicate;Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]
-#subscribe()Lreactor/core/publisher/MonoProcessor;
-#then(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
-#then(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;[deprecated]
-#thenMany(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;[deprecated]
-#timeoutMillis(J)Lreactor/core/publisher/Mono;[deprecated]
-#timeoutMillis(JLreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
-#timeoutMillis(JLreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;[deprecated]
-#timeoutMillis(JLreactor/core/publisher/Mono;Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
-#timestamp(Lreactor/core/scheduler/TimedScheduler;)Lreactor/core/publisher/Mono;[deprecated]
@3.1.2.RELEASE
+#blockOptional()Ljava/util/Optional;
+#blockOptional(Ljava/time/Duration;)Ljava/util/Optional;
+#single()Lreactor/core/publisher/Mono;
@3.1.4.RELEASE
+#log(Lreactor/util/Logger;)Lreactor/core/publisher/Mono;
+#log(Lreactor/util/Logger;Ljava/util/logging/Level;Z[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Mono;
+#thenReturn(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@3.2.0.RELEASE
+#error(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#fromCompletionStage(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#fromFuture(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#zip(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zip(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zipDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#zipDelayError(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#cache(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#cache(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#doOnDiscard(Ljava/lang/Class;Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
+#metrics()Lreactor/core/publisher/Mono;
+#retryBackoff(JLjava/time/Duration;)Lreactor/core/publisher/Mono;
+#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;D)Lreactor/core/publisher/Mono;
@3.2.4.RELEASE
+#onErrorContinue(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
+#onErrorContinue(Ljava/lang/Class;Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
+#onErrorContinue(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;
@3.2.10.RELEASE
+#doFirst(Ljava/lang/Runnable;)Lreactor/core/publisher/Mono;
+#onErrorStop()Lreactor/core/publisher/Mono;
+#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;DLreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
@3.3.0.RELEASE
+#deferWithContext(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
*#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
*#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
+#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
*#compose(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
*#doAfterSuccessOrError(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;[deprecated]
*#doOnSuccessOrError(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;[deprecated]
+#subscribe(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Lreactor/util/context/Context;)Lreactor/core/Disposable;
+#transformDeferred(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
@3.3.4.RELEASE
*#retry(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;[deprecated]
*#retry(JLjava/util/function/Predicate;)Lreactor/core/publisher/Mono;[deprecated]
*#retryWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
+#retryWhen(Lreactor/util/retry/Retry;)Lreactor/core/publisher/Mono;
*#retryBackoff(JLjava/time/Duration;)Lreactor/core/publisher/Mono;[deprecated]
*#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Mono;[deprecated]
*#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;[deprecated]
*#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;D)Lreactor/core/publisher/Mono;[deprecated]
*#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;DLreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;[deprecated]
@3.4.0
*#deferWithContext(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
+#deferContextual(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
*#first([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;[deprecated]
*#first(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;[deprecated]
+#firstWithSignal([Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#firstWithSignal(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#firstWithValue(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#firstWithValue(Lreactor/core/publisher/Mono;[Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
*#subscriberContext()Lreactor/core/publisher/Mono;[deprecated]
+#contextWrite(Lreactor/util/context/ContextView;)Lreactor/core/publisher/Mono;
+#contextWrite(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#share()Lreactor/core/publisher/Mono;
*#subscriberContext(Lreactor/util/context/Context;)Lreactor/core/publisher/Mono;[deprecated]
*#subscriberContext(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
*#toProcessor()Lreactor/core/publisher/MonoProcessor;[deprecated]
+#transformDeferredContextual(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
-#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#usingWhen(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#compose(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#retry(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;[deprecated]
-#retry(JLjava/util/function/Predicate;)Lreactor/core/publisher/Mono;[deprecated]
-#retryWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#retryBackoff(JLjava/time/Duration;)Lreactor/core/publisher/Mono;[deprecated]
-#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Mono;[deprecated]
-#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;[deprecated]
-#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;D)Lreactor/core/publisher/Mono;[deprecated]
-#retryBackoff(JLjava/time/Duration;Ljava/time/Duration;DLreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;[deprecated]
@3.4.1
+#timed()Lreactor/core/publisher/Mono;
+#timed(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
@3.4.4
+#cache(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
+#mapNotNull(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
@3.4.8
+#cacheInvalidateIf(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
+#cacheInvalidateWhen(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#cacheInvalidateWhen(Ljava/util/function/Function;Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
@3.4.23
+#onErrorComplete()Lreactor/core/publisher/Mono;
+#onErrorComplete(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#onErrorComplete(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
@3.4.25
+#fromFuture(Ljava/util/concurrent/CompletableFuture;Z)Lreactor/core/publisher/Mono;
+#fromFuture(Ljava/util/function/Supplier;Z)Lreactor/core/publisher/Mono;
@3.5.0
+#contextCapture()Lreactor/core/publisher/Mono;
*#metrics()Lreactor/core/publisher/Mono;[deprecated]
+#tap(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
+#tap(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#tap(Lreactor/core/observability/SignalListenerFactory;)Lreactor/core/publisher/Mono;
-#deferWithContext(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#subscriberContext()Lreactor/core/publisher/Mono;[deprecated]
-#doAfterSuccessOrError(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;[deprecated]
-#doOnSuccessOrError(Ljava/util/function/BiConsumer;)Lreactor/core/publisher/Mono;[deprecated]
-#subscriberContext(Lreactor/util/context/Context;)Lreactor/core/publisher/Mono;[deprecated]
-#subscriberContext(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;[deprecated]
-#toProcessor()Lreactor/core/publisher/MonoProcessor;[deprecated]
@3.5.3
+#singleOptional()Lreactor/core/publisher/Mono;

+###reactor/core/publisher/BufferOverflowStrategy
@3.0.4.RELEASE
+#values()[Lreactor/core/publisher/BufferOverflowStrategy;
+#valueOf(Ljava/lang/String;)Lreactor/core/publisher/BufferOverflowStrategy;

+###reactor/core/Disposable
@3.0.4.RELEASE
+#dispose()V
+#isDisposed()Z

+###reactor/core/Disposable$Composite
@3.1.0.RELEASE
+#add(Lreactor/core/Disposable;)Z
+#addAll(Ljava/util/Collection;)Z
+#dispose()V
+#isDisposed()Z
+#remove(Lreactor/core/Disposable;)Z
+#size()I

+###reactor/core/Disposables
@3.1.0.RELEASE
+#composite()Lreactor/core/Disposable$Composite;
+#composite([Lreactor/core/Disposable;)Lreactor/core/Disposable$Composite;
+#composite(Ljava/lang/Iterable;)Lreactor/core/Disposable$Composite;
+#disposed()Lreactor/core/Disposable;
+#never()Lreactor/core/Disposable;
+#single()Lreactor/core/Disposable;
+#swap()Lreactor/core/Disposable$Swap;

+###reactor/core/CoreSubscriber
@3.1.0.RELEASE
+#currentContext()Lreactor/util/context/Context;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V

+###reactor/core/Exceptions
@3.0.0.RC1
+#addThrowable(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
+#argumentIsNullException()Ljava/lang/NullPointerException;
+#bubble(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#disableOperatorStacktrace()V
+#duplicateOnSubscribeException()Ljava/lang/IllegalStateException;
+#enableOperatorStacktrace()V
+#failWithCancel()Ljava/lang/RuntimeException;
+#failWithOverflow()Ljava/lang/IllegalStateException;
+#isCancel(Ljava/lang/Throwable;)Z
+#isBubbling(Ljava/lang/Throwable;)Z
+#isOperatorStacktraceEnabled()Z
+#nullOrNegativeRequestException(J)Ljava/lang/IllegalArgumentException;
+#onErrorDropped(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
+#onErrorDropped(Ljava/lang/Throwable;)V
+#onNextDropped(Ljava/lang/Object;)V
+#propagate(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#terminate(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
+#throwIfFatal(Ljava/lang/Throwable;)V
+#unwrap(Ljava/lang/Throwable;)Ljava/lang/Throwable;
@3.0.0.RELEASE
-#disableOperatorStacktrace()V
-#enableOperatorStacktrace()V
-#isOperatorStacktraceEnabled()Z
-#onErrorDropped(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
-#onErrorDropped(Ljava/lang/Throwable;)V
-#onNextDropped(Ljava/lang/Object;)V
@3.0.3.RELEASE
+#errorCallbackNotImplemented(Ljava/lang/Throwable;)Ljava/lang/UnsupportedOperationException;
+#isErrorCallbackNotImplemented(Ljava/lang/Throwable;)Z
@3.0.4.RELEASE
+#failWithOverflow(Ljava/lang/String;)Ljava/lang/IllegalStateException;
+#isOverflow(Ljava/lang/Throwable;)Z
+#throwIfJvmFatal(Ljava/lang/Throwable;)V
@3.1.0.RELEASE
+#multiple([Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#multiple(Ljava/lang/Iterable;)Ljava/lang/RuntimeException;
+#failWithRejected()Ljava/util/concurrent/RejectedExecutionException;
+#failWithRejectedNotTimeCapable()Ljava/util/concurrent/RejectedExecutionException;
+#failWithRejected(Ljava/lang/Throwable;)Ljava/util/concurrent/RejectedExecutionException;
+#isMultiple(Ljava/lang/Throwable;)Z
+#unwrapMultiple(Ljava/lang/Throwable;)Ljava/util/List;
+#addSuppressed(Ljava/lang/RuntimeException;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#addSuppressed(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
-#argumentIsNullException()Ljava/lang/NullPointerException;
@3.2.13.RELEASE
+#isTraceback(Ljava/lang/Throwable;)Z
+#unwrapMultipleExcludingTracebacks(Ljava/lang/Throwable;)Ljava/util/List;
@3.3.0.RELEASE
+#failWithRejected(Ljava/lang/String;)Ljava/util/concurrent/RejectedExecutionException;
-#isTraceback(Ljava/lang/Throwable;)Z
-#unwrapMultipleExcludingTracebacks(Ljava/lang/Throwable;)Ljava/util/List;
@3.3.1.RELEASE
+#isTraceback(Ljava/lang/Throwable;)Z
+#unwrapMultipleExcludingTracebacks(Ljava/lang/Throwable;)Ljava/util/List;
@3.3.4.RELEASE
+#retryExhausted(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#isRetryExhausted(Ljava/lang/Throwable;)Z
@3.4.22
+#isJvmFatal(Ljava/lang/Throwable;)Z
+#isFatal(Ljava/lang/Throwable;)Z
@3.5.0
+#wrapSource(Ljava/lang/Throwable;)Ljava/lang/Throwable;

+###reactor/core/Fuseable$QueueSubscription
@3.0.0.RC1
+#requestFusion(I)I
+#peek()Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#offer(Ljava/lang/Object;)Z
+#remove()Ljava/lang/Object;
+#element()Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z

+###reactor/adapter/JdkFlowAdapter
@3.0.0.RC1
+#publisherToFlowPublisher(Lorg/reactivestreams/Publisher;)Ljava/util/concurrent/Flow$Publisher;
+#flowPublisherToFlux(Ljava/util/concurrent/Flow$Publisher;)Lreactor/core/publisher/Flux;

+###reactor/util/Logger
@3.0.0.RC1
+#getName()Ljava/lang/String;
+#isTraceEnabled()Z
+#trace(Ljava/lang/String;)V
+#trace(Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.4.12
+#infoOrDebug(Lreactor/util/Logger$ChoiceOfMessageSupplier;)V
+#infoOrDebug(Lreactor/util/Logger$ChoiceOfMessageSupplier;Ljava/lang/Throwable;)V
+#warnOrDebug(Lreactor/util/Logger$ChoiceOfMessageSupplier;)V
+#warnOrDebug(Lreactor/util/Logger$ChoiceOfMessageSupplier;Ljava/lang/Throwable;)V
+#errorOrDebug(Lreactor/util/Logger$ChoiceOfMessageSupplier;)V
+#errorOrDebug(Lreactor/util/Logger$ChoiceOfMessageSupplier;Ljava/lang/Throwable;)V

+###reactor/util/annotation/NonNullApi
@3.1.0.RELEASE

+###reactor/util/annotation/NonNull
@3.1.0.RELEASE

+###reactor/util/annotation/Nullable
@3.1.0.RELEASE

+###reactor/util/function/Tuple5
@3.0.0.RC1
+#getT5()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#size()I
+#toString()Ljava/lang/String;
@3.0.5.RELEASE
+#innerToString()Ljava/lang/StringBuilder;
-#iterator()Ljava/util/Iterator;
-#toString()Ljava/lang/String;
@3.1.0.RELEASE
-#innerToString()Ljava/lang/StringBuilder;
@3.2.0.RELEASE
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;

+###reactor/util/function/Tuple6
@3.0.0.RC1
+#getT6()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#size()I
+#toString()Ljava/lang/String;
@3.0.5.RELEASE
+#innerToString()Ljava/lang/StringBuilder;
-#iterator()Ljava/util/Iterator;
-#toString()Ljava/lang/String;
@3.1.0.RELEASE
-#innerToString()Ljava/lang/StringBuilder;
@3.2.0.RELEASE
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT6(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;

+###reactor/util/function/Tuple2
@3.0.0.RC1
+#getT1()Ljava/lang/Object;
+#getT2()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toList()Ljava/util/List;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#size()I
+#toString()Ljava/lang/String;
@3.2.0.RELEASE
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;

+###reactor/util/function/Tuple3
@3.0.0.RC1
+#getT3()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#size()I
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.5.RELEASE
+#innerToString()Ljava/lang/StringBuilder;
-#iterator()Ljava/util/Iterator;
-#toString()Ljava/lang/String;
@3.1.0.RELEASE
-#innerToString()Ljava/lang/StringBuilder;
@3.2.0.RELEASE
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;

+###reactor/util/function/Tuple4
@3.0.0.RC1
+#getT4()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#size()I
+#toString()Ljava/lang/String;
@3.0.5.RELEASE
+#innerToString()Ljava/lang/StringBuilder;
-#iterator()Ljava/util/Iterator;
-#toString()Ljava/lang/String;
@3.1.0.RELEASE
-#innerToString()Ljava/lang/StringBuilder;
@3.2.0.RELEASE
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;

+###reactor/util/function/Tuple8
@3.0.0.RC1
+#getT8()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#size()I
+#toString()Ljava/lang/String;
@3.0.5.RELEASE
+#innerToString()Ljava/lang/StringBuilder;
-#iterator()Ljava/util/Iterator;
-#toString()Ljava/lang/String;
@3.1.0.RELEASE
-#innerToString()Ljava/lang/StringBuilder;
@3.2.0.RELEASE
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple8;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple8;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple8;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple8;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple8;
+#mapT6(Ljava/util/function/Function;)Lreactor/util/function/Tuple8;
+#mapT7(Ljava/util/function/Function;)Lreactor/util/function/Tuple8;
+#mapT8(Ljava/util/function/Function;)Lreactor/util/function/Tuple8;
+#mapT7(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT6(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT6(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;

+###reactor/util/function/Tuple7
@3.0.0.RC1
+#getT7()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#size()I
+#toString()Ljava/lang/String;
@3.0.5.RELEASE
+#innerToString()Ljava/lang/StringBuilder;
-#iterator()Ljava/util/Iterator;
-#toString()Ljava/lang/String;
@3.1.0.RELEASE
-#innerToString()Ljava/lang/StringBuilder;
@3.2.0.RELEASE
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT6(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT7(Ljava/util/function/Function;)Lreactor/util/function/Tuple7;
+#mapT6(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple6;
+#mapT5(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple5;
+#mapT4(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
+#mapT3(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple3;
+#mapT2(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;
+#mapT1(Ljava/util/function/Function;)Lreactor/util/function/Tuple2;

+###reactor/util/function/Tuples
@3.0.0.RC1
+#fromArray([Ljava/lang/Object;)Lreactor/util/function/Tuple2;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple2;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple3;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple4;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple5;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple6;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple7;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple8;
+#fnAny()Ljava/util/function/Function;
+#fnAny(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn2()Ljava/util/function/Function;
+#fn3()Ljava/util/function/Function;
+#fn3(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn4()Ljava/util/function/Function;
+#fn4(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn5()Ljava/util/function/Function;
+#fn5(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn6()Ljava/util/function/Function;
+#fn6(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn7()Ljava/util/function/Function;
+#fn7(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn8()Ljava/util/function/Function;
+#fn8(Ljava/util/function/Function;)Ljava/util/function/Function;
+#apply(Ljava/lang/Object;)Lreactor/util/function/Tuple2;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###reactor/util/context/Context
@3.1.0.RELEASE
+#empty()Lreactor/util/context/Context;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Class;)Ljava/lang/Object;
+#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getOrEmpty(Ljava/lang/Object;)Ljava/util/Optional;
+#hasKey(Ljava/lang/Object;)Z
+#isEmpty()Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
+#delete(Ljava/lang/Object;)Lreactor/util/context/Context;
+#stream()Ljava/util/stream/Stream;
+#putAll(Lreactor/util/context/Context;)Lreactor/util/context/Context;
@3.1.13.RELEASE
+#putNonNull(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
+#size()I
@3.2.0.RELEASE
-#putNonNull(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
-#size()I
@3.2.4.RELEASE
+#putNonNull(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
+#size()I
@3.2.11.RELEASE
+#of(Ljava/util/Map;)Lreactor/util/context/Context;
@3.4.0
+#of(Lreactor/util/context/ContextView;)Lreactor/util/context/Context;
+#readOnly()Lreactor/util/context/ContextView;
+#putAll(Lreactor/util/context/ContextView;)Lreactor/util/context/Context;
*#putAll(Lreactor/util/context/Context;)Lreactor/util/context/Context;[deprecated]
-#get(Ljava/lang/Object;)Ljava/lang/Object;
-#get(Ljava/lang/Class;)Ljava/lang/Object;
-#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#getOrEmpty(Ljava/lang/Object;)Ljava/util/Optional;
-#hasKey(Ljava/lang/Object;)Z
-#isEmpty()Z
-#size()I
-#stream()Ljava/util/stream/Stream;
@3.4.20
+#putAllMap(Ljava/util/Map;)Lreactor/util/context/Context;

+###reactor/util/concurrent/Queues
@3.1.0.RELEASE
+#capacity(Ljava/util/Queue;)I
+#ceilingNextPowerOfTwo(I)I
+#get(I)Ljava/util/function/Supplier;
+#isPowerOfTwo(I)Z
+#one()Ljava/util/function/Supplier;
+#small()Ljava/util/function/Supplier;
+#unbounded()Ljava/util/function/Supplier;
+#unbounded(I)Ljava/util/function/Supplier;
+#xs()Ljava/util/function/Supplier;
@3.1.4.RELEASE
+#unboundedMultiproducer()Ljava/util/function/Supplier;
@3.2.0.RELEASE
+#empty()Ljava/util/function/Supplier;

+###reactor/util/concurrent/WaitStrategy
@3.0.0.RC1
+#<init>()V
+#blocking()Lreactor/util/concurrent/WaitStrategy;
+#busySpin()Lreactor/util/concurrent/WaitStrategy;
+#liteBlocking()Lreactor/util/concurrent/WaitStrategy;
+#parking()Lreactor/util/concurrent/WaitStrategy;
+#parking(I)Lreactor/util/concurrent/WaitStrategy;
+#phasedOff(JJLjava/util/concurrent/TimeUnit;Lreactor/util/concurrent/WaitStrategy;)Lreactor/util/concurrent/WaitStrategy;
+#phasedOffLiteLock(JJLjava/util/concurrent/TimeUnit;)Lreactor/util/concurrent/WaitStrategy;
+#phasedOffLock(JJLjava/util/concurrent/TimeUnit;)Lreactor/util/concurrent/WaitStrategy;
+#phasedOffSleep(JJLjava/util/concurrent/TimeUnit;)Lreactor/util/concurrent/WaitStrategy;
+#yielding()Lreactor/util/concurrent/WaitStrategy;
+#sleeping()Lreactor/util/concurrent/WaitStrategy;
+#signalAllWhenBlocking()V
+#waitFor(JLjava/util/function/LongSupplier;Ljava/lang/Runnable;)J
@3.0.0.RELEASE
+#isAlert(Ljava/lang/Throwable;)Z
+#throwAlert()V
+#alert()V
@3.0.5.RELEASE
*#throwAlert()V[deprecated]
@3.1.0.RELEASE
-#throwAlert()V[deprecated]
@3.4.0
-###reactor/util/concurrent/WaitStrategy

+###reactor/util/Loggers
@3.0.0.RC1
+#getLogger(Ljava/lang/String;)Lreactor/util/Logger;
+#getLogger(Ljava/lang/Class;)Lreactor/util/Logger;
@3.1.0.RELEASE
+#resetLoggerFactory()V
+#useConsoleLoggers()V
+#useJdkLoggers()V
+#useSl4jLoggers()V
@3.2.0.RELEASE
+#useCustomLoggers(Ljava/util/function/Function;)V
@3.2.6.RELEASE
+#useVerboseConsoleLoggers()V

+###reactor/util/Metrics
@3.2.2.RELEASE
+#<init>()V
+#isInstrumentationAvailable()Z
@3.5.0
*#isInstrumentationAvailable()Z[deprecated]

+###reactor/core/publisher/MonoExtensionsKt
@3.1.0.RELEASE
+#toMono(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#toMono(Ljava/util/concurrent/CompletableFuture;)Lreactor/core/publisher/Mono;
+#toMono(Ljava/util/concurrent/Callable;)Lreactor/core/publisher/Mono;
+#toMono(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
+#doOnError(Lreactor/core/publisher/Mono;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lreactor/core/publisher/Mono;
+#onErrorMap(Lreactor/core/publisher/Mono;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lreactor/core/publisher/Mono;
+#onErrorResume(Lreactor/core/publisher/Mono;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lreactor/core/publisher/Mono;
+#onErrorReturn(Lreactor/core/publisher/Mono;Lkotlin/reflect/KClass;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@3.1.1.RELEASE
+#toMono(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
@3.1.2.RELEASE
+#toMono(Lkotlin/jvm/functions/Function0;)Lreactor/core/publisher/Mono;
@3.2.4.RELEASE
+#switchIfEmpty(Lreactor/core/publisher/Mono;Lkotlin/jvm/functions/Function0;)Lreactor/core/publisher/Mono;
@3.2.17.RELEASE
+#cast(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#ofType(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
@3.3.0.RELEASE
-#cast(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
-#ofType(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
@3.3.5.RELEASE
+#cast(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#ofType(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
@3.5.0
-###reactor/core/publisher/MonoExtensionsKt

+###reactor/core/publisher/MonoWhenFunctionsKt$zip$1
@3.1.0.RELEASE
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#apply([Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function1;)V
@3.5.0
-###reactor/core/publisher/MonoWhenFunctionsKt$zip$1

+###reactor/core/publisher/FluxExtensionsKt$toFlux$1
@3.1.0.RELEASE
+#iterator()Ljava/util/Iterator;
@3.5.0
-###reactor/core/publisher/FluxExtensionsKt$toFlux$1

+###reactor/core/publisher/FluxExtensionsKt$toIterable$1
@3.1.0.RELEASE
+#iterator()Ljava/util/Iterator;
@3.5.0
-###reactor/core/publisher/FluxExtensionsKt$toIterable$1

+###reactor/core/publisher/MonoWhenFunctionsKt
@3.1.0.RELEASE
+#whenComplete(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#zip(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Lreactor/core/publisher/Mono;
+#whenComplete([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#zip([Lreactor/core/publisher/Mono;Lkotlin/jvm/functions/Function1;)Lreactor/core/publisher/Mono;
@3.5.0
-###reactor/core/publisher/MonoWhenFunctionsKt

+###reactor/core/publisher/FluxExtensionsKt
@3.1.0.RELEASE
+#toFlux(Ljava/util/Iterator;)Lreactor/core/publisher/Flux;
+#toFlux(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#toFlux(Lkotlin/sequences/Sequence;)Lreactor/core/publisher/Flux;
+#toFlux(Ljava/util/stream/Stream;)Lreactor/core/publisher/Flux;
+#toFlux([Z)Lreactor/core/publisher/Flux;
+#toFlux([B)Lreactor/core/publisher/Flux;
+#toFlux([S)Lreactor/core/publisher/Flux;
+#toFlux([I)Lreactor/core/publisher/Flux;
+#toFlux([J)Lreactor/core/publisher/Flux;
+#toFlux([F)Lreactor/core/publisher/Flux;
+#toFlux([D)Lreactor/core/publisher/Flux;
+#toFlux([Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#toFlux(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
+#doOnError(Lreactor/core/publisher/Flux;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lreactor/core/publisher/Flux;
+#onErrorMap(Lreactor/core/publisher/Flux;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lreactor/core/publisher/Flux;
+#onErrorResume(Lreactor/core/publisher/Flux;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lreactor/core/publisher/Flux;
+#onErrorReturn(Lreactor/core/publisher/Flux;Lkotlin/reflect/KClass;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
@3.1.1.RELEASE
+#toFlux(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@3.2.0.RELEASE
+#split(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
@3.2.4.RELEASE
+#switchIfEmpty(Lreactor/core/publisher/Flux;Lkotlin/jvm/functions/Function0;)Lreactor/core/publisher/Flux;
@3.2.17.RELEASE
+#cast(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
+#ofType(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
@3.3.0.RELEASE
-#cast(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
-#ofType(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
@3.3.5.RELEASE
+#cast(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
+#ofType(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
@3.5.0
-###reactor/core/publisher/FluxExtensionsKt

+###reactor/util/function/TupleExtensionsKt
@3.1.0.RELEASE
+#component1(Lreactor/util/function/Tuple2;)Ljava/lang/Object;
+#component2(Lreactor/util/function/Tuple2;)Ljava/lang/Object;
+#component3(Lreactor/util/function/Tuple3;)Ljava/lang/Object;
+#component4(Lreactor/util/function/Tuple4;)Ljava/lang/Object;
+#component5(Lreactor/util/function/Tuple5;)Ljava/lang/Object;
+#component6(Lreactor/util/function/Tuple6;)Ljava/lang/Object;
+#component7(Lreactor/util/function/Tuple7;)Ljava/lang/Object;
+#component8(Lreactor/util/function/Tuple8;)Ljava/lang/Object;
@3.5.0
-###reactor/util/function/TupleExtensionsKt

+###reactor/core/CorePublisher
@3.3.0.RELEASE
+#subscribe(Lreactor/core/CoreSubscriber;)V

+###reactor/core/scheduler/ReactorBlockHoundIntegration
@3.3.0.RELEASE
+#<init>()V
+#applyTo(Lreactor/blockhound/BlockHound$Builder;)V

+###reactor/util/retry/Retry$RetrySignal
@3.3.4.RELEASE
+#totalRetries()J
+#totalRetriesInARow()J
+#failure()Ljava/lang/Throwable;
+#copy()Lreactor/util/retry/Retry$RetrySignal;
@3.4.0
+#retryContextView()Lreactor/util/context/ContextView;

+###reactor/util/retry/Retry
@3.3.4.RELEASE
+#<init>()V
+#generateCompanion(Lreactor/core/publisher/Flux;)Lorg/reactivestreams/Publisher;
+#backoff(JLjava/time/Duration;)Lreactor/util/retry/RetryBackoffSpec;
+#fixedDelay(JLjava/time/Duration;)Lreactor/util/retry/RetryBackoffSpec;
+#max(J)Lreactor/util/retry/RetrySpec;
+#maxInARow(J)Lreactor/util/retry/RetrySpec;
+#indefinitely()Lreactor/util/retry/RetrySpec;
+#from(Ljava/util/function/Function;)Lreactor/util/retry/Retry;
@3.3.9.RELEASE
+#withThrowable(Ljava/util/function/Function;)Lreactor/util/retry/Retry;
@3.4.0
+#retryContext()Lreactor/util/context/ContextView;

+###reactor/util/retry/RetryBackoffSpec
@3.3.4.RELEASE
+#maxAttempts(J)Lreactor/util/retry/RetryBackoffSpec;
+#filter(Ljava/util/function/Predicate;)Lreactor/util/retry/RetryBackoffSpec;
+#modifyErrorFilter(Ljava/util/function/Function;)Lreactor/util/retry/RetryBackoffSpec;
+#doBeforeRetry(Ljava/util/function/Consumer;)Lreactor/util/retry/RetryBackoffSpec;
+#doAfterRetry(Ljava/util/function/Consumer;)Lreactor/util/retry/RetryBackoffSpec;
+#doBeforeRetryAsync(Ljava/util/function/Function;)Lreactor/util/retry/RetryBackoffSpec;
+#doAfterRetryAsync(Ljava/util/function/Function;)Lreactor/util/retry/RetryBackoffSpec;
+#onRetryExhaustedThrow(Ljava/util/function/BiFunction;)Lreactor/util/retry/RetryBackoffSpec;
+#transientErrors(Z)Lreactor/util/retry/RetryBackoffSpec;
+#minBackoff(Ljava/time/Duration;)Lreactor/util/retry/RetryBackoffSpec;
+#maxBackoff(Ljava/time/Duration;)Lreactor/util/retry/RetryBackoffSpec;
+#jitter(D)Lreactor/util/retry/RetryBackoffSpec;
+#scheduler(Lreactor/core/scheduler/Scheduler;)Lreactor/util/retry/RetryBackoffSpec;
+#generateCompanion(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
+#generateCompanion(Lreactor/core/publisher/Flux;)Lorg/reactivestreams/Publisher;
@3.4.0
+#withRetryContext(Lreactor/util/context/ContextView;)Lreactor/util/retry/RetryBackoffSpec;

+###reactor/util/retry/RetrySpec
@3.3.4.RELEASE
+#maxAttempts(J)Lreactor/util/retry/RetrySpec;
+#filter(Ljava/util/function/Predicate;)Lreactor/util/retry/RetrySpec;
+#modifyErrorFilter(Ljava/util/function/Function;)Lreactor/util/retry/RetrySpec;
+#doBeforeRetry(Ljava/util/function/Consumer;)Lreactor/util/retry/RetrySpec;
+#doAfterRetry(Ljava/util/function/Consumer;)Lreactor/util/retry/RetrySpec;
+#doBeforeRetryAsync(Ljava/util/function/Function;)Lreactor/util/retry/RetrySpec;
+#doAfterRetryAsync(Ljava/util/function/Function;)Lreactor/util/retry/RetrySpec;
+#onRetryExhaustedThrow(Ljava/util/function/BiFunction;)Lreactor/util/retry/RetrySpec;
+#transientErrors(Z)Lreactor/util/retry/RetrySpec;
+#generateCompanion(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
+#generateCompanion(Lreactor/core/publisher/Flux;)Lorg/reactivestreams/Publisher;
@3.4.0
+#withRetryContext(Lreactor/util/context/ContextView;)Lreactor/util/retry/RetrySpec;

+###reactor/core/Scannable$Attr$RunStyle
@3.4.0
+#values()[Lreactor/core/Scannable$Attr$RunStyle;
+#valueOf(Ljava/lang/String;)Lreactor/core/Scannable$Attr$RunStyle;

+###reactor/core/publisher/SinkOneSerialized
@3.4.0
+#<init>(Lreactor/core/publisher/Sinks$One;Lreactor/core/publisher/ContextHolder;)V
+#tryEmitValue(Ljava/lang/Object;)Lreactor/core/publisher/Sinks$EmitResult;
+#currentContext()Lreactor/util/context/Context;
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#inners()Ljava/util/stream/Stream;
+#asMono()Lreactor/core/publisher/Mono;
+#currentSubscriberCount()I

+###reactor/core/publisher/Sinks$EmissionException
@3.4.0
+#<init>(Lreactor/core/publisher/Sinks$EmitResult;)V
+#<init>(Ljava/lang/Throwable;Lreactor/core/publisher/Sinks$EmitResult;)V
+#<init>(Lreactor/core/publisher/Sinks$EmitResult;Ljava/lang/String;)V
+#getReason()Lreactor/core/publisher/Sinks$EmitResult;

+###reactor/core/publisher/Sinks$EmitFailureHandler
@3.4.0
+#onEmitFailure(Lreactor/core/publisher/SignalType;Lreactor/core/publisher/Sinks$EmitResult;)Z
@3.4.16
+#busyLooping(Ljava/time/Duration;)Lreactor/core/publisher/Sinks$EmitFailureHandler;

+###reactor/core/publisher/Sinks$EmitResult
@3.4.0
+#values()[Lreactor/core/publisher/Sinks$EmitResult;
+#valueOf(Ljava/lang/String;)Lreactor/core/publisher/Sinks$EmitResult;
+#isSuccess()Z
+#isFailure()Z
+#orThrow()V
+#orThrowWithCause(Ljava/lang/Throwable;)V

+###reactor/core/publisher/Sinks$Empty
@3.4.0
+#tryEmitEmpty()Lreactor/core/publisher/Sinks$EmitResult;
+#tryEmitError(Ljava/lang/Throwable;)Lreactor/core/publisher/Sinks$EmitResult;
+#emitEmpty(Lreactor/core/publisher/Sinks$EmitFailureHandler;)V
+#emitError(Ljava/lang/Throwable;Lreactor/core/publisher/Sinks$EmitFailureHandler;)V
+#currentSubscriberCount()I
+#asMono()Lreactor/core/publisher/Mono;

+###reactor/core/publisher/Sinks$Many
@3.4.0
+#tryEmitNext(Ljava/lang/Object;)Lreactor/core/publisher/Sinks$EmitResult;
+#tryEmitComplete()Lreactor/core/publisher/Sinks$EmitResult;
+#tryEmitError(Ljava/lang/Throwable;)Lreactor/core/publisher/Sinks$EmitResult;
+#emitNext(Ljava/lang/Object;Lreactor/core/publisher/Sinks$EmitFailureHandler;)V
+#emitComplete(Lreactor/core/publisher/Sinks$EmitFailureHandler;)V
+#emitError(Ljava/lang/Throwable;Lreactor/core/publisher/Sinks$EmitFailureHandler;)V
+#currentSubscriberCount()I
+#asFlux()Lreactor/core/publisher/Flux;

+###reactor/core/publisher/Sinks$ManySpec
@3.4.0
+#unicast()Lreactor/core/publisher/Sinks$UnicastSpec;
+#multicast()Lreactor/core/publisher/Sinks$MulticastSpec;
+#replay()Lreactor/core/publisher/Sinks$MulticastReplaySpec;

+###reactor/core/publisher/Sinks$MulticastReplaySpec
@3.4.0
+#all()Lreactor/core/publisher/Sinks$Many;
+#all(I)Lreactor/core/publisher/Sinks$Many;
+#latest()Lreactor/core/publisher/Sinks$Many;
+#latestOrDefault(Ljava/lang/Object;)Lreactor/core/publisher/Sinks$Many;
+#limit(I)Lreactor/core/publisher/Sinks$Many;
+#limit(Ljava/time/Duration;)Lreactor/core/publisher/Sinks$Many;
+#limit(Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Sinks$Many;
+#limit(ILjava/time/Duration;)Lreactor/core/publisher/Sinks$Many;
+#limit(ILjava/time/Duration;Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Sinks$Many;

+###reactor/core/publisher/Sinks$MulticastSpec
@3.4.0
+#onBackpressureBuffer()Lreactor/core/publisher/Sinks$Many;
+#onBackpressureBuffer(I)Lreactor/core/publisher/Sinks$Many;
+#onBackpressureBuffer(IZ)Lreactor/core/publisher/Sinks$Many;
+#directAllOrNothing()Lreactor/core/publisher/Sinks$Many;
+#directBestEffort()Lreactor/core/publisher/Sinks$Many;

+###reactor/core/publisher/Sinks$One
@3.4.0
+#tryEmitValue(Ljava/lang/Object;)Lreactor/core/publisher/Sinks$EmitResult;
+#emitValue(Ljava/lang/Object;Lreactor/core/publisher/Sinks$EmitFailureHandler;)V

+###reactor/core/publisher/Sinks$RootSpec
@3.4.0
+#empty()Lreactor/core/publisher/Sinks$Empty;
+#one()Lreactor/core/publisher/Sinks$One;
+#many()Lreactor/core/publisher/Sinks$ManySpec;
@3.4.19
+#manyWithUpstream()Lreactor/core/publisher/Sinks$ManyWithUpstreamUnsafeSpec;

+###reactor/core/publisher/Sinks$UnicastSpec
@3.4.0
+#onBackpressureBuffer()Lreactor/core/publisher/Sinks$Many;
+#onBackpressureBuffer(Ljava/util/Queue;)Lreactor/core/publisher/Sinks$Many;
+#onBackpressureBuffer(Ljava/util/Queue;Lreactor/core/Disposable;)Lreactor/core/publisher/Sinks$Many;
+#onBackpressureError()Lreactor/core/publisher/Sinks$Many;

+###reactor/core/publisher/Sinks
@3.4.0
+#empty()Lreactor/core/publisher/Sinks$Empty;
+#one()Lreactor/core/publisher/Sinks$One;
+#many()Lreactor/core/publisher/Sinks$ManySpec;
+#unsafe()Lreactor/core/publisher/Sinks$RootSpec;

+###reactor/core/publisher/Timed
@3.4.1
+#get()Ljava/lang/Object;
+#elapsed()Ljava/time/Duration;
+#elapsedSinceSubscription()Ljava/time/Duration;
+#timestamp()Ljava/time/Instant;

+###reactor/core/scheduler/Schedulers$Snapshot
@3.4.0
+#isDisposed()Z
+#dispose()V

+###reactor/util/Logger$ChoiceOfMessageSupplier
@3.4.12
+#get(Z)Ljava/lang/String;

+###reactor/util/Metrics$MicrometerConfiguration
@3.4.0
+#<init>()V
+#useRegistry(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/MeterRegistry;
+#getRegistry()Lio/micrometer/core/instrument/MeterRegistry;
@3.5.0
*#useRegistry(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/MeterRegistry;[deprecated]
*#getRegistry()Lio/micrometer/core/instrument/MeterRegistry;[deprecated]

+###reactor/util/context/ContextView
@3.4.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Class;)Ljava/lang/Object;
+#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getOrEmpty(Ljava/lang/Object;)Ljava/util/Optional;
+#hasKey(Ljava/lang/Object;)Z
+#isEmpty()Z
+#size()I
+#stream()Ljava/util/stream/Stream;
@3.4.20
+#forEach(Ljava/util/function/BiConsumer;)V

+###reactor/Environment
@2.0.0.RC1
+#initialize()Lreactor/Environment;
+#initializeIfEmpty()Lreactor/Environment;
+#assign(Lreactor/Environment;)Lreactor/Environment;
+#alive()Z
+#get()Lreactor/Environment;
+#terminate()V
+#timer()Lreactor/fn/timer/Timer;
+#sharedDispatcher()Lreactor/core/Dispatcher;
+#workDispatcher()Lreactor/core/Dispatcher;
+#cachedDispatcher()Lreactor/core/Dispatcher;
+#dispatcher(Ljava/lang/String;)Lreactor/core/Dispatcher;
+#tailRecurse()Lreactor/core/dispatch/TailRecurseDispatcher;
+#dispatcher(Ljava/lang/String;Lreactor/core/Dispatcher;)Lreactor/core/Dispatcher;
+#newDispatcherLike(Ljava/lang/String;)Lreactor/core/Dispatcher;
+#newDispatcherLike(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/Dispatcher;
+#newDispatcher()Lreactor/core/Dispatcher;
+#newDispatcher(I)Lreactor/core/Dispatcher;
+#newDispatcher(Ljava/lang/String;I)Lreactor/core/Dispatcher;
+#newDispatcher(II)Lreactor/core/Dispatcher;
+#newDispatcher(Ljava/lang/String;II)Lreactor/core/Dispatcher;
+#newDispatcher(IILreactor/core/config/DispatcherType;)Lreactor/core/Dispatcher;
+#newDispatcher(Ljava/lang/String;IILreactor/core/config/DispatcherType;)Lreactor/core/Dispatcher;
+#cachedDispatchers(Ljava/lang/String;)Lreactor/core/DispatcherSupplier;
+#cachedDispatchers()Lreactor/core/DispatcherSupplier;
+#cachedDispatchers(Ljava/lang/String;Lreactor/core/DispatcherSupplier;)Lreactor/core/DispatcherSupplier;
+#<init>()V
+#<init>(Lreactor/core/config/ConfigurationReader;)V
+#<init>(Ljava/util/Map;Lreactor/core/config/ConfigurationReader;)V
+#newCachedDispatchers(I)Lreactor/core/DispatcherSupplier;
+#newCachedDispatchers(ILjava/lang/String;)Lreactor/core/DispatcherSupplier;
+#newFanOutCachedDispatchers(ILjava/lang/String;)Lreactor/core/DispatcherSupplier;
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getDefaultDispatcher()Lreactor/core/Dispatcher;
+#getCachedDispatcher()Lreactor/core/Dispatcher;
+#getCachedDispatchers()Lreactor/core/DispatcherSupplier;
+#getCachedDispatchers(Ljava/lang/String;)Lreactor/core/DispatcherSupplier;
+#getDispatcher(Ljava/lang/String;)Lreactor/core/Dispatcher;
+#routeError(Ljava/lang/Throwable;)V
+#assignErrorJournal()Lreactor/Environment;
+#assignErrorJournal(Lreactor/fn/Consumer;)Lreactor/Environment;
+#addDispatcher(Ljava/lang/String;Lreactor/core/Dispatcher;)Lreactor/Environment;
+#addCachedDispatchers(Ljava/lang/String;Lreactor/core/DispatcherSupplier;)Lreactor/Environment;
+#removeCachedDispatchers(Ljava/lang/String;)Lreactor/Environment;
+#removeDispatcher(Ljava/lang/String;)Lreactor/Environment;
+#getRootBus()Lreactor/bus/EventBus;
+#getTimer()Lreactor/fn/timer/Timer;
+#shutdown()V
+#iterator()Ljava/util/Iterator;
+#close()V
+#createDispatcherFactory(Ljava/lang/String;IILreactor/fn/Consumer;Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/DispatcherSupplier;
@2.0.1.RELEASE
+#setDispatcher(Ljava/lang/String;Lreactor/core/Dispatcher;)Lreactor/Environment;
-#addDispatcher(Ljava/lang/String;Lreactor/core/Dispatcher;)Lreactor/Environment;
-#getRootBus()Lreactor/bus/EventBus;
@2.0.2.RELEASE
+#initialize(Lreactor/fn/Consumer;)Lreactor/Environment;
@2.0.5.RELEASE
+#getLongProperty(Ljava/lang/String;J)J
+#getIntProperty(Ljava/lang/String;I)I
-#getProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/Environment

+###reactor/io/IO$FileContext
@2.0.4.RELEASE
+#<init>(Ljava/io/RandomAccessFile;)V
+#file()Ljava/io/RandomAccessFile;
+#read(Ljava/nio/ByteBuffer;)I
+#isOpen()Z
+#close()V
@2.5.0.M1
-###reactor/io/IO$FileContext

+###reactor/io/IO
@2.0.4.RELEASE
+#read(Ljava/nio/channels/ReadableByteChannel;)Lorg/reactivestreams/Publisher;
+#read(Ljava/nio/channels/ReadableByteChannel;I)Lorg/reactivestreams/Publisher;
+#readFile(Ljava/nio/file/Path;)Lorg/reactivestreams/Publisher;
+#readFile(Ljava/nio/file/Path;I)Lorg/reactivestreams/Publisher;
+#readFile(Ljava/lang/String;)Lorg/reactivestreams/Publisher;
+#readFile(Ljava/lang/String;I)Lorg/reactivestreams/Publisher;
@2.5.0.M1
-###reactor/io/IO

+###reactor/io/codec/ByteArrayCodec
@2.0.0.RC1
+#<init>()V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply([B)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/ByteArrayCodec

+###reactor/io/codec/BufferCodec
@2.0.4.RELEASE
+#decode(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
+#encode(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
@2.5.0.M1
-###reactor/io/codec/BufferCodec

+###reactor/io/codec/StandardCodecs
@2.0.0.RC1
@2.5.0.M1
-###reactor/io/codec/StandardCodecs

+###reactor/io/codec/Frame
@2.0.0.RC1
+#<init>(Lreactor/io/buffer/Buffer;Lreactor/io/buffer/Buffer;)V
+#getPrefix()Lreactor/io/buffer/Buffer;
+#getData()Lreactor/io/buffer/Buffer;
@2.5.0.M1
-###reactor/io/codec/Frame

+###reactor/io/codec/JavaSerializationCodec
@2.0.0.RC1
+#<init>()V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Ljava/lang/Object;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/JavaSerializationCodec

+###reactor/io/codec/StringCodec$StringEncoder
@2.0.2.RELEASE
+#<init>(Lreactor/io/codec/StringCodec;)V
+#apply(Ljava/lang/String;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/StringCodec$StringEncoder

+###reactor/io/codec/DelimitedCodec
@2.0.0.RC1
+#<init>(Lreactor/io/codec/Codec;)V
+#<init>(ZLreactor/io/codec/Codec;)V
+#<init>(BZLreactor/io/codec/Codec;)V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Ljava/lang/Object;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/DelimitedCodec

+###reactor/io/codec/Codec
@2.0.0.RC1
+#<init>()V
+#<init>(Ljava/lang/Byte;)V
+#decoder()Lreactor/fn/Function;
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#encoder()Lreactor/fn/Function;
@2.0.4.RELEASE
+#decode(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
+#encode(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
-#<init>()V
-#<init>(Ljava/lang/Byte;)V
@2.5.0.M1
-###reactor/io/codec/Codec

+###reactor/io/codec/PassThroughCodec
@2.0.0.RC1
+#<init>()V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/PassThroughCodec

+###reactor/io/codec/SerializationCodec
@2.0.0.RC1
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Ljava/lang/Object;)Lreactor/io/buffer/Buffer;
+#readType(Lreactor/io/buffer/Buffer;)Ljava/lang/Class;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/SerializationCodec

+###reactor/io/codec/FrameCodec$LengthField
@2.0.0.RC1
+#values()[Lreactor/io/codec/FrameCodec$LengthField;
+#valueOf(Ljava/lang/String;)Lreactor/io/codec/FrameCodec$LengthField;
@2.5.0.M1
-###reactor/io/codec/FrameCodec$LengthField

+###reactor/io/codec/StringCodec
@2.0.0.RC1
+#<init>()V
+#<init>(Ljava/lang/Byte;)V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Ljava/lang/String;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
+#<init>(Ljava/nio/charset/Charset;)V
+#<init>(Ljava/lang/Byte;Ljava/nio/charset/Charset;)V
+#encoder()Lreactor/fn/Function;
@2.5.0.M1
-###reactor/io/codec/StringCodec

+###reactor/io/codec/LengthFieldCodec
@2.0.0.RC1
+#<init>(Lreactor/io/codec/Codec;)V
+#<init>(ILreactor/io/codec/Codec;)V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Ljava/lang/Object;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/LengthFieldCodec

+###reactor/io/codec/FrameCodec
@2.0.0.RC1
+#<init>(ILreactor/io/codec/FrameCodec$LengthField;)V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Lreactor/io/codec/Frame;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/FrameCodec

+###reactor/io/codec/compress/CompressionCodec
@2.0.0.RC1
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Ljava/lang/Object;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/compress/CompressionCodec

+###reactor/io/codec/compress/SnappyCodec
@2.0.0.RC1
+#<init>(Lreactor/io/codec/Codec;)V
@2.5.0.M1
-###reactor/io/codec/compress/SnappyCodec

+###reactor/io/codec/compress/GzipCodec
@2.0.0.RC1
+#<init>(Lreactor/io/codec/Codec;)V
@2.5.0.M1
-###reactor/io/codec/compress/GzipCodec

+###reactor/io/codec/kryo/KryoCodec
@2.0.0.RC1
+#<init>()V
+#<init>(Lcom/esotericsoftware/kryo/Kryo;Z)V
@2.5.0.M1
-###reactor/io/codec/kryo/KryoCodec

+###reactor/io/codec/kryo/KryoPoolCodec
@2.0.5.RELEASE
+#<init>()V
+#<init>(Lcom/esotericsoftware/kryo/pool/KryoFactory;Z)V
+#<init>(Lcom/esotericsoftware/kryo/pool/KryoPool;Z)V
@2.5.0.M1
-###reactor/io/codec/kryo/KryoPoolCodec

+###reactor/io/codec/json/JsonCodec
@2.0.0.RC1
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/Module;)V
+#<init>(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/Module;Ljava/lang/Byte;)V
+#decoder(Lreactor/fn/Consumer;)Lreactor/fn/Function;
+#apply(Ljava/lang/Object;)Lreactor/io/buffer/Buffer;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/codec/json/JsonCodec

+###reactor/io/codec/json/JacksonJsonCodec
@2.0.0.RC1
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
@2.5.0.M1
-###reactor/io/codec/json/JacksonJsonCodec

+###reactor/io/codec/protobuf/ProtobufCodec
@2.0.0.RC1
+#<init>()V
+#<init>(Z)V
@2.5.0.M1
-###reactor/io/codec/protobuf/ProtobufCodec

+###reactor/io/queue/InMemoryQueuePersistor
@2.0.0.RC1
+#<init>()V
+#lastId()J
+#size()J
+#hasNext()Z
+#iterator()Ljava/util/Iterator;
+#offer(Ljava/lang/Object;)Ljava/lang/Long;
+#offerAll(Ljava/util/Collection;)Ljava/lang/Long;
+#get(Ljava/lang/Long;)Ljava/lang/Object;
+#remove()Ljava/lang/Object;
+#close()V
+#refMap()Ljava/util/Map;
@2.5.0.M1
-###reactor/io/queue/InMemoryQueuePersistor

+###reactor/io/queue/ChronicleQueuePersistor
@2.0.1.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lreactor/io/codec/Codec;ZZLnet/openhft/chronicle/ChronicleQueueBuilder;)V
+#close()V
+#lastId()J
+#size()J
+#hasNext()Z
+#offer(Ljava/lang/Object;)Ljava/lang/Long;
+#offerAll(Ljava/util/Collection;)Ljava/lang/Long;
+#get(Ljava/lang/Long;)Ljava/lang/Object;
+#codec()Lreactor/io/codec/Codec;
+#reader()Lnet/openhft/chronicle/ExcerptTailer;
+#remove()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
@2.5.0.M1
-###reactor/io/queue/ChronicleQueuePersistor

+###reactor/io/queue/QueuePersistor
@2.0.0.RC1
+#lastId()J
+#size()J
+#hasNext()Z
+#offer(Ljava/lang/Object;)Ljava/lang/Long;
+#offerAll(Ljava/util/Collection;)Ljava/lang/Long;
+#get(Ljava/lang/Long;)Ljava/lang/Object;
+#remove()Ljava/lang/Object;
+#close()V
@2.5.0.M1
-###reactor/io/queue/QueuePersistor

+###reactor/io/queue/PersistentQueue
@2.0.0.RC1
+#<init>(Lreactor/io/queue/QueuePersistor;)V
+#close()V
+#iterator()Ljava/util/Iterator;
+#size()I
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#complete()V
+#isComplete()Z
@2.5.0.M1
-###reactor/io/queue/PersistentQueue

+###reactor/io/queue/spec/PersistentQueueSpec
@2.0.0.RC1
+#<init>()V
+#codec(Lreactor/io/codec/Codec;)Lreactor/io/queue/spec/PersistentQueueSpec;
+#basePath(Ljava/lang/String;)Lreactor/io/queue/spec/PersistentQueueSpec;
+#clearOnStart(Z)Lreactor/io/queue/spec/PersistentQueueSpec;
+#deleteOnExit(Z)Lreactor/io/queue/spec/PersistentQueueSpec;
+#cacheLineSize(I)Lreactor/io/queue/spec/PersistentQueueSpec;
+#dataBlockSize(I)Lreactor/io/queue/spec/PersistentQueueSpec;
+#messageCapacity(I)Lreactor/io/queue/spec/PersistentQueueSpec;
+#sync(Z)Lreactor/io/queue/spec/PersistentQueueSpec;
+#indexBlockSize(I)Lreactor/io/queue/spec/PersistentQueueSpec;
+#get()Lreactor/io/queue/PersistentQueue;
+#get()Ljava/lang/Object;
@2.0.1.RELEASE
-#cacheLineSize(I)Lreactor/io/queue/spec/PersistentQueueSpec;
-#messageCapacity(I)Lreactor/io/queue/spec/PersistentQueueSpec;
@2.5.0.M1
-###reactor/io/queue/spec/PersistentQueueSpec

+###reactor/io/buffer/Buffer$View
@2.0.0.RC1
+#getStart()I
+#getEnd()I
+#get()Lreactor/io/buffer/Buffer;
+#get()Ljava/lang/Object;
@2.5.0.M1
-###reactor/io/buffer/Buffer$View

+###reactor/io/buffer/Buffer
@2.0.0.RC1
+#<init>()V
+#<init>(IZ)V
+#<init>(Lreactor/io/buffer/Buffer;)V
+#<init>(Ljava/nio/ByteBuffer;)V
+#wrap([B)Lreactor/io/buffer/Buffer;
+#wrap(Ljava/lang/String;Z)Lreactor/io/buffer/Buffer;
+#wrap(Ljava/lang/String;)Lreactor/io/buffer/Buffer;
+#parseInt(Lreactor/io/buffer/Buffer;II)Ljava/lang/Integer;
+#parseInt(Lreactor/io/buffer/Buffer;)Ljava/lang/Integer;
+#parseLong(Lreactor/io/buffer/Buffer;II)Ljava/lang/Long;
+#parseLong(Lreactor/io/buffer/Buffer;)Ljava/lang/Long;
+#recycle()V
+#isDynamic()Z
+#position()I
+#position(I)Lreactor/io/buffer/Buffer;
+#limit(I)Lreactor/io/buffer/Buffer;
+#skip(I)Lreactor/io/buffer/Buffer;
+#limit()I
+#capacity()I
+#remaining()I
+#clear()Lreactor/io/buffer/Buffer;
+#compact()Lreactor/io/buffer/Buffer;
+#flip()Lreactor/io/buffer/Buffer;
+#rewind()Lreactor/io/buffer/Buffer;
+#rewind(I)Lreactor/io/buffer/Buffer;
+#duplicate()Lreactor/io/buffer/Buffer;
+#copy()Lreactor/io/buffer/Buffer;
+#prepend(Lreactor/io/buffer/Buffer;)Lreactor/io/buffer/Buffer;
+#prepend(Ljava/lang/String;)Lreactor/io/buffer/Buffer;
+#prepend([B)Lreactor/io/buffer/Buffer;
+#prepend(Ljava/nio/ByteBuffer;)Lreactor/io/buffer/Buffer;
+#prepend(B)Lreactor/io/buffer/Buffer;
+#prepend(C)Lreactor/io/buffer/Buffer;
+#prepend(S)Lreactor/io/buffer/Buffer;
+#prepend(I)Lreactor/io/buffer/Buffer;
+#prepend(J)Lreactor/io/buffer/Buffer;
+#append(Ljava/lang/String;)Lreactor/io/buffer/Buffer;
+#append(S)Lreactor/io/buffer/Buffer;
+#append(I)Lreactor/io/buffer/Buffer;
+#append(J)Lreactor/io/buffer/Buffer;
+#append(C)Lreactor/io/buffer/Buffer;
+#append([Ljava/nio/ByteBuffer;)Lreactor/io/buffer/Buffer;
+#append([Lreactor/io/buffer/Buffer;)Lreactor/io/buffer/Buffer;
+#append(B)Lreactor/io/buffer/Buffer;
+#append([B)Lreactor/io/buffer/Buffer;
+#append([BII)Lreactor/io/buffer/Buffer;
+#first()B
+#last()B
+#read()B
+#read([B)Lreactor/io/buffer/Buffer;
+#readShort()S
+#readInt()I
+#readFloat()F
+#readDouble()D
+#readLong()J
+#readChar()C
+#snapshot()V
+#reset()Lreactor/io/buffer/Buffer;
+#iterator()Ljava/util/Iterator;
+#read(Ljava/nio/ByteBuffer;)I
+#write(Ljava/nio/ByteBuffer;)I
+#isOpen()Z
+#close()V
+#asString()Ljava/lang/String;
+#substring(II)Ljava/lang/String;
+#asBytes()[B
+#inputStream()Ljava/io/InputStream;
+#slice(II)Lreactor/io/buffer/Buffer;
+#split(I)Ljava/util/List;
+#split(Ljava/util/List;I)Ljava/util/List;
+#split(IZ)Ljava/util/List;
+#split(Ljava/util/List;IZ)Ljava/util/List;
+#split(Lreactor/io/buffer/Buffer;)Ljava/lang/Iterable;
+#split(Lreactor/io/buffer/Buffer;Z)Ljava/lang/Iterable;
+#split(Ljava/util/List;Lreactor/io/buffer/Buffer;Z)Ljava/lang/Iterable;
+#indexOf(B)I
+#indexOf(BII)I
+#createView()Lreactor/io/buffer/Buffer$View;
+#createView(II)Lreactor/io/buffer/Buffer$View;
+#slice([I)Ljava/util/List;
+#byteBuffer()Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#compareTo(Lreactor/io/buffer/Buffer;)I
+#compareTo(Ljava/lang/Object;)I
@2.0.4.RELEASE
+#isDelimitingBuffer()Z
@2.5.0.M1
-###reactor/io/buffer/Buffer

+###reactor/fn/BiConsumer
@2.0.0.RC1
+#accept(Ljava/lang/Object;Ljava/lang/Object;)V
@2.5.0.M2
-###reactor/fn/BiConsumer

+###reactor/fn/Predicate
@2.0.0.RC1
+#test(Ljava/lang/Object;)Z
@2.5.0.M2
-###reactor/fn/Predicate

+###reactor/fn/Suppliers
@2.0.0.RC1
+#supply(Ljava/lang/Object;)Lreactor/fn/Supplier;
+#supplyOnce(Ljava/lang/Object;)Lreactor/fn/Supplier;
+#supplyWhile(Ljava/lang/Object;Lreactor/fn/Predicate;)Lreactor/fn/Supplier;
+#roundRobin([Ljava/lang/Object;)Lreactor/fn/Supplier;
+#filter(Ljava/lang/Iterable;Lreactor/fn/Predicate;)Lreactor/fn/Supplier;
+#drain(Ljava/lang/Iterable;)Lreactor/fn/Supplier;
+#drainAll(Ljava/lang/Iterable;)Lreactor/fn/Supplier;
+#collect(Ljava/util/List;)Lreactor/fn/Supplier;
@2.5.0.M1
-###reactor/fn/Suppliers

+###reactor/fn/Resource
@2.0.0.RC1
+#alive()Z
+#shutdown()V
+#forceShutdown()V
@2.0.3.RELEASE
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
@2.5.0.M1
-###reactor/fn/Resource

+###reactor/fn/Functions
@2.0.0.RC1
+#<init>()V
+#chain([Lreactor/fn/Consumer;)Lreactor/fn/Consumer;
+#function(Ljava/util/concurrent/Callable;)Lreactor/fn/Function;
+#pairFrom(Lreactor/fn/Function;)Lreactor/fn/BiFunction;
+#functionFrom(Lreactor/fn/BiFunction;)Lreactor/fn/Function;
+#consumer(Ljava/lang/Runnable;)Lreactor/fn/Consumer;
+#supplier(Ljava/lang/Object;)Lreactor/fn/Supplier;
+#supplier(Ljava/lang/Class;)Lreactor/fn/Supplier;
+#supplier(Ljava/util/concurrent/Callable;)Lreactor/fn/Supplier;
+#supplier(Ljava/util/concurrent/Future;)Lreactor/fn/Supplier;
@2.5.0.M1
-###reactor/fn/Functions

+###reactor/fn/Function
@2.0.0.RC1
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M2
-###reactor/fn/Function

+###reactor/fn/Predicates
@2.0.0.RC1
+#never()Lreactor/fn/Predicate;
+#always()Lreactor/fn/Predicate;
+#and([Lreactor/fn/Predicate;)Lreactor/fn/Predicate;
+#negate(Lreactor/fn/Predicate;)Lreactor/fn/Predicate;
+#or(Lreactor/fn/Predicate;Lreactor/fn/Predicate;)Lreactor/fn/Predicate;
+#xor(Lreactor/fn/Predicate;Lreactor/fn/Predicate;)Lreactor/fn/Predicate;
@2.5.0.M1
-###reactor/fn/Predicates

+###reactor/fn/BiFunction
@2.0.0.RC1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@2.5.0.M2
-###reactor/fn/BiFunction

+###reactor/fn/Consumer
@2.0.0.RC1
+#accept(Ljava/lang/Object;)V
@2.5.0.M2
-###reactor/fn/Consumer

+###reactor/fn/Supplier
@2.0.0.RC1
+#get()Ljava/lang/Object;
@2.5.0.M2
-###reactor/fn/Supplier

+###reactor/fn/Pausable
@2.0.0.RC1
+#cancel()Lreactor/fn/Pausable;
+#pause()Lreactor/fn/Pausable;
+#resume()Lreactor/fn/Pausable;
@2.5.0.M1
-###reactor/fn/Pausable

+###reactor/fn/tuple/Tuple4
@2.0.0.RC1
+#getT4()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0.M2
-###reactor/fn/tuple/Tuple4

+###reactor/fn/tuple/Tuple6
@2.0.0.RC1
+#getT6()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0.M2
-###reactor/fn/tuple/Tuple6

+###reactor/fn/tuple/Tuple1
@2.0.0.RC1
+#getT1()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0.M2
-###reactor/fn/tuple/Tuple1

+###reactor/fn/tuple/Tuple3
@2.0.0.RC1
+#getT3()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0.M2
-###reactor/fn/tuple/Tuple3

+###reactor/fn/tuple/Tuple2
@2.0.0.RC1
+#getT2()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0.M2
-###reactor/fn/tuple/Tuple2

+###reactor/fn/tuple/Tuple
@2.0.0.RC1
+#empty()Lreactor/fn/tuple/Tuple;
+#of([Ljava/lang/Object;)Lreactor/fn/tuple/TupleN;
+#of(Ljava/util/List;)Lreactor/fn/tuple/TupleN;
+#of(Ljava/lang/Object;)Lreactor/fn/tuple/Tuple1;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/fn/tuple/Tuple2;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/fn/tuple/Tuple3;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/fn/tuple/Tuple4;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/fn/tuple/Tuple5;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/fn/tuple/Tuple6;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/fn/tuple/Tuple7;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/fn/tuple/Tuple8;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#size()I
+#iterator()Ljava/util/Iterator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.5.0.M1
+#of([Ljava/lang/Object;)Lreactor/fn/tuple/Tuple;
+#fnAny()Lreactor/fn/Function;
+#fnAny(Lreactor/fn/Function;)Lreactor/fn/Function;
+#fn2()Lreactor/fn/Function;
+#fn3()Lreactor/fn/Function;
+#fn3(Lreactor/fn/Function;)Lreactor/fn/Function;
+#fn4()Lreactor/fn/Function;
+#fn4(Lreactor/fn/Function;)Lreactor/fn/Function;
+#fn5()Lreactor/fn/Function;
+#fn5(Lreactor/fn/Function;)Lreactor/fn/Function;
+#fn6()Lreactor/fn/Function;
+#fn6(Lreactor/fn/Function;)Lreactor/fn/Function;
+#fn7()Lreactor/fn/Function;
+#fn7(Lreactor/fn/Function;)Lreactor/fn/Function;
+#fn8()Lreactor/fn/Function;
+#fn8(Lreactor/fn/Function;)Lreactor/fn/Function;
+#toList()Ljava/util/List;
+#apply(Ljava/lang/Object;)Lreactor/fn/tuple/Tuple;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
-#of([Ljava/lang/Object;)Lreactor/fn/tuple/TupleN;
@2.5.0.M2
-###reactor/fn/tuple/Tuple

+###reactor/fn/tuple/Tuple7
@2.0.0.RC1
+#getT7()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0.M2
-###reactor/fn/tuple/Tuple7

+###reactor/fn/tuple/TupleN
@2.0.0.RC1
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#getT8()Ljava/lang/Object;
+#getT7()Ljava/lang/Object;
+#getT6()Ljava/lang/Object;
+#getT5()Ljava/lang/Object;
+#getT4()Ljava/lang/Object;
+#getT3()Ljava/lang/Object;
+#getT2()Ljava/lang/Object;
+#getT1()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.5.0.M1
-#getT8()Ljava/lang/Object;
-#getT7()Ljava/lang/Object;
-#getT6()Ljava/lang/Object;
-#getT5()Ljava/lang/Object;
-#getT4()Ljava/lang/Object;
-#getT3()Ljava/lang/Object;
-#getT2()Ljava/lang/Object;
-#getT1()Ljava/lang/Object;
@2.5.0.M2
-###reactor/fn/tuple/TupleN

+###reactor/fn/tuple/Tuple8
@2.0.0.RC1
+#getT8()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0.M2
-###reactor/fn/tuple/Tuple8

+###reactor/fn/tuple/Tuple5
@2.0.0.RC1
+#getT5()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0.M2
-###reactor/fn/tuple/Tuple5

+###reactor/fn/timer/HashWheelTimer$BusySpinWait
@2.0.0.RC1
+#<init>()V
+#waitUntil(J)V
@2.5.0.M1
-###reactor/fn/timer/HashWheelTimer$BusySpinWait

+###reactor/fn/timer/Timer
@2.0.0.RC1
+#getResolution()J
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/bus/registry/Registration;
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
+#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
+#submit(Lreactor/fn/Consumer;)Lreactor/bus/registry/Registration;
+#cancel()V
@2.0.1.RELEASE
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/fn/Pausable;
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/fn/Pausable;
+#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/fn/Pausable;
+#submit(Lreactor/fn/Consumer;)Lreactor/fn/Pausable;
-#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/bus/registry/Registration;
-#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
-#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
-#submit(Lreactor/fn/Consumer;)Lreactor/bus/registry/Registration;
@2.5.0.M1
-###reactor/fn/timer/Timer

+###reactor/fn/timer/HashWheelTimer$TimerPausable
@2.0.1.RELEASE
+#<init>(JJLreactor/fn/Consumer;J)V
+#decrement()V
+#ready()Z
+#run()V
+#reset()V
+#cancel()Lreactor/fn/timer/HashWheelTimer$TimerPausable;
+#isCancelled()Z
+#pause()Lreactor/fn/timer/HashWheelTimer$TimerPausable;
+#isPaused()Z
+#resume()Lreactor/fn/timer/HashWheelTimer$TimerPausable;
+#cancelAfterUse()Lreactor/fn/timer/HashWheelTimer$TimerPausable;
+#isCancelAfterUse()Z
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
+#getOffset()J
+#resume()Lreactor/fn/Pausable;
+#pause()Lreactor/fn/Pausable;
+#cancel()Lreactor/fn/Pausable;
@2.5.0.M1
-###reactor/fn/timer/HashWheelTimer$TimerPausable

+###reactor/fn/timer/HashWheelTimer$SleepWait
@2.0.0.RC1
+#<init>()V
+#waitUntil(J)V
@2.5.0.M1
-###reactor/fn/timer/HashWheelTimer$SleepWait

+###reactor/fn/timer/HashWheelTimer
@2.0.0.RC1
+#<init>()V
+#<init>(I)V
+#<init>(IILreactor/fn/timer/HashWheelTimer$WaitStrategy;)V
+#<init>(Ljava/lang/String;IILreactor/fn/timer/HashWheelTimer$WaitStrategy;Ljava/util/concurrent/Executor;)V
+#getResolution()J
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/bus/registry/Registration;
+#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
+#submit(Lreactor/fn/Consumer;)Lreactor/bus/registry/Registration;
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
+#start()V
+#cancel()V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/fn/Pausable;
+#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/fn/Pausable;
+#submit(Lreactor/fn/Consumer;)Lreactor/fn/Pausable;
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/fn/Pausable;
-#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/bus/registry/Registration;
-#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
-#submit(Lreactor/fn/Consumer;)Lreactor/bus/registry/Registration;
-#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
@2.5.0.M1
-###reactor/fn/timer/HashWheelTimer

+###reactor/fn/timer/HashWheelTimer$WaitStrategy
@2.0.0.RC1
+#waitUntil(J)V
@2.5.0.M1
-###reactor/fn/timer/HashWheelTimer$WaitStrategy

+###reactor/fn/timer/TimeUtils
@2.0.0.RC1
+#approxCurrentTimeMillis()J
+#setTimer(Lreactor/fn/timer/Timer;)V
+#getTimer()Lreactor/fn/timer/Timer;
@2.0.2.RELEASE
+#checkResolution(JJ)V
@2.5.0.M1
-###reactor/fn/timer/TimeUtils

+###reactor/fn/timer/HashWheelTimer$YieldingWait
@2.0.0.RC1
+#<init>()V
+#waitUntil(J)V
@2.5.0.M1
-###reactor/fn/timer/HashWheelTimer$YieldingWait

+###reactor/fn/support/Tap
@2.0.0.RC1
+#<init>()V
+#get()Ljava/lang/Object;
+#accept(Ljava/lang/Object;)V
@2.5.0.M1
-###reactor/fn/support/Tap

+###reactor/core/DispatcherSupplier
@2.0.0.RC1
@2.5.0.M1
-###reactor/core/DispatcherSupplier

+###reactor/core/Dispatcher
@2.0.0.RC1
+#dispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#tryDispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#remainingSlots()J
+#backlogSize()J
+#supportsOrdering()Z
+#inContext()Z
@2.0.3.RELEASE
-#awaitAndShutdown()Z
-#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
@2.5.0.M1
-###reactor/core/Dispatcher

+###reactor/core/queue/CompletableQueue
@2.0.0.RC1
+#complete()V
+#isComplete()Z
@2.5.0.M1
-###reactor/core/queue/CompletableQueue

+###reactor/core/queue/CompletableLinkedQueue
@2.0.0.RC1
+#<init>()V
+#complete()V
+#isComplete()Z
@2.5.0.M1
-###reactor/core/queue/CompletableLinkedQueue

+###reactor/core/queue/CompletableBlockingQueue
@2.0.0.RC1
+#<init>(I)V
+#complete()V
+#isComplete()Z
+#take()Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@2.5.0.M1
-###reactor/core/queue/CompletableBlockingQueue

+###reactor/core/queue/internal/MpscLinkedQueue
@2.0.0.RC1
+#create()Ljava/util/Queue;
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#add(Ljava/lang/Object;)Z
+#remove()Ljava/lang/Object;
+#element()Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
@2.5.0.M1
-###reactor/core/queue/internal/MpscLinkedQueue

+###reactor/core/queue/internal/MpscLinkedQueueNode
@2.0.0.RC1
+#<init>()V
+#value()Ljava/lang/Object;
@2.5.0.M1
-###reactor/core/queue/internal/MpscLinkedQueueNode

+###reactor/core/dispatch/WorkQueueDispatcher
@2.0.0.RC1
+#<init>(Ljava/lang/String;IILreactor/fn/Consumer;)V
+#<init>(Ljava/lang/String;IILreactor/fn/Consumer;Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;)V
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#shutdown()V
+#forceShutdown()V
+#nervous()V
+#calm()V
+#remainingSlots()J
@2.5.0.M1
-###reactor/core/dispatch/WorkQueueDispatcher

+###reactor/core/dispatch/MultiThreadDispatcher
@2.0.0.RC1
+#supportsOrdering()Z
+#backlogSize()J
+#poolSize()I
+#inContext()Z
@2.0.2.RELEASE
-#inContext()Z
@2.5.0.M1
-###reactor/core/dispatch/MultiThreadDispatcher

+###reactor/core/dispatch/AbstractLifecycleDispatcher$Task
@2.0.0.RC1
+#<init>(Lreactor/core/dispatch/AbstractLifecycleDispatcher;)V
+#setData(Ljava/lang/Object;)Lreactor/core/dispatch/AbstractLifecycleDispatcher$Task;
+#setEventConsumer(Lreactor/fn/Consumer;)Lreactor/core/dispatch/AbstractLifecycleDispatcher$Task;
+#setErrorConsumer(Lreactor/fn/Consumer;)Lreactor/core/dispatch/AbstractLifecycleDispatcher$Task;
+#recycle()V
@2.5.0.M1
-###reactor/core/dispatch/AbstractLifecycleDispatcher$Task

+###reactor/core/dispatch/MpscDispatcher
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#shutdown()V
+#forceShutdown()V
+#remainingSlots()J
@2.5.0.M1
-###reactor/core/dispatch/MpscDispatcher

+###reactor/core/dispatch/SingleThreadDispatcher
@2.0.0.RC1
+#<init>(I)V
+#supportsOrdering()Z
+#backlogSize()J
+#getTailRecursionPileSize()I
@2.5.0.M1
-###reactor/core/dispatch/SingleThreadDispatcher

+###reactor/core/dispatch/TraceableDelegatingDispatcher
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;)V
+#alive()Z
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#shutdown()V
+#forceShutdown()V
+#tryDispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#dispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#execute(Ljava/lang/Runnable;)V
+#supportsOrdering()Z
+#remainingSlots()J
+#backlogSize()J
+#inContext()Z
@2.5.0.M1
-###reactor/core/dispatch/TraceableDelegatingDispatcher

+###reactor/core/dispatch/AbstractLifecycleDispatcher
@2.0.0.RC1
+#alive()Z
+#awaitAndShutdown()Z
+#shutdown()V
+#forceShutdown()V
+#inContext()Z
+#tryDispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#dispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#execute(Ljava/lang/Runnable;)V
+#toString()Ljava/lang/String;
@2.5.0.M1
-###reactor/core/dispatch/AbstractLifecycleDispatcher

+###reactor/core/dispatch/RingBufferDispatcher
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ILreactor/fn/Consumer;)V
+#<init>(Ljava/lang/String;ILreactor/fn/Consumer;Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;)V
+#dispatch()Lorg/reactivestreams/Processor;
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#shutdown()V
+#forceShutdown()V
+#remainingSlots()J
+#nervous()V
+#calm()V
@2.0.1.RELEASE
-#dispatch()Lorg/reactivestreams/Processor;
@2.5.0.M1
-###reactor/core/dispatch/RingBufferDispatcher

+###reactor/core/dispatch/ThreadPoolExecutorDispatcher
@2.0.0.RC1
+#<init>(II)V
+#<init>(IILjava/lang/String;)V
+#<init>(IILjava/lang/String;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/RejectedExecutionHandler;)V
+#<init>(IILjava/util/concurrent/ExecutorService;)V
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#shutdown()V
+#forceShutdown()V
+#remainingSlots()J
+#execute(Ljava/lang/Runnable;)V
@2.5.0.M1
-###reactor/core/dispatch/ThreadPoolExecutorDispatcher

+###reactor/core/dispatch/MultiThreadDispatcher$MultiThreadTask
@2.0.0.RC1
+#run()V
@2.5.0.M1
-###reactor/core/dispatch/MultiThreadDispatcher$MultiThreadTask

+###reactor/core/dispatch/TailRecurseDispatcher
@2.0.0.RC1
+#<init>()V
+#alive()Z
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#shutdown()V
+#forceShutdown()V
+#tryDispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#dispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#execute(Ljava/lang/Runnable;)V
+#remainingSlots()J
+#supportsOrdering()Z
+#backlogSize()J
+#inContext()Z
+#toString()Ljava/lang/String;
@2.5.0.M1
-###reactor/core/dispatch/TailRecurseDispatcher

+###reactor/core/dispatch/SynchronousDispatcher
@2.0.0.RC1
+#<init>()V
+#alive()Z
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#shutdown()V
+#forceShutdown()V
+#tryDispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#dispatch(Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#toString()Ljava/lang/String;
+#execute(Ljava/lang/Runnable;)V
+#remainingSlots()J
+#supportsOrdering()Z
+#backlogSize()J
+#inContext()Z
@2.5.0.M1
-###reactor/core/dispatch/SynchronousDispatcher

+###reactor/core/dispatch/SingleThreadDispatcher$SingleThreadTask
@2.0.0.RC1
+#run()V
@2.5.0.M1
-###reactor/core/dispatch/SingleThreadDispatcher$SingleThreadTask

+###reactor/core/dispatch/wait/ParkWaitStrategy
@2.0.0.RC1
+#<init>()V
+#<init>(J)V
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/core/dispatch/wait/ParkWaitStrategy

+###reactor/core/dispatch/wait/WaitingMood
@2.0.0.RC1
+#nervous()V
+#calm()V
@2.5.0.M1
-###reactor/core/dispatch/wait/WaitingMood

+###reactor/core/dispatch/wait/AgileWaitingStrategy
@2.0.0.RC1
+#<init>()V
+#<init>(Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;)V
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
+#nervous()V
+#calm()V
+#current()Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;
@2.5.0.M1
-###reactor/core/dispatch/wait/AgileWaitingStrategy

+###reactor/core/internal/PlatformDependent
@2.0.0.RC1
+#<init>()V
+#newAtomicReferenceFieldUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
+#hasUnsafe()Z
@2.5.0.M1
-###reactor/core/internal/PlatformDependent

+###reactor/core/config/DispatcherType
@2.0.0.RC1
+#values()[Lreactor/core/config/DispatcherType;
+#valueOf(Ljava/lang/String;)Lreactor/core/config/DispatcherType;
@2.5.0.M1
-###reactor/core/config/DispatcherType

+###reactor/core/config/ConfigurationReader
@2.0.0.RC1
+#read()Lreactor/core/config/ReactorConfiguration;
@2.5.0.M1
-###reactor/core/config/ConfigurationReader

+###reactor/core/config/PropertiesConfigurationReader
@2.0.0.RC1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#read()Lreactor/core/config/ReactorConfiguration;
@2.5.0.M1
-###reactor/core/config/PropertiesConfigurationReader

+###reactor/core/config/ReactorConfiguration
@2.0.0.RC1
+#<init>(Ljava/util/List;Ljava/lang/String;Ljava/util/Properties;)V
+#getDispatcherConfigurations()Ljava/util/List;
+#getDefaultDispatcherName()Ljava/lang/String;
+#getAdditionalProperties()Ljava/util/Properties;
@2.5.0.M1
-###reactor/core/config/ReactorConfiguration

+###reactor/core/config/DispatcherConfiguration
@2.0.0.RC1
+#<init>(Ljava/lang/String;Lreactor/core/config/DispatcherType;Ljava/lang/Integer;Ljava/lang/Integer;)V
+#getSize()Ljava/lang/Integer;
+#getBacklog()Ljava/lang/Integer;
+#getName()Ljava/lang/String;
+#getType()Lreactor/core/config/DispatcherType;
@2.5.0.M1
-###reactor/core/config/DispatcherConfiguration

+###reactor/core/support/UUIDUtils
@2.0.0.RC1
+#random()Ljava/util/UUID;
+#create()Ljava/util/UUID;
@2.5.0.M1
-###reactor/core/support/UUIDUtils

+###reactor/core/support/Recyclable
@2.0.5.RELEASE
+#recycle()V
@2.5.0.M1
-###reactor/core/support/Recyclable

+###reactor/core/support/Exceptions
@2.0.0.RC1
+#<init>()V
+#addCause(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
+#getFinalValueCause(Ljava/lang/Throwable;)Ljava/lang/Object;
+#getFinalCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#addValueAsLastCause(Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Throwable;
@2.0.2.RELEASE
+#throwIfFatal(Ljava/lang/Throwable;)V
@2.5.0.M1
-###reactor/core/support/Exceptions

+###reactor/core/support/NamedDaemonThreadFactory
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Thread$UncaughtExceptionHandler;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
@2.0.1.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Thread$UncaughtExceptionHandler;Z)V
-#<init>(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Thread$UncaughtExceptionHandler;)V
@2.5.0.M1
-###reactor/core/support/NamedDaemonThreadFactory

+###reactor/core/support/ReactorFatalException
@2.0.2.RELEASE
+#instance()Lreactor/core/support/ReactorFatalException;
+#create(Ljava/lang/Throwable;)Lreactor/core/support/ReactorFatalException;
@2.5.0.M1
-###reactor/core/support/ReactorFatalException

+###reactor/core/support/NonBlocking
@2.0.1.RELEASE
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
@2.5.0.M1
-###reactor/core/support/NonBlocking

+###reactor/core/support/SpecificationExceptions
@2.0.0.RC1
+#<init>()V
+#spec_2_12_exception()Ljava/lang/IllegalStateException;
+#spec_3_09_exception(J)Ljava/lang/IllegalArgumentException;
@2.0.4.RELEASE
+#spec_2_13_exception()Ljava/lang/NullPointerException;
@2.5.0.M1
-###reactor/core/support/SpecificationExceptions

+###reactor/core/support/Exceptions$ValueCause
@2.0.0.RC1
+#<init>(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
@2.5.0.M1
-###reactor/core/support/Exceptions$ValueCause

+###reactor/core/support/Assert
@2.0.0.RC1
+#<init>()V
+#isTrue(ZLjava/lang/String;)V
+#isTrue(Z)V
+#isNull(Ljava/lang/Object;Ljava/lang/String;)V
+#isNull(Ljava/lang/Object;)V
+#notNull(Ljava/lang/Object;Ljava/lang/String;)V
+#notNull(Ljava/lang/Object;)V
+#hasLength(Ljava/lang/String;Ljava/lang/String;)V
+#hasLength(Ljava/lang/String;)V
+#hasText(Ljava/lang/String;Ljava/lang/String;)V
+#hasText(Ljava/lang/String;)V
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#doesNotContain(Ljava/lang/String;Ljava/lang/String;)V
+#notEmpty([Ljava/lang/Object;Ljava/lang/String;)V
+#notEmpty([Ljava/lang/Object;)V
+#noNullElements([Ljava/lang/Object;Ljava/lang/String;)V
+#noNullElements([Ljava/lang/Object;)V
+#notEmpty(Ljava/util/Collection;Ljava/lang/String;)V
+#notEmpty(Ljava/util/Collection;)V
+#notEmpty(Ljava/util/Map;Ljava/lang/String;)V
+#notEmpty(Ljava/util/Map;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V
+#state(ZLjava/lang/String;)V
+#state(Z)V
@2.0.5.RELEASE
-#isNull(Ljava/lang/Object;)V
-#hasLength(Ljava/lang/String;Ljava/lang/String;)V
-#hasLength(Ljava/lang/String;)V
-#hasText(Ljava/lang/String;Ljava/lang/String;)V
-#hasText(Ljava/lang/String;)V
-#doesNotContain(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#doesNotContain(Ljava/lang/String;Ljava/lang/String;)V
-#notEmpty([Ljava/lang/Object;)V
-#noNullElements([Ljava/lang/Object;Ljava/lang/String;)V
-#noNullElements([Ljava/lang/Object;)V
-#notEmpty(Ljava/util/Collection;Ljava/lang/String;)V
-#notEmpty(Ljava/util/Collection;)V
-#notEmpty(Ljava/util/Map;Ljava/lang/String;)V
-#notEmpty(Ljava/util/Map;)V
-#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;)V
-#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)V
@2.5.0.M1
-###reactor/core/support/Assert

+###reactor/core/reactivestreams/PublisherFactory
@2.0.2.RELEASE
+#create(Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Publisher;
+#create(Lreactor/fn/BiConsumer;Lreactor/fn/Function;)Lorg/reactivestreams/Publisher;
+#create(Lreactor/fn/BiConsumer;Lreactor/fn/Function;Lreactor/fn/Consumer;)Lorg/reactivestreams/Publisher;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.3.RELEASE
+#forEach(Lreactor/fn/Consumer;)Lorg/reactivestreams/Publisher;
+#forEach(Lreactor/fn/Consumer;Lreactor/fn/Function;)Lorg/reactivestreams/Publisher;
+#forEach(Lreactor/fn/Consumer;Lreactor/fn/Function;Lreactor/fn/Consumer;)Lorg/reactivestreams/Publisher;
@2.0.4.RELEASE
+#<init>()V
+#barrier(Lorg/reactivestreams/Publisher;Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Publisher;
+#barrier(Lorg/reactivestreams/Publisher;Lreactor/fn/BiConsumer;Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Publisher;
+#barrier(Lorg/reactivestreams/Publisher;Lreactor/fn/BiConsumer;Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Publisher;
+#intercept(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lorg/reactivestreams/Publisher;
-#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.5.0.M1
-###reactor/core/reactivestreams/PublisherFactory

+###reactor/core/reactivestreams/SubscriberFactory
@2.0.3.RELEASE
+#create(Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#unbounded()Lorg/reactivestreams/Subscriber;
+#unbounded(Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#unbounded(Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#unbounded(Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
+#request(J)V
+#cancel()V
@2.0.4.RELEASE
+#<init>()V
-#onSubscribe(Lorg/reactivestreams/Subscription;)V
-#onNext(Ljava/lang/Object;)V
-#onError(Ljava/lang/Throwable;)V
-#onComplete()V
-#isReactivePull(Lreactor/core/Dispatcher;J)Z
-#getCapacity()J
-#request(J)V
-#cancel()V
@2.5.0.M1
-###reactor/core/reactivestreams/SubscriberFactory

+###reactor/core/reactivestreams/SubscriberBarrier
@2.0.4.RELEASE
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
+#cancel()V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
@2.5.0.M1
-###reactor/core/reactivestreams/SubscriberBarrier

+###reactor/core/reactivestreams/SubscriberWithContext
@2.0.2.RELEASE
+#create(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)Lreactor/core/reactivestreams/SubscriberWithContext;
+#context()Ljava/lang/Object;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#isCancelled()Z
@2.5.0.M1
-###reactor/core/reactivestreams/SubscriberWithContext

+###reactor/core/reactivestreams/PublisherFactory$PrematureCompleteException
@2.0.4.RELEASE
+#fillInStackTrace()Ljava/lang/Throwable;
@2.5.0.M1
-###reactor/core/reactivestreams/PublisherFactory$PrematureCompleteException

+###reactor/core/reactivestreams/SerializedSubscriber
@2.0.1.RELEASE
+#create(Lorg/reactivestreams/Subscriber;)Lreactor/core/reactivestreams/SerializedSubscriber;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#onNext(Ljava/lang/Object;)V
+#request(J)V
+#cancel()V
+#delegate()Lorg/reactivestreams/Subscriber;
+#toString()Ljava/lang/String;
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
@2.5.0.M1
-###reactor/core/reactivestreams/SerializedSubscriber

+###reactor/core/reactivestreams/SubscriptionWithContext
@2.0.3.RELEASE
+#create(Lorg/reactivestreams/Subscription;Ljava/lang/Object;)Lreactor/core/reactivestreams/SubscriptionWithContext;
+#context()Ljava/lang/Object;
+#request(J)V
+#cancel()V
+#isCancelled()Z
@2.5.0.M1
-###reactor/core/reactivestreams/SubscriptionWithContext

+###reactor/core/processor/InsufficientCapacityException
@2.0.5.RELEASE
+#get()Lreactor/core/processor/InsufficientCapacityException;
+#fillInStackTrace()Ljava/lang/Throwable;
@2.5.0.M1
-###reactor/core/processor/InsufficientCapacityException

+###reactor/core/processor/RingBufferWorkProcessor
@2.0.1.RELEASE
+#create()Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Z)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/util/concurrent/ExecutorService;)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/lang/String;I)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/lang/String;IZ)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/lang/String;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/lang/String;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;Z)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/processor/RingBufferWorkProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;Z)Lreactor/core/processor/RingBufferWorkProcessor;
+#share()Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Z)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/util/concurrent/ExecutorService;)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/lang/String;I)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/lang/String;IZ)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/lang/String;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/lang/String;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;Z)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/processor/RingBufferWorkProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;Z)Lreactor/core/processor/RingBufferWorkProcessor;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#toString()Ljava/lang/String;
+#getCapacity()J
+#getAvailableCapacity()J
@2.0.4.RELEASE
+#writeWith(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
@2.5.0.M1
-###reactor/core/processor/RingBufferWorkProcessor

+###reactor/core/processor/MutableSignal$Type
@2.0.1.RELEASE
+#values()[Lreactor/core/processor/MutableSignal$Type;
+#valueOf(Ljava/lang/String;)Lreactor/core/processor/MutableSignal$Type;
@2.5.0.M1
-###reactor/core/processor/MutableSignal$Type

+###reactor/core/processor/RingBufferProcessor
@2.0.1.RELEASE
+#create()Lreactor/core/processor/RingBufferProcessor;
+#create(Z)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/util/concurrent/ExecutorService;)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/lang/String;I)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/lang/String;IZ)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/lang/String;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/lang/String;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;Z)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/processor/RingBufferProcessor;
+#create(Ljava/util/concurrent/ExecutorService;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;Z)Lreactor/core/processor/RingBufferProcessor;
+#share()Lreactor/core/processor/RingBufferProcessor;
+#share(Z)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/util/concurrent/ExecutorService;)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/util/concurrent/ExecutorService;Z)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/lang/String;I)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/lang/String;IZ)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/util/concurrent/ExecutorService;I)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/util/concurrent/ExecutorService;IZ)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/lang/String;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/lang/String;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;Z)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/processor/RingBufferProcessor;
+#share(Ljava/util/concurrent/ExecutorService;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;Z)Lreactor/core/processor/RingBufferProcessor;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#toString()Ljava/lang/String;
+#getAvailableCapacity()J
+#getCapacity()J
@2.0.4.RELEASE
+#writeWith(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
@2.5.0.M1
-###reactor/core/processor/RingBufferProcessor

+###reactor/core/processor/CancelException
@2.0.1.RELEASE
+#fillInStackTrace()Ljava/lang/Throwable;
@2.0.2.RELEASE
+#get()Lreactor/core/processor/CancelException;
@2.5.0.M1
-###reactor/core/processor/CancelException

+###reactor/core/processor/ExecutorPoweredProcessor
@2.0.3.RELEASE
+#onComplete()V
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#forceShutdown()V
+#alive()Z
+#shutdown()V
@2.5.0.M1
-###reactor/core/processor/ExecutorPoweredProcessor

+###reactor/core/processor/ReactorProcessor
@2.0.1.RELEASE
+#<init>(Z)V
+#accept(Ljava/lang/Object;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#getAvailableCapacity()J
+#getCapacity()J
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
@2.5.0.M1
-###reactor/core/processor/ReactorProcessor

+###reactor/core/processor/MutableSignal
@2.0.1.RELEASE
+#<init>()V
@2.5.0.M1
-###reactor/core/processor/MutableSignal

+###reactor/core/processor/util/RingBufferSubscriberUtils
@2.0.1.RELEASE
+#onNext(Ljava/lang/Object;Lreactor/jarjar/com/lmax/disruptor/RingBuffer;)V
+#onError(Ljava/lang/Throwable;Lreactor/jarjar/com/lmax/disruptor/RingBuffer;)V
+#onComplete(Lreactor/jarjar/com/lmax/disruptor/RingBuffer;)V
+#route(Lreactor/core/processor/MutableSignal;Lorg/reactivestreams/Subscriber;)V
+#routeOnce(Lreactor/core/processor/MutableSignal;Lorg/reactivestreams/Subscriber;)V
@2.0.3.RELEASE
+#waitRequestOrTerminalEvent(Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/RingBuffer;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicBoolean;)Z
@2.0.4.RELEASE
+#writeWith(Lorg/reactivestreams/Publisher;Lreactor/jarjar/com/lmax/disruptor/RingBuffer;)Lorg/reactivestreams/Publisher;
@2.5.0.M1
-###reactor/core/processor/util/RingBufferSubscriberUtils

+###reactor/core/processor/util/SingleUseExecutor
@2.0.1.RELEASE
+#create(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;
+#wrap(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/ExecutorService;
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isShutdown()Z
+#isTerminated()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#execute(Ljava/lang/Runnable;)V
@2.5.0.M1
-###reactor/core/processor/util/SingleUseExecutor

+###reactor/jarjar/com/lmax/disruptor/AbstractSequencer
@2.0.0.RC1
+#<init>(ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)V
+#getCursor()J
+#getBufferSize()I
+#addGatingSequences([Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
+#removeGatingSequence(Lreactor/jarjar/com/lmax/disruptor/Sequence;)Z
+#getMinimumSequence()J
+#newBarrier([Lreactor/jarjar/com/lmax/disruptor/Sequence;)Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;
+#newPoller(Lreactor/jarjar/com/lmax/disruptor/DataProvider;[Lreactor/jarjar/com/lmax/disruptor/Sequence;)Lreactor/jarjar/com/lmax/disruptor/EventPoller;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/AbstractSequencer

+###reactor/jarjar/com/lmax/disruptor/AggregateEventHandler
@2.0.0.RC1
+#<init>([Lreactor/jarjar/com/lmax/disruptor/EventHandler;)V
+#onEvent(Ljava/lang/Object;JZ)V
+#onStart()V
+#onShutdown()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/AggregateEventHandler

+###reactor/jarjar/com/lmax/disruptor/AlertException
@2.0.0.RC1
+#fillInStackTrace()Ljava/lang/Throwable;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/AlertException

+###reactor/jarjar/com/lmax/disruptor/BatchEventProcessor
@2.0.0.RC1
+#<init>(Lreactor/jarjar/com/lmax/disruptor/DataProvider;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;Lreactor/jarjar/com/lmax/disruptor/EventHandler;)V
+#getSequence()Lreactor/jarjar/com/lmax/disruptor/Sequence;
+#halt()V
+#isRunning()Z
+#setExceptionHandler(Lreactor/jarjar/com/lmax/disruptor/ExceptionHandler;)V
+#run()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/BatchEventProcessor

+###reactor/jarjar/com/lmax/disruptor/BlockingWaitStrategy
@2.0.0.RC1
+#<init>()V
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/BlockingWaitStrategy

+###reactor/jarjar/com/lmax/disruptor/BusySpinWaitStrategy
@2.0.0.RC1
+#<init>()V
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/BusySpinWaitStrategy

+###reactor/jarjar/com/lmax/disruptor/Cursored
@2.0.0.RC1
+#getCursor()J
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/Cursored

+###reactor/jarjar/com/lmax/disruptor/DataProvider
@2.0.0.RC1
+#get(J)Ljava/lang/Object;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/DataProvider

+###reactor/jarjar/com/lmax/disruptor/EventFactory
@2.0.0.RC1
+#newInstance()Ljava/lang/Object;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventFactory

+###reactor/jarjar/com/lmax/disruptor/EventHandler
@2.0.0.RC1
+#onEvent(Ljava/lang/Object;JZ)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventHandler

+###reactor/jarjar/com/lmax/disruptor/EventPoller$Handler
@2.0.0.RC1
+#onEvent(Ljava/lang/Object;JZ)Z
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventPoller$Handler

+###reactor/jarjar/com/lmax/disruptor/EventPoller$PollState
@2.0.0.RC1
+#values()[Lreactor/jarjar/com/lmax/disruptor/EventPoller$PollState;
+#valueOf(Ljava/lang/String;)Lreactor/jarjar/com/lmax/disruptor/EventPoller$PollState;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventPoller$PollState

+###reactor/jarjar/com/lmax/disruptor/EventPoller
@2.0.0.RC1
+#<init>(Lreactor/jarjar/com/lmax/disruptor/DataProvider;Lreactor/jarjar/com/lmax/disruptor/Sequencer;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
+#poll(Lreactor/jarjar/com/lmax/disruptor/EventPoller$Handler;)Lreactor/jarjar/com/lmax/disruptor/EventPoller$PollState;
+#newInstance(Lreactor/jarjar/com/lmax/disruptor/DataProvider;Lreactor/jarjar/com/lmax/disruptor/Sequencer;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;[Lreactor/jarjar/com/lmax/disruptor/Sequence;)Lreactor/jarjar/com/lmax/disruptor/EventPoller;
+#getSequence()Lreactor/jarjar/com/lmax/disruptor/Sequence;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventPoller

+###reactor/jarjar/com/lmax/disruptor/EventProcessor
@2.0.0.RC1
+#getSequence()Lreactor/jarjar/com/lmax/disruptor/Sequence;
+#halt()V
+#isRunning()Z
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventProcessor

+###reactor/jarjar/com/lmax/disruptor/EventReleaseAware
@2.0.0.RC1
+#setEventReleaser(Lreactor/jarjar/com/lmax/disruptor/EventReleaser;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventReleaseAware

+###reactor/jarjar/com/lmax/disruptor/EventReleaser
@2.0.0.RC1
+#release()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventReleaser

+###reactor/jarjar/com/lmax/disruptor/EventSequencer
@2.0.0.RC1
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventSequencer

+###reactor/jarjar/com/lmax/disruptor/EventSink
@2.0.0.RC1
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;Ljava/lang/Object;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;Ljava/lang/Object;)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;Ljava/lang/Object;Ljava/lang/Object;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;Ljava/lang/Object;Ljava/lang/Object;)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;[Ljava/lang/Object;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;[Ljava/lang/Object;)Z
+#publishEvents([Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)V
+#publishEvents([Lreactor/jarjar/com/lmax/disruptor/EventTranslator;II)V
+#tryPublishEvents([Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)Z
+#tryPublishEvents([Lreactor/jarjar/com/lmax/disruptor/EventTranslator;II)Z
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;[Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;II[Ljava/lang/Object;)V
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;[Ljava/lang/Object;)Z
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;II[Ljava/lang/Object;)Z
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;[Ljava/lang/Object;[Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;II[Ljava/lang/Object;[Ljava/lang/Object;)V
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;[Ljava/lang/Object;[Ljava/lang/Object;)Z
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;II[Ljava/lang/Object;[Ljava/lang/Object;)Z
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;II[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)V
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)Z
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;II[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)Z
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;[[Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;II[[Ljava/lang/Object;)V
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;[[Ljava/lang/Object;)Z
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;II[[Ljava/lang/Object;)Z
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventSink

+###reactor/jarjar/com/lmax/disruptor/EventTranslator
@2.0.0.RC1
+#translateTo(Ljava/lang/Object;J)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventTranslator

+###reactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg
@2.0.0.RC1
+#translateTo(Ljava/lang/Object;JLjava/lang/Object;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg

+###reactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg
@2.0.0.RC1
+#translateTo(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg

+###reactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg
@2.0.0.RC1
+#translateTo(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg

+###reactor/jarjar/com/lmax/disruptor/EventTranslatorVararg
@2.0.0.RC1
+#translateTo(Ljava/lang/Object;J[Ljava/lang/Object;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/EventTranslatorVararg

+###reactor/jarjar/com/lmax/disruptor/ExceptionHandler
@2.0.0.RC1
+#handleEventException(Ljava/lang/Throwable;JLjava/lang/Object;)V
+#handleOnStartException(Ljava/lang/Throwable;)V
+#handleOnShutdownException(Ljava/lang/Throwable;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/ExceptionHandler

+###reactor/jarjar/com/lmax/disruptor/FatalExceptionHandler
@2.0.0.RC1
+#<init>()V
+#<init>(Ljava/util/logging/Logger;)V
+#handleEventException(Ljava/lang/Throwable;JLjava/lang/Object;)V
+#handleOnStartException(Ljava/lang/Throwable;)V
+#handleOnShutdownException(Ljava/lang/Throwable;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/FatalExceptionHandler

+###reactor/jarjar/com/lmax/disruptor/FixedSequenceGroup
@2.0.0.RC1
+#<init>([Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
+#get()J
+#toString()Ljava/lang/String;
+#set(J)V
+#compareAndSet(JJ)Z
+#incrementAndGet()J
+#addAndGet(J)J
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/FixedSequenceGroup

+###reactor/jarjar/com/lmax/disruptor/IgnoreExceptionHandler
@2.0.0.RC1
+#<init>()V
+#<init>(Ljava/util/logging/Logger;)V
+#handleEventException(Ljava/lang/Throwable;JLjava/lang/Object;)V
+#handleOnStartException(Ljava/lang/Throwable;)V
+#handleOnShutdownException(Ljava/lang/Throwable;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/IgnoreExceptionHandler

+###reactor/jarjar/com/lmax/disruptor/InsufficientCapacityException
@2.0.0.RC1
+#fillInStackTrace()Ljava/lang/Throwable;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/InsufficientCapacityException

+###reactor/jarjar/com/lmax/disruptor/LifecycleAware
@2.0.0.RC1
+#onStart()V
+#onShutdown()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/LifecycleAware

+###reactor/jarjar/com/lmax/disruptor/LiteBlockingWaitStrategy
@2.0.0.RC1
+#<init>()V
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/LiteBlockingWaitStrategy

+###reactor/jarjar/com/lmax/disruptor/MultiProducerSequencer
@2.0.0.RC1
+#<init>(ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)V
+#hasAvailableCapacity(I)Z
+#claim(J)V
+#next()J
+#next(I)J
+#tryNext()J
+#tryNext(I)J
+#remainingCapacity()J
+#publish(J)V
+#publish(JJ)V
+#isAvailable(J)Z
+#getHighestPublishedSequence(JJ)J
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/MultiProducerSequencer

+###reactor/jarjar/com/lmax/disruptor/NoOpEventProcessor
@2.0.0.RC1
+#<init>(Lreactor/jarjar/com/lmax/disruptor/RingBuffer;)V
+#getSequence()Lreactor/jarjar/com/lmax/disruptor/Sequence;
+#halt()V
+#isRunning()Z
+#run()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/NoOpEventProcessor

+###reactor/jarjar/com/lmax/disruptor/PhasedBackoffWaitStrategy
@2.0.0.RC1
+#<init>(JJLjava/util/concurrent/TimeUnit;Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;)V
+#withLock(JJLjava/util/concurrent/TimeUnit;)Lreactor/jarjar/com/lmax/disruptor/PhasedBackoffWaitStrategy;
+#withLiteLock(JJLjava/util/concurrent/TimeUnit;)Lreactor/jarjar/com/lmax/disruptor/PhasedBackoffWaitStrategy;
+#withSleep(JJLjava/util/concurrent/TimeUnit;)Lreactor/jarjar/com/lmax/disruptor/PhasedBackoffWaitStrategy;
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/PhasedBackoffWaitStrategy

+###reactor/jarjar/com/lmax/disruptor/RingBuffer
@2.0.0.RC1
+#createMultiProducer(Lreactor/jarjar/com/lmax/disruptor/EventFactory;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/jarjar/com/lmax/disruptor/RingBuffer;
+#createMultiProducer(Lreactor/jarjar/com/lmax/disruptor/EventFactory;I)Lreactor/jarjar/com/lmax/disruptor/RingBuffer;
+#createSingleProducer(Lreactor/jarjar/com/lmax/disruptor/EventFactory;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/jarjar/com/lmax/disruptor/RingBuffer;
+#createSingleProducer(Lreactor/jarjar/com/lmax/disruptor/EventFactory;I)Lreactor/jarjar/com/lmax/disruptor/RingBuffer;
+#create(Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;Lreactor/jarjar/com/lmax/disruptor/EventFactory;ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/jarjar/com/lmax/disruptor/RingBuffer;
+#get(J)Ljava/lang/Object;
+#next()J
+#next(I)J
+#tryNext()J
+#tryNext(I)J
+#resetTo(J)V
+#claimAndGetPreallocated(J)Ljava/lang/Object;
+#isPublished(J)Z
+#addGatingSequences([Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
+#getMinimumGatingSequence()J
+#removeGatingSequence(Lreactor/jarjar/com/lmax/disruptor/Sequence;)Z
+#newBarrier([Lreactor/jarjar/com/lmax/disruptor/Sequence;)Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;
+#newPoller([Lreactor/jarjar/com/lmax/disruptor/Sequence;)Lreactor/jarjar/com/lmax/disruptor/EventPoller;
+#getCursor()J
+#getBufferSize()I
+#hasAvailableCapacity(I)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;Ljava/lang/Object;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;Ljava/lang/Object;)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;Ljava/lang/Object;Ljava/lang/Object;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;Ljava/lang/Object;Ljava/lang/Object;)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;[Ljava/lang/Object;)V
+#tryPublishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;[Ljava/lang/Object;)Z
+#publishEvents([Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)V
+#publishEvents([Lreactor/jarjar/com/lmax/disruptor/EventTranslator;II)V
+#tryPublishEvents([Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)Z
+#tryPublishEvents([Lreactor/jarjar/com/lmax/disruptor/EventTranslator;II)Z
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;[Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;II[Ljava/lang/Object;)V
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;[Ljava/lang/Object;)Z
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;II[Ljava/lang/Object;)Z
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;[Ljava/lang/Object;[Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;II[Ljava/lang/Object;[Ljava/lang/Object;)V
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;[Ljava/lang/Object;[Ljava/lang/Object;)Z
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorTwoArg;II[Ljava/lang/Object;[Ljava/lang/Object;)Z
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;II[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)V
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)Z
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorThreeArg;II[Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)Z
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;[[Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;II[[Ljava/lang/Object;)V
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;[[Ljava/lang/Object;)Z
+#tryPublishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorVararg;II[[Ljava/lang/Object;)Z
+#publish(J)V
+#publish(JJ)V
+#remainingCapacity()J
@2.0.1.RELEASE
*#resetTo(J)V[deprecated]
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/RingBuffer

+###reactor/jarjar/com/lmax/disruptor/Sequence
@2.0.0.RC1
+#<init>()V
+#<init>(J)V
+#get()J
+#set(J)V
+#setVolatile(J)V
+#compareAndSet(JJ)Z
+#incrementAndGet()J
+#addAndGet(J)J
+#toString()Ljava/lang/String;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/Sequence

+###reactor/jarjar/com/lmax/disruptor/SequenceBarrier
@2.0.0.RC1
+#waitFor(J)J
+#getCursor()J
+#isAlerted()Z
+#alert()V
+#clearAlert()V
+#checkAlert()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/SequenceBarrier

+###reactor/jarjar/com/lmax/disruptor/SequenceGroup
@2.0.0.RC1
+#<init>()V
+#get()J
+#set(J)V
+#add(Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
+#remove(Lreactor/jarjar/com/lmax/disruptor/Sequence;)Z
+#size()I
+#addWhileRunning(Lreactor/jarjar/com/lmax/disruptor/Cursored;Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/SequenceGroup

+###reactor/jarjar/com/lmax/disruptor/SequenceReportingEventHandler
@2.0.0.RC1
+#setSequenceCallback(Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/SequenceReportingEventHandler

+###reactor/jarjar/com/lmax/disruptor/Sequenced
@2.0.0.RC1
+#getBufferSize()I
+#hasAvailableCapacity(I)Z
+#remainingCapacity()J
+#next()J
+#next(I)J
+#tryNext()J
+#tryNext(I)J
+#publish(J)V
+#publish(JJ)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/Sequenced

+###reactor/jarjar/com/lmax/disruptor/Sequencer
@2.0.0.RC1
+#claim(J)V
+#isAvailable(J)Z
+#addGatingSequences([Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
+#removeGatingSequence(Lreactor/jarjar/com/lmax/disruptor/Sequence;)Z
+#newBarrier([Lreactor/jarjar/com/lmax/disruptor/Sequence;)Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;
+#getMinimumSequence()J
+#getHighestPublishedSequence(JJ)J
+#newPoller(Lreactor/jarjar/com/lmax/disruptor/DataProvider;[Lreactor/jarjar/com/lmax/disruptor/Sequence;)Lreactor/jarjar/com/lmax/disruptor/EventPoller;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/Sequencer

+###reactor/jarjar/com/lmax/disruptor/SingleProducerSequencer
@2.0.0.RC1
+#<init>(ILreactor/jarjar/com/lmax/disruptor/WaitStrategy;)V
+#hasAvailableCapacity(I)Z
+#next()J
+#next(I)J
+#tryNext()J
+#tryNext(I)J
+#remainingCapacity()J
+#claim(J)V
+#publish(J)V
+#publish(JJ)V
+#isAvailable(J)Z
+#getHighestPublishedSequence(JJ)J
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/SingleProducerSequencer

+###reactor/jarjar/com/lmax/disruptor/SleepingWaitStrategy
@2.0.0.RC1
+#<init>()V
+#<init>(I)V
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/SleepingWaitStrategy

+###reactor/jarjar/com/lmax/disruptor/TimeoutBlockingWaitStrategy
@2.0.0.RC1
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/TimeoutBlockingWaitStrategy

+###reactor/jarjar/com/lmax/disruptor/TimeoutException
@2.0.0.RC1
+#fillInStackTrace()Ljava/lang/Throwable;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/TimeoutException

+###reactor/jarjar/com/lmax/disruptor/TimeoutHandler
@2.0.0.RC1
+#onTimeout(J)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/TimeoutHandler

+###reactor/jarjar/com/lmax/disruptor/WaitStrategy
@2.0.0.RC1
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/WaitStrategy

+###reactor/jarjar/com/lmax/disruptor/WorkHandler
@2.0.0.RC1
+#onEvent(Ljava/lang/Object;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/WorkHandler

+###reactor/jarjar/com/lmax/disruptor/WorkProcessor
@2.0.0.RC1
+#<init>(Lreactor/jarjar/com/lmax/disruptor/RingBuffer;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;Lreactor/jarjar/com/lmax/disruptor/WorkHandler;Lreactor/jarjar/com/lmax/disruptor/ExceptionHandler;Lreactor/jarjar/com/lmax/disruptor/Sequence;)V
+#getSequence()Lreactor/jarjar/com/lmax/disruptor/Sequence;
+#halt()V
+#isRunning()Z
+#run()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/WorkProcessor

+###reactor/jarjar/com/lmax/disruptor/WorkerPool
@2.0.0.RC1
+#<init>(Lreactor/jarjar/com/lmax/disruptor/RingBuffer;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;Lreactor/jarjar/com/lmax/disruptor/ExceptionHandler;[Lreactor/jarjar/com/lmax/disruptor/WorkHandler;)V
+#<init>(Lreactor/jarjar/com/lmax/disruptor/EventFactory;Lreactor/jarjar/com/lmax/disruptor/ExceptionHandler;[Lreactor/jarjar/com/lmax/disruptor/WorkHandler;)V
+#getWorkerSequences()[Lreactor/jarjar/com/lmax/disruptor/Sequence;
+#start(Ljava/util/concurrent/Executor;)Lreactor/jarjar/com/lmax/disruptor/RingBuffer;
+#drainAndHalt()V
+#halt()V
+#isRunning()Z
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/WorkerPool

+###reactor/jarjar/com/lmax/disruptor/YieldingWaitStrategy
@2.0.0.RC1
+#<init>()V
+#waitFor(JLreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/Sequence;Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;)J
+#signalAllWhenBlocking()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/YieldingWaitStrategy

+###reactor/jarjar/com/lmax/disruptor/collections/Histogram
@2.0.0.RC1
+#<init>([J)V
+#getSize()I
+#getUpperBoundAt(I)J
+#getCountAt(I)J
+#addObservation(J)Z
+#addObservations(Lreactor/jarjar/com/lmax/disruptor/collections/Histogram;)V
+#clear()V
+#getCount()J
+#getMin()J
+#getMax()J
+#getMean()Ljava/math/BigDecimal;
+#getTwoNinesUpperBound()J
+#getFourNinesUpperBound()J
+#getUpperBoundForFactor(D)J
+#toString()Ljava/lang/String;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/collections/Histogram

+###reactor/jarjar/com/lmax/disruptor/dsl/Disruptor
@2.0.0.RC1
+#<init>(Lreactor/jarjar/com/lmax/disruptor/EventFactory;ILjava/util/concurrent/Executor;)V
+#<init>(Lreactor/jarjar/com/lmax/disruptor/EventFactory;ILjava/util/concurrent/Executor;Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;)V
+#handleEventsWith([Lreactor/jarjar/com/lmax/disruptor/EventHandler;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#handleEventsWith([Lreactor/jarjar/com/lmax/disruptor/dsl/EventProcessorFactory;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#handleEventsWith([Lreactor/jarjar/com/lmax/disruptor/EventProcessor;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#handleEventsWithWorkerPool([Lreactor/jarjar/com/lmax/disruptor/WorkHandler;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#handleExceptionsWith(Lreactor/jarjar/com/lmax/disruptor/ExceptionHandler;)V
+#handleExceptionsFor(Lreactor/jarjar/com/lmax/disruptor/EventHandler;)Lreactor/jarjar/com/lmax/disruptor/dsl/ExceptionHandlerSetting;
+#after([Lreactor/jarjar/com/lmax/disruptor/EventHandler;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#after([Lreactor/jarjar/com/lmax/disruptor/EventProcessor;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslator;)V
+#publishEvent(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;Ljava/lang/Object;)V
+#publishEvents(Lreactor/jarjar/com/lmax/disruptor/EventTranslatorOneArg;[Ljava/lang/Object;)V
+#start()Lreactor/jarjar/com/lmax/disruptor/RingBuffer;
+#halt()V
+#shutdown()V
+#shutdown(JLjava/util/concurrent/TimeUnit;)V
+#getRingBuffer()Lreactor/jarjar/com/lmax/disruptor/RingBuffer;
+#getCursor()J
+#getBufferSize()J
+#get(J)Ljava/lang/Object;
+#getBarrierFor(Lreactor/jarjar/com/lmax/disruptor/EventHandler;)Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/dsl/Disruptor

+###reactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup
@2.0.0.RC1
+#and(Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#and([Lreactor/jarjar/com/lmax/disruptor/EventProcessor;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#then([Lreactor/jarjar/com/lmax/disruptor/EventHandler;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#then([Lreactor/jarjar/com/lmax/disruptor/dsl/EventProcessorFactory;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#thenHandleEventsWithWorkerPool([Lreactor/jarjar/com/lmax/disruptor/WorkHandler;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#handleEventsWith([Lreactor/jarjar/com/lmax/disruptor/EventHandler;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#handleEventsWith([Lreactor/jarjar/com/lmax/disruptor/dsl/EventProcessorFactory;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#handleEventsWithWorkerPool([Lreactor/jarjar/com/lmax/disruptor/WorkHandler;)Lreactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup;
+#asSequenceBarrier()Lreactor/jarjar/com/lmax/disruptor/SequenceBarrier;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/dsl/EventHandlerGroup

+###reactor/jarjar/com/lmax/disruptor/dsl/EventProcessorFactory
@2.0.0.RC1
+#createEventProcessor(Lreactor/jarjar/com/lmax/disruptor/RingBuffer;[Lreactor/jarjar/com/lmax/disruptor/Sequence;)Lreactor/jarjar/com/lmax/disruptor/EventProcessor;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/dsl/EventProcessorFactory

+###reactor/jarjar/com/lmax/disruptor/dsl/ExceptionHandlerSetting
@2.0.0.RC1
+#with(Lreactor/jarjar/com/lmax/disruptor/ExceptionHandler;)V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/dsl/ExceptionHandlerSetting

+###reactor/jarjar/com/lmax/disruptor/dsl/ProducerType
@2.0.0.RC1
+#values()[Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;
+#valueOf(Ljava/lang/String;)Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/dsl/ProducerType

+###reactor/jarjar/com/lmax/disruptor/util/DaemonThreadFactory
@2.0.0.RC1
+#values()[Lreactor/jarjar/com/lmax/disruptor/util/DaemonThreadFactory;
+#valueOf(Ljava/lang/String;)Lreactor/jarjar/com/lmax/disruptor/util/DaemonThreadFactory;
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/util/DaemonThreadFactory

+###reactor/jarjar/com/lmax/disruptor/util/MutableLong
@2.0.0.RC1
+#<init>()V
+#<init>(J)V
+#get()J
+#set(J)V
+#increment()V
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/util/MutableLong

+###reactor/jarjar/com/lmax/disruptor/util/PaddedLong
@2.0.0.RC1
+#<init>()V
+#<init>(J)V
+#sumPaddingToPreventOptimisation()J
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/util/PaddedLong

+###reactor/jarjar/com/lmax/disruptor/util/Util
@2.0.0.RC1
+#<init>()V
+#ceilingNextPowerOfTwo(I)I
+#getMinimumSequence([Lreactor/jarjar/com/lmax/disruptor/Sequence;)J
+#getMinimumSequence([Lreactor/jarjar/com/lmax/disruptor/Sequence;J)J
+#getSequencesFor([Lreactor/jarjar/com/lmax/disruptor/EventProcessor;)[Lreactor/jarjar/com/lmax/disruptor/Sequence;
+#getUnsafe()Lsun/misc/Unsafe;
+#getAddressFromDirectByteBuffer(Ljava/nio/ByteBuffer;)J
+#log2(I)I
@2.5.0.M1
-###reactor/jarjar/com/lmax/disruptor/util/Util

+###reactor/core/publisher/Sinks$ManyWithUpstream
@3.4.19
+#subscribeTo(Lorg/reactivestreams/Publisher;)Lreactor/core/Disposable;

+###reactor/core/publisher/Sinks$ManyWithUpstreamUnsafeSpec
@3.4.19
+#multicastOnBackpressureBuffer()Lreactor/core/publisher/Sinks$ManyWithUpstream;
+#multicastOnBackpressureBuffer(IZ)Lreactor/core/publisher/Sinks$ManyWithUpstream;

+###reactor/core/subscriber/SubscriberBarrier
@2.5.0.M1
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#upstream()Lorg/reactivestreams/Subscription;
+#isStarted()Z
+#downstream()Lorg/reactivestreams/Subscriber;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
+#cancel()V
+#isTerminated()Z
+#getCapacity()J
+#getPending()J
+#toString()Ljava/lang/String;
+#upstream()Ljava/lang/Object;
+#downstream()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/subscriber/SubscriberBarrier

+###reactor/core/subscriber/SubmissionEmitter
@2.5.0.M4
+#create(Lorg/reactivestreams/Subscriber;Z)Lreactor/core/subscriber/SubmissionEmitter;
+#create(Lorg/reactivestreams/Subscriber;)Lreactor/core/subscriber/SubmissionEmitter;
+#accept(Ljava/lang/Object;)V
+#cancel()V
+#close()V
+#downstream()Lorg/reactivestreams/Subscriber;
+#next(Ljava/lang/Object;)V
+#emit(Ljava/lang/Object;)Lreactor/core/subscriber/SubmissionEmitter$Emission;
+#fail(Ljava/lang/Throwable;)V
+#finish()Lreactor/core/subscriber/SubmissionEmitter$Emission;
+#getCapacity()J
+#getError()Ljava/lang/Throwable;
+#hasFailed()Z
+#hasRequested()Z
+#isCancelled()Z
+#complete()V
+#request(J)V
+#requestedFromDownstream()J
+#start()V
+#stop()V
+#submit(Ljava/lang/Object;)J
+#submit(Ljava/lang/Object;J)J
+#submit(Ljava/lang/Object;JLjava/util/function/Predicate;)J
+#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)J
+#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/Predicate;)J
+#toString()Ljava/lang/String;
+#downstream()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/subscriber/SubmissionEmitter

+###reactor/core/subscriber/SignalEmitter
@2.5.0.M1
+#create(Lorg/reactivestreams/Subscriber;)Lreactor/core/subscriber/SignalEmitter;
+#create(Lorg/reactivestreams/Subscriber;Z)Lreactor/core/subscriber/SignalEmitter;
+#blocking(Lorg/reactivestreams/Subscriber;)Lreactor/core/subscriber/SignalEmitter;
+#start()V
+#emit(Ljava/lang/Object;)Lreactor/core/subscriber/SignalEmitter$Emission;
+#failWith(Ljava/lang/Throwable;)V
+#finish()Lreactor/core/subscriber/SignalEmitter$Emission;
+#submit(Ljava/lang/Object;)J
+#submit(Ljava/lang/Object;J)J
+#submit(Ljava/lang/Object;JLreactor/fn/Predicate;)J
+#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)J
+#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lreactor/fn/Predicate;)J
+#hasRequested()Z
+#requestedFromDownstream()J
+#hasFailed()Z
+#hasEnded()Z
+#getError()Ljava/lang/Throwable;
+#request(J)V
+#cancel()V
+#accept(Ljava/lang/Object;)V
+#getCapacity()J
+#downstream()Lorg/reactivestreams/Subscriber;
+#close()V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#isCancelled()Z
+#getPending()J
+#toString()Ljava/lang/String;
+#downstream()Ljava/lang/Object;
@2.5.0.M2
+#submit(Ljava/lang/Object;JLjava/util/function/Predicate;)J
+#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/Predicate;)J
-#submit(Ljava/lang/Object;JLreactor/fn/Predicate;)J
-#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lreactor/fn/Predicate;)J
@2.5.0.M4
+#complete()V
+#fail(Ljava/lang/Throwable;)V
+#next(Ljava/lang/Object;)V
-#create(Lorg/reactivestreams/Subscriber;)Lreactor/core/subscriber/SignalEmitter;
-#create(Lorg/reactivestreams/Subscriber;Z)Lreactor/core/subscriber/SignalEmitter;
-#blocking(Lorg/reactivestreams/Subscriber;)Lreactor/core/subscriber/SignalEmitter;
-#start()V
-#emit(Ljava/lang/Object;)Lreactor/core/subscriber/SignalEmitter$Emission;
-#failWith(Ljava/lang/Throwable;)V
-#finish()Lreactor/core/subscriber/SignalEmitter$Emission;
-#submit(Ljava/lang/Object;)J
-#submit(Ljava/lang/Object;J)J
-#submit(Ljava/lang/Object;JLjava/util/function/Predicate;)J
-#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)J
-#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/Predicate;)J
-#hasRequested()Z
-#requestedFromDownstream()J
-#hasFailed()Z
-#hasEnded()Z
-#getError()Ljava/lang/Throwable;
-#request(J)V
-#cancel()V
-#accept(Ljava/lang/Object;)V
-#getCapacity()J
-#downstream()Lorg/reactivestreams/Subscriber;
-#close()V
-#onSubscribe(Lorg/reactivestreams/Subscription;)V
-#onNext(Ljava/lang/Object;)V
-#onError(Ljava/lang/Throwable;)V
-#onComplete()V
-#isCancelled()Z
-#getPending()J
-#toString()Ljava/lang/String;
-#downstream()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/subscriber/SignalEmitter

+###reactor/core/subscriber/DeferredScalarSubscriber
@2.5.0.M1
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#request(J)V
+#cancel()V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onComplete()V
+#isCancelled()Z
+#getState()I
+#setState(I)V
+#compareAndSetState(II)Z
+#downstream()Lorg/reactivestreams/Subscriber;
+#setValue(Ljava/lang/Object;)V
+#complete(Ljava/lang/Object;)V
+#isStarted()Z
+#connectedInput()Ljava/lang/Object;
+#connectedOutput()Ljava/lang/Object;
+#isTerminated()Z
+#upstream()Ljava/lang/Object;
+#downstream()Ljava/lang/Object;
@2.5.0.M2
-#connectedInput()Ljava/lang/Object;
@2.5.0.M4
+#requestFusion(I)I
+#poll()Ljava/lang/Object;
+#isEmpty()Z
+#clear()V
+#size()I
@3.0.0.RC1
-###reactor/core/subscriber/DeferredScalarSubscriber

+###reactor/core/subscriber/BaseSubscriber
@2.5.0.M1
+#<init>()V
+#start()Lreactor/core/subscriber/BaseSubscriber;
+#startEmitter()Lreactor/core/subscriber/SignalEmitter;
+#bindEmitter(Z)Lreactor/core/subscriber/SignalEmitter;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
@2.5.0.M2
+#connect()Lreactor/core/subscriber/BaseSubscriber;
-#<init>()V
-#start()Lreactor/core/subscriber/BaseSubscriber;
@2.5.0.M3
+#connectEmitter()Lreactor/core/subscriber/SignalEmitter;
+#connectEmitter(Z)Lreactor/core/subscriber/SignalEmitter;
-#startEmitter()Lreactor/core/subscriber/SignalEmitter;
-#bindEmitter(Z)Lreactor/core/subscriber/SignalEmitter;
@2.5.0.M4
+#connectEmitter()Lreactor/core/subscriber/SubmissionEmitter;
+#connectEmitter(Z)Lreactor/core/subscriber/SubmissionEmitter;
-#connectEmitter()Lreactor/core/subscriber/SignalEmitter;
-#connectEmitter(Z)Lreactor/core/subscriber/SignalEmitter;
@3.0.0.RC1
-###reactor/core/subscriber/BaseSubscriber

+###reactor/core/subscriber/Subscribers
@2.5.0.M1
+#values()[Lreactor/core/subscriber/Subscribers;
+#valueOf(Ljava/lang/String;)Lreactor/core/subscriber/Subscribers;
+#create(Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#unbounded()Lorg/reactivestreams/Subscriber;
+#unbounded(Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#unbounded(Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#unbounded(Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#consumer(Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#consumer(Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#consumer(Lreactor/fn/Consumer;Lreactor/fn/Consumer;Ljava/lang/Runnable;)Lorg/reactivestreams/Subscriber;
+#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
+#empty()Lorg/reactivestreams/Subscriber;
@2.5.0.M2
+#bounded(ILjava/util/function/Consumer;)Lreactor/core/subscriber/ConsumerSubscriber;
+#bounded(ILjava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/subscriber/ConsumerSubscriber;
+#create(Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
+#create(Ljava/util/function/Function;Ljava/util/function/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#create(Ljava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#unbounded(Ljava/util/function/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#unbounded(Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
+#unbounded(Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
+#consumer(Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
+#consumer(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
+#consumer(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lorg/reactivestreams/Subscriber;
+#create(Ljava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
+#serialize(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
-#create(Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
-#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
-#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
-#unbounded(Lreactor/fn/BiConsumer;)Lorg/reactivestreams/Subscriber;
-#unbounded(Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
-#unbounded(Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
-#consumer(Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
-#consumer(Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
-#consumer(Lreactor/fn/Consumer;Lreactor/fn/Consumer;Ljava/lang/Runnable;)Lorg/reactivestreams/Subscriber;
-#create(Lreactor/fn/Function;Lreactor/fn/BiConsumer;Lreactor/fn/BiConsumer;Lreactor/fn/Consumer;)Lorg/reactivestreams/Subscriber;
-#empty()Lorg/reactivestreams/Subscriber;
@2.5.0.M3
+#bounded(ILjava/util/function/Consumer;)Lreactor/core/subscriber/LambdaSubscriber;
+#bounded(ILjava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/subscriber/LambdaSubscriber;
-#bounded(ILjava/util/function/Consumer;)Lreactor/core/subscriber/ConsumerSubscriber;
-#bounded(ILjava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/subscriber/ConsumerSubscriber;
@2.5.0.M4
+#create(Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;)Lorg/reactivestreams/Subscriber;
+#create(Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
+#create(Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lorg/reactivestreams/Subscriber;
+#unbounded(Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lorg/reactivestreams/Subscriber;
-#create(Ljava/util/function/Function;Ljava/util/function/BiConsumer;)Lorg/reactivestreams/Subscriber;
-#create(Ljava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Lorg/reactivestreams/Subscriber;
-#create(Ljava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
-#unbounded(Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/reactivestreams/Subscriber;
@3.0.0.RC1
-###reactor/core/subscriber/Subscribers

+###reactor/core/subscriber/LambdaSubscriber
@2.5.0.M3
+#<init>()V
+#<init>(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#upstream()Ljava/lang/Object;
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#onNext(Ljava/lang/Object;)V
+#getPending()J
+#getCapacity()J
+#isStarted()Z
+#isTerminated()Z
+#dispose()V
@3.0.0.RC1
-###reactor/core/subscriber/LambdaSubscriber

+###reactor/core/subscriber/DeferredSubscriptionSubscriber
@2.5.0.M1
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#<init>(Lorg/reactivestreams/Subscriber;J)V
+#downstream()Lorg/reactivestreams/Subscriber;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#downstream()Ljava/lang/Object;
@2.5.0.M2
-#<init>(Lorg/reactivestreams/Subscriber;J)V
@3.0.0.RC1
-###reactor/core/subscriber/DeferredSubscriptionSubscriber

+###reactor/core/subscriber/MultiSubscriptionSubscriber
@2.5.0.M1
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#set(Lorg/reactivestreams/Subscription;)V
+#request(J)V
+#producedOne()V
+#produced(J)V
+#cancel()V
+#isCancelled()Z
+#downstream()Lorg/reactivestreams/Subscriber;
+#upstream()Lorg/reactivestreams/Subscription;
+#requestedFromDownstream()J
+#isTerminated()Z
+#isStarted()Z
+#isUnbounded()Z
+#downstream()Ljava/lang/Object;
+#upstream()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/subscriber/MultiSubscriptionSubscriber

+###reactor/core/subscriber/SubmissionEmitter$Emission
@2.5.0.M4
+#values()[Lreactor/core/subscriber/SubmissionEmitter$Emission;
+#valueOf(Ljava/lang/String;)Lreactor/core/subscriber/SubmissionEmitter$Emission;
+#isBackpressured()Z
+#isCancelled()Z
+#isFailed()Z
+#isOk()Z
@3.0.0.RC1
-###reactor/core/subscriber/SubmissionEmitter$Emission

+###reactor/core/publisher/FluxBatch$BatchAction
@2.5.0.M2
+#isTerminated()Z
+#isCompleted()Z
+#isFailed()Z
+#isCancelled()Z
+#requestedFromDownstream()J
+#getError()Ljava/lang/Throwable;
+#<init>(Lorg/reactivestreams/Subscriber;IZZZJLreactor/core/timer/Timer;)V
+#toString()Ljava/lang/String;
@2.5.0.M3
+#<init>(Lorg/reactivestreams/Subscriber;IZZZJLreactor/core/scheduler/TimedScheduler;)V
-#<init>(Lorg/reactivestreams/Subscriber;IZZZJLreactor/core/timer/Timer;)V
@3.0.0.RC1
-###reactor/core/publisher/FluxBatch$BatchAction

+###reactor/core/publisher/FluxEmitter$BackpressureHandling
@2.5.0.M4
+#values()[Lreactor/core/publisher/FluxEmitter$BackpressureHandling;
+#valueOf(Ljava/lang/String;)Lreactor/core/publisher/FluxEmitter$BackpressureHandling;
@3.0.0.RC1
-###reactor/core/publisher/FluxEmitter$BackpressureHandling

+###reactor/core/publisher/FluxEmitter
@2.5.0.M4
+#setCancellation(Lreactor/core/flow/Cancellation;)V
@3.0.0.RC1
-###reactor/core/publisher/FluxEmitter

+###reactor/core/publisher/FluxSource
@2.5.0.M1
+#wrap(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#getCapacity()J
+#getPending()J
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#toString()Ljava/lang/String;
+#upstream()Lorg/reactivestreams/Publisher;
+#upstream()Ljava/lang/Object;
@2.5.0.M2
-#getPending()J
@3.0.0.RC1
-#getCapacity()J
@3.0.6.RELEASE
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
@3.1.0.RELEASE
-###reactor/core/publisher/FluxSource

+###reactor/core/publisher/MonoSource
@2.5.0.M1
+#wrap(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#toString()Ljava/lang/String;
+#upstream()Lorg/reactivestreams/Publisher;
+#upstream()Ljava/lang/Object;
@3.0.6.RELEASE
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
@3.1.0.RELEASE
-###reactor/core/publisher/MonoSource

+###reactor/core/publisher/FluxConcatMap$ErrorMode
@2.5.0.M2
+#values()[Lreactor/core/publisher/FluxConcatMap$ErrorMode;
+#valueOf(Ljava/lang/String;)Lreactor/core/publisher/FluxConcatMap$ErrorMode;
@3.0.6.RELEASE
-###reactor/core/publisher/FluxConcatMap$ErrorMode

+###reactor/core/publisher/FluxCombineLatest$SourceAndArray
@2.5.0.M2
@3.0.5.RELEASE
-###reactor/core/publisher/FluxCombineLatest$SourceAndArray

+###reactor/core/publisher/MonoEmitter
@2.5.0.M4
+#complete()V
+#complete(Ljava/lang/Object;)V
+#fail(Ljava/lang/Throwable;)V
+#setCancellation(Lreactor/core/flow/Cancellation;)V
@3.0.0.RC1
-###reactor/core/publisher/MonoEmitter

+###reactor/core/util/ReactiveStateUtils$Graph
@2.5.0.M1
+#mergeWith(Lreactor/core/util/ReactiveStateUtils$Graph;)Lreactor/core/util/ReactiveStateUtils$Graph;
+#removeTerminatedNodes()Ljava/util/Collection;
+#getNodes()Ljava/util/Collection;
+#getEdges()Ljava/util/Collection;
+#isCyclic()Z
+#toString(Z)Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/util/ReactiveStateUtils$Graph

+###reactor/core/util/Exceptions
@2.5.0.M1
+#values()[Lreactor/core/util/Exceptions;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/Exceptions;
+#addCause(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
+#addThrowable(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
+#addValueAsLastCause(Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Throwable;
+#argumentIsNullException()Lreactor/core/util/Exceptions$ArgumentIsNullException;
+#duplicateOnSubscribeException()Lreactor/core/util/Exceptions$DuplicateOnSubscribeException;
+#fail(Ljava/lang/Throwable;)V
+#failUpstream(Ljava/lang/Throwable;)V
+#failWithCancel()V
+#failWithOverflow()V
+#getFinalCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#getFinalValueCause(Ljava/lang/Throwable;)Ljava/lang/Object;
+#nullOrNegativeRequestException(J)Lreactor/core/util/Exceptions$NullOrNegativeRequestException;
+#onErrorDropped(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
+#onErrorDropped(Ljava/lang/Throwable;)V
+#onNextDropped(Ljava/lang/Object;)V
+#propagate(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#terminate(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
+#throwIfFatal(Ljava/lang/Throwable;)V
+#unwrap(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#wrapDownstream(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#wrapUpstream(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
@2.5.0.M2
+#argumentIsNullException()Ljava/lang/NullPointerException;
+#duplicateOnSubscribeException()Ljava/lang/IllegalStateException;
+#fail(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#failUpstream(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#failWithCancel()Lreactor/core/util/Exceptions$CancelException;
+#failWithOverflow()Lreactor/core/util/Exceptions$InsufficientCapacityException;
+#nullOrNegativeRequestException(J)Ljava/lang/IllegalArgumentException;
+#timeOverflow()Ljava/util/concurrent/TimeoutException;
-#addCause(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
-#addValueAsLastCause(Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Throwable;
-#argumentIsNullException()Lreactor/core/util/Exceptions$ArgumentIsNullException;
-#duplicateOnSubscribeException()Lreactor/core/util/Exceptions$DuplicateOnSubscribeException;
-#fail(Ljava/lang/Throwable;)V
-#failUpstream(Ljava/lang/Throwable;)V
-#failWithCancel()V
-#failWithOverflow()V
-#getFinalCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
-#getFinalValueCause(Ljava/lang/Throwable;)Ljava/lang/Object;
-#nullOrNegativeRequestException(J)Lreactor/core/util/Exceptions$NullOrNegativeRequestException;
-#wrapDownstream(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
-#wrapUpstream(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
@2.5.0.M3
+#bubble(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
-#fail(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
-#failUpstream(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
-#timeOverflow()Ljava/util/concurrent/TimeoutException;
@3.0.0.RC1
-###reactor/core/util/Exceptions

+###reactor/core/util/Exceptions$UpstreamException
@2.5.0.M1
+#instance()Lreactor/core/util/Exceptions$UpstreamException;
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0.RC1
-###reactor/core/util/Exceptions$UpstreamException

+###reactor/core/util/Logger$Extension
@2.5.0.M1
+#log(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
@3.0.0.RC1
-###reactor/core/util/Logger$Extension

+###reactor/core/util/WaitStrategy
@2.5.0.M1
+#<init>()V
+#blocking()Lreactor/core/util/WaitStrategy;
+#busySpin()Lreactor/core/util/WaitStrategy;
+#liteBlocking()Lreactor/core/util/WaitStrategy;
+#phasedOff(JJLjava/util/concurrent/TimeUnit;Lreactor/core/util/WaitStrategy;)Lreactor/core/util/WaitStrategy;
+#phasedOffLiteLock(JJLjava/util/concurrent/TimeUnit;)Lreactor/core/util/WaitStrategy;
+#phasedOffLock(JJLjava/util/concurrent/TimeUnit;)Lreactor/core/util/WaitStrategy;
+#phasedOffSleep(JJLjava/util/concurrent/TimeUnit;)Lreactor/core/util/WaitStrategy;
+#sleeping()Lreactor/core/util/WaitStrategy;
+#sleeping(I)Lreactor/core/util/WaitStrategy;
+#yielding()Lreactor/core/util/WaitStrategy;
+#signalAllWhenBlocking()V
+#waitFor(JLreactor/fn/LongSupplier;Ljava/lang/Runnable;)J
@2.5.0.M2
+#waitFor(JLjava/util/function/LongSupplier;Ljava/lang/Runnable;)J
-#waitFor(JLreactor/fn/LongSupplier;Ljava/lang/Runnable;)J
@2.5.0.M4
+#parking()Lreactor/core/util/WaitStrategy;
+#parking(I)Lreactor/core/util/WaitStrategy;
-#sleeping(I)Lreactor/core/util/WaitStrategy;
@3.0.0.RC1
-###reactor/core/util/WaitStrategy

+###reactor/core/util/ReactiveStateUtils$Node
@2.5.0.M1
+#value()Ljava/lang/Object;
+#getId()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getGroup()Ljava/lang/String;
+#isFactory()Z
+#isInner()Z
+#isLogging()Z
+#isReference()Z
+#isDefinedId()Z
+#getCapacity()J
+#getBuffered()J
+#getUpstreamLimit()J
+#getPeriod()J
+#getFailedState()Ljava/lang/Throwable;
+#getExpectedUpstream()J
+#getRequestedDownstream()J
+#isActive()Ljava/lang/Boolean;
+#isTerminated()Ljava/lang/Boolean;
+#isCancelled()Ljava/lang/Boolean;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#toJSON()Ljava/lang/String;
+#toJSON(I)Ljava/lang/String;
+#compareTo(Lreactor/core/util/ReactiveStateUtils$Node;)I
+#compareTo(Ljava/lang/Object;)I
@3.0.0.RC1
-###reactor/core/util/ReactiveStateUtils$Node

+###reactor/core/util/DeferredSubscription
@2.5.0.M1
+#<init>()V
+#set(Lorg/reactivestreams/Subscription;)Z
+#request(J)V
+#cancel()V
+#isCancelled()Z
+#isStarted()Z
+#isTerminated()Z
+#requestedFromDownstream()J
+#upstream()Lorg/reactivestreams/Subscription;
+#upstream()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/util/DeferredSubscription

+###reactor/core/util/Exceptions$InsufficientCapacityException
@2.5.0.M1
+#fillInStackTrace()Ljava/lang/Throwable;
@3.0.0.RC1
-###reactor/core/util/Exceptions$InsufficientCapacityException

+###reactor/core/util/Exceptions$ReactiveException
@2.5.0.M1
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#fillInStackTrace()Ljava/lang/Throwable;
@3.0.0.RC1
-###reactor/core/util/Exceptions$ReactiveException

+###reactor/core/util/PlatformDependent
@2.5.0.M1
+#values()[Lreactor/core/util/PlatformDependent;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/PlatformDependent;
+#newAtomicReferenceFieldUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
+#hasUnsafe()Z
+#getUnsafe()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/util/PlatformDependent

+###reactor/core/util/Exceptions$DownstreamException
@2.5.0.M1
+#<init>(Ljava/lang/Throwable;)V
@3.0.0.RC1
-###reactor/core/util/Exceptions$DownstreamException

+###reactor/core/util/Logger
@2.5.0.M1
+#<init>()V
+#getLogger(Ljava/lang/String;)Lreactor/core/util/Logger;
+#getLogger(Ljava/lang/Class;)Lreactor/core/util/Logger;
+#enableExtension(Lreactor/core/util/Logger$Extension;)Z
+#disableExtension(Lreactor/core/util/Logger$Extension;)Z
+#format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+#getName()Ljava/lang/String;
+#isTraceEnabled()Z
+#trace(Ljava/lang/String;)V
+#trace(Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.0.0.RC1
-###reactor/core/util/Logger

+###reactor/core/util/BackpressureUtils
@2.5.0.M1
+#values()[Lreactor/core/util/BackpressureUtils;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/BackpressureUtils;
+#validate(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
+#validate(J)Z
+#checkRequest(J)V
+#checkRequest(JLorg/reactivestreams/Subscriber;)Z
+#multiplyCap(JJ)J
+#addCap(JJ)J
+#subOrZero(JJ)J
+#subOrZero(II)I
+#addAndGet(Ljava/util/concurrent/atomic/AtomicLong;J)J
+#addAndGet(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
+#getAndAdd(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
+#getAndAdd(Lreactor/core/util/Sequence;J)J
+#getAndSub(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
+#getAndSub(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;Ljava/lang/Object;I)J
+#getAndSub(Lreactor/core/util/Sequence;J)J
+#getAndSub(Ljava/util/concurrent/atomic/AtomicLong;J)J
+#terminate(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
+#setOnce(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
+#set(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
+#replace(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
+#reportSubscriptionSet()V
+#reportBadRequest(J)V
+#reportMoreProduced()V
@2.5.0.M3
+#getAndAddCap(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
+#getAndAddCap(Lreactor/core/util/Sequence;J)J
-#getAndAdd(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
-#getAndAdd(Lreactor/core/util/Sequence;J)J
-#getAndSub(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;Ljava/lang/Object;I)J
@3.0.0.RC1
-###reactor/core/util/BackpressureUtils

+###reactor/core/util/EmptySubscription
@2.5.0.M1
+#values()[Lreactor/core/util/EmptySubscription;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/EmptySubscription;
+#request(J)V
+#cancel()V
+#error(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
+#complete(Lorg/reactivestreams/Subscriber;)V
+#getMode()I
+#getName()Ljava/lang/String;
+#add(Ljava/lang/Object;)Z
+#offer(Ljava/lang/Object;)Z
+#remove()Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#element()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
+#requestFusion(I)I
+#drop()V
@2.5.0.M2
-#add(Ljava/lang/Object;)Z
-#offer(Ljava/lang/Object;)Z
-#remove()Ljava/lang/Object;
-#element()Ljava/lang/Object;
-#contains(Ljava/lang/Object;)Z
-#iterator()Ljava/util/Iterator;
-#toArray()[Ljava/lang/Object;
-#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
-#remove(Ljava/lang/Object;)Z
-#containsAll(Ljava/util/Collection;)Z
-#addAll(Ljava/util/Collection;)Z
-#removeAll(Ljava/util/Collection;)Z
-#retainAll(Ljava/util/Collection;)Z
@2.5.0.M3
-#peek()Ljava/lang/Object;
-#drop()V
@3.0.0.RC1
-###reactor/core/util/EmptySubscription

+###reactor/core/util/CancelledSubscription
@2.5.0.M1
+#values()[Lreactor/core/util/CancelledSubscription;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/CancelledSubscription;
+#isCancelled()Z
+#request(J)V
+#cancel()V
@3.0.0.RC1
-###reactor/core/util/CancelledSubscription

+###reactor/core/util/SignalKind
@2.5.0.M2
+#values()[Lreactor/core/util/SignalKind;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/SignalKind;
@3.0.0.RC1
-###reactor/core/util/SignalKind

+###reactor/core/util/Exceptions$AlertException
@2.5.0.M1
+#fillInStackTrace()Ljava/lang/Throwable;
@3.0.0.RC1
-###reactor/core/util/Exceptions$AlertException

+###reactor/core/util/ScalarSubscription
@2.5.0.M1
+#trySubscribeScalarMap(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lreactor/fn/Function;)Z
+#<init>(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)V
+#downstream()Lorg/reactivestreams/Subscriber;
+#request(J)V
+#cancel()V
+#upstream()Ljava/lang/Object;
+#downstream()Ljava/lang/Object;
@2.5.0.M2
-#trySubscribeScalarMap(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lreactor/fn/Function;)Z
@2.5.0.M4
+#requestFusion(I)I
+#poll()Ljava/lang/Object;
+#isEmpty()Z
+#size()I
+#clear()V
@3.0.0.RC1
-###reactor/core/util/ScalarSubscription

+###reactor/core/util/ReactiveStateUtils$Edge
@2.5.0.M1
+#getFrom()Ljava/lang/String;
+#getTo()Ljava/lang/String;
+#getType()Lreactor/core/util/ReactiveStateUtils$Edge$Type;
+#getId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/util/ReactiveStateUtils$Edge

+###reactor/core/util/Exceptions$CancelException
@2.5.0.M1
+#fillInStackTrace()Ljava/lang/Throwable;
@3.0.0.RC1
-###reactor/core/util/Exceptions$CancelException

+###reactor/core/util/ReactiveStateUtils$Edge$Type
@2.5.0.M1
+#values()[Lreactor/core/util/ReactiveStateUtils$Edge$Type;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/ReactiveStateUtils$Edge$Type;
@3.0.0.RC1
-###reactor/core/util/ReactiveStateUtils$Edge$Type

+###reactor/core/util/ReactiveStateUtils
@2.5.0.M1
+#values()[Lreactor/core/util/ReactiveStateUtils;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/ReactiveStateUtils;
+#createGraph()Lreactor/core/util/ReactiveStateUtils$Graph;
+#createGraph(Z)Lreactor/core/util/ReactiveStateUtils$Graph;
+#scan(Ljava/lang/Object;)Lreactor/core/util/ReactiveStateUtils$Graph;
+#scan(Ljava/lang/Object;Z)Lreactor/core/util/ReactiveStateUtils$Graph;
+#subscan(Ljava/lang/Object;)Lreactor/core/util/ReactiveStateUtils$Graph;
+#subscan(Ljava/lang/Object;Z)Lreactor/core/util/ReactiveStateUtils$Graph;
+#prettyPrint(Ljava/lang/Object;)Ljava/lang/String;
+#print(Ljava/lang/Object;)Ljava/lang/String;
+#print(Ljava/lang/Object;Z)Ljava/lang/String;
+#hasUpstream(Ljava/lang/Object;)Z
+#hasUpstreams(Ljava/lang/Object;)Z
+#hasDownstream(Ljava/lang/Object;)Z
+#hasDownstreams(Ljava/lang/Object;)Z
+#hasFeedbackLoop(Ljava/lang/Object;)Z
+#isTraceOnly(Ljava/lang/Object;)Z
+#hasSubscription(Ljava/lang/Object;)Z
+#isCancellable(Ljava/lang/Object;)Z
+#isContained(Ljava/lang/Object;)Z
+#isLogging(Ljava/lang/Object;)Z
+#getCapacity(Ljava/lang/Object;)J
+#getFailedState(Ljava/lang/Object;)Ljava/lang/Throwable;
+#getTimedPeriod(Ljava/lang/Object;)J
+#getUpstreamLimit(Ljava/lang/Object;)J
+#getExpectedUpstream(Ljava/lang/Object;)J
+#getRequestedDownstream(Ljava/lang/Object;)J
+#getName(Ljava/lang/Object;)Ljava/lang/String;
+#getGroup(Ljava/lang/Object;)Ljava/lang/String;
+#getIdOrDefault(Ljava/lang/Object;)Ljava/lang/String;
+#isUnique(Ljava/lang/Object;)Z
+#isFactory(Ljava/lang/Object;)Z
+#getBuffered(Ljava/lang/Object;)J
+#property(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/util/ReactiveStateUtils

+###reactor/core/util/Sequence
@2.5.0.M1
+#get()J
+#set(J)V
+#setVolatile(J)V
+#compareAndSet(JJ)Z
+#incrementAndGet()J
+#addAndGet(J)J
@2.5.0.M2
+#getAsLong()J
-#get()J
@3.0.0.RC1
-###reactor/core/util/Sequence

+###reactor/core/scheduler/TimedScheduler
@2.5.0.M3
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
+#now(Ljava/util/concurrent/TimeUnit;)J
+#createWorker()Lreactor/core/scheduler/TimedScheduler$TimedWorker;
+#createWorker()Lreactor/core/scheduler/Scheduler$Worker;
@3.0.0.RC1
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
-#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
@3.0.6.RELEASE
-#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#now(Ljava/util/concurrent/TimeUnit;)J
@3.1.0.RELEASE
-###reactor/core/scheduler/TimedScheduler

+###reactor/core/scheduler/TimedScheduler$TimedWorker
@2.5.0.M3
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
+#now(Ljava/util/concurrent/TimeUnit;)J
@3.0.0.RC1
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
-#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
@3.0.6.RELEASE
*#now(Ljava/util/concurrent/TimeUnit;)J[deprecated]
-#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
-#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Cancellation;
@3.1.0.RELEASE
-###reactor/core/scheduler/TimedScheduler$TimedWorker

+###reactor/core/tuple/Tuple4
@2.5.0.M2
+#getT4()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/tuple/Tuple4

+###reactor/core/tuple/Tuple6
@2.5.0.M2
+#getT6()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/tuple/Tuple6

+###reactor/core/tuple/Tuple3
@2.5.0.M2
+#getT3()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/tuple/Tuple3

+###reactor/core/tuple/Tuple2
@2.5.0.M2
+#getT1()Ljava/lang/Object;
+#getT2()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/tuple/Tuple2

+###reactor/core/tuple/Tuple
@2.5.0.M2
+#empty()Lreactor/core/tuple/Tuple;
+#of([Ljava/lang/Object;)Lreactor/core/tuple/Tuple;
+#of(Ljava/util/List;)Lreactor/core/tuple/TupleN;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/tuple/Tuple2;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/tuple/Tuple3;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/tuple/Tuple4;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/tuple/Tuple5;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/tuple/Tuple6;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/tuple/Tuple7;
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/tuple/Tuple8;
+#fnAny()Ljava/util/function/Function;
+#fnAny(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn2()Ljava/util/function/Function;
+#fn3()Ljava/util/function/Function;
+#fn3(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn4()Ljava/util/function/Function;
+#fn4(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn5()Ljava/util/function/Function;
+#fn5(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn6()Ljava/util/function/Function;
+#fn6(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn7()Ljava/util/function/Function;
+#fn7(Ljava/util/function/Function;)Ljava/util/function/Function;
+#fn8()Ljava/util/function/Function;
+#fn8(Ljava/util/function/Function;)Ljava/util/function/Function;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#toList()Ljava/util/List;
+#size()I
+#iterator()Ljava/util/Iterator;
+#hashCode()I
+#apply(Ljava/lang/Object;)Lreactor/core/tuple/Tuple;
+#equals(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/tuple/Tuple

+###reactor/core/tuple/Tuple7
@2.5.0.M2
+#getT7()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/tuple/Tuple7

+###reactor/core/tuple/TupleN
@2.5.0.M2
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/tuple/TupleN

+###reactor/core/tuple/Tuple8
@2.5.0.M2
+#getT8()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/tuple/Tuple8

+###reactor/core/tuple/Tuple5
@2.5.0.M2
+#getT5()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#toArray()[Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RC1
-###reactor/core/tuple/Tuple5

+###reactor/core/queue/RingBuffer
@2.5.0.M1
+#<init>()V
+#ceilingNextPowerOfTwo(I)I
+#createRequestTask(Lorg/reactivestreams/Subscription;Ljava/lang/Runnable;Lreactor/fn/Consumer;Lreactor/fn/LongSupplier;Lreactor/core/util/WaitStrategy;Lorg/reactivestreams/Subscriber;I)Ljava/lang/Runnable;
+#createMultiProducer(I)Lreactor/core/queue/RingBuffer;
+#createMultiProducer(Lreactor/fn/Supplier;I)Lreactor/core/queue/RingBuffer;
+#createMultiProducer(Lreactor/fn/Supplier;ILreactor/core/util/WaitStrategy;)Lreactor/core/queue/RingBuffer;
+#createMultiProducer(Lreactor/fn/Supplier;ILreactor/core/util/WaitStrategy;Ljava/lang/Runnable;)Lreactor/core/queue/RingBuffer;
+#nonBlockingBoundedQueue(Lreactor/core/queue/RingBuffer;J)Ljava/util/Queue;
+#blockingBoundedQueue(Lreactor/core/queue/RingBuffer;J)Ljava/util/Queue;
+#createSingleProducer(I)Lreactor/core/queue/RingBuffer;
+#createSingleProducer(ILjava/lang/Runnable;)Lreactor/core/queue/RingBuffer;
+#createSingleProducer(Lreactor/fn/Supplier;I)Lreactor/core/queue/RingBuffer;
+#createSingleProducer(Lreactor/fn/Supplier;ILreactor/core/util/WaitStrategy;)Lreactor/core/queue/RingBuffer;
+#createSingleProducer(Lreactor/fn/Supplier;ILreactor/core/util/WaitStrategy;Ljava/lang/Runnable;)Lreactor/core/queue/RingBuffer;
+#getMinimumSequence([Lreactor/core/util/Sequence;J)J
+#getMinimumSequence(Lreactor/core/util/Sequence;[Lreactor/core/util/Sequence;J)J
+#isPowerOfTwo(I)Z
+#log2(I)I
+#newSequence(J)Lreactor/core/util/Sequence;
+#onNext(Ljava/lang/Object;Lreactor/core/queue/RingBuffer;)V
+#waitRequestOrTerminalEvent(Lreactor/fn/LongSupplier;Lreactor/core/queue/RingBufferReceiver;Ljava/util/concurrent/atomic/AtomicBoolean;Lreactor/fn/LongSupplier;Ljava/lang/Runnable;)Z
+#wrap(JLjava/lang/Object;)Lreactor/core/util/Sequence;
+#wrap(Lreactor/core/util/Sequence;Ljava/lang/Object;)Lreactor/core/util/Sequence;
+#addGatingSequence(Lreactor/core/util/Sequence;)V
+#addGatingSequences([Lreactor/core/util/Sequence;)V
+#cachedRemainingCapacity()J
+#claimAndGetPreallocated(J)Ljava/lang/Object;
+#get(J)Ljava/lang/Object;
+#get()J
+#getCursor()J
+#getMinimumGatingSequence()J
+#getMinimumGatingSequence(Lreactor/core/util/Sequence;)J
+#getSequence()Lreactor/core/util/Sequence;
+#getSequenceReceivers()[Lreactor/core/util/Sequence;
+#hasAvailableCapacity(I)Z
+#isPublished(J)Z
+#newBarrier()Lreactor/core/queue/RingBufferReceiver;
+#next()J
+#next(I)J
+#publish(J)V
+#publish(JJ)V
+#remainingCapacity()J
+#removeGatingSequence(Lreactor/core/util/Sequence;)Z
+#resetTo(J)V
+#toString()Ljava/lang/String;
+#tryNext()J
+#tryNext(I)J
@2.5.0.M2
+#createRequestTask(Lorg/reactivestreams/Subscription;Ljava/lang/Runnable;Ljava/util/function/Consumer;Ljava/util/function/LongSupplier;Lreactor/core/util/WaitStrategy;Lorg/reactivestreams/Subscriber;I)Ljava/lang/Runnable;
+#createMultiProducer(Ljava/util/function/Supplier;I)Lreactor/core/queue/RingBuffer;
+#createMultiProducer(Ljava/util/function/Supplier;ILreactor/core/util/WaitStrategy;)Lreactor/core/queue/RingBuffer;
+#createMultiProducer(Ljava/util/function/Supplier;ILreactor/core/util/WaitStrategy;Ljava/lang/Runnable;)Lreactor/core/queue/RingBuffer;
+#createSingleProducer(Ljava/util/function/Supplier;I)Lreactor/core/queue/RingBuffer;
+#createSingleProducer(Ljava/util/function/Supplier;ILreactor/core/util/WaitStrategy;)Lreactor/core/queue/RingBuffer;
+#createSingleProducer(Ljava/util/function/Supplier;ILreactor/core/util/WaitStrategy;Ljava/lang/Runnable;)Lreactor/core/queue/RingBuffer;
+#waitRequestOrTerminalEvent(Ljava/util/function/LongSupplier;Lreactor/core/queue/RingBufferReceiver;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/function/LongSupplier;Ljava/lang/Runnable;)Z
+#getAsLong()J
-#createRequestTask(Lorg/reactivestreams/Subscription;Ljava/lang/Runnable;Lreactor/fn/Consumer;Lreactor/fn/LongSupplier;Lreactor/core/util/WaitStrategy;Lorg/reactivestreams/Subscriber;I)Ljava/lang/Runnable;
-#createMultiProducer(Lreactor/fn/Supplier;I)Lreactor/core/queue/RingBuffer;
-#createMultiProducer(Lreactor/fn/Supplier;ILreactor/core/util/WaitStrategy;)Lreactor/core/queue/RingBuffer;
-#createMultiProducer(Lreactor/fn/Supplier;ILreactor/core/util/WaitStrategy;Ljava/lang/Runnable;)Lreactor/core/queue/RingBuffer;
-#createSingleProducer(Lreactor/fn/Supplier;I)Lreactor/core/queue/RingBuffer;
-#createSingleProducer(Lreactor/fn/Supplier;ILreactor/core/util/WaitStrategy;)Lreactor/core/queue/RingBuffer;
-#createSingleProducer(Lreactor/fn/Supplier;ILreactor/core/util/WaitStrategy;Ljava/lang/Runnable;)Lreactor/core/queue/RingBuffer;
-#waitRequestOrTerminalEvent(Lreactor/fn/LongSupplier;Lreactor/core/queue/RingBufferReceiver;Ljava/util/concurrent/atomic/AtomicBoolean;Lreactor/fn/LongSupplier;Ljava/lang/Runnable;)Z
-#addGatingSequences([Lreactor/core/util/Sequence;)V
-#cachedRemainingCapacity()J
-#claimAndGetPreallocated(J)Ljava/lang/Object;
-#get()J
-#hasAvailableCapacity(I)Z
-#isPublished(J)Z
@2.5.0.M4
-#ceilingNextPowerOfTwo(I)I
-#createMultiProducer(Ljava/util/function/Supplier;I)Lreactor/core/queue/RingBuffer;
-#createSingleProducer(ILjava/lang/Runnable;)Lreactor/core/queue/RingBuffer;
-#isPowerOfTwo(I)Z
@3.0.0.RC1
-###reactor/core/queue/RingBuffer

+###reactor/core/queue/QueueSupplier
@2.5.0.M1
+#get(J)Lreactor/fn/Supplier;
+#get(JZZ)Lreactor/fn/Supplier;
+#one()Lreactor/fn/Supplier;
+#one(Z)Lreactor/fn/Supplier;
+#small()Lreactor/fn/Supplier;
+#small(Z)Lreactor/fn/Supplier;
+#unbounded()Lreactor/fn/Supplier;
+#xs()Lreactor/fn/Supplier;
+#xs(Z)Lreactor/fn/Supplier;
+#get()Ljava/util/Queue;
+#get()Ljava/lang/Object;
@2.5.0.M2
+#get(J)Ljava/util/function/Supplier;
+#get(JZZ)Ljava/util/function/Supplier;
+#one()Ljava/util/function/Supplier;
+#one(Z)Ljava/util/function/Supplier;
+#small()Ljava/util/function/Supplier;
+#small(Z)Ljava/util/function/Supplier;
+#unbounded()Ljava/util/function/Supplier;
+#unbounded(I)Ljava/util/function/Supplier;
+#xs()Ljava/util/function/Supplier;
+#xs(Z)Ljava/util/function/Supplier;
-#get(J)Lreactor/fn/Supplier;
-#get(JZZ)Lreactor/fn/Supplier;
-#one()Lreactor/fn/Supplier;
-#one(Z)Lreactor/fn/Supplier;
-#small()Lreactor/fn/Supplier;
-#small(Z)Lreactor/fn/Supplier;
-#unbounded()Lreactor/fn/Supplier;
-#xs()Lreactor/fn/Supplier;
-#xs(Z)Lreactor/fn/Supplier;
@2.5.0.M4
+#ceilingNextPowerOfTwo(I)I
+#isPowerOfTwo(I)Z
-#one(Z)Ljava/util/function/Supplier;
@3.0.0.RC1
-###reactor/core/queue/QueueSupplier

+###reactor/core/queue/RingBufferReceiver
@2.5.0.M1
+#waitFor(J)J
+#waitFor(JLjava/lang/Runnable;)J
+#getCursor()J
+#isAlerted()Z
+#alert()V
+#signal()V
+#clearAlert()V
+#checkAlert()V
+#get()J
+#run()V
@2.5.0.M2
+#getAsLong()J
-#get()J
@3.0.0.RC1
-###reactor/core/queue/RingBufferReceiver

+###reactor/core/queue/Slot
@2.5.0.M1
+#<init>()V
+#recycle()V
@2.5.0.M2
-#recycle()V
@2.5.0.M3
+#dispose()V
@3.0.0.RC1
-###reactor/core/queue/Slot

+###reactor/core/flow/Fuseable$QueueSubscription
@2.5.0.M1
+#requestFusion(I)I
+#drop()V
@2.5.0.M2
+#add(Ljava/lang/Object;)Z
+#offer(Ljava/lang/Object;)Z
+#remove()Ljava/lang/Object;
+#element()Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
@2.5.0.M3
+#peek()Ljava/lang/Object;
-#drop()V
@3.0.0.RC1
-###reactor/core/flow/Fuseable$QueueSubscription

+###reactor/core/flow/Fuseable$ConditionalSubscriber
@2.5.0.M1
+#tryOnNext(Ljava/lang/Object;)Z
@3.0.0.RC1
-###reactor/core/flow/Fuseable$ConditionalSubscriber

+###reactor/core/flow/MultiReceiver
@2.5.0.M1
+#upstreams()Ljava/util/Iterator;
+#upstreamCount()J
@3.0.0.RC1
-###reactor/core/flow/MultiReceiver

+###reactor/core/flow/Loopback
@2.5.0.M1
+#connectedInput()Ljava/lang/Object;
+#connectedOutput()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/flow/Loopback

+###reactor/core/flow/Producer
@2.5.0.M1
+#downstream()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/flow/Producer

+###reactor/core/flow/Fuseable$SynchronousSubscription
@2.5.0.M1
+#<init>()V
+#offer(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#requestFusion(I)I
+#add(Ljava/lang/Object;)Z
+#remove()Ljava/lang/Object;
+#element()Ljava/lang/Object;
@2.5.0.M2
-#<init>()V
-#offer(Ljava/lang/Object;)Z
-#contains(Ljava/lang/Object;)Z
-#iterator()Ljava/util/Iterator;
-#toArray()[Ljava/lang/Object;
-#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
-#remove(Ljava/lang/Object;)Z
-#containsAll(Ljava/util/Collection;)Z
-#addAll(Ljava/util/Collection;)Z
-#removeAll(Ljava/util/Collection;)Z
-#retainAll(Ljava/util/Collection;)Z
-#add(Ljava/lang/Object;)Z
-#remove()Ljava/lang/Object;
-#element()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/flow/Fuseable$SynchronousSubscription

+###reactor/core/flow/MultiProducer
@2.5.0.M1
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
@2.5.0.M4
+#hasDownstreams()Z
@3.0.0.RC1
-###reactor/core/flow/MultiProducer

+###reactor/core/flow/Receiver
@2.5.0.M1
+#upstream()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/flow/Receiver

+###reactor/core/flow/Fuseable
@2.5.0.M1
@3.0.0.RC1
-###reactor/core/flow/Fuseable

+###reactor/core/flow/Cancellation
@2.5.0.M3
+#dispose()V
@3.0.0.RC1
-###reactor/core/flow/Cancellation

+###reactor/core/flow/Fuseable$ScalarCallable
@2.5.0.M3
+#call()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/flow/Fuseable$ScalarCallable

+###reactor/core/state/Requestable
@2.5.0.M1
+#requestedFromDownstream()J
@3.0.0.RC1
-###reactor/core/state/Requestable

+###reactor/core/state/Backpressurable
@2.5.0.M1
+#getCapacity()J
+#getPending()J
@3.0.0.RC1
-###reactor/core/state/Backpressurable

+###reactor/core/state/Cancellable
@2.5.0.M1
+#isCancelled()Z
@3.0.0.RC1
-###reactor/core/state/Cancellable

+###reactor/core/state/Prefetchable
@2.5.0.M1
+#expectedFromUpstream()J
+#limit()J
@3.0.0.RC1
-###reactor/core/state/Prefetchable

+###reactor/core/state/Introspectable
@2.5.0.M1
+#getMode()I
+#getName()Ljava/lang/String;
@2.5.0.M2
+#key()Ljava/lang/Object;
+#getError()Ljava/lang/Throwable;
@2.5.0.M3
+#getPeriod()J
@3.0.0.RC1
-###reactor/core/state/Introspectable

+###reactor/core/state/Completable
@2.5.0.M1
+#isStarted()Z
+#isTerminated()Z
@3.0.0.RC1
-###reactor/core/state/Completable

+###reactor/core/converter/RxJava1CompletableConverter
@2.5.0.M2
+#<init>()V
+#get()Ljava/lang/Class;
+#test(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#get()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/converter/RxJava1CompletableConverter

+###reactor/core/converter/FlowPublisherConverter
@2.5.0.M1
+#<init>()V
+#from(Lorg/reactivestreams/Publisher;)Ljava/util/concurrent/Flow$Publisher;
+#from(Ljava/util/concurrent/Flow$Publisher;)Lorg/reactivestreams/Publisher;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Ljava/util/concurrent/Flow$Publisher;
+#toPublisher(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#get()Ljava/lang/Class;
+#test(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Ljava/lang/Object;
+#toPublisher(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#get()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/converter/FlowPublisherConverter

+###reactor/core/converter/DependencyUtils
@2.5.0.M1
+#hasRxJava1()Z
+#hasRxJava1Single()Z
+#hasCompletableFuture()Z
+#hasFlowPublisher()Z
+#hasReactorStream()Z
+#hasReactorCodec()Z
+#hasReactorBus()Z
+#hasReactorNet()Z
+#convertToPublisher(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#convertFromPublisher(Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Ljava/lang/Object;
@2.5.0.M2
+#hasRxJava1Completable()Z
-#hasCompletableFuture()Z
-#hasReactorStream()Z
@2.5.0.M3
+#hasReactorIpc()Z
+#hasReactorNetty()Z
-#hasReactorCodec()Z
-#hasReactorNet()Z
@3.0.0.RC1
-###reactor/core/converter/DependencyUtils

+###reactor/core/converter/RxJava1ObservableConverter
@2.5.0.M1
+#<init>()V
+#from(Lorg/reactivestreams/Publisher;)Lrx/Observable;
+#from(Lrx/Observable;)Lreactor/core/publisher/Flux;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Lrx/Observable;
+#toPublisher(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#get()Ljava/lang/Class;
+#test(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Ljava/lang/Object;
+#toPublisher(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#get()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/converter/RxJava1ObservableConverter

+###reactor/core/converter/RxJava1SingleConverter
@2.5.0.M1
+#<init>()V
+#from(Lorg/reactivestreams/Publisher;)Lrx/Single;
+#from(Lrx/Single;)Lreactor/core/publisher/Mono;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Lrx/Single;
+#toPublisher(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#get()Ljava/lang/Class;
+#test(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Ljava/lang/Object;
+#toPublisher(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#get()Ljava/lang/Object;
@3.0.0.RC1
-###reactor/core/converter/RxJava1SingleConverter

+###reactor/core/test/TestSubscriber
@2.5.0.M1
+#await(JLreactor/fn/Supplier;Lreactor/fn/Supplier;)V
+#await(JLjava/lang/String;Lreactor/fn/Supplier;)V
+#<init>()V
+#<init>(J)V
+#configureValuesTimeout(J)Lreactor/core/test/TestSubscriber;
+#configureValuesStorage(Z)Lreactor/core/test/TestSubscriber;
+#assertSubscribed()Lreactor/core/test/TestSubscriber;
+#assertNotSubscribed()Lreactor/core/test/TestSubscriber;
+#assertComplete()Lreactor/core/test/TestSubscriber;
+#assertNotComplete()Lreactor/core/test/TestSubscriber;
+#assertError()Lreactor/core/test/TestSubscriber;
+#assertError(Ljava/lang/Class;)Lreactor/core/test/TestSubscriber;
+#assertErrorWith(Lreactor/fn/Consumer;)Lreactor/core/test/TestSubscriber;
+#assertNoError()Lreactor/core/test/TestSubscriber;
+#assertTerminated()Lreactor/core/test/TestSubscriber;
+#assertNotTerminated()Lreactor/core/test/TestSubscriber;
+#assertValueCount(J)Lreactor/core/test/TestSubscriber;
+#assertNoValues()Lreactor/core/test/TestSubscriber;
+#assertValues([Ljava/lang/Object;)Lreactor/core/test/TestSubscriber;
+#assertValuesWith([Lreactor/fn/Consumer;)Lreactor/core/test/TestSubscriber;
+#assertValueSequence(Ljava/lang/Iterable;)Lreactor/core/test/TestSubscriber;
+#await()Lreactor/core/test/TestSubscriber;
+#await(J)Lreactor/core/test/TestSubscriber;
+#await(JLjava/util/concurrent/TimeUnit;)Lreactor/core/test/TestSubscriber;
+#awaitAndAssertValuesWith([Lreactor/fn/Consumer;)Lreactor/core/test/TestSubscriber;
+#awaitAndAssertValues([Ljava/lang/Object;)Lreactor/core/test/TestSubscriber;
+#awaitAndAssertValueCount(J)Lreactor/core/test/TestSubscriber;
+#bindTo(Lorg/reactivestreams/Publisher;)Lreactor/core/test/TestSubscriber;
+#debug()Lreactor/core/util/ReactiveStateUtils$Graph;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
@2.5.0.M2
+#await(Ljava/time/Duration;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
+#await(Ljava/time/Duration;Ljava/lang/String;Ljava/util/function/Supplier;)V
+#configureValuesTimeout(Ljava/time/Duration;)Lreactor/core/test/TestSubscriber;
+#assertErrorWith(Ljava/util/function/Consumer;)Lreactor/core/test/TestSubscriber;
+#assertValuesWith([Ljava/util/function/Consumer;)Lreactor/core/test/TestSubscriber;
+#await(Ljava/time/Duration;)Lreactor/core/test/TestSubscriber;
+#awaitAndAssertNextValuesWith([Ljava/util/function/Consumer;)Lreactor/core/test/TestSubscriber;
+#awaitAndAssertNextValues([Ljava/lang/Object;)Lreactor/core/test/TestSubscriber;
+#awaitAndAssertNextValueCount(J)Lreactor/core/test/TestSubscriber;
-#await(JLreactor/fn/Supplier;Lreactor/fn/Supplier;)V
-#await(JLjava/lang/String;Lreactor/fn/Supplier;)V
-#configureValuesTimeout(J)Lreactor/core/test/TestSubscriber;
-#assertErrorWith(Lreactor/fn/Consumer;)Lreactor/core/test/TestSubscriber;
-#assertValuesWith([Lreactor/fn/Consumer;)Lreactor/core/test/TestSubscriber;
-#await(J)Lreactor/core/test/TestSubscriber;
-#await(JLjava/util/concurrent/TimeUnit;)Lreactor/core/test/TestSubscriber;
-#awaitAndAssertValuesWith([Lreactor/fn/Consumer;)Lreactor/core/test/TestSubscriber;
-#awaitAndAssertValues([Ljava/lang/Object;)Lreactor/core/test/TestSubscriber;
-#awaitAndAssertValueCount(J)Lreactor/core/test/TestSubscriber;
@2.5.0.M4
+#await(Ljava/time/Duration;Ljava/util/function/Supplier;Ljava/util/function/BooleanSupplier;)V
+#await(Ljava/time/Duration;Ljava/lang/String;Ljava/util/function/BooleanSupplier;)V
+#create()Lreactor/core/test/TestSubscriber;
+#create(J)Lreactor/core/test/TestSubscriber;
+#subscribe(Lorg/reactivestreams/Publisher;)Lreactor/core/test/TestSubscriber;
+#subscribe(Lorg/reactivestreams/Publisher;J)Lreactor/core/test/TestSubscriber;
+#assertContainValues(Ljava/util/Set;)Lreactor/core/test/TestSubscriber;
+#assertErrorMessage(Ljava/lang/String;)Lreactor/core/test/TestSubscriber;
+#assertFuseableSource()Lreactor/core/test/TestSubscriber;
+#assertFusionEnabled()Lreactor/core/test/TestSubscriber;
+#assertFusionMode(I)Lreactor/core/test/TestSubscriber;
+#assertFusionRejected()Lreactor/core/test/TestSubscriber;
+#assertNonFuseableSource()Lreactor/core/test/TestSubscriber;
+#establishedFusionMode()I
+#requestedFusionMode(I)Lreactor/core/test/TestSubscriber;
-#await(Ljava/time/Duration;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
-#await(Ljava/time/Duration;Ljava/lang/String;Ljava/util/function/Supplier;)V
-#<init>()V
-#<init>(J)V
-#bindTo(Lorg/reactivestreams/Publisher;)Lreactor/core/test/TestSubscriber;
@3.0.0.RC1
-###reactor/core/test/TestSubscriber

+###reactor/core/publisher/FluxIndex
@3.1.2.RELEASE
+#subscribe(Lreactor/core/CoreSubscriber;)V
@3.1.4.RELEASE
-###reactor/core/publisher/FluxIndex

+###reactor/core/publisher/FluxIndexFuseable
@3.1.2.RELEASE
+#subscribe(Lreactor/core/CoreSubscriber;)V
@3.1.4.RELEASE
-###reactor/core/publisher/FluxIndexFuseable

+###reactor/core/publisher/FluxDelaySequence
@3.1.3.RELEASE
+#<init>(Lreactor/core/publisher/Flux;Ljava/time/Duration;Lreactor/core/scheduler/Scheduler;)V
+#subscribe(Lreactor/core/CoreSubscriber;)V
@3.1.4.RELEASE
-###reactor/core/publisher/FluxDelaySequence

+###reactor/util/concurrent/MpscLinkedQueue
@3.1.3.RELEASE
+#<init>()V
+#offer(Ljava/lang/Object;)Z
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#clear()V
+#size()I
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
@3.1.4.RELEASE
-###reactor/util/concurrent/MpscLinkedQueue

+###reactor/core/subscriber/SubscriberWithContext
@2.5.0.M1
+#create(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;)Lreactor/core/subscriber/SubscriberWithContext;
+#downstream()Lorg/reactivestreams/Subscriber;
+#context()Ljava/lang/Object;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#isStarted()Z
+#isTerminated()Z
+#isCancelled()Z
+#connectedInput()Ljava/lang/Object;
+#connectedOutput()Ljava/lang/Object;
+#downstream()Ljava/lang/Object;
@2.5.0.M4
-###reactor/core/subscriber/SubscriberWithContext

+###reactor/core/subscriber/SignalEmitter$Emission
@2.5.0.M1
+#values()[Lreactor/core/subscriber/SignalEmitter$Emission;
+#valueOf(Ljava/lang/String;)Lreactor/core/subscriber/SignalEmitter$Emission;
+#isBackpressured()Z
+#isOk()Z
+#isFailed()Z
+#isCancelled()Z
@2.5.0.M4
-###reactor/core/subscriber/SignalEmitter$Emission

+###reactor/core/subscriber/SubscriptionWithContext
@2.5.0.M1
+#create(Lorg/reactivestreams/Subscription;Ljava/lang/Object;)Lreactor/core/subscriber/SubscriptionWithContext;
+#upstream()Ljava/lang/Object;
+#context()Ljava/lang/Object;
+#abort()V
+#request(J)V
+#cancel()V
+#getMode()I
+#getName()Ljava/lang/String;
+#isCancelled()Z
@2.5.0.M2
-#getName()Ljava/lang/String;
@2.5.0.M4
-###reactor/core/subscriber/SubscriptionWithContext

+###reactor/core/publisher/EventLoopProcessor
@2.5.0.M2
+#accept(Ljava/lang/Object;)V
+#alive()Z
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#drain()Lreactor/core/publisher/Flux;
+#forceShutdown()Lreactor/core/publisher/Flux;
+#getAvailableCapacity()J
+#getError()Ljava/lang/Throwable;
+#getMode()I
+#getName()Ljava/lang/String;
+#isCancelled()Z
+#isInContext()Z
+#isStarted()Z
+#isTerminated()Z
+#isWork()Z
+#key()Ljava/lang/Object;
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#shutdown()V
@2.5.0.M3
+#hashCode()I
-#accept(Ljava/lang/Object;)V
@2.5.0.M4
-###reactor/core/publisher/EventLoopProcessor

+###reactor/core/publisher/FluxTap
@2.5.0.M2
+#tap(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/FluxTap;
+#get()Ljava/lang/Object;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.5.0.M4
-###reactor/core/publisher/FluxTap

+###reactor/core/publisher/Computations
@2.5.0.M3
+#parallel()Lreactor/core/scheduler/Scheduler;
+#parallel(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
+#parallel(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;
+#parallel(Ljava/lang/String;II)Lreactor/core/scheduler/Scheduler;
+#parallel(Ljava/lang/String;IIZ)Lreactor/core/scheduler/Scheduler;
+#parallel(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/scheduler/Scheduler;
+#parallel(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/scheduler/Scheduler;
+#parallel(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;ZLjava/util/function/Supplier;)Lreactor/core/scheduler/Scheduler;
+#create(Lorg/reactivestreams/Processor;I)Lreactor/core/scheduler/Scheduler;
+#create(Ljava/util/function/Supplier;IZ)Lreactor/core/scheduler/Scheduler;
+#create(Ljava/util/function/Supplier;ILjava/util/function/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/scheduler/Scheduler;
+#concurrent()Lreactor/core/scheduler/Scheduler;
+#concurrent(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
+#concurrent(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;
+#concurrent(Ljava/lang/String;II)Lreactor/core/scheduler/Scheduler;
+#concurrent(Ljava/lang/String;IIZ)Lreactor/core/scheduler/Scheduler;
+#concurrent(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/scheduler/Scheduler;
+#concurrent(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/scheduler/Scheduler;
+#concurrent(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;ZLreactor/core/util/WaitStrategy;)Lreactor/core/scheduler/Scheduler;
+#single()Lreactor/core/scheduler/Scheduler;
+#single(Ljava/lang/String;)Lreactor/core/scheduler/Scheduler;
+#single(Ljava/lang/String;I)Lreactor/core/scheduler/Scheduler;
+#single(Ljava/lang/String;IZ)Lreactor/core/scheduler/Scheduler;
+#single(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/scheduler/Scheduler;
+#single(Ljava/lang/String;ILjava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/scheduler/Scheduler;
+#single(Ljava/lang/String;ILjava/util/function/Consumer;Ljava/lang/Runnable;ZLjava/util/function/Supplier;)Lreactor/core/scheduler/Scheduler;
+#single(Lorg/reactivestreams/Processor;)Lreactor/core/scheduler/Scheduler;
+#single(Lorg/reactivestreams/Processor;Z)Lreactor/core/scheduler/Scheduler;
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#createWorker()Lreactor/core/scheduler/Scheduler$Worker;
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
+#forceShutdown()Lreactor/core/publisher/Flux;
+#isTerminated()Z
+#isStarted()Z
+#schedule(Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
+#shutdown()V
@2.5.0.M4
-###reactor/core/publisher/Computations

+###reactor/core/publisher/MonoWhen
@2.5.0.M3
+#<init>(Z[Lreactor/core/publisher/Mono;)V
+#<init>(ZLjava/lang/Iterable;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.5.0.M4
-###reactor/core/publisher/MonoWhen

+###reactor/core/util/UUIDUtils
@2.5.0.M1
+#values()[Lreactor/core/util/UUIDUtils;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/UUIDUtils;
+#random()Ljava/util/UUID;
+#create()Ljava/util/UUID;
@2.5.0.M4
-###reactor/core/util/UUIDUtils

+###reactor/core/util/ExecutorUtils
@2.5.0.M1
+#values()[Lreactor/core/util/ExecutorUtils;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/ExecutorUtils;
+#newNamedFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
+#newNamedFactory(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/concurrent/ThreadFactory;
+#newNamedFactory(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Thread$UncaughtExceptionHandler;Z)Ljava/util/concurrent/ThreadFactory;
+#shutdownIfSingleUse(Ljava/util/concurrent/ExecutorService;)V
+#singleUse(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;
+#singleUse(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/concurrent/ExecutorService;
@2.5.0.M4
-###reactor/core/util/ExecutorUtils

+###reactor/core/scheduler/Timer
@2.5.0.M3
+#create()Lreactor/core/scheduler/Timer;
+#create(Ljava/lang/String;)Lreactor/core/scheduler/Timer;
+#create(I)Lreactor/core/scheduler/Timer;
+#create(Ljava/lang/String;I)Lreactor/core/scheduler/Timer;
+#create(II)Lreactor/core/scheduler/Timer;
+#create(Ljava/lang/String;II)Lreactor/core/scheduler/Timer;
+#global()Lreactor/core/scheduler/Timer;
+#globalOrNew()Lreactor/core/scheduler/Timer;
+#globalOrNull()Lreactor/core/scheduler/Timer;
+#hasGlobal()Z
+#unregisterGlobal()V
+#isCancelled()Z
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
+#schedulePeriodically(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/flow/Cancellation;
+#createWorker()Lreactor/core/scheduler/TimedScheduler$TimedWorker;
+#schedule(Ljava/lang/Runnable;)Lreactor/core/flow/Cancellation;
+#getPeriod()J
+#shutdown()V
+#start()V
+#toString()Ljava/lang/String;
+#createWorker()Lreactor/core/scheduler/Scheduler$Worker;
@2.5.0.M4
-###reactor/core/scheduler/Timer

+###reactor/core/Exceptions$SourceException
@3.5.0
+#fillInStackTrace()Ljava/lang/Throwable;

+###reactor/core/observability/DefaultSignalListener
@3.5.0
+#<init>()V
+#doFirst()V
+#doFinally(Lreactor/core/publisher/SignalType;)V
+#doOnSubscription()V
+#doOnFusion(I)V
+#doOnRequest(J)V
+#doOnCancel()V
+#doOnNext(Ljava/lang/Object;)V
+#doOnComplete()V
+#doOnError(Ljava/lang/Throwable;)V
+#doAfterComplete()V
+#doAfterError(Ljava/lang/Throwable;)V
+#doOnMalformedOnNext(Ljava/lang/Object;)V
+#doOnMalformedOnComplete()V
+#doOnMalformedOnError(Ljava/lang/Throwable;)V
+#handleListenerError(Ljava/lang/Throwable;)V

+###reactor/core/observability/SignalListener
@3.5.0
+#doFirst()V
+#doFinally(Lreactor/core/publisher/SignalType;)V
+#doOnSubscription()V
+#doOnFusion(I)V
+#doOnRequest(J)V
+#doOnCancel()V
+#doOnNext(Ljava/lang/Object;)V
+#doOnComplete()V
+#doOnError(Ljava/lang/Throwable;)V
+#doAfterComplete()V
+#doAfterError(Ljava/lang/Throwable;)V
+#doOnMalformedOnNext(Ljava/lang/Object;)V
+#doOnMalformedOnError(Ljava/lang/Throwable;)V
+#doOnMalformedOnComplete()V
+#handleListenerError(Ljava/lang/Throwable;)V
+#addToContext(Lreactor/util/context/Context;)Lreactor/util/context/Context;

+###reactor/core/observability/SignalListenerFactory
@3.5.0
+#initializePublisherState(Lorg/reactivestreams/Publisher;)Ljava/lang/Object;
+#createListener(Lorg/reactivestreams/Publisher;Lreactor/util/context/ContextView;Ljava/lang/Object;)Lreactor/core/observability/SignalListener;

+###reactor/util/context/ReactorContextAccessor
@3.5.0
+#<init>()V
+#readableType()Ljava/lang/Class;
+#readValues(Lreactor/util/context/ContextView;Ljava/util/function/Predicate;Ljava/util/Map;)V
+#readValue(Lreactor/util/context/ContextView;Ljava/lang/Object;)Ljava/lang/Object;
+#writeableType()Ljava/lang/Class;
+#writeValues(Ljava/util/Map;Lreactor/util/context/Context;)Lreactor/util/context/Context;
+#writeValues(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
+#readValue(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#readValues(Ljava/lang/Object;Ljava/util/function/Predicate;Ljava/util/Map;)V

+###reactor/core/subscriber/ConsumerSubscriber
@2.5.0.M1
+#<init>()V
+#<init>(Lreactor/fn/Consumer;Lreactor/fn/Consumer;Ljava/lang/Runnable;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#upstream()Ljava/lang/Object;
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#onNext(Ljava/lang/Object;)V
+#getPending()J
+#getCapacity()J
+#isStarted()Z
+#isTerminated()Z
+#run()V
@2.5.0.M2
+#<init>(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
-#<init>(Lreactor/fn/Consumer;Lreactor/fn/Consumer;Ljava/lang/Runnable;)V
@2.5.0.M3
-###reactor/core/subscriber/ConsumerSubscriber

+###reactor/core/publisher/SchedulerGroup
@2.5.0.M1
+#async()Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;)Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;I)Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;II)Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;IIZ)Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;ZLreactor/fn/Supplier;)Lreactor/core/publisher/SchedulerGroup;
+#create(Ljava/util/concurrent/Callable;I)Lreactor/core/publisher/SchedulerGroup;
+#create(Ljava/util/concurrent/Callable;IZ)Lreactor/core/publisher/SchedulerGroup;
+#io()Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;I)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;II)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;IIZ)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;ZLreactor/core/util/WaitStrategy;)Lreactor/core/publisher/SchedulerGroup;
+#release([Lreactor/fn/Consumer;)V
+#single()Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/lang/String;)Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/lang/String;I)Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/lang/String;IZ)Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/lang/String;ILreactor/fn/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/lang/String;ILreactor/fn/Consumer;Ljava/lang/Runnable;ZLreactor/fn/Supplier;)Lreactor/core/publisher/SchedulerGroup;
+#single(Lreactor/fn/Consumer;)Lreactor/core/publisher/SchedulerGroup;
+#single(Lreactor/fn/Consumer;Z)Lreactor/core/publisher/SchedulerGroup;
+#sync()Lreactor/core/publisher/SchedulerGroup;
+#accept(Ljava/lang/Runnable;)V
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#call()Lreactor/fn/Consumer;
+#call(Z)Lreactor/fn/Consumer;
+#forceShutdown()Lreactor/core/publisher/Flux;
+#isTerminated()Z
+#isStarted()Z
+#shutdown()V
+#connectedInput()Ljava/lang/Object;
+#connectedOutput()Ljava/lang/Object;
+#call()Ljava/lang/Object;
+#accept(Ljava/lang/Object;)V
@2.5.0.M2
+#async(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/publisher/SchedulerGroup;
+#async(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;ZLjava/util/function/Supplier;)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/publisher/SchedulerGroup;
+#io(Ljava/lang/String;IILjava/util/function/Consumer;Ljava/lang/Runnable;ZLreactor/core/util/WaitStrategy;)Lreactor/core/publisher/SchedulerGroup;
+#release([Ljava/util/function/Consumer;)V
+#single(Ljava/lang/String;ILreactor/core/util/WaitStrategy;)Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/lang/String;ILjava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/lang/String;ILjava/util/function/Consumer;Ljava/lang/Runnable;ZLjava/util/function/Supplier;)Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/util/function/Consumer;)Lreactor/core/publisher/SchedulerGroup;
+#single(Ljava/util/function/Consumer;Z)Lreactor/core/publisher/SchedulerGroup;
+#call()Ljava/util/function/Consumer;
+#call(Z)Ljava/util/function/Consumer;
-#async(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
-#async(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/publisher/SchedulerGroup;
-#async(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;ZLreactor/fn/Supplier;)Lreactor/core/publisher/SchedulerGroup;
-#io(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
-#io(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;Z)Lreactor/core/publisher/SchedulerGroup;
-#io(Ljava/lang/String;IILreactor/fn/Consumer;Ljava/lang/Runnable;ZLreactor/core/util/WaitStrategy;)Lreactor/core/publisher/SchedulerGroup;
-#release([Lreactor/fn/Consumer;)V
-#single(Ljava/lang/String;ILreactor/fn/Consumer;Ljava/lang/Runnable;)Lreactor/core/publisher/SchedulerGroup;
-#single(Ljava/lang/String;ILreactor/fn/Consumer;Ljava/lang/Runnable;ZLreactor/fn/Supplier;)Lreactor/core/publisher/SchedulerGroup;
-#single(Lreactor/fn/Consumer;)Lreactor/core/publisher/SchedulerGroup;
-#single(Lreactor/fn/Consumer;Z)Lreactor/core/publisher/SchedulerGroup;
-#call()Lreactor/fn/Consumer;
-#call(Z)Lreactor/fn/Consumer;
@2.5.0.M3
-###reactor/core/publisher/SchedulerGroup

+###reactor/core/util/Assert
@2.5.0.M1
+#values()[Lreactor/core/util/Assert;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/Assert;
+#isTrue(ZLjava/lang/String;)V
+#isTrue(Z)V
+#isNull(Ljava/lang/Object;Ljava/lang/String;)V
+#notNull(Ljava/lang/Object;Ljava/lang/String;)V
+#notNull(Ljava/lang/Object;)V
+#notEmpty([Ljava/lang/Object;Ljava/lang/String;)V
+#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V
+#state(ZLjava/lang/String;)V
+#state(Z)V
@2.5.0.M2
-#isNull(Ljava/lang/Object;Ljava/lang/String;)V
-#notEmpty([Ljava/lang/Object;Ljava/lang/String;)V
-#isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
-#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V
@2.5.0.M3
-###reactor/core/util/Assert

+###reactor/core/flow/Fuseable$ScalarSupplier
@2.5.0.M1
@2.5.0.M3
-###reactor/core/flow/Fuseable$ScalarSupplier

+###reactor/core/state/Timeable
@2.5.0.M1
+#period()J
@2.5.0.M3
-###reactor/core/state/Timeable

+###reactor/core/state/Pausable
@2.5.0.M1
+#pause()V
+#resume()V
@2.5.0.M3
-###reactor/core/state/Pausable

+###reactor/core/timer/Timer
@2.5.0.M1
+#create()Lreactor/core/timer/Timer;
+#create(Ljava/lang/String;)Lreactor/core/timer/Timer;
+#create(I)Lreactor/core/timer/Timer;
+#create(Ljava/lang/String;I)Lreactor/core/timer/Timer;
+#create(II)Lreactor/core/timer/Timer;
+#create(Ljava/lang/String;II)Lreactor/core/timer/Timer;
+#hasGlobal()Z
+#globalOrNew()Lreactor/core/timer/Timer;
+#globalOrNull()Lreactor/core/timer/Timer;
+#global()Lreactor/core/timer/Timer;
+#unregisterGlobal()V
+#currentTimeMillisResolver()Lreactor/fn/LongSupplier;
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/core/state/Pausable;
+#interval(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;J)Lreactor/core/state/Pausable;
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/core/state/Pausable;
+#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/core/state/Pausable;
+#submit(Lreactor/fn/Consumer;)Lreactor/core/state/Pausable;
+#single(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;)Lreactor/core/state/Pausable;
+#start()V
+#cancel()V
+#isCancelled()Z
+#period()J
@2.5.0.M2
+#schedule(Ljava/util/function/Consumer;JJ)Lreactor/core/state/Pausable;
+#interval(Lorg/reactivestreams/Subscriber;JJ)Lreactor/core/state/Pausable;
+#schedule(Ljava/util/function/Consumer;J)Lreactor/core/state/Pausable;
+#submit(Ljava/util/function/Consumer;J)Lreactor/core/state/Pausable;
+#submit(Ljava/util/function/Consumer;)Lreactor/core/state/Pausable;
+#single(Lorg/reactivestreams/Subscriber;J)Lreactor/core/state/Pausable;
-#currentTimeMillisResolver()Lreactor/fn/LongSupplier;
-#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/core/state/Pausable;
-#interval(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;J)Lreactor/core/state/Pausable;
-#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/core/state/Pausable;
-#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/core/state/Pausable;
-#submit(Lreactor/fn/Consumer;)Lreactor/core/state/Pausable;
-#single(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;)Lreactor/core/state/Pausable;
@2.5.0.M3
-###reactor/core/timer/Timer

+###reactor/core/timer/IncrementingTimeResolver$SettableTimeSupplier
@2.5.0.M1
+#<init>(J)V
+#get()J
+#set(J)V
@2.5.0.M2
+#getAsLong()J
-#get()J
@2.5.0.M3
-###reactor/core/timer/IncrementingTimeResolver$SettableTimeSupplier

+###reactor/io/buffer/BufferAllocator
@2.0.0.RC1
+#<init>()V
+#<init>(IZI)V
+#allocate()Lreactor/core/alloc/Reference;
+#allocateBatch(I)Ljava/util/List;
+#release(Ljava/util/List;)V
@2.0.5.RELEASE
-###reactor/io/buffer/BufferAllocator

+###reactor/fn/Fn
@2.0.0.RC1
+#<init>()V
@2.0.5.RELEASE
-###reactor/fn/Fn

+###reactor/fn/support/Resequencer
@2.0.0.RC1
+#<init>(Lreactor/fn/Consumer;)V
+#<init>(Lreactor/fn/Consumer;J)V
+#accept(JLjava/lang/Object;)V
+#next()J
@2.0.2.RELEASE
-###reactor/fn/support/Resequencer

+###reactor/fn/support/UriUtils
@2.0.0.RC1
+#<init>()V
+#encodeUri(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeHttpUrl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeUriComponents(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeScheme(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeUserInfo(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeHost(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodePort(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodePathSegment(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeQuery(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeQueryParam(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeFragment(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@2.0.5.RELEASE
-###reactor/fn/support/UriUtils

+###reactor/fn/support/SingleUseConsumer
@2.0.0.RC1
+#<init>()V
+#<init>(Lreactor/fn/Consumer;)V
+#once(Lreactor/fn/Consumer;)Lreactor/fn/Consumer;
+#accept(Ljava/lang/Object;)V
@2.0.5.RELEASE
-###reactor/fn/support/SingleUseConsumer

+###reactor/fn/support/DelegatingConsumer
@2.0.0.RC1
+#<init>()V
+#add(Lreactor/fn/Consumer;)Lreactor/fn/support/DelegatingConsumer;
+#add(Ljava/util/Collection;)Lreactor/fn/support/DelegatingConsumer;
+#remove(Lreactor/fn/Consumer;)Lreactor/fn/support/DelegatingConsumer;
+#remove(Ljava/util/Collection;)Lreactor/fn/support/DelegatingConsumer;
+#prune()Lreactor/fn/support/DelegatingConsumer;
+#clear()Lreactor/fn/support/DelegatingConsumer;
+#accept(Ljava/lang/Object;)V
+#iterator()Ljava/util/Iterator;
+#start()V
+#end()V
@2.0.2.RELEASE
-###reactor/fn/support/DelegatingConsumer

+###reactor/fn/batch/BatchConsumer
@2.0.0.RC1
+#start()V
+#end()V
@2.0.2.RELEASE
-###reactor/fn/batch/BatchConsumer

+###reactor/core/alloc/Recyclable
@2.0.0.RC1
+#recycle()V
@2.0.5.RELEASE
-###reactor/core/alloc/Recyclable

+###reactor/core/alloc/RingBufferAllocator
@2.0.0.RC1
+#<init>(Ljava/lang/String;ILreactor/fn/Supplier;)V
+#<init>(Ljava/lang/String;ILreactor/fn/Supplier;I)V
+#<init>(Ljava/lang/String;ILreactor/fn/Supplier;ILreactor/jarjar/com/lmax/disruptor/EventHandler;Lreactor/jarjar/com/lmax/disruptor/ExceptionHandler;Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;Ljava/util/concurrent/ExecutorService;)V
+#allocate()Lreactor/core/alloc/Reference;
+#allocateBatch(ILjava/util/List;)Ljava/util/List;
+#allocateBatch(I)Ljava/util/List;
+#release(Ljava/util/List;)V
+#alive()Z
+#start()V
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#shutdown()V
+#halt()V
@2.0.5.RELEASE
-###reactor/core/alloc/RingBufferAllocator

+###reactor/core/alloc/ReferenceCountingAllocator
@2.0.0.RC1
+#<init>(Lreactor/fn/Supplier;)V
+#<init>(ILreactor/fn/Supplier;)V
+#allocate()Lreactor/core/alloc/Reference;
+#allocateBatch(I)Ljava/util/List;
+#release(Ljava/util/List;)V
@2.0.5.RELEASE
-###reactor/core/alloc/ReferenceCountingAllocator

+###reactor/core/alloc/Allocator
@2.0.0.RC1
+#allocate()Lreactor/core/alloc/Reference;
+#allocateBatch(I)Ljava/util/List;
+#release(Ljava/util/List;)V
@2.0.5.RELEASE
-###reactor/core/alloc/Allocator

+###reactor/core/alloc/RecyclableString
@2.0.0.RC1
+#<init>()V
+#setValue(Ljava/lang/String;)V
+#recycle()V
+#toString()Ljava/lang/String;
@2.0.5.RELEASE
-###reactor/core/alloc/RecyclableString

+###reactor/core/alloc/Reference
@2.0.0.RC1
+#getAge()J
+#getReferenceCount()I
+#retain()V
+#retain(I)V
+#release()V
+#release(I)V
@2.0.5.RELEASE
-###reactor/core/alloc/Reference

+###reactor/core/alloc/AbstractReference
@2.0.0.RC1
+#getAge()J
+#getReferenceCount()I
+#retain()V
+#retain(I)V
+#release()V
+#release(I)V
+#get()Lreactor/core/alloc/Recyclable;
+#toString()Ljava/lang/String;
+#get()Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/alloc/AbstractReference

+###reactor/core/alloc/RecyclableNumber
@2.0.0.RC1
+#<init>()V
+#setValue(I)V
+#setValue(J)V
+#setValue(F)V
+#setValue(D)V
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#recycle()V
@2.0.5.RELEASE
-###reactor/core/alloc/RecyclableNumber

+###reactor/core/alloc/factory/NoArgConstructorFactory
@2.0.0.RC1
+#<init>(Ljava/lang/Class;)V
+#get()Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/alloc/factory/NoArgConstructorFactory

+###reactor/core/alloc/factory/BatchFactorySupplier
@2.0.0.RC1
+#<init>(ILreactor/fn/Supplier;)V
+#size()I
+#remaining()I
+#get()Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/alloc/factory/BatchFactorySupplier

+###reactor/core/alloc/factory/Factories
@2.0.0.RC1
+#create(Ljava/lang/Class;)Lreactor/core/alloc/factory/BatchFactorySupplier;
+#create(ILjava/lang/Class;)Lreactor/core/alloc/factory/BatchFactorySupplier;
@2.0.5.RELEASE
-###reactor/core/alloc/factory/Factories

+###reactor/core/alloc/spec/RingBufferAllocatorSpec
@2.0.0.RC1
+#<init>()V
+#name(Ljava/lang/String;)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#ringSize(I)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#eventThreads(I)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#allocator(Lreactor/fn/Supplier;)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#eventHandler(Lreactor/fn/Consumer;)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#errorHandler(Lreactor/fn/Consumer;)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#producerType(Lreactor/jarjar/com/lmax/disruptor/dsl/ProducerType;)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#waitStrategy(Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#executor(Ljava/util/concurrent/ExecutorService;)Lreactor/core/alloc/spec/RingBufferAllocatorSpec;
+#get()Lreactor/core/alloc/RingBufferAllocator;
+#get()Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/alloc/spec/RingBufferAllocatorSpec

+###reactor/core/convert/Converter
@2.0.1.RELEASE
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/convert/Converter

+###reactor/core/convert/StandardConverters$ConstructorParameterConverter
@2.0.1.RELEASE
+#values()[Lreactor/core/convert/StandardConverters$ConstructorParameterConverter;
+#valueOf(Ljava/lang/String;)Lreactor/core/convert/StandardConverters$ConstructorParameterConverter;
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/convert/StandardConverters$ConstructorParameterConverter

+###reactor/core/convert/StandardConverters$StringToNumberConverter
@2.0.1.RELEASE
+#values()[Lreactor/core/convert/StandardConverters$StringToNumberConverter;
+#valueOf(Ljava/lang/String;)Lreactor/core/convert/StandardConverters$StringToNumberConverter;
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/convert/StandardConverters$StringToNumberConverter

+###reactor/core/convert/StandardConverters$ToStringConverter
@2.0.1.RELEASE
+#values()[Lreactor/core/convert/StandardConverters$ToStringConverter;
+#valueOf(Ljava/lang/String;)Lreactor/core/convert/StandardConverters$ToStringConverter;
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/convert/StandardConverters$ToStringConverter

+###reactor/core/convert/DelegatingConverter
@2.0.1.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>([Lreactor/core/convert/Converter;)V
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/convert/DelegatingConverter

+###reactor/core/convert/StandardConverters
@2.0.1.RELEASE
@2.0.5.RELEASE
-###reactor/core/convert/StandardConverters

+###reactor/core/convert/ConversionFailedException
@2.0.1.RELEASE
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
@2.0.5.RELEASE
-###reactor/core/convert/ConversionFailedException

+###reactor/core/dispatch/InsufficientCapacityException
@2.0.0.RC1
+#fillInStackTrace()Ljava/lang/Throwable;
@2.0.5.RELEASE
-###reactor/core/dispatch/InsufficientCapacityException

+###reactor/core/support/CollectionUtils
@2.0.0.RC1
+#<init>()V
+#isEmpty(Ljava/util/Collection;)Z
+#isEmpty(Ljava/util/Map;)Z
+#arrayToList(Ljava/lang/Object;)Ljava/util/List;
+#mergeArrayIntoCollection(Ljava/lang/Object;Ljava/util/Collection;)V
+#mergePropertiesIntoMap(Ljava/util/Properties;Ljava/util/Map;)V
+#contains(Ljava/util/Iterator;Ljava/lang/Object;)Z
+#contains(Ljava/util/Enumeration;Ljava/lang/Object;)Z
+#containsInstance(Ljava/util/Collection;Ljava/lang/Object;)Z
+#containsAny(Ljava/util/Collection;Ljava/util/Collection;)Z
+#findFirstMatch(Ljava/util/Collection;Ljava/util/Collection;)Ljava/lang/Object;
+#findValueOfType(Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;
+#findValueOfType(Ljava/util/Collection;[Ljava/lang/Class;)Ljava/lang/Object;
+#hasUniqueObject(Ljava/util/Collection;)Z
+#findCommonElementType(Ljava/util/Collection;)Ljava/lang/Class;
+#toArray(Ljava/util/Enumeration;[Ljava/lang/Object;)[Ljava/lang/Object;
+#toIterator(Ljava/util/Enumeration;)Ljava/util/Iterator;
+#toMultiValueMap(Ljava/util/Map;)Lreactor/core/support/MultiValueMap;
+#unmodifiableMultiValueMap(Lreactor/core/support/MultiValueMap;)Lreactor/core/support/MultiValueMap;
@2.0.1.RELEASE
-#arrayToList(Ljava/lang/Object;)Ljava/util/List;
-#findValueOfType(Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;
-#findValueOfType(Ljava/util/Collection;[Ljava/lang/Class;)Ljava/lang/Object;
-#findCommonElementType(Ljava/util/Collection;)Ljava/lang/Class;
-#toIterator(Ljava/util/Enumeration;)Ljava/util/Iterator;
-#toMultiValueMap(Ljava/util/Map;)Lreactor/core/support/MultiValueMap;
-#unmodifiableMultiValueMap(Lreactor/core/support/MultiValueMap;)Lreactor/core/support/MultiValueMap;
@2.0.5.RELEASE
-###reactor/core/support/CollectionUtils

+###reactor/core/support/MultiValueMap
@2.0.0.RC1
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#setAll(Ljava/util/Map;)V
+#toSingleValueMap()Ljava/util/Map;
@2.0.5.RELEASE
-###reactor/core/support/MultiValueMap

+###reactor/core/support/IoUtils
@2.0.0.RC1
+#closeQuietly([Ljava/io/Closeable;)V
@2.0.5.RELEASE
-###reactor/core/support/IoUtils

+###reactor/core/support/Identifiable
@2.0.0.RC1
+#setId(Ljava/lang/Object;)Lreactor/core/support/Identifiable;
+#getId()Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/support/Identifiable

+###reactor/core/support/TypeReference
@2.0.0.RC1
@2.0.5.RELEASE
-###reactor/core/support/TypeReference

+###reactor/core/support/LinkedCaseInsensitiveMap
@2.0.0.RC1
+#<init>()V
+#<init>(Ljava/util/Locale;)V
+#<init>(I)V
+#<init>(ILjava/util/Locale;)V
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@2.0.5.RELEASE
-###reactor/core/support/LinkedCaseInsensitiveMap

+###reactor/core/support/TypeUtils
@2.0.0.RC1
+#fromGenericType(Ljava/lang/Class;)Ljava/lang/reflect/Type;
+#fromTypeRef(Lreactor/core/support/TypeReference;)Ljava/lang/reflect/Type;
@2.0.5.RELEASE
-###reactor/core/support/TypeUtils

+###reactor/core/support/StringUtils
@2.0.0.RC1
+#<init>()V
+#isEmpty(Ljava/lang/Object;)Z
+#hasLength(Ljava/lang/CharSequence;)Z
+#hasLength(Ljava/lang/String;)Z
+#hasText(Ljava/lang/CharSequence;)Z
+#hasText(Ljava/lang/String;)Z
+#containsWhitespace(Ljava/lang/CharSequence;)Z
+#containsWhitespace(Ljava/lang/String;)Z
+#trimWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#trimAllWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#trimLeadingWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#trimTrailingWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#trimLeadingCharacter(Ljava/lang/String;C)Ljava/lang/String;
+#trimTrailingCharacter(Ljava/lang/String;C)Ljava/lang/String;
+#startsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
+#endsWithIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z
+#substringMatch(Ljava/lang/CharSequence;ILjava/lang/CharSequence;)Z
+#countOccurrencesOf(Ljava/lang/String;Ljava/lang/String;)I
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#delete(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#deleteAny(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#quote(Ljava/lang/String;)Ljava/lang/String;
+#quoteIfString(Ljava/lang/Object;)Ljava/lang/Object;
+#unqualify(Ljava/lang/String;)Ljava/lang/String;
+#unqualify(Ljava/lang/String;C)Ljava/lang/String;
+#capitalize(Ljava/lang/String;)Ljava/lang/String;
+#uncapitalize(Ljava/lang/String;)Ljava/lang/String;
+#getFilename(Ljava/lang/String;)Ljava/lang/String;
+#getFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
+#stripFilenameExtension(Ljava/lang/String;)Ljava/lang/String;
+#applyRelativePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#cleanPath(Ljava/lang/String;)Ljava/lang/String;
+#pathEquals(Ljava/lang/String;Ljava/lang/String;)Z
+#parseLocaleString(Ljava/lang/String;)Ljava/util/Locale;
+#toLanguageTag(Ljava/util/Locale;)Ljava/lang/String;
+#addStringToArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#concatenateStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#mergeStringArrays([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#sortStringArray([Ljava/lang/String;)[Ljava/lang/String;
+#toStringArray(Ljava/util/Collection;)[Ljava/lang/String;
+#toStringArray(Ljava/util/Enumeration;)[Ljava/lang/String;
+#trimArrayElements([Ljava/lang/String;)[Ljava/lang/String;
+#removeDuplicateStrings([Ljava/lang/String;)[Ljava/lang/String;
+#split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#splitArrayElementsIntoProperties([Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;
+#splitArrayElementsIntoProperties([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;
+#tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;ZZ)[Ljava/lang/String;
+#delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#commaDelimitedListToStringArray(Ljava/lang/String;)[Ljava/lang/String;
+#commaDelimitedListToSet(Ljava/lang/String;)Ljava/util/Set;
+#collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
+#collectionToCommaDelimitedString(Ljava/util/Collection;)Ljava/lang/String;
+#arrayToDelimitedString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#arrayToCommaDelimitedString([Ljava/lang/Object;)Ljava/lang/String;
@2.0.5.RELEASE
-###reactor/core/support/StringUtils

+###reactor/core/support/LinkedMultiValueMap
@2.0.0.RC1
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Map;)V
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#setAll(Ljava/util/Map;)V
+#toSingleValueMap()Ljava/util/Map;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/List;
+#put(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
+#remove(Ljava/lang/Object;)Ljava/util/List;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-#<init>(I)V
-#<init>(Ljava/util/Map;)V
@2.0.5.RELEASE
-###reactor/core/support/LinkedMultiValueMap

+###reactor/core/support/ObjectUtils
@2.0.0.RC1
+#<init>()V
+#isCheckedException(Ljava/lang/Throwable;)Z
+#isCompatibleWithThrowsClause(Ljava/lang/Throwable;[Ljava/lang/Class;)Z
+#isArray(Ljava/lang/Object;)Z
+#isEmpty([Ljava/lang/Object;)Z
+#containsElement([Ljava/lang/Object;Ljava/lang/Object;)Z
+#containsConstant([Ljava/lang/Enum;Ljava/lang/String;)Z
+#containsConstant([Ljava/lang/Enum;Ljava/lang/String;Z)Z
+#caseInsensitiveValueOf([Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum;
+#addObjectToArray([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
+#toObjectArray(Ljava/lang/Object;)[Ljava/lang/Object;
+#nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#nullSafeHashCode(Ljava/lang/Object;)I
+#nullSafeHashCode([Ljava/lang/Object;)I
+#nullSafeHashCode([Z)I
+#nullSafeHashCode([B)I
+#nullSafeHashCode([C)I
+#nullSafeHashCode([D)I
+#nullSafeHashCode([F)I
+#nullSafeHashCode([I)I
+#nullSafeHashCode([J)I
+#nullSafeHashCode([S)I
+#hashCode(Z)I
+#hashCode(D)I
+#hashCode(F)I
+#hashCode(J)I
+#identityToString(Ljava/lang/Object;)Ljava/lang/String;
+#getIdentityHexString(Ljava/lang/Object;)Ljava/lang/String;
+#getDisplayString(Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeClassName(Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeToString(Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeToString([Ljava/lang/Object;)Ljava/lang/String;
+#nullSafeToString([Z)Ljava/lang/String;
+#nullSafeToString([B)Ljava/lang/String;
+#nullSafeToString([C)Ljava/lang/String;
+#nullSafeToString([D)Ljava/lang/String;
+#nullSafeToString([F)Ljava/lang/String;
+#nullSafeToString([I)Ljava/lang/String;
+#nullSafeToString([J)Ljava/lang/String;
+#nullSafeToString([S)Ljava/lang/String;
@2.0.5.RELEASE
-###reactor/core/support/ObjectUtils

+###reactor/core/Cancellation
@3.0.0.RC1
+#dispose()V
@3.1.0.RELEASE
-###reactor/core/Cancellation

+###reactor/core/Trackable
@3.0.0.RC1
+#expectedFromUpstream()J
+#getCapacity()J
+#getError()Ljava/lang/Throwable;
+#getPending()J
+#isCancelled()Z
+#isStarted()Z
+#isTerminated()Z
+#limit()J
+#requestedFromDownstream()J
@3.1.0.RELEASE
-###reactor/core/Trackable

+###reactor/core/Producer
@3.0.0.RC1
+#downstream()Ljava/lang/Object;
@3.1.0.RELEASE
-###reactor/core/Producer

+###reactor/core/publisher/Hooks$OperatorHook
@3.0.0.RELEASE
+#doOnEach(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;Ljava/lang/Runnable;)Lreactor/core/publisher/Hooks$OperatorHook;
+#doOnLifecycle(Ljava/util/function/Consumer;Ljava/util/function/LongConsumer;Ljava/lang/Runnable;)Lreactor/core/publisher/Hooks$OperatorHook;
+#ignore()Lreactor/core/publisher/Hooks$OperatorHook;
+#ifFlux()Lreactor/core/publisher/Hooks$OperatorHook;
+#ifMono()Lreactor/core/publisher/Hooks$OperatorHook;
+#ifName(Ljava/lang/String;)Lreactor/core/publisher/Hooks$OperatorHook;
+#ifNameContains(Ljava/lang/String;)Lreactor/core/publisher/Hooks$OperatorHook;
+#log(Ljava/lang/String;Ljava/util/logging/Level;[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Hooks$OperatorHook;
+#operatorStacktrace()Lreactor/core/publisher/Hooks$OperatorHook;
+#publisher()Lorg/reactivestreams/Publisher;
@3.0.1.RELEASE
+#ifParallelFlux()Lreactor/core/publisher/Hooks$OperatorHook;
+#ifName([Ljava/lang/String;)Lreactor/core/publisher/Hooks$OperatorHook;
+#ifNameContains([Ljava/lang/String;)Lreactor/core/publisher/Hooks$OperatorHook;
+#log(Ljava/lang/String;[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Hooks$OperatorHook;
+#log(Ljava/lang/String;Z[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Hooks$OperatorHook;
+#log(Ljava/lang/String;Ljava/util/logging/Level;Z[Lreactor/core/publisher/SignalType;)Lreactor/core/publisher/Hooks$OperatorHook;
-#ifName(Ljava/lang/String;)Lreactor/core/publisher/Hooks$OperatorHook;
-#ifNameContains(Ljava/lang/String;)Lreactor/core/publisher/Hooks$OperatorHook;
@3.1.0.RELEASE
-###reactor/core/publisher/Hooks$OperatorHook

+###reactor/core/publisher/BlockingSink$Emission
@3.0.0.RC1
+#values()[Lreactor/core/publisher/BlockingSink$Emission;
+#valueOf(Ljava/lang/String;)Lreactor/core/publisher/BlockingSink$Emission;
+#isBackpressured()Z
+#isCancelled()Z
+#isFailed()Z
+#isOk()Z
@3.1.0.RELEASE
-###reactor/core/publisher/BlockingSink$Emission

+###reactor/core/publisher/FluxCancelOn
@3.0.1.RELEASE
+#<init>(Lorg/reactivestreams/Publisher;Lreactor/core/scheduler/Scheduler;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@3.0.3.RELEASE
-###reactor/core/publisher/FluxCancelOn

+###reactor/core/publisher/RingBuffer$Reader
@3.0.0.RELEASE
+#waitFor(J)J
+#waitFor(JLjava/lang/Runnable;)J
+#getCursor()J
+#isAlerted()Z
+#alert()V
+#signal()V
+#clearAlert()V
+#checkAlert()V
+#getAsLong()J
+#run()V
@3.0.5.RELEASE
-###reactor/core/publisher/RingBuffer$Reader

+###reactor/core/publisher/MonoElapsed
@3.0.1.RELEASE
+#<init>(Lorg/reactivestreams/Publisher;Lreactor/core/scheduler/TimedScheduler;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@3.0.3.RELEASE
-###reactor/core/publisher/MonoElapsed

+###reactor/core/publisher/MonoSequenceEqual
@3.0.1.RELEASE
+#<init>(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Ljava/util/function/BiPredicate;I)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@3.0.3.RELEASE
-###reactor/core/publisher/MonoSequenceEqual

+###reactor/core/publisher/Operators$SubscriberAdapter
@3.0.0.RELEASE
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#upstream()Lorg/reactivestreams/Subscription;
+#isStarted()Z
+#downstream()Lorg/reactivestreams/Subscriber;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
+#cancel()V
+#isTerminated()Z
+#getCapacity()J
+#getPending()J
+#toString()Ljava/lang/String;
+#upstream()Ljava/lang/Object;
+#downstream()Ljava/lang/Object;
@3.0.6.RELEASE
+#scan(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#actual()Lorg/reactivestreams/Subscriber;
-#getCapacity()J
-#getPending()J
-#isStarted()Z
-#isTerminated()Z
@3.1.0.RELEASE
-###reactor/core/publisher/Operators$SubscriberAdapter

+###reactor/core/publisher/MonoCancelOn
@3.0.1.RELEASE
+#<init>(Lorg/reactivestreams/Publisher;Lreactor/core/scheduler/Scheduler;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@3.0.3.RELEASE
-###reactor/core/publisher/MonoCancelOn

+###reactor/core/publisher/BlockingSink
@3.0.0.RC1
+#create(Lorg/reactivestreams/Subscriber;Z)Lreactor/core/publisher/BlockingSink;
+#create(Lorg/reactivestreams/Subscriber;)Lreactor/core/publisher/BlockingSink;
+#accept(Ljava/lang/Object;)V
+#cancel()V
+#close()V
+#downstream()Lorg/reactivestreams/Subscriber;
+#next(Ljava/lang/Object;)V
+#emit(Ljava/lang/Object;)Lreactor/core/publisher/BlockingSink$Emission;
+#fail(Ljava/lang/Throwable;)V
+#finish()Lreactor/core/publisher/BlockingSink$Emission;
+#getCapacity()J
+#getError()Ljava/lang/Throwable;
+#hasFailed()Z
+#hasRequested()Z
+#isCancelled()Z
+#complete()V
+#request(J)V
+#requestedFromDownstream()J
+#start()V
+#stop()V
+#submit(Ljava/lang/Object;)J
+#submit(Ljava/lang/Object;J)J
+#submit(Ljava/lang/Object;JLjava/util/function/Predicate;)J
+#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)J
+#submit(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/Predicate;)J
+#toString()Ljava/lang/String;
+#downstream()Ljava/lang/Object;
@3.0.0.RELEASE
+#error(Ljava/lang/Throwable;)V
-#fail(Ljava/lang/Throwable;)V
@3.0.6.RELEASE
+#dispose()V
+#isDisposed()Z
@3.1.0.RELEASE
-###reactor/core/publisher/BlockingSink

+###reactor/core/publisher/RingBuffer$Sequence
@3.0.0.RELEASE
+#getAsLong()J
+#set(J)V
+#setVolatile(J)V
+#compareAndSet(JJ)Z
+#incrementAndGet()J
+#addAndGet(J)J
@3.0.5.RELEASE
-###reactor/core/publisher/RingBuffer$Sequence

+###reactor/core/publisher/FluxElapsed
@3.0.1.RELEASE
+#<init>(Lorg/reactivestreams/Publisher;Lreactor/core/scheduler/TimedScheduler;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@3.0.3.RELEASE
-###reactor/core/publisher/FluxElapsed

+###reactor/core/MultiReceiver
@3.0.0.RC1
+#upstreams()Ljava/util/Iterator;
+#upstreamCount()J
@3.1.0.RELEASE
-###reactor/core/MultiReceiver

+###reactor/core/Loopback
@3.0.0.RC1
+#connectedInput()Ljava/lang/Object;
+#connectedOutput()Ljava/lang/Object;
@3.1.0.RELEASE
-###reactor/core/Loopback

+###reactor/core/MultiProducer
@3.0.0.RC1
+#downstreams()Ljava/util/Iterator;
+#downstreamCount()J
+#hasDownstreams()Z
@3.1.0.RELEASE
-###reactor/core/MultiProducer

+###reactor/core/Receiver
@3.0.0.RC1
+#upstream()Ljava/lang/Object;
@3.1.0.RELEASE
-###reactor/core/Receiver

+###reactor/adapter/RxJava1Adapter
@3.0.0.RC1
+#completableToMono(Lrx/Completable;)Lreactor/core/publisher/Mono;
+#observableToFlux(Lrx/Observable;)Lreactor/core/publisher/Flux;
+#publisherToObservable(Lorg/reactivestreams/Publisher;)Lrx/Observable;
+#publisherToSingle(Lorg/reactivestreams/Publisher;)Lrx/Single;
+#publisherToCompletable(Lorg/reactivestreams/Publisher;)Lrx/Completable;
+#singleToMono(Lrx/Single;)Lreactor/core/publisher/Mono;
@3.0.3.RELEASE
-###reactor/adapter/RxJava1Adapter

+###reactor/adapter/RxJava2Adapter
@3.0.1.RELEASE
+#flowableToFlux(Lio/reactivex/Flowable;)Lreactor/core/publisher/Flux;
+#fluxToFlowable(Lreactor/core/publisher/Flux;)Lio/reactivex/Flowable;
+#monoToFlowable(Lreactor/core/publisher/Mono;)Lio/reactivex/Flowable;
+#monoToCompletable(Lreactor/core/publisher/Mono;)Lio/reactivex/Completable;
+#completableToMono(Lio/reactivex/Completable;)Lreactor/core/publisher/Mono;
+#monoToSingle(Lreactor/core/publisher/Mono;)Lio/reactivex/Single;
+#singleToMono(Lio/reactivex/Single;)Lreactor/core/publisher/Mono;
+#observableToFlux(Lio/reactivex/Observable;Lio/reactivex/BackpressureStrategy;)Lreactor/core/publisher/Flux;
+#fluxToObservable(Lreactor/core/publisher/Flux;)Lio/reactivex/Observable;
@3.0.3.RELEASE
-###reactor/adapter/RxJava2Adapter

+###reactor/util/concurrent/OpenHashSet
@3.0.0.RELEASE
+#<init>()V
+#<init>(IF)V
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#clear(Ljava/util/function/Consumer;)V
+#isEmpty()Z
+#size()I
+#keys()[Ljava/lang/Object;
@3.1.0.RELEASE
-###reactor/util/concurrent/OpenHashSet

+###reactor/util/concurrent/QueueSupplier
@3.0.0.RC1
+#ceilingNextPowerOfTwo(I)I
+#get(I)Ljava/util/function/Supplier;
+#isPowerOfTwo(I)Z
+#one()Ljava/util/function/Supplier;
+#small()Ljava/util/function/Supplier;
+#unbounded()Ljava/util/function/Supplier;
+#unbounded(I)Ljava/util/function/Supplier;
+#xs()Ljava/util/function/Supplier;
+#get()Ljava/util/Queue;
+#get()Ljava/lang/Object;
@3.1.0.RELEASE
-###reactor/util/concurrent/QueueSupplier

+###reactor/bus/EventBus
@2.0.0.RC1
+#config()Lreactor/bus/spec/EventBusSpec;
+#create()Lreactor/bus/EventBus;
+#create(Lreactor/Environment;)Lreactor/bus/EventBus;
+#create(Lreactor/core/Dispatcher;)Lreactor/bus/EventBus;
+#create(Lreactor/Environment;Ljava/lang/String;)Lreactor/bus/EventBus;
+#create(Lreactor/Environment;Lreactor/core/Dispatcher;)Lreactor/bus/EventBus;
+#<init>(Lreactor/core/Dispatcher;)V
+#<init>(Lreactor/core/Dispatcher;Lreactor/bus/routing/Router;)V
+#<init>(Lreactor/core/Dispatcher;Lreactor/bus/routing/Router;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#<init>(Lreactor/bus/registry/Registry;Lreactor/core/Dispatcher;Lreactor/bus/routing/Router;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#getId()Ljava/util/UUID;
+#getConsumerRegistry()Lreactor/bus/registry/Registry;
+#getDispatcher()Lreactor/core/Dispatcher;
+#getRouter()Lreactor/bus/routing/Router;
+#getDispatchErrorHandler()Lreactor/fn/Consumer;
+#getUncaughtErrorHandler()Lreactor/fn/Consumer;
+#respondsToKey(Ljava/lang/Object;)Z
+#on(Lreactor/bus/selector/Selector;Lreactor/fn/Consumer;)Lreactor/bus/registry/Registration;
+#notify(Ljava/lang/Object;Lreactor/bus/Event;)Lreactor/bus/EventBus;
+#receive(Lreactor/bus/selector/Selector;Lreactor/fn/Function;)Lreactor/bus/registry/Registration;
+#notify(Ljava/lang/Object;Lreactor/fn/Supplier;)Lreactor/bus/EventBus;
+#notify(Ljava/lang/Object;)Lreactor/bus/EventBus;
+#send(Ljava/lang/Object;Lreactor/bus/Event;)Lreactor/bus/EventBus;
+#send(Ljava/lang/Object;Lreactor/fn/Supplier;)Lreactor/bus/EventBus;
+#send(Ljava/lang/Object;Lreactor/bus/Event;Lreactor/bus/Observable;)Lreactor/bus/EventBus;
+#send(Ljava/lang/Object;Lreactor/fn/Supplier;Lreactor/bus/Observable;)Lreactor/bus/EventBus;
+#sendAndReceive(Ljava/lang/Object;Lreactor/bus/Event;Lreactor/fn/Consumer;)Lreactor/bus/EventBus;
+#sendAndReceive(Ljava/lang/Object;Lreactor/fn/Supplier;Lreactor/fn/Consumer;)Lreactor/bus/EventBus;
+#prepare(Ljava/lang/Object;)Lreactor/fn/Consumer;
+#schedule(Lreactor/fn/Consumer;Ljava/lang/Object;)V
+#accept(Lreactor/bus/Event;)V
+#notify(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/bus/Observable;
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/bus/EventBus

+###reactor/bus/EventBus$ReplyToConsumer
@2.0.0.RC1
+#accept(Lreactor/bus/Event;)V
+#getDelegate()Lreactor/fn/Function;
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/bus/EventBus$ReplyToConsumer

+###reactor/bus/Observable
@2.0.0.RC1
+#respondsToKey(Ljava/lang/Object;)Z
+#on(Lreactor/bus/selector/Selector;Lreactor/fn/Consumer;)Lreactor/bus/registry/Registration;
+#notify(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/bus/Observable;
@2.0.1.RELEASE
-###reactor/bus/Observable

+###reactor/bus/Event$Headers
@2.0.0.RC1
+#<init>(Ljava/util/Map;)V
+#<init>()V
+#setAll(Ljava/util/Map;)Lreactor/bus/Event$Headers;
+#set(Ljava/lang/String;Ljava/lang/Object;)Lreactor/bus/Event$Headers;
+#setOrigin(Ljava/util/UUID;)Lreactor/bus/Event$Headers;
+#getOrigin()Ljava/lang/String;
+#setOrigin(Ljava/lang/String;)Lreactor/bus/Event$Headers;
+#get(Ljava/lang/String;)Ljava/lang/Object;
+#contains(Ljava/lang/String;)Z
+#asMap()Ljava/util/Map;
+#readOnly()Lreactor/bus/Event$Headers;
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/bus/Event$Headers

+###reactor/bus/Event
@2.0.0.RC1
+#<init>(Ljava/lang/Class;)V
+#<init>(Lreactor/bus/Event$Headers;Ljava/lang/Object;)V
+#<init>(Lreactor/bus/Event$Headers;Ljava/lang/Object;Lreactor/fn/Consumer;)V
+#<init>(Ljava/lang/Object;)V
+#wrap(Ljava/lang/Object;)Lreactor/bus/Event;
+#wrap(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/bus/Event;
+#getId()Ljava/util/UUID;
+#getHeaders()Lreactor/bus/Event$Headers;
+#getReplyTo()Ljava/lang/Object;
+#setReplyTo(Ljava/lang/Object;)Lreactor/bus/Event;
+#getKey()Ljava/lang/Object;
+#setKey(Ljava/lang/Object;)Lreactor/bus/Event;
+#getData()Ljava/lang/Object;
+#setData(Ljava/lang/Object;)Lreactor/bus/Event;
+#getErrorConsumer()Lreactor/fn/Consumer;
+#copy()Lreactor/bus/Event;
+#copy(Ljava/lang/Object;)Lreactor/bus/Event;
+#consumeError(Ljava/lang/Throwable;)V
+#recycle()V
+#override(Lreactor/bus/Event;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/bus/Event

+###reactor/bus/EventBus$ReplyToEvent
@2.0.0.RC1
+#copy(Ljava/lang/Object;)Lreactor/bus/Event;
+#getReplyToObservable()Lreactor/bus/Observable;
@2.0.1.RELEASE
-###reactor/bus/EventBus$ReplyToEvent

+###reactor/bus/alloc/EventAllocator
@2.0.0.RC1
+#<init>()V
+#<init>([Ljava/lang/Class;)V
+#get(Ljava/lang/Class;)Lreactor/core/alloc/Reference;
+#defaultEventAllocator()Lreactor/bus/alloc/EventAllocator;
@2.0.1.RELEASE
-###reactor/bus/alloc/EventAllocator

+###reactor/bus/filter/PassThroughFilter
@2.0.0.RC1
+#<init>()V
+#doFilter(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
@2.0.1.RELEASE
-###reactor/bus/filter/PassThroughFilter

+###reactor/bus/filter/TraceableDelegatingFilter
@2.0.0.RC1
+#<init>(Lreactor/bus/filter/Filter;)V
+#filter(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
@2.0.1.RELEASE
-###reactor/bus/filter/TraceableDelegatingFilter

+###reactor/bus/filter/FirstFilter
@2.0.0.RC1
+#<init>()V
+#doFilter(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
@2.0.1.RELEASE
-###reactor/bus/filter/FirstFilter

+###reactor/bus/filter/Filter
@2.0.0.RC1
+#filter(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
@2.0.1.RELEASE
-###reactor/bus/filter/Filter

+###reactor/bus/filter/RoundRobinFilter
@2.0.0.RC1
+#<init>()V
+#doFilter(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
@2.0.1.RELEASE
-###reactor/bus/filter/RoundRobinFilter

+###reactor/bus/filter/RandomFilter
@2.0.0.RC1
+#<init>()V
+#doFilter(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
@2.0.1.RELEASE
-###reactor/bus/filter/RandomFilter

+###reactor/bus/convert/Converter
@2.0.0.RC1
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/bus/convert/Converter

+###reactor/bus/convert/StandardConverters$ConstructorParameterConverter
@2.0.0.RC1
+#values()[Lreactor/bus/convert/StandardConverters$ConstructorParameterConverter;
+#valueOf(Ljava/lang/String;)Lreactor/bus/convert/StandardConverters$ConstructorParameterConverter;
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/bus/convert/StandardConverters$ConstructorParameterConverter

+###reactor/bus/convert/StandardConverters$StringToNumberConverter
@2.0.0.RC1
+#values()[Lreactor/bus/convert/StandardConverters$StringToNumberConverter;
+#valueOf(Ljava/lang/String;)Lreactor/bus/convert/StandardConverters$StringToNumberConverter;
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/bus/convert/StandardConverters$StringToNumberConverter

+###reactor/bus/convert/StandardConverters$ToStringConverter
@2.0.0.RC1
+#values()[Lreactor/bus/convert/StandardConverters$ToStringConverter;
+#valueOf(Ljava/lang/String;)Lreactor/bus/convert/StandardConverters$ToStringConverter;
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/bus/convert/StandardConverters$ToStringConverter

+###reactor/bus/convert/DelegatingConverter
@2.0.0.RC1
+#<init>(Ljava/util/List;)V
+#<init>([Lreactor/bus/convert/Converter;)V
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/bus/convert/DelegatingConverter

+###reactor/bus/convert/StandardConverters
@2.0.0.RC1
@2.0.1.RELEASE
-###reactor/bus/convert/StandardConverters

+###reactor/bus/convert/ConversionFailedException
@2.0.0.RC1
+#getSourceType()Ljava/lang/Class;
+#getTargetType()Ljava/lang/Class;
@2.0.1.RELEASE
-###reactor/bus/convert/ConversionFailedException

+###reactor/bus/routing/ConsumerFilteringRouter
@2.0.0.RC1
+#<init>(Lreactor/bus/filter/Filter;)V
+#route(Ljava/lang/Object;Lreactor/bus/Event;Ljava/util/List;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#getFilter()Lreactor/bus/filter/Filter;
@2.0.1.RELEASE
-###reactor/bus/routing/ConsumerFilteringRouter

+###reactor/bus/routing/Router
@2.0.0.RC1
+#route(Ljava/lang/Object;Lreactor/bus/Event;Ljava/util/List;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
@2.0.1.RELEASE
-###reactor/bus/routing/Router

+###reactor/bus/routing/TraceableDelegatingRouter
@2.0.0.RC1
+#<init>(Lreactor/bus/routing/Router;)V
+#route(Ljava/lang/Object;Lreactor/bus/Event;Ljava/util/List;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
@2.0.1.RELEASE
-###reactor/bus/routing/TraceableDelegatingRouter

+###reactor/bus/selector/UriPathTemplate
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#matches(Ljava/lang/String;)Z
+#match(Ljava/lang/String;)Ljava/util/Map;
@2.0.1.RELEASE
-###reactor/bus/selector/UriPathTemplate

+###reactor/bus/selector/HeaderResolver
@2.0.0.RC1
+#resolve(Ljava/lang/Object;)Ljava/util/Map;
@2.0.1.RELEASE
-###reactor/bus/selector/HeaderResolver

+###reactor/bus/selector/UriSelector
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/net/URI;)V
+#getHeaderResolver()Lreactor/bus/selector/HeaderResolver;
+#matches(Ljava/lang/Object;)Z
@2.0.1.RELEASE
-###reactor/bus/selector/UriSelector

+###reactor/bus/selector/UriPathSelector
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#uriPathSelector(Ljava/lang/String;)Lreactor/bus/selector/Selector;
+#matches(Ljava/lang/Object;)Z
+#getHeaderResolver()Lreactor/bus/selector/HeaderResolver;
@2.0.1.RELEASE
-###reactor/bus/selector/UriPathSelector

+###reactor/bus/selector/ObjectSelector
@2.0.0.RC1
+#<init>(Ljava/lang/Object;)V
+#objectSelector(Ljava/lang/Object;)Lreactor/bus/selector/Selector;
+#getObject()Ljava/lang/Object;
+#matches(Ljava/lang/Object;)Z
+#getHeaderResolver()Lreactor/bus/selector/HeaderResolver;
+#test(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/bus/selector/ObjectSelector

+###reactor/bus/selector/SetMembershipSelector
@2.0.0.RC1
+#<init>(Ljava/util/Set;)V
+#getObject()Ljava/lang/Object;
+#matches(Ljava/lang/Object;)Z
+#getHeaderResolver()Lreactor/bus/selector/HeaderResolver;
@2.0.1.RELEASE
-###reactor/bus/selector/SetMembershipSelector

+###reactor/bus/selector/RegexSelector
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#regexSelector(Ljava/lang/String;)Lreactor/bus/selector/Selector;
+#matches(Ljava/lang/Object;)Z
+#getHeaderResolver()Lreactor/bus/selector/HeaderResolver;
@2.0.1.RELEASE
-###reactor/bus/selector/RegexSelector

+###reactor/bus/selector/Selectors
@2.0.0.RC1
+#<init>()V
+#anonymous()Lreactor/bus/selector/Selector;
+#$()Lreactor/bus/selector/Selector;
+#object(Ljava/lang/Object;)Lreactor/bus/selector/Selector;
+#$(Ljava/lang/Object;)Lreactor/bus/selector/Selector;
+#$(Ljava/lang/String;[Ljava/lang/Object;)Lreactor/bus/selector/Selector;
+#regex(Ljava/lang/String;)Lreactor/bus/selector/Selector;
+#R(Ljava/lang/String;)Lreactor/bus/selector/Selector;
+#type(Ljava/lang/Class;)Lreactor/bus/selector/ClassSelector;
+#T(Ljava/lang/Class;)Lreactor/bus/selector/ClassSelector;
+#uri(Ljava/lang/String;)Lreactor/bus/selector/Selector;
+#U(Ljava/lang/String;)Lreactor/bus/selector/Selector;
+#predicate(Lreactor/fn/Predicate;)Lreactor/bus/selector/Selector;
+#matchAll()Lreactor/bus/selector/Selector;
+#setMembership(Ljava/util/Set;)Lreactor/bus/selector/Selector;
@2.0.1.RELEASE
-###reactor/bus/selector/Selectors

+###reactor/bus/selector/ClassSelector
@2.0.0.RC1
+#<init>(Ljava/lang/Class;)V
+#typeSelector(Ljava/lang/Class;)Lreactor/bus/selector/Selector;
+#matches(Ljava/lang/Object;)Z
@2.0.1.RELEASE
-###reactor/bus/selector/ClassSelector

+###reactor/bus/selector/Selector
@2.0.0.RC1
+#getObject()Ljava/lang/Object;
+#matches(Ljava/lang/Object;)Z
+#getHeaderResolver()Lreactor/bus/selector/HeaderResolver;
@2.0.1.RELEASE
-###reactor/bus/selector/Selector

+###reactor/bus/selector/MatchAllSelector
@2.0.0.RC1
+#<init>()V
+#getObject()Ljava/lang/Object;
+#matches(Ljava/lang/Object;)Z
+#getHeaderResolver()Lreactor/bus/selector/HeaderResolver;
@2.0.1.RELEASE
-###reactor/bus/selector/MatchAllSelector

+###reactor/bus/selector/Selectors$AnonymousKey
@2.0.0.RC1
+#<init>()V
+#hashCode()I
@2.0.1.RELEASE
-###reactor/bus/selector/Selectors$AnonymousKey

+###reactor/bus/selector/PredicateSelector
@2.0.0.RC1
+#<init>(Lreactor/fn/Predicate;)V
+#predicateSelector(Lreactor/fn/Predicate;)Lreactor/bus/selector/PredicateSelector;
+#matches(Ljava/lang/Object;)Z
@2.0.1.RELEASE
-###reactor/bus/selector/PredicateSelector

+###reactor/bus/registry/Registries
@2.0.0.RC1
+#create()Lreactor/bus/registry/Registry;
+#create(ZZLreactor/fn/Consumer;)Lreactor/bus/registry/Registry;
@2.0.1.RELEASE
-###reactor/bus/registry/Registries

+###reactor/bus/registry/Registry
@2.0.0.RC1
+#register(Lreactor/bus/selector/Selector;Ljava/lang/Object;)Lreactor/bus/registry/Registration;
+#unregister(Ljava/lang/Object;)Z
+#select(Ljava/lang/Object;)Ljava/util/List;
+#clear()V
@2.0.1.RELEASE
-###reactor/bus/registry/Registry

+###reactor/bus/registry/SimpleCachingRegistry
@2.0.0.RC1
+#register(Lreactor/bus/selector/Selector;Ljava/lang/Object;)Lreactor/bus/registry/Registration;
+#unregister(Ljava/lang/Object;)Z
+#select(Ljava/lang/Object;)Ljava/util/List;
+#clear()V
+#iterator()Ljava/util/Iterator;
@2.0.1.RELEASE
-###reactor/bus/registry/SimpleCachingRegistry

+###reactor/bus/registry/Registration
@2.0.0.RC1
+#getSelector()Lreactor/bus/selector/Selector;
+#getObject()Ljava/lang/Object;
+#cancelAfterUse()Lreactor/bus/registry/Registration;
+#isCancelAfterUse()Z
+#cancel()Lreactor/bus/registry/Registration;
+#isCancelled()Z
+#pause()Lreactor/bus/registry/Registration;
+#isPaused()Z
+#resume()Lreactor/bus/registry/Registration;
@2.0.1.RELEASE
-###reactor/bus/registry/Registration

+###reactor/bus/registry/CachableRegistration
@2.0.0.RC1
+#<init>(Lreactor/bus/selector/Selector;Ljava/lang/Object;Ljava/lang/Runnable;)V
+#getSelector()Lreactor/bus/selector/Selector;
+#getObject()Ljava/lang/Object;
+#cancelAfterUse()Lreactor/bus/registry/Registration;
+#isCancelAfterUse()Z
+#cancel()Lreactor/bus/registry/Registration;
+#isCancelled()Z
+#pause()Lreactor/bus/registry/Registration;
+#isPaused()Z
+#resume()Lreactor/bus/registry/Registration;
+#toString()Ljava/lang/String;
+#resume()Lreactor/fn/Pausable;
+#pause()Lreactor/fn/Pausable;
+#cancel()Lreactor/fn/Pausable;
@2.0.1.RELEASE
-###reactor/bus/registry/CachableRegistration

+###reactor/bus/registry/CachingRegistry
@2.0.0.RC1
+#register(Lreactor/bus/selector/Selector;Ljava/lang/Object;)Lreactor/bus/registry/Registration;
+#unregister(Ljava/lang/Object;)Z
+#select(Ljava/lang/Object;)Ljava/util/List;
+#clear()V
+#iterator()Ljava/util/Iterator;
@2.0.1.RELEASE
-###reactor/bus/registry/CachingRegistry

+###reactor/bus/spec/EventRoutingComponentSpec$EventRoutingStrategy
@2.0.0.RC1
+#values()[Lreactor/bus/spec/EventRoutingComponentSpec$EventRoutingStrategy;
+#valueOf(Ljava/lang/String;)Lreactor/bus/spec/EventRoutingComponentSpec$EventRoutingStrategy;
@2.0.1.RELEASE
-###reactor/bus/spec/EventRoutingComponentSpec$EventRoutingStrategy

+###reactor/bus/spec/EventRoutingComponentSpec
@2.0.0.RC1
+#<init>()V
+#eventFilter(Lreactor/bus/filter/Filter;)Lreactor/bus/spec/EventRoutingComponentSpec;
+#eventRouter(Lreactor/bus/routing/Router;)Lreactor/bus/spec/EventRoutingComponentSpec;
+#broadcastEventRouting()Lreactor/bus/spec/EventRoutingComponentSpec;
+#randomEventRouting()Lreactor/bus/spec/EventRoutingComponentSpec;
+#firstEventRouting()Lreactor/bus/spec/EventRoutingComponentSpec;
+#roundRobinEventRouting()Lreactor/bus/spec/EventRoutingComponentSpec;
+#dispatchErrorHandler(Lreactor/fn/Consumer;)Lreactor/bus/spec/EventRoutingComponentSpec;
+#uncaughtErrorHandler(Lreactor/fn/Consumer;)Lreactor/bus/spec/EventRoutingComponentSpec;
+#traceEventPath()Lreactor/bus/spec/EventRoutingComponentSpec;
+#traceEventPath(Z)Lreactor/bus/spec/EventRoutingComponentSpec;
+#consumerRegistry(Lreactor/bus/registry/Registry;)Lreactor/bus/spec/EventRoutingComponentSpec;
+#consumerNotFoundHandler(Lreactor/fn/Consumer;)Lreactor/bus/spec/EventRoutingComponentSpec;
@2.0.1.RELEASE
-###reactor/bus/spec/EventRoutingComponentSpec

+###reactor/bus/spec/DispatcherComponentSpec
@2.0.0.RC1
+#<init>()V
+#env(Lreactor/Environment;)Lreactor/bus/spec/DispatcherComponentSpec;
+#defaultDispatcher()Lreactor/bus/spec/DispatcherComponentSpec;
+#synchronousDispatcher()Lreactor/bus/spec/DispatcherComponentSpec;
+#dispatcher(Lreactor/core/Dispatcher;)Lreactor/bus/spec/DispatcherComponentSpec;
+#dispatcher(Ljava/lang/String;)Lreactor/bus/spec/DispatcherComponentSpec;
+#get()Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/bus/spec/DispatcherComponentSpec

+###reactor/bus/spec/EventBusSpec
@2.0.0.RC1
+#<init>()V
@2.0.1.RELEASE
-###reactor/bus/spec/EventBusSpec

+###reactor/bus/support/CallbackEvent
@2.0.0.RC1
+#<init>(Ljava/lang/Object;Lreactor/fn/Consumer;)V
+#<init>(Lreactor/bus/Event$Headers;Ljava/lang/Object;Lreactor/fn/Consumer;)V
+#<init>(Lreactor/bus/Event$Headers;Ljava/lang/Object;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#copy(Ljava/lang/Object;)Lreactor/bus/Event;
+#callback()V
@2.0.1.RELEASE
-###reactor/bus/support/CallbackEvent

+###reactor/bus/support/EventConsumer
@2.0.0.RC1
+#<init>(Lreactor/fn/Consumer;)V
+#accept(Lreactor/bus/Event;)V
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/bus/support/EventConsumer

+###reactor/bus/support/NotifyConsumer
@2.0.0.RC1
+#<init>(Ljava/lang/Object;Lreactor/bus/Observable;)V
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/bus/support/NotifyConsumer

+###reactor/rx/StreamUtils
@2.0.0.RC1
+#<init>()V
+#browse(Lreactor/rx/Stream;)Lreactor/rx/StreamUtils$StreamVisitor;
+#browse(Lreactor/rx/Stream;Lreactor/rx/StreamUtils$DebugVisitor;)Lreactor/rx/StreamUtils$StreamVisitor;
@2.0.1.RELEASE
-###reactor/rx/StreamUtils

+###reactor/rx/Stream
@2.0.0.RC1
+#cast(Ljava/lang/Class;)Lreactor/rx/Stream;
+#lift(Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#when(Ljava/lang/Class;Lreactor/fn/Consumer;)Lreactor/rx/Stream;
+#observeError(Ljava/lang/Class;Lreactor/fn/BiConsumer;)Lreactor/rx/Stream;
+#onErrorResumeNext(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#onErrorResumeNext(Ljava/lang/Class;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#onErrorReturn(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#onErrorReturn(Ljava/lang/Class;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#materialize()Lreactor/rx/Stream;
+#dematerialize()Lreactor/rx/Stream;
+#notify(Lreactor/bus/Observable;Ljava/lang/Object;)Lreactor/rx/action/Control;
+#notify(Lreactor/bus/Observable;Lreactor/fn/Function;)Lreactor/rx/action/Control;
+#broadcast()Lreactor/rx/Stream;
+#broadcastOn(Lreactor/core/Dispatcher;)Lreactor/rx/Stream;
+#broadcastTo(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
+#tap()Lreactor/rx/action/support/TapAndControls;
+#consumeLater()Lreactor/rx/action/Control;
+#consume()Lreactor/rx/action/Control;
+#consume(J)Lreactor/rx/action/Control;
+#consume(Lreactor/fn/Consumer;)Lreactor/rx/action/Control;
+#consumeOn(Lreactor/core/Dispatcher;Lreactor/fn/Consumer;)Lreactor/rx/action/Control;
+#consume(Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lreactor/rx/action/Control;
+#consumeOn(Lreactor/core/Dispatcher;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lreactor/rx/action/Control;
+#consume(Lreactor/fn/Consumer;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lreactor/rx/action/Control;
+#consumeOn(Lreactor/core/Dispatcher;Lreactor/fn/Consumer;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)Lreactor/rx/action/Control;
+#batchConsume(Lreactor/fn/Consumer;Lreactor/fn/Function;)Lreactor/rx/action/Control;
+#adaptiveConsume(Lreactor/fn/Consumer;Lreactor/fn/Function;)Lreactor/rx/action/Control;
+#batchConsumeOn(Lreactor/core/Dispatcher;Lreactor/fn/Consumer;Lreactor/fn/Function;)Lreactor/rx/action/Control;
+#adaptiveConsumeOn(Lreactor/core/Dispatcher;Lreactor/fn/Consumer;Lreactor/fn/Function;)Lreactor/rx/action/Control;
+#dispatchOn(Lreactor/Environment;)Lreactor/rx/Stream;
+#subscribeOn(Lreactor/Environment;)Lreactor/rx/Stream;
+#dispatchOn(Lreactor/core/Dispatcher;)Lreactor/rx/Stream;
+#subscribeOn(Lreactor/core/Dispatcher;Lorg/reactivestreams/Subscriber;)V
+#subscribeOn(Lreactor/core/Dispatcher;)Lreactor/rx/Stream;
+#dispatchOn(Lreactor/Environment;Lreactor/core/Dispatcher;)Lreactor/rx/Stream;
+#observe(Lreactor/fn/Consumer;)Lreactor/rx/Stream;
+#cache()Lreactor/rx/Stream;
+#log()Lreactor/rx/Stream;
+#log(Ljava/lang/String;)Lreactor/rx/Stream;
+#observeComplete(Lreactor/fn/Consumer;)Lreactor/rx/Stream;
+#observeSubscribe(Lreactor/fn/Consumer;)Lreactor/rx/Stream;
+#observeCancel(Lreactor/fn/Consumer;)Lreactor/rx/Stream;
+#ignoreErrors()Lreactor/rx/Stream;
+#ignoreErrors(Lreactor/fn/Predicate;)Lreactor/rx/Stream;
+#finallyDo(Lreactor/fn/Consumer;)Lreactor/rx/Stream;
+#defaultIfEmpty(Ljava/lang/Object;)Lreactor/rx/Stream;
+#map(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#flatMap(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#switchMap(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#concatMap(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#merge()Lreactor/rx/Stream;
+#mergeWith(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#concatWith(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#startWith(Ljava/lang/Iterable;)Lreactor/rx/Stream;
+#startWith(Ljava/lang/Object;)Lreactor/rx/Stream;
+#startWith(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#join()Lreactor/rx/Stream;
+#joinWith(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#zip(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zipWith(Ljava/lang/Iterable;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zipWith(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#fanIn(Lreactor/rx/action/combination/FanInAction;)Lreactor/rx/Stream;
+#capacity(J)Lreactor/rx/Stream;
+#onOverflowBuffer()Lreactor/rx/Stream;
+#onOverflowBuffer(Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#onOverflowDrop()Lreactor/rx/Stream;
+#filter(Lreactor/fn/Predicate;)Lreactor/rx/Stream;
+#filter()Lreactor/rx/Stream;
+#nest()Lreactor/rx/Stream;
+#retry()Lreactor/rx/Stream;
+#retry(I)Lreactor/rx/Stream;
+#retry(Lreactor/fn/Predicate;)Lreactor/rx/Stream;
+#retry(ILreactor/fn/Predicate;)Lreactor/rx/Stream;
+#recover(Ljava/lang/Class;Lorg/reactivestreams/Subscriber;)Lreactor/rx/Stream;
+#retryWhen(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#repeat()Lreactor/rx/Stream;
+#repeat(I)Lreactor/rx/Stream;
+#repeatWhen(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#last()Lreactor/rx/Stream;
+#take(J)Lreactor/rx/Stream;
+#take(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#take(JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#takeWhile(Lreactor/fn/Predicate;)Lreactor/rx/Stream;
+#takeWhile(JLreactor/fn/Predicate;)Lreactor/rx/Stream;
+#skip(J)Lreactor/rx/Stream;
+#skip(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#skip(JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#skipWhile(Lreactor/fn/Predicate;)Lreactor/rx/Stream;
+#skipWhile(JLreactor/fn/Predicate;)Lreactor/rx/Stream;
+#timestamp()Lreactor/rx/Stream;
+#elapsed()Lreactor/rx/Stream;
+#elementAt(I)Lreactor/rx/Stream;
+#elementAtOrDefault(ILjava/lang/Object;)Lreactor/rx/Stream;
+#sampleFirst()Lreactor/rx/Stream;
+#sampleFirst(I)Lreactor/rx/Stream;
+#sampleFirst(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#sampleFirst(JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#sampleFirst(IJLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#sampleFirst(IJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#sample()Lreactor/rx/Stream;
+#sample(I)Lreactor/rx/Stream;
+#sample(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#sample(JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#sample(IJLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#sample(IJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#distinctUntilChanged()Lreactor/rx/Stream;
+#distinctUntilChanged(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#distinct()Lreactor/rx/Stream;
+#distinct(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#exists(Lreactor/fn/Predicate;)Lreactor/rx/Stream;
+#split()Lreactor/rx/Stream;
+#split(J)Lreactor/rx/Stream;
+#buffer()Lreactor/rx/Stream;
+#buffer(I)Lreactor/rx/Stream;
+#buffer(Lorg/reactivestreams/Publisher;Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#buffer(Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#buffer(II)Lreactor/rx/Stream;
+#buffer(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#buffer(JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#buffer(JJLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#buffer(JJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#buffer(IJLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#buffer(IJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#sort()Lreactor/rx/Stream;
+#sort(I)Lreactor/rx/Stream;
+#sort(Ljava/util/Comparator;)Lreactor/rx/Stream;
+#sort(ILjava/util/Comparator;)Lreactor/rx/Stream;
+#window()Lreactor/rx/Stream;
+#window(I)Lreactor/rx/Stream;
+#window(II)Lreactor/rx/Stream;
+#window(Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#window(Lorg/reactivestreams/Publisher;Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#window(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#window(JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#window(IJLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#window(IJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#window(JJLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#window(JJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#groupBy(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#partition()Lreactor/rx/Stream;
+#partition(I)Lreactor/rx/Stream;
+#reduce(Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#reduce(Ljava/lang/Object;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#scan(Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#scan(Ljava/lang/Object;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#count()Lreactor/rx/Stream;
+#count(J)Lreactor/rx/Stream;
+#throttle(J)Lreactor/rx/Stream;
+#throttle(JLreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#requestWhen(Lreactor/fn/Function;)Lreactor/rx/Stream;
+#timeout(J)Lreactor/rx/Stream;
+#timeout(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#timeout(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#timeout(JLjava/util/concurrent/TimeUnit;Lorg/reactivestreams/Publisher;Lreactor/fn/timer/Timer;)Lreactor/rx/Stream;
+#combine()Lreactor/rx/action/CompositeAction;
+#next()Lreactor/rx/Promise;
+#toList()Lreactor/rx/Promise;
+#toList(J)Lreactor/rx/Promise;
+#env(Lreactor/Environment;)Lreactor/rx/Stream;
+#toBlockingQueue()Lreactor/core/queue/CompletableBlockingQueue;
+#toBlockingQueue(I)Lreactor/core/queue/CompletableBlockingQueue;
+#keepAlive()Lreactor/rx/Stream;
+#subscribe(Lreactor/rx/action/CompositeAction;)V
+#getCapacity()J
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getTimer()Lreactor/fn/timer/Timer;
+#downstreamSubscription()Lreactor/rx/subscription/PushSubscription;
+#cleanSubscriptionReference(Lreactor/rx/subscription/PushSubscription;)Z
+#getEnvironment()Lreactor/Environment;
+#getDispatcher()Lreactor/core/Dispatcher;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/Stream

+###reactor/rx/Promises
@2.0.0.RC1
+#<init>()V
+#prepare()Lreactor/rx/Promise;
+#prepare(Lreactor/Environment;)Lreactor/rx/Promise;
+#ready(Lreactor/Environment;Lreactor/core/Dispatcher;)Lreactor/rx/Promise;
+#syncTask(Lreactor/fn/Supplier;)Lreactor/rx/Promise;
+#task(Lreactor/Environment;Lreactor/fn/Supplier;)Lreactor/rx/Promise;
+#task(Lreactor/Environment;Lreactor/core/Dispatcher;Lreactor/fn/Supplier;)Lreactor/rx/Promise;
+#success(Ljava/lang/Object;)Lreactor/rx/Promise;
+#success(Lreactor/Environment;Ljava/lang/Object;)Lreactor/rx/Promise;
+#success(Lreactor/Environment;Lreactor/core/Dispatcher;Ljava/lang/Object;)Lreactor/rx/Promise;
+#error(Ljava/lang/Throwable;)Lreactor/rx/Promise;
+#error(Lreactor/Environment;Ljava/lang/Throwable;)Lreactor/rx/Promise;
+#error(Lreactor/Environment;Lreactor/core/Dispatcher;Ljava/lang/Throwable;)Lreactor/rx/Promise;
+#when(Lreactor/rx/Promise;Lreactor/rx/Promise;)Lreactor/rx/Promise;
+#when(Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;)Lreactor/rx/Promise;
+#when(Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;)Lreactor/rx/Promise;
+#when(Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;)Lreactor/rx/Promise;
+#when(Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;)Lreactor/rx/Promise;
+#when(Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;)Lreactor/rx/Promise;
+#when(Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;Lreactor/rx/Promise;)Lreactor/rx/Promise;
+#when(Ljava/util/List;)Lreactor/rx/Promise;
+#any([Lreactor/rx/Promise;)Lreactor/rx/Promise;
+#any(Ljava/util/List;)Lreactor/rx/Promise;
@2.0.1.RELEASE
-###reactor/rx/Promises

+###reactor/rx/Streams
@2.0.0.RC1
+#create(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#wrap(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#defer(Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#empty()Lreactor/rx/Stream;
+#fail(Ljava/lang/Throwable;)Lreactor/rx/Stream;
+#from(Ljava/lang/Iterable;)Lreactor/rx/Stream;
+#from([Ljava/lang/Object;)Lreactor/rx/Stream;
+#from(Ljava/util/concurrent/Future;)Lreactor/rx/Stream;
+#from(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#range(II)Lreactor/rx/Stream;
+#timer(J)Lreactor/rx/Stream;
+#timer(Lreactor/fn/timer/Timer;J)Lreactor/rx/Stream;
+#timer(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#timer(Lreactor/fn/timer/Timer;JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#period(J)Lreactor/rx/Stream;
+#period(Lreactor/fn/timer/Timer;J)Lreactor/rx/Stream;
+#period(JJ)Lreactor/rx/Stream;
+#period(Lreactor/fn/timer/Timer;JJ)Lreactor/rx/Stream;
+#period(JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#period(Lreactor/fn/timer/Timer;JLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#period(JJLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#period(Lreactor/fn/timer/Timer;JJLjava/util/concurrent/TimeUnit;)Lreactor/rx/Stream;
+#just(Ljava/lang/Object;)Lreactor/rx/Stream;
+#just(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/Stream;
+#just(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/Stream;
+#just(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/Stream;
+#just(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/Stream;
+#just(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/Stream;
+#just(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/Stream;
+#just(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/Stream;
+#on(Lreactor/bus/Observable;Lreactor/bus/selector/Selector;)Lreactor/rx/Stream;
+#generate(Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#switchOnNext()Lreactor/rx/action/Action;
+#switchOnNext(Lreactor/core/Dispatcher;)Lreactor/rx/action/Action;
+#switchOnNext(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#switchOnNext(Lorg/reactivestreams/Publisher;Lreactor/core/Dispatcher;)Lreactor/rx/Stream;
+#concat(Ljava/lang/Iterable;)Lreactor/rx/Stream;
+#concat(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#concat(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#concat(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#concat(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#concat(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#concat(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#concat(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#concat(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#merge(Ljava/lang/Iterable;)Lreactor/rx/Stream;
+#merge(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#merge(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#merge(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#merge(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#merge(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#merge(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#merge(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#merge(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#combineLatest(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#combineLatest(Ljava/lang/Iterable;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#combineLatest(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Ljava/lang/Iterable;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#zip(Lorg/reactivestreams/Publisher;Lreactor/fn/Function;)Lreactor/rx/Stream;
+#join(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#join(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#join(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#join(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#join(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#join(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#join(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#join(Ljava/lang/Iterable;)Lreactor/rx/Stream;
+#join(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
+#await(Lorg/reactivestreams/Publisher;)V
+#await(Lorg/reactivestreams/Publisher;J)V
+#await(Lorg/reactivestreams/Publisher;JLjava/util/concurrent/TimeUnit;)V
+#await(Lorg/reactivestreams/Publisher;JLjava/util/concurrent/TimeUnit;Z)V
@2.0.1.RELEASE
-###reactor/rx/Streams

+###reactor/rx/BiStreams
@2.0.0.RC1
+#reduceByKey(Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#reduceByKey(Lorg/reactivestreams/Publisher;Lreactor/rx/stream/MapStream;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#reduceByKey(Lorg/reactivestreams/Publisher;Ljava/util/Map;Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#reduceByKeyOn(Lorg/reactivestreams/Publisher;Ljava/util/Map;Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#scanByKey(Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#scanByKey(Lorg/reactivestreams/Publisher;Lreactor/rx/stream/MapStream;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#scanByKey(Lorg/reactivestreams/Publisher;Ljava/util/Map;Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
+#scanByKeyOn(Lorg/reactivestreams/Publisher;Ljava/util/Map;Lorg/reactivestreams/Publisher;Lreactor/fn/BiFunction;)Lreactor/rx/Stream;
@2.0.1.RELEASE
-###reactor/rx/BiStreams

+###reactor/rx/StreamUtils$StreamVisitor
@2.0.0.RC1
+#<init>(Lreactor/rx/StreamUtils$DebugVisitor;)V
+#accept(Lreactor/rx/Stream;)V
+#toMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/StreamUtils$StreamVisitor

+###reactor/rx/Promise$FinalState
@2.0.0.RC1
+#values()[Lreactor/rx/Promise$FinalState;
+#valueOf(Ljava/lang/String;)Lreactor/rx/Promise$FinalState;
@2.0.1.RELEASE
-###reactor/rx/Promise$FinalState

+###reactor/rx/Promise
@2.0.0.RC1
+#<init>()V
+#<init>(Lreactor/core/Dispatcher;Lreactor/Environment;)V
+#<init>(Ljava/lang/Object;Lreactor/core/Dispatcher;Lreactor/Environment;)V
+#<init>(Ljava/lang/Throwable;Lreactor/core/Dispatcher;Lreactor/Environment;)V
+#onComplete(Lreactor/fn/Consumer;)Lreactor/rx/Promise;
+#onSuccess(Lreactor/fn/Consumer;)Lreactor/rx/Promise;
+#map(Lreactor/fn/Function;)Lreactor/rx/Promise;
+#flatMap(Lreactor/fn/Function;)Lreactor/rx/Promise;
+#onError(Lreactor/fn/Consumer;)Lreactor/rx/Promise;
+#isComplete()Z
+#isPending()Z
+#isSuccess()Z
+#isError()Z
+#awaitSuccess()Z
+#awaitSuccess(JLjava/util/concurrent/TimeUnit;)Z
+#await()Ljava/lang/Object;
+#await(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#get()Ljava/lang/Object;
+#reason()Ljava/lang/Throwable;
+#stream()Lreactor/rx/Stream;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#getEnvironment()Lreactor/Environment;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#accept(Ljava/lang/Object;)V
+#debug()Lreactor/rx/StreamUtils$StreamVisitor;
+#findOldestStream()Lreactor/rx/action/Action;
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/Promise

+###reactor/rx/broadcast/Broadcaster
@2.0.0.RC1
+#create()Lreactor/rx/broadcast/Broadcaster;
+#create(Lreactor/Environment;)Lreactor/rx/broadcast/Broadcaster;
+#create(Lreactor/core/Dispatcher;)Lreactor/rx/broadcast/Broadcaster;
+#create(Lreactor/Environment;Lreactor/core/Dispatcher;)Lreactor/rx/broadcast/Broadcaster;
+#getDispatcher()Lreactor/core/Dispatcher;
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#capacity(J)Lreactor/rx/broadcast/Broadcaster;
+#capacity(J)Lreactor/rx/action/Action;
+#capacity(J)Lreactor/rx/Stream;
@2.0.1.RELEASE
-###reactor/rx/broadcast/Broadcaster

+###reactor/rx/broadcast/BehaviorBroadcaster
@2.0.0.RC1
+#first(Ljava/lang/Object;)Lreactor/rx/broadcast/Broadcaster;
+#first(Ljava/lang/Object;Lreactor/Environment;)Lreactor/rx/broadcast/Broadcaster;
+#first(Ljava/lang/Object;Lreactor/core/Dispatcher;)Lreactor/rx/broadcast/Broadcaster;
+#first(Ljava/lang/Object;Lreactor/Environment;Lreactor/core/Dispatcher;)Lreactor/rx/broadcast/Broadcaster;
+#create(Lreactor/Environment;)Lreactor/rx/broadcast/Broadcaster;
+#create(Lreactor/core/Dispatcher;)Lreactor/rx/broadcast/Broadcaster;
+#create(Lreactor/Environment;Lreactor/core/Dispatcher;)Lreactor/rx/broadcast/Broadcaster;
@2.0.1.RELEASE
-###reactor/rx/broadcast/BehaviorBroadcaster

+###reactor/rx/broadcast/SerializedBroadcaster
@2.0.0.RC1
+#create()Lreactor/rx/broadcast/Broadcaster;
+#create(Lreactor/Environment;)Lreactor/rx/broadcast/Broadcaster;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
@2.0.1.RELEASE
-###reactor/rx/broadcast/SerializedBroadcaster

+###reactor/rx/subscription/FanOutSubscription
@2.0.0.RC1
+#<init>(Lreactor/rx/Stream;Lreactor/rx/subscription/PushSubscription;Lreactor/rx/subscription/PushSubscription;)V
+#onComplete()V
+#onNext(Ljava/lang/Object;)V
+#cancel()V
+#onError(Ljava/lang/Throwable;)V
+#isComplete()Z
+#forEach(Lreactor/fn/Consumer;)V
+#getSubscriptions()Ljava/util/List;
+#isEmpty()Z
+#remove(Lreactor/rx/subscription/PushSubscription;)Z
+#add(Lreactor/rx/subscription/PushSubscription;)Z
+#contains(Lreactor/rx/subscription/PushSubscription;)Z
@2.0.1.RELEASE
-###reactor/rx/subscription/FanOutSubscription

+###reactor/rx/subscription/DropSubscription
@2.0.0.RC1
+#<init>(Lreactor/rx/Stream;Lorg/reactivestreams/Subscriber;)V
+#request(J)V
+#cancel()V
+#onNext(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/subscription/DropSubscription

+###reactor/rx/subscription/BatchSubscription
@2.0.0.RC1
+#<init>(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscriber;I)V
+#request(J)V
@2.0.1.RELEASE
-###reactor/rx/subscription/BatchSubscription

+###reactor/rx/subscription/PushSubscription
@2.0.0.RC1
+#wrap(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscriber;)Lreactor/rx/subscription/PushSubscription;
+#<init>(Lreactor/rx/Stream;Lorg/reactivestreams/Subscriber;)V
+#accept(Ljava/lang/Long;)V
+#request(J)V
+#cancel()V
+#terminate()Z
+#onComplete()V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#getPublisher()Lreactor/rx/Stream;
+#hasPublisher()Z
+#updatePendingRequests(J)V
+#getSubscriber()Lorg/reactivestreams/Subscriber;
+#isComplete()Z
+#pendingRequestSignals()J
+#maxCapacity(J)V
+#shouldRequestPendingSignals()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/subscription/PushSubscription

+###reactor/rx/subscription/ReactiveSubscription
@2.0.0.RC1
+#<init>(Lreactor/rx/Stream;Lorg/reactivestreams/Subscriber;)V
+#<init>(Lreactor/rx/Stream;Lorg/reactivestreams/Subscriber;Lreactor/core/queue/CompletableQueue;)V
+#request(J)V
+#onNext(Ljava/lang/Object;)V
+#onComplete()V
+#currentNextSignals()J
+#updatePendingRequests(J)V
+#shouldRequestPendingSignals()Z
+#maxCapacity(J)V
+#getBufferSize()J
+#capacity()J
+#getBuffer()Lreactor/core/queue/CompletableQueue;
+#isComplete()Z
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/subscription/ReactiveSubscription

+###reactor/rx/subscription/support/WrappedSubscription
@2.0.0.RC1
+#<init>(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscriber;)V
+#request(J)V
+#cancel()V
+#getPublisher()Lreactor/rx/Stream;
+#maxCapacity(J)V
+#updatePendingRequests(J)V
+#shouldRequestPendingSignals()Z
+#isComplete()Z
+#equals(Ljava/lang/Object;)Z
+#hasPublisher()Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/subscription/support/WrappedSubscription

+###reactor/rx/stream/ErrorStream
@2.0.0.RC1
+#<init>(Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/rx/stream/ErrorStream

+###reactor/rx/stream/LiftStream
@2.0.0.RC1
+#<init>(Lreactor/rx/Stream;Lreactor/fn/Supplier;)V
+#onLift()Lreactor/rx/action/Action;
+#combine()Lreactor/rx/action/CompositeAction;
+#getCapacity()J
+#getDispatcher()Lreactor/core/Dispatcher;
+#getEnvironment()Lreactor/Environment;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/stream/LiftStream

+###reactor/rx/stream/PublisherStream
@2.0.0.RC1
+#<init>(Lorg/reactivestreams/Publisher;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/rx/stream/PublisherStream

+###reactor/rx/stream/RangeStream
@2.0.0.RC1
+#<init>(II)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/stream/RangeStream

+###reactor/rx/stream/DeferredStream
@2.0.0.RC1
+#<init>(Lreactor/fn/Supplier;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/rx/stream/DeferredStream

+###reactor/rx/stream/MapStream$Operation
@2.0.0.RC1
+#values()[Lreactor/rx/stream/MapStream$Operation;
+#valueOf(Ljava/lang/String;)Lreactor/rx/stream/MapStream$Operation;
@2.0.1.RELEASE
-###reactor/rx/stream/MapStream$Operation

+###reactor/rx/stream/MapStream$MutableSignal
@2.0.0.RC1
+#<init>()V
+#op(Lreactor/rx/stream/MapStream$Operation;)V
+#key(Ljava/lang/Object;)V
+#previous(Ljava/lang/Object;)V
+#value(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/stream/MapStream$MutableSignal

+###reactor/rx/stream/SingleValueStream
@2.0.0.RC1
+#<init>(Ljava/lang/Object;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/stream/SingleValueStream

+###reactor/rx/stream/FutureStream
@2.0.0.RC1
+#<init>(Ljava/util/concurrent/Future;)V
+#<init>(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/rx/stream/FutureStream

+###reactor/rx/stream/SupplierStream
@2.0.0.RC1
+#<init>(Lreactor/fn/Supplier;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/rx/stream/SupplierStream

+###reactor/rx/stream/MapStream
@2.0.0.RC1
+#<init>()V
+#onPut()Lreactor/rx/Stream;
+#onRemove()Lreactor/rx/Stream;
@2.0.1.RELEASE
-###reactor/rx/stream/MapStream

+###reactor/rx/stream/MapStream$Signal
@2.0.0.RC1
+#op()Lreactor/rx/stream/MapStream$Operation;
+#key()Ljava/lang/Object;
+#previous()Ljava/lang/Object;
+#value()Ljava/lang/Object;
+#pair()Lreactor/fn/tuple/Tuple2;
+#toString()Ljava/lang/String;
+#create(Lreactor/rx/stream/MapStream$Operation;)Lreactor/rx/stream/MapStream$Signal;
+#create(Lreactor/rx/stream/MapStream$Operation;Ljava/lang/Object;)Lreactor/rx/stream/MapStream$Signal;
+#create(Lreactor/rx/stream/MapStream$Operation;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/stream/MapStream$Signal;
+#create(Lreactor/rx/stream/MapStream$Operation;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/rx/stream/MapStream$Signal;
@2.0.1.RELEASE
-###reactor/rx/stream/MapStream$Signal

+###reactor/rx/stream/GroupedStream
@2.0.0.RC1
+#<init>(Ljava/lang/Object;)V
+#key()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/stream/GroupedStream

+###reactor/rx/stream/IterableStream
@2.0.0.RC1
+#<init>(Ljava/lang/Iterable;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/stream/IterableStream

+###reactor/rx/stream/SingleTimerStream
@2.0.0.RC1
+#<init>(JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/stream/SingleTimerStream

+###reactor/rx/stream/PeriodicTimerStream
@2.0.0.RC1
+#<init>(JJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/stream/PeriodicTimerStream

+###reactor/rx/stream/ObservableStream
@2.0.0.RC1
+#<init>(Lreactor/bus/Observable;Lreactor/bus/selector/Selector;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#getDispatcher()Lreactor/core/Dispatcher;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/stream/ObservableStream

+###reactor/rx/action/Signal
@2.0.0.RC1
+#next(Ljava/lang/Object;)Lreactor/rx/action/Signal;
+#error(Ljava/lang/Throwable;)Lreactor/rx/action/Signal;
+#complete()Lreactor/rx/action/Signal;
+#subscribe(Lorg/reactivestreams/Subscription;)Lreactor/rx/action/Signal;
+#getThrowable()Ljava/lang/Throwable;
+#getSubscription()Lorg/reactivestreams/Subscription;
+#get()Ljava/lang/Object;
+#hasValue()Z
+#hasError()Z
+#getType()Lreactor/rx/action/Signal$Type;
+#isOnError()Z
+#isOnComplete()Z
+#isOnSubscribe()Z
+#isOnNext()Z
+#accept(Lorg/reactivestreams/Subscriber;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/action/Signal

+###reactor/rx/action/Action
@2.0.0.RC1
+#checkRequest(J)V
+#evaluateCapacity(J)J
+#<init>()V
+#<init>(J)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#accept(Ljava/lang/Object;)V
+#onNext(Ljava/lang/Object;)V
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#capacity(J)Lreactor/rx/action/Action;
+#isPublishing()Z
+#cancel()V
+#start()V
+#debug()Lreactor/rx/StreamUtils$StreamVisitor;
+#control(Lreactor/rx/Stream;Lreactor/fn/Consumer;)Lreactor/rx/action/Action;
+#onOverflowBuffer(Lreactor/fn/Supplier;)Lreactor/rx/Stream;
+#combine()Lreactor/rx/action/CompositeAction;
+#toBroadcastCompleteConsumer()Lreactor/fn/Consumer;
+#toBroadcastNextConsumer()Lreactor/fn/Consumer;
+#toBroadcastErrorConsumer()Lreactor/fn/Consumer;
+#findOldestUpstream(Ljava/lang/Class;)Lorg/reactivestreams/Publisher;
+#getCapacity()J
+#getSubscription()Lreactor/rx/subscription/PushSubscription;
+#downstreamSubscription()Lreactor/rx/subscription/PushSubscription;
+#cleanSubscriptionReference(Lreactor/rx/subscription/PushSubscription;)Z
+#requestMore(J)V
+#recycle()V
+#toString()Ljava/lang/String;
+#capacity(J)Lreactor/rx/Stream;
@2.0.1.RELEASE
-###reactor/rx/action/Action

+###reactor/rx/action/CompositeAction
@2.0.0.RC1
+#<init>(Lreactor/rx/action/Action;Lreactor/rx/action/Action;)V
+#output()Lreactor/rx/Stream;
+#input()Lreactor/rx/action/Action;
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#debug()Lreactor/rx/StreamUtils$StreamVisitor;
+#capacity(J)Lreactor/rx/action/Action;
+#cancel()V
+#toString()Ljava/lang/String;
+#capacity(J)Lreactor/rx/Stream;
@2.0.1.RELEASE
-###reactor/rx/action/CompositeAction

+###reactor/rx/action/Signal$Type
@2.0.0.RC1
+#values()[Lreactor/rx/action/Signal$Type;
+#valueOf(Ljava/lang/String;)Lreactor/rx/action/Signal$Type;
@2.0.1.RELEASE
-###reactor/rx/action/Signal$Type

+###reactor/rx/action/Control
@2.0.0.RC1
+#requestMore(J)V
+#start()V
+#cancel()V
+#isPublishing()Z
+#debug()Lreactor/rx/StreamUtils$StreamVisitor;
@2.0.1.RELEASE
-###reactor/rx/action/Control

+###reactor/rx/action/metrics/TimestampAction
@2.0.0.RC1
+#<init>()V
@2.0.1.RELEASE
-###reactor/rx/action/metrics/TimestampAction

+###reactor/rx/action/metrics/CountAction
@2.0.0.RC1
+#<init>(J)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/rx/action/metrics/CountAction

+###reactor/rx/action/metrics/ElapsedAction
@2.0.0.RC1
+#<init>()V
@2.0.1.RELEASE
-###reactor/rx/action/metrics/ElapsedAction

+###reactor/rx/action/filter/DistinctUntilChangedAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Function;)V
@2.0.1.RELEASE
-###reactor/rx/action/filter/DistinctUntilChangedAction

+###reactor/rx/action/filter/SkipAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Predicate;J)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/filter/SkipAction

+###reactor/rx/action/filter/TakeAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Predicate;J)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/filter/TakeAction

+###reactor/rx/action/filter/FilterAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Predicate;)V
@2.0.1.RELEASE
-###reactor/rx/action/filter/FilterAction

+###reactor/rx/action/filter/DistinctAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Function;)V
@2.0.1.RELEASE
-###reactor/rx/action/filter/DistinctAction

+###reactor/rx/action/filter/ElementAtAction
@2.0.0.RC1
+#<init>(I)V
+#<init>(ILjava/lang/Object;)V
+#<init>(ILjava/lang/Object;Z)V
+#doComplete()V
@2.0.1.RELEASE
-###reactor/rx/action/filter/ElementAtAction

+###reactor/rx/action/filter/SkipUntilTimeout
@2.0.0.RC1
+#<init>(JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/filter/SkipUntilTimeout

+###reactor/rx/action/filter/TakeUntilTimeout
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;JLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/filter/TakeUntilTimeout

+###reactor/rx/action/terminal/ObservableAction
@2.0.0.RC1
+#<init>(Lreactor/bus/Observable;Ljava/lang/Object;Lreactor/fn/Function;)V
@2.0.1.RELEASE
-###reactor/rx/action/terminal/ObservableAction

+###reactor/rx/action/terminal/AdaptiveConsumerAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;JLreactor/fn/Consumer;Lreactor/fn/Function;)V
+#requestMore(J)V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getDispatcher()Lreactor/core/Dispatcher;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/terminal/AdaptiveConsumerAction

+###reactor/rx/action/terminal/ConsumerAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Lreactor/fn/Consumer;Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#requestMore(J)V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getDispatcher()Lreactor/core/Dispatcher;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/terminal/ConsumerAction

+###reactor/rx/action/passive/LoggerAction
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#requestMore(J)V
+#cancel()V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/passive/LoggerAction

+###reactor/rx/action/passive/CallbackAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
@2.0.1.RELEASE
-###reactor/rx/action/passive/CallbackAction

+###reactor/rx/action/control/RepeatAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;ILorg/reactivestreams/Publisher;)V
+#getDispatcher()Lreactor/core/Dispatcher;
+#requestMore(J)V
+#onComplete()V
@2.0.1.RELEASE
-###reactor/rx/action/control/RepeatAction

+###reactor/rx/action/control/RepeatWhenAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Lreactor/fn/Function;Lorg/reactivestreams/Publisher;)V
+#onComplete()V
+#getDispatcher()Lreactor/core/Dispatcher;
@2.0.1.RELEASE
-###reactor/rx/action/control/RepeatWhenAction

+###reactor/rx/action/control/FinallyAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Consumer;)V
@2.0.1.RELEASE
-###reactor/rx/action/control/FinallyAction

+###reactor/rx/action/control/DispatcherAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Lreactor/core/Dispatcher;)V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#requestMore(J)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#getDispatcher()Lreactor/core/Dispatcher;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/control/DispatcherAction

+###reactor/rx/action/control/ThrottleRequestWhenAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Lreactor/fn/Function;)V
+#requestMore(J)V
+#onComplete()V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
@2.0.1.RELEASE
-###reactor/rx/action/control/ThrottleRequestWhenAction

+###reactor/rx/action/control/FlowControlAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Supplier;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
@2.0.1.RELEASE
-###reactor/rx/action/control/FlowControlAction

+###reactor/rx/action/control/ThrottleRequestAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Lreactor/fn/timer/Timer;J)V
+#requestMore(J)V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#cancel()V
+#doComplete()V
@2.0.1.RELEASE
-###reactor/rx/action/control/ThrottleRequestAction

+###reactor/rx/action/control/StreamStateCallbackAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Consumer;Lreactor/fn/Consumer;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/rx/action/control/StreamStateCallbackAction

+###reactor/rx/action/combination/FanInSubscription
@2.0.0.RC1
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#forEach(Lreactor/fn/Consumer;)V
+#cancel()V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#serialNext(Ljava/lang/Object;)V
+#serialError(Ljava/lang/Throwable;)V
+#serialComplete()V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/combination/FanInSubscription

+###reactor/rx/action/combination/DynamicMergeAction
@2.0.0.RC1
+#<init>(Lreactor/rx/action/combination/FanInAction;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#requestMore(J)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#capacity(J)Lreactor/rx/action/Action;
+#decrementWip()I
+#mergedStream()Lreactor/rx/action/combination/FanInAction;
+#toString()Ljava/lang/String;
+#capacity(J)Lreactor/rx/Stream;
@2.0.1.RELEASE
-###reactor/rx/action/combination/DynamicMergeAction

+###reactor/rx/action/combination/ConcatAction$InnerSubscriber
@2.0.0.RC1
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onComplete()V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/combination/ConcatAction$InnerSubscriber

+###reactor/rx/action/combination/FanInAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;)V
+#<init>(Lreactor/core/Dispatcher;Ljava/lang/Iterable;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#addPublisher(Lorg/reactivestreams/Publisher;)V
+#scheduleCompletion()V
+#cancel()V
+#dynamicMergeAction()Lreactor/rx/action/Action;
+#onNext(Ljava/lang/Object;)V
+#requestMore(J)V
+#getDispatcher()Lreactor/core/Dispatcher;
+#toString()Ljava/lang/String;
+#getSubscription()Lreactor/rx/action/combination/FanInSubscription;
+#getSubscription()Lreactor/rx/subscription/PushSubscription;
@2.0.1.RELEASE
-###reactor/rx/action/combination/FanInAction

+###reactor/rx/action/combination/CombineLatestAction$Zippable
@2.0.0.RC1
+#<init>(ILjava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/action/combination/CombineLatestAction$Zippable

+###reactor/rx/action/combination/SwitchAction$SwitchSubscriber
@2.0.0.RC1
+#<init>(Lreactor/rx/action/combination/SwitchAction;)V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
+#cancel()V
+#getSubscription()Lorg/reactivestreams/Subscription;
@2.0.1.RELEASE
-###reactor/rx/action/combination/SwitchAction$SwitchSubscriber

+###reactor/rx/action/combination/ZipAction$InnerSubscriber
@2.0.0.RC1
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#request(J)V
+#onNext(Ljava/lang/Object;)V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/combination/ZipAction$InnerSubscriber

+###reactor/rx/action/combination/ZipAction$Zippable
@2.0.0.RC1
+#<init>(ILjava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/action/combination/ZipAction$Zippable

+###reactor/rx/action/combination/MergeAction$InnerSubscriber
@2.0.0.RC1
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/combination/MergeAction$InnerSubscriber

+###reactor/rx/action/combination/ZipAction
@2.0.0.RC1
+#joinZipper()Lreactor/fn/Function;
+#<init>(Lreactor/core/Dispatcher;Lreactor/fn/Function;Ljava/lang/Iterable;)V
+#scheduleCompletion()V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/combination/ZipAction

+###reactor/rx/action/combination/CombineLatestAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Lreactor/fn/Function;Ljava/lang/Iterable;)V
+#scheduleCompletion()V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/combination/CombineLatestAction

+###reactor/rx/action/combination/MergeAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;)V
+#<init>(Lreactor/core/Dispatcher;Ljava/util/List;)V
@2.0.1.RELEASE
-###reactor/rx/action/combination/MergeAction

+###reactor/rx/action/combination/ConcatAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Ljava/util/List;)V
@2.0.1.RELEASE
-###reactor/rx/action/combination/ConcatAction

+###reactor/rx/action/combination/FanInSubscription$InnerSubscription
@2.0.0.RC1
+#<init>(Lorg/reactivestreams/Subscription;Lreactor/rx/action/combination/FanInAction$InnerSubscriber;)V
+#request(J)V
+#cancel()V
+#getDelegate()Lorg/reactivestreams/Subscription;
@2.0.1.RELEASE
-###reactor/rx/action/combination/FanInSubscription$InnerSubscription

+###reactor/rx/action/combination/CombineLatestAction$InnerSubscriber
@2.0.0.RC1
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/combination/CombineLatestAction$InnerSubscriber

+###reactor/rx/action/combination/FanInAction$InnerSubscriber
@2.0.0.RC1
+#cancel()V
+#accept(Ljava/lang/Long;)V
+#request(J)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
+#toString()Ljava/lang/String;
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/action/combination/FanInAction$InnerSubscriber

+###reactor/rx/action/combination/SwitchAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;)V
+#getSwitchSubscriber()Lreactor/rx/action/combination/SwitchAction$SwitchSubscriber;
+#getDispatcher()Lreactor/core/Dispatcher;
@2.0.1.RELEASE
-###reactor/rx/action/combination/SwitchAction

+###reactor/rx/action/support/NonBlocking
@2.0.0.RC1
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
@2.0.1.RELEASE
-###reactor/rx/action/support/NonBlocking

+###reactor/rx/action/support/TapAndControls
@2.0.0.RC1
+#<init>(Lreactor/fn/support/Tap;Lreactor/rx/action/Control;)V
+#start()V
+#cancel()V
+#get()Ljava/lang/Object;
+#isPublishing()Z
+#requestMore(J)V
+#debug()Lreactor/rx/StreamUtils$StreamVisitor;
@2.0.1.RELEASE
-###reactor/rx/action/support/TapAndControls

+###reactor/rx/action/support/SerializedSubscriber
@2.0.0.RC1
+#create(Lorg/reactivestreams/Subscriber;)Lreactor/rx/action/support/SerializedSubscriber;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#onNext(Ljava/lang/Object;)V
+#request(J)V
+#cancel()V
+#delegate()Lorg/reactivestreams/Subscriber;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/support/SerializedSubscriber

+###reactor/rx/action/support/DefaultSubscriber
@2.0.0.RC1
+#<init>()V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#isReactivePull(Lreactor/core/Dispatcher;J)Z
+#getCapacity()J
@2.0.1.RELEASE
-###reactor/rx/action/support/DefaultSubscriber

+###reactor/rx/action/error/RetryWhenAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Lreactor/fn/Function;Lorg/reactivestreams/Publisher;)V
+#getDispatcher()Lreactor/core/Dispatcher;
+#onError(Ljava/lang/Throwable;)V
+#retryStream()Lreactor/rx/broadcast/Broadcaster;
@2.0.1.RELEASE
-###reactor/rx/action/error/RetryWhenAction

+###reactor/rx/action/error/FallbackAction
@2.0.0.RC1
+#<init>(Lorg/reactivestreams/Publisher;)V
@2.0.1.RELEASE
-###reactor/rx/action/error/FallbackAction

+###reactor/rx/action/error/ErrorReturnAction
@2.0.0.RC1
+#<init>(Lreactor/bus/selector/ClassSelector;Lreactor/fn/Function;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/error/ErrorReturnAction

+###reactor/rx/action/error/TimeoutAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;Lorg/reactivestreams/Publisher;Lreactor/fn/timer/Timer;J)V
+#cancel()V
+#doComplete()V
@2.0.1.RELEASE
-###reactor/rx/action/error/TimeoutAction

+###reactor/rx/action/error/RetryAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;ILreactor/fn/Predicate;Lorg/reactivestreams/Publisher;)V
+#onError(Ljava/lang/Throwable;)V
+#requestMore(J)V
+#getDispatcher()Lreactor/core/Dispatcher;
@2.0.1.RELEASE
-###reactor/rx/action/error/RetryAction

+###reactor/rx/action/error/ErrorWithValueAction
@2.0.0.RC1
+#<init>(Lreactor/bus/selector/ClassSelector;Lreactor/fn/BiConsumer;Lorg/reactivestreams/Publisher;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/error/ErrorWithValueAction

+###reactor/rx/action/error/IgnoreErrorAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Predicate;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/error/IgnoreErrorAction

+###reactor/rx/action/error/ErrorAction
@2.0.0.RC1
+#<init>(Lreactor/bus/selector/ClassSelector;Lreactor/fn/Consumer;Lorg/reactivestreams/Publisher;)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/error/ErrorAction

+###reactor/rx/action/conditional/ExistsAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Predicate;)V
@2.0.1.RELEASE
-###reactor/rx/action/conditional/ExistsAction

+###reactor/rx/action/pair/ScanByKeyAction
@2.0.0.RC1
+#<init>(Lreactor/fn/BiFunction;Lreactor/rx/stream/MapStream;)V
+#<init>(Lreactor/fn/BiFunction;Ljava/util/Map;Lorg/reactivestreams/Publisher;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/rx/action/pair/ScanByKeyAction

+###reactor/rx/action/pair/ReduceByKeyAction
@2.0.0.RC1
+#<init>(Lreactor/fn/BiFunction;Lreactor/rx/stream/MapStream;)V
+#<init>(Lreactor/fn/BiFunction;Ljava/util/Map;Lorg/reactivestreams/Publisher;)V
@2.0.1.RELEASE
-###reactor/rx/action/pair/ReduceByKeyAction

+###reactor/rx/action/transformation/DefaultIfEmptyAction
@2.0.0.RC1
+#<init>(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/action/transformation/DefaultIfEmptyAction

+###reactor/rx/action/transformation/SplitAction
@2.0.0.RC1
+#<init>()V
@2.0.1.RELEASE
-###reactor/rx/action/transformation/SplitAction

+###reactor/rx/action/transformation/MapAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Function;)V
@2.0.1.RELEASE
-###reactor/rx/action/transformation/MapAction

+###reactor/rx/action/transformation/MaterializeAction
@2.0.0.RC1
+#<init>()V
@2.0.1.RELEASE
-###reactor/rx/action/transformation/MaterializeAction

+###reactor/rx/action/transformation/DematerializeAction
@2.0.0.RC1
+#<init>()V
@2.0.1.RELEASE
-###reactor/rx/action/transformation/DematerializeAction

+###reactor/rx/action/transformation/ScanAction
@2.0.0.RC1
+#<init>(Ljava/lang/Object;Lreactor/fn/BiFunction;)V
@2.0.1.RELEASE
-###reactor/rx/action/transformation/ScanAction

+###reactor/rx/action/transformation/GroupByAction
@2.0.0.RC1
+#<init>(Lreactor/Environment;Lreactor/fn/Function;Lreactor/core/Dispatcher;)V
+#groupByMap()Ljava/util/Map;
+#requestMore(J)V
+#getDispatcher()Lreactor/core/Dispatcher;
+#getEnvironment()Lreactor/Environment;
@2.0.1.RELEASE
-###reactor/rx/action/transformation/GroupByAction

+###reactor/rx/action/aggregation/WindowShiftAction
@2.0.0.RC1
+#<init>(Lreactor/Environment;Lreactor/core/Dispatcher;II)V
+#<init>(Lreactor/Environment;Lreactor/core/Dispatcher;IIJJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#requestMore(J)V
+#cancel()V
+#getEnvironment()Lreactor/Environment;
+#getDispatcher()Lreactor/core/Dispatcher;
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/WindowShiftAction

+###reactor/rx/action/aggregation/BufferShiftWhenAction
@2.0.0.RC1
+#<init>(Lorg/reactivestreams/Publisher;Lreactor/fn/Supplier;)V
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/BufferShiftWhenAction

+###reactor/rx/action/aggregation/LastAction
@2.0.0.RC1
+#<init>()V
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/LastAction

+###reactor/rx/action/aggregation/SortAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;ILjava/util/Comparator;)V
+#nextCallback(Ljava/lang/Object;)V
+#flushCallback(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/SortAction

+###reactor/rx/action/aggregation/WindowWhenAction
@2.0.0.RC1
+#<init>(Lreactor/Environment;Lreactor/core/Dispatcher;Lreactor/fn/Supplier;)V
+#currentWindow()Lreactor/rx/broadcast/Broadcaster;
+#getEnvironment()Lreactor/Environment;
+#getDispatcher()Lreactor/core/Dispatcher;
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/WindowWhenAction

+###reactor/rx/action/aggregation/BufferWhenAction
@2.0.0.RC1
+#<init>(Lreactor/fn/Supplier;)V
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/BufferWhenAction

+###reactor/rx/action/aggregation/BufferShiftAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;II)V
+#<init>(Lreactor/core/Dispatcher;IIJJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#requestMore(J)V
+#cancel()V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/BufferShiftAction

+###reactor/rx/action/aggregation/SampleAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;I)V
+#<init>(Lreactor/core/Dispatcher;ZIJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#<init>(Lreactor/core/Dispatcher;IZ)V
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/SampleAction

+###reactor/rx/action/aggregation/CacheAction
@2.0.0.RC1
+#<init>()V
+#doNext(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/CacheAction

+###reactor/rx/action/aggregation/WindowShiftWhenAction
@2.0.0.RC1
+#<init>(Lreactor/Environment;Lreactor/core/Dispatcher;Lorg/reactivestreams/Publisher;Lreactor/fn/Supplier;)V
+#getEnvironment()Lreactor/Environment;
+#getDispatcher()Lreactor/core/Dispatcher;
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/WindowShiftWhenAction

+###reactor/rx/action/aggregation/BufferAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;I)V
+#<init>(Lreactor/core/Dispatcher;IJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#nextCallback(Ljava/lang/Object;)V
+#flushCallback(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/BufferAction

+###reactor/rx/action/aggregation/BatchAction
@2.0.0.RC1
+#<init>(Lreactor/core/Dispatcher;IZZZ)V
+#<init>(Lreactor/core/Dispatcher;IZZZJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#cancel()V
+#toString()Ljava/lang/String;
+#getDispatcher()Lreactor/core/Dispatcher;
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/BatchAction

+###reactor/rx/action/aggregation/WindowAction
@2.0.0.RC1
+#<init>(Lreactor/Environment;Lreactor/core/Dispatcher;I)V
+#<init>(Lreactor/Environment;Lreactor/core/Dispatcher;IJLjava/util/concurrent/TimeUnit;Lreactor/fn/timer/Timer;)V
+#currentWindow()Lreactor/rx/subscription/ReactiveSubscription;
+#getEnvironment()Lreactor/Environment;
@2.0.1.RELEASE
-###reactor/rx/action/aggregation/WindowAction

+###reactor/io/IOStreams
@2.0.0.RC1
+#persistentMap(Ljava/lang/String;)Lreactor/rx/stream/MapStream;
+#persistentMap(Ljava/lang/String;Z)Lreactor/rx/stream/MapStream;
+#persistentMapReader(Ljava/lang/String;)Lreactor/rx/stream/MapStream;
+#decode(Lreactor/io/codec/Codec;Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
@2.0.1.RELEASE
-###reactor/io/IOStreams

+###reactor/io/routing/JsonPathSelector
@2.0.0.RC1
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;[Lcom/jayway/jsonpath/Filter;)V
+#<init>(Ljava/lang/String;[Lcom/jayway/jsonpath/Filter;)V
+#J(Ljava/lang/String;[Lcom/jayway/jsonpath/Filter;)Lreactor/bus/selector/Selector;
+#jsonPathSelector(Ljava/lang/String;[Lcom/jayway/jsonpath/Filter;)Lreactor/bus/selector/Selector;
+#matches(Ljava/lang/Object;)Z
@2.0.1.RELEASE
-###reactor/io/routing/JsonPathSelector

+###reactor/io/queue/IndexedChronicleQueuePersistor
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lreactor/io/codec/Codec;ZZLnet/openhft/chronicle/ChronicleQueueBuilder;)V
+#close()V
+#lastId()J
+#size()J
+#hasNext()Z
+#offer(Ljava/lang/Object;)Ljava/lang/Long;
+#offerAll(Ljava/util/Collection;)Ljava/lang/Long;
+#get(Ljava/lang/Long;)Ljava/lang/Object;
+#codec()Lreactor/io/codec/Codec;
+#reader()Lnet/openhft/chronicle/ExcerptTailer;
+#remove()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
@2.0.1.RELEASE
-###reactor/io/queue/IndexedChronicleQueuePersistor

+###reactor/io/stream/ChronicleReaderStream
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lnet/openhft/chronicle/Chronicle;)V
+#<init>(Ljava/lang/String;Lnet/openhft/chronicle/Chronicle;Lreactor/io/codec/Codec;Lreactor/io/codec/Codec;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#hashCode()I
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#localCache()Ljava/util/Map;
+#chronicle()Lnet/openhft/chronicle/Chronicle;
+#keyCodec()Lreactor/io/codec/Codec;
+#valueCodec()Lreactor/io/codec/Codec;
+#values()Ljava/util/Collection;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/io/stream/ChronicleReaderStream

+###reactor/io/stream/DecoderStream
@2.0.0.RC1
+#<init>(Lreactor/io/codec/Codec;Lorg/reactivestreams/Publisher;)V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
@2.0.1.RELEASE
-###reactor/io/stream/DecoderStream

+###reactor/io/stream/ChronicleStream
@2.0.0.RC1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ILnet/openhft/chronicle/Chronicle;)V
+#<init>(Ljava/lang/String;ILnet/openhft/chronicle/Chronicle;Lreactor/io/codec/Codec;Lreactor/io/codec/Codec;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#deleteOnExit()V
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#clear()V
@2.0.1.RELEASE
-###reactor/io/stream/ChronicleStream

+###reactor/fn/timer/HashWheelTimer$TimerRegistration
@2.0.0.RC1
+#<init>(JJLreactor/fn/Consumer;J)V
+#decrement()V
+#ready()Z
+#run()V
+#reset()V
+#cancel()Lreactor/bus/registry/Registration;
+#isCancelled()Z
+#pause()Lreactor/bus/registry/Registration;
+#isPaused()Z
+#resume()Lreactor/bus/registry/Registration;
+#getSelector()Lreactor/bus/selector/Selector;
+#getObject()Ljava/lang/Object;
+#cancelAfterUse()Lreactor/fn/timer/HashWheelTimer$TimerRegistration;
+#isCancelAfterUse()Z
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
+#resume()Lreactor/fn/Pausable;
+#pause()Lreactor/fn/Pausable;
+#cancel()Lreactor/fn/Pausable;
+#cancelAfterUse()Lreactor/bus/registry/Registration;
@2.0.1.RELEASE
-###reactor/fn/timer/HashWheelTimer$TimerRegistration

+###reactor/fn/timer/SimpleHashWheelTimer
@2.0.0.RC1
+#<init>()V
+#<init>(I)V
+#getResolution()J
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;J)Lreactor/bus/registry/Registration;
+#schedule(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
+#submit(Lreactor/fn/Consumer;JLjava/util/concurrent/TimeUnit;)Lreactor/bus/registry/Registration;
+#submit(Lreactor/fn/Consumer;)Lreactor/bus/registry/Registration;
+#cancel()V
@2.0.1.RELEASE
-###reactor/fn/timer/SimpleHashWheelTimer

+###reactor/fn/support/CancelConsumerException
@2.0.0.RC1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#fillInStackTrace()Ljava/lang/Throwable;
@2.0.1.RELEASE
-###reactor/fn/support/CancelConsumerException

+###reactor/core/alloc/PartitionedAllocator
@2.0.0.RC1
+#allocate()Lreactor/core/alloc/Reference;
+#allocateBatch(I)Ljava/util/List;
+#release(Ljava/util/List;)V
@2.0.1.RELEASE
-###reactor/core/alloc/PartitionedAllocator

+###reactor/core/alloc/ThreadPartitionedAllocator
@2.0.0.RC1
+#<init>(Lreactor/fn/Supplier;)V
@2.0.1.RELEASE
-###reactor/core/alloc/ThreadPartitionedAllocator

+###reactor/core/alloc/factory/EventFactorySupplier
@2.0.0.RC1
+#<init>(Ljava/lang/Class;)V
+#get()Lreactor/bus/Event;
+#get()Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/core/alloc/factory/EventFactorySupplier

+###reactor/core/dispatch/forkjoin/ForkJoinPool
@2.0.0.RC1
+#<init>(Lreactor/Environment;)V
+#<init>(Lreactor/Environment;Lreactor/core/Dispatcher;Ljava/util/concurrent/Executor;)V
+#join([Lreactor/fn/Function;)Lreactor/core/dispatch/forkjoin/ForkJoinTask;
+#join(Ljava/util/Collection;)Lreactor/core/dispatch/forkjoin/ForkJoinTask;
+#fork()Lreactor/core/dispatch/forkjoin/ForkJoinTask;
@2.0.1.RELEASE
-###reactor/core/dispatch/forkjoin/ForkJoinPool

+###reactor/core/dispatch/forkjoin/ForkJoinTask
@2.0.0.RC1
+#getTasks()Lcom/gs/collections/api/list/MutableList;
+#add(Lreactor/fn/Function;)Lreactor/core/dispatch/forkjoin/ForkJoinTask;
+#compose()Lreactor/rx/action/Action;
+#submit()V
+#submit(Ljava/lang/Object;)V
+#accept(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/core/dispatch/forkjoin/ForkJoinTask

+###reactor/core/dispatch/processor/Operation
@2.0.0.RC1
+#get()Ljava/lang/Object;
+#commit()V
@2.0.1.RELEASE
-###reactor/core/dispatch/processor/Operation

+###reactor/core/dispatch/processor/Processor
@2.0.0.RC1
+#<init>(Lreactor/fn/Supplier;Lreactor/fn/Consumer;Lreactor/bus/registry/Registry;Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;ZI)V
+#shutdown()V
+#prepare()Lreactor/core/dispatch/processor/Operation;
+#commit(Ljava/util/List;)Lreactor/core/dispatch/processor/Processor;
+#batch(ILreactor/fn/Consumer;)Lreactor/core/dispatch/processor/Processor;
+#get()Lreactor/core/dispatch/processor/Operation;
+#get()Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/core/dispatch/processor/Processor

+###reactor/core/dispatch/processor/spec/ProcessorSpec
@2.0.0.RC1
+#<init>()V
+#multiThreadedProducer()Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#singleThreadedProducer()Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#dataBufferSize(I)Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#dataSupplier(Lreactor/fn/Supplier;)Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#waitStrategy(Lreactor/jarjar/com/lmax/disruptor/WaitStrategy;)Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#blockingWaitStrategy()Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#sleepingWaitStrategy()Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#yieldingWaitStrategy()Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#busySpinWaitStrategy()Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#consume(Lreactor/fn/Consumer;)Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#when(Ljava/lang/Class;Lreactor/fn/Consumer;)Lreactor/core/dispatch/processor/spec/ProcessorSpec;
+#get()Lreactor/core/dispatch/processor/Processor;
+#get()Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/core/dispatch/processor/spec/ProcessorSpec

+###reactor/core/support/PartitionedReferencePile
@2.0.0.RC1
+#<init>(Lreactor/fn/Supplier;)V
+#<init>(ILreactor/fn/Supplier;)V
+#get()Ljava/lang/Object;
+#collect()Lcom/gs/collections/api/set/ImmutableSet;
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/core/support/PartitionedReferencePile

+###reactor/core/support/Supports
@2.0.0.RC1
+#supports(Ljava/lang/Object;)Z
@2.0.1.RELEASE
-###reactor/core/support/Supports

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$Action
@2.0.0.RC1
+#apply(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$Action

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$BiAction
@2.0.0.RC1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$BiAction

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun
@2.0.0.RC1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ConcurrentHashMapSpliterator
@2.0.0.RC1
+#trySplit()Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$ConcurrentHashMapSpliterator;
+#estimateSize()J
+#forEachRemaining(Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#tryAdvance(Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)Z
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ConcurrentHashMapSpliterator

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$DoubleByDoubleToDouble
@2.0.0.RC1
+#apply(DD)D
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$DoubleByDoubleToDouble

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun
@2.0.0.RC1
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$IntByIntToInt
@2.0.0.RC1
+#apply(II)I
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$IntByIntToInt

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$KeySetView
@2.0.0.RC1
+#getMappedValue()Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#spliterator()Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$ConcurrentHashMapSpliterator;
+#forEach(Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#getMap()Lreactor/jarjar/jsr166e/ConcurrentHashMapV8;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$KeySetView

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$LongByLongToLong
@2.0.0.RC1
+#apply(JJ)J
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$LongByLongToLong

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToDouble
@2.0.0.RC1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)D
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToDouble

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToInt
@2.0.0.RC1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToInt

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToLong
@2.0.0.RC1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)J
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToLong

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToDouble
@2.0.0.RC1
+#apply(Ljava/lang/Object;)D
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToDouble

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToInt
@2.0.0.RC1
+#apply(Ljava/lang/Object;)I
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToInt

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToLong
@2.0.0.RC1
+#apply(Ljava/lang/Object;)J
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToLong

+###reactor/jarjar/jsr166e/ConcurrentHashMapV8
@2.0.0.RC1
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Map;)V
+#<init>(IF)V
+#<init>(IFI)V
+#size()I
+#isEmpty()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#keySet()Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$KeySetView;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#forEach(Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiAction;)V
+#replaceAll(Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)V
+#computeIfAbsent(Ljava/lang/Object;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#compute(Ljava/lang/Object;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;Ljava/lang/Object;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z[deprecated]
+#keys()Ljava/util/Enumeration;
+#elements()Ljava/util/Enumeration;
+#mappingCount()J
+#newKeySet()Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$KeySetView;
+#newKeySet(I)Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$KeySetView;
+#keySet(Ljava/lang/Object;)Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$KeySetView;
+#forEach(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiAction;)V
+#forEach(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#search(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#reduce(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#reduceToDouble(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToDouble;DLreactor/jarjar/jsr166e/ConcurrentHashMapV8$DoubleByDoubleToDouble;)D
+#reduceToLong(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToLong;JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$LongByLongToLong;)J
+#reduceToInt(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectByObjectToInt;ILreactor/jarjar/jsr166e/ConcurrentHashMapV8$IntByIntToInt;)I
+#forEachKey(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#forEachKey(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#searchKeys(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;)Ljava/lang/Object;
+#reduceKeys(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#reduceKeys(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#reduceKeysToDouble(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToDouble;DLreactor/jarjar/jsr166e/ConcurrentHashMapV8$DoubleByDoubleToDouble;)D
+#reduceKeysToLong(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToLong;JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$LongByLongToLong;)J
+#reduceKeysToInt(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToInt;ILreactor/jarjar/jsr166e/ConcurrentHashMapV8$IntByIntToInt;)I
+#forEachValue(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#forEachValue(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#searchValues(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;)Ljava/lang/Object;
+#reduceValues(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#reduceValues(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#reduceValuesToDouble(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToDouble;DLreactor/jarjar/jsr166e/ConcurrentHashMapV8$DoubleByDoubleToDouble;)D
+#reduceValuesToLong(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToLong;JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$LongByLongToLong;)J
+#reduceValuesToInt(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToInt;ILreactor/jarjar/jsr166e/ConcurrentHashMapV8$IntByIntToInt;)I
+#forEachEntry(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#forEachEntry(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$Action;)V
+#searchEntries(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;)Ljava/lang/Object;
+#reduceEntries(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/util/Map$Entry;
+#reduceEntries(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$Fun;Lreactor/jarjar/jsr166e/ConcurrentHashMapV8$BiFun;)Ljava/lang/Object;
+#reduceEntriesToDouble(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToDouble;DLreactor/jarjar/jsr166e/ConcurrentHashMapV8$DoubleByDoubleToDouble;)D
+#reduceEntriesToLong(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToLong;JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$LongByLongToLong;)J
+#reduceEntriesToInt(JLreactor/jarjar/jsr166e/ConcurrentHashMapV8$ObjectToInt;ILreactor/jarjar/jsr166e/ConcurrentHashMapV8$IntByIntToInt;)I
+#keySet()Ljava/util/Set;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ConcurrentHashMapV8

+###reactor/jarjar/jsr166e/CountedCompleter
@2.0.0.RC1
+#compute()V
+#onCompletion(Lreactor/jarjar/jsr166e/CountedCompleter;)V
+#onExceptionalCompletion(Ljava/lang/Throwable;Lreactor/jarjar/jsr166e/CountedCompleter;)Z
+#getCompleter()Lreactor/jarjar/jsr166e/CountedCompleter;
+#getPendingCount()I
+#setPendingCount(I)V
+#addToPendingCount(I)V
+#compareAndSetPendingCount(II)Z
+#decrementPendingCountUnlessZero()I
+#getRoot()Lreactor/jarjar/jsr166e/CountedCompleter;
+#tryComplete()V
+#propagateCompletion()V
+#complete(Ljava/lang/Object;)V
+#firstComplete()Lreactor/jarjar/jsr166e/CountedCompleter;
+#nextComplete()Lreactor/jarjar/jsr166e/CountedCompleter;
+#quietlyCompleteRoot()V
+#getRawResult()Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/CountedCompleter

+###reactor/jarjar/jsr166e/DoubleAdder
@2.0.0.RC1
+#<init>()V
+#add(D)V
+#sum()D
+#reset()V
+#sumThenReset()D
+#toString()Ljava/lang/String;
+#doubleValue()D
+#longValue()J
+#intValue()I
+#floatValue()F
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/DoubleAdder

+###reactor/jarjar/jsr166e/DoubleMaxUpdater
@2.0.0.RC1
+#<init>()V
+#update(D)V
+#max()D
+#reset()V
+#maxThenReset()D
+#toString()Ljava/lang/String;
+#doubleValue()D
+#longValue()J
+#intValue()I
+#floatValue()F
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/DoubleMaxUpdater

+###reactor/jarjar/jsr166e/ForkJoinPool$ForkJoinWorkerThreadFactory
@2.0.0.RC1
+#newThread(Lreactor/jarjar/jsr166e/ForkJoinPool;)Lreactor/jarjar/jsr166e/ForkJoinWorkerThread;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ForkJoinPool$ForkJoinWorkerThreadFactory

+###reactor/jarjar/jsr166e/ForkJoinPool$ManagedBlocker
@2.0.0.RC1
+#block()Z
+#isReleasable()Z
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ForkJoinPool$ManagedBlocker

+###reactor/jarjar/jsr166e/ForkJoinPool
@2.0.0.RC1
+#<init>()V
+#<init>(I)V
+#<init>(ILreactor/jarjar/jsr166e/ForkJoinPool$ForkJoinWorkerThreadFactory;Ljava/lang/Thread$UncaughtExceptionHandler;Z)V
+#commonPool()Lreactor/jarjar/jsr166e/ForkJoinPool;
+#invoke(Lreactor/jarjar/jsr166e/ForkJoinTask;)Ljava/lang/Object;
+#execute(Lreactor/jarjar/jsr166e/ForkJoinTask;)V
+#execute(Ljava/lang/Runnable;)V
+#submit(Lreactor/jarjar/jsr166e/ForkJoinTask;)Lreactor/jarjar/jsr166e/ForkJoinTask;
+#submit(Ljava/util/concurrent/Callable;)Lreactor/jarjar/jsr166e/ForkJoinTask;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Lreactor/jarjar/jsr166e/ForkJoinTask;
+#submit(Ljava/lang/Runnable;)Lreactor/jarjar/jsr166e/ForkJoinTask;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#getFactory()Lreactor/jarjar/jsr166e/ForkJoinPool$ForkJoinWorkerThreadFactory;
+#getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;
+#getParallelism()I
+#getCommonPoolParallelism()I
+#getPoolSize()I
+#getAsyncMode()Z
+#getRunningThreadCount()I
+#getActiveThreadCount()I
+#isQuiescent()Z
+#getStealCount()J
+#getQueuedTaskCount()J
+#getQueuedSubmissionCount()I
+#hasQueuedSubmissions()Z
+#toString()Ljava/lang/String;
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isTerminated()Z
+#isTerminating()Z
+#isShutdown()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#awaitQuiescence(JLjava/util/concurrent/TimeUnit;)Z
+#managedBlock(Lreactor/jarjar/jsr166e/ForkJoinPool$ManagedBlocker;)V
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ForkJoinPool

+###reactor/jarjar/jsr166e/ForkJoinTask
@2.0.0.RC1
+#<init>()V
+#fork()Lreactor/jarjar/jsr166e/ForkJoinTask;
+#join()Ljava/lang/Object;
+#invoke()Ljava/lang/Object;
+#invokeAll(Lreactor/jarjar/jsr166e/ForkJoinTask;Lreactor/jarjar/jsr166e/ForkJoinTask;)V
+#invokeAll([Lreactor/jarjar/jsr166e/ForkJoinTask;)V
+#invokeAll(Ljava/util/Collection;)Ljava/util/Collection;
+#cancel(Z)Z
+#isDone()Z
+#isCancelled()Z
+#isCompletedAbnormally()Z
+#isCompletedNormally()Z
+#getException()Ljava/lang/Throwable;
+#completeExceptionally(Ljava/lang/Throwable;)V
+#complete(Ljava/lang/Object;)V
+#quietlyComplete()V
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#quietlyJoin()V
+#quietlyInvoke()V
+#helpQuiesce()V
+#reinitialize()V
+#getPool()Lreactor/jarjar/jsr166e/ForkJoinPool;
+#inForkJoinPool()Z
+#tryUnfork()Z
+#getQueuedTaskCount()I
+#getSurplusQueuedTaskCount()I
+#getRawResult()Ljava/lang/Object;
+#getForkJoinTaskTag()S
+#setForkJoinTaskTag(S)S
+#compareAndSetForkJoinTaskTag(SS)Z
+#adapt(Ljava/lang/Runnable;)Lreactor/jarjar/jsr166e/ForkJoinTask;
+#adapt(Ljava/lang/Runnable;Ljava/lang/Object;)Lreactor/jarjar/jsr166e/ForkJoinTask;
+#adapt(Ljava/util/concurrent/Callable;)Lreactor/jarjar/jsr166e/ForkJoinTask;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ForkJoinTask

+###reactor/jarjar/jsr166e/ForkJoinWorkerThread
@2.0.0.RC1
+#getPool()Lreactor/jarjar/jsr166e/ForkJoinPool;
+#getPoolIndex()I
+#run()V
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ForkJoinWorkerThread

+###reactor/jarjar/jsr166e/LongAdder
@2.0.0.RC1
+#<init>()V
+#add(J)V
+#increment()V
+#decrement()V
+#sum()J
+#reset()V
+#sumThenReset()J
+#toString()Ljava/lang/String;
+#longValue()J
+#intValue()I
+#floatValue()F
+#doubleValue()D
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/LongAdder

+###reactor/jarjar/jsr166e/LongAdderTable
@2.0.0.RC1
+#<init>()V
+#install(Ljava/lang/Object;)Lreactor/jarjar/jsr166e/LongAdder;
+#add(Ljava/lang/Object;J)V
+#increment(Ljava/lang/Object;)V
+#decrement(Ljava/lang/Object;)V
+#sum(Ljava/lang/Object;)J
+#reset(Ljava/lang/Object;)V
+#sumThenReset(Ljava/lang/Object;)J
+#sumAll()J
+#resetAll()V
+#sumThenResetAll()J
+#remove(Ljava/lang/Object;)V
+#removeAll()V
+#keySet()Ljava/util/Set;
+#entrySet()Ljava/util/Set;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/LongAdderTable

+###reactor/jarjar/jsr166e/LongMaxUpdater
@2.0.0.RC1
+#<init>()V
+#update(J)V
+#max()J
+#reset()V
+#maxThenReset()J
+#toString()Ljava/lang/String;
+#longValue()J
+#intValue()I
+#floatValue()F
+#doubleValue()D
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/LongMaxUpdater

+###reactor/jarjar/jsr166e/RecursiveAction
@2.0.0.RC1
+#<init>()V
+#getRawResult()Ljava/lang/Void;
+#getRawResult()Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/RecursiveAction

+###reactor/jarjar/jsr166e/RecursiveTask
@2.0.0.RC1
+#<init>()V
+#getRawResult()Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/RecursiveTask

+###reactor/jarjar/jsr166e/StampedLock
@2.0.0.RC1
+#<init>()V
+#writeLock()J
+#tryWriteLock()J
+#tryWriteLock(JLjava/util/concurrent/TimeUnit;)J
+#writeLockInterruptibly()J
+#readLock()J
+#tryReadLock()J
+#tryReadLock(JLjava/util/concurrent/TimeUnit;)J
+#readLockInterruptibly()J
+#tryOptimisticRead()J
+#validate(J)Z
+#unlockWrite(J)V
+#unlockRead(J)V
+#unlock(J)V
+#tryConvertToWriteLock(J)J
+#tryConvertToReadLock(J)J
+#tryConvertToOptimisticRead(J)J
+#tryUnlockWrite()Z
+#tryUnlockRead()Z
+#isWriteLocked()Z
+#isReadLocked()Z
+#getReadLockCount()I
+#toString()Ljava/lang/String;
+#asReadLock()Ljava/util/concurrent/locks/Lock;
+#asWriteLock()Ljava/util/concurrent/locks/Lock;
+#asReadWriteLock()Ljava/util/concurrent/locks/ReadWriteLock;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/StampedLock

+###reactor/jarjar/jsr166e/ThreadLocalRandom
@2.0.0.RC1
+#current()Lreactor/jarjar/jsr166e/ThreadLocalRandom;
+#setSeed(J)V
+#nextInt(II)I
+#nextLong(J)J
+#nextLong(JJ)J
+#nextDouble(D)D
+#nextDouble(DD)D
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/ThreadLocalRandom

+###reactor/jarjar/jsr166e/extra/AtomicDouble
@2.0.0.RC1
+#<init>(D)V
+#<init>()V
+#get()D
+#set(D)V
+#lazySet(D)V
+#getAndSet(D)D
+#compareAndSet(DD)Z
+#weakCompareAndSet(DD)Z
+#getAndAdd(D)D
+#addAndGet(D)D
+#toString()Ljava/lang/String;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/extra/AtomicDouble

+###reactor/jarjar/jsr166e/extra/AtomicDoubleArray
@2.0.0.RC1
+#<init>(I)V
+#<init>([D)V
+#length()I
+#get(I)D
+#set(ID)V
+#lazySet(ID)V
+#getAndSet(ID)D
+#compareAndSet(IDD)Z
+#weakCompareAndSet(IDD)Z
+#getAndAdd(ID)D
+#addAndGet(ID)D
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/extra/AtomicDoubleArray

+###reactor/jarjar/jsr166e/extra/ReadMostlyVector$Action
@2.0.0.RC1
+#apply(Ljava/lang/Object;)V
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/extra/ReadMostlyVector$Action

+###reactor/jarjar/jsr166e/extra/ReadMostlyVector
@2.0.0.RC1
+#<init>(II)V
+#<init>(I)V
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#add(Ljava/lang/Object;)Z
+#add(ILjava/lang/Object;)V
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#equals(Ljava/lang/Object;)Z
+#get(I)Ljava/lang/Object;
+#hashCode()I
+#indexOf(Ljava/lang/Object;)I
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#remove(I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#size()I
+#subList(II)Ljava/util/List;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#addIfAbsent(Ljava/lang/Object;)Z
+#addAllAbsent(Ljava/util/Collection;)I
+#snapshotIterator()Ljava/util/Iterator;
+#forEachReadOnly(Lreactor/jarjar/jsr166e/extra/ReadMostlyVector$Action;)V
+#firstElement()Ljava/lang/Object;
+#lastElement()Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;I)I
+#lastIndexOf(Ljava/lang/Object;I)I
+#setSize(I)V
+#copyInto([Ljava/lang/Object;)V
+#trimToSize()V
+#ensureCapacity(I)V
+#elements()Ljava/util/Enumeration;
+#capacity()I
+#elementAt(I)Ljava/lang/Object;
+#setElementAt(Ljava/lang/Object;I)V
+#removeElementAt(I)V
+#insertElementAt(Ljava/lang/Object;I)V
+#addElement(Ljava/lang/Object;)V
+#removeElement(Ljava/lang/Object;)Z
+#removeAllElements()V
+#clone()Lreactor/jarjar/jsr166e/extra/ReadMostlyVector;
+#clone()Ljava/lang/Object;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/extra/ReadMostlyVector

+###reactor/jarjar/jsr166e/extra/SequenceLock
@2.0.0.RC1
+#<init>()V
+#<init>(I)V
+#getSequence()J
+#awaitAvailability()J
+#tryAwaitAvailability(JLjava/util/concurrent/TimeUnit;)J
+#lock()V
+#lockInterruptibly()V
+#tryLock()Z
+#tryLock(JLjava/util/concurrent/TimeUnit;)Z
+#unlock()V
+#newCondition()Ljava/util/concurrent/locks/Condition;
+#getHoldCount()J
+#isHeldByCurrentThread()Z
+#isLocked()Z
+#hasQueuedThreads()Z
+#hasQueuedThread(Ljava/lang/Thread;)Z
+#getQueueLength()I
+#toString()Ljava/lang/String;
@2.0.1.RELEASE
-###reactor/jarjar/jsr166e/extra/SequenceLock

+###reactor/core/publisher/MutableNextSignal
@3.0.4.RELEASE
+#undefined()Lreactor/core/publisher/MutableNextSignal;
+#of(Ljava/lang/Object;)Lreactor/core/publisher/MutableNextSignal;
+#getThrowable()Ljava/lang/Throwable;
+#getSubscription()Lorg/reactivestreams/Subscription;
+#get()Ljava/lang/Object;
+#getType()Lreactor/core/publisher/SignalType;
+#mutate(Ljava/lang/Object;)Lreactor/core/publisher/Signal;
@3.1.0.RELEASE
-###reactor/core/publisher/MutableNextSignal

+###reactor/core/scheduler/RejectedDisposable
@3.0.4.RELEASE
+#<init>()V
+#dispose()V
+#toString()Ljava/lang/String;
@3.0.5.RELEASE
-###reactor/core/scheduler/RejectedDisposable

+###reactor/util/concurrent/RingBuffer
@3.0.0.RC1
+#<init>()V
+#createMultiProducer(Ljava/util/function/Supplier;ILreactor/util/concurrent/WaitStrategy;)Lreactor/util/concurrent/RingBuffer;
+#createMultiProducer(Ljava/util/function/Supplier;ILreactor/util/concurrent/WaitStrategy;Ljava/lang/Runnable;)Lreactor/util/concurrent/RingBuffer;
+#createSingleProducer(Ljava/util/function/Supplier;I)Lreactor/util/concurrent/RingBuffer;
+#createSingleProducer(Ljava/util/function/Supplier;ILreactor/util/concurrent/WaitStrategy;)Lreactor/util/concurrent/RingBuffer;
+#createSingleProducer(Ljava/util/function/Supplier;ILreactor/util/concurrent/WaitStrategy;Ljava/lang/Runnable;)Lreactor/util/concurrent/RingBuffer;
+#getMinimumSequence([Lreactor/util/concurrent/Sequence;J)J
+#getMinimumSequence(Lreactor/util/concurrent/Sequence;[Lreactor/util/concurrent/Sequence;J)J
+#isAlert(Ljava/lang/Throwable;)Z
+#log2(I)I
+#newSequence(J)Lreactor/util/concurrent/Sequence;
+#throwAlert()V
+#addGatingSequence(Lreactor/util/concurrent/Sequence;)V
+#bufferSize()I
+#get(J)Ljava/lang/Object;
+#getAsLong()J
+#getCursor()J
+#getMinimumGatingSequence()J
+#getMinimumGatingSequence(Lreactor/util/concurrent/Sequence;)J
+#getPending()I
+#getSequence()Lreactor/util/concurrent/Sequence;
+#getSequenceReceivers()[Lreactor/util/concurrent/Sequence;
+#newReader()Lreactor/util/concurrent/RingBufferReader;
+#next()J
+#next(I)J
+#publish(J)V
+#publish(JJ)V
+#remainingCapacity()J
+#removeGatingSequence(Lreactor/util/concurrent/Sequence;)Z
+#resetTo(J)V
+#toString()Ljava/lang/String;
+#tryNext()J
+#tryNext(I)J
@3.0.0.RELEASE
-###reactor/util/concurrent/RingBuffer

+###reactor/util/concurrent/RingBufferReader
@3.0.0.RC1
+#waitFor(J)J
+#waitFor(JLjava/lang/Runnable;)J
+#getCursor()J
+#isAlerted()Z
+#alert()V
+#signal()V
+#clearAlert()V
+#checkAlert()V
+#getAsLong()J
+#run()V
@3.0.0.RELEASE
-###reactor/util/concurrent/RingBufferReader

+###reactor/util/concurrent/Sequence
@3.0.0.RC1
+#getAsLong()J
+#set(J)V
+#setVolatile(J)V
+#compareAndSet(JJ)Z
+#incrementAndGet()J
+#addAndGet(J)J
@3.0.0.RELEASE
-###reactor/util/concurrent/Sequence

+###reactor/core/publisher/OperatorAdapter
@3.0.0.RC1
+#<init>(Lorg/reactivestreams/Subscriber;)V
+#upstream()Lorg/reactivestreams/Subscription;
+#isStarted()Z
+#downstream()Lorg/reactivestreams/Subscriber;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
+#cancel()V
+#isTerminated()Z
+#getCapacity()J
+#getPending()J
+#toString()Ljava/lang/String;
+#upstream()Ljava/lang/Object;
+#downstream()Ljava/lang/Object;
@3.0.0.RELEASE
-###reactor/core/publisher/OperatorAdapter

+###reactor/test/TestSubscriber
@3.0.0.RC1
+#await(Ljava/time/Duration;Ljava/util/function/Supplier;Ljava/util/function/BooleanSupplier;)V
+#await(Ljava/time/Duration;Ljava/lang/String;Ljava/util/function/BooleanSupplier;)V
+#create()Lreactor/test/TestSubscriber;
+#create(J)Lreactor/test/TestSubscriber;
+#subscribe(Lorg/reactivestreams/Publisher;)Lreactor/test/TestSubscriber;
+#subscribe(Lorg/reactivestreams/Publisher;J)Lreactor/test/TestSubscriber;
+#configureValuesStorage(Z)Lreactor/test/TestSubscriber;
+#configureValuesTimeout(Ljava/time/Duration;)Lreactor/test/TestSubscriber;
+#establishedFusionMode()I
+#assertComplete()Lreactor/test/TestSubscriber;
+#assertContainValues(Ljava/util/Set;)Lreactor/test/TestSubscriber;
+#assertError()Lreactor/test/TestSubscriber;
+#assertError(Ljava/lang/Class;)Lreactor/test/TestSubscriber;
+#assertErrorMessage(Ljava/lang/String;)Lreactor/test/TestSubscriber;
+#assertErrorWith(Ljava/util/function/Consumer;)Lreactor/test/TestSubscriber;
+#assertFuseableSource()Lreactor/test/TestSubscriber;
+#assertFusionEnabled()Lreactor/test/TestSubscriber;
+#assertFusionMode(I)Lreactor/test/TestSubscriber;
+#assertFusionRejected()Lreactor/test/TestSubscriber;
+#assertNoError()Lreactor/test/TestSubscriber;
+#assertNoValues()Lreactor/test/TestSubscriber;
+#assertNonFuseableSource()Lreactor/test/TestSubscriber;
+#assertNotComplete()Lreactor/test/TestSubscriber;
+#assertNotSubscribed()Lreactor/test/TestSubscriber;
+#assertNotTerminated()Lreactor/test/TestSubscriber;
+#assertSubscribed()Lreactor/test/TestSubscriber;
+#assertTerminated()Lreactor/test/TestSubscriber;
+#assertValueCount(J)Lreactor/test/TestSubscriber;
+#assertValueSequence(Ljava/lang/Iterable;)Lreactor/test/TestSubscriber;
+#assertValues([Ljava/lang/Object;)Lreactor/test/TestSubscriber;
+#assertValuesWith([Ljava/util/function/Consumer;)Lreactor/test/TestSubscriber;
+#await()Lreactor/test/TestSubscriber;
+#await(Ljava/time/Duration;)Lreactor/test/TestSubscriber;
+#awaitAndAssertNextValueCount(J)Lreactor/test/TestSubscriber;
+#awaitAndAssertNextValues([Ljava/lang/Object;)Lreactor/test/TestSubscriber;
+#awaitAndAssertNextValuesWith([Ljava/util/function/Consumer;)Lreactor/test/TestSubscriber;
+#cancel()V
+#isCancelled()Z
+#isStarted()Z
+#isTerminated()Z
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#onNext(Ljava/lang/Object;)V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#request(J)V
+#requestedFromDownstream()J
+#requestedFusionMode(I)Lreactor/test/TestSubscriber;
+#upstream()Lorg/reactivestreams/Subscription;
+#upstream()Ljava/lang/Object;
@3.0.0.RELEASE
-###reactor/test/TestSubscriber

+###reactor/fn/UnaryOperator
@2.5.0.M1
@2.5.0.M2
-###reactor/fn/UnaryOperator

+###reactor/fn/BooleanSupplier
@2.5.0.M1
+#getAsBoolean()Z
@2.5.0.M2
-###reactor/fn/BooleanSupplier

+###reactor/fn/LongSupplier
@2.5.0.M1
+#get()J
@2.5.0.M2
-###reactor/fn/LongSupplier

+###reactor/fn/LongConsumer
@2.5.0.M1
+#accept(J)V
@2.5.0.M2
-###reactor/fn/LongConsumer

+###reactor/core/subscriber/BlockingIterable
@2.5.0.M1
+#<init>(Lorg/reactivestreams/Publisher;JLreactor/fn/Supplier;)V
+#iterator()Ljava/util/Iterator;
+#getCapacity()J
+#upstream()Ljava/lang/Object;
+#getPending()J
@2.5.0.M2
-###reactor/core/subscriber/BlockingIterable

+###reactor/core/publisher/ExecutorProcessor
@2.5.0.M1
+#alive()Z
+#awaitAndShutdown()Z
+#awaitAndShutdown(JLjava/util/concurrent/TimeUnit;)Z
+#drain()Lreactor/core/publisher/Flux;
+#forceShutdown()Lreactor/core/publisher/Flux;
+#getAvailableCapacity()J
+#getError()Ljava/lang/Throwable;
+#getMode()I
+#getName()Ljava/lang/String;
+#isCancelled()Z
+#isInContext()Z
+#isStarted()Z
+#isTerminated()Z
+#isWork()Z
+#key()Ljava/lang/Object;
+#onComplete()V
+#onError(Ljava/lang/Throwable;)V
+#shutdown()V
@2.5.0.M2
-###reactor/core/publisher/ExecutorProcessor

+###reactor/core/util/Exceptions$TimerOverflowException
@2.5.0.M1
+#get()Lreactor/core/util/Exceptions$TimerOverflowException;
+#fillInStackTrace()Ljava/lang/Throwable;
@2.5.0.M2
-###reactor/core/util/Exceptions$TimerOverflowException

+###reactor/core/util/Exceptions$DuplicateOnSubscribeException
@2.5.0.M1
@2.5.0.M2
-###reactor/core/util/Exceptions$DuplicateOnSubscribeException

+###reactor/core/util/Exceptions$ValueCauseException
@2.5.0.M1
+#<init>(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
@2.5.0.M2
-###reactor/core/util/Exceptions$ValueCauseException

+###reactor/core/util/Exceptions$NullOrNegativeRequestException
@2.5.0.M1
@2.5.0.M2
-###reactor/core/util/Exceptions$NullOrNegativeRequestException

+###reactor/core/util/Exceptions$ArgumentIsNullException
@2.5.0.M1
@2.5.0.M2
-###reactor/core/util/Exceptions$ArgumentIsNullException

+###reactor/core/util/Logger$SignalKind
@2.5.0.M1
+#values()[Lreactor/core/util/Logger$SignalKind;
+#valueOf(Ljava/lang/String;)Lreactor/core/util/Logger$SignalKind;
@2.5.0.M2
-###reactor/core/util/Logger$SignalKind

+###reactor/core/state/Recyclable
@2.5.0.M1
+#recycle()V
@2.5.0.M2
-###reactor/core/state/Recyclable

+###reactor/core/state/Failurable
@2.5.0.M1
+#getError()Ljava/lang/Throwable;
@2.5.0.M2
-###reactor/core/state/Failurable

+###reactor/core/state/Groupable
@2.5.0.M1
+#key()Ljava/lang/Object;
@2.5.0.M2
-###reactor/core/state/Groupable

+###reactor/core/converter/CompletableFutureConverter
@2.5.0.M1
+#<init>()V
+#from(Lorg/reactivestreams/Publisher;)Ljava/util/concurrent/CompletableFuture;
+#fromSingle(Lorg/reactivestreams/Publisher;)Ljava/util/concurrent/CompletableFuture;
+#from(Ljava/util/concurrent/CompletableFuture;)Lreactor/core/publisher/Mono;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Ljava/util/concurrent/CompletableFuture;
+#fromSinglePublisher(Lorg/reactivestreams/Publisher;)Ljava/util/concurrent/CompletableFuture;
+#toPublisher(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#get()Ljava/lang/Class;
+#test(Ljava/lang/Object;)Z
+#apply(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Ljava/lang/Object;
+#toPublisher(Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
+#get()Ljava/lang/Object;
@2.5.0.M2
-###reactor/core/converter/CompletableFutureConverter
