
+###org/springframework/orm/jpa/JpaVendorAdapter
@2.5
+#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
+#getJpaPropertyMap()Ljava/util/Map;
+#getEntityManagerInterface()Ljava/lang/Class;
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
+#postProcessEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
@2.5.2
+#getPersistenceProviderRootPackage()Ljava/lang/String;
+#getEntityManagerFactoryInterface()Ljava/lang/Class;
@4.3.13.RELEASE
+#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@5.0.0.RELEASE
-#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@5.0.2.RELEASE
+#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@5.3.0
+#postProcessEntityManager(Ljavax/persistence/EntityManager;)V
@6.0.0
+#getPersistenceProvider()Ljakarta/persistence/spi/PersistenceProvider;
+#getJpaPropertyMap(Ljakarta/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
+#postProcessEntityManagerFactory(Ljakarta/persistence/EntityManagerFactory;)V
+#postProcessEntityManager(Ljakarta/persistence/EntityManager;)V
-#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
-#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
-#postProcessEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
-#postProcessEntityManager(Ljavax/persistence/EntityManager;)V

+###org/springframework/orm/jpa/support/SharedEntityManagerBean
@2.5
+#<init>()V
+#setEntityManagerInterface(Ljava/lang/Class;)V
+#afterPropertiesSet()V
+#getObject()Ljavax/persistence/EntityManager;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@4.0.0.RELEASE
+#setSynchronizedWithTransaction(Z)V
@6.0.0
+#getObject()Ljakarta/persistence/EntityManager;
-#getObject()Ljavax/persistence/EntityManager;

+###org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter
@2.5
+#<init>()V
+#setEntityManagerFactoryBeanName(Ljava/lang/String;)V
@3.1.0.RELEASE
+#setPersistenceUnitName(Ljava/lang/String;)V

+###org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor
@2.5
+#<init>()V
+#preHandle(Lorg/springframework/web/context/request/WebRequest;)V
+#postHandle(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/ui/ModelMap;)V
+#afterCompletion(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/Exception;)V
@3.2.0.RELEASE
+#afterConcurrentHandlingStarted(Lorg/springframework/web/context/request/WebRequest;)V

+###org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor
@2.5
+#<init>()V
+#setPersistenceUnits(Ljava/util/Map;)V
+#setPersistenceContexts(Ljava/util/Map;)V
+#setExtendedPersistenceContexts(Ljava/util/Map;)V
+#setDefaultPersistenceUnitName(Ljava/lang/String;)V
+#setOrder(I)V
+#getOrder()I
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#postProcessBeforeInstantiation(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInstantiation(Ljava/lang/Object;Ljava/lang/String;)Z
+#postProcessPropertyValues(Lorg/springframework/beans/PropertyValues;[Ljava/beans/PropertyDescriptor;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/PropertyValues;
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
@2.5.1
+#postProcessMergedBeanDefinition(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/Class;Ljava/lang/String;)V
@3.0.1.RELEASE
+#setJndiTemplate(Ljava/lang/Object;)V
+#setJndiEnvironment(Ljava/util/Properties;)V
+#setResourceRef(Z)V
@4.3.0.RELEASE
+#requiresDestruction(Ljava/lang/Object;)Z
@5.1.0.RELEASE
+#resetBeanDefinition(Ljava/lang/String;)V
+#postProcessProperties(Lorg/springframework/beans/PropertyValues;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/PropertyValues;
*#postProcessPropertyValues(Lorg/springframework/beans/PropertyValues;[Ljava/beans/PropertyDescriptor;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/PropertyValues;[deprecated]
@5.3.0
-#postProcessBeforeInstantiation(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#postProcessAfterInstantiation(Ljava/lang/Object;Ljava/lang/String;)Z
-#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
-#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@6.0.0
+#processAheadOfTime(Lorg/springframework/beans/factory/support/RegisteredBean;)Lorg/springframework/beans/factory/aot/BeanRegistrationAotContribution;
-#postProcessPropertyValues(Lorg/springframework/beans/PropertyValues;[Ljava/beans/PropertyDescriptor;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/PropertyValues;[deprecated]

+###org/springframework/orm/jpa/AbstractEntityManagerFactoryBean
@2.5
+#<init>()V
+#setPersistenceProviderClass(Ljava/lang/Class;)V
+#setPersistenceProvider(Ljavax/persistence/spi/PersistenceProvider;)V
+#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
+#setPersistenceUnitName(Ljava/lang/String;)V
+#getPersistenceUnitName()Ljava/lang/String;
+#setJpaProperties(Ljava/util/Properties;)V
+#setJpaPropertyMap(Ljava/util/Map;)V
+#getJpaPropertyMap()Ljava/util/Map;
+#setEntityManagerInterface(Ljava/lang/Class;)V
+#getEntityManagerInterface()Ljava/lang/Class;
+#setJpaDialect(Lorg/springframework/orm/jpa/JpaDialect;)V
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
+#setJpaVendorAdapter(Lorg/springframework/orm/jpa/JpaVendorAdapter;)V
+#afterPropertiesSet()V
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#getNativeEntityManagerFactory()Ljavax/persistence/EntityManagerFactory;
+#getPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
+#getDataSource()Ljavax/sql/DataSource;
+#getObject()Ljavax/persistence/EntityManagerFactory;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#destroy()V
+#getObject()Ljava/lang/Object;
@2.5.2
+#setEntityManagerFactoryInterface(Ljava/lang/Class;)V
+#getJpaVendorAdapter()Lorg/springframework/orm/jpa/JpaVendorAdapter;
@2.5.5
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#getBeanClassLoader()Ljava/lang/ClassLoader;
@3.0.1.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanName(Ljava/lang/String;)V
@4.3.0.RELEASE
+#setBootstrapExecutor(Lorg/springframework/core/task/AsyncTaskExecutor;)V
+#getBootstrapExecutor()Lorg/springframework/core/task/AsyncTaskExecutor;
@5.3.0
+#setEntityManagerInitializer(Ljava/util/function/Consumer;)V
+#createNativeEntityManager(Ljava/util/Map;)Ljavax/persistence/EntityManager;
@6.0.0
+#setPersistenceProvider(Ljakarta/persistence/spi/PersistenceProvider;)V
+#getPersistenceProvider()Ljakarta/persistence/spi/PersistenceProvider;
+#getNativeEntityManagerFactory()Ljakarta/persistence/EntityManagerFactory;
+#createNativeEntityManager(Ljava/util/Map;)Ljakarta/persistence/EntityManager;
+#getPersistenceUnitInfo()Ljakarta/persistence/spi/PersistenceUnitInfo;
+#getObject()Ljakarta/persistence/EntityManagerFactory;
-#setPersistenceProvider(Ljavax/persistence/spi/PersistenceProvider;)V
-#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
-#getNativeEntityManagerFactory()Ljavax/persistence/EntityManagerFactory;
-#createNativeEntityManager(Ljava/util/Map;)Ljavax/persistence/EntityManager;
-#getPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
-#getObject()Ljavax/persistence/EntityManagerFactory;

+###org/springframework/orm/jpa/JpaSystemException
@2.5
+#<init>(Ljavax/persistence/PersistenceException;)V
@4.0.0.RELEASE
+#<init>(Ljava/lang/RuntimeException;)V
@4.2.8.RELEASE
*#<init>(Ljavax/persistence/PersistenceException;)V[deprecated]
@4.3.2.RELEASE
*#<init>(Ljavax/persistence/PersistenceException;)V[deprecated]
@5.0.0.RELEASE
-#<init>(Ljavax/persistence/PersistenceException;)V[deprecated]

+###org/springframework/orm/jpa/JpaOptimisticLockingFailureException
@2.5
+#<init>(Ljavax/persistence/OptimisticLockException;)V
@6.0.0
+#<init>(Ljakarta/persistence/OptimisticLockException;)V
-#<init>(Ljavax/persistence/OptimisticLockException;)V

+###org/springframework/orm/jpa/EntityManagerHolder
@2.5
+#<init>(Ljavax/persistence/EntityManager;)V
+#getEntityManager()Ljavax/persistence/EntityManager;
+#setSavepointManager(Lorg/springframework/transaction/SavepointManager;)V
+#getSavepointManager()Lorg/springframework/transaction/SavepointManager;
+#clear()V
@2.5.1
-#setSavepointManager(Lorg/springframework/transaction/SavepointManager;)V
-#getSavepointManager()Lorg/springframework/transaction/SavepointManager;
@6.0.0
+#<init>(Ljakarta/persistence/EntityManager;)V
+#getEntityManager()Ljakarta/persistence/EntityManager;
-#<init>(Ljavax/persistence/EntityManager;)V
-#getEntityManager()Ljavax/persistence/EntityManager;

+###org/springframework/orm/jpa/LocalEntityManagerFactoryBean
@2.5
+#<init>()V

+###org/springframework/orm/jpa/JpaTransactionManager
@2.5
+#<init>()V
+#<init>(Ljavax/persistence/EntityManagerFactory;)V
+#setEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
+#getEntityManagerFactory()Ljavax/persistence/EntityManagerFactory;
+#setJpaProperties(Ljava/util/Properties;)V
+#setJpaPropertyMap(Ljava/util/Map;)V
+#getJpaPropertyMap()Ljava/util/Map;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setJpaDialect(Lorg/springframework/orm/jpa/JpaDialect;)V
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
+#afterPropertiesSet()V
+#getResourceFactory()Ljava/lang/Object;
@3.1.0.RELEASE
+#setPersistenceUnitName(Ljava/lang/String;)V
+#getPersistenceUnitName()Ljava/lang/String;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.3.0
+#setEntityManagerInitializer(Ljava/util/function/Consumer;)V
@6.0.0
+#<init>(Ljakarta/persistence/EntityManagerFactory;)V
+#setEntityManagerFactory(Ljakarta/persistence/EntityManagerFactory;)V
+#getEntityManagerFactory()Ljakarta/persistence/EntityManagerFactory;
-#<init>(Ljavax/persistence/EntityManagerFactory;)V
-#setEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
-#getEntityManagerFactory()Ljavax/persistence/EntityManagerFactory;

+###org/springframework/orm/jpa/EntityManagerFactoryUtils
@2.5
+#<init>()V
+#findEntityManagerFactory(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/String;)Ljavax/persistence/EntityManagerFactory;
+#getTransactionalEntityManager(Ljavax/persistence/EntityManagerFactory;)Ljavax/persistence/EntityManager;
+#getTransactionalEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;)Ljavax/persistence/EntityManager;
+#doGetTransactionalEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;)Ljavax/persistence/EntityManager;
+#convertJpaAccessExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@2.5.2
+#closeEntityManager(Ljavax/persistence/EntityManager;)V
@3.0.0.RELEASE
+#applyTransactionTimeout(Ljavax/persistence/Query;Ljavax/persistence/EntityManagerFactory;)V
@4.0.0.RELEASE
+#doGetTransactionalEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljavax/persistence/EntityManager;
@6.0.0
+#findEntityManagerFactory(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/String;)Ljakarta/persistence/EntityManagerFactory;
+#getTransactionalEntityManager(Ljakarta/persistence/EntityManagerFactory;)Ljakarta/persistence/EntityManager;
+#getTransactionalEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;)Ljakarta/persistence/EntityManager;
+#doGetTransactionalEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;)Ljakarta/persistence/EntityManager;
+#doGetTransactionalEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljakarta/persistence/EntityManager;
+#applyTransactionTimeout(Ljakarta/persistence/Query;Ljakarta/persistence/EntityManagerFactory;)V
+#closeEntityManager(Ljakarta/persistence/EntityManager;)V
-#findEntityManagerFactory(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/String;)Ljavax/persistence/EntityManagerFactory;
-#getTransactionalEntityManager(Ljavax/persistence/EntityManagerFactory;)Ljavax/persistence/EntityManager;
-#getTransactionalEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;)Ljavax/persistence/EntityManager;
-#doGetTransactionalEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;)Ljavax/persistence/EntityManager;
-#doGetTransactionalEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljavax/persistence/EntityManager;
-#applyTransactionTimeout(Ljavax/persistence/Query;Ljavax/persistence/EntityManagerFactory;)V
-#closeEntityManager(Ljavax/persistence/EntityManager;)V

+###org/springframework/orm/jpa/ExtendedEntityManagerCreator
@2.5
+#<init>()V
+#createApplicationManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerPlusOperations;)Ljavax/persistence/EntityManager;
+#createApplicationManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerPlusOperations;Lorg/springframework/dao/support/PersistenceExceptionTranslator;)Ljavax/persistence/EntityManager;
+#createApplicationManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;)Ljavax/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerPlusOperations;)Ljavax/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerPlusOperations;Lorg/springframework/dao/support/PersistenceExceptionTranslator;)Ljavax/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;)Ljavax/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljavax/persistence/EntityManagerFactory;)Ljavax/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;)Ljavax/persistence/EntityManager;
@4.0.0.RELEASE
+#createApplicationManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;Z)Ljavax/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljavax/persistence/EntityManager;
-#createApplicationManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerPlusOperations;)Ljavax/persistence/EntityManager;
-#createApplicationManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerPlusOperations;Lorg/springframework/dao/support/PersistenceExceptionTranslator;)Ljavax/persistence/EntityManager;
-#createContainerManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerPlusOperations;)Ljavax/persistence/EntityManager;
-#createContainerManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerPlusOperations;Lorg/springframework/dao/support/PersistenceExceptionTranslator;)Ljavax/persistence/EntityManager;
@6.0.0
+#createApplicationManagedEntityManager(Ljakarta/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;)Ljakarta/persistence/EntityManager;
+#createApplicationManagedEntityManager(Ljakarta/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;Z)Ljakarta/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljakarta/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;)Ljakarta/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljakarta/persistence/EntityManagerFactory;)Ljakarta/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;)Ljakarta/persistence/EntityManager;
+#createContainerManagedEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljakarta/persistence/EntityManager;
-#createApplicationManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;)Ljavax/persistence/EntityManager;
-#createApplicationManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;Z)Ljavax/persistence/EntityManager;
-#createContainerManagedEntityManager(Ljavax/persistence/EntityManager;Lorg/springframework/orm/jpa/EntityManagerFactoryInfo;)Ljavax/persistence/EntityManager;
-#createContainerManagedEntityManager(Ljavax/persistence/EntityManagerFactory;)Ljavax/persistence/EntityManager;
-#createContainerManagedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;)Ljavax/persistence/EntityManager;
-#createContainerManagedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljavax/persistence/EntityManager;

+###org/springframework/orm/jpa/EntityManagerFactoryInfo
@2.5
+#getNativeEntityManagerFactory()Ljavax/persistence/EntityManagerFactory;
+#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
+#getPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
+#getPersistenceUnitName()Ljava/lang/String;
+#getDataSource()Ljavax/sql/DataSource;
+#getEntityManagerInterface()Ljava/lang/Class;
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
@2.5.5
+#getBeanClassLoader()Ljava/lang/ClassLoader;
@5.3.0
+#createNativeEntityManager(Ljava/util/Map;)Ljavax/persistence/EntityManager;
@6.0.0
+#getPersistenceProvider()Ljakarta/persistence/spi/PersistenceProvider;
+#getPersistenceUnitInfo()Ljakarta/persistence/spi/PersistenceUnitInfo;
+#getNativeEntityManagerFactory()Ljakarta/persistence/EntityManagerFactory;
+#createNativeEntityManager(Ljava/util/Map;)Ljakarta/persistence/EntityManager;
-#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
-#getPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
-#getNativeEntityManagerFactory()Ljavax/persistence/EntityManagerFactory;
-#createNativeEntityManager(Ljava/util/Map;)Ljavax/persistence/EntityManager;

+###org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean
@2.5
+#<init>()V
+#setPersistenceUnitManager(Lorg/springframework/orm/jpa/persistenceunit/PersistenceUnitManager;)V
+#setPersistenceXmlLocation(Ljava/lang/String;)V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setPersistenceUnitPostProcessors([Lorg/springframework/orm/jpa/persistenceunit/PersistenceUnitPostProcessor;)V
+#setLoadTimeWeaver(Lorg/springframework/instrument/classloading/LoadTimeWeaver;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#getPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
+#getPersistenceUnitName()Ljava/lang/String;
+#getDataSource()Ljavax/sql/DataSource;
@3.1.0.RELEASE
+#setPackagesToScan([Ljava/lang/String;)V
+#setMappingResources([Ljava/lang/String;)V
@3.1.1.RELEASE
+#setPersistenceUnitName(Ljava/lang/String;)V
@3.1.3.RELEASE
+#setJtaDataSource(Ljavax/sql/DataSource;)V
@4.0.0.RELEASE
+#setSharedCacheMode(Ljavax/persistence/SharedCacheMode;)V
+#setValidationMode(Ljavax/persistence/ValidationMode;)V
@4.3.3.RELEASE
+#setPersistenceUnitRootLocation(Ljava/lang/String;)V
@4.3.13.RELEASE
+#afterPropertiesSet()V
@5.0.0.RELEASE
-#afterPropertiesSet()V
@5.0.2.RELEASE
+#afterPropertiesSet()V
@6.0.0
+#setManagedTypes(Lorg/springframework/orm/jpa/persistenceunit/PersistenceManagedTypes;)V
+#setSharedCacheMode(Ljakarta/persistence/SharedCacheMode;)V
+#setValidationMode(Ljakarta/persistence/ValidationMode;)V
+#getPersistenceUnitInfo()Ljakarta/persistence/spi/PersistenceUnitInfo;
-#setSharedCacheMode(Ljavax/persistence/SharedCacheMode;)V
-#setValidationMode(Ljavax/persistence/ValidationMode;)V
-#getPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;

+###org/springframework/orm/jpa/JpaDialect
@2.5
+#supportsEntityManagerFactoryPlusOperations()Z
+#supportsEntityManagerPlusOperations()Z
+#getEntityManagerFactoryPlusOperations(Ljavax/persistence/EntityManagerFactory;)Lorg/springframework/orm/jpa/EntityManagerFactoryPlusOperations;
+#getEntityManagerPlusOperations(Ljavax/persistence/EntityManager;)Lorg/springframework/orm/jpa/EntityManagerPlusOperations;
+#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#prepareTransaction(Ljavax/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
+#cleanupTransaction(Ljava/lang/Object;)V
+#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
+#releaseJdbcConnection(Lorg/springframework/jdbc/datasource/ConnectionHandle;Ljavax/persistence/EntityManager;)V
@4.0.0.RELEASE
-#supportsEntityManagerFactoryPlusOperations()Z
-#supportsEntityManagerPlusOperations()Z
-#getEntityManagerFactoryPlusOperations(Ljavax/persistence/EntityManagerFactory;)Lorg/springframework/orm/jpa/EntityManagerFactoryPlusOperations;
-#getEntityManagerPlusOperations(Ljavax/persistence/EntityManager;)Lorg/springframework/orm/jpa/EntityManagerPlusOperations;
@6.0.0
+#beginTransaction(Ljakarta/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#prepareTransaction(Ljakarta/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
+#getJdbcConnection(Ljakarta/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
+#releaseJdbcConnection(Lorg/springframework/jdbc/datasource/ConnectionHandle;Ljakarta/persistence/EntityManager;)V
-#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
-#prepareTransaction(Ljavax/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
-#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
-#releaseJdbcConnection(Lorg/springframework/jdbc/datasource/ConnectionHandle;Ljavax/persistence/EntityManager;)V

+###org/springframework/orm/jpa/SharedEntityManagerCreator
@2.5
+#<init>()V
+#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;)Ljavax/persistence/EntityManager;
+#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;)Ljavax/persistence/EntityManager;
+#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;[Ljava/lang/Class;)Ljavax/persistence/EntityManager;
@4.0.0.RELEASE
+#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljavax/persistence/EntityManager;
+#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;Z[Ljava/lang/Class;)Ljavax/persistence/EntityManager;
@6.0.0
+#createSharedEntityManager(Ljakarta/persistence/EntityManagerFactory;)Ljakarta/persistence/EntityManager;
+#createSharedEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;)Ljakarta/persistence/EntityManager;
+#createSharedEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljakarta/persistence/EntityManager;
+#createSharedEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;[Ljava/lang/Class;)Ljakarta/persistence/EntityManager;
+#createSharedEntityManager(Ljakarta/persistence/EntityManagerFactory;Ljava/util/Map;Z[Ljava/lang/Class;)Ljakarta/persistence/EntityManager;
-#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;)Ljavax/persistence/EntityManager;
-#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;)Ljavax/persistence/EntityManager;
-#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;Z)Ljavax/persistence/EntityManager;
-#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;[Ljava/lang/Class;)Ljavax/persistence/EntityManager;
-#createSharedEntityManager(Ljavax/persistence/EntityManagerFactory;Ljava/util/Map;Z[Ljava/lang/Class;)Ljavax/persistence/EntityManager;

+###org/springframework/orm/jpa/DefaultJpaDialect
@2.5
+#<init>()V
+#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#prepareTransaction(Ljavax/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
+#cleanupTransaction(Ljava/lang/Object;)V
+#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
+#releaseJdbcConnection(Lorg/springframework/jdbc/datasource/ConnectionHandle;Ljavax/persistence/EntityManager;)V
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#supportsEntityManagerFactoryPlusOperations()Z
+#supportsEntityManagerPlusOperations()Z
+#getEntityManagerFactoryPlusOperations(Ljavax/persistence/EntityManagerFactory;)Lorg/springframework/orm/jpa/EntityManagerFactoryPlusOperations;
+#getEntityManagerPlusOperations(Ljavax/persistence/EntityManager;)Lorg/springframework/orm/jpa/EntityManagerPlusOperations;
@4.0.0.RELEASE
-#supportsEntityManagerFactoryPlusOperations()Z
-#supportsEntityManagerPlusOperations()Z
-#getEntityManagerFactoryPlusOperations(Ljavax/persistence/EntityManagerFactory;)Lorg/springframework/orm/jpa/EntityManagerFactoryPlusOperations;
-#getEntityManagerPlusOperations(Ljavax/persistence/EntityManager;)Lorg/springframework/orm/jpa/EntityManagerPlusOperations;
@6.0.0
+#beginTransaction(Ljakarta/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#prepareTransaction(Ljakarta/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
+#getJdbcConnection(Ljakarta/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
+#releaseJdbcConnection(Lorg/springframework/jdbc/datasource/ConnectionHandle;Ljakarta/persistence/EntityManager;)V
-#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
-#prepareTransaction(Ljavax/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
-#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
-#releaseJdbcConnection(Lorg/springframework/jdbc/datasource/ConnectionHandle;Ljavax/persistence/EntityManager;)V

+###org/springframework/orm/jpa/EntityManagerFactoryAccessor
@2.5
+#<init>()V
+#setEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
+#getEntityManagerFactory()Ljavax/persistence/EntityManagerFactory;
+#setJpaProperties(Ljava/util/Properties;)V
+#setJpaPropertyMap(Ljava/util/Map;)V
+#getJpaPropertyMap()Ljava/util/Map;
@3.1.0.RELEASE
+#setPersistenceUnitName(Ljava/lang/String;)V
+#getPersistenceUnitName()Ljava/lang/String;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@6.0.0
+#setEntityManagerFactory(Ljakarta/persistence/EntityManagerFactory;)V
+#getEntityManagerFactory()Ljakarta/persistence/EntityManagerFactory;
-#setEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
-#getEntityManagerFactory()Ljavax/persistence/EntityManagerFactory;

+###org/springframework/orm/jpa/persistenceunit/SmartPersistenceUnitInfo
@3.0.1.RELEASE
+#setPersistenceProviderPackageName(Ljava/lang/String;)V
@4.1.0.RELEASE
+#getManagedPackages()Ljava/util/List;

+###org/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo
@2.5
+#<init>()V
+#setPersistenceUnitName(Ljava/lang/String;)V
+#getPersistenceUnitName()Ljava/lang/String;
+#setPersistenceProviderClassName(Ljava/lang/String;)V
+#getPersistenceProviderClassName()Ljava/lang/String;
+#setTransactionType(Ljavax/persistence/spi/PersistenceUnitTransactionType;)V
+#getTransactionType()Ljavax/persistence/spi/PersistenceUnitTransactionType;
+#setJtaDataSource(Ljavax/sql/DataSource;)V
+#getJtaDataSource()Ljavax/sql/DataSource;
+#setNonJtaDataSource(Ljavax/sql/DataSource;)V
+#getNonJtaDataSource()Ljavax/sql/DataSource;
+#addMappingFileName(Ljava/lang/String;)V
+#getMappingFileNames()Ljava/util/List;
+#addJarFileUrl(Ljava/net/URL;)V
+#getJarFileUrls()Ljava/util/List;
+#setPersistenceUnitRootUrl(Ljava/net/URL;)V
+#getPersistenceUnitRootUrl()Ljava/net/URL;
+#addManagedClassName(Ljava/lang/String;)V
+#getManagedClassNames()Ljava/util/List;
+#setExcludeUnlistedClasses(Z)V
+#excludeUnlistedClasses()Z
+#addProperty(Ljava/lang/String;Ljava/lang/String;)V
+#setProperties(Ljava/util/Properties;)V
+#getProperties()Ljava/util/Properties;
+#getClassLoader()Ljava/lang/ClassLoader;
+#addTransformer(Ljavax/persistence/spi/ClassTransformer;)V
+#getNewTempClassLoader()Ljava/lang/ClassLoader;
+#toString()Ljava/lang/String;
@2.5.2
+#setPersistenceProviderPackageName(Ljava/lang/String;)V
+#getPersistenceProviderPackageName()Ljava/lang/String;
@3.0.1.RELEASE
+#setPersistenceXMLSchemaVersion(Ljava/lang/String;)V
+#getPersistenceXMLSchemaVersion()Ljava/lang/String;
@4.0.0.RELEASE
+#setSharedCacheMode(Ljavax/persistence/SharedCacheMode;)V
+#getSharedCacheMode()Ljavax/persistence/SharedCacheMode;
+#setValidationMode(Ljavax/persistence/ValidationMode;)V
+#getValidationMode()Ljavax/persistence/ValidationMode;
@4.1.0.RELEASE
+#addManagedPackage(Ljava/lang/String;)V
+#getManagedPackages()Ljava/util/List;
@6.0.0
+#setTransactionType(Ljakarta/persistence/spi/PersistenceUnitTransactionType;)V
+#getTransactionType()Ljakarta/persistence/spi/PersistenceUnitTransactionType;
+#setSharedCacheMode(Ljakarta/persistence/SharedCacheMode;)V
+#getSharedCacheMode()Ljakarta/persistence/SharedCacheMode;
+#setValidationMode(Ljakarta/persistence/ValidationMode;)V
+#getValidationMode()Ljakarta/persistence/ValidationMode;
+#addTransformer(Ljakarta/persistence/spi/ClassTransformer;)V
-#setTransactionType(Ljavax/persistence/spi/PersistenceUnitTransactionType;)V
-#getTransactionType()Ljavax/persistence/spi/PersistenceUnitTransactionType;
-#setSharedCacheMode(Ljavax/persistence/SharedCacheMode;)V
-#getSharedCacheMode()Ljavax/persistence/SharedCacheMode;
-#setValidationMode(Ljavax/persistence/ValidationMode;)V
-#getValidationMode()Ljavax/persistence/ValidationMode;
-#addTransformer(Ljavax/persistence/spi/ClassTransformer;)V

+###org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager
@2.5
+#<init>()V
+#setPersistenceXmlLocations([Ljava/lang/String;)V
+#setDefaultPersistenceUnitRootLocation(Ljava/lang/String;)V
+#setDataSources(Ljava/util/Map;)V
+#setDataSourceLookup(Lorg/springframework/jdbc/datasource/lookup/DataSourceLookup;)V
+#getDataSourceLookup()Lorg/springframework/jdbc/datasource/lookup/DataSourceLookup;
+#setDefaultDataSource(Ljavax/sql/DataSource;)V
+#getDefaultDataSource()Ljavax/sql/DataSource;
+#setPersistenceUnitPostProcessors([Lorg/springframework/orm/jpa/persistenceunit/PersistenceUnitPostProcessor;)V
+#getPersistenceUnitPostProcessors()[Lorg/springframework/orm/jpa/persistenceunit/PersistenceUnitPostProcessor;
+#setLoadTimeWeaver(Lorg/springframework/instrument/classloading/LoadTimeWeaver;)V
+#getLoadTimeWeaver()Lorg/springframework/instrument/classloading/LoadTimeWeaver;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#afterPropertiesSet()V
+#preparePersistenceUnitInfos()V
+#obtainDefaultPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
+#obtainPersistenceUnitInfo(Ljava/lang/String;)Ljavax/persistence/spi/PersistenceUnitInfo;
@2.5.6
+#setPersistenceXmlLocation(Ljava/lang/String;)V
@3.1.0.RELEASE
+#setDefaultPersistenceUnitName(Ljava/lang/String;)V
+#setPackagesToScan([Ljava/lang/String;)V
+#setMappingResources([Ljava/lang/String;)V
@3.1.3.RELEASE
+#setDefaultJtaDataSource(Ljavax/sql/DataSource;)V
+#getDefaultJtaDataSource()Ljavax/sql/DataSource;
@4.0.0.RELEASE
+#setSharedCacheMode(Ljavax/persistence/SharedCacheMode;)V
+#setValidationMode(Ljavax/persistence/ValidationMode;)V
@6.0.0
+#setManagedTypes(Lorg/springframework/orm/jpa/persistenceunit/PersistenceManagedTypes;)V
+#setSharedCacheMode(Ljakarta/persistence/SharedCacheMode;)V
+#setValidationMode(Ljakarta/persistence/ValidationMode;)V
+#obtainDefaultPersistenceUnitInfo()Ljakarta/persistence/spi/PersistenceUnitInfo;
+#obtainPersistenceUnitInfo(Ljava/lang/String;)Ljakarta/persistence/spi/PersistenceUnitInfo;
-#setSharedCacheMode(Ljavax/persistence/SharedCacheMode;)V
-#setValidationMode(Ljavax/persistence/ValidationMode;)V
-#obtainDefaultPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
-#obtainPersistenceUnitInfo(Ljava/lang/String;)Ljavax/persistence/spi/PersistenceUnitInfo;

+###org/springframework/orm/jpa/persistenceunit/PersistenceUnitManager
@2.5
+#obtainDefaultPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
+#obtainPersistenceUnitInfo(Ljava/lang/String;)Ljavax/persistence/spi/PersistenceUnitInfo;
@6.0.0
+#obtainDefaultPersistenceUnitInfo()Ljakarta/persistence/spi/PersistenceUnitInfo;
+#obtainPersistenceUnitInfo(Ljava/lang/String;)Ljakarta/persistence/spi/PersistenceUnitInfo;
-#obtainDefaultPersistenceUnitInfo()Ljavax/persistence/spi/PersistenceUnitInfo;
-#obtainPersistenceUnitInfo(Ljava/lang/String;)Ljavax/persistence/spi/PersistenceUnitInfo;

+###org/springframework/orm/jpa/persistenceunit/PersistenceUnitPostProcessor
@2.5
+#postProcessPersistenceUnitInfo(Lorg/springframework/orm/jpa/persistenceunit/MutablePersistenceUnitInfo;)V

+###org/springframework/orm/jpa/EntityManagerProxy
@2.5
+#getTargetEntityManager()Ljavax/persistence/EntityManager;
@6.0.0
+#getTargetEntityManager()Ljakarta/persistence/EntityManager;
-#getTargetEntityManager()Ljavax/persistence/EntityManager;

+###org/springframework/orm/jpa/vendor/HibernateJpaSessionFactoryBean
@3.1.0.RELEASE
+#<init>()V
+#getObject()Lorg/hibernate/SessionFactory;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@6.0.0
-###org/springframework/orm/jpa/vendor/HibernateJpaSessionFactoryBean

+###org/springframework/orm/jpa/vendor/Database
@2.5
+#values()[Lorg/springframework/orm/jpa/vendor/Database;
+#valueOf(Ljava/lang/String;)Lorg/springframework/orm/jpa/vendor/Database;

+###org/springframework/orm/jpa/vendor/EclipseLinkJpaDialect
@2.5.2
+#<init>()V
+#setLazyDatabaseTransaction(Z)V
+#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
@6.0.0
+#beginTransaction(Ljakarta/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#getJdbcConnection(Ljakarta/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
-#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
-#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;

+###org/springframework/orm/jpa/vendor/EclipseLinkJpaVendorAdapter
@2.5.2
+#<init>()V
+#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
+#getPersistenceProviderRootPackage()Ljava/lang/String;
+#getJpaPropertyMap()Ljava/util/Map;
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
+#getEntityManagerInterface()Ljava/lang/Class;
@3.0.0.RELEASE
-#getPersistenceProviderRootPackage()Ljava/lang/String;
@4.1.0.RELEASE
+#getJpaDialect()Lorg/springframework/orm/jpa/vendor/EclipseLinkJpaDialect;
@6.0.0
+#getPersistenceProvider()Ljakarta/persistence/spi/PersistenceProvider;
-#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;

+###org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter
@2.5
+#<init>()V
+#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
+#getJpaPropertyMap()Ljava/util/Map;
+#getEntityManagerInterface()Ljava/lang/Class;
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
@2.5.2
+#getPersistenceProviderRootPackage()Ljava/lang/String;
+#getEntityManagerFactoryInterface()Ljava/lang/Class;
@4.1.0.RELEASE
+#getJpaDialect()Lorg/springframework/orm/jpa/vendor/HibernateJpaDialect;
@4.3.1.RELEASE
+#setPrepareConnection(Z)V
@4.3.13.RELEASE
+#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@5.0.0.RELEASE
-#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@5.0.2.RELEASE
+#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@6.0.0
+#getPersistenceProvider()Ljakarta/persistence/spi/PersistenceProvider;
+#getJpaPropertyMap(Ljakarta/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
-#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
-#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;

+###org/springframework/orm/jpa/vendor/HibernateJpaDialect
@2.5
+#<init>()V
+#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#prepareTransaction(Ljavax/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
+#cleanupTransaction(Ljava/lang/Object;)V
+#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@4.1.0.RELEASE
+#setPrepareConnection(Z)V
@5.1.0.RELEASE
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
@6.0.0
+#beginTransaction(Ljakarta/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#prepareTransaction(Ljakarta/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
+#getJdbcConnection(Ljakarta/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
-#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
-#prepareTransaction(Ljavax/persistence/EntityManager;ZLjava/lang/String;)Ljava/lang/Object;
-#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;

+###org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter
@2.5
+#<init>()V
+#setDatabase(Lorg/springframework/orm/jpa/vendor/Database;)V
+#setDatabasePlatform(Ljava/lang/String;)V
+#setGenerateDdl(Z)V
+#setShowSql(Z)V
+#postProcessEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
@2.5.2
+#getPersistenceProviderRootPackage()Ljava/lang/String;
+#getJpaPropertyMap()Ljava/util/Map;
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
+#getEntityManagerFactoryInterface()Ljava/lang/Class;
+#getEntityManagerInterface()Ljava/lang/Class;
@4.3.13.RELEASE
+#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@5.0.0.RELEASE
-#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@5.0.2.RELEASE
+#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
@5.3.0
+#postProcessEntityManager(Ljavax/persistence/EntityManager;)V
@6.0.0
+#getJpaPropertyMap(Ljakarta/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
+#postProcessEntityManagerFactory(Ljakarta/persistence/EntityManagerFactory;)V
+#postProcessEntityManager(Ljakarta/persistence/EntityManager;)V
-#getJpaPropertyMap(Ljavax/persistence/spi/PersistenceUnitInfo;)Ljava/util/Map;
-#postProcessEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
-#postProcessEntityManager(Ljavax/persistence/EntityManager;)V

+###org/springframework/orm/jpa/JpaObjectRetrievalFailureException
@2.5
+#<init>(Ljavax/persistence/EntityNotFoundException;)V
@6.0.0
+#<init>(Ljakarta/persistence/EntityNotFoundException;)V
-#<init>(Ljavax/persistence/EntityNotFoundException;)V

+###org/springframework/orm/hibernate5/HibernateTemplate
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/hibernate/SessionFactory;)V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setFilterNames([Ljava/lang/String;)V
+#getFilterNames()[Ljava/lang/String;
+#setExposeNativeSession(Z)V
+#isExposeNativeSession()Z
+#setCheckWriteOperations(Z)V
+#isCheckWriteOperations()Z
+#setCacheQueries(Z)V
+#isCacheQueries()Z
+#setQueryCacheRegion(Ljava/lang/String;)V
+#getQueryCacheRegion()Ljava/lang/String;
+#setFetchSize(I)V
+#getFetchSize()I
+#setMaxResults(I)V
+#getMaxResults()I
+#afterPropertiesSet()V
+#execute(Lorg/springframework/orm/hibernate5/HibernateCallback;)Ljava/lang/Object;
+#executeWithNativeSession(Lorg/springframework/orm/hibernate5/HibernateCallback;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#load(Ljava/lang/Object;Ljava/io/Serializable;)V
+#refresh(Ljava/lang/Object;)V
+#refresh(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#contains(Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;)V
+#initialize(Ljava/lang/Object;)V
+#enableFilter(Ljava/lang/String;)Lorg/hibernate/Filter;
+#lock(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#lock(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#save(Ljava/lang/Object;)Ljava/io/Serializable;
+#save(Ljava/lang/String;Ljava/lang/Object;)Ljava/io/Serializable;
+#update(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#update(Ljava/lang/String;Ljava/lang/Object;)V
+#update(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#saveOrUpdate(Ljava/lang/Object;)V
+#saveOrUpdate(Ljava/lang/String;Ljava/lang/Object;)V
+#replicate(Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#replicate(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#persist(Ljava/lang/Object;)V
+#persist(Ljava/lang/String;Ljava/lang/Object;)V
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#deleteAll(Ljava/util/Collection;)V
+#flush()V
+#clear()V
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;II)Ljava/util/List;
+#findByExample(Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/Object;II)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;
+#closeIterator(Ljava/util/Iterator;)V
+#bulkUpdate(Ljava/lang/String;[Ljava/lang/Object;)I
@5.0.4.RELEASE
*#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;[deprecated]
*#closeIterator(Ljava/util/Iterator;)V[deprecated]
*#bulkUpdate(Ljava/lang/String;[Ljava/lang/Object;)I[deprecated]

+###org/springframework/orm/hibernate5/support/HibernateDaoSupport
@4.2.0.RELEASE
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setHibernateTemplate(Lorg/springframework/orm/hibernate5/HibernateTemplate;)V
+#getHibernateTemplate()Lorg/springframework/orm/hibernate5/HibernateTemplate;

+###org/springframework/orm/hibernate5/support/OpenSessionInterceptor
@4.2.0.RELEASE
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#afterPropertiesSet()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;

+###org/springframework/orm/hibernate5/support/OpenSessionInViewInterceptor
@4.2.0.RELEASE
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#preHandle(Lorg/springframework/web/context/request/WebRequest;)V
+#postHandle(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/ui/ModelMap;)V
+#afterCompletion(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/Exception;)V
+#afterConcurrentHandlingStarted(Lorg/springframework/web/context/request/WebRequest;)V

+###org/springframework/orm/hibernate5/support/OpenSessionInViewFilter
@4.2.0.RELEASE
+#<init>()V
+#setSessionFactoryBeanName(Ljava/lang/String;)V

+###org/springframework/orm/hibernate5/SessionFactoryUtils
@4.2.0.RELEASE
+#<init>()V
+#getDataSource(Lorg/hibernate/SessionFactory;)Ljavax/sql/DataSource;
+#closeSession(Lorg/hibernate/Session;)V
+#convertHibernateAccessException(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;

+###org/springframework/orm/hibernate5/HibernateSystemException
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/HibernateException;)V

+###org/springframework/orm/hibernate5/HibernateTransactionManager
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/hibernate/SessionFactory;)V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setAutodetectDataSource(Z)V
+#setPrepareConnection(Z)V
+#setAllowResultAccessAfterCompletion(Z)V
+#setHibernateManagedSession(Z)V
+#setEntityInterceptorBeanName(Ljava/lang/String;)V
+#setEntityInterceptor(Lorg/hibernate/Interceptor;)V
+#getEntityInterceptor()Lorg/hibernate/Interceptor;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#getResourceFactory()Ljava/lang/Object;
@5.3.0
+#setSessionInitializer(Ljava/util/function/Consumer;)V

+###org/springframework/orm/hibernate5/SessionHolder
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/Session;)V
+#getSession()Lorg/hibernate/Session;
+#setTransaction(Lorg/hibernate/Transaction;)V
+#getTransaction()Lorg/hibernate/Transaction;
+#setPreviousFlushMode(Lorg/hibernate/FlushMode;)V
+#getPreviousFlushMode()Lorg/hibernate/FlushMode;
+#clear()V

+###org/springframework/orm/hibernate5/HibernateObjectRetrievalFailureException
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/UnresolvableObjectException;)V
+#<init>(Lorg/hibernate/WrongClassException;)V

+###org/springframework/orm/hibernate5/SpringJtaSessionContext
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)V

+###org/springframework/orm/hibernate5/HibernateExceptionTranslator
@4.2.0.RELEASE
+#<init>()V
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@5.1.0.RELEASE
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V

+###org/springframework/orm/hibernate5/HibernateQueryException
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/QueryException;)V
+#getQueryString()Ljava/lang/String;

+###org/springframework/orm/hibernate5/HibernateOperations
@4.2.0.RELEASE
+#execute(Lorg/springframework/orm/hibernate5/HibernateCallback;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#load(Ljava/lang/Object;Ljava/io/Serializable;)V
+#refresh(Ljava/lang/Object;)V
+#refresh(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#contains(Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;)V
+#initialize(Ljava/lang/Object;)V
+#enableFilter(Ljava/lang/String;)Lorg/hibernate/Filter;
+#lock(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#lock(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#save(Ljava/lang/Object;)Ljava/io/Serializable;
+#save(Ljava/lang/String;Ljava/lang/Object;)Ljava/io/Serializable;
+#update(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#update(Ljava/lang/String;Ljava/lang/Object;)V
+#update(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#saveOrUpdate(Ljava/lang/Object;)V
+#saveOrUpdate(Ljava/lang/String;Ljava/lang/Object;)V
+#replicate(Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#replicate(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#persist(Ljava/lang/Object;)V
+#persist(Ljava/lang/String;Ljava/lang/Object;)V
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#deleteAll(Ljava/util/Collection;)V
+#flush()V
+#clear()V
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;II)Ljava/util/List;
+#findByExample(Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/Object;II)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;
+#closeIterator(Ljava/util/Iterator;)V
+#bulkUpdate(Ljava/lang/String;[Ljava/lang/Object;)I
@5.0.4.RELEASE
*#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;[deprecated]
*#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;[deprecated]
*#closeIterator(Ljava/util/Iterator;)V[deprecated]
*#bulkUpdate(Ljava/lang/String;[Ljava/lang/Object;)I[deprecated]

+###org/springframework/orm/hibernate5/HibernateOptimisticLockingFailureException
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/StaleObjectStateException;)V
+#<init>(Lorg/hibernate/StaleStateException;)V
+#<init>(Lorg/hibernate/dialect/lock/OptimisticEntityLockException;)V

+###org/springframework/orm/hibernate5/LocalSessionFactoryBuilder
@4.2.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#<init>(Ljavax/sql/DataSource;Ljava/lang/ClassLoader;)V
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;)V
+#setJtaTransactionManager(Ljava/lang/Object;)Lorg/springframework/orm/hibernate5/LocalSessionFactoryBuilder;
+#setEntityTypeFilters([Lorg/springframework/core/type/filter/TypeFilter;)Lorg/springframework/orm/hibernate5/LocalSessionFactoryBuilder;
+#addAnnotatedClasses([Ljava/lang/Class;)Lorg/springframework/orm/hibernate5/LocalSessionFactoryBuilder;
+#addPackages([Ljava/lang/String;)Lorg/springframework/orm/hibernate5/LocalSessionFactoryBuilder;
+#scanPackages([Ljava/lang/String;)Lorg/springframework/orm/hibernate5/LocalSessionFactoryBuilder;
@4.3.0.RELEASE
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;Lorg/hibernate/boot/MetadataSources;)V
+#setMultiTenantConnectionProvider(Lorg/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider;)Lorg/springframework/orm/hibernate5/LocalSessionFactoryBuilder;
+#buildSessionFactory(Lorg/springframework/core/task/AsyncTaskExecutor;)Lorg/hibernate/SessionFactory;
@4.3.2.RELEASE
+#setCurrentTenantIdentifierResolver(Lorg/hibernate/context/spi/CurrentTenantIdentifierResolver;)V
@5.1.0.RELEASE
+#setBeanContainer(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/orm/hibernate5/LocalSessionFactoryBuilder;
+#setCacheRegionFactory(Lorg/hibernate/cache/spi/RegionFactory;)Lorg/springframework/orm/hibernate5/LocalSessionFactoryBuilder;

+###org/springframework/orm/hibernate5/LocalSessionFactoryBean
@4.2.0.RELEASE
+#<init>()V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setConfigLocation(Lorg/springframework/core/io/Resource;)V
+#setConfigLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingResources([Ljava/lang/String;)V
+#setMappingLocations([Lorg/springframework/core/io/Resource;)V
+#setCacheableMappingLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingJarLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingDirectoryLocations([Lorg/springframework/core/io/Resource;)V
+#setEntityInterceptor(Lorg/hibernate/Interceptor;)V
+#setImplicitNamingStrategy(Lorg/hibernate/boot/model/naming/ImplicitNamingStrategy;)V
+#setPhysicalNamingStrategy(Lorg/hibernate/boot/model/naming/PhysicalNamingStrategy;)V
+#setJtaTransactionManager(Ljava/lang/Object;)V
+#setCurrentTenantIdentifierResolver(Lorg/hibernate/context/spi/CurrentTenantIdentifierResolver;)V
+#setEntityTypeFilters([Lorg/springframework/core/type/filter/TypeFilter;)V
+#setHibernateProperties(Ljava/util/Properties;)V
+#getHibernateProperties()Ljava/util/Properties;
+#setAnnotatedClasses([Ljava/lang/Class;)V
+#setAnnotatedPackages([Ljava/lang/String;)V
+#setPackagesToScan([Ljava/lang/String;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#afterPropertiesSet()V
+#getConfiguration()Lorg/hibernate/cfg/Configuration;
+#getObject()Lorg/hibernate/SessionFactory;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#destroy()V
+#getObject()Ljava/lang/Object;
@4.3.0.RELEASE
+#setMultiTenantConnectionProvider(Lorg/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider;)V
+#setBootstrapExecutor(Lorg/springframework/core/task/AsyncTaskExecutor;)V
+#setMetadataSources(Lorg/hibernate/boot/MetadataSources;)V
+#getMetadataSources()Lorg/hibernate/boot/MetadataSources;
+#getResourceLoader()Lorg/springframework/core/io/ResourceLoader;
@5.1.0.RELEASE
+#setCacheRegionFactory(Lorg/hibernate/cache/spi/RegionFactory;)V
+#setHibernateIntegrators([Lorg/hibernate/integrator/spi/Integrator;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/orm/hibernate5/SpringSessionContext
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)V
+#currentSession()Lorg/hibernate/Session;

+###org/springframework/orm/hibernate5/HibernateCallback
@4.2.0.RELEASE
+#doInHibernate(Lorg/hibernate/Session;)Ljava/lang/Object;

+###org/springframework/orm/hibernate5/SpringFlushSynchronization
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/Session;)V
+#flush()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/orm/hibernate5/HibernateJdbcException
@4.2.0.RELEASE
+#<init>(Lorg/hibernate/JDBCException;)V
+#getSQLException()Ljava/sql/SQLException;
+#getSql()Ljava/lang/String;

+###org/springframework/orm/hibernate5/SpringSessionSynchronization
@4.2.0.RELEASE
+#<init>(Lorg/springframework/orm/hibernate5/SessionHolder;Lorg/hibernate/SessionFactory;)V
+#<init>(Lorg/springframework/orm/hibernate5/SessionHolder;Lorg/hibernate/SessionFactory;Z)V
+#getOrder()I
+#suspend()V
+#resume()V
+#flush()V
+#beforeCommit(Z)V
+#beforeCompletion()V
+#afterCommit()V
+#afterCompletion(I)V

+###org/springframework/orm/ObjectOptimisticLockingFailureException
@1.0-rc1
+#<init>(Ljava/lang/Class;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getPersistentClass()Ljava/lang/Class;
+#getIdentifier()Ljava/lang/Object;
@1.1
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getPersistentClassName()Ljava/lang/String;
@1.2.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.5
+#<init>(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V

+###org/springframework/orm/ObjectRetrievalFailureException
@1.0-rc1
+#<init>(Ljava/lang/Class;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getPersistentClass()Ljava/lang/Class;
+#getIdentifier()Ljava/lang/Object;
@1.1
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getPersistentClassName()Ljava/lang/String;
@1.2.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/orm/hibernate3/HibernateExceptionTranslator
@3.1.0.RELEASE
+#<init>()V
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateExceptionTranslator

+###org/springframework/orm/hibernate3/HibernateOperations
@2.5
+#execute(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/util/List;
+#get(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#load(Ljava/lang/Object;Ljava/io/Serializable;)V
+#refresh(Ljava/lang/Object;)V
+#refresh(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#contains(Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;)V
+#initialize(Ljava/lang/Object;)V
+#enableFilter(Ljava/lang/String;)Lorg/hibernate/Filter;
+#lock(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#lock(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#save(Ljava/lang/Object;)Ljava/io/Serializable;
+#save(Ljava/lang/String;Ljava/lang/Object;)Ljava/io/Serializable;
+#update(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#update(Ljava/lang/String;Ljava/lang/Object;)V
+#update(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#saveOrUpdate(Ljava/lang/Object;)V
+#saveOrUpdate(Ljava/lang/String;Ljava/lang/Object;)V
+#saveOrUpdateAll(Ljava/util/Collection;)V
+#replicate(Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#replicate(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#persist(Ljava/lang/Object;)V
+#persist(Ljava/lang/String;Ljava/lang/Object;)V
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#deleteAll(Ljava/util/Collection;)V
+#flush()V
+#clear()V
+#find(Ljava/lang/String;)Ljava/util/List;
+#find(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;II)Ljava/util/List;
+#findByExample(Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/Object;II)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#iterate(Ljava/lang/String;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;
+#closeIterator(Ljava/util/Iterator;)V
+#bulkUpdate(Ljava/lang/String;)I
+#bulkUpdate(Ljava/lang/String;Ljava/lang/Object;)I
+#bulkUpdate(Ljava/lang/String;[Ljava/lang/Object;)I
@2.5.1
+#delete(Ljava/lang/String;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
@3.0.0.RELEASE
*#saveOrUpdateAll(Ljava/util/Collection;)V[deprecated]
@3.2.7.RELEASE
*#executeFind(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/util/List;[deprecated]
@4.0.0.RELEASE
-#saveOrUpdateAll(Ljava/util/Collection;)V[deprecated]
@4.0.1.RELEASE
*#executeFind(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/util/List;[deprecated]
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateOperations

+###org/springframework/orm/hibernate3/HibernateTransactionManager
@2.5
+#<init>()V
+#<init>(Lorg/hibernate/SessionFactory;)V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setAutodetectDataSource(Z)V
+#setPrepareConnection(Z)V
+#setEntityInterceptorBeanName(Ljava/lang/String;)V
+#setEntityInterceptor(Lorg/hibernate/Interceptor;)V
+#getEntityInterceptor()Lorg/hibernate/Interceptor;
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#getJdbcExceptionTranslator()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#getResourceFactory()Ljava/lang/Object;
@2.5.1
+#setEarlyFlushBeforeCommit(Z)V
@2.5.5
+#setHibernateManagedSession(Z)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateTransactionManager

+###org/springframework/orm/hibernate3/HibernateInterceptor
@2.5
+#<init>()V
+#setExceptionConversionEnabled(Z)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateInterceptor

+###org/springframework/orm/hibernate3/LocalTransactionManagerLookup
@2.5
+#<init>()V
+#getTransactionManager(Ljava/util/Properties;)Ljavax/transaction/TransactionManager;
+#getUserTransactionName()Ljava/lang/String;
@2.5.5
+#getTransactionIdentifier(Ljavax/transaction/Transaction;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/LocalTransactionManagerLookup

+###org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException
@2.5
+#<init>(Lorg/hibernate/StaleObjectStateException;)V
+#<init>(Lorg/hibernate/StaleStateException;)V
@4.0.0.RELEASE
+#<init>(Lorg/hibernate/OptimisticLockException;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException

+###org/springframework/orm/hibernate3/LocalRegionFactoryProxy
@3.0.0.RELEASE
+#<init>()V
+#start(Lorg/hibernate/cfg/Settings;Ljava/util/Properties;)V
+#stop()V
+#isMinimalPutsEnabledByDefault()Z
+#nextTimestamp()J
+#buildEntityRegion(Ljava/lang/String;Ljava/util/Properties;Lorg/hibernate/cache/CacheDataDescription;)Lorg/hibernate/cache/EntityRegion;
+#buildCollectionRegion(Ljava/lang/String;Ljava/util/Properties;Lorg/hibernate/cache/CacheDataDescription;)Lorg/hibernate/cache/CollectionRegion;
+#buildQueryResultsRegion(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/QueryResultsRegion;
+#buildTimestampsRegion(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/TimestampsRegion;
@3.0.1.RELEASE
+#<init>(Ljava/util/Properties;)V
+#getDefaultAccessType()Lorg/hibernate/cache/access/AccessType;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/LocalRegionFactoryProxy

+###org/springframework/orm/hibernate3/AbstractSessionFactoryBean
@2.5
+#<init>()V
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setUseTransactionAwareDataSource(Z)V
+#setExposeTransactionAwareSessionFactory(Z)V
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#afterPropertiesSet()V
+#destroy()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@3.0.0.RELEASE
+#getObject()Lorg/hibernate/SessionFactory;
@3.1.1.RELEASE
-#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
-#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/AbstractSessionFactoryBean

+###org/springframework/orm/hibernate3/HibernateTemplate
@2.5
+#<init>()V
+#<init>(Lorg/hibernate/SessionFactory;)V
+#<init>(Lorg/hibernate/SessionFactory;Z)V
+#setAllowCreate(Z)V
+#isAllowCreate()Z
+#setAlwaysUseNewSession(Z)V
+#isAlwaysUseNewSession()Z
+#setExposeNativeSession(Z)V
+#isExposeNativeSession()Z
+#setCheckWriteOperations(Z)V
+#isCheckWriteOperations()Z
+#setCacheQueries(Z)V
+#isCacheQueries()Z
+#setQueryCacheRegion(Ljava/lang/String;)V
+#getQueryCacheRegion()Ljava/lang/String;
+#setFetchSize(I)V
+#getFetchSize()I
+#setMaxResults(I)V
+#getMaxResults()I
+#execute(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/util/List;
+#execute(Lorg/springframework/orm/hibernate3/HibernateCallback;Z)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#load(Ljava/lang/Object;Ljava/io/Serializable;)V
+#refresh(Ljava/lang/Object;)V
+#refresh(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#contains(Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;)V
+#initialize(Ljava/lang/Object;)V
+#enableFilter(Ljava/lang/String;)Lorg/hibernate/Filter;
+#lock(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#lock(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#save(Ljava/lang/Object;)Ljava/io/Serializable;
+#save(Ljava/lang/String;Ljava/lang/Object;)Ljava/io/Serializable;
+#update(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#update(Ljava/lang/String;Ljava/lang/Object;)V
+#update(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#saveOrUpdate(Ljava/lang/Object;)V
+#saveOrUpdate(Ljava/lang/String;Ljava/lang/Object;)V
+#saveOrUpdateAll(Ljava/util/Collection;)V
+#replicate(Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#replicate(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#persist(Ljava/lang/Object;)V
+#persist(Ljava/lang/String;Ljava/lang/Object;)V
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#deleteAll(Ljava/util/Collection;)V
+#flush()V
+#clear()V
+#find(Ljava/lang/String;)Ljava/util/List;
+#find(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;II)Ljava/util/List;
+#findByExample(Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/Object;II)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#iterate(Ljava/lang/String;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;
+#closeIterator(Ljava/util/Iterator;)V
+#bulkUpdate(Ljava/lang/String;)I
+#bulkUpdate(Ljava/lang/String;Ljava/lang/Object;)I
+#bulkUpdate(Ljava/lang/String;[Ljava/lang/Object;)I
@2.5.1
+#delete(Ljava/lang/String;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
@2.5.3
+#executeWithNewSession(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/lang/Object;
+#executeWithNativeSession(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/lang/Object;
@3.0.0.RELEASE
-#execute(Lorg/springframework/orm/hibernate3/HibernateCallback;Z)Ljava/lang/Object;
@3.2.7.RELEASE
*#executeFind(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/util/List;[deprecated]
@4.0.0.RELEASE
-#saveOrUpdateAll(Ljava/util/Collection;)V
@4.0.1.RELEASE
*#executeFind(Lorg/springframework/orm/hibernate3/HibernateCallback;)Ljava/util/List;[deprecated]
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateTemplate

+###org/springframework/orm/hibernate3/SessionFactoryUtils
@2.5
+#<init>()V
+#getDataSource(Lorg/hibernate/SessionFactory;)Ljavax/sql/DataSource;
+#newJdbcExceptionTranslator(Lorg/hibernate/SessionFactory;)Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#getJtaTransactionManager(Lorg/hibernate/SessionFactory;Lorg/hibernate/Session;)Ljavax/transaction/TransactionManager;
+#getSession(Lorg/hibernate/SessionFactory;Z)Lorg/hibernate/Session;
+#getSession(Lorg/hibernate/SessionFactory;Lorg/hibernate/Interceptor;Lorg/springframework/jdbc/support/SQLExceptionTranslator;)Lorg/hibernate/Session;
+#doGetSession(Lorg/hibernate/SessionFactory;Z)Lorg/hibernate/Session;
+#getNewSession(Lorg/hibernate/SessionFactory;)Lorg/hibernate/Session;
+#getNewSession(Lorg/hibernate/SessionFactory;Lorg/hibernate/Interceptor;)Lorg/hibernate/Session;
+#toString(Lorg/hibernate/Session;)Ljava/lang/String;
+#isSessionTransactional(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)Z
+#applyTransactionTimeout(Lorg/hibernate/Query;Lorg/hibernate/SessionFactory;)V
+#applyTransactionTimeout(Lorg/hibernate/Criteria;Lorg/hibernate/SessionFactory;)V
+#convertHibernateAccessException(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
+#isDeferredCloseActive(Lorg/hibernate/SessionFactory;)Z
+#initDeferredClose(Lorg/hibernate/SessionFactory;)V
+#processDeferredClose(Lorg/hibernate/SessionFactory;)V
+#releaseSession(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
+#closeSession(Lorg/hibernate/Session;)V
@2.5.6
+#hasTransactionalSession(Lorg/hibernate/SessionFactory;)Z
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/SessionFactoryUtils

+###org/springframework/orm/hibernate3/LocalJtaDataSourceConnectionProvider
@2.5.1
+#<init>()V
+#supportsAggressiveRelease()Z
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/LocalJtaDataSourceConnectionProvider

+###org/springframework/orm/hibernate3/HibernateCallback
@2.5
+#doInHibernate(Lorg/hibernate/Session;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateCallback

+###org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException
@2.5
+#<init>(Lorg/hibernate/UnresolvableObjectException;)V
+#<init>(Lorg/hibernate/WrongClassException;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException

+###org/springframework/orm/hibernate3/SpringTransactionFactory
@2.5.4
+#<init>()V
+#getDefaultReleaseMode()Lorg/hibernate/ConnectionReleaseMode;
+#createTransaction(Lorg/hibernate/jdbc/JDBCContext;Lorg/hibernate/transaction/TransactionFactory$Context;)Lorg/hibernate/Transaction;
+#configure(Ljava/util/Properties;)V
+#isTransactionManagerRequired()Z
+#areCallbacksLocalToHibernateTransactions()Z
+#isTransactionInProgress(Lorg/hibernate/jdbc/JDBCContext;Lorg/hibernate/transaction/TransactionFactory$Context;Lorg/hibernate/Transaction;)Z
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/SpringTransactionFactory

+###org/springframework/orm/hibernate3/SessionHolder
@2.5
+#<init>(Lorg/hibernate/Session;)V
+#<init>(Ljava/lang/Object;Lorg/hibernate/Session;)V
+#getSession()Lorg/hibernate/Session;
+#getSession(Ljava/lang/Object;)Lorg/hibernate/Session;
+#getValidatedSession()Lorg/hibernate/Session;
+#getValidatedSession(Ljava/lang/Object;)Lorg/hibernate/Session;
+#getAnySession()Lorg/hibernate/Session;
+#addSession(Lorg/hibernate/Session;)V
+#addSession(Ljava/lang/Object;Lorg/hibernate/Session;)V
+#removeSession(Ljava/lang/Object;)Lorg/hibernate/Session;
+#containsSession(Lorg/hibernate/Session;)Z
+#isEmpty()Z
+#doesNotHoldNonDefaultSession()Z
+#setTransaction(Lorg/hibernate/Transaction;)V
+#getTransaction()Lorg/hibernate/Transaction;
+#setPreviousFlushMode(Lorg/hibernate/FlushMode;)V
+#getPreviousFlushMode()Lorg/hibernate/FlushMode;
+#clear()V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/SessionHolder

+###org/springframework/orm/hibernate3/HibernateAccessor
@2.5
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setEntityInterceptorBeanName(Ljava/lang/String;)V
+#setEntityInterceptor(Lorg/hibernate/Interceptor;)V
+#getEntityInterceptor()Lorg/hibernate/Interceptor;
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#getJdbcExceptionTranslator()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#setFlushModeName(Ljava/lang/String;)V
+#setFlushMode(I)V
+#getFlushMode()I
+#setFilterName(Ljava/lang/String;)V
+#setFilterNames([Ljava/lang/String;)V
+#getFilterNames()[Ljava/lang/String;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#convertHibernateAccessException(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateAccessor

+###org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider
@2.5
+#<init>()V
+#configure(Ljava/util/Properties;)V
+#getDataSource()Ljavax/sql/DataSource;
+#getConnection()Ljava/sql/Connection;
+#closeConnection(Ljava/sql/Connection;)V
+#close()V
+#supportsAggressiveRelease()Z
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider

+###org/springframework/orm/hibernate3/HibernateJdbcException
@2.5
+#<init>(Lorg/hibernate/JDBCException;)V
+#getSQLException()Ljava/sql/SQLException;
+#getSql()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateJdbcException

+###org/springframework/orm/hibernate3/TransactionAwareDataSourceConnectionProvider
@2.5
+#<init>()V
+#supportsAggressiveRelease()Z
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/TransactionAwareDataSourceConnectionProvider

+###org/springframework/orm/hibernate3/SpringSessionContext
@2.5
+#<init>(Lorg/hibernate/engine/SessionFactoryImplementor;)V
+#currentSession()Lorg/hibernate/classic/Session;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/SpringSessionContext

+###org/springframework/orm/hibernate3/LocalSessionFactoryBean
@2.5
+#<init>()V
+#getConfigTimeDataSource()Ljavax/sql/DataSource;
+#getConfigTimeTransactionManager()Ljavax/transaction/TransactionManager;
+#getConfigTimeLobHandler()Lorg/springframework/jdbc/support/lob/LobHandler;
+#setConfigurationClass(Ljava/lang/Class;)V
+#setConfigLocation(Lorg/springframework/core/io/Resource;)V
+#setConfigLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingResources([Ljava/lang/String;)V
+#setMappingLocations([Lorg/springframework/core/io/Resource;)V
+#setCacheableMappingLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingJarLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingDirectoryLocations([Lorg/springframework/core/io/Resource;)V
+#setHibernateProperties(Ljava/util/Properties;)V
+#getHibernateProperties()Ljava/util/Properties;
+#setJtaTransactionManager(Ljavax/transaction/TransactionManager;)V
+#setLobHandler(Lorg/springframework/jdbc/support/lob/LobHandler;)V
+#setEntityInterceptor(Lorg/hibernate/Interceptor;)V
+#setNamingStrategy(Lorg/hibernate/cfg/NamingStrategy;)V
+#setTypeDefinitions([Lorg/springframework/orm/hibernate3/TypeDefinitionBean;)V
+#setFilterDefinitions([Lorg/hibernate/engine/FilterDefinition;)V
+#setEntityCacheStrategies(Ljava/util/Properties;)V
+#setCollectionCacheStrategies(Ljava/util/Properties;)V
+#setEventListeners(Ljava/util/Map;)V
+#setSchemaUpdate(Z)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#getConfiguration()Lorg/hibernate/cfg/Configuration;
+#destroy()V
+#dropDatabaseSchema()V
+#createDatabaseSchema()V
+#updateDatabaseSchema()V
@2.5.1
+#getConfigTimeCacheProvider()Lorg/hibernate/cache/CacheProvider;
+#setCacheProvider(Lorg/hibernate/cache/CacheProvider;)V
@3.0.0.RELEASE
+#setCacheRegionFactory(Ljava/lang/Object;)V
*#setCacheProvider(Lorg/hibernate/cache/CacheProvider;)V[deprecated]
@3.0.2.RELEASE
+#validateDatabaseSchema()V
@4.0.0.RELEASE
+#setCacheRegionFactory(Lorg/hibernate/cache/RegionFactory;)V
-#getConfigTimeCacheProvider()Lorg/hibernate/cache/CacheProvider;
-#setCacheRegionFactory(Ljava/lang/Object;)V
-#setCacheProvider(Lorg/hibernate/cache/CacheProvider;)V[deprecated]
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/LocalSessionFactoryBean

+###org/springframework/orm/hibernate3/FilterDefinitionFactoryBean
@2.5
+#<init>()V
+#setFilterName(Ljava/lang/String;)V
+#setParameterTypes(Ljava/util/Properties;)V
+#setDefaultFilterCondition(Ljava/lang/String;)V
+#setBeanName(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@3.0.0.RELEASE
+#setParameterTypes(Ljava/util/Map;)V
+#getObject()Lorg/hibernate/engine/FilterDefinition;
-#setParameterTypes(Ljava/util/Properties;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/FilterDefinitionFactoryBean

+###org/springframework/orm/hibernate3/HibernateSystemException
@2.5
+#<init>(Lorg/hibernate/HibernateException;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateSystemException

+###org/springframework/orm/hibernate3/TypeDefinitionBean
@2.5
+#<init>()V
+#setTypeName(Ljava/lang/String;)V
+#getTypeName()Ljava/lang/String;
+#setTypeClass(Ljava/lang/String;)V
+#getTypeClass()Ljava/lang/String;
+#setParameters(Ljava/util/Properties;)V
+#getParameters()Ljava/util/Properties;
+#setBeanName(Ljava/lang/String;)V
+#afterPropertiesSet()V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/TypeDefinitionBean

+###org/springframework/orm/hibernate3/HibernateQueryException
@2.5
+#<init>(Lorg/hibernate/QueryException;)V
+#getQueryString()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/HibernateQueryException

+###org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean
@2.5
+#<init>()V
+#setConfigurationClass(Ljava/lang/Class;)V
+#setAnnotatedClasses([Ljava/lang/Class;)V
+#setAnnotatedPackages([Ljava/lang/String;)V
@2.5.6
+#setPackagesToScan([Ljava/lang/String;)V
+#setEntityTypeFilters([Lorg/springframework/core/type/filter/TypeFilter;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
@4.0.0.RELEASE
-#setConfigurationClass(Ljava/lang/Class;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean

+###org/springframework/orm/hibernate3/support/BlobByteArrayType
@2.5
+#<init>()V
+#sqlTypes()[I
+#returnedClass()Ljava/lang/Class;
+#isMutable()Z
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#deepCopy(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/BlobByteArrayType

+###org/springframework/orm/hibernate3/support/AbstractLobType
@2.5
+#isMutable()Z
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#hashCode(Ljava/lang/Object;)I
+#deepCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#disassemble(Ljava/lang/Object;)Ljava/io/Serializable;
+#assemble(Ljava/io/Serializable;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#nullSafeGet(Ljava/sql/ResultSet;[Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#nullSafeSet(Ljava/sql/PreparedStatement;Ljava/lang/Object;I)V
@4.0.0.RELEASE
*#nullSafeGet(Ljava/sql/ResultSet;[Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
*#nullSafeSet(Ljava/sql/PreparedStatement;Ljava/lang/Object;I)V[deprecated]
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/AbstractLobType

+###org/springframework/orm/hibernate3/support/OpenSessionInViewFilter
@2.5
+#<init>()V
+#setSessionFactoryBeanName(Ljava/lang/String;)V
+#setSingleSession(Z)V
+#setFlushMode(Lorg/hibernate/FlushMode;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/OpenSessionInViewFilter

+###org/springframework/orm/hibernate3/support/HibernateDaoSupport
@2.5
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setHibernateTemplate(Lorg/springframework/orm/hibernate3/HibernateTemplate;)V
+#getHibernateTemplate()Lorg/springframework/orm/hibernate3/HibernateTemplate;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/HibernateDaoSupport

+###org/springframework/orm/hibernate3/support/ClobStringType
@2.5
+#<init>()V
+#sqlTypes()[I
+#returnedClass()Ljava/lang/Class;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/ClobStringType

+###org/springframework/orm/hibernate3/support/BlobStringType
@2.5
+#<init>()V
+#sqlTypes()[I
+#returnedClass()Ljava/lang/Class;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/BlobStringType

+###org/springframework/orm/hibernate3/support/OpenSessionInterceptor
@4.0.2.RELEASE
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#afterPropertiesSet()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/OpenSessionInterceptor

+###org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener
@2.5
+#<init>()V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener

+###org/springframework/orm/hibernate3/support/ScopedBeanInterceptor
@2.5
+#<init>()V
+#getEntityName(Ljava/lang/Object;)Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/ScopedBeanInterceptor

+###org/springframework/orm/hibernate3/support/BlobSerializableType
@2.5
+#<init>()V
+#sqlTypes()[I
+#returnedClass()Ljava/lang/Class;
+#isMutable()Z
+#deepCopy(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/BlobSerializableType

+###org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor
@2.5
+#<init>()V
+#setSingleSession(Z)V
+#preHandle(Lorg/springframework/web/context/request/WebRequest;)V
+#postHandle(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/ui/ModelMap;)V
+#afterCompletion(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/Exception;)V
@3.2.0.RELEASE
+#afterConcurrentHandlingStarted(Lorg/springframework/web/context/request/WebRequest;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor

+###org/springframework/orm/jpa/vendor/OpenJpaDialect
@2.5
+#<init>()V
+#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
@5.0.0.RELEASE
-###org/springframework/orm/jpa/vendor/OpenJpaDialect

+###org/springframework/orm/jpa/vendor/OpenJpaVendorAdapter
@2.5
+#<init>()V
+#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
+#getJpaPropertyMap()Ljava/util/Map;
+#getEntityManagerInterface()Ljava/lang/Class;
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
@2.5.2
+#getPersistenceProviderRootPackage()Ljava/lang/String;
+#getEntityManagerFactoryInterface()Ljava/lang/Class;
@4.1.0.RELEASE
+#getJpaDialect()Lorg/springframework/orm/jpa/vendor/OpenJpaDialect;
@5.0.0.RELEASE
-###org/springframework/orm/jpa/vendor/OpenJpaVendorAdapter

+###org/springframework/orm/jpa/support/AsyncRequestInterceptor
@3.2.5.RELEASE
+#<init>(Ljavax/persistence/EntityManagerFactory;Lorg/springframework/orm/jpa/EntityManagerHolder;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#bindSession()V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#afterCompletion(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#beforeConcurrentHandling(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;Ljava/lang/Object;)V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)Z
+#afterCompletion(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
@4.2.0.RELEASE
-###org/springframework/orm/jpa/support/AsyncRequestInterceptor

+###org/springframework/orm/jdo/JdoSystemException
@1.0-rc1
+#<init>(Ljavax/jdo/JDOException;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/JdoSystemException

+###org/springframework/orm/jdo/JdoDialect
@1.0-rc1
+#getJdbcConnection(Ljavax/jdo/PersistenceManager;)Ljava/sql/Connection;
+#flush(Ljavax/jdo/PersistenceManager;)V
+#translateException(Ljavax/jdo/JDOException;)Lorg/springframework/dao/DataAccessException;
@1.1-rc1
+#beginTransaction(Ljavax/jdo/Transaction;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#cleanupTransaction(Ljava/lang/Object;)V
+#getJdbcConnection(Ljavax/jdo/PersistenceManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
+#releaseJdbcConnection(Lorg/springframework/jdbc/datasource/ConnectionHandle;Ljavax/jdo/PersistenceManager;)V
-#getJdbcConnection(Ljavax/jdo/PersistenceManager;)Ljava/sql/Connection;
@1.1.1
+#applyQueryTimeout(Ljavax/jdo/Query;I)V
@1.2.2
+#detachCopy(Ljavax/jdo/PersistenceManager;Ljava/lang/Object;)Ljava/lang/Object;
+#detachCopyAll(Ljavax/jdo/PersistenceManager;Ljava/util/Collection;)Ljava/util/Collection;
+#attachCopy(Ljavax/jdo/PersistenceManager;Ljava/lang/Object;)Ljava/lang/Object;
+#attachCopyAll(Ljavax/jdo/PersistenceManager;Ljava/util/Collection;)Ljava/util/Collection;
+#newNamedQuery(Ljavax/jdo/PersistenceManager;Ljava/lang/Class;Ljava/lang/String;)Ljavax/jdo/Query;
@2.5
-#detachCopy(Ljavax/jdo/PersistenceManager;Ljava/lang/Object;)Ljava/lang/Object;
-#detachCopyAll(Ljavax/jdo/PersistenceManager;Ljava/util/Collection;)Ljava/util/Collection;
-#attachCopy(Ljavax/jdo/PersistenceManager;Ljava/lang/Object;)Ljava/lang/Object;
-#attachCopyAll(Ljavax/jdo/PersistenceManager;Ljava/util/Collection;)Ljava/util/Collection;
-#newNamedQuery(Ljavax/jdo/PersistenceManager;Ljava/lang/Class;Ljava/lang/String;)Ljavax/jdo/Query;
@3.0.0.RELEASE
-#flush(Ljavax/jdo/PersistenceManager;)V
@4.0.0.RELEASE
-#applyQueryTimeout(Ljavax/jdo/Query;I)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/JdoDialect

+###org/springframework/orm/jdo/PersistenceManagerFactoryUtils
@1.0-rc1
+#<init>()V
+#getPersistenceManager(Ljavax/jdo/PersistenceManagerFactory;Z)Ljavax/jdo/PersistenceManager;
+#getPersistenceManager(Ljavax/jdo/PersistenceManagerFactory;ZZ)Ljavax/jdo/PersistenceManager;
+#convertJdoAccessException(Ljavax/jdo/JDOException;)Lorg/springframework/dao/DataAccessException;
+#closePersistenceManagerIfNecessary(Ljavax/jdo/PersistenceManager;Ljavax/jdo/PersistenceManagerFactory;)V
@1.1-rc1
+#newJdbcExceptionTranslator(Ljavax/jdo/PersistenceManagerFactory;)Lorg/springframework/jdbc/support/SQLExceptionTranslator;
@1.1.1
+#applyTransactionTimeout(Ljavax/jdo/Query;Ljavax/jdo/PersistenceManagerFactory;Lorg/springframework/orm/jdo/JdoDialect;)V
@1.2
+#doGetPersistenceManager(Ljavax/jdo/PersistenceManagerFactory;Z)Ljavax/jdo/PersistenceManager;
+#releasePersistenceManager(Ljavax/jdo/PersistenceManager;Ljavax/jdo/PersistenceManagerFactory;)V
+#doReleasePersistenceManager(Ljavax/jdo/PersistenceManager;Ljavax/jdo/PersistenceManagerFactory;)V
-#getPersistenceManager(Ljavax/jdo/PersistenceManagerFactory;ZZ)Ljavax/jdo/PersistenceManager;
@1.2.4
+#isPersistenceManagerTransactional(Ljavax/jdo/PersistenceManager;Ljavax/jdo/PersistenceManagerFactory;)Z
@2.5
-#newJdbcExceptionTranslator(Ljavax/jdo/PersistenceManagerFactory;)Lorg/springframework/jdbc/support/SQLExceptionTranslator;
-#closePersistenceManagerIfNecessary(Ljavax/jdo/PersistenceManager;Ljavax/jdo/PersistenceManagerFactory;)V
@4.0.0.RELEASE
+#applyTransactionTimeout(Ljavax/jdo/Query;Ljavax/jdo/PersistenceManagerFactory;)V
-#applyTransactionTimeout(Ljavax/jdo/Query;Ljavax/jdo/PersistenceManagerFactory;Lorg/springframework/orm/jdo/JdoDialect;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/PersistenceManagerFactoryUtils

+###org/springframework/orm/jdo/JdoObjectRetrievalFailureException
@1.1-rc1
+#<init>(Ljavax/jdo/JDOObjectNotFoundException;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/JdoObjectRetrievalFailureException

+###org/springframework/orm/jdo/JdoOptimisticLockingFailureException
@1.1-rc1
+#<init>(Ljavax/jdo/JDOOptimisticVerificationException;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/JdoOptimisticLockingFailureException

+###org/springframework/orm/jdo/JdoResourceFailureException
@1.1-rc1
+#<init>(Ljavax/jdo/JDODataStoreException;)V
+#<init>(Ljavax/jdo/JDOFatalDataStoreException;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/JdoResourceFailureException

+###org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy
@1.2
+#<init>()V
+#setTargetPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
+#getTargetPersistenceManagerFactory()Ljavax/jdo/PersistenceManagerFactory;
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.2.3
+#setAllowCreate(Z)V
+#isAllowCreate()Z
@1.2.8
-#isAllowCreate()Z
@3.0.0.RELEASE
+#getObject()Ljavax/jdo/PersistenceManagerFactory;
@5.0.0.RELEASE
-###org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy

+###org/springframework/orm/jdo/DefaultJdoDialect
@1.1-rc1
+#<init>()V
+#<init>(Ljavax/jdo/PersistenceManagerFactory;)V
+#setPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
+#getPersistenceManagerFactory()Ljavax/jdo/PersistenceManagerFactory;
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#getJdbcExceptionTranslator()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#afterPropertiesSet()V
+#beginTransaction(Ljavax/jdo/Transaction;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#cleanupTransaction(Ljava/lang/Object;)V
+#getJdbcConnection(Ljavax/jdo/PersistenceManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
+#releaseJdbcConnection(Lorg/springframework/jdbc/datasource/ConnectionHandle;Ljavax/jdo/PersistenceManager;)V
+#flush(Ljavax/jdo/PersistenceManager;)V
+#translateException(Ljavax/jdo/JDOException;)Lorg/springframework/dao/DataAccessException;
@1.1.1
+#applyQueryTimeout(Ljavax/jdo/Query;I)V
@1.2-rc2
-#afterPropertiesSet()V
@1.2.2
+#detachCopy(Ljavax/jdo/PersistenceManager;Ljava/lang/Object;)Ljava/lang/Object;
+#detachCopyAll(Ljavax/jdo/PersistenceManager;Ljava/util/Collection;)Ljava/util/Collection;
+#attachCopy(Ljavax/jdo/PersistenceManager;Ljava/lang/Object;)Ljava/lang/Object;
+#attachCopyAll(Ljavax/jdo/PersistenceManager;Ljava/util/Collection;)Ljava/util/Collection;
+#newNamedQuery(Ljavax/jdo/PersistenceManager;Ljava/lang/Class;Ljava/lang/String;)Ljavax/jdo/Query;
@2.5
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
-#<init>(Ljavax/jdo/PersistenceManagerFactory;)V
-#setPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
-#getPersistenceManagerFactory()Ljavax/jdo/PersistenceManagerFactory;
-#detachCopy(Ljavax/jdo/PersistenceManager;Ljava/lang/Object;)Ljava/lang/Object;
-#detachCopyAll(Ljavax/jdo/PersistenceManager;Ljava/util/Collection;)Ljava/util/Collection;
-#attachCopy(Ljavax/jdo/PersistenceManager;Ljava/lang/Object;)Ljava/lang/Object;
-#attachCopyAll(Ljavax/jdo/PersistenceManager;Ljava/util/Collection;)Ljava/util/Collection;
-#newNamedQuery(Ljavax/jdo/PersistenceManager;Ljava/lang/Class;Ljava/lang/String;)Ljavax/jdo/Query;
@3.0.0.RELEASE
-#flush(Ljavax/jdo/PersistenceManager;)V
@3.1.0.RELEASE
+#<init>(Ljava/lang/Object;)V
@4.0.0.RELEASE
-#applyQueryTimeout(Ljavax/jdo/Query;I)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/DefaultJdoDialect

+###org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean
@1.0-rc1
+#<init>()V
+#setConfigLocation(Lorg/springframework/core/io/Resource;)V
+#setJdoProperties(Ljava/util/Properties;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#destroy()V
@1.0
+#setDataSource(Ljavax/sql/DataSource;)V
@1.1-rc1
-#setDataSource(Ljavax/sql/DataSource;)V
@2.5
+#setPersistenceManagerFactoryName(Ljava/lang/String;)V
+#setJdoPropertyMap(Ljava/util/Map;)V
+#getJdoPropertyMap()Ljava/util/Map;
+#setJdoDialect(Lorg/springframework/orm/jdo/JdoDialect;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@3.0.0.RELEASE
+#getObject()Ljavax/jdo/PersistenceManagerFactory;
@5.0.0.RELEASE
-###org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean

+###org/springframework/orm/jdo/JdoTransactionManager
@1.0-rc1
+#<init>()V
+#<init>(Ljavax/jdo/PersistenceManagerFactory;)V
+#setPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
+#getPersistenceManagerFactory()Ljavax/jdo/PersistenceManagerFactory;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setJdoDialect(Lorg/springframework/orm/jdo/JdoDialect;)V
+#getJdoDialect()Lorg/springframework/orm/jdo/JdoDialect;
+#afterPropertiesSet()V
@1.1
+#setAutodetectDataSource(Z)V
@2.5
+#getResourceFactory()Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/jdo/JdoTransactionManager

+###org/springframework/orm/jdo/JdoUsageException
@1.0-rc1
+#<init>(Ljavax/jdo/JDOException;)V
@1.1-rc1
+#<init>(Ljavax/jdo/JDOUserException;)V
+#<init>(Ljavax/jdo/JDOFatalUserException;)V
-#<init>(Ljavax/jdo/JDOException;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/JdoUsageException

+###org/springframework/orm/jdo/PersistenceManagerHolder
@1.0-rc1
+#<init>(Ljavax/jdo/PersistenceManager;)V
+#getPersistenceManager()Ljavax/jdo/PersistenceManager;
@2.5.1
+#clear()V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/PersistenceManagerHolder

+###org/springframework/orm/jdo/support/OpenPersistenceManagerInViewFilter
@1.1-rc1
+#<init>()V
+#setPersistenceManagerFactoryBeanName(Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/support/OpenPersistenceManagerInViewFilter

+###org/springframework/orm/jdo/support/StandardPersistenceManagerProxyBean
@3.0.0.RELEASE
+#<init>()V
+#setPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
+#getObject()Ljavax/jdo/PersistenceManager;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/jdo/support/StandardPersistenceManagerProxyBean

+###org/springframework/orm/jdo/support/OpenPersistenceManagerInViewInterceptor
@1.1-rc1
+#<init>()V
+#setPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
+#getPersistenceManagerFactory()Ljavax/jdo/PersistenceManagerFactory;
+#preHandle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;)Z
+#afterCompletion(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)V
@2.5
+#preHandle(Lorg/springframework/web/context/request/WebRequest;)V
+#postHandle(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/ui/ModelMap;)V
+#afterCompletion(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/Exception;)V
-#preHandle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;)Z
-#afterCompletion(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/support/OpenPersistenceManagerInViewInterceptor

+###org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean
@3.0.0.RELEASE
+#<init>()V
+#setPersistenceManagerInterface(Ljava/lang/Class;)V
+#setAllowCreate(Z)V
+#afterPropertiesSet()V
+#getObject()Ljavax/jdo/PersistenceManager;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@3.1.0.RELEASE
+#setPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
+#setJdoDialect(Lorg/springframework/orm/jdo/JdoDialect;)V
@5.0.0.RELEASE
-###org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean

+###org/springframework/orm/hibernate4/HibernateExceptionTranslator
@3.1.0.RELEASE
+#<init>()V
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateExceptionTranslator

+###org/springframework/orm/hibernate4/HibernateOperations
@4.0.1.RELEASE
+#execute(Lorg/springframework/orm/hibernate4/HibernateCallback;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#load(Ljava/lang/Object;Ljava/io/Serializable;)V
+#refresh(Ljava/lang/Object;)V
+#refresh(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#contains(Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;)V
+#initialize(Ljava/lang/Object;)V
+#enableFilter(Ljava/lang/String;)Lorg/hibernate/Filter;
+#lock(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#lock(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#save(Ljava/lang/Object;)Ljava/io/Serializable;
+#save(Ljava/lang/String;Ljava/lang/Object;)Ljava/io/Serializable;
+#update(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#update(Ljava/lang/String;Ljava/lang/Object;)V
+#update(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#saveOrUpdate(Ljava/lang/Object;)V
+#saveOrUpdate(Ljava/lang/String;Ljava/lang/Object;)V
+#replicate(Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#replicate(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#persist(Ljava/lang/Object;)V
+#persist(Ljava/lang/String;Ljava/lang/Object;)V
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#deleteAll(Ljava/util/Collection;)V
+#flush()V
+#clear()V
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;II)Ljava/util/List;
+#findByExample(Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/Object;II)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;
+#closeIterator(Ljava/util/Iterator;)V
+#bulkUpdate(Ljava/lang/String;[Ljava/lang/Object;)I
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateOperations

+###org/springframework/orm/hibernate4/HibernateTransactionManager
@3.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/hibernate/SessionFactory;)V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setAutodetectDataSource(Z)V
+#setPrepareConnection(Z)V
+#setHibernateManagedSession(Z)V
+#afterPropertiesSet()V
+#getResourceFactory()Ljava/lang/Object;
@3.2.2.RELEASE
+#setEntityInterceptorBeanName(Ljava/lang/String;)V
+#setEntityInterceptor(Lorg/hibernate/Interceptor;)V
+#getEntityInterceptor()Lorg/hibernate/Interceptor;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@4.1.2.RELEASE
+#setAllowResultAccessAfterCompletion(Z)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateTransactionManager

+###org/springframework/orm/hibernate4/LocalSessionFactoryBuilder
@3.1.0.RELEASE
+#<init>(Ljavax/sql/DataSource;)V
+#<init>(Ljavax/sql/DataSource;Ljava/lang/ClassLoader;)V
+#<init>(Ljavax/sql/DataSource;Lorg/springframework/core/io/ResourceLoader;)V
+#addAnnotatedClasses([Ljava/lang/Class;)Lorg/springframework/orm/hibernate4/LocalSessionFactoryBuilder;
+#addPackages([Ljava/lang/String;)Lorg/springframework/orm/hibernate4/LocalSessionFactoryBuilder;
+#scanPackages([Ljava/lang/String;)Lorg/springframework/orm/hibernate4/LocalSessionFactoryBuilder;
+#buildSessionFactory()Lorg/hibernate/SessionFactory;
@3.1.2.RELEASE
+#setJtaTransactionManager(Ljava/lang/Object;)Lorg/springframework/orm/hibernate4/LocalSessionFactoryBuilder;
@4.0.0.RELEASE
+#setMultiTenantConnectionProvider(Ljava/lang/Object;)Lorg/springframework/orm/hibernate4/LocalSessionFactoryBuilder;
+#setCurrentTenantIdentifierResolver(Ljava/lang/Object;)Lorg/springframework/orm/hibernate4/LocalSessionFactoryBuilder;
+#setCacheRegionFactory(Lorg/hibernate/cache/spi/RegionFactory;)Lorg/springframework/orm/hibernate4/LocalSessionFactoryBuilder;
+#buildSettings(Ljava/util/Properties;Lorg/hibernate/service/ServiceRegistry;)Lorg/hibernate/cfg/Settings;
@4.1.0.RELEASE
+#setEntityTypeFilters([Lorg/springframework/core/type/filter/TypeFilter;)Lorg/springframework/orm/hibernate4/LocalSessionFactoryBuilder;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/LocalSessionFactoryBuilder

+###org/springframework/orm/hibernate4/HibernateOptimisticLockingFailureException
@3.1.0.RELEASE
+#<init>(Lorg/hibernate/StaleObjectStateException;)V
+#<init>(Lorg/hibernate/StaleStateException;)V
@4.0.0.RELEASE
+#<init>(Lorg/hibernate/dialect/lock/OptimisticEntityLockException;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateOptimisticLockingFailureException

+###org/springframework/orm/hibernate4/HibernateTemplate
@4.0.1.RELEASE
+#<init>()V
+#<init>(Lorg/hibernate/SessionFactory;)V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setFilterNames([Ljava/lang/String;)V
+#getFilterNames()[Ljava/lang/String;
+#setExposeNativeSession(Z)V
+#isExposeNativeSession()Z
+#setCheckWriteOperations(Z)V
+#isCheckWriteOperations()Z
+#setCacheQueries(Z)V
+#isCacheQueries()Z
+#setQueryCacheRegion(Ljava/lang/String;)V
+#getQueryCacheRegion()Ljava/lang/String;
+#setFetchSize(I)V
+#getFetchSize()I
+#setMaxResults(I)V
+#getMaxResults()I
+#afterPropertiesSet()V
+#execute(Lorg/springframework/orm/hibernate4/HibernateCallback;)Ljava/lang/Object;
+#executeWithNativeSession(Lorg/springframework/orm/hibernate4/HibernateCallback;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/String;Ljava/io/Serializable;Lorg/hibernate/LockMode;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#load(Ljava/lang/Object;Ljava/io/Serializable;)V
+#refresh(Ljava/lang/Object;)V
+#refresh(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#contains(Ljava/lang/Object;)Z
+#evict(Ljava/lang/Object;)V
+#initialize(Ljava/lang/Object;)V
+#enableFilter(Ljava/lang/String;)Lorg/hibernate/Filter;
+#lock(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#lock(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#save(Ljava/lang/Object;)Ljava/io/Serializable;
+#save(Ljava/lang/String;Ljava/lang/Object;)Ljava/io/Serializable;
+#update(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#update(Ljava/lang/String;Ljava/lang/Object;)V
+#update(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#saveOrUpdate(Ljava/lang/Object;)V
+#saveOrUpdate(Ljava/lang/String;Ljava/lang/Object;)V
+#replicate(Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#replicate(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/ReplicationMode;)V
+#persist(Ljava/lang/Object;)V
+#persist(Ljava/lang/String;Ljava/lang/Object;)V
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/LockMode;)V
+#deleteAll(Ljava/util/Collection;)V
+#flush()V
+#clear()V
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;)Ljava/util/List;
+#findByCriteria(Lorg/hibernate/criterion/DetachedCriteria;II)Ljava/util/List;
+#findByExample(Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByExample(Ljava/lang/Object;II)Ljava/util/List;
+#findByExample(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;
+#closeIterator(Ljava/util/Iterator;)V
+#bulkUpdate(Ljava/lang/String;[Ljava/lang/Object;)I
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateTemplate

+###org/springframework/orm/hibernate4/SessionFactoryUtils
@3.1.0.RELEASE
+#<init>()V
+#getDataSource(Lorg/hibernate/SessionFactory;)Ljavax/sql/DataSource;
+#openSession(Lorg/hibernate/SessionFactory;)Lorg/hibernate/Session;
+#closeSession(Lorg/hibernate/Session;)V
+#convertHibernateAccessException(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
@3.2.0.RELEASE
-#openSession(Lorg/hibernate/SessionFactory;)Lorg/hibernate/Session;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/SessionFactoryUtils

+###org/springframework/orm/hibernate4/SpringFlushSynchronization
@4.0.8.RELEASE
+#<init>(Lorg/hibernate/Session;)V
+#flush()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.1.0.RELEASE
-###org/springframework/orm/hibernate4/SpringFlushSynchronization

+###org/springframework/orm/hibernate4/HibernateCallback
@4.0.1.RELEASE
+#doInHibernate(Lorg/hibernate/Session;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateCallback

+###org/springframework/orm/hibernate4/HibernateObjectRetrievalFailureException
@3.1.0.RELEASE
+#<init>(Lorg/hibernate/UnresolvableObjectException;)V
+#<init>(Lorg/hibernate/WrongClassException;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateObjectRetrievalFailureException

+###org/springframework/orm/hibernate4/SessionHolder
@3.1.0.RELEASE
+#<init>(Lorg/hibernate/Session;)V
+#getSession()Lorg/hibernate/Session;
+#setTransaction(Lorg/hibernate/Transaction;)V
+#getTransaction()Lorg/hibernate/Transaction;
+#setPreviousFlushMode(Lorg/hibernate/FlushMode;)V
+#getPreviousFlushMode()Lorg/hibernate/FlushMode;
+#clear()V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/SessionHolder

+###org/springframework/orm/hibernate4/HibernateJdbcException
@3.1.0.RELEASE
+#<init>(Lorg/hibernate/JDBCException;)V
+#getSQLException()Ljava/sql/SQLException;
+#getSql()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateJdbcException

+###org/springframework/orm/hibernate4/SpringSessionContext
@3.1.0.RELEASE
+#<init>(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)V
+#currentSession()Lorg/hibernate/Session;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/SpringSessionContext

+###org/springframework/orm/hibernate4/LocalSessionFactoryBean
@3.1.0.RELEASE
+#<init>()V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setConfigLocation(Lorg/springframework/core/io/Resource;)V
+#setConfigLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingResources([Ljava/lang/String;)V
+#setMappingLocations([Lorg/springframework/core/io/Resource;)V
+#setCacheableMappingLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingJarLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingDirectoryLocations([Lorg/springframework/core/io/Resource;)V
+#setNamingStrategy(Lorg/hibernate/cfg/NamingStrategy;)V
+#setHibernateProperties(Ljava/util/Properties;)V
+#getHibernateProperties()Ljava/util/Properties;
+#setAnnotatedClasses([Ljava/lang/Class;)V
+#setAnnotatedPackages([Ljava/lang/String;)V
+#setPackagesToScan([Ljava/lang/String;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#afterPropertiesSet()V
+#getObject()Lorg/hibernate/SessionFactory;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#destroy()V
+#getObject()Ljava/lang/Object;
@3.1.1.RELEASE
+#setEntityInterceptor(Lorg/hibernate/Interceptor;)V
+#getConfiguration()Lorg/hibernate/cfg/Configuration;
@3.1.2.RELEASE
+#setJtaTransactionManager(Ljava/lang/Object;)V
@4.0.0.RELEASE
+#setMultiTenantConnectionProvider(Ljava/lang/Object;)V
+#setCurrentTenantIdentifierResolver(Ljava/lang/Object;)V
+#setCacheRegionFactory(Lorg/hibernate/cache/spi/RegionFactory;)V
@4.1.0.RELEASE
+#setEntityTypeFilters([Lorg/springframework/core/type/filter/TypeFilter;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/LocalSessionFactoryBean

+###org/springframework/orm/hibernate4/HibernateSystemException
@3.1.0.RELEASE
+#<init>(Lorg/hibernate/HibernateException;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateSystemException

+###org/springframework/orm/hibernate4/HibernateQueryException
@3.1.0.RELEASE
+#<init>(Lorg/hibernate/QueryException;)V
+#getQueryString()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/HibernateQueryException

+###org/springframework/orm/hibernate4/SpringJtaSessionContext
@3.1.0.RELEASE
+#<init>(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/SpringJtaSessionContext

+###org/springframework/orm/hibernate4/support/AsyncRequestInterceptor
@3.2.5.RELEASE
+#<init>(Lorg/hibernate/SessionFactory;Lorg/springframework/orm/hibernate4/SessionHolder;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#bindSession()V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#afterCompletion(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#beforeConcurrentHandling(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;Ljava/lang/Object;)V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)Z
+#afterCompletion(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
@4.2.0.RELEASE
-###org/springframework/orm/hibernate4/support/AsyncRequestInterceptor

+###org/springframework/orm/hibernate4/support/OpenSessionInViewFilter
@3.1.0.RELEASE
+#<init>()V
+#setSessionFactoryBeanName(Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/support/OpenSessionInViewFilter

+###org/springframework/orm/hibernate4/support/HibernateDaoSupport
@4.0.1.RELEASE
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#setHibernateTemplate(Lorg/springframework/orm/hibernate4/HibernateTemplate;)V
+#getHibernateTemplate()Lorg/springframework/orm/hibernate4/HibernateTemplate;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/support/HibernateDaoSupport

+###org/springframework/orm/hibernate4/support/OpenSessionInterceptor
@4.0.2.RELEASE
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#afterPropertiesSet()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/support/OpenSessionInterceptor

+###org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor
@3.1.0.RELEASE
+#<init>()V
+#setSessionFactory(Lorg/hibernate/SessionFactory;)V
+#getSessionFactory()Lorg/hibernate/SessionFactory;
+#preHandle(Lorg/springframework/web/context/request/WebRequest;)V
+#postHandle(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/ui/ModelMap;)V
+#afterCompletion(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/Exception;)V
@3.2.0.RELEASE
+#afterConcurrentHandlingStarted(Lorg/springframework/web/context/request/WebRequest;)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor

+###org/springframework/orm/hibernate4/SpringSessionSynchronization
@4.1.2.RELEASE
+#<init>(Lorg/springframework/orm/hibernate4/SessionHolder;Lorg/hibernate/SessionFactory;)V
+#<init>(Lorg/springframework/orm/hibernate4/SessionHolder;Lorg/hibernate/SessionFactory;Z)V
+#getOrder()I
+#suspend()V
+#resume()V
+#flush()V
+#beforeCommit(Z)V
+#beforeCompletion()V
+#afterCommit()V
+#afterCompletion(I)V
@5.0.0.RELEASE
-###org/springframework/orm/hibernate4/SpringSessionSynchronization

+###org/springframework/orm/hibernate5/SpringBeanContainer
@5.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#getBean(Ljava/lang/Class;Lorg/hibernate/resource/beans/container/spi/BeanContainer$LifecycleOptions;Lorg/hibernate/resource/beans/spi/BeanInstanceProducer;)Lorg/hibernate/resource/beans/container/spi/ContainedBean;
+#getBean(Ljava/lang/String;Ljava/lang/Class;Lorg/hibernate/resource/beans/container/spi/BeanContainer$LifecycleOptions;Lorg/hibernate/resource/beans/spi/BeanInstanceProducer;)Lorg/hibernate/resource/beans/container/spi/ContainedBean;
+#stop()V

+###org/springframework/orm/ibatis/SqlMapCallback
@1.0-rc1
+#doInMappedStatement(Lcom/ibatis/db/sqlmap/MappedStatement;Ljava/sql/Connection;)Ljava/lang/Object;
@2.5
-###org/springframework/orm/ibatis/SqlMapCallback

+###org/springframework/orm/ibatis/SqlMapClientCallback
@1.0
+#doInSqlMapClient(Lcom/ibatis/sqlmap/client/SqlMapExecutor;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/SqlMapClientCallback

+###org/springframework/orm/ibatis/SqlMapClientFactoryBean
@1.0
+#<init>()V
+#setConfigLocation(Lorg/springframework/core/io/Resource;)V
+#setSqlMapClientProperties(Ljava/util/Properties;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.1-rc1
+#setDataSource(Ljavax/sql/DataSource;)V
@1.1.3
+#setUseTransactionAwareDataSource(Z)V
+#setTransactionConfigClass(Ljava/lang/Class;)V
+#setTransactionConfigProperties(Ljava/util/Properties;)V
@1.1.5
+#getConfigTimeLobHandler()Lorg/springframework/jdbc/support/lob/LobHandler;
+#setLobHandler(Lorg/springframework/jdbc/support/lob/LobHandler;)V
@2.5.5
+#setConfigLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingLocations([Lorg/springframework/core/io/Resource;)V
@3.0.0.RELEASE
+#getObject()Lcom/ibatis/sqlmap/client/SqlMapClient;
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/SqlMapClientFactoryBean

+###org/springframework/orm/ibatis/SqlMapClientOperations
@1.0
+#queryForObject(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#queryForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#queryForList(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#queryForList(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#queryForList(Ljava/lang/String;Ljava/lang/Object;Lcom/ibatis/sqlmap/client/event/RowHandler;)Ljava/util/List;
+#queryForMap(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Map;
+#queryForMap(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#insert(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#update(Ljava/lang/String;Ljava/lang/Object;)I
+#delete(Ljava/lang/String;Ljava/lang/Object;)I
@1.1-rc1
+#queryWithRowHandler(Ljava/lang/String;Ljava/lang/Object;Lcom/ibatis/sqlmap/client/event/RowHandler;)V
+#queryForPaginatedList(Ljava/lang/String;Ljava/lang/Object;I)Lcom/ibatis/common/util/PaginatedList;
@1.1.3
-#queryForList(Ljava/lang/String;Ljava/lang/Object;Lcom/ibatis/sqlmap/client/event/RowHandler;)Ljava/util/List;
@1.1.4
+#update(Ljava/lang/String;Ljava/lang/Object;I)V
+#delete(Ljava/lang/String;Ljava/lang/Object;I)V
@1.2.9
+#queryForObject(Ljava/lang/String;)Ljava/lang/Object;
+#queryForList(Ljava/lang/String;)Ljava/util/List;
+#queryForList(Ljava/lang/String;II)Ljava/util/List;
+#queryWithRowHandler(Ljava/lang/String;Lcom/ibatis/sqlmap/client/event/RowHandler;)V
+#queryForPaginatedList(Ljava/lang/String;I)Lcom/ibatis/common/util/PaginatedList;
+#insert(Ljava/lang/String;)Ljava/lang/Object;
+#update(Ljava/lang/String;)I
+#delete(Ljava/lang/String;)I
@3.0.0.RELEASE
-#queryForPaginatedList(Ljava/lang/String;I)Lcom/ibatis/common/util/PaginatedList;
-#queryForPaginatedList(Ljava/lang/String;Ljava/lang/Object;I)Lcom/ibatis/common/util/PaginatedList;
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/SqlMapClientOperations

+###org/springframework/orm/ibatis/SqlMapClientTemplate
@1.0
+#<init>()V
+#<init>(Ljavax/sql/DataSource;Lcom/ibatis/sqlmap/client/SqlMapClient;)V
+#setSqlMapClient(Lcom/ibatis/sqlmap/client/SqlMapClient;)V
+#getSqlMapClient()Lcom/ibatis/sqlmap/client/SqlMapClient;
+#afterPropertiesSet()V
+#execute(Lorg/springframework/orm/ibatis/SqlMapClientCallback;)Ljava/lang/Object;
+#executeWithListResult(Lorg/springframework/orm/ibatis/SqlMapClientCallback;)Ljava/util/List;
+#executeWithMapResult(Lorg/springframework/orm/ibatis/SqlMapClientCallback;)Ljava/util/Map;
+#queryForObject(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#queryForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#queryForList(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#queryForList(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#queryForList(Ljava/lang/String;Ljava/lang/Object;Lcom/ibatis/sqlmap/client/event/RowHandler;)Ljava/util/List;
+#queryForMap(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Map;
+#queryForMap(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#insert(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#update(Ljava/lang/String;Ljava/lang/Object;)I
+#delete(Ljava/lang/String;Ljava/lang/Object;)I
@1.1-rc1
+#<init>(Lcom/ibatis/sqlmap/client/SqlMapClient;)V
+#getDataSource()Ljavax/sql/DataSource;
+#queryWithRowHandler(Ljava/lang/String;Ljava/lang/Object;Lcom/ibatis/sqlmap/client/event/RowHandler;)V
+#queryForPaginatedList(Ljava/lang/String;Ljava/lang/Object;I)Lcom/ibatis/common/util/PaginatedList;
@1.1.3
-#queryForList(Ljava/lang/String;Ljava/lang/Object;Lcom/ibatis/sqlmap/client/event/RowHandler;)Ljava/util/List;
@1.1.4
+#update(Ljava/lang/String;Ljava/lang/Object;I)V
+#delete(Ljava/lang/String;Ljava/lang/Object;I)V
@1.2.9
+#queryForObject(Ljava/lang/String;)Ljava/lang/Object;
+#queryForList(Ljava/lang/String;)Ljava/util/List;
+#queryForList(Ljava/lang/String;II)Ljava/util/List;
+#queryWithRowHandler(Ljava/lang/String;Lcom/ibatis/sqlmap/client/event/RowHandler;)V
+#queryForPaginatedList(Ljava/lang/String;I)Lcom/ibatis/common/util/PaginatedList;
+#insert(Ljava/lang/String;)Ljava/lang/Object;
+#update(Ljava/lang/String;)I
+#delete(Ljava/lang/String;)I
@3.0.0.RELEASE
*#executeWithListResult(Lorg/springframework/orm/ibatis/SqlMapClientCallback;)Ljava/util/List;[deprecated]
*#executeWithMapResult(Lorg/springframework/orm/ibatis/SqlMapClientCallback;)Ljava/util/Map;[deprecated]
-#queryForPaginatedList(Ljava/lang/String;I)Lcom/ibatis/common/util/PaginatedList;
-#queryForPaginatedList(Ljava/lang/String;Ljava/lang/Object;I)Lcom/ibatis/common/util/PaginatedList;
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/SqlMapClientTemplate

+###org/springframework/orm/ibatis/SqlMapFactoryBean
@1.0-rc1
+#<init>()V
+#setConfigLocation(Lorg/springframework/core/io/Resource;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.0
+#setSqlMapProperties(Ljava/util/Properties;)V
@2.5
-###org/springframework/orm/ibatis/SqlMapFactoryBean

+###org/springframework/orm/ibatis/SqlMapOperations
@1.0-rc1
+#executeQueryForObject(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#executeQueryForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#executeQueryForList(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#executeQueryForList(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#executeQueryForMap(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Map;
+#executeQueryForMap(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#executeQueryWithRowHandler(Ljava/lang/String;Ljava/lang/Object;Lcom/ibatis/db/sqlmap/RowHandler;)V
+#executeUpdate(Ljava/lang/String;Ljava/lang/Object;)I
@2.5
-###org/springframework/orm/ibatis/SqlMapOperations

+###org/springframework/orm/ibatis/SqlMapTemplate
@1.0-rc1
+#<init>()V
+#<init>(Ljavax/sql/DataSource;Lcom/ibatis/db/sqlmap/SqlMap;)V
+#setSqlMap(Lcom/ibatis/db/sqlmap/SqlMap;)V
+#getSqlMap()Lcom/ibatis/db/sqlmap/SqlMap;
+#execute(Ljava/lang/String;Lorg/springframework/orm/ibatis/SqlMapCallback;)Ljava/lang/Object;
+#executeWithListResult(Ljava/lang/String;Lorg/springframework/orm/ibatis/SqlMapCallback;)Ljava/util/List;
+#executeWithMapResult(Ljava/lang/String;Lorg/springframework/orm/ibatis/SqlMapCallback;)Ljava/util/Map;
+#executeQueryForObject(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#executeQueryForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#executeQueryForList(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#executeQueryForList(Ljava/lang/String;Ljava/lang/Object;II)Ljava/util/List;
+#executeQueryForMap(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Map;
+#executeQueryForMap(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#executeQueryWithRowHandler(Ljava/lang/String;Ljava/lang/Object;Lcom/ibatis/db/sqlmap/RowHandler;)V
+#executeUpdate(Ljava/lang/String;Ljava/lang/Object;)I
@1.0
+#afterPropertiesSet()V
@2.5
-###org/springframework/orm/ibatis/SqlMapTemplate

+###org/springframework/orm/ibatis/support/AbstractLobTypeHandler
@1.1.5
+#<init>()V
+#setParameter(Ljava/sql/PreparedStatement;ILjava/lang/Object;Ljava/lang/String;)V
+#getResult(Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/lang/Object;
+#getResult(Ljava/sql/ResultSet;I)Ljava/lang/Object;
+#getResult(Ljava/sql/CallableStatement;I)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/support/AbstractLobTypeHandler

+###org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler
@1.1.5
+#<init>()V
+#valueOf(Ljava/lang/String;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler

+###org/springframework/orm/ibatis/support/BlobSerializableTypeHandler
@1.1.5
+#<init>()V
+#valueOf(Ljava/lang/String;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/support/BlobSerializableTypeHandler

+###org/springframework/orm/ibatis/support/ClobStringTypeHandler
@1.1.5
+#<init>()V
+#valueOf(Ljava/lang/String;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/support/ClobStringTypeHandler

+###org/springframework/orm/ibatis/support/SqlMapClientDaoSupport
@1.0
+#<init>()V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setSqlMapClient(Lcom/ibatis/sqlmap/client/SqlMapClient;)V
+#setSqlMapClientTemplate(Lorg/springframework/orm/ibatis/SqlMapClientTemplate;)V
+#afterPropertiesSet()V
@1.1-rc1
+#getDataSource()Ljavax/sql/DataSource;
+#getSqlMapClient()Lcom/ibatis/sqlmap/client/SqlMapClient;
+#getSqlMapClientTemplate()Lorg/springframework/orm/ibatis/SqlMapClientTemplate;
@1.2.2
-#afterPropertiesSet()V
@4.0.0.RELEASE
-###org/springframework/orm/ibatis/support/SqlMapClientDaoSupport

+###org/springframework/orm/ibatis/support/SqlMapDaoSupport
@1.0-rc1
+#<init>()V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setSqlMap(Lcom/ibatis/db/sqlmap/SqlMap;)V
+#setSqlMapTemplate(Lorg/springframework/orm/ibatis/SqlMapTemplate;)V
+#afterPropertiesSet()V
@1.1-rc1
+#getDataSource()Ljavax/sql/DataSource;
+#getSqlMap()Lcom/ibatis/db/sqlmap/SqlMap;
+#getSqlMapTemplate()Lorg/springframework/orm/ibatis/SqlMapTemplate;
@1.2.2
-#afterPropertiesSet()V
@2.5
-###org/springframework/orm/ibatis/support/SqlMapDaoSupport

+###org/springframework/orm/jdo/JdoAccessor
@1.0-rc1
+#<init>()V
+#setPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
+#getPersistenceManagerFactory()Ljavax/jdo/PersistenceManagerFactory;
+#setJdoDialect(Lorg/springframework/orm/jdo/JdoDialect;)V
+#getJdoDialect()Lorg/springframework/orm/jdo/JdoDialect;
+#setFlushEager(Z)V
+#isFlushEager()Z
+#afterPropertiesSet()V
+#flushIfNecessary(Ljavax/jdo/PersistenceManager;Z)V
+#convertJdoAccessException(Ljavax/jdo/JDOException;)Lorg/springframework/dao/DataAccessException;
@2.5
-#flushIfNecessary(Ljavax/jdo/PersistenceManager;Z)V
@4.0.0.RELEASE
-###org/springframework/orm/jdo/JdoAccessor

+###org/springframework/orm/jdo/JdoCallback
@1.0-rc1
+#doInJdo(Ljavax/jdo/PersistenceManager;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/orm/jdo/JdoCallback

+###org/springframework/orm/jdo/JdoInterceptor
@1.0-rc1
+#<init>()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@2.5
+#setExceptionConversionEnabled(Z)V
@4.0.0.RELEASE
-###org/springframework/orm/jdo/JdoInterceptor

+###org/springframework/orm/jdo/JdoOperations
@1.1-rc1
+#execute(Lorg/springframework/orm/jdo/JdoCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/jdo/JdoCallback;)Ljava/util/Collection;
+#getObjectById(Ljava/io/Serializable;)Ljava/lang/Object;
+#getObjectById(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#evict(Ljava/lang/Object;)V
+#evictAll()V
+#refresh(Ljava/lang/Object;)V
+#refreshAll()V
+#makePersistent(Ljava/lang/Object;)V
+#deletePersistent(Ljava/lang/Object;)V
+#deletePersistentAll(Ljava/util/Collection;)V
+#find(Ljava/lang/Class;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Ljava/util/Collection;
@1.1
+#flush()V
@1.2
+#getObjectById(Ljava/lang/Object;)Ljava/lang/Object;
+#getObjectById(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#evictAll(Ljava/util/Collection;)V
+#refreshAll(Ljava/util/Collection;)V
+#makePersistentAll(Ljava/util/Collection;)V
+#detachCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#detachCopyAll(Ljava/util/Collection;)Ljava/util/Collection;
+#attachCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#attachCopyAll(Ljava/util/Collection;)Ljava/util/Collection;
+#find(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Collection;
+#find(Ljava/lang/String;)Ljava/util/Collection;
+#findByNamedQuery(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Collection;
-#getObjectById(Ljava/io/Serializable;)Ljava/lang/Object;
-#getObjectById(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
@1.2.5
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
+#find(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Collection;
+#findByNamedQuery(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
+#findByNamedQuery(Ljava/lang/Class;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Collection;
@2.5
+#makePersistent(Ljava/lang/Object;)Ljava/lang/Object;
+#makePersistentAll(Ljava/util/Collection;)Ljava/util/Collection;
-#makePersistent(Ljava/lang/Object;)V
-#makePersistentAll(Ljava/util/Collection;)V
@3.0.0.RELEASE
-#attachCopy(Ljava/lang/Object;)Ljava/lang/Object;
-#attachCopyAll(Ljava/util/Collection;)Ljava/util/Collection;
@4.0.0.RELEASE
-###org/springframework/orm/jdo/JdoOperations

+###org/springframework/orm/jdo/JdoTemplate
@1.0-rc1
+#<init>()V
+#<init>(Ljavax/jdo/PersistenceManagerFactory;)V
+#setAllowCreate(Z)V
+#isAllowCreate()Z
+#execute(Lorg/springframework/orm/jdo/JdoCallback;)Ljava/lang/Object;
@1.1-rc1
+#<init>(Ljavax/jdo/PersistenceManagerFactory;Z)V
+#executeFind(Lorg/springframework/orm/jdo/JdoCallback;)Ljava/util/Collection;
+#getObjectById(Ljava/io/Serializable;)Ljava/lang/Object;
+#getObjectById(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#evict(Ljava/lang/Object;)V
+#evictAll()V
+#refresh(Ljava/lang/Object;)V
+#refreshAll()V
+#makePersistent(Ljava/lang/Object;)V
+#deletePersistent(Ljava/lang/Object;)V
+#deletePersistentAll(Ljava/util/Collection;)V
+#find(Ljava/lang/Class;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Collection;
+#find(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Ljava/util/Collection;
@1.1
+#flush()V
@1.1.1
+#prepareQuery(Ljavax/jdo/Query;)V
@1.1.4
+#setExposeNativePersistenceManager(Z)V
+#isExposeNativePersistenceManager()Z
+#execute(Lorg/springframework/orm/jdo/JdoCallback;Z)Ljava/lang/Object;
@1.2
+#getObjectById(Ljava/lang/Object;)Ljava/lang/Object;
+#getObjectById(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#evictAll(Ljava/util/Collection;)V
+#refreshAll(Ljava/util/Collection;)V
+#makePersistentAll(Ljava/util/Collection;)V
+#detachCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#detachCopyAll(Ljava/util/Collection;)Ljava/util/Collection;
+#attachCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#attachCopyAll(Ljava/util/Collection;)Ljava/util/Collection;
+#find(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Collection;
+#find(Ljava/lang/String;)Ljava/util/Collection;
+#findByNamedQuery(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Collection;
-#getObjectById(Ljava/io/Serializable;)Ljava/lang/Object;
-#getObjectById(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
@1.2.5
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
+#find(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Collection;
+#findByNamedQuery(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
+#findByNamedQuery(Ljava/lang/Class;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Collection;
@2.5
+#makePersistent(Ljava/lang/Object;)Ljava/lang/Object;
+#makePersistentAll(Ljava/util/Collection;)Ljava/util/Collection;
-#makePersistent(Ljava/lang/Object;)V
-#makePersistentAll(Ljava/util/Collection;)V
@3.0.0.RELEASE
-#attachCopy(Ljava/lang/Object;)Ljava/lang/Object;
-#attachCopyAll(Ljava/util/Collection;)Ljava/util/Collection;
@4.0.0.RELEASE
-###org/springframework/orm/jdo/JdoTemplate

+###org/springframework/orm/jdo/support/JdoDaoSupport
@1.0-rc1
+#<init>()V
+#setPersistenceManagerFactory(Ljavax/jdo/PersistenceManagerFactory;)V
+#setJdoTemplate(Lorg/springframework/orm/jdo/JdoTemplate;)V
+#afterPropertiesSet()V
@1.1-rc1
+#getPersistenceManagerFactory()Ljavax/jdo/PersistenceManagerFactory;
+#getJdoTemplate()Lorg/springframework/orm/jdo/JdoTemplate;
@1.2.2
-#afterPropertiesSet()V
@4.0.0.RELEASE
-###org/springframework/orm/jdo/support/JdoDaoSupport

+###org/springframework/orm/ojb/OjbAccessor
@1.1-rc1
+#<init>()V
+#setJcdAlias(Ljava/lang/String;)V
+#getJcdAlias()Ljava/lang/String;
+#setPbKey(Lorg/apache/ojb/broker/PBKey;)V
+#getPbKey()Lorg/apache/ojb/broker/PBKey;
+#convertOjbAccessException(Lorg/apache/ojb/broker/PersistenceBrokerException;)Lorg/springframework/dao/DataAccessException;
@2.5
-###org/springframework/orm/ojb/OjbAccessor

+###org/springframework/orm/ojb/OjbFactoryUtils
@1.1-rc1
+#<init>()V
+#getPersistenceBroker(Lorg/apache/ojb/broker/PBKey;Z)Lorg/apache/ojb/broker/PersistenceBroker;
+#getPersistenceBroker(Lorg/apache/ojb/broker/PBKey;ZZ)Lorg/apache/ojb/broker/PersistenceBroker;
+#closePersistenceBrokerIfNecessary(Lorg/apache/ojb/broker/PersistenceBroker;Lorg/apache/ojb/broker/PBKey;)V
@1.2
+#releasePersistenceBroker(Lorg/apache/ojb/broker/PersistenceBroker;Lorg/apache/ojb/broker/PBKey;)V
-#getPersistenceBroker(Lorg/apache/ojb/broker/PBKey;ZZ)Lorg/apache/ojb/broker/PersistenceBroker;
@2.5
-###org/springframework/orm/ojb/OjbFactoryUtils

+###org/springframework/orm/ojb/OjbOperationException
@1.1-rc1
+#<init>(Lorg/apache/ojb/broker/PersistenceBrokerException;)V
@2.5
-###org/springframework/orm/ojb/OjbOperationException

+###org/springframework/orm/ojb/PersistenceBrokerCallback
@1.1-rc1
+#doInPersistenceBroker(Lorg/apache/ojb/broker/PersistenceBroker;)Ljava/lang/Object;
@2.5
-###org/springframework/orm/ojb/PersistenceBrokerCallback

+###org/springframework/orm/ojb/PersistenceBrokerHolder
@1.1-rc1
+#<init>(Lorg/apache/ojb/broker/PersistenceBroker;)V
+#getPersistenceBroker()Lorg/apache/ojb/broker/PersistenceBroker;
@2.5
-###org/springframework/orm/ojb/PersistenceBrokerHolder

+###org/springframework/orm/ojb/PersistenceBrokerOperations
@1.1-rc1
+#execute(Lorg/springframework/orm/ojb/PersistenceBrokerCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/ojb/PersistenceBrokerCallback;)Ljava/util/Collection;
+#getObjectByQuery(Lorg/apache/ojb/broker/query/Query;)Ljava/lang/Object;
+#getCollectionByQuery(Lorg/apache/ojb/broker/query/Query;)Ljava/util/Collection;
+#getIteratorByQuery(Lorg/apache/ojb/broker/query/Query;)Ljava/util/Iterator;
+#getCount(Lorg/apache/ojb/broker/query/Query;)I
+#removeFromCache(Ljava/lang/Object;)V
+#clearCache()V
+#store(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;)V
+#deleteByQuery(Lorg/apache/ojb/broker/query/Query;)V
@1.1
+#getReportQueryIteratorByQuery(Lorg/apache/ojb/broker/query/Query;)Ljava/util/Iterator;
@1.1.4
+#getObjectById(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@2.5
-###org/springframework/orm/ojb/PersistenceBrokerOperations

+###org/springframework/orm/ojb/PersistenceBrokerTemplate
@1.1-rc1
+#<init>()V
+#<init>(Z)V
+#<init>(Lorg/apache/ojb/broker/PBKey;)V
+#<init>(Lorg/apache/ojb/broker/PBKey;Z)V
+#setAllowCreate(Z)V
+#isAllowCreate()Z
+#execute(Lorg/springframework/orm/ojb/PersistenceBrokerCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/ojb/PersistenceBrokerCallback;)Ljava/util/Collection;
+#getObjectByQuery(Lorg/apache/ojb/broker/query/Query;)Ljava/lang/Object;
+#getCollectionByQuery(Lorg/apache/ojb/broker/query/Query;)Ljava/util/Collection;
+#getIteratorByQuery(Lorg/apache/ojb/broker/query/Query;)Ljava/util/Iterator;
+#getCount(Lorg/apache/ojb/broker/query/Query;)I
+#removeFromCache(Ljava/lang/Object;)V
+#clearCache()V
+#store(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;)V
+#deleteByQuery(Lorg/apache/ojb/broker/query/Query;)V
@1.1
+#getReportQueryIteratorByQuery(Lorg/apache/ojb/broker/query/Query;)Ljava/util/Iterator;
@1.1.4
+#getObjectById(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@2.5
-###org/springframework/orm/ojb/PersistenceBrokerTemplate

+###org/springframework/orm/ojb/PersistenceBrokerTransactionManager
@1.1-rc1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/ojb/broker/PBKey;)V
+#setJcdAlias(Ljava/lang/String;)V
+#setPbKey(Lorg/apache/ojb/broker/PBKey;)V
+#getPbKey()Lorg/apache/ojb/broker/PBKey;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
@2.5
-###org/springframework/orm/ojb/PersistenceBrokerTransactionManager

+###org/springframework/orm/ojb/support/LocalDataSourceConnectionFactory
@1.1-rc1
+#<init>()V
+#lookupConnection(Lorg/apache/ojb/broker/metadata/JdbcConnectionDescriptor;)Ljava/sql/Connection;
@2.5
-###org/springframework/orm/ojb/support/LocalDataSourceConnectionFactory

+###org/springframework/orm/ojb/support/LocalOjbConfigurer
@1.1-rc1
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@2.5
-###org/springframework/orm/ojb/support/LocalOjbConfigurer

+###org/springframework/orm/ojb/support/PersistenceBrokerDaoSupport
@1.1-rc1
+#<init>()V
+#setJcdAlias(Ljava/lang/String;)V
+#getJcdAlias()Ljava/lang/String;
+#setPersistenceBrokerTemplate(Lorg/springframework/orm/ojb/PersistenceBrokerTemplate;)V
+#getPersistenceBrokerTemplate()Lorg/springframework/orm/ojb/PersistenceBrokerTemplate;
+#afterPropertiesSet()V
@1.2.2
-#afterPropertiesSet()V
@2.5
-###org/springframework/orm/ojb/support/PersistenceBrokerDaoSupport

+###org/springframework/orm/ojb/support/TransactionAwareDataSourceConnectionFactory
@1.1.4
+#<init>()V
@2.5
-###org/springframework/orm/ojb/support/TransactionAwareDataSourceConnectionFactory

+###org/springframework/orm/hibernate/HibernateAccessor
@1.0-rc1
+#<init>()V
+#setSessionFactory(Lnet/sf/hibernate/SessionFactory;)V
+#getSessionFactory()Lnet/sf/hibernate/SessionFactory;
+#setEntityInterceptor(Lnet/sf/hibernate/Interceptor;)V
+#getEntityInterceptor()Lnet/sf/hibernate/Interceptor;
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#getJdbcExceptionTranslator()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#setFlushModeName(Ljava/lang/String;)V
+#setFlushMode(I)V
+#getFlushMode()I
+#afterPropertiesSet()V
+#flushIfNecessary(Lnet/sf/hibernate/Session;Z)V
+#convertHibernateAccessException(Lnet/sf/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateAccessor

+###org/springframework/orm/hibernate/HibernateCallback
@1.0-rc1
+#doInHibernate(Lnet/sf/hibernate/Session;)Ljava/lang/Object;
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateCallback

+###org/springframework/orm/hibernate/HibernateInterceptor
@1.0-rc1
+#<init>()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@1.1-rc2
+#setEntityInterceptorBeanName(Ljava/lang/String;)V
+#getEntityInterceptor()Lnet/sf/hibernate/Interceptor;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateInterceptor

+###org/springframework/orm/hibernate/HibernateJdbcException
@1.0-rc1
+#<init>(Lnet/sf/hibernate/JDBCException;)V
+#<init>(Ljava/sql/SQLException;)V
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateJdbcException

+###org/springframework/orm/hibernate/HibernateObjectRetrievalFailureException
@1.0-rc1
+#<init>(Lnet/sf/hibernate/ObjectNotFoundException;)V
+#<init>(Lnet/sf/hibernate/ObjectDeletedException;)V
+#<init>(Lnet/sf/hibernate/WrongClassException;)V
@1.0
+#<init>(Lnet/sf/hibernate/UnresolvableObjectException;)V
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateObjectRetrievalFailureException

+###org/springframework/orm/hibernate/HibernateOperations
@1.0-rc1
+#get(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;Lnet/sf/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;Lnet/sf/hibernate/LockMode;)Ljava/lang/Object;
+#evict(Ljava/lang/Object;)V
+#lock(Ljava/lang/Object;Lnet/sf/hibernate/LockMode;)V
+#save(Ljava/lang/Object;)Ljava/io/Serializable;
+#save(Ljava/lang/Object;Ljava/io/Serializable;)V
+#saveOrUpdate(Ljava/lang/Object;)V
+#saveOrUpdateCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#update(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Lnet/sf/hibernate/LockMode;)V
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Lnet/sf/hibernate/LockMode;)V
+#deleteAll(Ljava/util/Collection;)V
+#find(Ljava/lang/String;)Ljava/util/List;
+#find(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
@1.0
+#execute(Lorg/springframework/orm/hibernate/HibernateCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/hibernate/HibernateCallback;)Ljava/util/List;
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
@1.1-rc1
+#contains(Ljava/lang/Object;)Z
+#refresh(Ljava/lang/Object;)V
+#refresh(Ljava/lang/Object;Lnet/sf/hibernate/LockMode;)V
+#clear()V
+#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#iterate(Ljava/lang/String;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/Iterator;
+#delete(Ljava/lang/String;)I
+#delete(Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)I
+#delete(Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)I
@1.1-rc2
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
-#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
-#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
-#find(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
-#find(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
@1.1
+#flush()V
@1.1.2
+#load(Ljava/lang/Object;Ljava/io/Serializable;)V
+#initialize(Ljava/lang/Object;)V
+#iterate(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;
+#closeIterator(Ljava/util/Iterator;)V
@1.1.4
+#saveOrUpdateAll(Ljava/util/Collection;)V
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateOperations

+###org/springframework/orm/hibernate/HibernateOptimisticLockingFailureException
@1.0-rc1
+#<init>(Lnet/sf/hibernate/StaleObjectStateException;)V
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateOptimisticLockingFailureException

+###org/springframework/orm/hibernate/HibernateQueryException
@1.0-rc1
+#<init>(Lnet/sf/hibernate/QueryException;)V
+#getQueryString()Ljava/lang/String;
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateQueryException

+###org/springframework/orm/hibernate/HibernateSystemException
@1.0-rc1
+#<init>(Lnet/sf/hibernate/HibernateException;)V
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateSystemException

+###org/springframework/orm/hibernate/HibernateTemplate
@1.0-rc1
+#<init>()V
+#<init>(Lnet/sf/hibernate/SessionFactory;)V
+#<init>(Lnet/sf/hibernate/SessionFactory;Z)V
+#setAllowCreate(Z)V
+#isAllowCreate()Z
+#execute(Lorg/springframework/orm/hibernate/HibernateCallback;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/lang/Class;Ljava/io/Serializable;Lnet/sf/hibernate/LockMode;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
+#load(Ljava/lang/Class;Ljava/io/Serializable;Lnet/sf/hibernate/LockMode;)Ljava/lang/Object;
+#evict(Ljava/lang/Object;)V
+#lock(Ljava/lang/Object;Lnet/sf/hibernate/LockMode;)V
+#save(Ljava/lang/Object;)Ljava/io/Serializable;
+#save(Ljava/lang/Object;Ljava/io/Serializable;)V
+#saveOrUpdate(Ljava/lang/Object;)V
+#saveOrUpdateCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#update(Ljava/lang/Object;)V
+#update(Ljava/lang/Object;Lnet/sf/hibernate/LockMode;)V
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Lnet/sf/hibernate/LockMode;)V
+#deleteAll(Ljava/util/Collection;)V
+#executeFind(Lorg/springframework/orm/hibernate/HibernateCallback;)Ljava/util/List;
+#find(Ljava/lang/String;)Ljava/util/List;
+#find(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQueryAndValueBean(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#createQuery(Lnet/sf/hibernate/Session;Ljava/lang/String;)Lnet/sf/hibernate/Query;
+#getNamedQuery(Lnet/sf/hibernate/Session;Ljava/lang/String;)Lnet/sf/hibernate/Query;
@1.0
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#createCriteria(Lnet/sf/hibernate/Session;Ljava/lang/Class;)Lnet/sf/hibernate/Criteria;
@1.1-rc1
+#setCacheQueries(Z)V
+#isCacheQueries()Z
+#contains(Ljava/lang/Object;)Z
+#refresh(Ljava/lang/Object;)V
+#refresh(Ljava/lang/Object;Lnet/sf/hibernate/LockMode;)V
+#clear()V
+#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#iterate(Ljava/lang/String;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/Iterator;
+#delete(Ljava/lang/String;)I
+#delete(Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)I
+#delete(Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)I
@1.1-rc2
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParam(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
-#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
-#find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lnet/sf/hibernate/type/Type;)Ljava/util/List;
-#find(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
-#find(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;[Lnet/sf/hibernate/type/Type;)Ljava/util/List;
@1.1
+#flush()V
@1.1.1
+#setCheckWriteOperations(Z)V
+#isCheckWriteOperations()Z
@1.1.2
+#setQueryCacheRegion(Ljava/lang/String;)V
+#getQueryCacheRegion()Ljava/lang/String;
+#load(Ljava/lang/Object;Ljava/io/Serializable;)V
+#initialize(Ljava/lang/Object;)V
+#iterate(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/Iterator;
+#iterate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Iterator;
+#closeIterator(Ljava/util/Iterator;)V
@1.1.4
+#setAlwaysUseNewSession(Z)V
+#isAlwaysUseNewSession()Z
+#setExposeNativeSession(Z)V
+#isExposeNativeSession()Z
+#execute(Lorg/springframework/orm/hibernate/HibernateCallback;Z)Ljava/lang/Object;
+#saveOrUpdateAll(Ljava/util/Collection;)V
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateTemplate

+###org/springframework/orm/hibernate/HibernateTransactionManager
@1.0-rc1
+#<init>()V
+#<init>(Lnet/sf/hibernate/SessionFactory;)V
+#setSessionFactory(Lnet/sf/hibernate/SessionFactory;)V
+#getSessionFactory()Lnet/sf/hibernate/SessionFactory;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setEntityInterceptor(Lnet/sf/hibernate/Interceptor;)V
+#getEntityInterceptor()Lnet/sf/hibernate/Interceptor;
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#getJdbcExceptionTranslator()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#afterPropertiesSet()V
@1.1-rc2
+#setEntityInterceptorBeanName(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@1.1
+#setAutodetectDataSource(Z)V
@1.2-rc1
-###org/springframework/orm/hibernate/HibernateTransactionManager

+###org/springframework/orm/hibernate/LocalDataSourceConnectionProvider
@1.0-rc1
+#<init>()V
+#configure(Ljava/util/Properties;)V
+#getConnection()Ljava/sql/Connection;
+#closeConnection(Ljava/sql/Connection;)V
+#isStatementCache()Z
+#close()V
@1.0
+#getDataSource()Ljavax/sql/DataSource;
@1.1-rc1
-#isStatementCache()Z
@1.2-rc1
-###org/springframework/orm/hibernate/LocalDataSourceConnectionProvider

+###org/springframework/orm/hibernate/LocalSessionFactoryBean
@1.0-rc1
+#<init>()V
+#getConfigTimeLobHandler()Lorg/springframework/jdbc/support/lob/LobHandler;
+#setConfigLocation(Ljava/lang/String;)V
+#setMappingResources([Ljava/lang/String;)V
+#setMappingResourceJars([Ljava/lang/String;)V
+#setHibernateProperties(Ljava/util/Properties;)V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setJtaTransactionManager(Ljavax/transaction/TransactionManager;)V
+#setLobHandler(Lorg/springframework/jdbc/support/lob/LobHandler;)V
+#setEntityInterceptor(Lnet/sf/hibernate/Interceptor;)V
+#setSchemaUpdate(Z)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#destroy()V
@1.0
+#setConfigLocation(Lorg/springframework/core/io/Resource;)V
+#setMappingLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingJarLocations([Lorg/springframework/core/io/Resource;)V
+#setMappingDirectoryLocations([Lorg/springframework/core/io/Resource;)V
+#dropDatabaseSchema()V
+#createDatabaseSchema()V
+#updateDatabaseSchema()V
+#getConfiguration()Lnet/sf/hibernate/cfg/Configuration;
-#setConfigLocation(Ljava/lang/String;)V
-#setMappingResourceJars([Ljava/lang/String;)V
@1.1-rc1
+#setNamingStrategy(Lnet/sf/hibernate/cfg/NamingStrategy;)V
@1.1
+#getConfigTimeDataSource()Ljavax/sql/DataSource;
+#getConfigTimeTransactionManager()Ljavax/transaction/TransactionManager;
@1.1.4
+#setUseTransactionAwareDataSource(Z)V
@1.2-rc1
-###org/springframework/orm/hibernate/LocalSessionFactoryBean

+###org/springframework/orm/hibernate/LocalTransactionManagerLookup
@1.0-rc1
+#<init>()V
+#getTransactionManager(Ljava/util/Properties;)Ljavax/transaction/TransactionManager;
+#getUserTransactionName()Ljava/lang/String;
@1.2-rc1
-###org/springframework/orm/hibernate/LocalTransactionManagerLookup

+###org/springframework/orm/hibernate/SessionFactoryUtils
@1.0-rc1
+#<init>()V
+#getSession(Lnet/sf/hibernate/SessionFactory;Z)Lnet/sf/hibernate/Session;
+#getSession(Lnet/sf/hibernate/SessionFactory;Lnet/sf/hibernate/Interceptor;Lorg/springframework/jdbc/support/SQLExceptionTranslator;)Lnet/sf/hibernate/Session;
+#getSession(Lnet/sf/hibernate/SessionFactory;Lnet/sf/hibernate/Interceptor;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Z)Lnet/sf/hibernate/Session;
+#applyTransactionTimeout(Lnet/sf/hibernate/Query;Lnet/sf/hibernate/SessionFactory;)V
+#convertHibernateAccessException(Lnet/sf/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
+#closeSessionIfNecessary(Lnet/sf/hibernate/Session;Lnet/sf/hibernate/SessionFactory;)V
@1.0
+#applyTransactionTimeout(Lnet/sf/hibernate/Criteria;Lnet/sf/hibernate/SessionFactory;)V
@1.1-rc1
+#getDataSource(Lnet/sf/hibernate/SessionFactory;)Ljavax/sql/DataSource;
+#newJdbcExceptionTranslator(Lnet/sf/hibernate/SessionFactory;)Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#getJtaTransactionManager(Lnet/sf/hibernate/SessionFactory;Lnet/sf/hibernate/Session;)Ljavax/transaction/TransactionManager;
+#initDeferredClose(Lnet/sf/hibernate/SessionFactory;)V
+#processDeferredClose(Lnet/sf/hibernate/SessionFactory;)V
@1.1-rc2
+#isDeferredCloseActive(Lnet/sf/hibernate/SessionFactory;)Z
@1.1.4
+#getNewSession(Lnet/sf/hibernate/SessionFactory;)Lnet/sf/hibernate/Session;
+#getNewSession(Lnet/sf/hibernate/SessionFactory;Lnet/sf/hibernate/Interceptor;)Lnet/sf/hibernate/Session;
+#isSessionTransactional(Lnet/sf/hibernate/Session;Lnet/sf/hibernate/SessionFactory;)Z
@1.2-rc1
-###org/springframework/orm/hibernate/SessionFactoryUtils

+###org/springframework/orm/hibernate/SessionHolder
@1.0-rc1
+#<init>(Lnet/sf/hibernate/Session;)V
+#getSession()Lnet/sf/hibernate/Session;
+#setTransaction(Lnet/sf/hibernate/Transaction;)V
+#getTransaction()Lnet/sf/hibernate/Transaction;
@1.0
+#setSynchronizedWithTransaction(Z)V
+#isSynchronizedWithTransaction()Z
@1.1-rc1
+#<init>(Ljava/lang/Object;Lnet/sf/hibernate/Session;)V
+#getSession(Ljava/lang/Object;)Lnet/sf/hibernate/Session;
+#getAnySession()Lnet/sf/hibernate/Session;
+#addSession(Ljava/lang/Object;Lnet/sf/hibernate/Session;)V
+#removeSession(Ljava/lang/Object;)Lnet/sf/hibernate/Session;
+#containsSession(Lnet/sf/hibernate/Session;)Z
+#isEmpty()Z
-#setSynchronizedWithTransaction(Z)V
-#isSynchronizedWithTransaction()Z
@1.1.1
+#setPreviousFlushMode(Lnet/sf/hibernate/FlushMode;)V
+#getPreviousFlushMode()Lnet/sf/hibernate/FlushMode;
@1.1.2
+#doesNotHoldNonDefaultSession()Z
+#clear()V
@1.2-rc1
-###org/springframework/orm/hibernate/SessionHolder

+###org/springframework/orm/hibernate/TransactionAwareDataSourceConnectionProvider
@1.1.4
+#<init>()V
@1.2-rc1
-###org/springframework/orm/hibernate/TransactionAwareDataSourceConnectionProvider

+###org/springframework/orm/hibernate/support/AbstractLobType
@1.1-rc2
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#deepCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#isMutable()Z
+#nullSafeGet(Ljava/sql/ResultSet;[Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#nullSafeSet(Ljava/sql/PreparedStatement;Ljava/lang/Object;I)V
@1.2-rc1
-###org/springframework/orm/hibernate/support/AbstractLobType

+###org/springframework/orm/hibernate/support/BlobByteArrayType
@1.1-rc2
+#<init>()V
+#sqlTypes()[I
+#returnedClass()Ljava/lang/Class;
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#deepCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#isMutable()Z
@1.2-rc1
-###org/springframework/orm/hibernate/support/BlobByteArrayType

+###org/springframework/orm/hibernate/support/BlobSerializableType
@1.1
+#<init>()V
+#sqlTypes()[I
+#returnedClass()Ljava/lang/Class;
+#isMutable()Z
@1.1.1
+#deepCopy(Ljava/lang/Object;)Ljava/lang/Object;
@1.2-rc1
-###org/springframework/orm/hibernate/support/BlobSerializableType

+###org/springframework/orm/hibernate/support/ClobStringType
@1.0-rc1
+#<init>()V
+#sqlTypes()[I
+#returnedClass()Ljava/lang/Class;
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#nullSafeGet(Ljava/sql/ResultSet;[Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#nullSafeSet(Ljava/sql/PreparedStatement;Ljava/lang/Object;I)V
+#deepCopy(Ljava/lang/Object;)Ljava/lang/Object;
+#isMutable()Z
@1.1-rc2
-#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
-#nullSafeGet(Ljava/sql/ResultSet;[Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
-#nullSafeSet(Ljava/sql/PreparedStatement;Ljava/lang/Object;I)V
-#deepCopy(Ljava/lang/Object;)Ljava/lang/Object;
-#isMutable()Z
@1.2-rc1
-###org/springframework/orm/hibernate/support/ClobStringType

+###org/springframework/orm/hibernate/support/HibernateDaoSupport
@1.0-rc1
+#<init>()V
+#setSessionFactory(Lnet/sf/hibernate/SessionFactory;)V
+#setHibernateTemplate(Lorg/springframework/orm/hibernate/HibernateTemplate;)V
+#afterPropertiesSet()V
@1.1-rc1
+#getSessionFactory()Lnet/sf/hibernate/SessionFactory;
+#getHibernateTemplate()Lorg/springframework/orm/hibernate/HibernateTemplate;
@1.2-rc1
-###org/springframework/orm/hibernate/support/HibernateDaoSupport

+###org/springframework/orm/hibernate/support/OpenSessionInViewFilter
@1.0-rc1
+#<init>()V
+#setSessionFactoryBeanName(Ljava/lang/String;)V
@1.1-rc1
+#setSingleSession(Z)V
@1.2-rc1
-###org/springframework/orm/hibernate/support/OpenSessionInViewFilter

+###org/springframework/orm/hibernate/support/OpenSessionInViewInterceptor
@1.0-rc1
+#<init>()V
+#preHandle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;)Z
+#postHandle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Lorg/springframework/web/servlet/ModelAndView;)V
+#afterCompletion(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)V
@1.1-rc1
+#setSingleSession(Z)V
@1.2-rc1
-###org/springframework/orm/hibernate/support/OpenSessionInViewInterceptor

+###org/springframework/orm/jpa/JpaTemplate
@2.5
+#<init>()V
+#<init>(Ljavax/persistence/EntityManagerFactory;)V
+#<init>(Ljavax/persistence/EntityManager;)V
+#setExposeNativeEntityManager(Z)V
+#isExposeNativeEntityManager()Z
+#execute(Lorg/springframework/orm/jpa/JpaCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/jpa/JpaCallback;)Ljava/util/List;
+#execute(Lorg/springframework/orm/jpa/JpaCallback;Z)Ljava/lang/Object;
+#find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getReference(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#refresh(Ljava/lang/Object;)V
+#persist(Ljava/lang/Object;)V
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)V
+#flush()V
+#find(Ljava/lang/String;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParams(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParams(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;
@3.0.0.RELEASE
+#prepareQuery(Ljavax/persistence/Query;)V
@4.0.0.RELEASE
-###org/springframework/orm/jpa/JpaTemplate

+###org/springframework/orm/jpa/EntityManagerFactoryPlus
@2.5
@4.0.0.RELEASE
-###org/springframework/orm/jpa/EntityManagerFactoryPlus

+###org/springframework/orm/jpa/EntityManagerFactoryPlusOperations
@2.5
@4.0.0.RELEASE
-###org/springframework/orm/jpa/EntityManagerFactoryPlusOperations

+###org/springframework/orm/jpa/EntityManagerPlusOperations
@2.5
@4.0.0.RELEASE
-###org/springframework/orm/jpa/EntityManagerPlusOperations

+###org/springframework/orm/jpa/JpaInterceptor
@2.5
+#<init>()V
+#setExceptionConversionEnabled(Z)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/orm/jpa/JpaInterceptor

+###org/springframework/orm/jpa/JpaAccessor
@2.5
+#<init>()V
+#setEntityManager(Ljavax/persistence/EntityManager;)V
+#getEntityManager()Ljavax/persistence/EntityManager;
+#setJpaDialect(Lorg/springframework/orm/jpa/JpaDialect;)V
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
+#setFlushEager(Z)V
+#isFlushEager()Z
+#afterPropertiesSet()V
+#translateIfNecessary(Ljava/lang/RuntimeException;)Ljava/lang/RuntimeException;
@4.0.0.RELEASE
-###org/springframework/orm/jpa/JpaAccessor

+###org/springframework/orm/jpa/JpaOperations
@2.5
+#execute(Lorg/springframework/orm/jpa/JpaCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/jpa/JpaCallback;)Ljava/util/List;
+#find(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getReference(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#refresh(Ljava/lang/Object;)V
+#persist(Ljava/lang/Object;)V
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)V
+#flush()V
+#find(Ljava/lang/String;)Ljava/util/List;
+#find(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedParams(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;)Ljava/util/List;
+#findByNamedQuery(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#findByNamedQueryAndNamedParams(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;
@4.0.0.RELEASE
-###org/springframework/orm/jpa/JpaOperations

+###org/springframework/orm/jpa/JpaCallback
@2.5
+#doInJpa(Ljavax/persistence/EntityManager;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/orm/jpa/JpaCallback

+###org/springframework/orm/jpa/EntityManagerPlus
@2.5
@4.0.0.RELEASE
-###org/springframework/orm/jpa/EntityManagerPlus

+###org/springframework/orm/jpa/support/JpaDaoSupport
@2.5
+#<init>()V
+#setEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
+#setEntityManager(Ljavax/persistence/EntityManager;)V
+#setJpaTemplate(Lorg/springframework/orm/jpa/JpaTemplate;)V
+#getJpaTemplate()Lorg/springframework/orm/jpa/JpaTemplate;
@4.0.0.RELEASE
-###org/springframework/orm/jpa/support/JpaDaoSupport

+###org/springframework/orm/jpa/vendor/TopLinkJpaDialect
@2.5
+#<init>()V
+#setLazyDatabaseTransaction(Z)V
+#beginTransaction(Ljavax/persistence/EntityManager;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Object;
+#getJdbcConnection(Ljavax/persistence/EntityManager;Z)Lorg/springframework/jdbc/datasource/ConnectionHandle;
@4.0.0.RELEASE
-###org/springframework/orm/jpa/vendor/TopLinkJpaDialect

+###org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter
@2.5
+#<init>()V
+#getPersistenceProvider()Ljavax/persistence/spi/PersistenceProvider;
+#getJpaPropertyMap()Ljava/util/Map;
+#getEntityManagerInterface()Ljava/lang/Class;
+#getJpaDialect()Lorg/springframework/orm/jpa/JpaDialect;
@2.5.2
+#getPersistenceProviderRootPackage()Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/orm/jpa/vendor/TopLinkJpaVendorAdapter

+###org/springframework/orm/hibernate3/LocalCacheProviderProxy
@2.5.1
+#<init>()V
+#buildCache(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/cache/Cache;
+#nextTimestamp()J
+#start(Ljava/util/Properties;)V
+#stop()V
+#isMinimalPutsEnabledByDefault()Z
@4.0.0.RELEASE
-###org/springframework/orm/hibernate3/LocalCacheProviderProxy

+###org/springframework/orm/jpa/persistenceunit/PersistenceManagedTypesScanner
@6.0.0
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#scan([Ljava/lang/String;)Lorg/springframework/orm/jpa/persistenceunit/PersistenceManagedTypes;

+###org/springframework/orm/jpa/persistenceunit/PersistenceManagedTypes
@6.0.0
+#getManagedClassNames()Ljava/util/List;
+#getManagedPackages()Ljava/util/List;
+#getPersistenceUnitRootUrl()Ljava/net/URL;
+#of([Ljava/lang/String;)Lorg/springframework/orm/jpa/persistenceunit/PersistenceManagedTypes;
+#of(Ljava/util/List;Ljava/util/List;)Lorg/springframework/orm/jpa/persistenceunit/PersistenceManagedTypes;

+###org/springframework/orm/toplink/LocalSessionFactory
@1.2
+#<init>()V
+#setConfigLocation(Ljava/lang/String;)V
+#setSessionName(Ljava/lang/String;)V
+#setSessionClassLoader(Ljava/lang/ClassLoader;)V
+#setDatabaseLogin(Loracle/toplink/sessions/DatabaseLogin;)V
+#setDataSource(Ljavax/sql/DataSource;)V
+#setDatabasePlatform(Loracle/toplink/internal/databaseaccess/DatabasePlatform;)V
+#setSessionLog(Loracle/toplink/sessions/SessionLog;)V
+#createSessionFactory()Lorg/springframework/orm/toplink/SessionFactory;
@2.5
+#setLoginProperties(Ljava/util/Properties;)V
+#setLoginPropertyMap(Ljava/util/Map;)V
+#getLoginPropertyMap()Ljava/util/Map;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/LocalSessionFactory

+###org/springframework/orm/toplink/LocalSessionFactoryBean
@1.2
+#<init>()V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#destroy()V
@2.5
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#getJdbcExceptionTranslator()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#convertTopLinkAccessException(Loracle/toplink/exceptions/TopLinkException;)Lorg/springframework/dao/DataAccessException;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/LocalSessionFactoryBean

+###org/springframework/orm/toplink/ServerSessionFactory
@1.2
+#<init>(Loracle/toplink/threetier/ServerSession;)V
+#createSession()Loracle/toplink/sessions/Session;
+#createManagedClientSession()Loracle/toplink/sessions/Session;
+#createTransactionAwareSession()Loracle/toplink/sessions/Session;
+#createTransactionAwareSession(Lorg/springframework/orm/toplink/SessionFactory;)Loracle/toplink/sessions/Session;
+#close()V
@1.2.6
-#createSession()Loracle/toplink/sessions/Session;
-#createManagedClientSession()Loracle/toplink/sessions/Session;
-#createTransactionAwareSession()Loracle/toplink/sessions/Session;
-#createTransactionAwareSession(Lorg/springframework/orm/toplink/SessionFactory;)Loracle/toplink/sessions/Session;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/ServerSessionFactory

+###org/springframework/orm/toplink/SessionFactory
@1.2
+#createSession()Loracle/toplink/sessions/Session;
+#createManagedClientSession()Loracle/toplink/sessions/Session;
+#createTransactionAwareSession()Loracle/toplink/sessions/Session;
+#close()V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/SessionFactory

+###org/springframework/orm/toplink/SessionFactoryUtils
@1.2
+#<init>()V
+#getSession(Lorg/springframework/orm/toplink/SessionFactory;Z)Loracle/toplink/sessions/Session;
+#doGetSession(Lorg/springframework/orm/toplink/SessionFactory;Z)Loracle/toplink/sessions/Session;
+#convertTopLinkAccessException(Loracle/toplink/exceptions/TopLinkException;)Lorg/springframework/dao/DataAccessException;
+#releaseSession(Loracle/toplink/sessions/Session;Lorg/springframework/orm/toplink/SessionFactory;)V
@1.2.4
+#isSessionTransactional(Loracle/toplink/sessions/Session;Lorg/springframework/orm/toplink/SessionFactory;)Z
@3.0.0.RELEASE
-###org/springframework/orm/toplink/SessionFactoryUtils

+###org/springframework/orm/toplink/SessionHolder
@1.2
+#<init>(Loracle/toplink/sessions/Session;)V
+#getSession()Loracle/toplink/sessions/Session;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/SessionHolder

+###org/springframework/orm/toplink/SessionReadCallback
@1.2
+#<init>()V
+#<init>(Z)V
+#doInTopLink(Loracle/toplink/sessions/Session;)Ljava/lang/Object;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/SessionReadCallback

+###org/springframework/orm/toplink/SingleSessionFactory
@1.2
+#<init>(Loracle/toplink/sessions/Session;)V
+#createSession()Loracle/toplink/sessions/Session;
+#createManagedClientSession()Loracle/toplink/sessions/Session;
+#createTransactionAwareSession()Loracle/toplink/sessions/Session;
+#close()V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/SingleSessionFactory

+###org/springframework/orm/toplink/TopLinkAccessor
@1.2
+#<init>()V
+#setSessionFactory(Lorg/springframework/orm/toplink/SessionFactory;)V
+#getSessionFactory()Lorg/springframework/orm/toplink/SessionFactory;
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#getJdbcExceptionTranslator()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#afterPropertiesSet()V
+#convertTopLinkAccessException(Loracle/toplink/exceptions/TopLinkException;)Lorg/springframework/dao/DataAccessException;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkAccessor

+###org/springframework/orm/toplink/TopLinkCallback
@1.2
+#doInTopLink(Loracle/toplink/sessions/Session;)Ljava/lang/Object;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkCallback

+###org/springframework/orm/toplink/TopLinkInterceptor
@1.2
+#<init>()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@2.5
+#setExceptionConversionEnabled(Z)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkInterceptor

+###org/springframework/orm/toplink/TopLinkJdbcException
@1.2
+#<init>(Loracle/toplink/exceptions/DatabaseException;)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkJdbcException

+###org/springframework/orm/toplink/TopLinkOperations
@1.2
+#execute(Lorg/springframework/orm/toplink/TopLinkCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/toplink/TopLinkCallback;)Ljava/util/List;
+#executeNamedQuery(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#executeNamedQuery(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;
+#executeNamedQuery(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#executeNamedQuery(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;Z)Ljava/lang/Object;
+#executeQuery(Loracle/toplink/queryframework/DatabaseQuery;)Ljava/lang/Object;
+#executeQuery(Loracle/toplink/queryframework/DatabaseQuery;Z)Ljava/lang/Object;
+#executeQuery(Loracle/toplink/queryframework/DatabaseQuery;[Ljava/lang/Object;)Ljava/lang/Object;
+#executeQuery(Loracle/toplink/queryframework/DatabaseQuery;[Ljava/lang/Object;Z)Ljava/lang/Object;
+#readAll(Ljava/lang/Class;)Ljava/util/List;
+#readAll(Ljava/lang/Class;Z)Ljava/util/List;
+#readAll(Ljava/lang/Class;Loracle/toplink/expressions/Expression;)Ljava/util/List;
+#readAll(Ljava/lang/Class;Loracle/toplink/expressions/Expression;Z)Ljava/util/List;
+#readAll(Ljava/lang/Class;Loracle/toplink/queryframework/Call;)Ljava/util/List;
+#readAll(Ljava/lang/Class;Loracle/toplink/queryframework/Call;Z)Ljava/util/List;
+#read(Ljava/lang/Class;Loracle/toplink/expressions/Expression;)Ljava/lang/Object;
+#read(Ljava/lang/Class;Loracle/toplink/expressions/Expression;Z)Ljava/lang/Object;
+#read(Ljava/lang/Class;Loracle/toplink/queryframework/Call;)Ljava/lang/Object;
+#read(Ljava/lang/Class;Loracle/toplink/queryframework/Call;Z)Ljava/lang/Object;
+#readById(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#readById(Ljava/lang/Class;Ljava/lang/Object;Z)Ljava/lang/Object;
+#readById(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#readById(Ljava/lang/Class;[Ljava/lang/Object;Z)Ljava/lang/Object;
+#readAndCopy(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#readAndCopy(Ljava/lang/Class;Ljava/lang/Object;Z)Ljava/lang/Object;
+#readAndCopy(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#readAndCopy(Ljava/lang/Class;[Ljava/lang/Object;Z)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Loracle/toplink/sessions/ObjectCopyingPolicy;)Ljava/lang/Object;
+#copyAll(Ljava/util/Collection;)Ljava/util/List;
+#copyAll(Ljava/util/Collection;Loracle/toplink/sessions/ObjectCopyingPolicy;)Ljava/util/List;
+#refresh(Ljava/lang/Object;)Ljava/lang/Object;
+#refresh(Ljava/lang/Object;Z)Ljava/lang/Object;
+#refreshAll(Ljava/util/Collection;)Ljava/util/List;
+#refreshAll(Ljava/util/Collection;Z)Ljava/util/List;
+#register(Ljava/lang/Object;)Ljava/lang/Object;
+#registerAll(Ljava/util/Collection;)Ljava/util/List;
+#registerNew(Ljava/lang/Object;)V
+#registerExisting(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#deepMerge(Ljava/lang/Object;)Ljava/lang/Object;
+#shallowMerge(Ljava/lang/Object;)Ljava/lang/Object;
+#mergeWithReferences(Ljava/lang/Object;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/util/Collection;)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkOperations

+###org/springframework/orm/toplink/TopLinkOptimisticLockingFailureException
@1.2
+#<init>(Loracle/toplink/exceptions/OptimisticLockException;)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkOptimisticLockingFailureException

+###org/springframework/orm/toplink/TopLinkQueryException
@1.2
+#<init>(Loracle/toplink/exceptions/QueryException;)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkQueryException

+###org/springframework/orm/toplink/TopLinkSystemException
@1.2
+#<init>(Loracle/toplink/exceptions/TopLinkException;)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkSystemException

+###org/springframework/orm/toplink/TopLinkTemplate
@1.2
+#<init>()V
+#<init>(Lorg/springframework/orm/toplink/SessionFactory;)V
+#<init>(Lorg/springframework/orm/toplink/SessionFactory;Z)V
+#setAllowCreate(Z)V
+#isAllowCreate()Z
+#execute(Lorg/springframework/orm/toplink/TopLinkCallback;)Ljava/lang/Object;
+#executeFind(Lorg/springframework/orm/toplink/TopLinkCallback;)Ljava/util/List;
+#executeNamedQuery(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#executeNamedQuery(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;
+#executeNamedQuery(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#executeNamedQuery(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;Z)Ljava/lang/Object;
+#executeQuery(Loracle/toplink/queryframework/DatabaseQuery;)Ljava/lang/Object;
+#executeQuery(Loracle/toplink/queryframework/DatabaseQuery;Z)Ljava/lang/Object;
+#executeQuery(Loracle/toplink/queryframework/DatabaseQuery;[Ljava/lang/Object;)Ljava/lang/Object;
+#executeQuery(Loracle/toplink/queryframework/DatabaseQuery;[Ljava/lang/Object;Z)Ljava/lang/Object;
+#readAll(Ljava/lang/Class;)Ljava/util/List;
+#readAll(Ljava/lang/Class;Z)Ljava/util/List;
+#readAll(Ljava/lang/Class;Loracle/toplink/expressions/Expression;)Ljava/util/List;
+#readAll(Ljava/lang/Class;Loracle/toplink/expressions/Expression;Z)Ljava/util/List;
+#readAll(Ljava/lang/Class;Loracle/toplink/queryframework/Call;)Ljava/util/List;
+#readAll(Ljava/lang/Class;Loracle/toplink/queryframework/Call;Z)Ljava/util/List;
+#read(Ljava/lang/Class;Loracle/toplink/expressions/Expression;)Ljava/lang/Object;
+#read(Ljava/lang/Class;Loracle/toplink/expressions/Expression;Z)Ljava/lang/Object;
+#read(Ljava/lang/Class;Loracle/toplink/queryframework/Call;)Ljava/lang/Object;
+#read(Ljava/lang/Class;Loracle/toplink/queryframework/Call;Z)Ljava/lang/Object;
+#readById(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#readById(Ljava/lang/Class;Ljava/lang/Object;Z)Ljava/lang/Object;
+#readById(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#readById(Ljava/lang/Class;[Ljava/lang/Object;Z)Ljava/lang/Object;
+#readAndCopy(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#readAndCopy(Ljava/lang/Class;Ljava/lang/Object;Z)Ljava/lang/Object;
+#readAndCopy(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#readAndCopy(Ljava/lang/Class;[Ljava/lang/Object;Z)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;Loracle/toplink/sessions/ObjectCopyingPolicy;)Ljava/lang/Object;
+#copyAll(Ljava/util/Collection;)Ljava/util/List;
+#copyAll(Ljava/util/Collection;Loracle/toplink/sessions/ObjectCopyingPolicy;)Ljava/util/List;
+#refresh(Ljava/lang/Object;)Ljava/lang/Object;
+#refresh(Ljava/lang/Object;Z)Ljava/lang/Object;
+#refreshAll(Ljava/util/Collection;)Ljava/util/List;
+#refreshAll(Ljava/util/Collection;Z)Ljava/util/List;
+#register(Ljava/lang/Object;)Ljava/lang/Object;
+#registerAll(Ljava/util/Collection;)Ljava/util/List;
+#registerNew(Ljava/lang/Object;)V
+#registerExisting(Ljava/lang/Object;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#deepMerge(Ljava/lang/Object;)Ljava/lang/Object;
+#shallowMerge(Ljava/lang/Object;)Ljava/lang/Object;
+#mergeWithReferences(Ljava/lang/Object;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/util/Collection;)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkTemplate

+###org/springframework/orm/toplink/TopLinkTransactionManager
@1.2
+#<init>()V
+#<init>(Lorg/springframework/orm/toplink/SessionFactory;)V
+#setSessionFactory(Lorg/springframework/orm/toplink/SessionFactory;)V
+#getSessionFactory()Lorg/springframework/orm/toplink/SessionFactory;
+#setDataSource(Ljavax/sql/DataSource;)V
+#getDataSource()Ljavax/sql/DataSource;
+#setLazyDatabaseTransaction(Z)V
+#isLazyDatabaseTransaction()Z
+#setJdbcExceptionTranslator(Lorg/springframework/jdbc/support/SQLExceptionTranslator;)V
+#getJdbcExceptionTranslator()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
+#afterPropertiesSet()V
@2.5
+#getResourceFactory()Ljava/lang/Object;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/TopLinkTransactionManager

+###org/springframework/orm/toplink/UnitOfWorkCallback
@1.2
+#<init>()V
+#doInTopLink(Loracle/toplink/sessions/Session;)Ljava/lang/Object;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/UnitOfWorkCallback

+###org/springframework/orm/toplink/support/CommonsLoggingSessionLog
@1.2
+#<init>()V
+#setSeparator(Ljava/lang/String;)V
+#getSeparator()Ljava/lang/String;
+#log(Loracle/toplink/logging/SessionLogEntry;)V
+#log(Loracle/toplink/sessions/SessionLogEntry;)V
@2.5
-#log(Loracle/toplink/sessions/SessionLogEntry;)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/support/CommonsLoggingSessionLog

+###org/springframework/orm/toplink/support/CommonsLoggingSessionLog904
@1.2
+#<init>()V
+#setSeparator(Ljava/lang/String;)V
+#getSeparator()Ljava/lang/String;
+#log(Loracle/toplink/sessions/SessionLogEntry;)V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/support/CommonsLoggingSessionLog904

+###org/springframework/orm/toplink/support/TopLinkDaoSupport
@1.2
+#<init>()V
+#setSessionFactory(Lorg/springframework/orm/toplink/SessionFactory;)V
+#getSessionFactory()Lorg/springframework/orm/toplink/SessionFactory;
+#setTopLinkTemplate(Lorg/springframework/orm/toplink/TopLinkTemplate;)V
+#getTopLinkTemplate()Lorg/springframework/orm/toplink/TopLinkTemplate;
+#afterPropertiesSet()V
@1.2.2
-#afterPropertiesSet()V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/support/TopLinkDaoSupport

+###org/springframework/orm/toplink/support/TransactionAwareSessionAdapter
@1.2
+#<init>()V
+#setSessionFactory(Lorg/springframework/orm/toplink/SessionFactory;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@3.0.0.RELEASE
-###org/springframework/orm/toplink/support/TransactionAwareSessionAdapter

+###org/springframework/orm/toplink/AbstractSessionFactory
@1.2.6
+#<init>()V
+#createSession()Loracle/toplink/sessions/Session;
+#createManagedClientSession()Loracle/toplink/sessions/Session;
+#createTransactionAwareSession()Loracle/toplink/sessions/Session;
+#createTransactionAwareSession(Lorg/springframework/orm/toplink/SessionFactory;)Loracle/toplink/sessions/Session;
@3.0.0.RELEASE
-###org/springframework/orm/toplink/AbstractSessionFactory

+###org/springframework/orm/toplink/SessionBrokerSessionFactory
@1.2.6
+#<init>(Loracle/toplink/sessionbroker/SessionBroker;)V
+#createSession()Loracle/toplink/sessions/Session;
+#close()V
@3.0.0.RELEASE
-###org/springframework/orm/toplink/SessionBrokerSessionFactory

+###org/springframework/orm/hibernate/HibernateTransactionObject
@1.0-rc1
+#getSessionHolder()Lorg/springframework/orm/hibernate/SessionHolder;
+#isNewSessionHolder()Z
+#hasTransaction()Z
+#getPreviousIsolationLevel()Ljava/lang/Integer;
+#getPreviousFlushMode()Lnet/sf/hibernate/FlushMode;
@1.1-rc1
+#<init>()V
-#getPreviousIsolationLevel()Ljava/lang/Integer;
@1.1
+#isRollbackOnly()Z
@1.1.1
-#getPreviousFlushMode()Lnet/sf/hibernate/FlushMode;
@1.1.2
-###org/springframework/orm/hibernate/HibernateTransactionObject

+###org/springframework/orm/jdo/JdoTransactionObject
@1.0-rc1
+#getPersistenceManagerHolder()Lorg/springframework/orm/jdo/PersistenceManagerHolder;
+#isNewPersistenceManagerHolder()Z
+#hasTransaction()Z
@1.1-rc1
+#<init>()V
+#getTransactionData()Ljava/lang/Object;
@1.1
+#isRollbackOnly()Z
@1.1.2
-###org/springframework/orm/jdo/JdoTransactionObject

+###org/springframework/orm/ojb/PersistenceBrokerTransactionObject
@1.1-rc1
+#<init>()V
+#getPersistenceBrokerHolder()Lorg/springframework/orm/ojb/PersistenceBrokerHolder;
@1.1
+#isRollbackOnly()Z
@1.1.2
-###org/springframework/orm/ojb/PersistenceBrokerTransactionObject
