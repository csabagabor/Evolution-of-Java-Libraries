
+###io/opentelemetry/metrics/MeasureLong$Builder
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/MeasureLong$Builder

+###io/opentelemetry/metrics/MeasureDouble
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/MeasureDouble

+###io/opentelemetry/metrics/Metric
@0.2.0
+#getHandle(Ljava/util/List;)Ljava/lang/Object;
+#getDefaultHandle()Ljava/lang/Object;
+#removeHandle(Ljava/util/List;)V
@0.2.1
-###io/opentelemetry/metrics/Metric

+###io/opentelemetry/metrics/BatchRecorder
@0.2.0
+#put(Lio/opentelemetry/metrics/MeasureLong;J)Lio/opentelemetry/metrics/BatchRecorder;
+#put(Lio/opentelemetry/metrics/MeasureDouble;D)Lio/opentelemetry/metrics/BatchRecorder;
+#record()V
@0.2.1
+#put(Lio/opentelemetry/metrics/LongMeasure;J)Lio/opentelemetry/metrics/BatchRecorder;
+#put(Lio/opentelemetry/metrics/DoubleMeasure;D)Lio/opentelemetry/metrics/BatchRecorder;
+#put(Lio/opentelemetry/metrics/LongCounter;J)Lio/opentelemetry/metrics/BatchRecorder;
+#put(Lio/opentelemetry/metrics/DoubleCounter;D)Lio/opentelemetry/metrics/BatchRecorder;
-#put(Lio/opentelemetry/metrics/MeasureLong;J)Lio/opentelemetry/metrics/BatchRecorder;
-#put(Lio/opentelemetry/metrics/MeasureDouble;D)Lio/opentelemetry/metrics/BatchRecorder;
@0.5.0
+#put(Lio/opentelemetry/metrics/LongValueRecorder;J)Lio/opentelemetry/metrics/BatchRecorder;
+#put(Lio/opentelemetry/metrics/DoubleValueRecorder;D)Lio/opentelemetry/metrics/BatchRecorder;
+#put(Lio/opentelemetry/metrics/LongUpDownCounter;J)Lio/opentelemetry/metrics/BatchRecorder;
+#put(Lio/opentelemetry/metrics/DoubleUpDownCounter;D)Lio/opentelemetry/metrics/BatchRecorder;
-#put(Lio/opentelemetry/metrics/LongMeasure;J)Lio/opentelemetry/metrics/BatchRecorder;
-#put(Lio/opentelemetry/metrics/DoubleMeasure;D)Lio/opentelemetry/metrics/BatchRecorder;
@0.10.0
-###io/opentelemetry/metrics/BatchRecorder

+###io/opentelemetry/metrics/ObserverDouble$Builder
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/ObserverDouble$Builder

+###io/opentelemetry/metrics/Observer
@0.2.0
+#setCallback(Lio/opentelemetry/metrics/Observer$Callback;)V
@0.5.0
-###io/opentelemetry/metrics/Observer

+###io/opentelemetry/metrics/DefaultMeter
@0.2.0
+#<init>()V
+#getInstance()Lio/opentelemetry/metrics/Meter;
+#gaugeLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/GaugeLong$Builder;
+#gaugeDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/GaugeDouble$Builder;
+#counterDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/CounterDouble$Builder;
+#counterLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/CounterLong$Builder;
+#measureDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/MeasureDouble$Builder;
+#measureLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/MeasureLong$Builder;
+#observerDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/ObserverDouble$Builder;
+#observerLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/ObserverLong$Builder;
+#newMeasureBatchRecorder()Lio/opentelemetry/metrics/BatchRecorder;
@0.2.1
+#doubleCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
+#longCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongCounter$Builder;
+#doubleMeasureBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
+#longMeasureBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongMeasure$Builder;
+#doubleObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
+#longObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongObserver$Builder;
+#newBatchRecorder([Ljava/lang/String;)Lio/opentelemetry/metrics/BatchRecorder;
+#createLabelSet([Ljava/lang/String;)Lio/opentelemetry/metrics/LabelSet;
+#createLabelSet(Ljava/util/Map;)Lio/opentelemetry/metrics/LabelSet;
-#<init>()V
-#gaugeLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/GaugeLong$Builder;
-#gaugeDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/GaugeDouble$Builder;
-#counterDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/CounterDouble$Builder;
-#counterLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/CounterLong$Builder;
-#measureDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/MeasureDouble$Builder;
-#measureLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/MeasureLong$Builder;
-#observerDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/ObserverDouble$Builder;
-#observerLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/ObserverLong$Builder;
-#newMeasureBatchRecorder()Lio/opentelemetry/metrics/BatchRecorder;
@0.3.0
-#createLabelSet([Ljava/lang/String;)Lio/opentelemetry/metrics/LabelSet;
-#createLabelSet(Ljava/util/Map;)Lio/opentelemetry/metrics/LabelSet;
@0.5.0
+#doubleUpDownCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownCounter$Builder;
+#longUpDownCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownCounter$Builder;
+#doubleValueRecorderBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueRecorder$Builder;
+#longValueRecorderBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueRecorder$Builder;
+#doubleSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleSumObserver$Builder;
+#longSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongSumObserver$Builder;
+#doubleUpDownSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownSumObserver$Builder;
+#longUpDownSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownSumObserver$Builder;
+#doubleValueObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueObserver$Builder;
+#longValueObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueObserver$Builder;
-#doubleMeasureBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
-#longMeasureBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongMeasure$Builder;
-#doubleObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
-#longObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongObserver$Builder;
@0.10.0
-###io/opentelemetry/metrics/DefaultMeter

+###io/opentelemetry/metrics/GaugeLong
@0.2.0
+#getHandle(Ljava/util/List;)Lio/opentelemetry/metrics/GaugeLong$Handle;
+#getDefaultHandle()Lio/opentelemetry/metrics/GaugeLong$Handle;
@0.2.1
-###io/opentelemetry/metrics/GaugeLong

+###io/opentelemetry/metrics/Observer$Callback
@0.2.0
+#update(Ljava/lang/Object;)V
@0.5.0
-###io/opentelemetry/metrics/Observer$Callback

+###io/opentelemetry/metrics/ObserverLong$Builder
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/ObserverLong$Builder

+###io/opentelemetry/metrics/Counter$Builder
@0.2.0
+#setMonotonic(Z)Lio/opentelemetry/metrics/Counter$Builder;
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Counter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Counter$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Counter$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/Counter$Builder;
+#build()Lio/opentelemetry/metrics/Counter;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Counter$Builder;
@0.5.0
-###io/opentelemetry/metrics/Counter$Builder

+###io/opentelemetry/metrics/CounterLong$Builder
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/CounterLong$Builder

+###io/opentelemetry/metrics/GaugeDouble$Handle
@0.2.0
+#set(D)V
@0.2.1
-###io/opentelemetry/metrics/GaugeDouble$Handle

+###io/opentelemetry/metrics/MeterFactory
@0.2.0
+#get(Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
@0.2.1
-###io/opentelemetry/metrics/MeterFactory

+###io/opentelemetry/metrics/MeasureDouble$Handle
@0.2.0
+#record(D)V
@0.2.1
-###io/opentelemetry/metrics/MeasureDouble$Handle

+###io/opentelemetry/metrics/CounterLong
@0.2.0
+#getHandle(Ljava/util/List;)Lio/opentelemetry/metrics/CounterLong$Handle;
+#getDefaultHandle()Lio/opentelemetry/metrics/CounterLong$Handle;
@0.2.1
-###io/opentelemetry/metrics/CounterLong

+###io/opentelemetry/metrics/Observer$Handle
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/Observer$Handle

+###io/opentelemetry/metrics/GaugeDouble
@0.2.0
+#getHandle(Ljava/util/List;)Lio/opentelemetry/metrics/GaugeDouble$Handle;
+#getDefaultHandle()Lio/opentelemetry/metrics/GaugeDouble$Handle;
@0.2.1
-###io/opentelemetry/metrics/GaugeDouble

+###io/opentelemetry/metrics/CounterLong$Handle
@0.2.0
+#add(J)V
@0.2.1
-###io/opentelemetry/metrics/CounterLong$Handle

+###io/opentelemetry/metrics/ObserverLong$Result
@0.2.0
+#put(Lio/opentelemetry/metrics/Observer$Handle;J)V
@0.2.1
-###io/opentelemetry/metrics/ObserverLong$Result

+###io/opentelemetry/metrics/MeasureDouble$Builder
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/MeasureDouble$Builder

+###io/opentelemetry/metrics/Measure
@0.2.0
@0.5.0
-###io/opentelemetry/metrics/Measure

+###io/opentelemetry/metrics/spi/MeterFactoryProvider
@0.2.0
+#create()Lio/opentelemetry/metrics/MeterFactory;
@0.2.1
-###io/opentelemetry/metrics/spi/MeterFactoryProvider

+###io/opentelemetry/metrics/DefaultMeterFactory
@0.2.0
+#<init>()V
+#getInstance()Lio/opentelemetry/metrics/MeterFactory;
+#get(Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
@0.2.1
-###io/opentelemetry/metrics/DefaultMeterFactory

+###io/opentelemetry/metrics/CounterDouble
@0.2.0
+#getHandle(Ljava/util/List;)Lio/opentelemetry/metrics/CounterDouble$Handle;
+#getDefaultHandle()Lio/opentelemetry/metrics/CounterDouble$Handle;
@0.2.1
-###io/opentelemetry/metrics/CounterDouble

+###io/opentelemetry/metrics/CounterDouble$Handle
@0.2.0
+#add(D)V
@0.2.1
-###io/opentelemetry/metrics/CounterDouble$Handle

+###io/opentelemetry/metrics/Metric$Builder
@0.2.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Metric$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Metric$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Metric$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/Metric$Builder;
+#build()Ljava/lang/Object;
@0.2.1
-###io/opentelemetry/metrics/Metric$Builder

+###io/opentelemetry/metrics/ObserverDouble$Result
@0.2.0
+#put(Lio/opentelemetry/metrics/Observer$Handle;D)V
@0.2.1
-###io/opentelemetry/metrics/ObserverDouble$Result

+###io/opentelemetry/metrics/Counter
@0.2.0
@0.5.0
-###io/opentelemetry/metrics/Counter

+###io/opentelemetry/metrics/GaugeLong$Builder
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/GaugeLong$Builder

+###io/opentelemetry/metrics/GaugeLong$Handle
@0.2.0
+#set(J)V
@0.2.1
-###io/opentelemetry/metrics/GaugeLong$Handle

+###io/opentelemetry/metrics/Measure$Builder
@0.2.0
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Measure$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Measure$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Measure$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/Measure$Builder;
+#setAbsolute(Z)Lio/opentelemetry/metrics/Measure$Builder;
+#build()Lio/opentelemetry/metrics/Measure;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Measure$Builder;
@0.5.0
-###io/opentelemetry/metrics/Measure$Builder

+###io/opentelemetry/metrics/Meter
@0.2.0
+#gaugeLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/GaugeLong$Builder;
+#gaugeDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/GaugeDouble$Builder;
+#counterDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/CounterDouble$Builder;
+#counterLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/CounterLong$Builder;
+#measureDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/MeasureDouble$Builder;
+#measureLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/MeasureLong$Builder;
+#observerDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/ObserverDouble$Builder;
+#observerLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/ObserverLong$Builder;
+#newMeasureBatchRecorder()Lio/opentelemetry/metrics/BatchRecorder;
@0.2.1
+#doubleCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
+#longCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongCounter$Builder;
+#doubleMeasureBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
+#longMeasureBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongMeasure$Builder;
+#doubleObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
+#longObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongObserver$Builder;
+#newBatchRecorder([Ljava/lang/String;)Lio/opentelemetry/metrics/BatchRecorder;
+#createLabelSet([Ljava/lang/String;)Lio/opentelemetry/metrics/LabelSet;
+#createLabelSet(Ljava/util/Map;)Lio/opentelemetry/metrics/LabelSet;
-#gaugeLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/GaugeLong$Builder;
-#gaugeDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/GaugeDouble$Builder;
-#counterDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/CounterDouble$Builder;
-#counterLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/CounterLong$Builder;
-#measureDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/MeasureDouble$Builder;
-#measureLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/MeasureLong$Builder;
-#observerDoubleBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/ObserverDouble$Builder;
-#observerLongBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/ObserverLong$Builder;
-#newMeasureBatchRecorder()Lio/opentelemetry/metrics/BatchRecorder;
@0.3.0
-#createLabelSet([Ljava/lang/String;)Lio/opentelemetry/metrics/LabelSet;
-#createLabelSet(Ljava/util/Map;)Lio/opentelemetry/metrics/LabelSet;
@0.5.0
+#doubleUpDownCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownCounter$Builder;
+#longUpDownCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownCounter$Builder;
+#doubleValueRecorderBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueRecorder$Builder;
+#longValueRecorderBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueRecorder$Builder;
+#doubleSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleSumObserver$Builder;
+#longSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongSumObserver$Builder;
+#doubleUpDownSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownSumObserver$Builder;
+#longUpDownSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownSumObserver$Builder;
+#doubleValueObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueObserver$Builder;
+#longValueObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueObserver$Builder;
-#doubleMeasureBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
-#longMeasureBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongMeasure$Builder;
-#doubleObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
-#longObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/metrics/LongObserver$Builder;
@0.10.0
-###io/opentelemetry/metrics/Meter

+###io/opentelemetry/metrics/ObserverLong
@0.2.0
+#setCallback(Lio/opentelemetry/metrics/Observer$Callback;)V
@0.2.1
-###io/opentelemetry/metrics/ObserverLong

+###io/opentelemetry/metrics/MeasureLong
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/MeasureLong

+###io/opentelemetry/metrics/Gauge
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/Gauge

+###io/opentelemetry/metrics/Gauge$Builder
@0.2.0
+#setMonotonic(Z)Lio/opentelemetry/metrics/Gauge$Builder;
@0.2.1
-###io/opentelemetry/metrics/Gauge$Builder

+###io/opentelemetry/metrics/GaugeDouble$Builder
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/GaugeDouble$Builder

+###io/opentelemetry/metrics/Observer$Builder
@0.2.0
+#setMonotonic(Z)Lio/opentelemetry/metrics/Metric$Builder;
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Observer$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Observer$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Observer$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/Observer$Builder;
+#setMonotonic(Z)Lio/opentelemetry/metrics/Observer$Builder;
+#build()Lio/opentelemetry/metrics/Observer;
-#setMonotonic(Z)Lio/opentelemetry/metrics/Metric$Builder;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Observer$Builder;
@0.5.0
-###io/opentelemetry/metrics/Observer$Builder

+###io/opentelemetry/metrics/ObserverDouble
@0.2.0
+#setCallback(Lio/opentelemetry/metrics/Observer$Callback;)V
@0.2.1
-###io/opentelemetry/metrics/ObserverDouble

+###io/opentelemetry/metrics/DefaultMeterFactoryProvider
@0.2.0
+#<init>()V
+#getInstance()Lio/opentelemetry/metrics/spi/MeterFactoryProvider;
+#create()Lio/opentelemetry/metrics/MeterFactory;
@0.2.1
-###io/opentelemetry/metrics/DefaultMeterFactoryProvider

+###io/opentelemetry/metrics/CounterDouble$Builder
@0.2.0
@0.2.1
-###io/opentelemetry/metrics/CounterDouble$Builder

+###io/opentelemetry/metrics/MeasureLong$Handle
@0.2.0
+#record(J)V
@0.2.1
-###io/opentelemetry/metrics/MeasureLong$Handle

+###io/opentelemetry/context/Scope
@0.2.0
+#close()V
@0.2.1
-###io/opentelemetry/context/Scope

+###io/opentelemetry/context/NoopScope
@0.2.0
+#getInstance()Lio/opentelemetry/context/Scope;
+#close()V
@0.2.1
-###io/opentelemetry/context/NoopScope

+###io/opentelemetry/context/propagation/BinaryFormat
@0.2.0
+#toByteArray(Ljava/lang/Object;)[B
+#fromByteArray([B)Ljava/lang/Object;
@0.2.1
-###io/opentelemetry/context/propagation/BinaryFormat

+###io/opentelemetry/context/propagation/HttpTextFormat$Setter
@0.2.0
+#put(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
@0.2.1
-###io/opentelemetry/context/propagation/HttpTextFormat$Setter

+###io/opentelemetry/context/propagation/HttpTextFormat$Getter
@0.2.0
+#get(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
@0.2.1
-###io/opentelemetry/context/propagation/HttpTextFormat$Getter

+###io/opentelemetry/context/propagation/HttpTextFormat
@0.2.0
+#fields()Ljava/util/List;
+#inject(Ljava/lang/Object;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
+#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Ljava/lang/Object;
@0.2.1
-###io/opentelemetry/context/propagation/HttpTextFormat

+###io/opentelemetry/trace/Event
@0.2.0
+#getName()Ljava/lang/String;
+#getAttributes()Ljava/util/Map;
@0.6.0
+#getAttributes()Lio/opentelemetry/common/Attributes;
-#getAttributes()Ljava/util/Map;
@0.9.1
-###io/opentelemetry/trace/Event

+###io/opentelemetry/trace/AttributeValue
@0.2.0
+#stringAttributeValue(Ljava/lang/String;)Lio/opentelemetry/trace/AttributeValue;
+#booleanAttributeValue(Z)Lio/opentelemetry/trace/AttributeValue;
+#longAttributeValue(J)Lio/opentelemetry/trace/AttributeValue;
+#doubleAttributeValue(D)Lio/opentelemetry/trace/AttributeValue;
+#getStringValue()Ljava/lang/String;
+#getBooleanValue()Z
+#getLongValue()J
+#getDoubleValue()D
+#getType()Lio/opentelemetry/trace/AttributeValue$Type;
@0.2.1
-###io/opentelemetry/trace/AttributeValue

+###io/opentelemetry/trace/DefaultSpan
@0.2.0
+#getInvalid()Lio/opentelemetry/trace/DefaultSpan;
+#create(Lio/opentelemetry/trace/SpanContext;)Lio/opentelemetry/trace/DefaultSpan;
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#setAttribute(Ljava/lang/String;J)V
+#setAttribute(Ljava/lang/String;D)V
+#setAttribute(Ljava/lang/String;Z)V
+#setAttribute(Ljava/lang/String;Lio/opentelemetry/trace/AttributeValue;)V
+#addEvent(Ljava/lang/String;)V
+#addEvent(Ljava/lang/String;J)V
+#addEvent(Ljava/lang/String;Ljava/util/Map;)V
+#addEvent(Ljava/lang/String;Ljava/util/Map;J)V
+#addEvent(Lio/opentelemetry/trace/Event;)V
+#addEvent(Lio/opentelemetry/trace/Event;J)V
+#setStatus(Lio/opentelemetry/trace/Status;)V
+#updateName(Ljava/lang/String;)V
+#end()V
+#end(Lio/opentelemetry/trace/EndSpanOptions;)V
+#getContext()Lio/opentelemetry/trace/SpanContext;
+#isRecording()Z
+#toString()Ljava/lang/String;
@0.2.1
+#setAttribute(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)V
-#setAttribute(Ljava/lang/String;Lio/opentelemetry/trace/AttributeValue;)V
@0.6.0
+#addEvent(Ljava/lang/String;Lio/opentelemetry/common/Attributes;)V
+#addEvent(Ljava/lang/String;Lio/opentelemetry/common/Attributes;J)V
-#addEvent(Ljava/lang/String;Ljava/util/Map;)V
-#addEvent(Ljava/lang/String;Ljava/util/Map;J)V
@0.7.0
+#recordException(Ljava/lang/Throwable;)V
@0.8.0
+#getInvalid()Lio/opentelemetry/trace/Span;
+#create(Lio/opentelemetry/trace/SpanContext;)Lio/opentelemetry/trace/Span;
+#recordException(Ljava/lang/Throwable;Lio/opentelemetry/common/Attributes;)V
-#getInvalid()Lio/opentelemetry/trace/DefaultSpan;
-#create(Lio/opentelemetry/trace/SpanContext;)Lio/opentelemetry/trace/DefaultSpan;
@0.9.1
+#setAttribute(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)V
+#setStatus(Lio/opentelemetry/trace/StatusCanonicalCode;)V
+#setStatus(Lio/opentelemetry/trace/StatusCanonicalCode;Ljava/lang/String;)V
-#setAttribute(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)V
-#addEvent(Lio/opentelemetry/trace/Event;)V
-#addEvent(Lio/opentelemetry/trace/Event;J)V
-#setStatus(Lio/opentelemetry/trace/Status;)V
@0.10.0
-###io/opentelemetry/trace/DefaultSpan

+###io/opentelemetry/trace/AttributeValue$Type
@0.2.0
+#values()[Lio/opentelemetry/trace/AttributeValue$Type;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/trace/AttributeValue$Type;
@0.2.1
-###io/opentelemetry/trace/AttributeValue$Type

+###io/opentelemetry/trace/TracerFactory
@0.2.0
+#get(Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
@0.2.1
-###io/opentelemetry/trace/TracerFactory

+###io/opentelemetry/trace/SpanContext
@0.2.0
+#create(Lio/opentelemetry/trace/TraceId;Lio/opentelemetry/trace/SpanId;Lio/opentelemetry/trace/TraceFlags;Lio/opentelemetry/trace/Tracestate;)Lio/opentelemetry/trace/SpanContext;
+#createFromRemoteParent(Lio/opentelemetry/trace/TraceId;Lio/opentelemetry/trace/SpanId;Lio/opentelemetry/trace/TraceFlags;Lio/opentelemetry/trace/Tracestate;)Lio/opentelemetry/trace/SpanContext;
+#getTraceId()Lio/opentelemetry/trace/TraceId;
+#getSpanId()Lio/opentelemetry/trace/SpanId;
+#getTraceFlags()Lio/opentelemetry/trace/TraceFlags;
+#getTracestate()Lio/opentelemetry/trace/Tracestate;
+#isValid()Z
+#isRemote()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.2.1
+#<init>()V
+#getInvalid()Lio/opentelemetry/trace/SpanContext;
+#create(Lio/opentelemetry/trace/TraceId;Lio/opentelemetry/trace/SpanId;Lio/opentelemetry/trace/TraceFlags;Lio/opentelemetry/trace/TraceState;)Lio/opentelemetry/trace/SpanContext;
+#createFromRemoteParent(Lio/opentelemetry/trace/TraceId;Lio/opentelemetry/trace/SpanId;Lio/opentelemetry/trace/TraceFlags;Lio/opentelemetry/trace/TraceState;)Lio/opentelemetry/trace/SpanContext;
+#getTraceState()Lio/opentelemetry/trace/TraceState;
-#create(Lio/opentelemetry/trace/TraceId;Lio/opentelemetry/trace/SpanId;Lio/opentelemetry/trace/TraceFlags;Lio/opentelemetry/trace/Tracestate;)Lio/opentelemetry/trace/SpanContext;
-#createFromRemoteParent(Lio/opentelemetry/trace/TraceId;Lio/opentelemetry/trace/SpanId;Lio/opentelemetry/trace/TraceFlags;Lio/opentelemetry/trace/Tracestate;)Lio/opentelemetry/trace/SpanContext;
-#getTracestate()Lio/opentelemetry/trace/Tracestate;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@0.9.1
+#create(Ljava/lang/String;Ljava/lang/String;BLio/opentelemetry/trace/TraceState;)Lio/opentelemetry/trace/SpanContext;
+#createFromRemoteParent(Ljava/lang/String;Ljava/lang/String;BLio/opentelemetry/trace/TraceState;)Lio/opentelemetry/trace/SpanContext;
+#getTraceIdAsHexString()Ljava/lang/String;
+#getTraceIdBytes()[B
+#getSpanIdAsHexString()Ljava/lang/String;
+#getSpanIdBytes()[B
+#isSampled()Z
+#getTraceFlags()B
+#copyTraceFlagsHexTo([CI)V
-#create(Lio/opentelemetry/trace/TraceId;Lio/opentelemetry/trace/SpanId;Lio/opentelemetry/trace/TraceFlags;Lio/opentelemetry/trace/TraceState;)Lio/opentelemetry/trace/SpanContext;
-#createFromRemoteParent(Lio/opentelemetry/trace/TraceId;Lio/opentelemetry/trace/SpanId;Lio/opentelemetry/trace/TraceFlags;Lio/opentelemetry/trace/TraceState;)Lio/opentelemetry/trace/SpanContext;
-#getTraceId()Lio/opentelemetry/trace/TraceId;
-#getSpanId()Lio/opentelemetry/trace/SpanId;
-#getTraceFlags()Lio/opentelemetry/trace/TraceFlags;
@0.10.0
-###io/opentelemetry/trace/SpanContext

+###io/opentelemetry/trace/Link
@0.2.0
+#getContext()Lio/opentelemetry/trace/SpanContext;
+#getAttributes()Ljava/util/Map;
@0.6.0
+#getAttributes()Lio/opentelemetry/common/Attributes;
-#getAttributes()Ljava/util/Map;
@0.9.1
-###io/opentelemetry/trace/Link

+###io/opentelemetry/trace/Span$Kind
@0.2.0
+#values()[Lio/opentelemetry/trace/Span$Kind;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/trace/Span$Kind;
@0.10.0
-###io/opentelemetry/trace/Span$Kind

+###io/opentelemetry/trace/Span
@0.2.0
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#setAttribute(Ljava/lang/String;J)V
+#setAttribute(Ljava/lang/String;D)V
+#setAttribute(Ljava/lang/String;Z)V
+#setAttribute(Ljava/lang/String;Lio/opentelemetry/trace/AttributeValue;)V
+#addEvent(Ljava/lang/String;)V
+#addEvent(Ljava/lang/String;J)V
+#addEvent(Ljava/lang/String;Ljava/util/Map;)V
+#addEvent(Ljava/lang/String;Ljava/util/Map;J)V
+#addEvent(Lio/opentelemetry/trace/Event;)V
+#addEvent(Lio/opentelemetry/trace/Event;J)V
+#setStatus(Lio/opentelemetry/trace/Status;)V
+#updateName(Ljava/lang/String;)V
+#end()V
+#end(Lio/opentelemetry/trace/EndSpanOptions;)V
+#getContext()Lio/opentelemetry/trace/SpanContext;
+#isRecording()Z
@0.2.1
+#setAttribute(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)V
-#setAttribute(Ljava/lang/String;Lio/opentelemetry/trace/AttributeValue;)V
@0.6.0
+#addEvent(Ljava/lang/String;Lio/opentelemetry/common/Attributes;)V
+#addEvent(Ljava/lang/String;Lio/opentelemetry/common/Attributes;J)V
-#addEvent(Ljava/lang/String;Ljava/util/Map;)V
-#addEvent(Ljava/lang/String;Ljava/util/Map;J)V
@0.7.0
+#recordException(Ljava/lang/Throwable;)V
@0.8.0
+#recordException(Ljava/lang/Throwable;Lio/opentelemetry/common/Attributes;)V
@0.9.1
+#setAttribute(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)V
+#setAttribute(Lio/opentelemetry/common/AttributeKey;I)V
+#setStatus(Lio/opentelemetry/trace/StatusCanonicalCode;)V
+#setStatus(Lio/opentelemetry/trace/StatusCanonicalCode;Ljava/lang/String;)V
-#setAttribute(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)V
-#addEvent(Lio/opentelemetry/trace/Event;)V
-#addEvent(Lio/opentelemetry/trace/Event;J)V
-#setStatus(Lio/opentelemetry/trace/Status;)V
@0.10.0
-###io/opentelemetry/trace/Span

+###io/opentelemetry/trace/SpanId
@0.2.0
+#<init>(J)V
+#getSize()I
+#getInvalid()Lio/opentelemetry/trace/SpanId;
+#fromBytes([BI)Lio/opentelemetry/trace/SpanId;
+#copyBytesTo([BI)V
+#fromLowerBase16(Ljava/lang/CharSequence;I)Lio/opentelemetry/trace/SpanId;
+#copyLowerBase16To([CI)V
+#isValid()Z
+#toLowerBase16()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Lio/opentelemetry/trace/SpanId;)I
+#compareTo(Ljava/lang/Object;)I
@0.9.1
+#getHexLength()I
+#getInvalid()Ljava/lang/String;
+#fromLong(J)Ljava/lang/String;
+#bytesFromHex(Ljava/lang/String;I)[B
+#isValid(Ljava/lang/String;)Z
+#bytesToHex([B)Ljava/lang/String;
-#<init>(J)V
-#getInvalid()Lio/opentelemetry/trace/SpanId;
-#fromBytes([BI)Lio/opentelemetry/trace/SpanId;
-#copyBytesTo([BI)V
-#fromLowerBase16(Ljava/lang/CharSequence;I)Lio/opentelemetry/trace/SpanId;
-#copyLowerBase16To([CI)V
-#isValid()Z
-#toLowerBase16()Ljava/lang/String;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
-#compareTo(Lio/opentelemetry/trace/SpanId;)I
-#compareTo(Ljava/lang/Object;)I
@0.10.0
-###io/opentelemetry/trace/SpanId

+###io/opentelemetry/trace/Tracestate$Builder
@0.2.0
+#set(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/Tracestate$Builder;
+#remove(Ljava/lang/String;)Lio/opentelemetry/trace/Tracestate$Builder;
+#build()Lio/opentelemetry/trace/Tracestate;
@0.2.1
-###io/opentelemetry/trace/Tracestate$Builder

+###io/opentelemetry/trace/Tracestate$Entry
@0.2.0
+#create(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/Tracestate$Entry;
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
@0.2.1
-###io/opentelemetry/trace/Tracestate$Entry

+###io/opentelemetry/trace/EndSpanOptions$Builder
@0.2.0
+#setEndTimestamp(J)Lio/opentelemetry/trace/EndSpanOptions$Builder;
+#build()Lio/opentelemetry/trace/EndSpanOptions;
@0.10.0
-###io/opentelemetry/trace/EndSpanOptions$Builder

+###io/opentelemetry/trace/spi/TracerFactoryProvider
@0.2.0
+#create()Lio/opentelemetry/trace/TracerFactory;
@0.2.1
-###io/opentelemetry/trace/spi/TracerFactoryProvider

+###io/opentelemetry/trace/Span$Builder
@0.2.0
+#setParent(Lio/opentelemetry/trace/Span;)Lio/opentelemetry/trace/Span$Builder;
+#setParent(Lio/opentelemetry/trace/SpanContext;)Lio/opentelemetry/trace/Span$Builder;
+#setNoParent()Lio/opentelemetry/trace/Span$Builder;
+#addLink(Lio/opentelemetry/trace/SpanContext;)Lio/opentelemetry/trace/Span$Builder;
+#addLink(Lio/opentelemetry/trace/SpanContext;Ljava/util/Map;)Lio/opentelemetry/trace/Span$Builder;
+#addLink(Lio/opentelemetry/trace/Link;)Lio/opentelemetry/trace/Span$Builder;
+#setSpanKind(Lio/opentelemetry/trace/Span$Kind;)Lio/opentelemetry/trace/Span$Builder;
+#setStartTimestamp(J)Lio/opentelemetry/trace/Span$Builder;
+#startSpan()Lio/opentelemetry/trace/Span;
@0.2.1
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/Span$Builder;
+#setAttribute(Ljava/lang/String;J)Lio/opentelemetry/trace/Span$Builder;
+#setAttribute(Ljava/lang/String;D)Lio/opentelemetry/trace/Span$Builder;
+#setAttribute(Ljava/lang/String;Z)Lio/opentelemetry/trace/Span$Builder;
+#setAttribute(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/trace/Span$Builder;
@0.6.0
+#addLink(Lio/opentelemetry/trace/SpanContext;Lio/opentelemetry/common/Attributes;)Lio/opentelemetry/trace/Span$Builder;
-#addLink(Lio/opentelemetry/trace/SpanContext;Ljava/util/Map;)Lio/opentelemetry/trace/Span$Builder;
@0.7.0
+#setParent(Lio/grpc/Context;)Lio/opentelemetry/trace/Span$Builder;
@0.9.1
+#setAttribute(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/trace/Span$Builder;
-#setParent(Lio/opentelemetry/trace/Span;)Lio/opentelemetry/trace/Span$Builder;
-#setParent(Lio/opentelemetry/trace/SpanContext;)Lio/opentelemetry/trace/Span$Builder;
-#addLink(Lio/opentelemetry/trace/Link;)Lio/opentelemetry/trace/Span$Builder;
-#setAttribute(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/trace/Span$Builder;
@0.10.0
-###io/opentelemetry/trace/Span$Builder

+###io/opentelemetry/trace/DefaultTracerFactory
@0.2.0
+#<init>()V
+#getInstance()Lio/opentelemetry/trace/TracerFactory;
+#get(Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
@0.2.1
-###io/opentelemetry/trace/DefaultTracerFactory

+###io/opentelemetry/trace/unsafe/ContextUtils
@0.2.0
+#withValue(Lio/opentelemetry/trace/Span;)Lio/grpc/Context;
+#withValue(Lio/opentelemetry/trace/Span;Lio/grpc/Context;)Lio/grpc/Context;
+#getValue()Lio/opentelemetry/trace/Span;
+#getValue(Lio/grpc/Context;)Lio/opentelemetry/trace/Span;
+#withSpan(Lio/opentelemetry/trace/Span;)Lio/opentelemetry/context/Scope;
@0.2.1
-###io/opentelemetry/trace/unsafe/ContextUtils

+###io/opentelemetry/trace/propagation/HttpTraceContext
@0.2.0
+#<init>()V
+#fields()Ljava/util/List;
+#inject(Lio/opentelemetry/trace/SpanContext;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
+#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Lio/opentelemetry/trace/SpanContext;
+#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Ljava/lang/Object;
+#inject(Ljava/lang/Object;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
@0.3.0
+#inject(Lio/grpc/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
+#extract(Lio/grpc/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Lio/grpc/Context;
-#inject(Lio/opentelemetry/trace/SpanContext;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
-#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Lio/opentelemetry/trace/SpanContext;
-#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Ljava/lang/Object;
-#inject(Ljava/lang/Object;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
@0.8.0
+#inject(Lio/grpc/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/TextMapPropagator$Setter;)V
+#extract(Lio/grpc/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/TextMapPropagator$Getter;)Lio/grpc/Context;
-#inject(Lio/grpc/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
-#extract(Lio/grpc/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Lio/grpc/Context;
@0.9.1
+#getInstance()Lio/opentelemetry/trace/propagation/HttpTraceContext;
-#<init>()V
@0.10.0
-###io/opentelemetry/trace/propagation/HttpTraceContext

+###io/opentelemetry/trace/propagation/BinaryTraceContext
@0.2.0
+#<init>()V
+#toByteArray(Lio/opentelemetry/trace/SpanContext;)[B
+#fromByteArray([B)Lio/opentelemetry/trace/SpanContext;
+#fromByteArray([B)Ljava/lang/Object;
+#toByteArray(Ljava/lang/Object;)[B
@0.2.1
-###io/opentelemetry/trace/propagation/BinaryTraceContext

+###io/opentelemetry/trace/EndSpanOptions
@0.2.0
+#builder()Lio/opentelemetry/trace/EndSpanOptions$Builder;
+#getEndTimestamp()J
@0.10.0
-###io/opentelemetry/trace/EndSpanOptions

+###io/opentelemetry/trace/TraceId
@0.2.0
+#<init>(JJ)V
+#getSize()I
+#getInvalid()Lio/opentelemetry/trace/TraceId;
+#fromBytes([BI)Lio/opentelemetry/trace/TraceId;
+#copyBytesTo([BI)V
+#fromLowerBase16(Ljava/lang/CharSequence;I)Lio/opentelemetry/trace/TraceId;
+#copyLowerBase16To([CI)V
+#isValid()Z
+#toLowerBase16()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#getLowerLong()J
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Lio/opentelemetry/trace/TraceId;)I
+#compareTo(Ljava/lang/Object;)I
@0.5.0
+#getTraceRandomPart()J
-#getLowerLong()J
@0.9.1
+#getHexLength()I
+#getInvalid()Ljava/lang/String;
+#fromLongs(JJ)Ljava/lang/String;
+#bytesFromHex(Ljava/lang/String;I)[B
+#copyHexInto([B[CI)V
+#isValid(Ljava/lang/CharSequence;)Z
+#bytesToHex([B)Ljava/lang/String;
+#getTraceIdRandomPart(Ljava/lang/CharSequence;)J
-#<init>(JJ)V
-#getInvalid()Lio/opentelemetry/trace/TraceId;
-#fromBytes([BI)Lio/opentelemetry/trace/TraceId;
-#copyBytesTo([BI)V
-#fromLowerBase16(Ljava/lang/CharSequence;I)Lio/opentelemetry/trace/TraceId;
-#copyLowerBase16To([CI)V
-#isValid()Z
-#toLowerBase16()Ljava/lang/String;
-#equals(Ljava/lang/Object;)Z
-#getTraceRandomPart()J
-#hashCode()I
-#toString()Ljava/lang/String;
-#compareTo(Lio/opentelemetry/trace/TraceId;)I
-#compareTo(Ljava/lang/Object;)I
@0.10.0
-###io/opentelemetry/trace/TraceId

+###io/opentelemetry/trace/Status$CanonicalCode
@0.2.0
+#values()[Lio/opentelemetry/trace/Status$CanonicalCode;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/trace/Status$CanonicalCode;
+#value()I
+#toStatus()Lio/opentelemetry/trace/Status;
@0.9.1
-###io/opentelemetry/trace/Status$CanonicalCode

+###io/opentelemetry/trace/TraceFlags
@0.2.0
+#getSize()I
+#getDefault()Lio/opentelemetry/trace/TraceFlags;
+#fromByte(B)Lio/opentelemetry/trace/TraceFlags;
+#fromLowerBase16(Ljava/lang/CharSequence;I)Lio/opentelemetry/trace/TraceFlags;
+#getByte()B
+#copyBytesTo([BI)V
+#copyLowerBase16To([CI)V
+#toLowerBase16()Ljava/lang/String;
+#builder()Lio/opentelemetry/trace/TraceFlags$Builder;
+#builder(Lio/opentelemetry/trace/TraceFlags;)Lio/opentelemetry/trace/TraceFlags$Builder;
+#isSampled()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.9.1
+#getHexLength()I
+#getDefault()B
+#isSampledFromHex(Ljava/lang/CharSequence;I)Z
+#byteFromHex(Ljava/lang/CharSequence;I)B
+#getSampled()B
-#getSize()I
-#getDefault()Lio/opentelemetry/trace/TraceFlags;
-#fromByte(B)Lio/opentelemetry/trace/TraceFlags;
-#fromLowerBase16(Ljava/lang/CharSequence;I)Lio/opentelemetry/trace/TraceFlags;
-#getByte()B
-#copyBytesTo([BI)V
-#copyLowerBase16To([CI)V
-#toLowerBase16()Ljava/lang/String;
-#builder()Lio/opentelemetry/trace/TraceFlags$Builder;
-#builder(Lio/opentelemetry/trace/TraceFlags;)Lio/opentelemetry/trace/TraceFlags$Builder;
-#isSampled()Z
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@0.10.0
-###io/opentelemetry/trace/TraceFlags

+###io/opentelemetry/trace/DefaultTracer
@0.2.0
+#getInstance()Lio/opentelemetry/trace/Tracer;
+#getCurrentSpan()Lio/opentelemetry/trace/Span;
+#withSpan(Lio/opentelemetry/trace/Span;)Lio/opentelemetry/context/Scope;
+#spanBuilder(Ljava/lang/String;)Lio/opentelemetry/trace/Span$Builder;
+#getBinaryFormat()Lio/opentelemetry/context/propagation/BinaryFormat;
+#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.2.1
-#getBinaryFormat()Lio/opentelemetry/context/propagation/BinaryFormat;
@0.3.0
-#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.10.0
-###io/opentelemetry/trace/DefaultTracer

+###io/opentelemetry/trace/Status
@0.2.0
+#withDescription(Ljava/lang/String;)Lio/opentelemetry/trace/Status;
+#getCanonicalCode()Lio/opentelemetry/trace/Status$CanonicalCode;
+#getDescription()Ljava/lang/String;
+#isOk()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.9.1
-###io/opentelemetry/trace/Status

+###io/opentelemetry/trace/Tracer
@0.2.0
+#getCurrentSpan()Lio/opentelemetry/trace/Span;
+#withSpan(Lio/opentelemetry/trace/Span;)Lio/opentelemetry/context/Scope;
+#spanBuilder(Ljava/lang/String;)Lio/opentelemetry/trace/Span$Builder;
+#getBinaryFormat()Lio/opentelemetry/context/propagation/BinaryFormat;
+#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.2.1
-#getBinaryFormat()Lio/opentelemetry/context/propagation/BinaryFormat;
@0.3.0
-#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.10.0
-###io/opentelemetry/trace/Tracer

+###io/opentelemetry/trace/TraceFlags$Builder
@0.2.0
+#setIsSampled(Z)Lio/opentelemetry/trace/TraceFlags$Builder;
+#build()Lio/opentelemetry/trace/TraceFlags;
@0.9.1
-###io/opentelemetry/trace/TraceFlags$Builder

+###io/opentelemetry/trace/Tracestate
@0.2.0
+#getDefault()Lio/opentelemetry/trace/Tracestate;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getEntries()Ljava/util/List;
+#builder()Lio/opentelemetry/trace/Tracestate$Builder;
+#toBuilder()Lio/opentelemetry/trace/Tracestate$Builder;
@0.2.1
-###io/opentelemetry/trace/Tracestate

+###io/opentelemetry/trace/DefaultTracerFactoryProvider
@0.2.0
+#<init>()V
+#getInstance()Lio/opentelemetry/trace/spi/TracerFactoryProvider;
+#create()Lio/opentelemetry/trace/TracerFactory;
@0.2.1
-###io/opentelemetry/trace/DefaultTracerFactoryProvider

+###io/opentelemetry/internal/StringUtils
@0.2.0
+#isPrintableString(Ljava/lang/String;)Z
@0.2.1
+#isNullOrEmpty(Ljava/lang/String;)Z
+#isValidMetricName(Ljava/lang/String;)Z
+#padLeft(Ljava/lang/String;I)Ljava/lang/String;
@0.6.0
-#isNullOrEmpty(Ljava/lang/String;)Z
-#padLeft(Ljava/lang/String;I)Ljava/lang/String;
@0.7.0
+#truncateToSize(Lio/opentelemetry/common/AttributeValue;I)Lio/opentelemetry/common/AttributeValue;
@0.9.1
-#truncateToSize(Lio/opentelemetry/common/AttributeValue;I)Lio/opentelemetry/common/AttributeValue;
@0.10.0
-###io/opentelemetry/internal/StringUtils

+###io/opentelemetry/internal/Utils
@0.2.0
+#checkArgument(ZLjava/lang/Object;)V
+#checkArgument(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkState(ZLjava/lang/Object;)V
+#checkIndex(II)V
+#checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#checkListElementNotNull(Ljava/util/List;Ljava/lang/Object;)V
+#checkMapKeysNotNull(Ljava/util/Map;Ljava/lang/Object;)V
+#equalsObjects(Ljava/lang/Object;Ljava/lang/Object;)Z
@0.2.1
+#validateLabelPairs([Ljava/lang/String;)V
@0.4.0
-#checkListElementNotNull(Ljava/util/List;Ljava/lang/Object;)V
@0.7.0
+#checkArgument(ZLjava/lang/String;)V
+#checkState(ZLjava/lang/String;)V
+#checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#checkMapKeysNotNull(Ljava/util/Map;Ljava/lang/String;)V
-#checkArgument(ZLjava/lang/Object;)V
-#checkState(ZLjava/lang/Object;)V
-#checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#checkMapKeysNotNull(Ljava/util/Map;Ljava/lang/Object;)V
@0.9.1
-#checkIndex(II)V
-#checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
-#checkMapKeysNotNull(Ljava/util/Map;Ljava/lang/String;)V
-#equalsObjects(Ljava/lang/Object;Ljava/lang/Object;)Z
@0.10.0
-###io/opentelemetry/internal/Utils

+###io/opentelemetry/OpenTelemetry
@0.2.0
+#getTracerFactory()Lio/opentelemetry/trace/TracerFactory;
+#getMeterFactory()Lio/opentelemetry/metrics/MeterFactory;
+#getDistributedContextManager()Lio/opentelemetry/distributedcontext/DistributedContextManager;
@0.2.1
+#getTracerProvider()Lio/opentelemetry/trace/TracerProvider;
+#getMeterProvider()Lio/opentelemetry/metrics/MeterProvider;
+#getCorrelationContextManager()Lio/opentelemetry/correlationcontext/CorrelationContextManager;
-#getTracerFactory()Lio/opentelemetry/trace/TracerFactory;
-#getMeterFactory()Lio/opentelemetry/metrics/MeterFactory;
-#getDistributedContextManager()Lio/opentelemetry/distributedcontext/DistributedContextManager;
@0.3.0
+#getPropagators()Lio/opentelemetry/context/propagation/ContextPropagators;
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V
@0.5.0
+#getTracer(Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
+#getTracer(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
+#getMeter(Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
+#getMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
@0.9.1
+#getBaggageManager()Lio/opentelemetry/baggage/BaggageManager;
-#getCorrelationContextManager()Lio/opentelemetry/correlationcontext/CorrelationContextManager;
@0.10.0
-###io/opentelemetry/OpenTelemetry

+###io/opentelemetry/distributedcontext/EntryKey
@0.2.0
+#create(Ljava/lang/String;)Lio/opentelemetry/distributedcontext/EntryKey;
+#getName()Ljava/lang/String;
@0.2.1
-###io/opentelemetry/distributedcontext/EntryKey

+###io/opentelemetry/distributedcontext/DistributedContext$Builder
@0.2.0
+#setParent(Lio/opentelemetry/distributedcontext/DistributedContext;)Lio/opentelemetry/distributedcontext/DistributedContext$Builder;
+#setNoParent()Lio/opentelemetry/distributedcontext/DistributedContext$Builder;
+#put(Lio/opentelemetry/distributedcontext/EntryKey;Lio/opentelemetry/distributedcontext/EntryValue;Lio/opentelemetry/distributedcontext/EntryMetadata;)Lio/opentelemetry/distributedcontext/DistributedContext$Builder;
+#remove(Lio/opentelemetry/distributedcontext/EntryKey;)Lio/opentelemetry/distributedcontext/DistributedContext$Builder;
+#build()Lio/opentelemetry/distributedcontext/DistributedContext;
@0.2.1
-###io/opentelemetry/distributedcontext/DistributedContext$Builder

+###io/opentelemetry/distributedcontext/EntryValue
@0.2.0
+#create(Ljava/lang/String;)Lio/opentelemetry/distributedcontext/EntryValue;
+#asString()Ljava/lang/String;
@0.2.1
-###io/opentelemetry/distributedcontext/EntryValue

+###io/opentelemetry/distributedcontext/Entry
@0.2.0
+#create(Lio/opentelemetry/distributedcontext/EntryKey;Lio/opentelemetry/distributedcontext/EntryValue;Lio/opentelemetry/distributedcontext/EntryMetadata;)Lio/opentelemetry/distributedcontext/Entry;
+#getKey()Lio/opentelemetry/distributedcontext/EntryKey;
+#getValue()Lio/opentelemetry/distributedcontext/EntryValue;
+#getEntryMetadata()Lio/opentelemetry/distributedcontext/EntryMetadata;
@0.2.1
-###io/opentelemetry/distributedcontext/Entry

+###io/opentelemetry/distributedcontext/spi/DistributedContextManagerProvider
@0.2.0
+#create()Lio/opentelemetry/distributedcontext/DistributedContextManager;
@0.2.1
-###io/opentelemetry/distributedcontext/spi/DistributedContextManagerProvider

+###io/opentelemetry/distributedcontext/EntryMetadata$EntryTtl
@0.2.0
+#values()[Lio/opentelemetry/distributedcontext/EntryMetadata$EntryTtl;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/distributedcontext/EntryMetadata$EntryTtl;
@0.2.1
-###io/opentelemetry/distributedcontext/EntryMetadata$EntryTtl

+###io/opentelemetry/distributedcontext/unsafe/ContextUtils
@0.2.0
+#withValue(Lio/opentelemetry/distributedcontext/DistributedContext;)Lio/grpc/Context;
+#withValue(Lio/opentelemetry/distributedcontext/DistributedContext;Lio/grpc/Context;)Lio/grpc/Context;
+#getValue()Lio/opentelemetry/distributedcontext/DistributedContext;
+#getValue(Lio/grpc/Context;)Lio/opentelemetry/distributedcontext/DistributedContext;
+#withDistributedContext(Lio/opentelemetry/distributedcontext/DistributedContext;)Lio/opentelemetry/context/Scope;
@0.2.1
-###io/opentelemetry/distributedcontext/unsafe/ContextUtils

+###io/opentelemetry/distributedcontext/DefaultDistributedContextManager
@0.2.0
+#<init>()V
+#getInstance()Lio/opentelemetry/distributedcontext/DistributedContextManager;
+#getCurrentContext()Lio/opentelemetry/distributedcontext/DistributedContext;
+#contextBuilder()Lio/opentelemetry/distributedcontext/DistributedContext$Builder;
+#withContext(Lio/opentelemetry/distributedcontext/DistributedContext;)Lio/opentelemetry/context/Scope;
+#getBinaryFormat()Lio/opentelemetry/context/propagation/BinaryFormat;
+#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.2.1
-###io/opentelemetry/distributedcontext/DefaultDistributedContextManager

+###io/opentelemetry/distributedcontext/DistributedContextManager
@0.2.0
+#getCurrentContext()Lio/opentelemetry/distributedcontext/DistributedContext;
+#contextBuilder()Lio/opentelemetry/distributedcontext/DistributedContext$Builder;
+#withContext(Lio/opentelemetry/distributedcontext/DistributedContext;)Lio/opentelemetry/context/Scope;
+#getBinaryFormat()Lio/opentelemetry/context/propagation/BinaryFormat;
+#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.2.1
-###io/opentelemetry/distributedcontext/DistributedContextManager

+###io/opentelemetry/distributedcontext/DistributedContext
@0.2.0
+#getEntries()Ljava/util/Collection;
+#getEntryValue(Lio/opentelemetry/distributedcontext/EntryKey;)Lio/opentelemetry/distributedcontext/EntryValue;
@0.2.1
-###io/opentelemetry/distributedcontext/DistributedContext

+###io/opentelemetry/distributedcontext/EmptyDistributedContext
@0.2.0
+#getInstance()Lio/opentelemetry/distributedcontext/DistributedContext;
+#getEntries()Ljava/util/Collection;
+#getEntryValue(Lio/opentelemetry/distributedcontext/EntryKey;)Lio/opentelemetry/distributedcontext/EntryValue;
@0.2.1
-###io/opentelemetry/distributedcontext/EmptyDistributedContext

+###io/opentelemetry/distributedcontext/EntryMetadata
@0.2.0
+#create(Lio/opentelemetry/distributedcontext/EntryMetadata$EntryTtl;)Lio/opentelemetry/distributedcontext/EntryMetadata;
+#getEntryTtl()Lio/opentelemetry/distributedcontext/EntryMetadata$EntryTtl;
@0.2.1
-###io/opentelemetry/distributedcontext/EntryMetadata

+###io/opentelemetry/api/common/AttributeKey
@0.10.0
+#getKey()Ljava/lang/String;
+#getType()Lio/opentelemetry/api/common/AttributeType;
+#stringKey(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeKey;
+#booleanKey(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeKey;
+#longKey(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeKey;
+#doubleKey(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeKey;
+#stringArrayKey(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeKey;
+#booleanArrayKey(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeKey;
+#longArrayKey(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeKey;
+#doubleArrayKey(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeKey;
@0.13.0
-###io/opentelemetry/api/common/AttributeKey

+###io/opentelemetry/api/common/AttributesBuilder
@0.11.0
+#build()Lio/opentelemetry/api/common/Attributes;
+#put(Lio/opentelemetry/api/common/AttributeKey;I)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;J)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;D)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;Z)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;[Ljava/lang/String;)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;[Ljava/lang/Long;)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;[Ljava/lang/Double;)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;[Ljava/lang/Boolean;)Lio/opentelemetry/api/common/AttributesBuilder;
+#putAll(Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/common/AttributesBuilder;
@0.12.0
+#put(Ljava/lang/String;[J)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;[D)Lio/opentelemetry/api/common/AttributesBuilder;
+#put(Ljava/lang/String;[Z)Lio/opentelemetry/api/common/AttributesBuilder;
-#put(Ljava/lang/String;[Ljava/lang/Long;)Lio/opentelemetry/api/common/AttributesBuilder;
-#put(Ljava/lang/String;[Ljava/lang/Double;)Lio/opentelemetry/api/common/AttributesBuilder;
-#put(Ljava/lang/String;[Ljava/lang/Boolean;)Lio/opentelemetry/api/common/AttributesBuilder;
@0.13.0
-###io/opentelemetry/api/common/AttributesBuilder

+###io/opentelemetry/api/common/Attributes
@0.10.0
+#<init>()V
+#get(Lio/opentelemetry/api/common/AttributeKey;)Ljava/lang/Object;
+#forEach(Lio/opentelemetry/api/common/AttributeConsumer;)V
+#empty()Lio/opentelemetry/api/common/Attributes;
+#of(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/common/Attributes;
+#of(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/common/Attributes;
+#of(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/common/Attributes;
+#of(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/common/Attributes;
+#of(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/common/Attributes;
+#of(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/common/Attributes;
+#builder()Lio/opentelemetry/api/common/Attributes$Builder;
+#builder(Lio/opentelemetry/api/common/ReadableAttributes;)Lio/opentelemetry/api/common/Attributes$Builder;
+#toBuilder()Lio/opentelemetry/api/common/Attributes$Builder;
+#toString()Ljava/lang/String;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#size()I
@0.11.0
+#builder()Lio/opentelemetry/api/common/AttributesBuilder;
+#builder(Lio/opentelemetry/api/common/ReadableAttributes;)Lio/opentelemetry/api/common/AttributesBuilder;
+#toBuilder()Lio/opentelemetry/api/common/AttributesBuilder;
-#builder()Lio/opentelemetry/api/common/Attributes$Builder;
-#builder(Lio/opentelemetry/api/common/ReadableAttributes;)Lio/opentelemetry/api/common/Attributes$Builder;
-#toBuilder()Lio/opentelemetry/api/common/Attributes$Builder;
-#toString()Ljava/lang/String;
-#get(Ljava/lang/Object;)Ljava/lang/Object;
-#isEmpty()Z
-#size()I
@0.12.0
+#forEach(Ljava/util/function/BiConsumer;)V
+#size()I
+#isEmpty()Z
+#asMap()Ljava/util/Map;
+#builder(Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/common/AttributesBuilder;[deprecated]
-#<init>()V
-#forEach(Lio/opentelemetry/api/common/AttributeConsumer;)V
-#builder(Lio/opentelemetry/api/common/ReadableAttributes;)Lio/opentelemetry/api/common/AttributesBuilder;
@0.13.0
-###io/opentelemetry/api/common/Attributes

+###io/opentelemetry/api/common/AttributeType
@0.10.0
+#values()[Lio/opentelemetry/api/common/AttributeType;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/common/AttributeType;
@0.13.0
-###io/opentelemetry/api/common/AttributeType

+###io/opentelemetry/api/baggage/propagation/W3CBaggagePropagator
@0.10.0
+#getInstance()Lio/opentelemetry/api/baggage/propagation/W3CBaggagePropagator;
+#fields()Ljava/util/List;
+#inject(Lio/opentelemetry/context/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/TextMapPropagator$Setter;)V
+#extract(Lio/opentelemetry/context/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/TextMapPropagator$Getter;)Lio/opentelemetry/context/Context;
@0.12.0
+#fields()Ljava/util/Collection;
-#fields()Ljava/util/List;
@0.13.0
-###io/opentelemetry/api/baggage/propagation/W3CBaggagePropagator

+###io/opentelemetry/api/baggage/Baggage
@0.10.0
+#empty()Lio/opentelemetry/api/baggage/Baggage;
+#builder()Lio/opentelemetry/api/baggage/Baggage$Builder;
+#current()Lio/opentelemetry/api/baggage/Baggage;
+#fromContext(Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/baggage/Baggage;
+#fromContextOrNull(Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/baggage/Baggage;
+#storeInContext(Lio/opentelemetry/context/Context;)Lio/opentelemetry/context/Context;
+#size()I
+#isEmpty()Z
+#forEach(Lio/opentelemetry/api/baggage/BaggageConsumer;)V
+#getEntryValue(Ljava/lang/String;)Ljava/lang/String;
+#toBuilder()Lio/opentelemetry/api/baggage/Baggage$Builder;
@0.11.0
+#builder()Lio/opentelemetry/api/baggage/BaggageBuilder;
+#toBuilder()Lio/opentelemetry/api/baggage/BaggageBuilder;
-#builder()Lio/opentelemetry/api/baggage/Baggage$Builder;
-#toBuilder()Lio/opentelemetry/api/baggage/Baggage$Builder;
@0.12.0
+#asMap()Ljava/util/Map;
@0.13.0
-###io/opentelemetry/api/baggage/Baggage

+###io/opentelemetry/api/baggage/BaggageBuilder
@0.11.0
+#setParent(Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/baggage/BaggageBuilder;
+#setNoParent()Lio/opentelemetry/api/baggage/BaggageBuilder;
+#put(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/api/baggage/EntryMetadata;)Lio/opentelemetry/api/baggage/BaggageBuilder;
+#put(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/baggage/BaggageBuilder;
+#remove(Ljava/lang/String;)Lio/opentelemetry/api/baggage/BaggageBuilder;
+#build()Lio/opentelemetry/api/baggage/Baggage;
@0.12.0
+#put(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/api/baggage/BaggageEntryMetadata;)Lio/opentelemetry/api/baggage/BaggageBuilder;
-#put(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/api/baggage/EntryMetadata;)Lio/opentelemetry/api/baggage/BaggageBuilder;
@0.13.0
-###io/opentelemetry/api/baggage/BaggageBuilder

+###io/opentelemetry/api/baggage/BaggageEntry
@0.12.0
+#getValue()Ljava/lang/String;
+#getEntryMetadata()Lio/opentelemetry/api/baggage/BaggageEntryMetadata;
@0.13.0
-###io/opentelemetry/api/baggage/BaggageEntry

+###io/opentelemetry/api/baggage/BaggageEntryMetadata
@0.12.0
+#empty()Lio/opentelemetry/api/baggage/BaggageEntryMetadata;
+#create(Ljava/lang/String;)Lio/opentelemetry/api/baggage/BaggageEntryMetadata;
+#getValue()Ljava/lang/String;
@0.13.0
-###io/opentelemetry/api/baggage/BaggageEntryMetadata

+###io/opentelemetry/api/OpenTelemetry
@0.10.0
+#get()Lio/opentelemetry/api/OpenTelemetry;
+#set(Lio/opentelemetry/api/OpenTelemetry;)V
+#getGlobalTracerProvider()Lio/opentelemetry/api/trace/TracerProvider;
+#getGlobalTracer(Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
+#getGlobalTracer(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
+#getGlobalMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;
+#getGlobalMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;
+#getGlobalMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;
+#getGlobalPropagators()Lio/opentelemetry/context/propagation/ContextPropagators;
+#setGlobalPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V
+#getTracerProvider()Lio/opentelemetry/api/trace/TracerProvider;
+#getTracer(Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
+#getTracer(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
+#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;
+#getMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;
+#getMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;
+#getPropagators()Lio/opentelemetry/context/propagation/ContextPropagators;
+#toBuilder()Lio/opentelemetry/api/OpenTelemetry$Builder;
@0.11.0
+#toBuilder()Lio/opentelemetry/api/OpenTelemetryBuilder;
-#toBuilder()Lio/opentelemetry/api/OpenTelemetry$Builder;
@0.12.0
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V
*#toBuilder()Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
+#builder()Lio/opentelemetry/api/OpenTelemetryBuilder;
@0.13.0
*#get()Lio/opentelemetry/api/OpenTelemetry;[deprecated]
*#set(Lio/opentelemetry/api/OpenTelemetry;)V[deprecated]
*#getGlobalTracerProvider()Lio/opentelemetry/api/trace/TracerProvider;[deprecated]
*#getGlobalTracer(Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;[deprecated]
*#getGlobalTracer(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;[deprecated]
*#getGlobalMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;[deprecated]
*#getGlobalMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
*#getGlobalMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
*#getGlobalPropagators()Lio/opentelemetry/context/propagation/ContextPropagators;[deprecated]
*#setGlobalPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V[deprecated]
*#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V[deprecated]
*#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;[deprecated]
*#getMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
*#getMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
*#builder()Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
-#toBuilder()Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
@0.14.0
-#get()Lio/opentelemetry/api/OpenTelemetry;[deprecated]
-#set(Lio/opentelemetry/api/OpenTelemetry;)V[deprecated]
-#getGlobalTracerProvider()Lio/opentelemetry/api/trace/TracerProvider;[deprecated]
-#getGlobalTracer(Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;[deprecated]
-#getGlobalTracer(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;[deprecated]
-#getGlobalMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;[deprecated]
-#getGlobalMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
-#getGlobalMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
-#getGlobalPropagators()Lio/opentelemetry/context/propagation/ContextPropagators;[deprecated]
-#setGlobalPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V[deprecated]
-#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V[deprecated]
-#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;[deprecated]
-#getMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
-#getMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
-#builder()Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
@0.16.0
+#getDefault()Lio/opentelemetry/api/OpenTelemetry;
+#getPropagating(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/OpenTelemetry;
@0.17.0
+#noop()Lio/opentelemetry/api/OpenTelemetry;
+#propagating(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/OpenTelemetry;
-#getDefault()Lio/opentelemetry/api/OpenTelemetry;
-#getPropagating(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/OpenTelemetry;
@1.4.0
+#tracerBuilder(Ljava/lang/String;)Lio/opentelemetry/api/trace/TracerBuilder;
@1.10.0-rc.1
+#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;
@1.10.0
+#getMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;
+#meterBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/MeterBuilder;

+###io/opentelemetry/api/GlobalOpenTelemetry
@0.13.0
+#get()Lio/opentelemetry/api/OpenTelemetry;
+#set(Lio/opentelemetry/api/OpenTelemetry;)V
+#getTracerProvider()Lio/opentelemetry/api/trace/TracerProvider;
+#getTracer(Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
+#getTracer(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
+#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;[deprecated]
+#getMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
+#getMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
+#getPropagators()Lio/opentelemetry/context/propagation/ContextPropagators;
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V[deprecated]
@0.14.0
-#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;[deprecated]
-#getMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
-#getMeter(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;[deprecated]
-#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V[deprecated]
@0.15.0
+#resetForTest()V
@1.4.0
+#tracerBuilder(Ljava/lang/String;)Lio/opentelemetry/api/trace/TracerBuilder;
@1.10.0
+#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;
+#getMeter(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;
+#meterBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/MeterBuilder;

+###io/opentelemetry/api/trace/TraceFlags
@0.10.0
+#getHexLength()I
+#getDefault()B
+#isSampledFromHex(Ljava/lang/CharSequence;I)Z
+#byteFromHex(Ljava/lang/CharSequence;I)B
+#getSampled()B
@0.13.0
-###io/opentelemetry/api/trace/TraceFlags

+###io/opentelemetry/api/trace/SpanContext
@0.10.0
+#<init>()V
+#getInvalid()Lio/opentelemetry/api/trace/SpanContext;
+#create(Ljava/lang/String;Ljava/lang/String;BLio/opentelemetry/api/trace/TraceState;)Lio/opentelemetry/api/trace/SpanContext;
+#createFromRemoteParent(Ljava/lang/String;Ljava/lang/String;BLio/opentelemetry/api/trace/TraceState;)Lio/opentelemetry/api/trace/SpanContext;
+#getTraceIdAsHexString()Ljava/lang/String;
+#getTraceIdBytes()[B
+#getSpanIdAsHexString()Ljava/lang/String;
+#getSpanIdBytes()[B
+#isSampled()Z
+#getTraceFlags()B
+#copyTraceFlagsHexTo([CI)V
+#getTraceState()Lio/opentelemetry/api/trace/TraceState;
+#isValid()Z
+#isRemote()Z
@0.12.0
-#<init>()V
@0.13.0
-###io/opentelemetry/api/trace/SpanContext

+###io/opentelemetry/api/trace/propagation/W3CTraceContextPropagator
@0.12.0
+#getInstance()Lio/opentelemetry/context/propagation/TextMapPropagator;
@0.13.0
-###io/opentelemetry/api/trace/propagation/W3CTraceContextPropagator

+###io/opentelemetry/api/trace/SpanId
@0.10.0
+#getSize()I
+#getHexLength()I
+#getInvalid()Ljava/lang/String;
+#fromLong(J)Ljava/lang/String;
+#bytesFromHex(Ljava/lang/String;I)[B
+#isValid(Ljava/lang/String;)Z
+#bytesToHex([B)Ljava/lang/String;
+#asLong(Ljava/lang/CharSequence;)J
@0.13.0
-###io/opentelemetry/api/trace/SpanId

+###io/opentelemetry/api/trace/TracerProvider
@0.10.0
+#getDefault()Lio/opentelemetry/api/trace/TracerProvider;
+#get(Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Tracer;
@0.13.0
-###io/opentelemetry/api/trace/TracerProvider

+###io/opentelemetry/api/trace/SpanBuilder
@0.11.0
+#setParent(Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/trace/SpanBuilder;
+#setNoParent()Lio/opentelemetry/api/trace/SpanBuilder;
+#addLink(Lio/opentelemetry/api/trace/SpanContext;)Lio/opentelemetry/api/trace/SpanBuilder;
+#addLink(Lio/opentelemetry/api/trace/SpanContext;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/SpanBuilder;
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanBuilder;
+#setAttribute(Ljava/lang/String;J)Lio/opentelemetry/api/trace/SpanBuilder;
+#setAttribute(Ljava/lang/String;D)Lio/opentelemetry/api/trace/SpanBuilder;
+#setAttribute(Ljava/lang/String;Z)Lio/opentelemetry/api/trace/SpanBuilder;
+#setAttribute(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/trace/SpanBuilder;
+#setSpanKind(Lio/opentelemetry/api/trace/Span$Kind;)Lio/opentelemetry/api/trace/SpanBuilder;
+#setStartTimestamp(JLjava/util/concurrent/TimeUnit;)Lio/opentelemetry/api/trace/SpanBuilder;
+#setStartTimestamp(Ljava/time/Instant;)Lio/opentelemetry/api/trace/SpanBuilder;
+#startSpan()Lio/opentelemetry/api/trace/Span;
@0.13.0
-###io/opentelemetry/api/trace/SpanBuilder

+###io/opentelemetry/api/trace/Tracer
@0.10.0
+#getDefault()Lio/opentelemetry/api/trace/Tracer;
+#spanBuilder(Ljava/lang/String;)Lio/opentelemetry/api/trace/Span$Builder;
@0.11.0
+#spanBuilder(Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanBuilder;
-#spanBuilder(Ljava/lang/String;)Lio/opentelemetry/api/trace/Span$Builder;
@0.13.0
-###io/opentelemetry/api/trace/Tracer

+###io/opentelemetry/api/trace/TraceState
@0.10.0
+#getDefault()Lio/opentelemetry/api/trace/TraceState;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#size()I
+#isEmpty()Z
+#forEach(Ljava/util/function/BiConsumer;)V
+#builder()Lio/opentelemetry/api/trace/TraceState$Builder;
+#toBuilder()Lio/opentelemetry/api/trace/TraceState$Builder;
@0.11.0
+#builder()Lio/opentelemetry/api/trace/TraceStateBuilder;
+#toBuilder()Lio/opentelemetry/api/trace/TraceStateBuilder;
-#builder()Lio/opentelemetry/api/trace/TraceState$Builder;
-#toBuilder()Lio/opentelemetry/api/trace/TraceState$Builder;
@0.12.0
+#asMap()Ljava/util/Map;
@0.13.0
-###io/opentelemetry/api/trace/TraceState

+###io/opentelemetry/api/trace/SpanKind
@0.16.0
+#values()[Lio/opentelemetry/api/trace/SpanKind;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/SpanKind;

+###io/opentelemetry/api/trace/TraceStateBuilder
@0.11.0
+#set(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/TraceStateBuilder;
+#remove(Ljava/lang/String;)Lio/opentelemetry/api/trace/TraceStateBuilder;
+#build()Lio/opentelemetry/api/trace/TraceState;
@0.13.0
-###io/opentelemetry/api/trace/TraceStateBuilder

+###io/opentelemetry/api/trace/TraceId
@0.10.0
+#getSize()I
+#getHexLength()I
+#getInvalid()Ljava/lang/String;
+#fromLongs(JJ)Ljava/lang/String;
+#bytesFromHex(Ljava/lang/String;I)[B
+#copyHexInto([B[CI)V
+#isValid(Ljava/lang/CharSequence;)Z
+#bytesToHex([B)Ljava/lang/String;
+#getTraceIdRandomPart(Ljava/lang/CharSequence;)J
+#traceIdHighBytesAsLong(Ljava/lang/CharSequence;)J
+#traceIdLowBytesAsLong(Ljava/lang/CharSequence;)J
@0.13.0
-###io/opentelemetry/api/trace/TraceId

+###io/opentelemetry/api/trace/StatusCode
@0.10.0
+#values()[Lio/opentelemetry/api/trace/StatusCode;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/StatusCode;
+#value()I
@0.12.0
*#value()I[deprecated]
@0.13.0
-###io/opentelemetry/api/trace/StatusCode

+###io/opentelemetry/api/trace/Span
@0.10.0
+#current()Lio/opentelemetry/api/trace/Span;
+#fromContext(Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/trace/Span;
+#fromContextOrNull(Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/trace/Span;
+#getInvalid()Lio/opentelemetry/api/trace/Span;
+#wrap(Lio/opentelemetry/api/trace/SpanContext;)Lio/opentelemetry/api/trace/Span;
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
+#setAttribute(Ljava/lang/String;J)Lio/opentelemetry/api/trace/Span;
+#setAttribute(Ljava/lang/String;D)Lio/opentelemetry/api/trace/Span;
+#setAttribute(Ljava/lang/String;Z)Lio/opentelemetry/api/trace/Span;
+#setAttribute(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/trace/Span;
+#setAttribute(Lio/opentelemetry/api/common/AttributeKey;I)Lio/opentelemetry/api/trace/Span;
+#addEvent(Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
+#addEvent(Ljava/lang/String;J)Lio/opentelemetry/api/trace/Span;
+#addEvent(Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/Span;
+#addEvent(Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;J)Lio/opentelemetry/api/trace/Span;
+#setStatus(Lio/opentelemetry/api/trace/StatusCode;)Lio/opentelemetry/api/trace/Span;
+#setStatus(Lio/opentelemetry/api/trace/StatusCode;Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
+#recordException(Ljava/lang/Throwable;)Lio/opentelemetry/api/trace/Span;
+#recordException(Ljava/lang/Throwable;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/Span;
+#updateName(Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
+#end()V
+#end(J)V
+#getSpanContext()Lio/opentelemetry/api/trace/SpanContext;
+#isRecording()Z
+#storeInContext(Lio/opentelemetry/context/Context;)Lio/opentelemetry/context/Context;
@0.11.0
+#addEvent(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lio/opentelemetry/api/trace/Span;
+#addEvent(Ljava/lang/String;Ljava/time/Instant;)Lio/opentelemetry/api/trace/Span;
+#addEvent(Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;JLjava/util/concurrent/TimeUnit;)Lio/opentelemetry/api/trace/Span;
+#addEvent(Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;Ljava/time/Instant;)Lio/opentelemetry/api/trace/Span;
+#end(JLjava/util/concurrent/TimeUnit;)V
+#end(Ljava/time/Instant;)V
-#addEvent(Ljava/lang/String;J)Lio/opentelemetry/api/trace/Span;
-#addEvent(Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;J)Lio/opentelemetry/api/trace/Span;
-#end(J)V
@0.13.0
-###io/opentelemetry/api/trace/Span

+###io/opentelemetry/api/internal/Utils
@0.10.0
+#checkArgument(ZLjava/lang/String;)V
+#checkArgument(ZLjava/lang/String;[Ljava/lang/Object;)V
+#checkState(ZLjava/lang/String;)V
+#validateLabelPairs([Ljava/lang/String;)V
@0.13.0
-###io/opentelemetry/api/internal/Utils

+###io/opentelemetry/api/internal/StringUtils
@0.10.0
+#isPrintableString(Ljava/lang/String;)Z
+#isValidMetricName(Ljava/lang/String;)Z
@0.13.0
-###io/opentelemetry/api/internal/StringUtils

+###io/opentelemetry/api/internal/ImmutableKeyValuePairs
@0.11.0
+#<init>()V
+#size()I
+#isEmpty()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#sortAndFilter([Ljava/lang/Object;Z)Ljava/util/List;
+#toString()Ljava/lang/String;
@0.12.0
+#asMap()Ljava/util/Map;
@0.13.0
-###io/opentelemetry/api/internal/ImmutableKeyValuePairs

+###io/opentelemetry/api/internal/OtelEncodingUtils
@0.17.0
+#longFromBase16String(Ljava/lang/CharSequence;I)J
+#longToBase16String(J[CI)V
+#bytesFromBase16(Ljava/lang/CharSequence;I)[B
+#bytesToBase16([B[CI)V
+#byteToBase16(B[CI)V
+#byteFromBase16(CC)B
+#isValidBase16String(Ljava/lang/CharSequence;)Z
@1.1.0
+#isValidBase16Character(C)Z

+###io/opentelemetry/api/internal/ReadOnlyArrayMap
@0.12.0
+#wrap(Ljava/util/List;)Ljava/util/Map;
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#isEmpty()Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#toString()Ljava/lang/String;
@0.13.0
-###io/opentelemetry/api/internal/ReadOnlyArrayMap

+###io/opentelemetry/correlationcontext/CorrelationsContextUtils
@0.2.1
+#withCorrelationContext(Lio/opentelemetry/correlationcontext/CorrelationContext;Lio/grpc/Context;)Lio/grpc/Context;
+#getCurrentCorrelationContext()Lio/opentelemetry/correlationcontext/CorrelationContext;
+#getCorrelationContext(Lio/grpc/Context;)Lio/opentelemetry/correlationcontext/CorrelationContext;
+#getCorrelationContextWithoutDefault(Lio/grpc/Context;)Lio/opentelemetry/correlationcontext/CorrelationContext;
+#currentContextWith(Lio/opentelemetry/correlationcontext/CorrelationContext;)Lio/opentelemetry/context/Scope;
@0.9.1
-###io/opentelemetry/correlationcontext/CorrelationsContextUtils

+###io/opentelemetry/correlationcontext/EntryMetadata$EntryTtl
@0.2.1
+#values()[Lio/opentelemetry/correlationcontext/EntryMetadata$EntryTtl;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/correlationcontext/EntryMetadata$EntryTtl;
@0.9.1
-###io/opentelemetry/correlationcontext/EntryMetadata$EntryTtl

+###io/opentelemetry/correlationcontext/EmptyCorrelationContext
@0.2.1
+#getInstance()Lio/opentelemetry/correlationcontext/CorrelationContext;
+#getEntries()Ljava/util/Collection;
+#getEntryValue(Lio/opentelemetry/correlationcontext/EntryKey;)Lio/opentelemetry/correlationcontext/EntryValue;
@0.6.0
+#getEntryValue(Ljava/lang/String;)Ljava/lang/String;
-#getEntryValue(Lio/opentelemetry/correlationcontext/EntryKey;)Lio/opentelemetry/correlationcontext/EntryValue;
@0.9.1
-###io/opentelemetry/correlationcontext/EmptyCorrelationContext

+###io/opentelemetry/correlationcontext/CorrelationContext$Builder
@0.2.1
+#setParent(Lio/opentelemetry/correlationcontext/CorrelationContext;)Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
+#setNoParent()Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
+#put(Lio/opentelemetry/correlationcontext/EntryKey;Lio/opentelemetry/correlationcontext/EntryValue;Lio/opentelemetry/correlationcontext/EntryMetadata;)Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
+#remove(Lio/opentelemetry/correlationcontext/EntryKey;)Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
+#build()Lio/opentelemetry/correlationcontext/CorrelationContext;
@0.6.0
+#put(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/correlationcontext/EntryMetadata;)Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
+#remove(Ljava/lang/String;)Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
-#put(Lio/opentelemetry/correlationcontext/EntryKey;Lio/opentelemetry/correlationcontext/EntryValue;Lio/opentelemetry/correlationcontext/EntryMetadata;)Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
-#remove(Lio/opentelemetry/correlationcontext/EntryKey;)Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
@0.7.0
+#setParent(Lio/grpc/Context;)Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
@0.9.1
-###io/opentelemetry/correlationcontext/CorrelationContext$Builder

+###io/opentelemetry/correlationcontext/EntryMetadata
@0.2.1
+#create(Lio/opentelemetry/correlationcontext/EntryMetadata$EntryTtl;)Lio/opentelemetry/correlationcontext/EntryMetadata;
+#getEntryTtl()Lio/opentelemetry/correlationcontext/EntryMetadata$EntryTtl;
@0.9.1
-###io/opentelemetry/correlationcontext/EntryMetadata

+###io/opentelemetry/correlationcontext/spi/CorrelationContextManagerFactory
@0.5.0
+#create()Lio/opentelemetry/correlationcontext/CorrelationContextManager;
@0.9.1
-###io/opentelemetry/correlationcontext/spi/CorrelationContextManagerFactory

+###io/opentelemetry/correlationcontext/Entry
@0.2.1
+#create(Lio/opentelemetry/correlationcontext/EntryKey;Lio/opentelemetry/correlationcontext/EntryValue;Lio/opentelemetry/correlationcontext/EntryMetadata;)Lio/opentelemetry/correlationcontext/Entry;
+#getKey()Lio/opentelemetry/correlationcontext/EntryKey;
+#getValue()Lio/opentelemetry/correlationcontext/EntryValue;
+#getEntryMetadata()Lio/opentelemetry/correlationcontext/EntryMetadata;
@0.6.0
+#create(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/correlationcontext/EntryMetadata;)Lio/opentelemetry/correlationcontext/Entry;
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
-#create(Lio/opentelemetry/correlationcontext/EntryKey;Lio/opentelemetry/correlationcontext/EntryValue;Lio/opentelemetry/correlationcontext/EntryMetadata;)Lio/opentelemetry/correlationcontext/Entry;
-#getKey()Lio/opentelemetry/correlationcontext/EntryKey;
-#getValue()Lio/opentelemetry/correlationcontext/EntryValue;
@0.9.1
-###io/opentelemetry/correlationcontext/Entry

+###io/opentelemetry/correlationcontext/CorrelationContext
@0.2.1
+#getEntries()Ljava/util/Collection;
+#getEntryValue(Lio/opentelemetry/correlationcontext/EntryKey;)Lio/opentelemetry/correlationcontext/EntryValue;
@0.6.0
+#getEntryValue(Ljava/lang/String;)Ljava/lang/String;
-#getEntryValue(Lio/opentelemetry/correlationcontext/EntryKey;)Lio/opentelemetry/correlationcontext/EntryValue;
@0.9.1
-###io/opentelemetry/correlationcontext/CorrelationContext

+###io/opentelemetry/correlationcontext/CorrelationContextManager
@0.2.1
+#getCurrentContext()Lio/opentelemetry/correlationcontext/CorrelationContext;
+#contextBuilder()Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
+#withContext(Lio/opentelemetry/correlationcontext/CorrelationContext;)Lio/opentelemetry/context/Scope;
+#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.3.0
-#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.9.1
-###io/opentelemetry/correlationcontext/CorrelationContextManager

+###io/opentelemetry/correlationcontext/DefaultCorrelationContextManager
@0.2.1
+#<init>()V
+#getInstance()Lio/opentelemetry/correlationcontext/CorrelationContextManager;
+#getCurrentContext()Lio/opentelemetry/correlationcontext/CorrelationContext;
+#contextBuilder()Lio/opentelemetry/correlationcontext/CorrelationContext$Builder;
+#withContext(Lio/opentelemetry/correlationcontext/CorrelationContext;)Lio/opentelemetry/context/Scope;
+#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.3.0
-#getHttpTextFormat()Lio/opentelemetry/context/propagation/HttpTextFormat;
@0.9.1
-###io/opentelemetry/correlationcontext/DefaultCorrelationContextManager

+###io/opentelemetry/common/Attributes$Builder
@0.6.0
+#<init>()V
+#build()Lio/opentelemetry/common/Attributes;
+#setAttribute(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Ljava/lang/String;J)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Ljava/lang/String;D)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Ljava/lang/String;Z)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Ljava/lang/String;[Ljava/lang/String;)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Ljava/lang/String;[Ljava/lang/Long;)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Ljava/lang/String;[Ljava/lang/Double;)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Ljava/lang/String;[Ljava/lang/Boolean;)Lio/opentelemetry/common/Attributes$Builder;
@0.8.0
-#<init>()V
@0.9.1
+#setAttribute(Lio/opentelemetry/common/AttributeKey;I)Lio/opentelemetry/common/Attributes$Builder;
+#setAttribute(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/common/Attributes$Builder;
+#addAll(Lio/opentelemetry/common/Attributes;)Lio/opentelemetry/common/Attributes$Builder;
-#setAttribute(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes$Builder;
@0.10.0
-###io/opentelemetry/common/Attributes$Builder

+###io/opentelemetry/common/Labels$Builder
@0.6.0
+#<init>()V
+#build()Lio/opentelemetry/common/Labels;
+#setLabel(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/common/Labels$Builder;
@0.10.0
-###io/opentelemetry/common/Labels$Builder

+###io/opentelemetry/common/ReadableAttributes
@0.6.0
@0.9.1
+#get(Lio/opentelemetry/common/AttributeKey;)Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#forEach(Lio/opentelemetry/common/AttributeConsumer;)V
@0.10.0
-###io/opentelemetry/common/ReadableAttributes

+###io/opentelemetry/common/AttributeValue$Type
@0.2.1
+#values()[Lio/opentelemetry/common/AttributeValue$Type;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/common/AttributeValue$Type;
@0.9.1
-###io/opentelemetry/common/AttributeValue$Type

+###io/opentelemetry/common/Labels
@0.6.0
+#<init>()V
+#empty()Lio/opentelemetry/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/common/Labels;
+#of([Ljava/lang/String;)Lio/opentelemetry/common/Labels;
+#newBuilder()Lio/opentelemetry/common/Labels$Builder;
+#forEach(Lio/opentelemetry/common/ReadableKeyValuePairs$KeyValueConsumer;)V
+#isEmpty()Z
+#size()I
@0.7.0
+#toBuilder()Lio/opentelemetry/common/Labels$Builder;
+#toString()Ljava/lang/String;
@0.9.1
+#forEach(Lio/opentelemetry/common/LabelConsumer;)V
-#forEach(Lio/opentelemetry/common/ReadableKeyValuePairs$KeyValueConsumer;)V
@0.10.0
-###io/opentelemetry/common/Labels

+###io/opentelemetry/common/Attributes
@0.6.0
+#<init>()V
+#empty()Lio/opentelemetry/common/Attributes;
+#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
+#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
+#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
+#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
+#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
+#newBuilder()Lio/opentelemetry/common/Attributes$Builder;
+#forEach(Lio/opentelemetry/common/ReadableKeyValuePairs$KeyValueConsumer;)V
+#isEmpty()Z
+#size()I
@0.7.0
+#toString()Ljava/lang/String;
@0.8.0
+#newBuilder(Lio/opentelemetry/common/ReadableAttributes;)Lio/opentelemetry/common/Attributes$Builder;
+#toBuilder()Lio/opentelemetry/common/Attributes$Builder;
@0.9.1
+#get(Lio/opentelemetry/common/AttributeKey;)Ljava/lang/Object;
+#forEach(Lio/opentelemetry/common/AttributeConsumer;)V
+#of(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/common/Attributes;
+#of(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/common/Attributes;
+#of(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/common/Attributes;
+#of(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/common/Attributes;
+#of(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/common/Attributes;
+#of(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/common/Attributes;
-#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
-#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
-#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
-#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
-#of(Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;Ljava/lang/String;Lio/opentelemetry/common/AttributeValue;)Lio/opentelemetry/common/Attributes;
-#forEach(Lio/opentelemetry/common/ReadableKeyValuePairs$KeyValueConsumer;)V
@0.10.0
-###io/opentelemetry/common/Attributes

+###io/opentelemetry/common/ReadableKeyValuePairs
@0.6.0
+#size()I
+#isEmpty()Z
+#forEach(Lio/opentelemetry/common/ReadableKeyValuePairs$KeyValueConsumer;)V
+#get(Ljava/lang/String;)Ljava/lang/Object;
@0.9.1
-###io/opentelemetry/common/ReadableKeyValuePairs

+###io/opentelemetry/common/ReadableKeyValuePairs$KeyValueConsumer
@0.6.0
+#consume(Ljava/lang/String;Ljava/lang/Object;)V
@0.9.1
-###io/opentelemetry/common/ReadableKeyValuePairs$KeyValueConsumer

+###io/opentelemetry/common/AttributeValue
@0.2.1
+#stringAttributeValue(Ljava/lang/String;)Lio/opentelemetry/common/AttributeValue;
+#booleanAttributeValue(Z)Lio/opentelemetry/common/AttributeValue;
+#longAttributeValue(J)Lio/opentelemetry/common/AttributeValue;
+#doubleAttributeValue(D)Lio/opentelemetry/common/AttributeValue;
+#getStringValue()Ljava/lang/String;
+#getBooleanValue()Z
+#getLongValue()J
+#getDoubleValue()D
+#getType()Lio/opentelemetry/common/AttributeValue$Type;
@0.4.0
+#arrayAttributeValue([Ljava/lang/String;)Lio/opentelemetry/common/AttributeValue;
+#arrayAttributeValue([Ljava/lang/Boolean;)Lio/opentelemetry/common/AttributeValue;
+#arrayAttributeValue([Ljava/lang/Long;)Lio/opentelemetry/common/AttributeValue;
+#arrayAttributeValue([Ljava/lang/Double;)Lio/opentelemetry/common/AttributeValue;
+#getStringArrayValue()Ljava/util/List;
+#getBooleanArrayValue()Ljava/util/List;
+#getLongArrayValue()Ljava/util/List;
+#getDoubleArrayValue()Ljava/util/List;
@0.8.0
+#isNull()Z
@0.9.1
-###io/opentelemetry/common/AttributeValue

+###io/opentelemetry/internal/Obfuscated
@0.4.0
+#unobfuscate()Ljava/lang/Object;
@0.10.0
-###io/opentelemetry/internal/Obfuscated

+###io/opentelemetry/internal/TemporaryBuffers
@0.7.0
+#chars(I)[C
@0.10.0
-###io/opentelemetry/internal/TemporaryBuffers

+###io/opentelemetry/metrics/AsynchronousInstrument$DoubleResult
@0.6.0
+#observe(DLio/opentelemetry/common/Labels;)V
@0.10.0
-###io/opentelemetry/metrics/AsynchronousInstrument$DoubleResult

+###io/opentelemetry/metrics/DoubleUpDownSumObserver
@0.5.0
+#setCallback(Lio/opentelemetry/metrics/AsynchronousInstrument$Callback;)V
@0.10.0
-###io/opentelemetry/metrics/DoubleUpDownSumObserver

+###io/opentelemetry/metrics/LongUpDownSumObserver
@0.5.0
+#setCallback(Lio/opentelemetry/metrics/AsynchronousInstrument$Callback;)V
@0.10.0
-###io/opentelemetry/metrics/LongUpDownSumObserver

+###io/opentelemetry/metrics/DoubleUpDownCounter
@0.5.0
+#add(D[Ljava/lang/String;)V
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownCounter$BoundDoubleUpDownCounter;
@0.6.0
+#add(DLio/opentelemetry/common/Labels;)V
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleUpDownCounter$BoundDoubleUpDownCounter;
-#add(D[Ljava/lang/String;)V
-#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownCounter$BoundDoubleUpDownCounter;
@0.8.0
+#add(D)V
@0.9.1
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
@0.10.0
-###io/opentelemetry/metrics/DoubleUpDownCounter

+###io/opentelemetry/metrics/DoubleValueRecorder$BoundDoubleValueRecorder
@0.5.0
+#record(D)V
+#unbind()V
@0.10.0
-###io/opentelemetry/metrics/DoubleValueRecorder$BoundDoubleValueRecorder

+###io/opentelemetry/metrics/DoubleSumObserver
@0.5.0
+#setCallback(Lio/opentelemetry/metrics/AsynchronousInstrument$Callback;)V
@0.10.0
-###io/opentelemetry/metrics/DoubleSumObserver

+###io/opentelemetry/metrics/DoubleValueObserver$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueObserver$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleValueObserver$Builder;
+#build()Lio/opentelemetry/metrics/DoubleValueObserver;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleValueObserver$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleValueObserver$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleValueObserver$Builder;
@0.10.0
-###io/opentelemetry/metrics/DoubleValueObserver$Builder

+###io/opentelemetry/metrics/Instrument$Builder
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/Instrument$Builder;
+#build()Lio/opentelemetry/metrics/Instrument;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/Instrument$Builder;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/Instrument$Builder;
@0.9.1
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/Instrument$Builder;
@0.10.0
-###io/opentelemetry/metrics/Instrument$Builder

+###io/opentelemetry/metrics/LongCounter$BoundLongCounter
@0.2.1
+#add(J)V
+#unbind()V
@0.10.0
-###io/opentelemetry/metrics/LongCounter$BoundLongCounter

+###io/opentelemetry/metrics/DoubleValueRecorder$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueRecorder$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueRecorder$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleValueRecorder$Builder;
+#build()Lio/opentelemetry/metrics/DoubleValueRecorder;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleValueRecorder$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleValueRecorder$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleValueRecorder$Builder;
@0.10.0
-###io/opentelemetry/metrics/DoubleValueRecorder$Builder

+###io/opentelemetry/metrics/MeterProvider
@0.2.1
+#get(Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
@0.10.0
-###io/opentelemetry/metrics/MeterProvider

+###io/opentelemetry/metrics/LongUpDownCounter
@0.5.0
+#add(J[Ljava/lang/String;)V
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownCounter$BoundLongUpDownCounter;
@0.6.0
+#add(JLio/opentelemetry/common/Labels;)V
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongUpDownCounter$BoundLongUpDownCounter;
-#add(J[Ljava/lang/String;)V
-#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownCounter$BoundLongUpDownCounter;
@0.8.0
+#add(J)V
@0.9.1
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
@0.10.0
-###io/opentelemetry/metrics/LongUpDownCounter

+###io/opentelemetry/metrics/LongValueObserver$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueObserver$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongValueObserver$Builder;
+#build()Lio/opentelemetry/metrics/LongValueObserver;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongValueObserver$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongValueObserver$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongValueObserver$Builder;
@0.10.0
-###io/opentelemetry/metrics/LongValueObserver$Builder

+###io/opentelemetry/metrics/LongValueRecorder$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueRecorder$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueRecorder$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongValueRecorder$Builder;
+#build()Lio/opentelemetry/metrics/LongValueRecorder;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongValueRecorder$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongValueRecorder$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongValueRecorder$Builder;
@0.10.0
-###io/opentelemetry/metrics/LongValueRecorder$Builder

+###io/opentelemetry/metrics/DoubleValueRecorder
@0.5.0
+#record(D[Ljava/lang/String;)V
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueRecorder$BoundDoubleValueRecorder;
@0.6.0
+#record(DLio/opentelemetry/common/Labels;)V
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleValueRecorder$BoundDoubleValueRecorder;
-#record(D[Ljava/lang/String;)V
-#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleValueRecorder$BoundDoubleValueRecorder;
@0.8.0
+#record(D)V
@0.9.1
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
@0.10.0
-###io/opentelemetry/metrics/DoubleValueRecorder

+###io/opentelemetry/metrics/SynchronousInstrument$BoundInstrument
@0.5.0
+#unbind()V
@0.10.0
-###io/opentelemetry/metrics/SynchronousInstrument$BoundInstrument

+###io/opentelemetry/metrics/AsynchronousInstrument$Builder
@0.5.0
+#build()Lio/opentelemetry/metrics/AsynchronousInstrument;
@0.9.1
+#build()Lio/opentelemetry/metrics/Instrument;
@0.10.0
-###io/opentelemetry/metrics/AsynchronousInstrument$Builder

+###io/opentelemetry/metrics/LongValueObserver
@0.5.0
+#setCallback(Lio/opentelemetry/metrics/AsynchronousInstrument$Callback;)V
@0.10.0
-###io/opentelemetry/metrics/LongValueObserver

+###io/opentelemetry/metrics/DoubleUpDownSumObserver$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownSumObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownSumObserver$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleUpDownSumObserver$Builder;
+#build()Lio/opentelemetry/metrics/DoubleUpDownSumObserver;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleUpDownSumObserver$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleUpDownSumObserver$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleUpDownSumObserver$Builder;
@0.10.0
-###io/opentelemetry/metrics/DoubleUpDownSumObserver$Builder

+###io/opentelemetry/metrics/DoubleCounter$Builder
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
+#setMonotonic(Z)Lio/opentelemetry/metrics/DoubleCounter$Builder;
+#build()Lio/opentelemetry/metrics/DoubleCounter;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
@0.5.0
-#setMonotonic(Z)Lio/opentelemetry/metrics/DoubleCounter$Builder;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleCounter$Builder;
@0.10.0
-###io/opentelemetry/metrics/DoubleCounter$Builder

+###io/opentelemetry/metrics/LongCounter
@0.2.1
+#add(J[Ljava/lang/String;)V
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/LongCounter$BoundLongCounter;
@0.6.0
+#add(JLio/opentelemetry/common/Labels;)V
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongCounter$BoundLongCounter;
-#add(J[Ljava/lang/String;)V
-#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/LongCounter$BoundLongCounter;
@0.8.0
+#add(J)V
@0.9.1
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
@0.10.0
-###io/opentelemetry/metrics/LongCounter

+###io/opentelemetry/metrics/LongUpDownSumObserver$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownSumObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownSumObserver$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongUpDownSumObserver$Builder;
+#build()Lio/opentelemetry/metrics/LongUpDownSumObserver;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongUpDownSumObserver$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongUpDownSumObserver$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongUpDownSumObserver$Builder;
@0.10.0
-###io/opentelemetry/metrics/LongUpDownSumObserver$Builder

+###io/opentelemetry/metrics/SynchronousInstrument
@0.5.0
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
@0.6.0
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
-#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
@0.10.0
-###io/opentelemetry/metrics/SynchronousInstrument

+###io/opentelemetry/metrics/DoubleSumObserver$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleSumObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleSumObserver$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleSumObserver$Builder;
+#build()Lio/opentelemetry/metrics/DoubleSumObserver;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleSumObserver$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleSumObserver$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleSumObserver$Builder;
@0.10.0
-###io/opentelemetry/metrics/DoubleSumObserver$Builder

+###io/opentelemetry/metrics/SynchronousInstrument$Builder
@0.5.0
+#build()Lio/opentelemetry/metrics/SynchronousInstrument;
@0.9.1
+#build()Lio/opentelemetry/metrics/Instrument;
@0.10.0
-###io/opentelemetry/metrics/SynchronousInstrument$Builder

+###io/opentelemetry/metrics/LongSumObserver
@0.5.0
+#setCallback(Lio/opentelemetry/metrics/AsynchronousInstrument$Callback;)V
@0.10.0
-###io/opentelemetry/metrics/LongSumObserver

+###io/opentelemetry/metrics/DoubleCounter
@0.2.1
+#add(D[Ljava/lang/String;)V
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleCounter$BoundDoubleCounter;
@0.6.0
+#add(DLio/opentelemetry/common/Labels;)V
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleCounter$BoundDoubleCounter;
-#add(D[Ljava/lang/String;)V
-#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleCounter$BoundDoubleCounter;
@0.8.0
+#add(D)V
@0.9.1
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
@0.10.0
-###io/opentelemetry/metrics/DoubleCounter

+###io/opentelemetry/metrics/DoubleUpDownCounter$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownCounter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleUpDownCounter$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleUpDownCounter$Builder;
+#build()Lio/opentelemetry/metrics/DoubleUpDownCounter;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleUpDownCounter$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleUpDownCounter$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/DoubleUpDownCounter$Builder;
@0.10.0
-###io/opentelemetry/metrics/DoubleUpDownCounter$Builder

+###io/opentelemetry/metrics/AsynchronousInstrument
@0.5.0
+#setCallback(Lio/opentelemetry/metrics/AsynchronousInstrument$Callback;)V
@0.10.0
-###io/opentelemetry/metrics/AsynchronousInstrument

+###io/opentelemetry/metrics/AsynchronousInstrument$Result
@0.6.0
@0.10.0
-###io/opentelemetry/metrics/AsynchronousInstrument$Result

+###io/opentelemetry/metrics/DoubleValueObserver
@0.5.0
+#setCallback(Lio/opentelemetry/metrics/AsynchronousInstrument$Callback;)V
@0.10.0
-###io/opentelemetry/metrics/DoubleValueObserver

+###io/opentelemetry/metrics/LongUpDownCounter$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownCounter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/LongUpDownCounter$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongUpDownCounter$Builder;
+#build()Lio/opentelemetry/metrics/LongUpDownCounter;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongUpDownCounter$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongUpDownCounter$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongUpDownCounter$Builder;
@0.10.0
-###io/opentelemetry/metrics/LongUpDownCounter$Builder

+###io/opentelemetry/metrics/Instrument
@0.2.1
@0.10.0
-###io/opentelemetry/metrics/Instrument

+###io/opentelemetry/metrics/spi/MeterProviderFactory
@0.5.0
+#create()Lio/opentelemetry/metrics/MeterProvider;
@0.10.0
-###io/opentelemetry/metrics/spi/MeterProviderFactory

+###io/opentelemetry/metrics/LongValueRecorder
@0.5.0
+#record(J[Ljava/lang/String;)V
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueRecorder$BoundLongValueRecorder;
@0.6.0
+#record(JLio/opentelemetry/common/Labels;)V
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongValueRecorder$BoundLongValueRecorder;
-#record(J[Ljava/lang/String;)V
-#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/LongValueRecorder$BoundLongValueRecorder;
@0.8.0
+#record(J)V
@0.9.1
+#bind(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/SynchronousInstrument$BoundInstrument;
@0.10.0
-###io/opentelemetry/metrics/LongValueRecorder

+###io/opentelemetry/metrics/DoubleCounter$BoundDoubleCounter
@0.2.1
+#add(D)V
+#unbind()V
@0.10.0
-###io/opentelemetry/metrics/DoubleCounter$BoundDoubleCounter

+###io/opentelemetry/metrics/AsynchronousInstrument$LongResult
@0.6.0
+#observe(JLio/opentelemetry/common/Labels;)V
@0.10.0
-###io/opentelemetry/metrics/AsynchronousInstrument$LongResult

+###io/opentelemetry/metrics/LongCounter$Builder
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/LongCounter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/LongCounter$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/LongCounter$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongCounter$Builder;
+#setMonotonic(Z)Lio/opentelemetry/metrics/LongCounter$Builder;
+#build()Lio/opentelemetry/metrics/LongCounter;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/LongCounter$Builder;
@0.5.0
-#setMonotonic(Z)Lio/opentelemetry/metrics/LongCounter$Builder;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongCounter$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongCounter$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongCounter$Builder;
@0.10.0
-###io/opentelemetry/metrics/LongCounter$Builder

+###io/opentelemetry/metrics/DefaultMeterProvider
@0.2.1
+#getInstance()Lio/opentelemetry/metrics/MeterProvider;
+#get(Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/metrics/Meter;
@0.10.0
-###io/opentelemetry/metrics/DefaultMeterProvider

+###io/opentelemetry/metrics/DoubleUpDownCounter$BoundDoubleUpDownCounter
@0.5.0
+#add(D)V
+#unbind()V
@0.10.0
-###io/opentelemetry/metrics/DoubleUpDownCounter$BoundDoubleUpDownCounter

+###io/opentelemetry/metrics/LongUpDownCounter$BoundLongUpDownCounter
@0.5.0
+#add(J)V
+#unbind()V
@0.10.0
-###io/opentelemetry/metrics/LongUpDownCounter$BoundLongUpDownCounter

+###io/opentelemetry/metrics/AsynchronousInstrument$Callback
@0.5.0
+#update(Ljava/lang/Object;)V
@0.6.0
+#update(Lio/opentelemetry/metrics/AsynchronousInstrument$Result;)V
-#update(Ljava/lang/Object;)V
@0.10.0
-###io/opentelemetry/metrics/AsynchronousInstrument$Callback

+###io/opentelemetry/metrics/LongValueRecorder$BoundLongValueRecorder
@0.5.0
+#record(J)V
+#unbind()V
@0.10.0
-###io/opentelemetry/metrics/LongValueRecorder$BoundLongValueRecorder

+###io/opentelemetry/metrics/LongSumObserver$Builder
@0.5.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/LongSumObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/LongSumObserver$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongSumObserver$Builder;
+#build()Lio/opentelemetry/metrics/LongSumObserver;
@0.6.0
+#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongSumObserver$Builder;
-#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongSumObserver$Builder;
@0.9.1
+#build()Lio/opentelemetry/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/Instrument$Builder;
-#setConstantLabels(Lio/opentelemetry/common/Labels;)Lio/opentelemetry/metrics/LongSumObserver$Builder;
@0.10.0
-###io/opentelemetry/metrics/LongSumObserver$Builder

+###io/opentelemetry/trace/TracerProvider
@0.2.1
+#get(Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
@0.10.0
-###io/opentelemetry/trace/TracerProvider

+###io/opentelemetry/trace/attributes/SemanticAttributes
@0.4.0
@0.10.0
-###io/opentelemetry/trace/attributes/SemanticAttributes

+###io/opentelemetry/trace/attributes/BooleanAttributeSetter
@0.4.0
+#create(Ljava/lang/String;)Lio/opentelemetry/trace/attributes/BooleanAttributeSetter;
+#key()Ljava/lang/String;
+#set(Lio/opentelemetry/trace/Span;Z)V
@0.6.0
+#set(Lio/opentelemetry/trace/Span$Builder;Z)V
@0.7.0
+#set(Lio/opentelemetry/common/Attributes$Builder;Z)V
+#toString()Ljava/lang/String;
@0.9.1
-###io/opentelemetry/trace/attributes/BooleanAttributeSetter

+###io/opentelemetry/trace/attributes/DoubleAttributeSetter
@0.4.0
+#create(Ljava/lang/String;)Lio/opentelemetry/trace/attributes/DoubleAttributeSetter;
+#key()Ljava/lang/String;
+#set(Lio/opentelemetry/trace/Span;D)V
@0.6.0
+#set(Lio/opentelemetry/trace/Span$Builder;D)V
@0.7.0
+#set(Lio/opentelemetry/common/Attributes$Builder;D)V
+#toString()Ljava/lang/String;
@0.9.1
-###io/opentelemetry/trace/attributes/DoubleAttributeSetter

+###io/opentelemetry/trace/attributes/LongAttributeSetter
@0.4.0
+#create(Ljava/lang/String;)Lio/opentelemetry/trace/attributes/LongAttributeSetter;
+#key()Ljava/lang/String;
+#set(Lio/opentelemetry/trace/Span;J)V
@0.6.0
+#set(Lio/opentelemetry/trace/Span$Builder;J)V
@0.7.0
+#set(Lio/opentelemetry/common/Attributes$Builder;J)V
+#toString()Ljava/lang/String;
@0.9.1
-###io/opentelemetry/trace/attributes/LongAttributeSetter

+###io/opentelemetry/trace/attributes/StringAttributeSetter
@0.4.0
+#create(Ljava/lang/String;)Lio/opentelemetry/trace/attributes/StringAttributeSetter;
+#key()Ljava/lang/String;
+#set(Lio/opentelemetry/trace/Span;Ljava/lang/String;)V
@0.6.0
+#set(Lio/opentelemetry/trace/Span$Builder;Ljava/lang/String;)V
@0.7.0
+#set(Lio/opentelemetry/common/Attributes$Builder;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@0.9.1
-###io/opentelemetry/trace/attributes/StringAttributeSetter

+###io/opentelemetry/trace/TraceState$Builder
@0.2.1
+#set(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/TraceState$Builder;
+#remove(Ljava/lang/String;)Lio/opentelemetry/trace/TraceState$Builder;
+#build()Lio/opentelemetry/trace/TraceState;
@0.10.0
-###io/opentelemetry/trace/TraceState$Builder

+###io/opentelemetry/trace/TraceState$Entry
@0.2.1
+#create(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/TraceState$Entry;
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
@0.10.0
-###io/opentelemetry/trace/TraceState$Entry

+###io/opentelemetry/trace/TraceState
@0.2.1
+#getDefault()Lio/opentelemetry/trace/TraceState;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getEntries()Ljava/util/List;
+#builder()Lio/opentelemetry/trace/TraceState$Builder;
+#toBuilder()Lio/opentelemetry/trace/TraceState$Builder;
@0.10.0
-###io/opentelemetry/trace/TraceState

+###io/opentelemetry/trace/TracingContextUtils
@0.2.1
+#withSpan(Lio/opentelemetry/trace/Span;Lio/grpc/Context;)Lio/grpc/Context;
+#getCurrentSpan()Lio/opentelemetry/trace/Span;
+#getSpan(Lio/grpc/Context;)Lio/opentelemetry/trace/Span;
+#getSpanWithoutDefault(Lio/grpc/Context;)Lio/opentelemetry/trace/Span;
+#currentContextWith(Lio/opentelemetry/trace/Span;)Lio/opentelemetry/context/Scope;
@0.10.0
-###io/opentelemetry/trace/TracingContextUtils

+###io/opentelemetry/trace/spi/TracerProviderFactory
@0.5.0
+#create()Lio/opentelemetry/trace/TracerProvider;
@0.10.0
-###io/opentelemetry/trace/spi/TracerProviderFactory

+###io/opentelemetry/trace/DefaultTracerProvider
@0.2.1
+#getInstance()Lio/opentelemetry/trace/TracerProvider;
+#get(Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/trace/Tracer;
@0.10.0
-###io/opentelemetry/trace/DefaultTracerProvider

+###io/opentelemetry/api/trace/TracerBuilder
@1.4.0
+#setSchemaUrl(Ljava/lang/String;)Lio/opentelemetry/api/trace/TracerBuilder;
+#setInstrumentationVersion(Ljava/lang/String;)Lio/opentelemetry/api/trace/TracerBuilder;
+#build()Lio/opentelemetry/api/trace/Tracer;

+###io/opentelemetry/api/internal/GuardedBy
@1.1.0
+#value()Ljava/lang/String;

+###io/opentelemetry/api/internal/Contract
@1.5.0
+#value()Ljava/lang/String;
@1.7.0
-###io/opentelemetry/api/internal/Contract

+###io/opentelemetry/api/internal/TemporaryBuffers
@0.10.0
+#chars(I)[C
@0.13.0
-###io/opentelemetry/api/internal/TemporaryBuffers

+###io/opentelemetry/api/internal/ValidationUtil
@1.11.0
+#log(Ljava/lang/String;)V
@1.14.0
+#log(Ljava/lang/String;Ljava/util/logging/Level;)V
+#checkValidInstrumentName(Ljava/lang/String;)Z
+#checkValidInstrumentName(Ljava/lang/String;Ljava/lang/String;)Z
+#checkValidInstrumentUnit(Ljava/lang/String;)Z
+#checkValidInstrumentUnit(Ljava/lang/String;Ljava/lang/String;)Z

+###io/opentelemetry/api/internal/ImmutableSpanContext
@1.7.0
+#<init>()V
+#create(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/api/trace/TraceFlags;Lio/opentelemetry/api/trace/TraceState;ZZ)Lio/opentelemetry/api/trace/SpanContext;
+#isValid()Z

+###io/opentelemetry/api/internal/InternalAttributeKeyImpl
@1.7.0
+#create(Ljava/lang/String;Lio/opentelemetry/api/common/AttributeType;)Lio/opentelemetry/api/common/AttributeKey;
+#getType()Lio/opentelemetry/api/common/AttributeType;
+#getKey()Ljava/lang/String;
+#getKeyUtf8()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/opentelemetry/api/metrics/LongCounter
@0.10.0
+#add(JLio/opentelemetry/api/common/Labels;)V
+#add(J)V
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/LongCounter$BoundLongCounter;
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument;
@0.13.0
-###io/opentelemetry/api/metrics/LongCounter

+###io/opentelemetry/api/metrics/ObservableLongUpDownCounter
@1.10.0-rc.2
@1.12.0
+#close()V

+###io/opentelemetry/api/metrics/DoubleCounterBuilder
@1.10.0-rc.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleCounterBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleCounterBuilder;
+#build()Lio/opentelemetry/api/metrics/DoubleCounter;
+#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0-rc.2
+#buildWithCallback(Ljava/util/function/Consumer;)Lio/opentelemetry/api/metrics/ObservableDoubleCounter;
-#buildWithCallback(Ljava/util/function/Consumer;)V
@1.15.0
+#buildObserver()Lio/opentelemetry/api/metrics/ObservableDoubleMeasurement;

+###io/opentelemetry/api/metrics/LongHistogram
@1.10.0-rc.1
+#record(J)V
+#record(JLio/opentelemetry/api/common/Attributes;)V
+#record(JLio/opentelemetry/api/common/Attributes;Lio/opentelemetry/context/Context;)V

+###io/opentelemetry/api/metrics/LongHistogramBuilder
@1.10.0-rc.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongHistogramBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongHistogramBuilder;
+#build()Lio/opentelemetry/api/metrics/LongHistogram;

+###io/opentelemetry/api/metrics/Meter
@0.10.0
+#getDefault()Lio/opentelemetry/api/metrics/Meter;
+#doubleCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleCounter$Builder;
+#longCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongCounter$Builder;
+#doubleUpDownCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleUpDownCounter$Builder;
+#longUpDownCounterBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongUpDownCounter$Builder;
+#doubleValueRecorderBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleValueRecorder$Builder;
+#longValueRecorderBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongValueRecorder$Builder;
+#doubleSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleSumObserver$Builder;
+#longSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongSumObserver$Builder;
+#doubleUpDownSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleUpDownSumObserver$Builder;
+#longUpDownSumObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongUpDownSumObserver$Builder;
+#doubleValueObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleValueObserver$Builder;
+#longValueObserverBuilder(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongValueObserver$Builder;
+#newBatchRecorder([Ljava/lang/String;)Lio/opentelemetry/api/metrics/BatchRecorder;
@0.13.0
-###io/opentelemetry/api/metrics/Meter

+###io/opentelemetry/api/metrics/ObservableDoubleUpDownCounter
@1.10.0-rc.2
@1.12.0
+#close()V

+###io/opentelemetry/api/metrics/ObservableLongMeasurement
@1.10.0-rc.1
+#observe(J)V[deprecated]
+#observe(JLio/opentelemetry/api/common/Attributes;)V[deprecated]
+#record(J)V
+#record(JLio/opentelemetry/api/common/Attributes;)V
@1.10.0-rc.2
-#observe(J)V[deprecated]
-#observe(JLio/opentelemetry/api/common/Attributes;)V[deprecated]

+###io/opentelemetry/api/metrics/MeterBuilder
@1.10.0-rc.1
+#setSchemaUrl(Ljava/lang/String;)Lio/opentelemetry/api/metrics/MeterBuilder;
+#setInstrumentationVersion(Ljava/lang/String;)Lio/opentelemetry/api/metrics/MeterBuilder;
+#build()Lio/opentelemetry/api/metrics/Meter;

+###io/opentelemetry/api/metrics/DoubleHistogram
@1.10.0-rc.1
+#record(D)V
+#record(DLio/opentelemetry/api/common/Attributes;)V
+#record(DLio/opentelemetry/api/common/Attributes;Lio/opentelemetry/context/Context;)V

+###io/opentelemetry/api/metrics/DoubleCounter
@0.10.0
+#add(DLio/opentelemetry/api/common/Labels;)V
+#add(D)V
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/DoubleCounter$BoundDoubleCounter;
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleCounter

+###io/opentelemetry/api/metrics/ObservableLongGauge
@1.10.0-rc.2
@1.12.0
+#close()V

+###io/opentelemetry/api/metrics/DoubleUpDownCounter
@0.10.0
+#add(DLio/opentelemetry/api/common/Labels;)V
+#add(D)V
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/DoubleUpDownCounter$BoundDoubleUpDownCounter;
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleUpDownCounter

+###io/opentelemetry/api/metrics/DoubleHistogramBuilder
@1.10.0-rc.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleHistogramBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleHistogramBuilder;
+#ofLongs()Lio/opentelemetry/api/metrics/LongHistogramBuilder;
+#build()Lio/opentelemetry/api/metrics/DoubleHistogram;

+###io/opentelemetry/api/metrics/LongUpDownCounter
@0.10.0
+#add(JLio/opentelemetry/api/common/Labels;)V
+#add(J)V
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/LongUpDownCounter$BoundLongUpDownCounter;
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument;
@0.13.0
-###io/opentelemetry/api/metrics/LongUpDownCounter

+###io/opentelemetry/api/metrics/DoubleGaugeBuilder
@1.10.0-rc.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleGaugeBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleGaugeBuilder;
+#ofLongs()Lio/opentelemetry/api/metrics/LongGaugeBuilder;
+#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0-rc.2
+#buildWithCallback(Ljava/util/function/Consumer;)Lio/opentelemetry/api/metrics/ObservableDoubleGauge;
-#buildWithCallback(Ljava/util/function/Consumer;)V
@1.15.0
+#buildObserver()Lio/opentelemetry/api/metrics/ObservableDoubleMeasurement;

+###io/opentelemetry/api/metrics/ObservableDoubleMeasurement
@1.10.0-rc.1
+#observe(D)V[deprecated]
+#observe(DLio/opentelemetry/api/common/Attributes;)V[deprecated]
+#record(D)V
+#record(DLio/opentelemetry/api/common/Attributes;)V
@1.10.0-rc.2
-#observe(D)V[deprecated]
-#observe(DLio/opentelemetry/api/common/Attributes;)V[deprecated]

+###io/opentelemetry/api/metrics/MeterProvider
@0.10.0
+#getDefault()Lio/opentelemetry/api/metrics/MeterProvider;
+#get(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;
+#get(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/metrics/Meter;
@0.13.0
-###io/opentelemetry/api/metrics/MeterProvider

+###io/opentelemetry/api/metrics/DoubleUpDownCounterBuilder
@1.10.0-rc.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleUpDownCounterBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleUpDownCounterBuilder;
+#build()Lio/opentelemetry/api/metrics/DoubleUpDownCounter;
+#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0-rc.2
+#buildWithCallback(Ljava/util/function/Consumer;)Lio/opentelemetry/api/metrics/ObservableDoubleUpDownCounter;
-#buildWithCallback(Ljava/util/function/Consumer;)V
@1.15.0
+#buildObserver()Lio/opentelemetry/api/metrics/ObservableDoubleMeasurement;

+###io/opentelemetry/api/metrics/ObservableDoubleGauge
@1.10.0-rc.2
@1.12.0
+#close()V

+###io/opentelemetry/api/metrics/LongUpDownCounterBuilder
@1.10.0-rc.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongUpDownCounterBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongUpDownCounterBuilder;
+#ofDoubles()Lio/opentelemetry/api/metrics/DoubleUpDownCounterBuilder;
+#build()Lio/opentelemetry/api/metrics/LongUpDownCounter;
+#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0-rc.2
+#buildWithCallback(Ljava/util/function/Consumer;)Lio/opentelemetry/api/metrics/ObservableLongUpDownCounter;
-#buildWithCallback(Ljava/util/function/Consumer;)V
@1.15.0
+#buildObserver()Lio/opentelemetry/api/metrics/ObservableLongMeasurement;

+###io/opentelemetry/api/metrics/LongGaugeBuilder
@1.10.0-rc.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongGaugeBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongGaugeBuilder;
+#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0-rc.2
+#buildWithCallback(Ljava/util/function/Consumer;)Lio/opentelemetry/api/metrics/ObservableLongGauge;
-#buildWithCallback(Ljava/util/function/Consumer;)V
@1.15.0
+#buildObserver()Lio/opentelemetry/api/metrics/ObservableLongMeasurement;

+###io/opentelemetry/api/metrics/LongCounterBuilder
@1.10.0-rc.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongCounterBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongCounterBuilder;
+#ofDoubles()Lio/opentelemetry/api/metrics/DoubleCounterBuilder;
+#build()Lio/opentelemetry/api/metrics/LongCounter;
+#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0-rc.2
+#buildWithCallback(Ljava/util/function/Consumer;)Lio/opentelemetry/api/metrics/ObservableLongCounter;
-#buildWithCallback(Ljava/util/function/Consumer;)V
@1.15.0
+#buildObserver()Lio/opentelemetry/api/metrics/ObservableLongMeasurement;

+###io/opentelemetry/api/metrics/ObservableLongCounter
@1.10.0-rc.2
@1.12.0
+#close()V

+###io/opentelemetry/api/metrics/ObservableDoubleCounter
@1.10.0-rc.2
@1.12.0
+#close()V

+###io/opentelemetry/api/trace/propagation/internal/W3CTraceContextEncoding
@1.12.0
+#decodeTraceState(Ljava/lang/String;)Lio/opentelemetry/api/trace/TraceState;
+#encodeTraceState(Lio/opentelemetry/api/trace/TraceState;)Ljava/lang/String;

+###io/opentelemetry/api/internal/PercentEscaper
@1.20.0
+#<init>()V
+#create()Lio/opentelemetry/api/internal/PercentEscaper;
+#escape(Ljava/lang/String;)Ljava/lang/String;

+###io/opentelemetry/api/internal/ConfigUtil
@1.22.0
+#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#normalizeEnvironmentVariableKey(Ljava/lang/String;)Ljava/lang/String;
+#normalizePropertyKey(Ljava/lang/String;)Ljava/lang/String;
+#defaultIfNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###io/opentelemetry/api/metrics/BatchCallback
@1.15.0
+#close()V

+###io/opentelemetry/api/metrics/ObservableMeasurement
@1.10.0-rc.1
@1.10.0-rc.2
-###io/opentelemetry/api/metrics/ObservableMeasurement

+###io/opentelemetry/baggage/EmptyBaggage
@0.9.1
+#getInstance()Lio/opentelemetry/baggage/Baggage;
+#getEntries()Ljava/util/Collection;
+#getEntryValue(Ljava/lang/String;)Ljava/lang/String;
@0.10.0
-###io/opentelemetry/baggage/EmptyBaggage

+###io/opentelemetry/baggage/EntryMetadata$EntryTtl
@0.9.1
+#values()[Lio/opentelemetry/baggage/EntryMetadata$EntryTtl;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/baggage/EntryMetadata$EntryTtl;
@0.10.0
-###io/opentelemetry/baggage/EntryMetadata$EntryTtl

+###io/opentelemetry/baggage/DefaultBaggageManager
@0.9.1
+#<init>()V
+#getInstance()Lio/opentelemetry/baggage/BaggageManager;
+#getCurrentBaggage()Lio/opentelemetry/baggage/Baggage;
+#baggageBuilder()Lio/opentelemetry/baggage/Baggage$Builder;
+#withContext(Lio/opentelemetry/baggage/Baggage;)Lio/opentelemetry/context/Scope;
@0.10.0
-###io/opentelemetry/baggage/DefaultBaggageManager

+###io/opentelemetry/baggage/Baggage
@0.9.1
+#getEntries()Ljava/util/Collection;
+#getEntryValue(Ljava/lang/String;)Ljava/lang/String;
@0.10.0
-###io/opentelemetry/baggage/Baggage

+###io/opentelemetry/baggage/BaggageUtils
@0.9.1
+#withBaggage(Lio/opentelemetry/baggage/Baggage;Lio/grpc/Context;)Lio/grpc/Context;
+#getCurrentBaggage()Lio/opentelemetry/baggage/Baggage;
+#getBaggage(Lio/grpc/Context;)Lio/opentelemetry/baggage/Baggage;
+#getBaggageWithoutDefault(Lio/grpc/Context;)Lio/opentelemetry/baggage/Baggage;
+#currentContextWith(Lio/opentelemetry/baggage/Baggage;)Lio/opentelemetry/context/Scope;
@0.10.0
-###io/opentelemetry/baggage/BaggageUtils

+###io/opentelemetry/baggage/EntryMetadata
@0.9.1
+#create(Lio/opentelemetry/baggage/EntryMetadata$EntryTtl;)Lio/opentelemetry/baggage/EntryMetadata;
+#getEntryTtl()Lio/opentelemetry/baggage/EntryMetadata$EntryTtl;
@0.10.0
-###io/opentelemetry/baggage/EntryMetadata

+###io/opentelemetry/baggage/spi/BaggageManagerFactory
@0.9.1
+#create()Lio/opentelemetry/baggage/BaggageManager;
@0.10.0
-###io/opentelemetry/baggage/spi/BaggageManagerFactory

+###io/opentelemetry/baggage/Entry
@0.9.1
+#create(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/baggage/EntryMetadata;)Lio/opentelemetry/baggage/Entry;
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#getEntryMetadata()Lio/opentelemetry/baggage/EntryMetadata;
@0.10.0
-###io/opentelemetry/baggage/Entry

+###io/opentelemetry/baggage/Baggage$Builder
@0.9.1
+#setParent(Lio/opentelemetry/baggage/Baggage;)Lio/opentelemetry/baggage/Baggage$Builder;
+#setParent(Lio/grpc/Context;)Lio/opentelemetry/baggage/Baggage$Builder;
+#setNoParent()Lio/opentelemetry/baggage/Baggage$Builder;
+#put(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/baggage/EntryMetadata;)Lio/opentelemetry/baggage/Baggage$Builder;
+#remove(Ljava/lang/String;)Lio/opentelemetry/baggage/Baggage$Builder;
+#build()Lio/opentelemetry/baggage/Baggage;
@0.10.0
-###io/opentelemetry/baggage/Baggage$Builder

+###io/opentelemetry/baggage/BaggageManager
@0.9.1
+#getCurrentBaggage()Lio/opentelemetry/baggage/Baggage;
+#baggageBuilder()Lio/opentelemetry/baggage/Baggage$Builder;
+#withContext(Lio/opentelemetry/baggage/Baggage;)Lio/opentelemetry/context/Scope;
@0.10.0
-###io/opentelemetry/baggage/BaggageManager

+###io/opentelemetry/common/AttributeType
@0.9.1
+#values()[Lio/opentelemetry/common/AttributeType;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/common/AttributeType;
@0.10.0
-###io/opentelemetry/common/AttributeType

+###io/opentelemetry/common/AttributeKey
@0.9.1
+#getKey()Ljava/lang/String;
+#getType()Lio/opentelemetry/common/AttributeType;
+#stringKey(Ljava/lang/String;)Lio/opentelemetry/common/AttributeKey;
+#booleanKey(Ljava/lang/String;)Lio/opentelemetry/common/AttributeKey;
+#longKey(Ljava/lang/String;)Lio/opentelemetry/common/AttributeKey;
+#doubleKey(Ljava/lang/String;)Lio/opentelemetry/common/AttributeKey;
+#stringArrayKey(Ljava/lang/String;)Lio/opentelemetry/common/AttributeKey;
+#booleanArrayKey(Ljava/lang/String;)Lio/opentelemetry/common/AttributeKey;
+#longArrayKey(Ljava/lang/String;)Lio/opentelemetry/common/AttributeKey;
+#doubleArrayKey(Ljava/lang/String;)Lio/opentelemetry/common/AttributeKey;
@0.10.0
-###io/opentelemetry/common/AttributeKey

+###io/opentelemetry/common/LabelConsumer
@0.9.1
+#consume(Ljava/lang/String;Ljava/lang/String;)V
@0.10.0
-###io/opentelemetry/common/LabelConsumer

+###io/opentelemetry/common/AttributeConsumer
@0.9.1
+#consume(Lio/opentelemetry/common/AttributeKey;Ljava/lang/Object;)V
@0.10.0
-###io/opentelemetry/common/AttributeConsumer

+###io/opentelemetry/trace/StatusCanonicalCode
@0.9.1
+#values()[Lio/opentelemetry/trace/StatusCanonicalCode;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/trace/StatusCanonicalCode;
+#value()I
@0.10.0
-###io/opentelemetry/trace/StatusCanonicalCode

+###io/opentelemetry/api/metrics/DefaultMeter$NoopLongHistogram
@1.10.0-rc.1
+#<init>()V
+#record(JLio/opentelemetry/api/common/Attributes;Lio/opentelemetry/context/Context;)V
+#record(JLio/opentelemetry/api/common/Attributes;)V
+#record(J)V
@1.10.0
-###io/opentelemetry/api/metrics/DefaultMeter$NoopLongHistogram

+###io/opentelemetry/api/metrics/DefaultMeter$NoopDoubleHistogramBuilder
@1.10.0-rc.1
+#<init>()V
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleHistogramBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleHistogramBuilder;
+#ofLongs()Lio/opentelemetry/api/metrics/LongHistogramBuilder;
+#build()Lio/opentelemetry/api/metrics/DoubleHistogram;
@1.10.0
-###io/opentelemetry/api/metrics/DefaultMeter$NoopDoubleHistogramBuilder

+###io/opentelemetry/api/metrics/DefaultMeter$NoopDoubleObservableInstrumentBuilder
@1.10.0-rc.1
+#<init>()V
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleGaugeBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleGaugeBuilder;
+#ofLongs()Lio/opentelemetry/api/metrics/LongGaugeBuilder;
+#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0-rc.2
+#buildWithCallback(Ljava/util/function/Consumer;)Lio/opentelemetry/api/metrics/ObservableDoubleGauge;
-#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0
-###io/opentelemetry/api/metrics/DefaultMeter$NoopDoubleObservableInstrumentBuilder

+###io/opentelemetry/api/metrics/DefaultMeter$NoopLongObservableInstrumentBuilder
@1.10.0-rc.1
+#<init>()V
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongGaugeBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongGaugeBuilder;
+#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0-rc.2
+#buildWithCallback(Ljava/util/function/Consumer;)Lio/opentelemetry/api/metrics/ObservableLongGauge;
-#buildWithCallback(Ljava/util/function/Consumer;)V
@1.10.0
-###io/opentelemetry/api/metrics/DefaultMeter$NoopLongObservableInstrumentBuilder

+###io/opentelemetry/api/metrics/DefaultMeter$NoopDoubleHistogram
@1.10.0-rc.1
+#<init>()V
+#record(DLio/opentelemetry/api/common/Attributes;Lio/opentelemetry/context/Context;)V
+#record(DLio/opentelemetry/api/common/Attributes;)V
+#record(D)V
@1.10.0
-###io/opentelemetry/api/metrics/DefaultMeter$NoopDoubleHistogram

+###io/opentelemetry/api/metrics/DefaultMeter$NoopLongHistogramBuilder
@1.10.0-rc.1
+#<init>()V
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongHistogramBuilder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongHistogramBuilder;
+#build()Lio/opentelemetry/api/metrics/LongHistogram;
@1.10.0
-###io/opentelemetry/api/metrics/DefaultMeter$NoopLongHistogramBuilder

+###io/opentelemetry/api/spi/OpenTelemetryFactory
@0.10.0
+#create()Lio/opentelemetry/api/OpenTelemetry;
@0.11.0
-###io/opentelemetry/api/spi/OpenTelemetryFactory

+###io/opentelemetry/api/metrics/AsynchronousInstrument$DoubleResult
@0.10.0
+#observe(DLio/opentelemetry/api/common/Labels;)V
@0.13.0
-###io/opentelemetry/api/metrics/AsynchronousInstrument$DoubleResult

+###io/opentelemetry/api/metrics/BatchRecorder
@0.10.0
+#put(Lio/opentelemetry/api/metrics/LongValueRecorder;J)Lio/opentelemetry/api/metrics/BatchRecorder;
+#put(Lio/opentelemetry/api/metrics/DoubleValueRecorder;D)Lio/opentelemetry/api/metrics/BatchRecorder;
+#put(Lio/opentelemetry/api/metrics/LongCounter;J)Lio/opentelemetry/api/metrics/BatchRecorder;
+#put(Lio/opentelemetry/api/metrics/DoubleCounter;D)Lio/opentelemetry/api/metrics/BatchRecorder;
+#put(Lio/opentelemetry/api/metrics/LongUpDownCounter;J)Lio/opentelemetry/api/metrics/BatchRecorder;
+#put(Lio/opentelemetry/api/metrics/DoubleUpDownCounter;D)Lio/opentelemetry/api/metrics/BatchRecorder;
+#record()V
@0.13.0
-###io/opentelemetry/api/metrics/BatchRecorder

+###io/opentelemetry/api/metrics/LongUpDownSumObserver$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongUpDownSumObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongUpDownSumObserver$Builder;
+#build()Lio/opentelemetry/api/metrics/LongUpDownSumObserver;
+#build()Lio/opentelemetry/api/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.12.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/LongUpDownSumObserver$Builder;
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/AsynchronousInstrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/LongUpDownSumObserver$Builder

+###io/opentelemetry/api/metrics/LongCounter$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongCounter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongCounter$Builder;
+#build()Lio/opentelemetry/api/metrics/LongCounter;
+#build()Lio/opentelemetry/api/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/LongCounter$Builder

+###io/opentelemetry/api/metrics/AsynchronousInstrument$Result
@0.10.0
@0.13.0
-###io/opentelemetry/api/metrics/AsynchronousInstrument$Result

+###io/opentelemetry/api/metrics/AsynchronousInstrument
@0.10.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.12.0
*#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V[deprecated]
@0.13.0
-###io/opentelemetry/api/metrics/AsynchronousInstrument

+###io/opentelemetry/api/metrics/AsynchronousInstrument$LongResult
@0.10.0
+#observe(JLio/opentelemetry/api/common/Labels;)V
@0.13.0
-###io/opentelemetry/api/metrics/AsynchronousInstrument$LongResult

+###io/opentelemetry/api/metrics/DoubleUpDownCounter$BoundDoubleUpDownCounter
@0.10.0
+#add(D)V
+#unbind()V
@0.13.0
-###io/opentelemetry/api/metrics/DoubleUpDownCounter$BoundDoubleUpDownCounter

+###io/opentelemetry/api/metrics/LongUpDownCounter$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongUpDownCounter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongUpDownCounter$Builder;
+#build()Lio/opentelemetry/api/metrics/LongUpDownCounter;
+#build()Lio/opentelemetry/api/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/LongUpDownCounter$Builder

+###io/opentelemetry/api/metrics/SynchronousInstrument$Builder
@0.10.0
+#build()Lio/opentelemetry/api/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
@0.13.0
-###io/opentelemetry/api/metrics/SynchronousInstrument$Builder

+###io/opentelemetry/api/metrics/DoubleUpDownSumObserver
@0.10.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.12.0
-#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.13.0
-###io/opentelemetry/api/metrics/DoubleUpDownSumObserver

+###io/opentelemetry/api/metrics/LongCounter$BoundLongCounter
@0.10.0
+#add(J)V
+#unbind()V
@0.13.0
-###io/opentelemetry/api/metrics/LongCounter$BoundLongCounter

+###io/opentelemetry/api/metrics/DoubleUpDownCounter$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleUpDownCounter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleUpDownCounter$Builder;
+#build()Lio/opentelemetry/api/metrics/DoubleUpDownCounter;
+#build()Lio/opentelemetry/api/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleUpDownCounter$Builder

+###io/opentelemetry/api/metrics/DoubleValueRecorder$BoundDoubleValueRecorder
@0.10.0
+#record(D)V
+#unbind()V
@0.13.0
-###io/opentelemetry/api/metrics/DoubleValueRecorder$BoundDoubleValueRecorder

+###io/opentelemetry/api/metrics/DoubleCounter$BoundDoubleCounter
@0.10.0
+#add(D)V
+#unbind()V
@0.13.0
-###io/opentelemetry/api/metrics/DoubleCounter$BoundDoubleCounter

+###io/opentelemetry/api/metrics/Instrument
@0.10.0
@0.13.0
-###io/opentelemetry/api/metrics/Instrument

+###io/opentelemetry/api/metrics/Instrument$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#build()Lio/opentelemetry/api/metrics/Instrument;
@0.13.0
-###io/opentelemetry/api/metrics/Instrument$Builder

+###io/opentelemetry/api/metrics/LongUpDownSumObserver
@0.10.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.12.0
-#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.13.0
-###io/opentelemetry/api/metrics/LongUpDownSumObserver

+###io/opentelemetry/api/metrics/spi/MeterProviderFactory
@0.10.0
+#create()Lio/opentelemetry/api/metrics/MeterProvider;
@0.11.0
-###io/opentelemetry/api/metrics/spi/MeterProviderFactory

+###io/opentelemetry/api/metrics/LongUpDownCounter$BoundLongUpDownCounter
@0.10.0
+#add(J)V
+#unbind()V
@0.13.0
-###io/opentelemetry/api/metrics/LongUpDownCounter$BoundLongUpDownCounter

+###io/opentelemetry/api/metrics/DoubleValueRecorder
@0.10.0
+#record(DLio/opentelemetry/api/common/Labels;)V
+#record(D)V
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/DoubleValueRecorder$BoundDoubleValueRecorder;
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleValueRecorder

+###io/opentelemetry/api/metrics/LongSumObserver$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongSumObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongSumObserver$Builder;
+#build()Lio/opentelemetry/api/metrics/LongSumObserver;
+#build()Lio/opentelemetry/api/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.12.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/LongSumObserver$Builder;
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/AsynchronousInstrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/LongSumObserver$Builder

+###io/opentelemetry/api/metrics/DoubleCounter$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleCounter$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleCounter$Builder;
+#build()Lio/opentelemetry/api/metrics/DoubleCounter;
+#build()Lio/opentelemetry/api/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleCounter$Builder

+###io/opentelemetry/api/metrics/DoubleUpDownSumObserver$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleUpDownSumObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleUpDownSumObserver$Builder;
+#build()Lio/opentelemetry/api/metrics/DoubleUpDownSumObserver;
+#build()Lio/opentelemetry/api/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.12.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/DoubleUpDownSumObserver$Builder;
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/AsynchronousInstrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleUpDownSumObserver$Builder

+###io/opentelemetry/api/metrics/LongValueRecorder$BoundLongValueRecorder
@0.10.0
+#record(J)V
+#unbind()V
@0.13.0
-###io/opentelemetry/api/metrics/LongValueRecorder$BoundLongValueRecorder

+###io/opentelemetry/api/metrics/DoubleValueObserver
@0.10.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.12.0
-#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.13.0
-###io/opentelemetry/api/metrics/DoubleValueObserver

+###io/opentelemetry/api/metrics/AsynchronousInstrument$Builder
@0.10.0
+#build()Lio/opentelemetry/api/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
@0.12.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/AsynchronousInstrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/AsynchronousInstrument$Builder

+###io/opentelemetry/api/metrics/LongSumObserver
@0.10.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.12.0
-#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.13.0
-###io/opentelemetry/api/metrics/LongSumObserver

+###io/opentelemetry/api/metrics/LongValueRecorder
@0.10.0
+#record(JLio/opentelemetry/api/common/Labels;)V
+#record(J)V
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/LongValueRecorder$BoundLongValueRecorder;
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument;
@0.13.0
-###io/opentelemetry/api/metrics/LongValueRecorder

+###io/opentelemetry/api/metrics/SynchronousInstrument
@0.10.0
+#bind(Lio/opentelemetry/api/common/Labels;)Lio/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument;
@0.13.0
-###io/opentelemetry/api/metrics/SynchronousInstrument

+###io/opentelemetry/api/metrics/DoubleValueRecorder$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleValueRecorder$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleValueRecorder$Builder;
+#build()Lio/opentelemetry/api/metrics/DoubleValueRecorder;
+#build()Lio/opentelemetry/api/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleValueRecorder$Builder

+###io/opentelemetry/api/metrics/AsynchronousInstrument$Callback
@0.10.0
+#update(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Result;)V
@0.13.0
-###io/opentelemetry/api/metrics/AsynchronousInstrument$Callback

+###io/opentelemetry/api/metrics/LongValueRecorder$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongValueRecorder$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongValueRecorder$Builder;
+#build()Lio/opentelemetry/api/metrics/LongValueRecorder;
+#build()Lio/opentelemetry/api/metrics/SynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/LongValueRecorder$Builder

+###io/opentelemetry/api/metrics/DoubleSumObserver
@0.10.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.12.0
-#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.13.0
-###io/opentelemetry/api/metrics/DoubleSumObserver

+###io/opentelemetry/api/metrics/DoubleValueObserver$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleValueObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleValueObserver$Builder;
+#build()Lio/opentelemetry/api/metrics/DoubleValueObserver;
+#build()Lio/opentelemetry/api/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.12.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/DoubleValueObserver$Builder;
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/AsynchronousInstrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleValueObserver$Builder

+###io/opentelemetry/api/metrics/LongValueObserver$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongValueObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/LongValueObserver$Builder;
+#build()Lio/opentelemetry/api/metrics/LongValueObserver;
+#build()Lio/opentelemetry/api/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.12.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/LongValueObserver$Builder;
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/AsynchronousInstrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/LongValueObserver$Builder

+###io/opentelemetry/api/metrics/DoubleSumObserver$Builder
@0.10.0
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleSumObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/DoubleSumObserver$Builder;
+#build()Lio/opentelemetry/api/metrics/DoubleSumObserver;
+#build()Lio/opentelemetry/api/metrics/AsynchronousInstrument;
+#build()Lio/opentelemetry/api/metrics/Instrument;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/api/metrics/Instrument$Builder;
@0.12.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/DoubleSumObserver$Builder;
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)Lio/opentelemetry/api/metrics/AsynchronousInstrument$Builder;
@0.13.0
-###io/opentelemetry/api/metrics/DoubleSumObserver$Builder

+###io/opentelemetry/api/metrics/LongValueObserver
@0.10.0
+#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.12.0
-#setCallback(Lio/opentelemetry/api/metrics/AsynchronousInstrument$Callback;)V
@0.13.0
-###io/opentelemetry/api/metrics/LongValueObserver

+###io/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument
@0.10.0
+#unbind()V
@0.13.0
-###io/opentelemetry/api/metrics/SynchronousInstrument$BoundInstrument

+###io/opentelemetry/api/common/Labels$Builder
@0.10.0
+#<init>()V
+#build()Lio/opentelemetry/api/common/Labels;
+#put(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/Labels$Builder;
@0.11.0
-###io/opentelemetry/api/common/Labels$Builder

+###io/opentelemetry/api/common/Labels
@0.10.0
+#<init>()V
+#forEach(Ljava/util/function/BiConsumer;)V
+#empty()Lio/opentelemetry/api/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/Labels;
+#of(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/Labels;
+#of([Ljava/lang/String;)Lio/opentelemetry/api/common/Labels;
+#toBuilder()Lio/opentelemetry/api/common/Labels$Builder;
+#builder()Lio/opentelemetry/api/common/Labels$Builder;
+#toString()Ljava/lang/String;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#size()I
@0.11.0
+#toBuilder()Lio/opentelemetry/api/common/LabelsBuilder;
+#builder()Lio/opentelemetry/api/common/LabelsBuilder;
-#toBuilder()Lio/opentelemetry/api/common/Labels$Builder;
-#builder()Lio/opentelemetry/api/common/Labels$Builder;
-#toString()Ljava/lang/String;
-#get(Ljava/lang/Object;)Ljava/lang/Object;
-#isEmpty()Z
-#size()I
@0.12.0
+#size()I
+#get(Ljava/lang/String;)Ljava/lang/String;
+#isEmpty()Z
-#<init>()V
@0.13.0
-###io/opentelemetry/api/common/Labels

+###io/opentelemetry/api/common/Attributes$Builder
@0.10.0
+#build()Lio/opentelemetry/api/common/Attributes;
+#put(Lio/opentelemetry/api/common/AttributeKey;I)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Ljava/lang/String;J)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Ljava/lang/String;D)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Ljava/lang/String;Z)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Ljava/lang/String;[Ljava/lang/String;)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Ljava/lang/String;[Ljava/lang/Long;)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Ljava/lang/String;[Ljava/lang/Double;)Lio/opentelemetry/api/common/Attributes$Builder;
+#put(Ljava/lang/String;[Ljava/lang/Boolean;)Lio/opentelemetry/api/common/Attributes$Builder;
+#putAll(Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/common/Attributes$Builder;
@0.11.0
-###io/opentelemetry/api/common/Attributes$Builder

+###io/opentelemetry/api/common/ReadableAttributes
@0.10.0
+#get(Lio/opentelemetry/api/common/AttributeKey;)Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#forEach(Lio/opentelemetry/api/common/AttributeConsumer;)V
@0.12.0
-###io/opentelemetry/api/common/ReadableAttributes

+###io/opentelemetry/api/common/AttributeConsumer
@0.10.0
+#accept(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)V
@0.12.0
-###io/opentelemetry/api/common/AttributeConsumer

+###io/opentelemetry/api/internal/Obfuscated
@0.10.0
+#unobfuscate()Ljava/lang/Object;
@0.13.0
-###io/opentelemetry/api/internal/Obfuscated

+###io/opentelemetry/api/baggage/EntryMetadata
@0.10.0
+#create(Ljava/lang/String;)Lio/opentelemetry/api/baggage/EntryMetadata;
+#getValue()Ljava/lang/String;
@0.12.0
*#create(Ljava/lang/String;)Lio/opentelemetry/api/baggage/EntryMetadata;[deprecated]
@0.13.0
-###io/opentelemetry/api/baggage/EntryMetadata

+###io/opentelemetry/api/baggage/Baggage$Builder
@0.10.0
+#setParent(Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/baggage/Baggage$Builder;
+#setNoParent()Lio/opentelemetry/api/baggage/Baggage$Builder;
+#put(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/api/baggage/EntryMetadata;)Lio/opentelemetry/api/baggage/Baggage$Builder;
+#put(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/baggage/Baggage$Builder;
+#remove(Ljava/lang/String;)Lio/opentelemetry/api/baggage/Baggage$Builder;
+#build()Lio/opentelemetry/api/baggage/Baggage;
@0.11.0
-###io/opentelemetry/api/baggage/Baggage$Builder

+###io/opentelemetry/api/baggage/BaggageConsumer
@0.10.0
+#accept(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/api/baggage/EntryMetadata;)V
@0.12.0
+#accept(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/api/baggage/BaggageEntryMetadata;)V
-#accept(Ljava/lang/String;Ljava/lang/String;Lio/opentelemetry/api/baggage/EntryMetadata;)V
@0.13.0
-###io/opentelemetry/api/baggage/BaggageConsumer

+###io/opentelemetry/api/OpenTelemetry$Builder
@0.10.0
+#setTracerProvider(Lio/opentelemetry/api/trace/TracerProvider;)Lio/opentelemetry/api/OpenTelemetry$Builder;
+#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/OpenTelemetry$Builder;
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/OpenTelemetry$Builder;
+#build()Lio/opentelemetry/api/OpenTelemetry;
@0.11.0
-###io/opentelemetry/api/OpenTelemetry$Builder

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$TelemetrySdkLanguageValues
@0.10.0
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$TelemetrySdkLanguageValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$CloudProviderValues
@0.10.0
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$CloudProviderValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$MessagingOperationValues
@0.10.0
+#values()[Lio/opentelemetry/api/trace/attributes/SemanticAttributes$MessagingOperationValues;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/attributes/SemanticAttributes$MessagingOperationValues;
+#getValue()Ljava/lang/String;
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$MessagingOperationValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$FaasDocumentOperationValues
@0.10.0
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$FaasDocumentOperationValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$DbSystemValues
@0.10.0
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$DbSystemValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$NetTransportValues
@0.10.0
+#values()[Lio/opentelemetry/api/trace/attributes/SemanticAttributes$NetTransportValues;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/attributes/SemanticAttributes$NetTransportValues;
+#getValue()Ljava/lang/String;
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$NetTransportValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$HttpFlavorValues
@0.10.0
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$HttpFlavorValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$FaasTriggerValues
@0.10.0
+#values()[Lio/opentelemetry/api/trace/attributes/SemanticAttributes$FaasTriggerValues;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/attributes/SemanticAttributes$FaasTriggerValues;
+#getValue()Ljava/lang/String;
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$FaasTriggerValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes
@0.10.0
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$OsTypeValues
@0.10.0
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$OsTypeValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$MessagingDestinationKindValues
@0.10.0
+#values()[Lio/opentelemetry/api/trace/attributes/SemanticAttributes$MessagingDestinationKindValues;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/attributes/SemanticAttributes$MessagingDestinationKindValues;
+#getValue()Ljava/lang/String;
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$MessagingDestinationKindValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$FaasInvokedProviderValues
@0.10.0
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$FaasInvokedProviderValues

+###io/opentelemetry/api/trace/TraceState$Builder
@0.10.0
+#set(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/TraceState$Builder;
+#remove(Ljava/lang/String;)Lio/opentelemetry/api/trace/TraceState$Builder;
+#build()Lio/opentelemetry/api/trace/TraceState;
@0.11.0
-###io/opentelemetry/api/trace/TraceState$Builder

+###io/opentelemetry/api/trace/spi/TracerProviderFactory
@0.10.0
+#create()Lio/opentelemetry/api/trace/TracerProvider;
@0.11.0
-###io/opentelemetry/api/trace/spi/TracerProviderFactory

+###io/opentelemetry/api/trace/propagation/HttpTraceContext
@0.10.0
+#getInstance()Lio/opentelemetry/api/trace/propagation/HttpTraceContext;
+#fields()Ljava/util/List;
+#inject(Lio/opentelemetry/context/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/TextMapPropagator$Setter;)V
+#extract(Lio/opentelemetry/context/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/TextMapPropagator$Getter;)Lio/opentelemetry/context/Context;
@0.12.0
+#fields()Ljava/util/Collection;
-#fields()Ljava/util/List;
@0.13.0
-###io/opentelemetry/api/trace/propagation/HttpTraceContext

+###io/opentelemetry/api/trace/Span$Kind
@0.10.0
+#values()[Lio/opentelemetry/api/trace/Span$Kind;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/Span$Kind;
@0.13.0
-###io/opentelemetry/api/trace/Span$Kind

+###io/opentelemetry/api/trace/Span$Builder
@0.10.0
+#setParent(Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/trace/Span$Builder;
+#setNoParent()Lio/opentelemetry/api/trace/Span$Builder;
+#addLink(Lio/opentelemetry/api/trace/SpanContext;)Lio/opentelemetry/api/trace/Span$Builder;
+#addLink(Lio/opentelemetry/api/trace/SpanContext;Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/trace/Span$Builder;
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/trace/Span$Builder;
+#setAttribute(Ljava/lang/String;J)Lio/opentelemetry/api/trace/Span$Builder;
+#setAttribute(Ljava/lang/String;D)Lio/opentelemetry/api/trace/Span$Builder;
+#setAttribute(Ljava/lang/String;Z)Lio/opentelemetry/api/trace/Span$Builder;
+#setAttribute(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lio/opentelemetry/api/trace/Span$Builder;
+#setSpanKind(Lio/opentelemetry/api/trace/Span$Kind;)Lio/opentelemetry/api/trace/Span$Builder;
+#setStartTimestamp(J)Lio/opentelemetry/api/trace/Span$Builder;
+#startSpan()Lio/opentelemetry/api/trace/Span;
@0.11.0
-###io/opentelemetry/api/trace/Span$Builder

+###io/opentelemetry/metrics/DoubleObserver
@0.2.1
+#setCallback(Lio/opentelemetry/metrics/Observer$Callback;)V
@0.5.0
-###io/opentelemetry/metrics/DoubleObserver

+###io/opentelemetry/metrics/LabelSet
@0.2.1
@0.3.0
-###io/opentelemetry/metrics/LabelSet

+###io/opentelemetry/metrics/LongMeasure$Builder
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/LongMeasure$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/LongMeasure$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/LongMeasure$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongMeasure$Builder;
+#setAbsolute(Z)Lio/opentelemetry/metrics/LongMeasure$Builder;
+#build()Lio/opentelemetry/metrics/LongMeasure;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/LongMeasure$Builder;
@0.5.0
-###io/opentelemetry/metrics/LongMeasure$Builder

+###io/opentelemetry/metrics/DoubleObserver$ResultDoubleObserver
@0.2.1
+#observe(D[Ljava/lang/String;)V
@0.5.0
-###io/opentelemetry/metrics/DoubleObserver$ResultDoubleObserver

+###io/opentelemetry/metrics/LongMeasure
@0.2.1
+#record(J[Ljava/lang/String;)V
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/LongMeasure$BoundLongMeasure;
@0.5.0
-###io/opentelemetry/metrics/LongMeasure

+###io/opentelemetry/metrics/InstrumentWithBinding$BoundInstrument
@0.2.1
+#unbind()V
@0.5.0
-###io/opentelemetry/metrics/InstrumentWithBinding$BoundInstrument

+###io/opentelemetry/metrics/spi/MetricsProvider
@0.2.1
+#create()Lio/opentelemetry/metrics/MeterProvider;
@0.5.0
-###io/opentelemetry/metrics/spi/MetricsProvider

+###io/opentelemetry/metrics/LongMeasure$BoundLongMeasure
@0.2.1
+#record(J)V
+#unbind()V
@0.5.0
-###io/opentelemetry/metrics/LongMeasure$BoundLongMeasure

+###io/opentelemetry/metrics/LongObserver$ResultLongObserver
@0.2.1
+#observe(J[Ljava/lang/String;)V
@0.5.0
-###io/opentelemetry/metrics/LongObserver$ResultLongObserver

+###io/opentelemetry/metrics/DoubleObserver$Builder
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
+#setMonotonic(Z)Lio/opentelemetry/metrics/DoubleObserver$Builder;
+#build()Lio/opentelemetry/metrics/DoubleObserver;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/DoubleObserver$Builder;
@0.5.0
-###io/opentelemetry/metrics/DoubleObserver$Builder

+###io/opentelemetry/metrics/LongObserver
@0.2.1
+#setCallback(Lio/opentelemetry/metrics/Observer$Callback;)V
@0.5.0
-###io/opentelemetry/metrics/LongObserver

+###io/opentelemetry/metrics/DoubleMeasure$BoundDoubleMeasure
@0.2.1
+#record(D)V
+#unbind()V
@0.5.0
-###io/opentelemetry/metrics/DoubleMeasure$BoundDoubleMeasure

+###io/opentelemetry/metrics/LongObserver$Builder
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/LongObserver$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/LongObserver$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/LongObserver$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/LongObserver$Builder;
+#setMonotonic(Z)Lio/opentelemetry/metrics/LongObserver$Builder;
+#build()Lio/opentelemetry/metrics/LongObserver;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/LongObserver$Builder;
@0.5.0
-###io/opentelemetry/metrics/LongObserver$Builder

+###io/opentelemetry/metrics/DoubleMeasure
@0.2.1
+#record(D[Ljava/lang/String;)V
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleMeasure$BoundDoubleMeasure;
@0.5.0
-###io/opentelemetry/metrics/DoubleMeasure

+###io/opentelemetry/metrics/DoubleMeasure$Builder
@0.2.1
+#setDescription(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
+#setUnit(Ljava/lang/String;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
+#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
+#setConstantLabels(Ljava/util/Map;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
+#setAbsolute(Z)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
+#build()Lio/opentelemetry/metrics/DoubleMeasure;
@0.4.0
-#setLabelKeys(Ljava/util/List;)Lio/opentelemetry/metrics/DoubleMeasure$Builder;
@0.5.0
-###io/opentelemetry/metrics/DoubleMeasure$Builder

+###io/opentelemetry/metrics/InstrumentWithBinding
@0.2.1
+#bind([Ljava/lang/String;)Lio/opentelemetry/metrics/InstrumentWithBinding$BoundInstrument;
@0.5.0
-###io/opentelemetry/metrics/InstrumentWithBinding

+###io/opentelemetry/metrics/DefaultMetricsProvider
@0.2.1
+#getInstance()Lio/opentelemetry/metrics/spi/MetricsProvider;
+#create()Lio/opentelemetry/metrics/MeterProvider;
@0.5.0
-###io/opentelemetry/metrics/DefaultMetricsProvider

+###io/opentelemetry/correlationcontext/EntryKey
@0.2.1
+#create(Ljava/lang/String;)Lio/opentelemetry/correlationcontext/EntryKey;
+#getName()Ljava/lang/String;
@0.6.0
-###io/opentelemetry/correlationcontext/EntryKey

+###io/opentelemetry/correlationcontext/EntryValue
@0.2.1
+#create(Ljava/lang/String;)Lio/opentelemetry/correlationcontext/EntryValue;
+#asString()Ljava/lang/String;
@0.6.0
-###io/opentelemetry/correlationcontext/EntryValue

+###io/opentelemetry/correlationcontext/spi/CorrelationContextManagerProvider
@0.2.1
+#create()Lio/opentelemetry/correlationcontext/CorrelationContextManager;
@0.5.0
-###io/opentelemetry/correlationcontext/spi/CorrelationContextManagerProvider

+###io/opentelemetry/correlationcontext/DefaultCorrelationContextManagerProvider
@0.2.1
+#getInstance()Lio/opentelemetry/correlationcontext/spi/CorrelationContextManagerProvider;
+#create()Lio/opentelemetry/correlationcontext/CorrelationContextManager;
@0.5.0
-###io/opentelemetry/correlationcontext/DefaultCorrelationContextManagerProvider

+###io/opentelemetry/trace/DefaultTraceProvider
@0.2.1
+#getInstance()Lio/opentelemetry/trace/spi/TraceProvider;
+#create()Lio/opentelemetry/trace/TracerProvider;
@0.5.0
-###io/opentelemetry/trace/DefaultTraceProvider

+###io/opentelemetry/trace/spi/TraceProvider
@0.2.1
+#create()Lio/opentelemetry/trace/TracerProvider;
@0.5.0
-###io/opentelemetry/trace/spi/TraceProvider

+###io/opentelemetry/trace/propagation/B3Propagator
@0.2.1
+#<init>()V
+#<init>(Z)V
+#fields()Ljava/util/List;
+#inject(Lio/opentelemetry/trace/SpanContext;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
+#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Lio/opentelemetry/trace/SpanContext;
+#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Ljava/lang/Object;
+#inject(Ljava/lang/Object;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
@0.3.0
+#inject(Lio/grpc/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
+#extract(Lio/grpc/Context;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Lio/grpc/Context;
-#inject(Lio/opentelemetry/trace/SpanContext;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
-#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Lio/opentelemetry/trace/SpanContext;
-#extract(Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Getter;)Ljava/lang/Object;
-#inject(Ljava/lang/Object;Ljava/lang/Object;Lio/opentelemetry/context/propagation/HttpTextFormat$Setter;)V
@0.4.0
-###io/opentelemetry/trace/propagation/B3Propagator

+###io/opentelemetry/api/DefaultOpenTelemetryBuilder
@0.13.0
+#<init>()V
+#setTracerProvider(Lio/opentelemetry/api/trace/TracerProvider;)Lio/opentelemetry/api/DefaultOpenTelemetryBuilder;
+#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/DefaultOpenTelemetryBuilder;[deprecated]
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/DefaultOpenTelemetryBuilder;
+#build()Lio/opentelemetry/api/OpenTelemetry;
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/OpenTelemetryBuilder;
+#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
+#setTracerProvider(Lio/opentelemetry/api/trace/TracerProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;
@0.14.0
-#<init>()V
-#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/DefaultOpenTelemetryBuilder;[deprecated]
-#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/OpenTelemetryBuilder;
-#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
-#setTracerProvider(Lio/opentelemetry/api/trace/TracerProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;
@0.16.0
-###io/opentelemetry/api/DefaultOpenTelemetryBuilder

+###io/opentelemetry/api/OpenTelemetryBuilder
@0.11.0
+#setTracerProvider(Lio/opentelemetry/api/trace/TracerProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;
+#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/OpenTelemetryBuilder;
+#build()Lio/opentelemetry/api/OpenTelemetry;
@0.13.0
*#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
@0.14.0
-###io/opentelemetry/api/OpenTelemetryBuilder

+###io/opentelemetry/api/DefaultOpenTelemetry
@0.11.0
+#getTracerProvider()Lio/opentelemetry/api/trace/TracerProvider;
+#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;
+#getPropagators()Lio/opentelemetry/context/propagation/ContextPropagators;
+#toBuilder()Lio/opentelemetry/api/DefaultOpenTelemetry$Builder;
+#toBuilder()Lio/opentelemetry/api/OpenTelemetryBuilder;
@0.12.0
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V
*#toBuilder()Lio/opentelemetry/api/DefaultOpenTelemetry$Builder;[deprecated]
*#toBuilder()Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
@0.13.0
+#builder()Lio/opentelemetry/api/DefaultOpenTelemetryBuilder;
*#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V[deprecated]
*#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;[deprecated]
-#toBuilder()Lio/opentelemetry/api/DefaultOpenTelemetry$Builder;[deprecated]
-#toBuilder()Lio/opentelemetry/api/OpenTelemetryBuilder;[deprecated]
@0.14.0
-#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)V[deprecated]
-#getMeterProvider()Lio/opentelemetry/api/metrics/MeterProvider;[deprecated]
@0.16.0
-###io/opentelemetry/api/DefaultOpenTelemetry

+###io/opentelemetry/spi/OpenTelemetryFactory
@0.11.0
+#create()Lio/opentelemetry/api/OpenTelemetry;
@0.15.0
-###io/opentelemetry/spi/OpenTelemetryFactory

+###io/opentelemetry/spi/trace/TracerProviderFactory
@0.11.0
+#create()Lio/opentelemetry/api/trace/TracerProvider;
@0.15.0
-###io/opentelemetry/spi/trace/TracerProviderFactory

+###io/opentelemetry/api/common/LabelsBuilder
@0.11.0
+#build()Lio/opentelemetry/api/common/Labels;
+#put(Ljava/lang/String;Ljava/lang/String;)Lio/opentelemetry/api/common/LabelsBuilder;
@0.13.0
-###io/opentelemetry/api/common/LabelsBuilder

+###io/opentelemetry/spi/metrics/MeterProviderFactory
@0.11.0
+#create()Lio/opentelemetry/api/metrics/MeterProvider;
@0.13.0
-###io/opentelemetry/spi/metrics/MeterProviderFactory

+###io/opentelemetry/api/DefaultOpenTelemetry$Builder
@0.11.0
+#setTracerProvider(Lio/opentelemetry/api/trace/TracerProvider;)Lio/opentelemetry/api/DefaultOpenTelemetry$Builder;
+#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/DefaultOpenTelemetry$Builder;
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/DefaultOpenTelemetry$Builder;
+#build()Lio/opentelemetry/api/OpenTelemetry;
+#setPropagators(Lio/opentelemetry/context/propagation/ContextPropagators;)Lio/opentelemetry/api/OpenTelemetryBuilder;
+#setMeterProvider(Lio/opentelemetry/api/metrics/MeterProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;
+#setTracerProvider(Lio/opentelemetry/api/trace/TracerProvider;)Lio/opentelemetry/api/OpenTelemetryBuilder;
@0.13.0
-###io/opentelemetry/api/DefaultOpenTelemetry$Builder

+###io/opentelemetry/api/common/Labels$ArrayBackedLabels
@0.12.0
+#forEach(Ljava/util/function/BiConsumer;)V
+#toBuilder()Lio/opentelemetry/api/common/LabelsBuilder;
+#get(Ljava/lang/String;)Ljava/lang/String;
@0.13.0
-###io/opentelemetry/api/common/Labels$ArrayBackedLabels

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$AwsEcsLaunchtypeValues
@0.12.0
+#values()[Lio/opentelemetry/api/trace/attributes/SemanticAttributes$AwsEcsLaunchtypeValues;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/attributes/SemanticAttributes$AwsEcsLaunchtypeValues;
+#getValue()Ljava/lang/String;
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$AwsEcsLaunchtypeValues

+###io/opentelemetry/api/trace/attributes/SemanticAttributes$RpcGrpcStatusCodeValues
@0.12.0
+#values()[Lio/opentelemetry/api/trace/attributes/SemanticAttributes$RpcGrpcStatusCodeValues;
+#valueOf(Ljava/lang/String;)Lio/opentelemetry/api/trace/attributes/SemanticAttributes$RpcGrpcStatusCodeValues;
+#getValue()J
@0.13.0
-###io/opentelemetry/api/trace/attributes/SemanticAttributes$RpcGrpcStatusCodeValues

+###io/opentelemetry/metrics/DoubleValueObserver$ResultDoubleValueObserver
@0.5.0
+#observe(D[Ljava/lang/String;)V
@0.6.0
-###io/opentelemetry/metrics/DoubleValueObserver$ResultDoubleValueObserver

+###io/opentelemetry/metrics/DoubleSumObserver$ResultDoubleSumObserver
@0.5.0
+#observe(D[Ljava/lang/String;)V
@0.6.0
-###io/opentelemetry/metrics/DoubleSumObserver$ResultDoubleSumObserver

+###io/opentelemetry/metrics/LongSumObserver$ResultLongSumObserver
@0.5.0
+#observe(J[Ljava/lang/String;)V
@0.6.0
-###io/opentelemetry/metrics/LongSumObserver$ResultLongSumObserver

+###io/opentelemetry/metrics/DoubleUpDownSumObserver$ResultDoubleUpDownSumObserver
@0.5.0
+#observe(D[Ljava/lang/String;)V
@0.6.0
-###io/opentelemetry/metrics/DoubleUpDownSumObserver$ResultDoubleUpDownSumObserver

+###io/opentelemetry/metrics/LongValueObserver$ResultLongValueObserver
@0.5.0
+#observe(J[Ljava/lang/String;)V
@0.6.0
-###io/opentelemetry/metrics/LongValueObserver$ResultLongValueObserver

+###io/opentelemetry/metrics/LongUpDownSumObserver$ResultLongUpDownSumObserver
@0.5.0
+#observe(J[Ljava/lang/String;)V
@0.6.0
-###io/opentelemetry/metrics/LongUpDownSumObserver$ResultLongUpDownSumObserver
