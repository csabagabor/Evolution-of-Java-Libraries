
+###org/easymock/Capture
@2.4
+#<init>()V
+#reset()V
+#hasCaptured()Z
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@2.5
+#<init>(Lorg/easymock/CaptureType;)V
+#getValues()Ljava/util/List;
@3.3
*#<init>()V[deprecated]
*#<init>(Lorg/easymock/CaptureType;)V[deprecated]
+#newInstance()Lorg/easymock/Capture;
+#newInstance(Lorg/easymock/CaptureType;)Lorg/easymock/Capture;
@4.0
-#<init>()V[deprecated]
-#<init>(Lorg/easymock/CaptureType;)V[deprecated]

+###org/easymock/CaptureType
@2.5
+#values()[Lorg/easymock/CaptureType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/CaptureType;

+###org/easymock/ConstructorArgs
@3.0
+#<init>(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)V
+#getInitArgs()[Ljava/lang/Object;
+#getConstructor()Ljava/lang/reflect/Constructor;

+###org/easymock/EasyMock
@2.0
+#<init>()V
+#createStrictMock(Ljava/lang/Class;)Ljava/lang/Object;
+#createMock(Ljava/lang/Class;)Ljava/lang/Object;
+#createNiceMock(Ljava/lang/Class;)Ljava/lang/Object;
+#createStrictControl()Lorg/easymock/IMocksControl;
+#createControl()Lorg/easymock/IMocksControl;
+#createNiceControl()Lorg/easymock/IMocksControl;
+#expect(Ljava/lang/Object;)Lorg/easymock/IExpectationSetters;
+#expectLastCall()Lorg/easymock/IExpectationSetters;
+#anyBoolean()Z
+#anyByte()B
+#anyChar()C
+#anyInt()I
+#anyLong()J
+#anyFloat()F
+#anyDouble()D
+#anyShort()S
+#anyObject()Ljava/lang/Object;
+#geq(B)B
+#geq(D)D
+#geq(F)F
+#geq(I)I
+#geq(J)J
+#geq(S)S
+#leq(B)B
+#leq(D)D
+#leq(F)F
+#leq(I)I
+#leq(J)J
+#leq(S)S
+#gt(B)B
+#gt(D)D
+#gt(F)F
+#gt(I)I
+#gt(J)J
+#gt(S)S
+#lt(B)B
+#lt(D)D
+#lt(F)F
+#lt(I)I
+#lt(J)J
+#lt(S)S
+#isA(Ljava/lang/Class;)Ljava/lang/Object;
+#contains(Ljava/lang/String;)Ljava/lang/String;
+#and(ZZ)Z
+#and(BB)B
+#and(CC)C
+#and(DD)D
+#and(FF)F
+#and(II)I
+#and(JJ)J
+#and(SS)S
+#and(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#or(ZZ)Z
+#or(BB)B
+#or(CC)C
+#or(DD)D
+#or(FF)F
+#or(II)I
+#or(JJ)J
+#or(SS)S
+#or(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#not(Z)Z
+#not(B)B
+#not(C)C
+#not(D)D
+#not(F)F
+#not(I)I
+#not(J)J
+#not(S)S
+#not(Ljava/lang/Object;)Ljava/lang/Object;
+#eq(Z)Z
+#eq(B)B
+#eq(C)C
+#eq(D)D
+#eq(F)F
+#eq(I)I
+#eq(J)J
+#eq(S)S
+#eq(Ljava/lang/Object;)Ljava/lang/Object;
+#aryEq([Z)[Z
+#aryEq([B)[B
+#aryEq([C)[C
+#aryEq([D)[D
+#aryEq([F)[F
+#aryEq([I)[I
+#aryEq([J)[J
+#aryEq([S)[S
+#aryEq([Ljava/lang/Object;)[Ljava/lang/Object;
+#isNull()Ljava/lang/Object;
+#notNull()Ljava/lang/Object;
+#find(Ljava/lang/String;)Ljava/lang/String;
+#matches(Ljava/lang/String;)Ljava/lang/String;
+#startsWith(Ljava/lang/String;)Ljava/lang/String;
+#endsWith(Ljava/lang/String;)Ljava/lang/String;
+#eq(DD)D
+#eq(FF)F
+#same(Ljava/lang/Object;)Ljava/lang/Object;
+#replay(Ljava/lang/Object;)V
+#reset(Ljava/lang/Object;)V
+#verify(Ljava/lang/Object;)V
+#checkOrder(Ljava/lang/Object;Z)V
+#reportMatcher(Lorg/easymock/IArgumentMatcher;)V
@2.2
+#replay([Ljava/lang/Object;)V
+#reset([Ljava/lang/Object;)V
+#verify([Ljava/lang/Object;)V
+#getCurrentArguments()[Ljava/lang/Object;
-#replay(Ljava/lang/Object;)V
-#reset(Ljava/lang/Object;)V
-#verify(Ljava/lang/Object;)V
@2.3
+#createStrictMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#createNiceMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#geq(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#leq(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#gt(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#lt(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#cmpEq(Ljava/lang/Comparable;)Ljava/lang/Comparable;
+#cmp(Ljava/lang/Object;Ljava/util/Comparator;Lorg/easymock/LogicalOperator;)Ljava/lang/Object;
@2.4
+#capture(Lorg/easymock/Capture;)Ljava/lang/Object;
+#capture(Lorg/easymock/Capture;)I
+#capture(Lorg/easymock/Capture;)J
+#capture(Lorg/easymock/Capture;)F
+#capture(Lorg/easymock/Capture;)D
+#capture(Lorg/easymock/Capture;)B
+#capture(Lorg/easymock/Capture;)C
+#resetToNice([Ljava/lang/Object;)V
+#resetToDefault([Ljava/lang/Object;)V
+#resetToStrict([Ljava/lang/Object;)V
+#makeThreadSafe(Ljava/lang/Object;Z)V
@2.5
+#checkIsUsedInOneThread(Ljava/lang/Object;Z)V
+#getEasyMockProperty(Ljava/lang/String;)Ljava/lang/String;
+#setEasyMockProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#<init>()V
@3.0
+#createStrictMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createStrictMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createStrictMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createStrictMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createNiceMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createNiceMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createNiceMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createNiceMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMockBuilder(Ljava/lang/Class;)Lorg/easymock/IMockBuilder;
+#anyObject(Ljava/lang/Class;)Ljava/lang/Object;
+#isNull(Ljava/lang/Class;)Ljava/lang/Object;
+#notNull(Ljava/lang/Class;)Ljava/lang/Object;
+#capture(Lorg/easymock/Capture;)Z
@3.1
+#captureBoolean(Lorg/easymock/Capture;)Z
+#captureInt(Lorg/easymock/Capture;)I
+#captureLong(Lorg/easymock/Capture;)J
+#captureFloat(Lorg/easymock/Capture;)F
+#captureDouble(Lorg/easymock/Capture;)D
+#captureByte(Lorg/easymock/Capture;)B
+#captureChar(Lorg/easymock/Capture;)C
*#capture(Lorg/easymock/Capture;)Z[deprecated]
*#capture(Lorg/easymock/Capture;)I[deprecated]
*#capture(Lorg/easymock/Capture;)J[deprecated]
*#capture(Lorg/easymock/Capture;)F[deprecated]
*#capture(Lorg/easymock/Capture;)D[deprecated]
*#capture(Lorg/easymock/Capture;)B[deprecated]
*#capture(Lorg/easymock/Capture;)C[deprecated]
@3.2
+#createMock(Lorg/easymock/MockType;Ljava/lang/Class;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;Lorg/easymock/MockType;Ljava/lang/Class;)Ljava/lang/Object;
+#createControl(Lorg/easymock/MockType;)Lorg/easymock/IMocksControl;
+#anyString()Ljava/lang/String;
-#capture(Lorg/easymock/Capture;)Z[deprecated]
-#capture(Lorg/easymock/Capture;)I[deprecated]
-#capture(Lorg/easymock/Capture;)J[deprecated]
-#capture(Lorg/easymock/Capture;)F[deprecated]
-#capture(Lorg/easymock/Capture;)D[deprecated]
-#capture(Lorg/easymock/Capture;)B[deprecated]
-#capture(Lorg/easymock/Capture;)C[deprecated]
@3.3
+#newCapture()Lorg/easymock/Capture;
+#newCapture(Lorg/easymock/CaptureType;)Lorg/easymock/Capture;
@3.4
+#mock(Ljava/lang/Class;)Ljava/lang/Object;
+#mock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#mock(Lorg/easymock/MockType;Ljava/lang/Class;)Ljava/lang/Object;
+#mock(Ljava/lang/String;Lorg/easymock/MockType;Ljava/lang/Class;)Ljava/lang/Object;
+#strictMock(Ljava/lang/Class;)Ljava/lang/Object;
+#strictMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#niceMock(Ljava/lang/Class;)Ljava/lang/Object;
+#niceMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#partialMockBuilder(Ljava/lang/Class;)Lorg/easymock/IMockBuilder;
-#createStrictMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createStrictMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createStrictMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createStrictMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createNiceMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createNiceMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createNiceMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createNiceMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
@3.5
+#verifyRecording([Ljava/lang/Object;)V
+#verifyUnexpectedCalls([Ljava/lang/Object;)V
@4.1
+#getCurrentArgument(I)Ljava/lang/Object;

+###org/easymock/EasyMockSupport
@2.5.2
+#<init>()V
+#createStrictMock(Ljava/lang/Class;)Ljava/lang/Object;
+#createStrictMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#createMock(Ljava/lang/Class;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#createNiceMock(Ljava/lang/Class;)Ljava/lang/Object;
+#createNiceMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#createStrictControl()Lorg/easymock/IMocksControl;
+#createControl()Lorg/easymock/IMocksControl;
+#createNiceControl()Lorg/easymock/IMocksControl;
+#replayAll()V
+#resetAll()V
+#verifyAll()V
+#resetAllToNice()V
+#resetAllToDefault()V
+#resetAllToStrict()V
@3.0
+#createStrictMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createStrictMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createStrictMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createStrictMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createNiceMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createNiceMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createNiceMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createNiceMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMockBuilder(Ljava/lang/Class;)Lorg/easymock/IMockBuilder;
@3.2
+#createMock(Lorg/easymock/MockType;Ljava/lang/Class;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;Lorg/easymock/MockType;Ljava/lang/Class;)Ljava/lang/Object;
+#createControl(Lorg/easymock/MockType;)Lorg/easymock/IMocksControl;
+#injectMocks(Ljava/lang/Object;)V
@3.4
+#mock(Ljava/lang/Class;)Ljava/lang/Object;
+#mock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#mock(Lorg/easymock/MockType;Ljava/lang/Class;)Ljava/lang/Object;
+#mock(Ljava/lang/String;Lorg/easymock/MockType;Ljava/lang/Class;)Ljava/lang/Object;
+#strictMock(Ljava/lang/Class;)Ljava/lang/Object;
+#strictMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#niceMock(Ljava/lang/Class;)Ljava/lang/Object;
+#niceMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#partialMockBuilder(Ljava/lang/Class;)Lorg/easymock/IMockBuilder;
-#createStrictMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createStrictMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createStrictMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createStrictMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createNiceMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createNiceMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createNiceMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createNiceMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
@3.5
+#verifyAllRecordings()V
+#verifyAllUnexpectedCalls()V
+#getMockedClass(Ljava/lang/Object;)Ljava/lang/Class;
@5.0.0
+#isAMock(Ljava/lang/Object;)Z

+###org/easymock/IAnswer
@2.2
+#answer()Ljava/lang/Object;

+###org/easymock/IArgumentMatcher
@2.0
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/IExpectationSetters
@2.0
+#andReturn(Ljava/lang/Object;)Lorg/easymock/IExpectationSetters;
+#andThrow(Ljava/lang/Throwable;)Lorg/easymock/IExpectationSetters;
+#andStubReturn(Ljava/lang/Object;)V
+#andStubThrow(Ljava/lang/Throwable;)V
+#asStub()V
+#callback(Ljava/lang/Runnable;)Lorg/easymock/IExpectationSetters;
+#times(I)Lorg/easymock/IExpectationSetters;
+#times(II)Lorg/easymock/IExpectationSetters;
+#once()Lorg/easymock/IExpectationSetters;
+#atLeastOnce()Lorg/easymock/IExpectationSetters;
+#anyTimes()Lorg/easymock/IExpectationSetters;
@2.2
+#andAnswer(Lorg/easymock/IAnswer;)Lorg/easymock/IExpectationSetters;
+#andStubAnswer(Lorg/easymock/IAnswer;)V
-#callback(Ljava/lang/Runnable;)Lorg/easymock/IExpectationSetters;
@2.5
+#andDelegateTo(Ljava/lang/Object;)Lorg/easymock/IExpectationSetters;
+#andStubDelegateTo(Ljava/lang/Object;)V
@3.3
+#andVoid()Lorg/easymock/IExpectationSetters;

+###org/easymock/IMockBuilder
@3.0
+#addMockedMethod(Ljava/lang/reflect/Method;)Lorg/easymock/IMockBuilder;
+#addMockedMethod(Ljava/lang/String;)Lorg/easymock/IMockBuilder;
+#addMockedMethod(Ljava/lang/String;[Ljava/lang/Class;)Lorg/easymock/IMockBuilder;
+#addMockedMethods([Ljava/lang/String;)Lorg/easymock/IMockBuilder;
+#addMockedMethods([Ljava/lang/reflect/Method;)Lorg/easymock/IMockBuilder;
+#withConstructor(Ljava/lang/reflect/Constructor;)Lorg/easymock/IMockBuilder;
+#withConstructor()Lorg/easymock/IMockBuilder;
+#withConstructor([Ljava/lang/Object;)Lorg/easymock/IMockBuilder;
+#withConstructor([Ljava/lang/Class;)Lorg/easymock/IMockBuilder;
+#withArgs([Ljava/lang/Object;)Lorg/easymock/IMockBuilder;
+#createStrictMock()Ljava/lang/Object;
+#createMock()Ljava/lang/Object;
+#createNiceMock()Ljava/lang/Object;
+#createMock(Lorg/easymock/IMocksControl;)Ljava/lang/Object;
+#createStrictMock(Ljava/lang/String;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;)Ljava/lang/Object;
+#createNiceMock(Ljava/lang/String;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;Lorg/easymock/IMocksControl;)Ljava/lang/Object;
@3.2
+#createMock(Lorg/easymock/MockType;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;Lorg/easymock/MockType;)Ljava/lang/Object;
@4.0
+#mock(Lorg/easymock/MockType;)Ljava/lang/Object;
+#strictMock()Ljava/lang/Object;
+#mock()Ljava/lang/Object;
+#niceMock()Ljava/lang/Object;
+#mock(Lorg/easymock/IMocksControl;)Ljava/lang/Object;
+#mock(Ljava/lang/String;Lorg/easymock/MockType;)Ljava/lang/Object;
+#strictMock(Ljava/lang/String;)Ljava/lang/Object;
+#mock(Ljava/lang/String;)Ljava/lang/Object;
+#niceMock(Ljava/lang/String;)Ljava/lang/Object;
+#mock(Ljava/lang/String;Lorg/easymock/IMocksControl;)Ljava/lang/Object;

+###org/easymock/IMocksControl
@2.0
+#createMock(Ljava/lang/Class;)Ljava/lang/Object;
+#reset()V
+#replay()V
+#verify()V
+#checkOrder(Z)V
@2.3
+#createMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@2.4
+#resetToNice()V
+#resetToDefault()V
+#resetToStrict()V
+#makeThreadSafe(Z)V
@2.5
+#checkIsUsedInOneThread(Z)V
@3.0
+#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#createMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
@3.4
-#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
@3.5
+#verifyRecording()V
+#verifyUnexpectedCalls()V
@4.0
+#mock(Ljava/lang/Class;)Ljava/lang/Object;
+#mock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#mock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;

+###org/easymock/internal/ArgumentToString
@2.5
+#appendArgument(Ljava/lang/Object;Ljava/lang/StringBuffer;)V
@3.0
+#argumentToString(Ljava/lang/Object;)Ljava/lang/String;
+#argumentsToString([Ljava/lang/Object;)Ljava/lang/String;

+###org/easymock/internal/AssertionErrorWrapper
@2.0
+#<init>(Ljava/lang/AssertionError;)V
+#getAssertionError()Ljava/lang/AssertionError;

+###org/easymock/internal/BridgeMethodResolver
@3.0
+#findBridgedMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;

+###org/easymock/internal/ClassExtensionHelper
@3.0
+#setCurrentConstructorArgs(Lorg/easymock/ConstructorArgs;)V
+#getCurrentConstructorArgs()Lorg/easymock/ConstructorArgs;
+#getInterceptor(Ljava/lang/Object;)Lorg/easymock/internal/ClassProxyFactory$MockMethodInterceptor;
+#getControl(Ljava/lang/Object;)Lorg/easymock/internal/MocksControl;
@3.1
+#getMockedType(Ljava/lang/Object;)Ljava/lang/Class;
@3.2
-###org/easymock/internal/ClassExtensionHelper

+###org/easymock/internal/ClassInstantiatorFactory
@3.0
+#getJVM()Ljava/lang/String;
+#getJVMSpecificationVersion()Ljava/lang/String;
+#is1_3Specifications()Z
+#getInstantiator()Lorg/easymock/internal/IClassInstantiator;
+#setInstantiator(Lorg/easymock/internal/IClassInstantiator;)V
+#setDefaultInstantiator()V

+###org/easymock/internal/ClassProxyFactory$MockMethodInterceptor
@3.0
+#<init>(Ljava/lang/reflect/InvocationHandler;)V
+#intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lnet/sf/cglib/proxy/MethodProxy;)Ljava/lang/Object;
+#getHandler()Ljava/lang/reflect/InvocationHandler;
+#setMockedMethods([Ljava/lang/reflect/Method;)V
@3.2
-#getHandler()Ljava/lang/reflect/InvocationHandler;
@3.4
+#intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/easymock/cglib/proxy/MethodProxy;)Ljava/lang/Object;
-#intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lnet/sf/cglib/proxy/MethodProxy;)Ljava/lang/Object;
@5.0.0
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
-#intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/easymock/cglib/proxy/MethodProxy;)Ljava/lang/Object;
-#setMockedMethods([Ljava/lang/reflect/Method;)V
@5.1.0
+#<init>()V
+#interceptSuperCallable(Ljava/lang/Object;Lorg/easymock/internal/ClassMockingData;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#interceptAbstract(Ljava/lang/Object;Lorg/easymock/internal/ClassMockingData;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
-#<init>(Ljava/lang/reflect/InvocationHandler;)V
-#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/internal/ClassProxyFactory
@3.0
+#<init>()V
+#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
@3.2
+#isCallerMockInvocationHandlerInvoke(Ljava/lang/Throwable;)Z
+#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;[Ljava/lang/reflect/Method;Lorg/easymock/ConstructorArgs;)Ljava/lang/Object;
+#getInvocationHandler(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;
-#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;

+###org/easymock/internal/DefaultClassInstantiator
@3.0
+#<init>()V
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
@3.2
+#getConstructorToUse(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#getArgsForTypes([Ljava/lang/Class;)[Ljava/lang/Object;

+###org/easymock/internal/EasyMockProperties
@2.5
+#getInstance()Lorg/easymock/internal/EasyMockProperties;
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/easymock/internal/ErrorMessage
@2.5
+#<init>(ZLjava/lang/String;I)V
+#isMatching()Z
+#getMessage()Ljava/lang/String;
+#getActualCount()I
+#appendTo(Ljava/lang/StringBuilder;I)V

+###org/easymock/internal/ExpectedInvocation
@2.0
+#<init>(Lorg/easymock/internal/Invocation;Ljava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#matches(Lorg/easymock/internal/Invocation;)Z
+#toString()Ljava/lang/String;
+#getMethod()Ljava/lang/reflect/Method;
+#withMatcher(Lorg/easymock/ArgumentsMatcher;)Lorg/easymock/internal/ExpectedInvocation;
@3.0
-#withMatcher(Lorg/easymock/ArgumentsMatcher;)Lorg/easymock/internal/ExpectedInvocation;

+###org/easymock/internal/ExpectedInvocationAndResult
@2.0
+#<init>(Lorg/easymock/internal/ExpectedInvocation;Lorg/easymock/internal/Result;)V
+#getExpectedInvocation()Lorg/easymock/internal/ExpectedInvocation;
+#getResult()Lorg/easymock/internal/Result;

+###org/easymock/internal/ExpectedInvocationAndResults
@2.0
+#<init>(Lorg/easymock/internal/ExpectedInvocation;Lorg/easymock/internal/Results;)V
+#getExpectedInvocation()Lorg/easymock/internal/ExpectedInvocation;
+#getResults()Lorg/easymock/internal/Results;
+#toString()Ljava/lang/String;

+###org/easymock/internal/IClassInstantiator
@3.0
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;

+###org/easymock/internal/IMocksBehavior
@2.0
+#addExpected(Lorg/easymock/internal/ExpectedInvocation;Lorg/easymock/internal/Result;Lorg/easymock/internal/Range;)V
+#addStub(Lorg/easymock/internal/ExpectedInvocation;Lorg/easymock/internal/Result;)V
+#checkOrder(Z)V
+#addActual(Lorg/easymock/internal/Invocation;)Lorg/easymock/internal/Result;
+#verify()V
@2.4
+#makeThreadSafe(Z)V
+#isThreadSafe()Z
+#checkCurrentThreadSameAsLastThread()V
@2.5
+#shouldBeUsedInOneThread(Z)V
+#checkThreadSafety()V
-#checkCurrentThreadSameAsLastThread()V
@3.5
+#verifyRecording()V
+#verifyUnexpectedCalls()V

+###org/easymock/internal/IMocksControlState
@2.0
+#invoke(Lorg/easymock/internal/Invocation;)Ljava/lang/Object;
+#assertRecordState()V
+#callback(Ljava/lang/Runnable;)V
+#andReturn(Ljava/lang/Object;)V
+#andThrow(Ljava/lang/Throwable;)V
+#andStubReturn(Ljava/lang/Object;)V
+#andStubThrow(Ljava/lang/Throwable;)V
+#asStub()V
+#times(Lorg/easymock/internal/Range;)V
+#checkOrder(Z)V
+#replay()V
+#verify()V
@2.2
+#andAnswer(Lorg/easymock/IAnswer;)V
+#andStubAnswer(Lorg/easymock/IAnswer;)V
-#callback(Ljava/lang/Runnable;)V
@2.4
+#makeThreadSafe(Z)V
@2.5
+#andDelegateTo(Ljava/lang/Object;)V
+#andStubDelegateTo(Ljava/lang/Object;)V
+#checkIsUsedInOneThread(Z)V
@3.3
+#andVoid()V
@3.5
+#verifyRecording()V
+#verifyUnexpectedCalls()V

+###org/easymock/internal/Invocation
@2.0
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
+#getMock()Ljava/lang/Object;
+#getMethod()Ljava/lang/reflect/Method;
+#getArguments()[Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#matches(Lorg/easymock/internal/Invocation;Lorg/easymock/ArgumentsMatcher;)Z
+#toString(Lorg/easymock/ArgumentsMatcher;)Ljava/lang/String;
@2.3
+#getMockAndMethodName()Ljava/lang/String;
+#isJavaIdentifier(Ljava/lang/String;)Z
@2.5
+#addCapture(Lorg/easymock/internal/matchers/Captures;Ljava/lang/Object;)V
+#validateCaptures()V
+#clearCaptures()V
@3.0
+#toString()Ljava/lang/String;
-#matches(Lorg/easymock/internal/Invocation;Lorg/easymock/ArgumentsMatcher;)Z
-#toString(Lorg/easymock/ArgumentsMatcher;)Ljava/lang/String;

+###org/easymock/internal/IProxyFactory
@2.0
+#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
@3.2
+#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;[Ljava/lang/reflect/Method;Lorg/easymock/ConstructorArgs;)Ljava/lang/Object;
+#getInvocationHandler(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;
-#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;

+###org/easymock/internal/JavaProxyFactory
@2.0
+#<init>()V
+#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
@3.2
+#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;[Ljava/lang/reflect/Method;Lorg/easymock/ConstructorArgs;)Ljava/lang/Object;
+#getInvocationHandler(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;
-#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;

+###org/easymock/internal/LastControl
@2.0
+#<init>()V
+#reportLastControl(Lorg/easymock/internal/MocksControl;)V
+#lastControl()Lorg/easymock/internal/MocksControl;
+#reportMatcher(Lorg/easymock/IArgumentMatcher;)V
+#pullMatchers()Ljava/util/List;
+#reportAnd(I)V
+#reportNot()V
+#reportOr(I)V
@2.2
+#getCurrentArguments()[Ljava/lang/Object;
+#pushCurrentArguments([Ljava/lang/Object;)V
+#popCurrentArguments()V
@2.5
+#getCurrentInvocation()Lorg/easymock/internal/Invocation;
+#pushCurrentInvocation(Lorg/easymock/internal/Invocation;)V
+#popCurrentInvocation()V
-#getCurrentArguments()[Ljava/lang/Object;
-#pushCurrentArguments([Ljava/lang/Object;)V
-#popCurrentArguments()V
@3.0
-#<init>()V

+###org/easymock/internal/matchers/And
@2.0
+#<init>(Ljava/util/List;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Any
@2.0
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/ArrayEquals
@2.0
+#<init>(Ljava/lang/Object;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V
+#createObjectArray(Ljava/lang/Object;)[Ljava/lang/Object;
@2.5
-#createObjectArray(Ljava/lang/Object;)[Ljava/lang/Object;

+###org/easymock/internal/matchers/Captures
@2.4
+#<init>(Lorg/easymock/Capture;)V
+#appendTo(Ljava/lang/StringBuffer;)V
+#matches(Ljava/lang/Object;)Z
@2.5
+#setPotentialValue(Ljava/lang/Object;)V
+#validateCapture()V

+###org/easymock/internal/matchers/Compare
@2.3
+#<init>(Ljava/lang/Object;Ljava/util/Comparator;Lorg/easymock/LogicalOperator;)V
+#appendTo(Ljava/lang/StringBuffer;)V
+#matches(Ljava/lang/Object;)Z

+###org/easymock/internal/matchers/CompareEqual
@2.3
+#<init>(Ljava/lang/Comparable;)V

+###org/easymock/internal/matchers/CompareTo
@2.3
+#<init>(Ljava/lang/Comparable;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Contains
@2.0
+#<init>(Ljava/lang/String;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/EndsWith
@2.0
+#<init>(Ljava/lang/String;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Equals
@2.0
+#<init>(Ljava/lang/Object;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/internal/matchers/EqualsWithDelta
@2.0
+#<init>(Ljava/lang/Number;Ljava/lang/Number;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Find
@2.0
+#<init>(Ljava/lang/String;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/GreaterOrEqual
@2.0
+#<init>(Ljava/lang/Number;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V
@2.3
+#<init>(Ljava/lang/Comparable;)V
-#<init>(Ljava/lang/Number;)V
-#matches(Ljava/lang/Object;)Z
-#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/GreaterThan
@2.0
+#<init>(Ljava/lang/Number;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V
@2.3
+#<init>(Ljava/lang/Comparable;)V
-#<init>(Ljava/lang/Number;)V
-#matches(Ljava/lang/Object;)Z
-#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/InstanceOf
@2.0
+#<init>(Ljava/lang/Class;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/LessOrEqual
@2.0
+#<init>(Ljava/lang/Number;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V
@2.3
+#<init>(Ljava/lang/Comparable;)V
-#<init>(Ljava/lang/Number;)V
-#matches(Ljava/lang/Object;)Z
-#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/LessThan
@2.0
+#<init>(Ljava/lang/Number;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V
@2.3
+#<init>(Ljava/lang/Comparable;)V
-#<init>(Ljava/lang/Number;)V
-#matches(Ljava/lang/Object;)Z
-#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Matches
@2.0
+#<init>(Ljava/lang/String;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Not
@2.0
+#<init>(Lorg/easymock/IArgumentMatcher;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/NotNull
@2.0
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Null
@2.0
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Or
@2.0
+#<init>(Ljava/util/List;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/Same
@2.0
+#<init>(Ljava/lang/Object;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/matchers/StartsWith
@2.0
+#<init>(Ljava/lang/String;)V
+#matches(Ljava/lang/Object;)Z
+#appendTo(Ljava/lang/StringBuffer;)V

+###org/easymock/internal/MethodSerializationWrapper
@2.4
+#<init>(Ljava/lang/reflect/Method;)V
+#getMethod()Ljava/lang/reflect/Method;

+###org/easymock/internal/MockBuilder
@3.0
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Lorg/easymock/EasyMockSupport;)V
+#addMockedMethod(Ljava/lang/reflect/Method;)Lorg/easymock/IMockBuilder;
+#addMockedMethod(Ljava/lang/String;)Lorg/easymock/IMockBuilder;
+#addMockedMethod(Ljava/lang/String;[Ljava/lang/Class;)Lorg/easymock/IMockBuilder;
+#addMockedMethods([Ljava/lang/String;)Lorg/easymock/IMockBuilder;
+#addMockedMethods([Ljava/lang/reflect/Method;)Lorg/easymock/IMockBuilder;
+#withConstructor(Ljava/lang/reflect/Constructor;)Lorg/easymock/IMockBuilder;
+#withConstructor(Lorg/easymock/ConstructorArgs;)Lorg/easymock/IMockBuilder;
+#withConstructor()Lorg/easymock/IMockBuilder;
+#withConstructor([Ljava/lang/Object;)Lorg/easymock/IMockBuilder;
+#withConstructor([Ljava/lang/Class;)Lorg/easymock/IMockBuilder;
+#withArgs([Ljava/lang/Object;)Lorg/easymock/IMockBuilder;
+#createMock(Lorg/easymock/IMocksControl;)Ljava/lang/Object;
+#createMock()Ljava/lang/Object;
+#createNiceMock()Ljava/lang/Object;
+#createStrictMock()Ljava/lang/Object;
+#createMock(Ljava/lang/String;Lorg/easymock/IMocksControl;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;)Ljava/lang/Object;
+#createNiceMock(Ljava/lang/String;)Ljava/lang/Object;
+#createStrictMock(Ljava/lang/String;)Ljava/lang/Object;
@3.2
+#createMock(Lorg/easymock/MockType;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;Lorg/easymock/MockType;)Ljava/lang/Object;

+###org/easymock/internal/MockInvocationHandler
@2.0
+#<init>(Lorg/easymock/internal/MocksControl;)V
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#getControl()Lorg/easymock/internal/MocksControl;

+###org/easymock/internal/MocksBehavior
@2.0
+#<init>(Z)V
+#addStub(Lorg/easymock/internal/ExpectedInvocation;Lorg/easymock/internal/Result;)V
+#addExpected(Lorg/easymock/internal/ExpectedInvocation;Lorg/easymock/internal/Result;Lorg/easymock/internal/Range;)V
+#addActual(Lorg/easymock/internal/Invocation;)Lorg/easymock/internal/Result;
+#verify()V
+#checkOrder(Z)V
+#getLegacyMatcherProvider()Lorg/easymock/internal/LegacyMatcherProvider;
+#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#setMatcher(Ljava/lang/reflect/Method;Lorg/easymock/ArgumentsMatcher;)V
@2.4
+#makeThreadSafe(Z)V
+#isThreadSafe()Z
+#checkCurrentThreadSameAsLastThread()V
@2.5
+#shouldBeUsedInOneThread(Z)V
+#checkThreadSafety()V
-#checkCurrentThreadSameAsLastThread()V
@3.0
-#getLegacyMatcherProvider()Lorg/easymock/internal/LegacyMatcherProvider;
-#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
-#setMatcher(Ljava/lang/reflect/Method;Lorg/easymock/ArgumentsMatcher;)V
@3.5
+#verifyRecording()V
+#verifyUnexpectedCalls()V

+###org/easymock/internal/MocksControl$MockType
@2.0
+#values()[Lorg/easymock/internal/MocksControl$MockType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/internal/MocksControl$MockType;
@3.6
+#getRealType()Lorg/easymock/MockType;
@4.0
-###org/easymock/internal/MocksControl$MockType

+###org/easymock/internal/MocksControl
@2.0
+#<init>(Lorg/easymock/internal/MocksControl$MockType;)V
+#getState()Lorg/easymock/internal/IMocksControlState;
+#createMock(Ljava/lang/Class;)Ljava/lang/Object;
+#reset()V
+#replay()V
+#verify()V
+#checkOrder(Z)V
+#andReturn(Ljava/lang/Object;)Lorg/easymock/IExpectationSetters;
+#andThrow(Ljava/lang/Throwable;)Lorg/easymock/IExpectationSetters;
+#callback(Ljava/lang/Runnable;)Lorg/easymock/IExpectationSetters;
+#andStubReturn(Ljava/lang/Object;)V
+#andStubThrow(Ljava/lang/Throwable;)V
+#asStub()V
+#times(I)Lorg/easymock/IExpectationSetters;
+#times(II)Lorg/easymock/IExpectationSetters;
+#once()Lorg/easymock/IExpectationSetters;
+#atLeastOnce()Lorg/easymock/IExpectationSetters;
+#anyTimes()Lorg/easymock/IExpectationSetters;
+#setLegacyDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#setLegacyMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#setLegacyDefaultReturnValue(Ljava/lang/Object;)V
+#setLegacyDefaultVoidCallable()V
+#setLegacyDefaultThrowable(Ljava/lang/Throwable;)V
@2.2
+#andAnswer(Lorg/easymock/IAnswer;)Lorg/easymock/IExpectationSetters;
+#andStubAnswer(Lorg/easymock/IAnswer;)V
-#callback(Ljava/lang/Runnable;)Lorg/easymock/IExpectationSetters;
@2.3
+#createMock(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@2.4
+#resetToNice()V
+#resetToDefault()V
+#resetToStrict()V
+#makeThreadSafe(Z)V
@2.5
+#checkIsUsedInOneThread(Z)V
+#andDelegateTo(Ljava/lang/Object;)Lorg/easymock/IExpectationSetters;
+#andStubDelegateTo(Ljava/lang/Object;)V
@3.0
+#getType()Lorg/easymock/internal/MocksControl$MockType;
+#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;
+#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;
+#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;
+#createMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;
-#setLegacyDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
-#setLegacyMatcher(Lorg/easymock/ArgumentsMatcher;)V
-#setLegacyDefaultReturnValue(Ljava/lang/Object;)V
-#setLegacyDefaultVoidCallable()V
-#setLegacyDefaultThrowable(Ljava/lang/Throwable;)V
@3.2
+#<init>(Lorg/easymock/MockType;)V
+#getType()Lorg/easymock/MockType;
*#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
*#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
*#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
*#createMock(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
+#getProxyFactory(Ljava/lang/Object;)Lorg/easymock/internal/IProxyFactory;
+#getControl(Ljava/lang/Object;)Lorg/easymock/internal/MocksControl;
+#getInvocationHandler(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;
+#getMockedType(Ljava/lang/Object;)Ljava/lang/Class;
-#getType()Lorg/easymock/internal/MocksControl$MockType;
@3.3
+#andVoid()Lorg/easymock/IExpectationSetters;
@3.4
-#createMock(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
-#createMock(Ljava/lang/Class;Lorg/easymock/ConstructorArgs;[Ljava/lang/reflect/Method;)Ljava/lang/Object;[deprecated]
@3.5
+#getMockedClass(Ljava/lang/Object;)Ljava/lang/Class;
*#getMockedType(Ljava/lang/Object;)Ljava/lang/Class;[deprecated]
+#verifyRecording()V
+#verifyUnexpectedCalls()V
@4.0
-#<init>(Lorg/easymock/internal/MocksControl$MockType;)V
-#getMockedType(Ljava/lang/Object;)Ljava/lang/Class;[deprecated]

+###org/easymock/internal/ObjectMethodsFilter
@2.0
+#<init>(Lorg/easymock/internal/MockInvocationHandler;)V
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#getDelegate()Lorg/easymock/internal/MockInvocationHandler;
@2.3
+#<init>(Ljava/lang/Class;Lorg/easymock/internal/MockInvocationHandler;Ljava/lang/String;)V
-#<init>(Lorg/easymock/internal/MockInvocationHandler;)V
@4.0
+#getName()Ljava/lang/String;

+###org/easymock/internal/ObjenesisClassInstantiator
@3.0
+#<init>()V
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;

+###org/easymock/internal/Range
@2.0
+#<init>(I)V
+#<init>(II)V
+#hasFixedCount()Z
+#getMaximum()I
+#getMinimum()I
+#toString()Ljava/lang/String;
+#expectedAndActual(I)Ljava/lang/String;
+#contains(I)Z
+#hasOpenCount()Z
@2.5
+#expectedCount()Ljava/lang/String;
-#expectedAndActual(I)Ljava/lang/String;

+###org/easymock/internal/RecordState
@2.0
+#<init>(Lorg/easymock/internal/IMocksBehavior;)V
+#assertRecordState()V
+#invoke(Lorg/easymock/internal/Invocation;)Ljava/lang/Object;
+#replay()V
+#verify()V
+#andReturn(Ljava/lang/Object;)V
+#andThrow(Ljava/lang/Throwable;)V
+#andStubReturn(Ljava/lang/Object;)V
+#setDefaultReturnValue(Ljava/lang/Object;)V
+#asStub()V
+#setDefaultVoidCallable()V
+#andStubThrow(Ljava/lang/Throwable;)V
+#setDefaultThrowable(Ljava/lang/Throwable;)V
+#times(Lorg/easymock/internal/Range;)V
+#emptyReturnValueFor(Ljava/lang/Class;)Ljava/lang/Object;
+#callback(Ljava/lang/Runnable;)V
+#checkOrder(Z)V
+#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#setMatcher(Ljava/lang/reflect/Method;Lorg/easymock/ArgumentsMatcher;)V
@2.2
+#andAnswer(Lorg/easymock/IAnswer;)V
+#andStubAnswer(Lorg/easymock/IAnswer;)V
-#callback(Ljava/lang/Runnable;)V
@2.4
+#makeThreadSafe(Z)V
@2.5
+#andDelegateTo(Ljava/lang/Object;)V
+#andStubDelegateTo(Ljava/lang/Object;)V
+#checkIsUsedInOneThread(Z)V
@3.0
-#setDefaultReturnValue(Ljava/lang/Object;)V
-#setDefaultVoidCallable()V
-#setDefaultThrowable(Ljava/lang/Throwable;)V
-#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
-#setMatcher(Ljava/lang/reflect/Method;Lorg/easymock/ArgumentsMatcher;)V
@3.3
+#andVoid()V
@3.5
+#verifyRecording()V
+#verifyUnexpectedCalls()V

+###org/easymock/internal/ReflectionUtils
@3.0
+#findMethod(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;
+#findMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#getConstructor(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/reflect/Constructor;
@3.1
+#getDeclaredMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
@3.5
+#isClassAvailable(Ljava/lang/String;)Z
@3.6
+#findMethod(Ljava/lang/Class;Ljava/lang/String;Lorg/easymock/internal/ReflectionUtils$Predicate;)Ljava/lang/reflect/Method;
+#findMethod(Ljava/lang/Class;Ljava/lang/String;Lorg/easymock/internal/ReflectionUtils$Predicate;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#isDefaultMethod(Ljava/lang/reflect/Method;)Z
-#findMethod(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;
-#findMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
@4.3
+#findMethod(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/lang/reflect/Method;
+#findMethod(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Predicate;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#getDefaultMethods(Ljava/lang/Class;)Ljava/util/Set;
-#findMethod(Ljava/lang/Class;Ljava/lang/String;Lorg/easymock/internal/ReflectionUtils$Predicate;)Ljava/lang/reflect/Method;
-#findMethod(Ljava/lang/Class;Ljava/lang/String;Lorg/easymock/internal/ReflectionUtils$Predicate;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
-#isDefaultMethod(Ljava/lang/reflect/Method;)Z

+###org/easymock/internal/ReplayState
@2.0
+#<init>(Lorg/easymock/internal/IMocksBehavior;)V
+#invoke(Lorg/easymock/internal/Invocation;)Ljava/lang/Object;
+#verify()V
+#replay()V
+#callback(Ljava/lang/Runnable;)V
+#checkOrder(Z)V
+#andReturn(Ljava/lang/Object;)V
+#andThrow(Ljava/lang/Throwable;)V
+#andStubReturn(Ljava/lang/Object;)V
+#andStubThrow(Ljava/lang/Throwable;)V
+#asStub()V
+#times(Lorg/easymock/internal/Range;)V
+#setMatcher(Ljava/lang/reflect/Method;Lorg/easymock/ArgumentsMatcher;)V
+#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#setDefaultReturnValue(Ljava/lang/Object;)V
+#setDefaultThrowable(Ljava/lang/Throwable;)V
+#setDefaultVoidCallable()V
+#assertRecordState()V
@2.2
+#andAnswer(Lorg/easymock/IAnswer;)V
+#andStubAnswer(Lorg/easymock/IAnswer;)V
@2.4
+#makeThreadSafe(Z)V
@2.5
+#checkIsUsedInOneThread(Z)V
+#andDelegateTo(Ljava/lang/Object;)V
+#andStubDelegateTo(Ljava/lang/Object;)V
@3.0
-#setMatcher(Ljava/lang/reflect/Method;Lorg/easymock/ArgumentsMatcher;)V
-#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
@3.3
+#andVoid()V
@3.5
+#verifyRecording()V
+#verifyUnexpectedCalls()V
-#setDefaultReturnValue(Ljava/lang/Object;)V
-#setDefaultThrowable(Ljava/lang/Throwable;)V
-#setDefaultVoidCallable()V

+###org/easymock/internal/Result
@2.0
+#createThrowResult(Ljava/lang/Throwable;)Lorg/easymock/internal/Result;
+#createReturnResult(Ljava/lang/Object;)Lorg/easymock/internal/Result;
+#withCallback(Ljava/lang/Runnable;)Lorg/easymock/internal/Result;
+#returnObjectOrThrowException()Ljava/lang/Object;
+#hasCallback()Z
@2.2
+#createAnswerResult(Lorg/easymock/IAnswer;)Lorg/easymock/internal/Result;
+#answer()Ljava/lang/Object;
-#withCallback(Ljava/lang/Runnable;)Lorg/easymock/internal/Result;
-#returnObjectOrThrowException()Ljava/lang/Object;
-#hasCallback()Z
@2.4
+#toString()Ljava/lang/String;
@2.5
+#createDelegatingResult(Ljava/lang/Object;)Lorg/easymock/internal/Result;
+#shouldFillInStackTrace()Z

+###org/easymock/internal/Results
@2.0
+#<init>()V
+#add(Lorg/easymock/internal/Result;Lorg/easymock/internal/Range;)V
+#next()Lorg/easymock/internal/Result;
+#hasValidCallCount()Z
+#toString()Ljava/lang/String;
+#getCallCount()I
@3.0
+#hasResults()Z

+###org/easymock/internal/RuntimeExceptionWrapper
@2.0
+#<init>(Ljava/lang/RuntimeException;)V
+#getRuntimeException()Ljava/lang/RuntimeException;

+###org/easymock/internal/ThrowableWrapper
@2.0
+#<init>(Ljava/lang/Throwable;)V
+#getThrowable()Ljava/lang/Throwable;

+###org/easymock/internal/UnorderedBehavior
@2.0
+#<init>(Z)V
+#addExpected(Lorg/easymock/internal/ExpectedInvocation;Lorg/easymock/internal/Result;Lorg/easymock/internal/Range;)V
+#addActual(Lorg/easymock/internal/Invocation;)Lorg/easymock/internal/Result;
+#verify()Z
+#toString()Ljava/lang/String;
+#toString(Lorg/easymock/internal/Invocation;)Ljava/lang/String;
+#allowsExpectedInvocation(Lorg/easymock/internal/ExpectedInvocation;Z)Z
@2.5
+#getMessages(Lorg/easymock/internal/Invocation;)Ljava/util/List;
-#toString()Ljava/lang/String;
-#toString(Lorg/easymock/internal/Invocation;)Ljava/lang/String;

+###org/easymock/LogicalOperator
@2.3
+#values()[Lorg/easymock/LogicalOperator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/LogicalOperator;
+#getSymbol()Ljava/lang/String;
+#matchResult(I)Z

+###org/easymock/EasyMockRunner
@3.2
+#<init>(Ljava/lang/Class;)V

+###org/easymock/internal/AndroidClassProxyFactory
@3.2
+#<init>()V
+#createProxy(Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;[Ljava/lang/reflect/Method;Lorg/easymock/ConstructorArgs;)Ljava/lang/Object;
+#getInvocationHandler(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;

+###org/easymock/internal/AndroidSupport
@3.2
+#<init>()V
+#isAndroid()Z

+###org/easymock/Mock
@3.2
+#type()Lorg/easymock/MockType;
+#name()Ljava/lang/String;
@3.3
+#fieldName()Ljava/lang/String;
@3.5
+#value()Lorg/easymock/MockType;

+###org/easymock/MockType
@3.2
+#values()[Lorg/easymock/MockType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/MockType;

+###org/easymock/TestSubject
@3.2

+###org/easymock/EasyMockRule
@3.3
+#<init>(Ljava/lang/Object;)V
+#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;

+###org/easymock/internal/EasyMockStatement
@3.3
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/Object;)V
+#evaluate()V

+###org/easymock/internal/Injection
@3.3
+#<init>(Ljava/lang/Object;Lorg/easymock/Mock;)V
+#getMock()Ljava/lang/Object;
+#getAnnotation()Lorg/easymock/Mock;
+#getQualifier()Ljava/lang/String;
+#setMatched()V
+#isMatched()Z

+###org/easymock/internal/InjectionPlan
@3.3
+#<init>()V
+#addInjection(Lorg/easymock/internal/Injection;)V
+#addTestSubjectField(Ljava/lang/reflect/Field;)V
+#getTestSubjectFields()Ljava/util/List;
+#getQualifiedInjections()Ljava/util/List;
+#getUnqualifiedInjections()Ljava/util/List;

+###org/easymock/internal/InjectionTarget
@3.3
+#<init>(Ljava/lang/reflect/Field;)V
+#accepts(Lorg/easymock/internal/Injection;)Z
+#inject(Ljava/lang/Object;Lorg/easymock/internal/Injection;)V
+#getTargetField()Ljava/lang/reflect/Field;

+###org/easymock/internal/Injector
@3.3
+#<init>()V
+#injectMocks(Ljava/lang/Object;)V

+###org/easymock/cglib/beans/BeanCopier$Generator
@3.4
+#<init>()V
+#setSource(Ljava/lang/Class;)V
+#setTarget(Ljava/lang/Class;)V
+#setUseConverter(Z)V
+#create()Lorg/easymock/cglib/beans/BeanCopier;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/beans/BeanCopier$Generator

+###org/easymock/cglib/beans/BeanCopier
@3.4
+#<init>()V
+#create(Ljava/lang/Class;Ljava/lang/Class;Z)Lorg/easymock/cglib/beans/BeanCopier;
+#copy(Ljava/lang/Object;Ljava/lang/Object;Lorg/easymock/cglib/core/Converter;)V
@5.0.0
-###org/easymock/cglib/beans/BeanCopier

+###org/easymock/cglib/beans/BeanGenerator
@3.4
+#<init>()V
+#setSuperclass(Ljava/lang/Class;)V
+#addProperty(Ljava/lang/String;Ljava/lang/Class;)V
+#create()Ljava/lang/Object;
+#createClass()Ljava/lang/Object;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
+#addProperties(Lorg/easymock/cglib/beans/BeanGenerator;Ljava/util/Map;)V
+#addProperties(Lorg/easymock/cglib/beans/BeanGenerator;Ljava/lang/Class;)V
+#addProperties(Lorg/easymock/cglib/beans/BeanGenerator;[Ljava/beans/PropertyDescriptor;)V
@5.0.0
-###org/easymock/cglib/beans/BeanGenerator

+###org/easymock/cglib/beans/BeanMap$Generator
@3.4
+#<init>()V
+#setBean(Ljava/lang/Object;)V
+#setBeanClass(Ljava/lang/Class;)V
+#setRequire(I)V
+#create()Lorg/easymock/cglib/beans/BeanMap;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/beans/BeanMap$Generator

+###org/easymock/cglib/beans/BeanMap
@3.4
+#create(Ljava/lang/Object;)Lorg/easymock/cglib/beans/BeanMap;
+#newInstance(Ljava/lang/Object;)Lorg/easymock/cglib/beans/BeanMap;
+#getPropertyType(Ljava/lang/String;)Ljava/lang/Class;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#setBean(Ljava/lang/Object;)V
+#getBean()Ljava/lang/Object;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#size()I
+#isEmpty()Z
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#toString()Ljava/lang/String;
@5.0.0
-###org/easymock/cglib/beans/BeanMap

+###org/easymock/cglib/beans/BulkBean$Generator
@3.4
+#<init>()V
+#setTarget(Ljava/lang/Class;)V
+#setGetters([Ljava/lang/String;)V
+#setSetters([Ljava/lang/String;)V
+#setTypes([Ljava/lang/Class;)V
+#create()Lorg/easymock/cglib/beans/BulkBean;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/beans/BulkBean$Generator

+###org/easymock/cglib/beans/BulkBean
@3.4
+#getPropertyValues(Ljava/lang/Object;[Ljava/lang/Object;)V
+#setPropertyValues(Ljava/lang/Object;[Ljava/lang/Object;)V
+#getPropertyValues(Ljava/lang/Object;)[Ljava/lang/Object;
+#getPropertyTypes()[Ljava/lang/Class;
+#getGetters()[Ljava/lang/String;
+#getSetters()[Ljava/lang/String;
+#create(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Class;)Lorg/easymock/cglib/beans/BulkBean;
@5.0.0
-###org/easymock/cglib/beans/BulkBean

+###org/easymock/cglib/beans/BulkBeanException
@3.4
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/Throwable;I)V
+#getIndex()I
+#getCause()Ljava/lang/Throwable;
@5.0.0
-###org/easymock/cglib/beans/BulkBeanException

+###org/easymock/cglib/beans/FixedKeySet
@3.4
+#<init>([Ljava/lang/String;)V
+#iterator()Ljava/util/Iterator;
+#size()I
@5.0.0
-###org/easymock/cglib/beans/FixedKeySet

+###org/easymock/cglib/beans/ImmutableBean$Generator
@3.4
+#<init>()V
+#setBean(Ljava/lang/Object;)V
+#create()Ljava/lang/Object;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/beans/ImmutableBean$Generator

+###org/easymock/cglib/beans/ImmutableBean
@3.4
+#create(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/beans/ImmutableBean

+###org/easymock/cglib/core/AbstractClassGenerator$Source
@3.4
+#<init>(Ljava/lang/String;)V
@5.0.0
-###org/easymock/cglib/core/AbstractClassGenerator$Source

+###org/easymock/cglib/core/AbstractClassGenerator
@3.4
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#setNamingPolicy(Lorg/easymock/cglib/core/NamingPolicy;)V
+#getNamingPolicy()Lorg/easymock/cglib/core/NamingPolicy;
+#setUseCache(Z)V
+#getUseCache()Z
+#setAttemptLoad(Z)V
+#getAttemptLoad()Z
+#setStrategy(Lorg/easymock/cglib/core/GeneratorStrategy;)V
+#getStrategy()Lorg/easymock/cglib/core/GeneratorStrategy;
+#getCurrent()Lorg/easymock/cglib/core/AbstractClassGenerator;
+#getClassLoader()Ljava/lang/ClassLoader;
@5.0.0
-###org/easymock/cglib/core/AbstractClassGenerator

+###org/easymock/cglib/core/Block
@3.4
+#<init>(Lorg/easymock/cglib/core/CodeEmitter;)V
+#getCodeEmitter()Lorg/easymock/cglib/core/CodeEmitter;
+#end()V
+#getStart()Lorg/easymock/asm/Label;
+#getEnd()Lorg/easymock/asm/Label;
@5.0.0
-###org/easymock/cglib/core/Block

+###org/easymock/cglib/core/ClassEmitter
@3.4
+#<init>(Lorg/easymock/asm/ClassVisitor;)V
+#<init>()V
+#setTarget(Lorg/easymock/asm/ClassVisitor;)V
+#getClassInfo()Lorg/easymock/cglib/core/ClassInfo;
+#begin_class(IILjava/lang/String;Lorg/easymock/asm/Type;[Lorg/easymock/asm/Type;Ljava/lang/String;)V
+#getStaticHook()Lorg/easymock/cglib/core/CodeEmitter;
+#getAccess()I
+#getClassType()Lorg/easymock/asm/Type;
+#getSuperType()Lorg/easymock/asm/Type;
+#end_class()V
+#begin_method(ILorg/easymock/cglib/core/Signature;[Lorg/easymock/asm/Type;)Lorg/easymock/cglib/core/CodeEmitter;
+#begin_static()Lorg/easymock/cglib/core/CodeEmitter;
+#declare_field(ILjava/lang/String;Lorg/easymock/asm/Type;Ljava/lang/Object;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/asm/MethodVisitor;
@5.0.0
-###org/easymock/cglib/core/ClassEmitter

+###org/easymock/cglib/core/ClassGenerator
@3.4
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/core/ClassGenerator

+###org/easymock/cglib/core/ClassInfo
@3.4
+#getType()Lorg/easymock/asm/Type;
+#getSuperType()Lorg/easymock/asm/Type;
+#getInterfaces()[Lorg/easymock/asm/Type;
+#getModifiers()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@5.0.0
-###org/easymock/cglib/core/ClassInfo

+###org/easymock/cglib/core/ClassNameReader
@3.4
+#getClassName(Lorg/easymock/asm/ClassReader;)Ljava/lang/String;
+#getClassInfo(Lorg/easymock/asm/ClassReader;)[Ljava/lang/String;
@5.0.0
-###org/easymock/cglib/core/ClassNameReader

+###org/easymock/cglib/core/ClassesKey
@3.4
+#create([Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/core/ClassesKey

+###org/easymock/cglib/core/CodeEmitter
@3.4
+#<init>(Lorg/easymock/cglib/core/CodeEmitter;)V
+#isStaticHook()Z
+#getSignature()Lorg/easymock/cglib/core/Signature;
+#getReturnType()Lorg/easymock/asm/Type;
+#getMethodInfo()Lorg/easymock/cglib/core/MethodInfo;
+#getClassEmitter()Lorg/easymock/cglib/core/ClassEmitter;
+#end_method()V
+#begin_block()Lorg/easymock/cglib/core/Block;
+#catch_exception(Lorg/easymock/cglib/core/Block;Lorg/easymock/asm/Type;)V
+#goTo(Lorg/easymock/asm/Label;)V
+#ifnull(Lorg/easymock/asm/Label;)V
+#ifnonnull(Lorg/easymock/asm/Label;)V
+#if_jump(ILorg/easymock/asm/Label;)V
+#if_icmp(ILorg/easymock/asm/Label;)V
+#if_cmp(Lorg/easymock/asm/Type;ILorg/easymock/asm/Label;)V
+#pop()V
+#pop2()V
+#dup()V
+#dup2()V
+#dup_x1()V
+#dup_x2()V
+#dup2_x1()V
+#dup2_x2()V
+#swap()V
+#aconst_null()V
+#swap(Lorg/easymock/asm/Type;Lorg/easymock/asm/Type;)V
+#monitorenter()V
+#monitorexit()V
+#math(ILorg/easymock/asm/Type;)V
+#array_load(Lorg/easymock/asm/Type;)V
+#array_store(Lorg/easymock/asm/Type;)V
+#cast_numeric(Lorg/easymock/asm/Type;Lorg/easymock/asm/Type;)V
+#push(I)V
+#push(J)V
+#push(F)V
+#push(D)V
+#push(Ljava/lang/String;)V
+#newarray()V
+#newarray(Lorg/easymock/asm/Type;)V
+#arraylength()V
+#load_this()V
+#load_args()V
+#load_arg(I)V
+#load_args(II)V
+#iinc(Lorg/easymock/cglib/core/Local;I)V
+#store_local(Lorg/easymock/cglib/core/Local;)V
+#load_local(Lorg/easymock/cglib/core/Local;)V
+#return_value()V
+#getfield(Ljava/lang/String;)V
+#putfield(Ljava/lang/String;)V
+#super_getfield(Ljava/lang/String;Lorg/easymock/asm/Type;)V
+#super_putfield(Ljava/lang/String;Lorg/easymock/asm/Type;)V
+#super_getstatic(Ljava/lang/String;Lorg/easymock/asm/Type;)V
+#super_putstatic(Ljava/lang/String;Lorg/easymock/asm/Type;)V
+#getfield(Lorg/easymock/asm/Type;Ljava/lang/String;Lorg/easymock/asm/Type;)V
+#putfield(Lorg/easymock/asm/Type;Ljava/lang/String;Lorg/easymock/asm/Type;)V
+#getstatic(Lorg/easymock/asm/Type;Ljava/lang/String;Lorg/easymock/asm/Type;)V
+#putstatic(Lorg/easymock/asm/Type;Ljava/lang/String;Lorg/easymock/asm/Type;)V
+#super_invoke()V
+#super_invoke(Lorg/easymock/cglib/core/Signature;)V
+#invoke_constructor(Lorg/easymock/asm/Type;)V
+#super_invoke_constructor()V
+#invoke_constructor_this()V
+#invoke_interface(Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/Signature;)V
+#invoke_virtual(Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/Signature;)V
+#invoke_static(Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/Signature;)V
+#invoke_virtual_this(Lorg/easymock/cglib/core/Signature;)V
+#invoke_static_this(Lorg/easymock/cglib/core/Signature;)V
+#invoke_constructor(Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/Signature;)V
+#invoke_constructor_this(Lorg/easymock/cglib/core/Signature;)V
+#super_invoke_constructor(Lorg/easymock/cglib/core/Signature;)V
+#new_instance_this()V
+#new_instance(Lorg/easymock/asm/Type;)V
+#aaload(I)V
+#aaload()V
+#aastore()V
+#athrow()V
+#make_label()Lorg/easymock/asm/Label;
+#make_local()Lorg/easymock/cglib/core/Local;
+#make_local(Lorg/easymock/asm/Type;)Lorg/easymock/cglib/core/Local;
+#checkcast_this()V
+#checkcast(Lorg/easymock/asm/Type;)V
+#instance_of(Lorg/easymock/asm/Type;)V
+#instance_of_this()V
+#process_switch([ILorg/easymock/cglib/core/ProcessSwitchCallback;)V
+#process_switch([ILorg/easymock/cglib/core/ProcessSwitchCallback;Z)V
+#mark(Lorg/easymock/asm/Label;)V
+#push(Z)V
+#not()V
+#throw_exception(Lorg/easymock/asm/Type;Ljava/lang/String;)V
+#box(Lorg/easymock/asm/Type;)V
+#unbox(Lorg/easymock/asm/Type;)V
+#create_arg_array()V
+#zero_or_null(Lorg/easymock/asm/Type;)V
+#unbox_or_zero(Lorg/easymock/asm/Type;)V
+#visitMaxs(II)V
+#invoke(Lorg/easymock/cglib/core/MethodInfo;Lorg/easymock/asm/Type;)V
+#invoke(Lorg/easymock/cglib/core/MethodInfo;)V
@4.1
*#invoke_static(Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/Signature;)V[deprecated]
+#invoke_static(Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/Signature;Z)V
@5.0.0
-###org/easymock/cglib/core/CodeEmitter

+###org/easymock/cglib/core/CodeGenerationException
@3.4
+#<init>(Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;
@5.0.0
-###org/easymock/cglib/core/CodeGenerationException

+###org/easymock/cglib/core/CollectionUtils
@3.4
+#bucket(Ljava/util/Collection;Lorg/easymock/cglib/core/Transformer;)Ljava/util/Map;
+#reverse(Ljava/util/Map;Ljava/util/Map;)V
+#filter(Ljava/util/Collection;Lorg/easymock/cglib/core/Predicate;)Ljava/util/Collection;
+#transform(Ljava/util/Collection;Lorg/easymock/cglib/core/Transformer;)Ljava/util/List;
+#getIndexMap(Ljava/util/List;)Ljava/util/Map;
@5.0.0
-###org/easymock/cglib/core/CollectionUtils

+###org/easymock/cglib/core/Constants
@3.4
@5.0.0
-###org/easymock/cglib/core/Constants

+###org/easymock/cglib/core/Converter
@3.4
+#convert(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/core/Converter

+###org/easymock/cglib/core/Customizer
@3.4
+#customize(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;)V
@5.0.0
-###org/easymock/cglib/core/Customizer

+###org/easymock/cglib/core/DebuggingClassWriter
@3.4
+#<init>(I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#getSuperName()Ljava/lang/String;
+#toByteArray()[B
@5.0.0
-###org/easymock/cglib/core/DebuggingClassWriter

+###org/easymock/cglib/core/DefaultGeneratorStrategy
@3.4
+#<init>()V
+#generate(Lorg/easymock/cglib/core/ClassGenerator;)[B
@5.0.0
-###org/easymock/cglib/core/DefaultGeneratorStrategy

+###org/easymock/cglib/core/DefaultNamingPolicy
@3.4
+#<init>()V
+#getClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/easymock/cglib/core/Predicate;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/core/DefaultNamingPolicy

+###org/easymock/cglib/core/DuplicatesPredicate
@3.4
+#<init>()V
+#evaluate(Ljava/lang/Object;)Z
@4.0
+#<init>(Ljava/util/List;)V
@5.0.0
-###org/easymock/cglib/core/DuplicatesPredicate

+###org/easymock/cglib/core/EmitUtils$ArrayDelimiters
@3.4
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@5.0.0
-###org/easymock/cglib/core/EmitUtils$ArrayDelimiters

+###org/easymock/cglib/core/EmitUtils
@3.4
+#factory_method(Lorg/easymock/cglib/core/ClassEmitter;Lorg/easymock/cglib/core/Signature;)V
+#null_constructor(Lorg/easymock/cglib/core/ClassEmitter;)V
+#process_array(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/ProcessArrayCallback;)V
+#process_arrays(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/ProcessArrayCallback;)V
+#string_switch(Lorg/easymock/cglib/core/CodeEmitter;[Ljava/lang/String;ILorg/easymock/cglib/core/ObjectSwitchCallback;)V
+#load_class_this(Lorg/easymock/cglib/core/CodeEmitter;)V
+#load_class(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;)V
+#push_array(Lorg/easymock/cglib/core/CodeEmitter;[Ljava/lang/Object;)V
+#push_object(Lorg/easymock/cglib/core/CodeEmitter;Ljava/lang/Object;)V
+#hash_code(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;ILorg/easymock/cglib/core/Customizer;)V
+#not_equals(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;Lorg/easymock/asm/Label;Lorg/easymock/cglib/core/Customizer;)V
+#append_string(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/EmitUtils$ArrayDelimiters;Lorg/easymock/cglib/core/Customizer;)V
+#load_method(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/cglib/core/MethodInfo;)V
+#method_switch(Lorg/easymock/cglib/core/CodeEmitter;Ljava/util/List;Lorg/easymock/cglib/core/ObjectSwitchCallback;)V
+#constructor_switch(Lorg/easymock/cglib/core/CodeEmitter;Ljava/util/List;Lorg/easymock/cglib/core/ObjectSwitchCallback;)V
+#wrap_throwable(Lorg/easymock/cglib/core/Block;Lorg/easymock/asm/Type;)V
+#add_properties(Lorg/easymock/cglib/core/ClassEmitter;[Ljava/lang/String;[Lorg/easymock/asm/Type;)V
+#add_property(Lorg/easymock/cglib/core/ClassEmitter;Ljava/lang/String;Lorg/easymock/asm/Type;Ljava/lang/String;)V
+#wrap_undeclared_throwable(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/cglib/core/Block;[Lorg/easymock/asm/Type;Lorg/easymock/asm/Type;)V
+#begin_method(Lorg/easymock/cglib/core/ClassEmitter;Lorg/easymock/cglib/core/MethodInfo;)Lorg/easymock/cglib/core/CodeEmitter;
+#begin_method(Lorg/easymock/cglib/core/ClassEmitter;Lorg/easymock/cglib/core/MethodInfo;I)Lorg/easymock/cglib/core/CodeEmitter;
@3.5
*#hash_code(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;ILorg/easymock/cglib/core/Customizer;)V[deprecated]
+#hash_code(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;ILorg/easymock/cglib/core/internal/CustomizerRegistry;)V
*#not_equals(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;Lorg/easymock/asm/Label;Lorg/easymock/cglib/core/Customizer;)V[deprecated]
+#not_equals(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;Lorg/easymock/asm/Label;Lorg/easymock/cglib/core/internal/CustomizerRegistry;)V
*#append_string(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/EmitUtils$ArrayDelimiters;Lorg/easymock/cglib/core/Customizer;)V[deprecated]
+#append_string(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;Lorg/easymock/cglib/core/EmitUtils$ArrayDelimiters;Lorg/easymock/cglib/core/internal/CustomizerRegistry;)V
@5.0.0
-###org/easymock/cglib/core/EmitUtils

+###org/easymock/cglib/core/GeneratorStrategy
@3.4
+#generate(Lorg/easymock/cglib/core/ClassGenerator;)[B
+#equals(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/core/GeneratorStrategy

+###org/easymock/cglib/core/KeyFactory$Generator
@3.4
+#<init>()V
+#setCustomizer(Lorg/easymock/cglib/core/Customizer;)V
+#setInterface(Ljava/lang/Class;)V
+#create()Lorg/easymock/cglib/core/KeyFactory;
+#setHashConstant(I)V
+#setHashMultiplier(I)V
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@3.5
*#setCustomizer(Lorg/easymock/cglib/core/Customizer;)V[deprecated]
+#addCustomizer(Lorg/easymock/cglib/core/KeyFactoryCustomizer;)V
+#getCustomizers(Ljava/lang/Class;)Ljava/util/List;
@5.0.0
-###org/easymock/cglib/core/KeyFactory$Generator

+###org/easymock/cglib/core/KeyFactory
@3.4
+#create(Ljava/lang/Class;)Lorg/easymock/cglib/core/KeyFactory;
+#create(Ljava/lang/Class;Lorg/easymock/cglib/core/Customizer;)Lorg/easymock/cglib/core/KeyFactory;
+#create(Ljava/lang/ClassLoader;Ljava/lang/Class;Lorg/easymock/cglib/core/Customizer;)Lorg/easymock/cglib/core/KeyFactory;
@3.5
+#create(Ljava/lang/Class;Lorg/easymock/cglib/core/KeyFactoryCustomizer;Ljava/util/List;)Lorg/easymock/cglib/core/KeyFactory;
+#create(Ljava/lang/ClassLoader;Ljava/lang/Class;Lorg/easymock/cglib/core/KeyFactoryCustomizer;Ljava/util/List;)Lorg/easymock/cglib/core/KeyFactory;
@5.0.0
-###org/easymock/cglib/core/KeyFactory

+###org/easymock/cglib/core/Local
@3.4
+#<init>(ILorg/easymock/asm/Type;)V
+#getIndex()I
+#getType()Lorg/easymock/asm/Type;
@5.0.0
-###org/easymock/cglib/core/Local

+###org/easymock/cglib/core/LocalVariablesSorter
@3.4
+#<init>(ILjava/lang/String;Lorg/easymock/asm/MethodVisitor;)V
+#<init>(Lorg/easymock/cglib/core/LocalVariablesSorter;)V
+#visitVarInsn(II)V
+#visitIincInsn(II)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/easymock/asm/Label;Lorg/easymock/asm/Label;I)V
@5.0.0
-###org/easymock/cglib/core/LocalVariablesSorter

+###org/easymock/cglib/core/MethodInfo
@3.4
+#getClassInfo()Lorg/easymock/cglib/core/ClassInfo;
+#getModifiers()I
+#getSignature()Lorg/easymock/cglib/core/Signature;
+#getExceptionTypes()[Lorg/easymock/asm/Type;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@5.0.0
-###org/easymock/cglib/core/MethodInfo

+###org/easymock/cglib/core/MethodInfoTransformer
@3.4
+#<init>()V
+#getInstance()Lorg/easymock/cglib/core/MethodInfoTransformer;
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/core/MethodInfoTransformer

+###org/easymock/cglib/core/MethodWrapper$MethodWrapperKey
@3.4
+#newInstance(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/core/MethodWrapper$MethodWrapperKey

+###org/easymock/cglib/core/MethodWrapper
@3.4
+#create(Ljava/lang/reflect/Method;)Ljava/lang/Object;
+#createSet(Ljava/util/Collection;)Ljava/util/Set;
@5.0.0
-###org/easymock/cglib/core/MethodWrapper

+###org/easymock/cglib/core/NamingPolicy
@3.4
+#getClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/easymock/cglib/core/Predicate;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/core/NamingPolicy

+###org/easymock/cglib/core/ObjectSwitchCallback
@3.4
+#processCase(Ljava/lang/Object;Lorg/easymock/asm/Label;)V
+#processDefault()V
@5.0.0
-###org/easymock/cglib/core/ObjectSwitchCallback

+###org/easymock/cglib/core/Predicate
@3.4
+#evaluate(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/core/Predicate

+###org/easymock/cglib/core/ProcessArrayCallback
@3.4
+#processElement(Lorg/easymock/asm/Type;)V
@5.0.0
-###org/easymock/cglib/core/ProcessArrayCallback

+###org/easymock/cglib/core/ProcessSwitchCallback
@3.4
+#processCase(ILorg/easymock/asm/Label;)V
+#processDefault()V
@5.0.0
-###org/easymock/cglib/core/ProcessSwitchCallback

+###org/easymock/cglib/core/ReflectUtils
@3.4
+#getExceptionTypes(Ljava/lang/reflect/Member;)[Lorg/easymock/asm/Type;
+#getSignature(Ljava/lang/reflect/Member;)Lorg/easymock/cglib/core/Signature;
+#findConstructor(Ljava/lang/String;)Ljava/lang/reflect/Constructor;
+#findConstructor(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Constructor;
+#findMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;
+#findMethod(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/reflect/Method;
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#getConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
+#getNames([Ljava/lang/Class;)[Ljava/lang/String;
+#getClasses([Ljava/lang/Object;)[Ljava/lang/Class;
+#findNewInstance(Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#getPropertyMethods([Ljava/beans/PropertyDescriptor;ZZ)[Ljava/lang/reflect/Method;
+#getBeanProperties(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
+#getBeanGetters(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
+#getBeanSetters(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
+#findDeclaredMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#addAllMethods(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;
+#addAllInterfaces(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;
+#findInterfaceMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;
+#findPackageProtected([Ljava/lang/Class;)I
+#getMethodInfo(Ljava/lang/reflect/Member;I)Lorg/easymock/cglib/core/MethodInfo;
+#getMethodInfo(Ljava/lang/reflect/Member;)Lorg/easymock/cglib/core/MethodInfo;
+#getClassInfo(Ljava/lang/Class;)Lorg/easymock/cglib/core/ClassInfo;
+#findMethods([Ljava/lang/String;[Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;
@3.5
+#getProtectionDomain(Ljava/lang/Class;)Ljava/security/ProtectionDomain;
+#defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;
@5.0.0
-###org/easymock/cglib/core/ReflectUtils

+###org/easymock/cglib/core/RejectModifierPredicate
@3.4
+#<init>(I)V
+#evaluate(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/core/RejectModifierPredicate

+###org/easymock/cglib/core/Signature
@3.4
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/easymock/asm/Type;[Lorg/easymock/asm/Type;)V
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getReturnType()Lorg/easymock/asm/Type;
+#getArgumentTypes()[Lorg/easymock/asm/Type;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-###org/easymock/cglib/core/Signature

+###org/easymock/cglib/core/TinyBitSet
@3.4
+#<init>()V
+#length()I
+#cardinality()I
+#get(I)Z
+#set(I)V
+#clear(I)V
@5.0.0
-###org/easymock/cglib/core/TinyBitSet

+###org/easymock/cglib/core/Transformer
@3.4
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/core/Transformer

+###org/easymock/cglib/core/TypeUtils
@3.4
+#getType(Ljava/lang/String;)Lorg/easymock/asm/Type;
+#isFinal(I)Z
+#isStatic(I)Z
+#isProtected(I)Z
+#isPublic(I)Z
+#isAbstract(I)Z
+#isInterface(I)Z
+#isPrivate(I)Z
+#isSynthetic(I)Z
+#isBridge(I)Z
+#getPackageName(Lorg/easymock/asm/Type;)Ljava/lang/String;
+#getPackageName(Ljava/lang/String;)Ljava/lang/String;
+#upperFirst(Ljava/lang/String;)Ljava/lang/String;
+#getClassName(Lorg/easymock/asm/Type;)Ljava/lang/String;
+#add([Lorg/easymock/asm/Type;Lorg/easymock/asm/Type;)[Lorg/easymock/asm/Type;
+#add([Lorg/easymock/asm/Type;[Lorg/easymock/asm/Type;)[Lorg/easymock/asm/Type;
+#fromInternalName(Ljava/lang/String;)Lorg/easymock/asm/Type;
+#fromInternalNames([Ljava/lang/String;)[Lorg/easymock/asm/Type;
+#getStackSize([Lorg/easymock/asm/Type;)I
+#toInternalNames([Lorg/easymock/asm/Type;)[Ljava/lang/String;
+#parseSignature(Ljava/lang/String;)Lorg/easymock/cglib/core/Signature;
+#parseType(Ljava/lang/String;)Lorg/easymock/asm/Type;
+#parseTypes(Ljava/lang/String;)[Lorg/easymock/asm/Type;
+#parseConstructor([Lorg/easymock/asm/Type;)Lorg/easymock/cglib/core/Signature;
+#parseConstructor(Ljava/lang/String;)Lorg/easymock/cglib/core/Signature;
+#getBoxedType(Lorg/easymock/asm/Type;)Lorg/easymock/asm/Type;
+#getUnboxedType(Lorg/easymock/asm/Type;)Lorg/easymock/asm/Type;
+#isArray(Lorg/easymock/asm/Type;)Z
+#getComponentType(Lorg/easymock/asm/Type;)Lorg/easymock/asm/Type;
+#isPrimitive(Lorg/easymock/asm/Type;)Z
+#emulateClassGetName(Lorg/easymock/asm/Type;)Ljava/lang/String;
+#isConstructor(Lorg/easymock/cglib/core/MethodInfo;)Z
+#getTypes([Ljava/lang/Class;)[Lorg/easymock/asm/Type;
+#ICONST(I)I
+#LCONST(J)I
+#FCONST(F)I
+#DCONST(D)I
+#NEWARRAY(Lorg/easymock/asm/Type;)I
+#escapeType(Ljava/lang/String;)Ljava/lang/String;
@5.0.0
-###org/easymock/cglib/core/TypeUtils

+###org/easymock/cglib/core/VisibilityPredicate
@3.4
+#<init>(Ljava/lang/Class;Z)V
+#evaluate(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/core/VisibilityPredicate

+###org/easymock/cglib/proxy/Callback
@3.4
@5.0.0
-###org/easymock/cglib/proxy/Callback

+###org/easymock/cglib/proxy/CallbackFilter
@3.4
+#accept(Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/proxy/CallbackFilter

+###org/easymock/cglib/proxy/CallbackGenerator$Context
@3.4
+#getClassLoader()Ljava/lang/ClassLoader;
+#beginMethod(Lorg/easymock/cglib/core/ClassEmitter;Lorg/easymock/cglib/core/MethodInfo;)Lorg/easymock/cglib/core/CodeEmitter;
+#getOriginalModifiers(Lorg/easymock/cglib/core/MethodInfo;)I
+#getIndex(Lorg/easymock/cglib/core/MethodInfo;)I
+#emitCallback(Lorg/easymock/cglib/core/CodeEmitter;I)V
+#getImplSignature(Lorg/easymock/cglib/core/MethodInfo;)Lorg/easymock/cglib/core/Signature;
+#emitInvoke(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/cglib/core/MethodInfo;)V
@3.5
+#emitLoadArgsAndInvoke(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/cglib/core/MethodInfo;)V
-#emitInvoke(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/cglib/core/MethodInfo;)V
@5.0.0
-###org/easymock/cglib/proxy/CallbackGenerator$Context

+###org/easymock/cglib/proxy/CallbackHelper
@3.4
+#<init>(Ljava/lang/Class;[Ljava/lang/Class;)V
+#getCallbacks()[Lorg/easymock/cglib/proxy/Callback;
+#getCallbackTypes()[Ljava/lang/Class;
+#accept(Ljava/lang/reflect/Method;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/proxy/CallbackHelper

+###org/easymock/cglib/proxy/Dispatcher
@3.4
+#loadObject()Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/Dispatcher

+###org/easymock/cglib/proxy/Enhancer$EnhancerKey
@3.4
+#newInstance(Ljava/lang/String;[Ljava/lang/String;Lorg/easymock/cglib/proxy/CallbackFilter;[Lorg/easymock/asm/Type;ZZLjava/lang/Long;)Ljava/lang/Object;
@3.5
+#newInstance(Ljava/lang/String;[Ljava/lang/String;Lorg/easymock/cglib/core/WeakCacheKey;[Lorg/easymock/asm/Type;ZZLjava/lang/Long;)Ljava/lang/Object;
-#newInstance(Ljava/lang/String;[Ljava/lang/String;Lorg/easymock/cglib/proxy/CallbackFilter;[Lorg/easymock/asm/Type;ZZLjava/lang/Long;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/Enhancer$EnhancerKey

+###org/easymock/cglib/proxy/Enhancer
@3.4
+#<init>()V
+#setSuperclass(Ljava/lang/Class;)V
+#setInterfaces([Ljava/lang/Class;)V
+#setCallbackFilter(Lorg/easymock/cglib/proxy/CallbackFilter;)V
+#setCallback(Lorg/easymock/cglib/proxy/Callback;)V
+#setCallbacks([Lorg/easymock/cglib/proxy/Callback;)V
+#setUseFactory(Z)V
+#setInterceptDuringConstruction(Z)V
+#setCallbackType(Ljava/lang/Class;)V
+#setCallbackTypes([Ljava/lang/Class;)V
+#create()Ljava/lang/Object;
+#create([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#createClass()Ljava/lang/Class;
+#setSerialVersionUID(Ljava/lang/Long;)V
+#getMethods(Ljava/lang/Class;[Ljava/lang/Class;Ljava/util/List;)V
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
+#registerCallbacks(Ljava/lang/Class;[Lorg/easymock/cglib/proxy/Callback;)V
+#registerStaticCallbacks(Ljava/lang/Class;[Lorg/easymock/cglib/proxy/Callback;)V
+#isEnhanced(Ljava/lang/Class;)Z
+#create(Ljava/lang/Class;Lorg/easymock/cglib/proxy/Callback;)Ljava/lang/Object;
+#create(Ljava/lang/Class;[Ljava/lang/Class;Lorg/easymock/cglib/proxy/Callback;)Ljava/lang/Object;
+#create(Ljava/lang/Class;[Ljava/lang/Class;Lorg/easymock/cglib/proxy/CallbackFilter;[Lorg/easymock/cglib/proxy/Callback;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/Enhancer

+###org/easymock/cglib/proxy/Factory
@3.4
+#newInstance(Lorg/easymock/cglib/proxy/Callback;)Ljava/lang/Object;
+#newInstance([Lorg/easymock/cglib/proxy/Callback;)Ljava/lang/Object;
+#newInstance([Ljava/lang/Class;[Ljava/lang/Object;[Lorg/easymock/cglib/proxy/Callback;)Ljava/lang/Object;
+#getCallback(I)Lorg/easymock/cglib/proxy/Callback;
+#setCallback(ILorg/easymock/cglib/proxy/Callback;)V
+#setCallbacks([Lorg/easymock/cglib/proxy/Callback;)V
+#getCallbacks()[Lorg/easymock/cglib/proxy/Callback;
@5.0.0
-###org/easymock/cglib/proxy/Factory

+###org/easymock/cglib/proxy/FixedValue
@3.4
+#loadObject()Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/FixedValue

+###org/easymock/cglib/proxy/InterfaceMaker
@3.4
+#<init>()V
+#add(Lorg/easymock/cglib/core/Signature;[Lorg/easymock/asm/Type;)V
+#add(Ljava/lang/reflect/Method;)V
+#add(Ljava/lang/Class;)V
+#create()Ljava/lang/Class;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/proxy/InterfaceMaker

+###org/easymock/cglib/proxy/InvocationHandler
@3.4
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/InvocationHandler

+###org/easymock/cglib/proxy/LazyLoader
@3.4
+#loadObject()Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/LazyLoader

+###org/easymock/cglib/proxy/MethodInterceptor
@3.4
+#intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/easymock/cglib/proxy/MethodProxy;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/MethodInterceptor

+###org/easymock/cglib/proxy/MethodProxy
@3.4
+#create(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/cglib/proxy/MethodProxy;
+#getSignature()Lorg/easymock/cglib/core/Signature;
+#getSuperName()Ljava/lang/String;
+#getSuperIndex()I
+#find(Ljava/lang/Class;Lorg/easymock/cglib/core/Signature;)Lorg/easymock/cglib/proxy/MethodProxy;
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeSuper(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/MethodProxy

+###org/easymock/cglib/proxy/Mixin$Generator
@3.4
+#<init>()V
+#setStyle(I)V
+#setClasses([Ljava/lang/Class;)V
+#setDelegates([Ljava/lang/Object;)V
+#create()Lorg/easymock/cglib/proxy/Mixin;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/proxy/Mixin$Generator

+###org/easymock/cglib/proxy/Mixin
@3.4
+#<init>()V
+#newInstance([Ljava/lang/Object;)Lorg/easymock/cglib/proxy/Mixin;
+#create([Ljava/lang/Object;)Lorg/easymock/cglib/proxy/Mixin;
+#create([Ljava/lang/Class;[Ljava/lang/Object;)Lorg/easymock/cglib/proxy/Mixin;
+#createBean([Ljava/lang/Object;)Lorg/easymock/cglib/proxy/Mixin;
+#createBean(Ljava/lang/ClassLoader;[Ljava/lang/Object;)Lorg/easymock/cglib/proxy/Mixin;
+#getClasses([Ljava/lang/Object;)[Ljava/lang/Class;
@5.0.0
-###org/easymock/cglib/proxy/Mixin

+###org/easymock/cglib/proxy/NoOp
@3.4
@5.0.0
-###org/easymock/cglib/proxy/NoOp

+###org/easymock/cglib/proxy/Proxy
@3.4
+#getInvocationHandler(Ljava/lang/Object;)Lorg/easymock/cglib/proxy/InvocationHandler;
+#getProxyClass(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;
+#isProxyClass(Ljava/lang/Class;)Z
+#newProxyInstance(Ljava/lang/ClassLoader;[Ljava/lang/Class;Lorg/easymock/cglib/proxy/InvocationHandler;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/Proxy

+###org/easymock/cglib/proxy/ProxyRefDispatcher
@3.4
+#loadObject(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/proxy/ProxyRefDispatcher

+###org/easymock/cglib/proxy/UndeclaredThrowableException
@3.4
+#<init>(Ljava/lang/Throwable;)V
+#getUndeclaredThrowable()Ljava/lang/Throwable;
@5.0.0
-###org/easymock/cglib/proxy/UndeclaredThrowableException

+###org/easymock/cglib/reflect/ConstructorDelegate$Generator
@3.4
+#<init>()V
+#setInterface(Ljava/lang/Class;)V
+#setTargetClass(Ljava/lang/Class;)V
+#create()Lorg/easymock/cglib/reflect/ConstructorDelegate;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/reflect/ConstructorDelegate$Generator

+###org/easymock/cglib/reflect/ConstructorDelegate
@3.4
+#create(Ljava/lang/Class;Ljava/lang/Class;)Lorg/easymock/cglib/reflect/ConstructorDelegate;
@5.0.0
-###org/easymock/cglib/reflect/ConstructorDelegate

+###org/easymock/cglib/reflect/FastClass$Generator
@3.4
+#<init>()V
+#setType(Ljava/lang/Class;)V
+#create()Lorg/easymock/cglib/reflect/FastClass;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/reflect/FastClass$Generator

+###org/easymock/cglib/reflect/FastClass
@3.4
+#create(Ljava/lang/Class;)Lorg/easymock/cglib/reflect/FastClass;
+#create(Ljava/lang/ClassLoader;Ljava/lang/Class;)Lorg/easymock/cglib/reflect/FastClass;
+#invoke(Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance()Ljava/lang/Object;
+#newInstance([Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#getMethod(Ljava/lang/reflect/Method;)Lorg/easymock/cglib/reflect/FastMethod;
+#getConstructor(Ljava/lang/reflect/Constructor;)Lorg/easymock/cglib/reflect/FastConstructor;
+#getMethod(Ljava/lang/String;[Ljava/lang/Class;)Lorg/easymock/cglib/reflect/FastMethod;
+#getConstructor([Ljava/lang/Class;)Lorg/easymock/cglib/reflect/FastConstructor;
+#getName()Ljava/lang/String;
+#getJavaClass()Ljava/lang/Class;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getIndex(Ljava/lang/String;[Ljava/lang/Class;)I
+#getIndex([Ljava/lang/Class;)I
+#invoke(ILjava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(I[Ljava/lang/Object;)Ljava/lang/Object;
+#getIndex(Lorg/easymock/cglib/core/Signature;)I
+#getMaxIndex()I
@5.0.0
-###org/easymock/cglib/reflect/FastClass

+###org/easymock/cglib/reflect/FastConstructor
@3.4
+#getParameterTypes()[Ljava/lang/Class;
+#getExceptionTypes()[Ljava/lang/Class;
+#newInstance()Ljava/lang/Object;
+#newInstance([Ljava/lang/Object;)Ljava/lang/Object;
+#getJavaConstructor()Ljava/lang/reflect/Constructor;
@5.0.0
-###org/easymock/cglib/reflect/FastConstructor

+###org/easymock/cglib/reflect/FastMember
@3.4
+#getParameterTypes()[Ljava/lang/Class;
+#getExceptionTypes()[Ljava/lang/Class;
+#getIndex()I
+#getName()Ljava/lang/String;
+#getDeclaringClass()Ljava/lang/Class;
+#getModifiers()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@5.0.0
-###org/easymock/cglib/reflect/FastMember

+###org/easymock/cglib/reflect/FastMethod
@3.4
+#getReturnType()Ljava/lang/Class;
+#getParameterTypes()[Ljava/lang/Class;
+#getExceptionTypes()[Ljava/lang/Class;
+#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#getJavaMethod()Ljava/lang/reflect/Method;
@5.0.0
-###org/easymock/cglib/reflect/FastMethod

+###org/easymock/cglib/reflect/MethodDelegate$Generator
@3.4
+#<init>()V
+#setTarget(Ljava/lang/Object;)V
+#setTargetClass(Ljava/lang/Class;)V
+#setMethodName(Ljava/lang/String;)V
+#setInterface(Ljava/lang/Class;)V
+#create()Lorg/easymock/cglib/reflect/MethodDelegate;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/reflect/MethodDelegate$Generator

+###org/easymock/cglib/reflect/MethodDelegate
@3.4
+#<init>()V
+#createStatic(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/easymock/cglib/reflect/MethodDelegate;
+#create(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Lorg/easymock/cglib/reflect/MethodDelegate;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getTarget()Ljava/lang/Object;
+#newInstance(Ljava/lang/Object;)Lorg/easymock/cglib/reflect/MethodDelegate;
@5.0.0
-###org/easymock/cglib/reflect/MethodDelegate

+###org/easymock/cglib/reflect/MulticastDelegate$Generator
@3.4
+#<init>()V
+#setInterface(Ljava/lang/Class;)V
+#create()Lorg/easymock/cglib/reflect/MulticastDelegate;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/reflect/MulticastDelegate$Generator

+###org/easymock/cglib/reflect/MulticastDelegate
@3.4
+#getTargets()Ljava/util/List;
+#add(Ljava/lang/Object;)Lorg/easymock/cglib/reflect/MulticastDelegate;
+#remove(Ljava/lang/Object;)Lorg/easymock/cglib/reflect/MulticastDelegate;
+#newInstance()Lorg/easymock/cglib/reflect/MulticastDelegate;
+#create(Ljava/lang/Class;)Lorg/easymock/cglib/reflect/MulticastDelegate;
@5.0.0
-###org/easymock/cglib/reflect/MulticastDelegate

+###org/easymock/cglib/transform/AbstractClassFilterTransformer
@3.4
+#setTarget(Lorg/easymock/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/asm/MethodVisitor;
+#visitEnd()V
@5.0.0
-###org/easymock/cglib/transform/AbstractClassFilterTransformer

+###org/easymock/cglib/transform/AbstractClassLoader
@3.4
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;
@5.0.0
-###org/easymock/cglib/transform/AbstractClassLoader

+###org/easymock/cglib/transform/AbstractClassTransformer
@3.4
+#setTarget(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/transform/AbstractClassTransformer

+###org/easymock/cglib/transform/AbstractProcessTask
@3.4
+#<init>()V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#execute()V
@5.0.0
-###org/easymock/cglib/transform/AbstractProcessTask

+###org/easymock/cglib/transform/AbstractTransformTask
@3.4
+#<init>()V
+#setVerbose(Z)V
@5.0.0
-###org/easymock/cglib/transform/AbstractTransformTask

+###org/easymock/cglib/transform/AnnotationVisitorTee
@3.4
+#getInstance(Lorg/easymock/asm/AnnotationVisitor;Lorg/easymock/asm/AnnotationVisitor;)Lorg/easymock/asm/AnnotationVisitor;
+#<init>(Lorg/easymock/asm/AnnotationVisitor;Lorg/easymock/asm/AnnotationVisitor;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/easymock/asm/AnnotationVisitor;
+#visitEnd()V
@5.0.0
-###org/easymock/cglib/transform/AnnotationVisitorTee

+###org/easymock/cglib/transform/ClassEmitterTransformer
@3.4
+#<init>()V
@5.0.0
-###org/easymock/cglib/transform/ClassEmitterTransformer

+###org/easymock/cglib/transform/ClassFilter
@3.4
+#accept(Ljava/lang/String;)Z
@5.0.0
-###org/easymock/cglib/transform/ClassFilter

+###org/easymock/cglib/transform/ClassFilterTransformer
@3.4
+#<init>(Lorg/easymock/cglib/transform/ClassFilter;Lorg/easymock/cglib/transform/ClassTransformer;)V
@5.0.0
-###org/easymock/cglib/transform/ClassFilterTransformer

+###org/easymock/cglib/transform/ClassReaderGenerator
@3.4
+#<init>(Lorg/easymock/asm/ClassReader;I)V
+#<init>(Lorg/easymock/asm/ClassReader;[Lorg/easymock/asm/Attribute;I)V
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/transform/ClassReaderGenerator

+###org/easymock/cglib/transform/ClassTransformer
@3.4
+#<init>()V
+#<init>(I)V
+#setTarget(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/transform/ClassTransformer

+###org/easymock/cglib/transform/ClassTransformerChain
@3.4
+#<init>([Lorg/easymock/cglib/transform/ClassTransformer;)V
+#setTarget(Lorg/easymock/asm/ClassVisitor;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/asm/MethodVisitor;
+#toString()Ljava/lang/String;
@5.0.0
-###org/easymock/cglib/transform/ClassTransformerChain

+###org/easymock/cglib/transform/ClassTransformerFactory
@3.4
+#newInstance()Lorg/easymock/cglib/transform/ClassTransformer;
@5.0.0
-###org/easymock/cglib/transform/ClassTransformerFactory

+###org/easymock/cglib/transform/ClassTransformerTee
@3.4
+#<init>(Lorg/easymock/asm/ClassVisitor;)V
+#setTarget(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/transform/ClassTransformerTee

+###org/easymock/cglib/transform/ClassVisitorTee
@3.4
+#<init>(Lorg/easymock/asm/ClassVisitor;Lorg/easymock/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/asm/MethodVisitor;
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
@3.5
+#visitTypeAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
@5.0.0
-###org/easymock/cglib/transform/ClassVisitorTee

+###org/easymock/cglib/transform/FieldVisitorTee
@3.4
+#<init>(Lorg/easymock/asm/FieldVisitor;Lorg/easymock/asm/FieldVisitor;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
+#visitEnd()V
@3.5
+#visitTypeAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
@5.0.0
-###org/easymock/cglib/transform/FieldVisitorTee

+###org/easymock/cglib/transform/MethodFilter
@3.4
+#accept(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Z
@5.0.0
-###org/easymock/cglib/transform/MethodFilter

+###org/easymock/cglib/transform/MethodFilterTransformer
@3.4
+#<init>(Lorg/easymock/cglib/transform/MethodFilter;Lorg/easymock/cglib/transform/ClassTransformer;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/asm/MethodVisitor;
+#setTarget(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/transform/MethodFilterTransformer

+###org/easymock/cglib/transform/MethodVisitorTee
@3.4
+#<init>(Lorg/easymock/asm/MethodVisitor;Lorg/easymock/asm/MethodVisitor;)V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitAnnotationDefault()Lorg/easymock/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
+#visitCode()V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILorg/easymock/asm/Label;)V
+#visitLabel(Lorg/easymock/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/easymock/asm/Label;[Lorg/easymock/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/easymock/asm/Label;[I[Lorg/easymock/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/easymock/asm/Label;Lorg/easymock/asm/Label;Lorg/easymock/asm/Label;Ljava/lang/String;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/easymock/asm/Label;Lorg/easymock/asm/Label;I)V
+#visitLineNumber(ILorg/easymock/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@3.5
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitParameter(Ljava/lang/String;I)V
+#visitTypeAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/asm/Handle;[Ljava/lang/Object;)V
+#visitInsnAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitTryCatchAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitLocalVariableAnnotation(ILorg/easymock/asm/TypePath;[Lorg/easymock/asm/Label;[Lorg/easymock/asm/Label;[ILjava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
@5.0.0
-###org/easymock/cglib/transform/MethodVisitorTee

+###org/easymock/cglib/transform/TransformingClassGenerator
@3.4
+#<init>(Lorg/easymock/cglib/core/ClassGenerator;Lorg/easymock/cglib/transform/ClassTransformer;)V
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/transform/TransformingClassGenerator

+###org/easymock/cglib/transform/TransformingClassLoader
@3.4
+#<init>(Ljava/lang/ClassLoader;Lorg/easymock/cglib/transform/ClassFilter;Lorg/easymock/cglib/transform/ClassTransformerFactory;)V
@5.0.0
-###org/easymock/cglib/transform/TransformingClassLoader

+###org/easymock/cglib/transform/impl/AbstractInterceptFieldCallback
@3.4
+#<init>()V
+#writeInt(Ljava/lang/Object;Ljava/lang/String;II)I
+#writeChar(Ljava/lang/Object;Ljava/lang/String;CC)C
+#writeByte(Ljava/lang/Object;Ljava/lang/String;BB)B
+#writeBoolean(Ljava/lang/Object;Ljava/lang/String;ZZ)Z
+#writeShort(Ljava/lang/Object;Ljava/lang/String;SS)S
+#writeFloat(Ljava/lang/Object;Ljava/lang/String;FF)F
+#writeDouble(Ljava/lang/Object;Ljava/lang/String;DD)D
+#writeLong(Ljava/lang/Object;Ljava/lang/String;JJ)J
+#writeObject(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#readInt(Ljava/lang/Object;Ljava/lang/String;I)I
+#readChar(Ljava/lang/Object;Ljava/lang/String;C)C
+#readByte(Ljava/lang/Object;Ljava/lang/String;B)B
+#readBoolean(Ljava/lang/Object;Ljava/lang/String;Z)Z
+#readShort(Ljava/lang/Object;Ljava/lang/String;S)S
+#readFloat(Ljava/lang/Object;Ljava/lang/String;F)F
+#readDouble(Ljava/lang/Object;Ljava/lang/String;D)D
+#readLong(Ljava/lang/Object;Ljava/lang/String;J)J
+#readObject(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/transform/impl/AbstractInterceptFieldCallback

+###org/easymock/cglib/transform/impl/AccessFieldTransformer$Callback
@3.4
+#getPropertyName(Lorg/easymock/asm/Type;Ljava/lang/String;)Ljava/lang/String;
@5.0.0
-###org/easymock/cglib/transform/impl/AccessFieldTransformer$Callback

+###org/easymock/cglib/transform/impl/AccessFieldTransformer
@3.4
+#<init>(Lorg/easymock/cglib/transform/impl/AccessFieldTransformer$Callback;)V
+#declare_field(ILjava/lang/String;Lorg/easymock/asm/Type;Ljava/lang/Object;)V
@5.0.0
-###org/easymock/cglib/transform/impl/AccessFieldTransformer

+###org/easymock/cglib/transform/impl/AddDelegateTransformer
@3.4
+#<init>([Ljava/lang/Class;Ljava/lang/Class;)V
+#begin_class(IILjava/lang/String;Lorg/easymock/asm/Type;[Lorg/easymock/asm/Type;Ljava/lang/String;)V
+#begin_method(ILorg/easymock/cglib/core/Signature;[Lorg/easymock/asm/Type;)Lorg/easymock/cglib/core/CodeEmitter;
@5.0.0
-###org/easymock/cglib/transform/impl/AddDelegateTransformer

+###org/easymock/cglib/transform/impl/AddInitTransformer
@3.4
+#<init>(Ljava/lang/reflect/Method;)V
+#begin_method(ILorg/easymock/cglib/core/Signature;[Lorg/easymock/asm/Type;)Lorg/easymock/cglib/core/CodeEmitter;
@5.0.0
-###org/easymock/cglib/transform/impl/AddInitTransformer

+###org/easymock/cglib/transform/impl/AddPropertyTransformer
@3.4
+#<init>(Ljava/util/Map;)V
+#<init>([Ljava/lang/String;[Lorg/easymock/asm/Type;)V
+#end_class()V
@5.0.0
-###org/easymock/cglib/transform/impl/AddPropertyTransformer

+###org/easymock/cglib/transform/impl/AddStaticInitTransformer
@3.4
+#<init>(Ljava/lang/reflect/Method;)V
@5.0.0
-###org/easymock/cglib/transform/impl/AddStaticInitTransformer

+###org/easymock/cglib/transform/impl/FieldProvider
@3.4
+#getFieldNames()[Ljava/lang/String;
+#getFieldTypes()[Ljava/lang/Class;
+#setField(ILjava/lang/Object;)V
+#getField(I)Ljava/lang/Object;
+#setField(Ljava/lang/String;Ljava/lang/Object;)V
+#getField(Ljava/lang/String;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/transform/impl/FieldProvider

+###org/easymock/cglib/transform/impl/FieldProviderTransformer
@3.4
+#<init>()V
+#begin_class(IILjava/lang/String;Lorg/easymock/asm/Type;[Lorg/easymock/asm/Type;Ljava/lang/String;)V
+#declare_field(ILjava/lang/String;Lorg/easymock/asm/Type;Ljava/lang/Object;)V
+#end_class()V
@5.0.0
-###org/easymock/cglib/transform/impl/FieldProviderTransformer

+###org/easymock/cglib/transform/impl/InterceptFieldCallback
@3.4
+#writeInt(Ljava/lang/Object;Ljava/lang/String;II)I
+#writeChar(Ljava/lang/Object;Ljava/lang/String;CC)C
+#writeByte(Ljava/lang/Object;Ljava/lang/String;BB)B
+#writeBoolean(Ljava/lang/Object;Ljava/lang/String;ZZ)Z
+#writeShort(Ljava/lang/Object;Ljava/lang/String;SS)S
+#writeFloat(Ljava/lang/Object;Ljava/lang/String;FF)F
+#writeDouble(Ljava/lang/Object;Ljava/lang/String;DD)D
+#writeLong(Ljava/lang/Object;Ljava/lang/String;JJ)J
+#writeObject(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#readInt(Ljava/lang/Object;Ljava/lang/String;I)I
+#readChar(Ljava/lang/Object;Ljava/lang/String;C)C
+#readByte(Ljava/lang/Object;Ljava/lang/String;B)B
+#readBoolean(Ljava/lang/Object;Ljava/lang/String;Z)Z
+#readShort(Ljava/lang/Object;Ljava/lang/String;S)S
+#readFloat(Ljava/lang/Object;Ljava/lang/String;F)F
+#readDouble(Ljava/lang/Object;Ljava/lang/String;D)D
+#readLong(Ljava/lang/Object;Ljava/lang/String;J)J
+#readObject(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/transform/impl/InterceptFieldCallback

+###org/easymock/cglib/transform/impl/InterceptFieldEnabled
@3.4
+#setInterceptFieldCallback(Lorg/easymock/cglib/transform/impl/InterceptFieldCallback;)V
+#getInterceptFieldCallback()Lorg/easymock/cglib/transform/impl/InterceptFieldCallback;
@5.0.0
-###org/easymock/cglib/transform/impl/InterceptFieldEnabled

+###org/easymock/cglib/transform/impl/InterceptFieldFilter
@3.4
+#acceptRead(Lorg/easymock/asm/Type;Ljava/lang/String;)Z
+#acceptWrite(Lorg/easymock/asm/Type;Ljava/lang/String;)Z
@5.0.0
-###org/easymock/cglib/transform/impl/InterceptFieldFilter

+###org/easymock/cglib/transform/impl/InterceptFieldTransformer
@3.4
+#<init>(Lorg/easymock/cglib/transform/impl/InterceptFieldFilter;)V
+#begin_class(IILjava/lang/String;Lorg/easymock/asm/Type;[Lorg/easymock/asm/Type;Ljava/lang/String;)V
+#declare_field(ILjava/lang/String;Lorg/easymock/asm/Type;Ljava/lang/Object;)V
+#begin_method(ILorg/easymock/cglib/core/Signature;[Lorg/easymock/asm/Type;)Lorg/easymock/cglib/core/CodeEmitter;
@5.0.0
-###org/easymock/cglib/transform/impl/InterceptFieldTransformer

+###org/easymock/cglib/transform/impl/UndeclaredThrowableStrategy
@3.4
+#<init>(Ljava/lang/Class;)V
@5.0.0
-###org/easymock/cglib/transform/impl/UndeclaredThrowableStrategy

+###org/easymock/cglib/transform/impl/UndeclaredThrowableTransformer
@3.4
+#<init>(Ljava/lang/Class;)V
+#begin_method(ILorg/easymock/cglib/core/Signature;[Lorg/easymock/asm/Type;)Lorg/easymock/cglib/core/CodeEmitter;
@5.0.0
-###org/easymock/cglib/transform/impl/UndeclaredThrowableTransformer

+###org/easymock/cglib/util/ParallelSorter$Generator
@3.4
+#<init>()V
+#setArrays([Ljava/lang/Object;)V
+#create()Lorg/easymock/cglib/util/ParallelSorter;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/util/ParallelSorter$Generator

+###org/easymock/cglib/util/ParallelSorter
@3.4
+#newInstance([Ljava/lang/Object;)Lorg/easymock/cglib/util/ParallelSorter;
+#create([Ljava/lang/Object;)Lorg/easymock/cglib/util/ParallelSorter;
+#quickSort(I)V
+#quickSort(III)V
+#quickSort(ILjava/util/Comparator;)V
+#quickSort(IIILjava/util/Comparator;)V
+#mergeSort(I)V
+#mergeSort(III)V
+#mergeSort(ILjava/util/Comparator;)V
+#mergeSort(IIILjava/util/Comparator;)V
@5.0.0
-###org/easymock/cglib/util/ParallelSorter

+###org/easymock/cglib/util/StringSwitcher$Generator
@3.4
+#<init>()V
+#setStrings([Ljava/lang/String;)V
+#setInts([I)V
+#setFixedInput(Z)V
+#create()Lorg/easymock/cglib/util/StringSwitcher;
+#generateClass(Lorg/easymock/asm/ClassVisitor;)V
@5.0.0
-###org/easymock/cglib/util/StringSwitcher$Generator

+###org/easymock/cglib/util/StringSwitcher
@3.4
+#create([Ljava/lang/String;[IZ)Lorg/easymock/cglib/util/StringSwitcher;
+#intValue(Ljava/lang/String;)I
@5.0.0
-###org/easymock/cglib/util/StringSwitcher

+###org/easymock/asm/AnnotationVisitor
@3.4
+#<init>(I)V
+#<init>(ILorg/easymock/asm/AnnotationVisitor;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/easymock/asm/AnnotationVisitor;
+#visitEnd()V
@5.0.0
+#getDelegate()Lorg/easymock/asm/AnnotationVisitor;
-#<init>(I)V
-#<init>(ILorg/easymock/asm/AnnotationVisitor;)V

+###org/easymock/asm/Attribute
@3.4
+#isUnknown()Z
+#isCodeAttribute()Z

+###org/easymock/asm/ByteVector
@3.4
+#<init>()V
+#<init>(I)V
+#putByte(I)Lorg/easymock/asm/ByteVector;
+#putShort(I)Lorg/easymock/asm/ByteVector;
+#putInt(I)Lorg/easymock/asm/ByteVector;
+#putLong(J)Lorg/easymock/asm/ByteVector;
+#putUTF8(Ljava/lang/String;)Lorg/easymock/asm/ByteVector;
+#putByteArray([BII)Lorg/easymock/asm/ByteVector;
@5.0.0
+#size()I

+###org/easymock/asm/ClassReader
@3.4
+#<init>([B)V
+#<init>([BII)V
+#getAccess()I
+#getClassName()Ljava/lang/String;
+#getSuperName()Ljava/lang/String;
+#getInterfaces()[Ljava/lang/String;
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/easymock/asm/ClassVisitor;I)V
+#accept(Lorg/easymock/asm/ClassVisitor;[Lorg/easymock/asm/Attribute;I)V
+#getItemCount()I
+#getItem(I)I
+#getMaxStringLength()I
+#readByte(I)I
+#readUnsignedShort(I)I
+#readShort(I)S
+#readInt(I)I
+#readLong(I)J
+#readUTF8(I[C)Ljava/lang/String;
+#readClass(I[C)Ljava/lang/String;
+#readConst(I[C)Ljava/lang/Object;
@3.5
+#readModule(I[C)Ljava/lang/String;
+#readPackage(I[C)Ljava/lang/String;

+###org/easymock/asm/ClassVisitor
@3.4
+#<init>(I)V
+#<init>(ILorg/easymock/asm/ClassVisitor;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/asm/MethodVisitor;
+#visitEnd()V
@3.5
+#visitModule(Ljava/lang/String;ILjava/lang/String;)Lorg/easymock/asm/ModuleVisitor;
@4.0
+#visitNestHostExperimental(Ljava/lang/String;)V[deprecated]
+#visitNestMemberExperimental(Ljava/lang/String;)V[deprecated]
@4.0.1
+#visitNestHost(Ljava/lang/String;)V
+#visitNestMember(Ljava/lang/String;)V
-#visitNestHostExperimental(Ljava/lang/String;)V[deprecated]
-#visitNestMemberExperimental(Ljava/lang/String;)V[deprecated]
@4.2
+#visitPermittedSubtypeExperimental(Ljava/lang/String;)V[deprecated]
+#visitRecordComponentExperimental(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/asm/RecordComponentVisitor;[deprecated]
@4.3
+#visitPermittedSubclass(Ljava/lang/String;)V
+#visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/asm/RecordComponentVisitor;
-#visitPermittedSubtypeExperimental(Ljava/lang/String;)V[deprecated]
-#visitRecordComponentExperimental(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/asm/RecordComponentVisitor;[deprecated]
@5.0.0
+#getDelegate()Lorg/easymock/asm/ClassVisitor;
-#<init>(I)V
-#<init>(ILorg/easymock/asm/ClassVisitor;)V

+###org/easymock/asm/ClassWriter
@3.4
+#<init>(I)V
+#<init>(Lorg/easymock/asm/ClassReader;I)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/asm/MethodVisitor;
+#visitEnd()V
+#toByteArray()[B
+#newConst(Ljava/lang/Object;)I
+#newUTF8(Ljava/lang/String;)I
+#newClass(Ljava/lang/String;)I
+#newMethodType(Ljava/lang/String;)I
+#newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newInvokeDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/asm/Handle;[Ljava/lang/Object;)I
+#newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
+#newNameType(Ljava/lang/String;Ljava/lang/String;)I
@3.5
+#visitModule(Ljava/lang/String;ILjava/lang/String;)Lorg/easymock/asm/ModuleVisitor;
+#newModule(Ljava/lang/String;)I
+#newPackage(Ljava/lang/String;)I
+#newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
@3.5.1
*#newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I[deprecated]
@4.0
+#visitNestHostExperimental(Ljava/lang/String;)V
+#visitNestMemberExperimental(Ljava/lang/String;)V
+#newConstantDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/asm/Handle;[Ljava/lang/Object;)I
@4.0.1
+#visitNestHost(Ljava/lang/String;)V
+#visitNestMember(Ljava/lang/String;)V
-#visitNestHostExperimental(Ljava/lang/String;)V
-#visitNestMemberExperimental(Ljava/lang/String;)V
@4.2
+#visitPermittedSubtypeExperimental(Ljava/lang/String;)V
+#visitRecordComponentExperimental(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/asm/RecordComponentVisitor;
@4.3
+#visitPermittedSubclass(Ljava/lang/String;)V
+#visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/asm/RecordComponentVisitor;
-#visitPermittedSubtypeExperimental(Ljava/lang/String;)V
-#visitRecordComponentExperimental(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/asm/RecordComponentVisitor;
@5.0.0
+#hasFlags(I)Z

+###org/easymock/asm/FieldVisitor
@3.4
+#<init>(I)V
+#<init>(ILorg/easymock/asm/FieldVisitor;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
+#visitEnd()V
@5.0.0
+#getDelegate()Lorg/easymock/asm/FieldVisitor;
-#<init>(I)V
-#<init>(ILorg/easymock/asm/FieldVisitor;)V

+###org/easymock/asm/Handle
@3.4
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getTag()I
+#getOwner()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getDesc()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.5
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#isInterface()Z
@3.5.1
*#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]

+###org/easymock/asm/Label
@3.4
+#<init>()V
+#getOffset()I
+#toString()Ljava/lang/String;

+###org/easymock/asm/MethodVisitor
@3.4
+#<init>(I)V
+#<init>(ILorg/easymock/asm/MethodVisitor;)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/easymock/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/easymock/asm/Label;)V
+#visitLabel(Lorg/easymock/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/easymock/asm/Label;[Lorg/easymock/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/easymock/asm/Label;[I[Lorg/easymock/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/easymock/asm/Label;Lorg/easymock/asm/Label;Lorg/easymock/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/easymock/asm/Label;Lorg/easymock/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/easymock/asm/TypePath;[Lorg/easymock/asm/Label;[Lorg/easymock/asm/Label;[ILjava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/easymock/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V
@3.5.1
*#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
@3.6
+#visitAnnotableParameterCount(IZ)V
@5.0.0
+#getDelegate()Lorg/easymock/asm/MethodVisitor;
-#<init>(I)V
-#<init>(ILorg/easymock/asm/MethodVisitor;)V

+###org/easymock/asm/Opcodes
@3.4

+###org/easymock/asm/Type
@3.4
+#getType(Ljava/lang/String;)Lorg/easymock/asm/Type;
+#getObjectType(Ljava/lang/String;)Lorg/easymock/asm/Type;
+#getMethodType(Ljava/lang/String;)Lorg/easymock/asm/Type;
+#getMethodType(Lorg/easymock/asm/Type;[Lorg/easymock/asm/Type;)Lorg/easymock/asm/Type;
+#getType(Ljava/lang/Class;)Lorg/easymock/asm/Type;
+#getType(Ljava/lang/reflect/Constructor;)Lorg/easymock/asm/Type;
+#getType(Ljava/lang/reflect/Method;)Lorg/easymock/asm/Type;
+#getArgumentTypes(Ljava/lang/String;)[Lorg/easymock/asm/Type;
+#getArgumentTypes(Ljava/lang/reflect/Method;)[Lorg/easymock/asm/Type;
+#getReturnType(Ljava/lang/String;)Lorg/easymock/asm/Type;
+#getReturnType(Ljava/lang/reflect/Method;)Lorg/easymock/asm/Type;
+#getArgumentsAndReturnSizes(Ljava/lang/String;)I
+#getSort()I
+#getDimensions()I
+#getElementType()Lorg/easymock/asm/Type;
+#getClassName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;
+#getArgumentTypes()[Lorg/easymock/asm/Type;
+#getReturnType()Lorg/easymock/asm/Type;
+#getArgumentsAndReturnSizes()I
+#getDescriptor()Ljava/lang/String;
+#getMethodDescriptor(Lorg/easymock/asm/Type;[Lorg/easymock/asm/Type;)Ljava/lang/String;
+#getInternalName(Ljava/lang/Class;)Ljava/lang/String;
+#getDescriptor(Ljava/lang/Class;)Ljava/lang/String;
+#getConstructorDescriptor(Ljava/lang/reflect/Constructor;)Ljava/lang/String;
+#getMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getSize()I
+#getOpcode(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/easymock/asm/TypePath
@3.4
+#getLength()I
+#getStep(I)I
+#getStepArgument(I)I
+#fromString(Ljava/lang/String;)Lorg/easymock/asm/TypePath;
+#toString()Ljava/lang/String;

+###org/easymock/asm/TypeReference
@3.4
+#<init>(I)V
+#newTypeReference(I)Lorg/easymock/asm/TypeReference;
+#newTypeParameterReference(II)Lorg/easymock/asm/TypeReference;
+#newTypeParameterBoundReference(III)Lorg/easymock/asm/TypeReference;
+#newSuperTypeReference(I)Lorg/easymock/asm/TypeReference;
+#newFormalParameterReference(I)Lorg/easymock/asm/TypeReference;
+#newExceptionReference(I)Lorg/easymock/asm/TypeReference;
+#newTryCatchReference(I)Lorg/easymock/asm/TypeReference;
+#newTypeArgumentReference(II)Lorg/easymock/asm/TypeReference;
+#getSort()I
+#getTypeParameterIndex()I
+#getTypeParameterBoundIndex()I
+#getSuperTypeIndex()I
+#getFormalParameterIndex()I
+#getExceptionIndex()I
+#getTryCatchBlockIndex()I
+#getTypeArgumentIndex()I
+#getValue()I

+###org/easymock/asm/signature/SignatureReader
@3.4
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/easymock/asm/signature/SignatureVisitor;)V
+#acceptType(Lorg/easymock/asm/signature/SignatureVisitor;)V

+###org/easymock/asm/signature/SignatureVisitor
@3.4
+#<init>(I)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/easymock/asm/signature/SignatureVisitor;
+#visitEnd()V
@5.0.0
-#<init>(I)V

+###org/easymock/asm/signature/SignatureWriter
@3.4
+#<init>()V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/easymock/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/easymock/asm/signature/SignatureVisitor;
+#visitEnd()V
+#toString()Ljava/lang/String;

+###org/easymock/internal/PrimitiveUtils
@3.5
+#getEmptyValue(Ljava/lang/Class;)Ljava/lang/Object;
+#getWrapperType(Ljava/lang/Class;)Ljava/lang/Class;
+#isPrimitiveWrapper(Ljava/lang/Class;)Z
+#getPrimitiveTypeNameFromWrapper(Ljava/lang/Class;)Ljava/lang/String;

+###org/easymock/EasyMockListener
@3.5
+#<init>()V
+#beforeInvocation(Lorg/testng/IInvokedMethod;Lorg/testng/ITestResult;)V
+#afterInvocation(Lorg/testng/IInvokedMethod;Lorg/testng/ITestResult;)V

+###org/easymock/cglib/core/HashCodeCustomizer
@3.5
+#customize(Lorg/easymock/cglib/core/CodeEmitter;Lorg/easymock/asm/Type;)Z
@5.0.0
-###org/easymock/cglib/core/HashCodeCustomizer

+###org/easymock/cglib/core/internal/Function
@3.5
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/core/internal/Function

+###org/easymock/cglib/core/internal/CustomizerRegistry
@3.5
+#<init>([Ljava/lang/Class;)V
+#add(Lorg/easymock/cglib/core/KeyFactoryCustomizer;)V
+#get(Ljava/lang/Class;)Ljava/util/List;
+#singleton(Lorg/easymock/cglib/core/Customizer;)Lorg/easymock/cglib/core/internal/CustomizerRegistry;[deprecated]
@5.0.0
-###org/easymock/cglib/core/internal/CustomizerRegistry

+###org/easymock/cglib/core/internal/LoadingCache
@3.5
+#<init>(Lorg/easymock/cglib/core/internal/Function;Lorg/easymock/cglib/core/internal/Function;)V
+#identity()Lorg/easymock/cglib/core/internal/Function;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/core/internal/LoadingCache

+###org/easymock/cglib/core/WeakCacheKey
@3.5
+#<init>(Ljava/lang/Object;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@5.0.0
-###org/easymock/cglib/core/WeakCacheKey

+###org/easymock/cglib/core/KeyFactoryCustomizer
@3.5
@5.0.0
-###org/easymock/cglib/core/KeyFactoryCustomizer

+###org/easymock/cglib/core/AbstractClassGenerator$ClassLoaderData
@3.5
+#<init>(Ljava/lang/ClassLoader;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#reserveName(Ljava/lang/String;)V
+#getUniqueNamePredicate()Lorg/easymock/cglib/core/Predicate;
+#get(Lorg/easymock/cglib/core/AbstractClassGenerator;Z)Ljava/lang/Object;
@5.0.0
-###org/easymock/cglib/core/AbstractClassGenerator$ClassLoaderData

+###org/easymock/cglib/core/FieldTypeCustomizer
@3.5
+#customize(Lorg/easymock/cglib/core/CodeEmitter;ILorg/easymock/asm/Type;)V
+#getOutType(ILorg/easymock/asm/Type;)Lorg/easymock/asm/Type;
@5.0.0
-###org/easymock/cglib/core/FieldTypeCustomizer

+###org/apache/tools/ant/AntClassLoader
@3.5
+#<init>(Ljava/lang/ClassLoader;Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;)V
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;Z)V
+#<init>(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;Z)V
+#<init>(Ljava/lang/ClassLoader;Z)V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#setClassPath(Lorg/apache/tools/ant/types/Path;)V
+#setParent(Ljava/lang/ClassLoader;)V
+#setParentFirst(Z)V
+#setThreadContextLoader()V
+#resetThreadContextLoader()V
+#addPathElement(Ljava/lang/String;)V
+#addPathComponent(Ljava/io/File;)V
+#getClasspath()Ljava/lang/String;
+#setIsolated(Z)V
+#initializeClass(Ljava/lang/Class;)V[deprecated]
+#addSystemPackageRoot(Ljava/lang/String;)V
+#addLoaderPackageRoot(Ljava/lang/String;)V
+#forceLoadClass(Ljava/lang/String;)Ljava/lang/Class;
+#forceLoadSystemClass(Ljava/lang/String;)Ljava/lang/Class;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getNamedResources(Ljava/lang/String;)Ljava/util/Enumeration;
+#findClass(Ljava/lang/String;)Ljava/lang/Class;
+#cleanup()V
+#getConfiguredParent()Ljava/lang/ClassLoader;
+#buildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
+#addJavaLibraries()V
+#toString()Ljava/lang/String;
+#newAntClassLoader(Ljava/lang/ClassLoader;Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;Z)Lorg/apache/tools/ant/AntClassLoader;
@3.5.1
-###org/apache/tools/ant/AntClassLoader

+###org/apache/tools/ant/AntTypeDefinition
@3.5
+#<init>()V
+#setRestrict(Z)V
+#isRestrict()Z
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setClass(Ljava/lang/Class;)V
+#setClassName(Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#setAdapterClass(Ljava/lang/Class;)V
+#setAdaptToClass(Ljava/lang/Class;)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExposedClass(Lorg/apache/tools/ant/Project;)Ljava/lang/Class;
+#getTypeClass(Lorg/apache/tools/ant/Project;)Ljava/lang/Class;
+#innerGetTypeClass()Ljava/lang/Class;
+#create(Lorg/apache/tools/ant/Project;)Ljava/lang/Object;
+#checkClass(Lorg/apache/tools/ant/Project;)V
+#innerCreateAndSet(Ljava/lang/Class;Lorg/apache/tools/ant/Project;)Ljava/lang/Object;
+#sameDefinition(Lorg/apache/tools/ant/AntTypeDefinition;Lorg/apache/tools/ant/Project;)Z
+#similarDefinition(Lorg/apache/tools/ant/AntTypeDefinition;Lorg/apache/tools/ant/Project;)Z
@3.5.1
-###org/apache/tools/ant/AntTypeDefinition

+###org/apache/tools/ant/ArgumentProcessor
@3.5
+#readArguments([Ljava/lang/String;I)I
+#handleArg(Ljava/util/List;)Z
+#prepareConfigure(Lorg/apache/tools/ant/Project;Ljava/util/List;)V
+#handleArg(Lorg/apache/tools/ant/Project;Ljava/util/List;)Z
+#printUsage(Ljava/io/PrintStream;)V
@3.5.1
-###org/apache/tools/ant/ArgumentProcessor

+###org/apache/tools/ant/ArgumentProcessorRegistry
@3.5
+#getInstance()Lorg/apache/tools/ant/ArgumentProcessorRegistry;
+#getProcessors()Ljava/util/List;
+#registerArgumentProcessor(Ljava/lang/String;)V
+#registerArgumentProcessor(Ljava/lang/Class;)V
+#registerArgumentProcessor(Lorg/apache/tools/ant/ArgumentProcessor;)V
@3.5.1
-###org/apache/tools/ant/ArgumentProcessorRegistry

+###org/apache/tools/ant/BuildEvent
@3.5
+#<init>(Lorg/apache/tools/ant/Project;)V
+#<init>(Lorg/apache/tools/ant/Target;)V
+#<init>(Lorg/apache/tools/ant/Task;)V
+#setMessage(Ljava/lang/String;I)V
+#setException(Ljava/lang/Throwable;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#getTarget()Lorg/apache/tools/ant/Target;
+#getTask()Lorg/apache/tools/ant/Task;
+#getMessage()Ljava/lang/String;
+#getPriority()I
+#getException()Ljava/lang/Throwable;
@3.5.1
-###org/apache/tools/ant/BuildEvent

+###org/apache/tools/ant/BuildException
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/tools/ant/Location;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Lorg/apache/tools/ant/Location;)V
+#<init>(Ljava/lang/Throwable;Lorg/apache/tools/ant/Location;)V
+#getException()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
+#setLocation(Lorg/apache/tools/ant/Location;)V
+#getLocation()Lorg/apache/tools/ant/Location;
@3.5.1
-###org/apache/tools/ant/BuildException

+###org/apache/tools/ant/BuildListener
@3.5
+#buildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/BuildListener

+###org/apache/tools/ant/BuildLogger
@3.5
+#setMessageOutputLevel(I)V
+#setOutputPrintStream(Ljava/io/PrintStream;)V
+#setEmacsMode(Z)V
+#setErrorPrintStream(Ljava/io/PrintStream;)V
@3.5.1
-###org/apache/tools/ant/BuildLogger

+###org/apache/tools/ant/ComponentHelper
@3.5
+#getProject()Lorg/apache/tools/ant/Project;
+#getComponentHelper(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/ComponentHelper;
+#setNext(Lorg/apache/tools/ant/ComponentHelper;)V
+#getNext()Lorg/apache/tools/ant/ComponentHelper;
+#setProject(Lorg/apache/tools/ant/Project;)V
+#initSubProject(Lorg/apache/tools/ant/ComponentHelper;)V
+#createComponent(Lorg/apache/tools/ant/UnknownElement;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#createComponent(Ljava/lang/String;)Ljava/lang/Object;
+#getComponentClass(Ljava/lang/String;)Ljava/lang/Class;
+#getDefinition(Ljava/lang/String;)Lorg/apache/tools/ant/AntTypeDefinition;
+#initDefaultDefinitions()V
+#addTaskDefinition(Ljava/lang/String;Ljava/lang/Class;)V
+#checkTaskClass(Ljava/lang/Class;)V
+#getTaskDefinitions()Ljava/util/Hashtable;
+#getDataTypeDefinitions()Ljava/util/Hashtable;
+#getRestrictedDefinitions(Ljava/lang/String;)Ljava/util/List;
+#addDataTypeDefinition(Ljava/lang/String;Ljava/lang/Class;)V
+#addDataTypeDefinition(Lorg/apache/tools/ant/AntTypeDefinition;)V
+#getAntTypeTable()Ljava/util/Hashtable;
+#createTask(Ljava/lang/String;)Lorg/apache/tools/ant/Task;
+#createDataType(Ljava/lang/String;)Ljava/lang/Object;
+#getElementName(Ljava/lang/Object;)Ljava/lang/String;
+#getElementName(Ljava/lang/Object;Z)Ljava/lang/String;
+#getElementName(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Z)Ljava/lang/String;
+#enterAntLib(Ljava/lang/String;)V
+#getCurrentAntlibUri()Ljava/lang/String;
+#exitAntLib()V
+#diagnoseCreationFailure(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/ComponentHelper

+###org/apache/tools/ant/DefaultDefinitions
@3.5
+#<init>(Lorg/apache/tools/ant/ComponentHelper;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/DefaultDefinitions

+###org/apache/tools/ant/DefaultLogger
@3.5
+#<init>()V
+#setMessageOutputLevel(I)V
+#setOutputPrintStream(Ljava/io/PrintStream;)V
+#setErrorPrintStream(Ljava/io/PrintStream;)V
+#setEmacsMode(Z)V
+#buildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/DefaultLogger

+###org/apache/tools/ant/DemuxInputStream
@3.5
+#<init>(Lorg/apache/tools/ant/Project;)V
+#read()I
+#read([BII)I
@3.5.1
-###org/apache/tools/ant/DemuxInputStream

+###org/apache/tools/ant/DemuxOutputStream
@3.5
+#<init>(Lorg/apache/tools/ant/Project;Z)V
+#write(I)V
+#close()V
+#flush()V
+#write([BII)V
@3.5.1
-###org/apache/tools/ant/DemuxOutputStream

+###org/apache/tools/ant/Diagnostics
@3.5
+#isOptionalAvailable()Z
+#validateVersion()V
+#listLibraries()[Ljava/io/File;
+#main([Ljava/lang/String;)V
+#doReport(Ljava/io/PrintStream;)V
+#doReport(Ljava/io/PrintStream;I)V
@3.5.1
-###org/apache/tools/ant/Diagnostics

+###org/apache/tools/ant/DirectoryScanner
@3.5
+#<init>()V
+#match(Ljava/lang/String;Ljava/lang/String;)Z
+#getDefaultExcludes()[Ljava/lang/String;
+#addDefaultExclude(Ljava/lang/String;)Z
+#removeDefaultExclude(Ljava/lang/String;)Z
+#resetDefaultExcludes()V
+#setBasedir(Ljava/lang/String;)V
+#setBasedir(Ljava/io/File;)V
+#getBasedir()Ljava/io/File;
+#isCaseSensitive()Z
+#setCaseSensitive(Z)V
+#setErrorOnMissingDir(Z)V
+#isFollowSymlinks()Z
+#setFollowSymlinks(Z)V
+#setMaxLevelsOfSymlinks(I)V
+#setIncludes([Ljava/lang/String;)V
+#setExcludes([Ljava/lang/String;)V
+#addExcludes([Ljava/lang/String;)V
+#setSelectors([Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#isEverythingIncluded()Z
+#scan()V
+#getIncludedFiles()[Ljava/lang/String;
+#getIncludedFilesCount()I
+#getNotIncludedFiles()[Ljava/lang/String;
+#getExcludedFiles()[Ljava/lang/String;
+#getDeselectedFiles()[Ljava/lang/String;
+#getIncludedDirectories()[Ljava/lang/String;
+#getIncludedDirsCount()I
+#getNotIncludedDirectories()[Ljava/lang/String;
+#getExcludedDirectories()[Ljava/lang/String;
+#getDeselectedDirectories()[Ljava/lang/String;
+#getNotFollowedSymlinks()[Ljava/lang/String;
+#addDefaultExcludes()V
+#getResource(Ljava/lang/String;)Lorg/apache/tools/ant/types/Resource;
@3.5.1
-###org/apache/tools/ant/DirectoryScanner

+###org/apache/tools/ant/DynamicAttribute
@3.5
+#setDynamicAttribute(Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/DynamicAttribute

+###org/apache/tools/ant/DynamicAttributeNS
@3.5
+#setDynamicAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/DynamicAttributeNS

+###org/apache/tools/ant/DynamicConfigurator
@3.5
@3.5.1
-###org/apache/tools/ant/DynamicConfigurator

+###org/apache/tools/ant/DynamicConfiguratorNS
@3.5
@3.5.1
-###org/apache/tools/ant/DynamicConfiguratorNS

+###org/apache/tools/ant/DynamicElement
@3.5
+#createDynamicElement(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/DynamicElement

+###org/apache/tools/ant/DynamicElementNS
@3.5
+#createDynamicElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/DynamicElementNS

+###org/apache/tools/ant/DynamicObjectAttribute
@3.5
+#setDynamicAttribute(Ljava/lang/String;Ljava/lang/Object;)V
@3.5.1
-###org/apache/tools/ant/DynamicObjectAttribute

+###org/apache/tools/ant/Evaluable
@3.5
+#eval()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/Evaluable

+###org/apache/tools/ant/Executor
@3.5
+#executeTargets(Lorg/apache/tools/ant/Project;[Ljava/lang/String;)V
+#getSubProjectExecutor()Lorg/apache/tools/ant/Executor;
@3.5.1
-###org/apache/tools/ant/Executor

+###org/apache/tools/ant/ExitException
@3.5
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#getStatus()I
@3.5.1
-###org/apache/tools/ant/ExitException

+###org/apache/tools/ant/ExitStatusException
@3.5
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ILorg/apache/tools/ant/Location;)V
+#getStatus()I
@3.5.1
-###org/apache/tools/ant/ExitStatusException

+###org/apache/tools/ant/ExtensionPoint
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Target;)V
+#addTask(Lorg/apache/tools/ant/Task;)V
+#addDataType(Lorg/apache/tools/ant/RuntimeConfigurable;)V
@3.5.1
-###org/apache/tools/ant/ExtensionPoint

+###org/apache/tools/ant/FileScanner
@3.5
+#addDefaultExcludes()V
+#getBasedir()Ljava/io/File;
+#getExcludedDirectories()[Ljava/lang/String;
+#getExcludedFiles()[Ljava/lang/String;
+#getIncludedDirectories()[Ljava/lang/String;
+#getIncludedFiles()[Ljava/lang/String;
+#getNotIncludedDirectories()[Ljava/lang/String;
+#getNotIncludedFiles()[Ljava/lang/String;
+#scan()V
+#setBasedir(Ljava/lang/String;)V
+#setBasedir(Ljava/io/File;)V
+#setExcludes([Ljava/lang/String;)V
+#setIncludes([Ljava/lang/String;)V
+#setCaseSensitive(Z)V
@3.5.1
-###org/apache/tools/ant/FileScanner

+###org/apache/tools/ant/IntrospectionHelper$Creator
@3.5
+#setPolyType(Ljava/lang/String;)V
+#create()Ljava/lang/Object;
+#getRealObject()Ljava/lang/Object;
+#store()V
@3.5.1
-###org/apache/tools/ant/IntrospectionHelper$Creator

+###org/apache/tools/ant/IntrospectionHelper
@3.5
+#getHelper(Ljava/lang/Class;)Lorg/apache/tools/ant/IntrospectionHelper;
+#getHelper(Lorg/apache/tools/ant/Project;Ljava/lang/Class;)Lorg/apache/tools/ant/IntrospectionHelper;
+#setAttribute(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
+#setAttribute(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
+#addText(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Ljava/lang/String;)V
+#throwNotSupported(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Ljava/lang/String;)V
+#createElement(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;[deprecated]
+#getElementCreator(Lorg/apache/tools/ant/Project;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Lorg/apache/tools/ant/UnknownElement;)Lorg/apache/tools/ant/IntrospectionHelper$Creator;
+#isDynamic()Z
+#isContainer()Z
+#supportsNestedElement(Ljava/lang/String;)Z
+#supportsNestedElement(Ljava/lang/String;Ljava/lang/String;)Z
+#supportsNestedElement(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/Project;Ljava/lang/Object;)Z
+#supportsReflectElement(Ljava/lang/String;Ljava/lang/String;)Z
+#storeElement(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#getElementType(Ljava/lang/String;)Ljava/lang/Class;
+#getAttributeType(Ljava/lang/String;)Ljava/lang/Class;
+#getAddTextMethod()Ljava/lang/reflect/Method;
+#getElementMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;
+#getAttributeMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;
+#supportsCharacters()Z
+#getAttributes()Ljava/util/Enumeration;
+#getAttributeMap()Ljava/util/Map;
+#getNestedElements()Ljava/util/Enumeration;
+#getNestedElementMap()Ljava/util/Map;
+#getExtensionPoints()Ljava/util/List;
+#clearCache()V
@3.5.1
-###org/apache/tools/ant/IntrospectionHelper

+###org/apache/tools/ant/Location
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/xml/sax/Locator;)V
+#<init>(Ljava/lang/String;II)V
+#getFileName()Ljava/lang/String;
+#getLineNumber()I
+#getColumnNumber()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.5.1
-###org/apache/tools/ant/Location

+###org/apache/tools/ant/MagicNames
@3.5
@3.5.1
-###org/apache/tools/ant/MagicNames

+###org/apache/tools/ant/Main
@3.5
+#start([Ljava/lang/String;Ljava/util/Properties;Ljava/lang/ClassLoader;)V
+#startAnt([Ljava/lang/String;Ljava/util/Properties;Ljava/lang/ClassLoader;)V
+#main([Ljava/lang/String;)V
+#<init>()V
+#getAntVersion()Ljava/lang/String;
+#getShortAntVersion()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/Main

+###org/apache/tools/ant/NoBannerLogger
@3.5
+#<init>()V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/NoBannerLogger

+###org/apache/tools/ant/PathTokenizer
@3.5
+#<init>(Ljava/lang/String;)V
+#hasMoreTokens()Z
+#nextToken()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/PathTokenizer

+###org/apache/tools/ant/Project
@3.5
+#setInputHandler(Lorg/apache/tools/ant/input/InputHandler;)V
+#setDefaultInputStream(Ljava/io/InputStream;)V
+#getDefaultInputStream()Ljava/io/InputStream;
+#getInputHandler()Lorg/apache/tools/ant/input/InputHandler;
+#<init>()V
+#createSubProject()Lorg/apache/tools/ant/Project;
+#initSubProject(Lorg/apache/tools/ant/Project;)V
+#init()V
+#initProperties()V
+#createClassLoader(Lorg/apache/tools/ant/types/Path;)Lorg/apache/tools/ant/AntClassLoader;
+#createClassLoader(Ljava/lang/ClassLoader;Lorg/apache/tools/ant/types/Path;)Lorg/apache/tools/ant/AntClassLoader;
+#setCoreLoader(Ljava/lang/ClassLoader;)V
+#getCoreLoader()Ljava/lang/ClassLoader;
+#addBuildListener(Lorg/apache/tools/ant/BuildListener;)V
+#removeBuildListener(Lorg/apache/tools/ant/BuildListener;)V
+#getBuildListeners()Ljava/util/Vector;
+#log(Ljava/lang/String;)V
+#log(Ljava/lang/String;I)V
+#log(Ljava/lang/String;Ljava/lang/Throwable;I)V
+#log(Lorg/apache/tools/ant/Task;Ljava/lang/String;I)V
+#log(Lorg/apache/tools/ant/Task;Ljava/lang/String;Ljava/lang/Throwable;I)V
+#log(Lorg/apache/tools/ant/Target;Ljava/lang/String;I)V
+#log(Lorg/apache/tools/ant/Target;Ljava/lang/String;Ljava/lang/Throwable;I)V
+#getGlobalFilterSet()Lorg/apache/tools/ant/types/FilterSet;
+#setProperty(Ljava/lang/String;Ljava/lang/String;)V
+#setNewProperty(Ljava/lang/String;Ljava/lang/String;)V
+#setUserProperty(Ljava/lang/String;Ljava/lang/String;)V
+#setInheritedProperty(Ljava/lang/String;Ljava/lang/String;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#replaceProperties(Ljava/lang/String;)Ljava/lang/String;
+#getUserProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperties()Ljava/util/Hashtable;
+#getUserProperties()Ljava/util/Hashtable;
+#getInheritedProperties()Ljava/util/Hashtable;
+#copyUserProperties(Lorg/apache/tools/ant/Project;)V
+#copyInheritedProperties(Lorg/apache/tools/ant/Project;)V
+#setDefaultTarget(Ljava/lang/String;)V[deprecated]
+#getDefaultTarget()Ljava/lang/String;
+#setDefault(Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#addFilter(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#getFilters()Ljava/util/Hashtable;[deprecated]
+#setBasedir(Ljava/lang/String;)V
+#setBaseDir(Ljava/io/File;)V
+#getBaseDir()Ljava/io/File;
+#setKeepGoingMode(Z)V
+#isKeepGoingMode()Z
+#getJavaVersion()Ljava/lang/String;[deprecated]
+#setJavaVersionProperty()V
+#setSystemProperties()V
+#addTaskDefinition(Ljava/lang/String;Ljava/lang/Class;)V
+#checkTaskClass(Ljava/lang/Class;)V
+#getTaskDefinitions()Ljava/util/Hashtable;
+#getCopyOfTaskDefinitions()Ljava/util/Map;
+#addDataTypeDefinition(Ljava/lang/String;Ljava/lang/Class;)V
+#getDataTypeDefinitions()Ljava/util/Hashtable;
+#getCopyOfDataTypeDefinitions()Ljava/util/Map;
+#addTarget(Lorg/apache/tools/ant/Target;)V
+#addTarget(Ljava/lang/String;Lorg/apache/tools/ant/Target;)V
+#addOrReplaceTarget(Lorg/apache/tools/ant/Target;)V
+#addOrReplaceTarget(Ljava/lang/String;Lorg/apache/tools/ant/Target;)V
+#getTargets()Ljava/util/Hashtable;
+#getCopyOfTargets()Ljava/util/Map;
+#createTask(Ljava/lang/String;)Lorg/apache/tools/ant/Task;
+#createDataType(Ljava/lang/String;)Ljava/lang/Object;
+#setExecutor(Lorg/apache/tools/ant/Executor;)V
+#getExecutor()Lorg/apache/tools/ant/Executor;
+#executeTargets(Ljava/util/Vector;)V
+#demuxOutput(Ljava/lang/String;Z)V
+#defaultInput([BII)I
+#demuxInput([BII)I
+#demuxFlush(Ljava/lang/String;Z)V
+#executeTarget(Ljava/lang/String;)V
+#executeSortedTargets(Ljava/util/Vector;)V
+#resolveFile(Ljava/lang/String;Ljava/io/File;)Ljava/io/File;[deprecated]
+#resolveFile(Ljava/lang/String;)Ljava/io/File;
+#translatePath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#copyFile(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#copyFile(Ljava/lang/String;Ljava/lang/String;Z)V[deprecated]
+#copyFile(Ljava/lang/String;Ljava/lang/String;ZZ)V[deprecated]
+#copyFile(Ljava/lang/String;Ljava/lang/String;ZZZ)V[deprecated]
+#copyFile(Ljava/io/File;Ljava/io/File;)V[deprecated]
+#copyFile(Ljava/io/File;Ljava/io/File;Z)V[deprecated]
+#copyFile(Ljava/io/File;Ljava/io/File;ZZ)V[deprecated]
+#copyFile(Ljava/io/File;Ljava/io/File;ZZZ)V[deprecated]
+#setFileLastModified(Ljava/io/File;J)V[deprecated]
+#toBoolean(Ljava/lang/String;)Z
+#getProject(Ljava/lang/Object;)Lorg/apache/tools/ant/Project;
+#topoSort(Ljava/lang/String;Ljava/util/Hashtable;)Ljava/util/Vector;
+#topoSort(Ljava/lang/String;Ljava/util/Hashtable;Z)Ljava/util/Vector;
+#topoSort([Ljava/lang/String;Ljava/util/Hashtable;Z)Ljava/util/Vector;
+#inheritIDReferences(Lorg/apache/tools/ant/Project;)V
+#addIdReference(Ljava/lang/String;Ljava/lang/Object;)V
+#addReference(Ljava/lang/String;Ljava/lang/Object;)V
+#getReferences()Ljava/util/Hashtable;
+#hasReference(Ljava/lang/String;)Z
+#getCopyOfReferences()Ljava/util/Map;
+#getReference(Ljava/lang/String;)Ljava/lang/Object;
+#getElementName(Ljava/lang/Object;)Ljava/lang/String;
+#fireBuildStarted()V
+#fireBuildFinished(Ljava/lang/Throwable;)V
+#fireSubBuildStarted()V
+#fireSubBuildFinished(Ljava/lang/Throwable;)V
+#registerThreadTask(Ljava/lang/Thread;Lorg/apache/tools/ant/Task;)V
+#getThreadTask(Ljava/lang/Thread;)Lorg/apache/tools/ant/Task;
+#setProjectReference(Ljava/lang/Object;)V
+#getResource(Ljava/lang/String;)Lorg/apache/tools/ant/types/Resource;
@3.5.1
-###org/apache/tools/ant/Project

+###org/apache/tools/ant/ProjectComponent
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#getLocation()Lorg/apache/tools/ant/Location;
+#setLocation(Lorg/apache/tools/ant/Location;)V
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#log(Ljava/lang/String;)V
+#log(Ljava/lang/String;I)V
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/ProjectComponent

+###org/apache/tools/ant/ProjectHelper$OnMissingExtensionPoint
@3.5
+#name()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#valueOf(Ljava/lang/String;)Lorg/apache/tools/ant/ProjectHelper$OnMissingExtensionPoint;
@3.5.1
-###org/apache/tools/ant/ProjectHelper$OnMissingExtensionPoint

+###org/apache/tools/ant/ProjectHelper
@3.5
+#configureProject(Lorg/apache/tools/ant/Project;Ljava/io/File;)V
+#<init>()V
+#getImportStack()Ljava/util/Vector;
+#getExtensionStack()Ljava/util/List;
+#getCurrentTargetPrefix()Ljava/lang/String;
+#setCurrentTargetPrefix(Ljava/lang/String;)V
+#getCurrentPrefixSeparator()Ljava/lang/String;
+#setCurrentPrefixSeparator(Ljava/lang/String;)V
+#isInIncludeMode()Z
+#setInIncludeMode(Z)V
+#parse(Lorg/apache/tools/ant/Project;Ljava/lang/Object;)V
+#getProjectHelper()Lorg/apache/tools/ant/ProjectHelper;
+#getContextClassLoader()Ljava/lang/ClassLoader;
+#configure(Ljava/lang/Object;Lorg/xml/sax/AttributeList;Lorg/apache/tools/ant/Project;)V
+#addText(Lorg/apache/tools/ant/Project;Ljava/lang/Object;[CII)V
+#addText(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Ljava/lang/String;)V
+#storeChild(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#replaceProperties(Lorg/apache/tools/ant/Project;Ljava/lang/String;)Ljava/lang/String;
+#replaceProperties(Lorg/apache/tools/ant/Project;Ljava/lang/String;Ljava/util/Hashtable;)Ljava/lang/String;
+#parsePropertyString(Ljava/lang/String;Ljava/util/Vector;Ljava/util/Vector;)V
+#genComponentName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#extractUriFromComponentName(Ljava/lang/String;)Ljava/lang/String;
+#extractNameFromComponentName(Ljava/lang/String;)Ljava/lang/String;
+#nsToComponentName(Ljava/lang/String;)Ljava/lang/String;
+#addLocationToBuildException(Lorg/apache/tools/ant/BuildException;Lorg/apache/tools/ant/Location;)Lorg/apache/tools/ant/BuildException;
+#canParseAntlibDescriptor(Lorg/apache/tools/ant/types/Resource;)Z
+#parseAntlibDescriptor(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Resource;)Lorg/apache/tools/ant/UnknownElement;
+#canParseBuildFile(Lorg/apache/tools/ant/types/Resource;)Z
+#getDefaultBuildFile()Ljava/lang/String;
+#resolveExtensionOfAttributes(Lorg/apache/tools/ant/Project;)V
@3.5.1
-###org/apache/tools/ant/ProjectHelper

+###org/apache/tools/ant/ProjectHelperRepository
@3.5
+#getInstance()Lorg/apache/tools/ant/ProjectHelperRepository;
+#registerProjectHelper(Ljava/lang/String;)V
+#registerProjectHelper(Ljava/lang/Class;)V
+#getProjectHelperForBuildFile(Lorg/apache/tools/ant/types/Resource;)Lorg/apache/tools/ant/ProjectHelper;
+#getProjectHelperForAntlib(Lorg/apache/tools/ant/types/Resource;)Lorg/apache/tools/ant/ProjectHelper;
+#getHelpers()Ljava/util/Iterator;
@3.5.1
-###org/apache/tools/ant/ProjectHelperRepository

+###org/apache/tools/ant/PropertyHelper$Delegate
@3.5
@3.5.1
-###org/apache/tools/ant/PropertyHelper$Delegate

+###org/apache/tools/ant/PropertyHelper$PropertyEvaluator
@3.5
+#evaluate(Ljava/lang/String;Lorg/apache/tools/ant/PropertyHelper;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/PropertyHelper$PropertyEvaluator

+###org/apache/tools/ant/PropertyHelper$PropertySetter
@3.5
+#setNew(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/tools/ant/PropertyHelper;)Z
+#set(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/tools/ant/PropertyHelper;)Z
@3.5.1
-###org/apache/tools/ant/PropertyHelper$PropertySetter

+###org/apache/tools/ant/PropertyHelper
@3.5
+#getProperty(Lorg/apache/tools/ant/Project;Ljava/lang/String;)Ljava/lang/Object;
+#setProperty(Lorg/apache/tools/ant/Project;Ljava/lang/String;Ljava/lang/Object;)V
+#setNewProperty(Lorg/apache/tools/ant/Project;Ljava/lang/String;Ljava/lang/Object;)V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#setNext(Lorg/apache/tools/ant/PropertyHelper;)V
+#getNext()Lorg/apache/tools/ant/PropertyHelper;
+#getPropertyHelper(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/PropertyHelper;
+#getExpanders()Ljava/util/Collection;
+#setPropertyHook(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;ZZZ)Z
+#getPropertyHook(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/Object;
+#parsePropertyString(Ljava/lang/String;Ljava/util/Vector;Ljava/util/Vector;)V
+#replaceProperties(Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)Ljava/lang/String;
+#replaceProperties(Ljava/lang/String;)Ljava/lang/String;
+#parseProperties(Ljava/lang/String;)Ljava/lang/Object;
+#containsProperties(Ljava/lang/String;)Z
+#setProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Z)Z
+#setProperty(Ljava/lang/String;Ljava/lang/Object;Z)Z
+#setNewProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#setNewProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#setUserProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#setUserProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#setInheritedProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#setInheritedProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#getUserProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#getUserProperty(Ljava/lang/String;)Ljava/lang/Object;
+#getProperties()Ljava/util/Hashtable;
+#getUserProperties()Ljava/util/Hashtable;
+#getInheritedProperties()Ljava/util/Hashtable;
+#copyInheritedProperties(Lorg/apache/tools/ant/Project;)V
+#copyUserProperties(Lorg/apache/tools/ant/Project;)V
+#add(Lorg/apache/tools/ant/PropertyHelper$Delegate;)V
+#toBoolean(Ljava/lang/Object;)Ljava/lang/Boolean;
+#testIfCondition(Ljava/lang/Object;)Z
+#testUnlessCondition(Ljava/lang/Object;)Z
@3.5.1
-###org/apache/tools/ant/PropertyHelper

+###org/apache/tools/ant/RuntimeConfigurable
@3.5
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#setProxy(Ljava/lang/Object;)V
+#isEnabled(Lorg/apache/tools/ant/UnknownElement;)Z
+#getProxy()Ljava/lang/Object;
+#getId()Ljava/lang/String;
+#getPolyType()Ljava/lang/String;
+#setPolyType(Ljava/lang/String;)V
+#setAttributes(Lorg/xml/sax/AttributeList;)V
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)V
+#getAttributeMap()Ljava/util/Hashtable;
+#getAttributes()Lorg/xml/sax/AttributeList;
+#addChild(Lorg/apache/tools/ant/RuntimeConfigurable;)V
+#getChildren()Ljava/util/Enumeration;
+#addText(Ljava/lang/String;)V
+#addText([CII)V
+#getText()Ljava/lang/StringBuffer;
+#setElementTag(Ljava/lang/String;)V
+#getElementTag()Ljava/lang/String;
+#maybeConfigure(Lorg/apache/tools/ant/Project;)V
+#maybeConfigure(Lorg/apache/tools/ant/Project;Z)V
+#reconfigure(Lorg/apache/tools/ant/Project;)V
+#applyPreSet(Lorg/apache/tools/ant/RuntimeConfigurable;)V
@3.5.1
-###org/apache/tools/ant/RuntimeConfigurable

+###org/apache/tools/ant/SubBuildListener
@3.5
+#subBuildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildFinished(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/SubBuildListener

+###org/apache/tools/ant/Target
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Target;)V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#setLocation(Lorg/apache/tools/ant/Location;)V
+#getLocation()Lorg/apache/tools/ant/Location;
+#setDepends(Ljava/lang/String;)V
+#parseDepends(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#addTask(Lorg/apache/tools/ant/Task;)V
+#addDataType(Lorg/apache/tools/ant/RuntimeConfigurable;)V
+#getTasks()[Lorg/apache/tools/ant/Task;
+#addDependency(Ljava/lang/String;)V
+#getDependencies()Ljava/util/Enumeration;
+#dependsOn(Ljava/lang/String;)Z
+#setIf(Ljava/lang/String;)V
+#getIf()Ljava/lang/String;
+#setIf(Lorg/apache/tools/ant/taskdefs/condition/Condition;)V
+#setUnless(Ljava/lang/String;)V
+#getUnless()Ljava/lang/String;
+#setUnless(Lorg/apache/tools/ant/taskdefs/condition/Condition;)V
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#execute()V
+#performTasks()V
@3.5.1
-###org/apache/tools/ant/Target

+###org/apache/tools/ant/Task
@3.5
+#<init>()V
+#setOwningTarget(Lorg/apache/tools/ant/Target;)V
+#getOwningTarget()Lorg/apache/tools/ant/Target;
+#setTaskName(Ljava/lang/String;)V
+#getTaskName()Ljava/lang/String;
+#setTaskType(Ljava/lang/String;)V
+#init()V
+#execute()V
+#getRuntimeConfigurableWrapper()Lorg/apache/tools/ant/RuntimeConfigurable;
+#setRuntimeConfigurableWrapper(Lorg/apache/tools/ant/RuntimeConfigurable;)V
+#maybeConfigure()V
+#reconfigure()V
+#log(Ljava/lang/String;)V
+#log(Ljava/lang/String;I)V
+#log(Ljava/lang/Throwable;I)V
+#log(Ljava/lang/String;Ljava/lang/Throwable;I)V
+#perform()V
+#getTaskType()Ljava/lang/String;
+#bindToOwner(Lorg/apache/tools/ant/Task;)V
@3.5.1
-###org/apache/tools/ant/Task

+###org/apache/tools/ant/TaskAdapter
@3.5
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#checkTaskClass(Ljava/lang/Class;Lorg/apache/tools/ant/Project;)V
+#checkProxyClass(Ljava/lang/Class;)V
+#execute()V
+#setProxy(Ljava/lang/Object;)V
+#getProxy()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/TaskAdapter

+###org/apache/tools/ant/TaskConfigurationChecker
@3.5
+#<init>(Lorg/apache/tools/ant/Task;)V
+#assertConfig(ZLjava/lang/String;)V
+#fail(Ljava/lang/String;)V
+#checkErrors()V
@3.5.1
-###org/apache/tools/ant/TaskConfigurationChecker

+###org/apache/tools/ant/TaskContainer
@3.5
+#addTask(Lorg/apache/tools/ant/Task;)V
@3.5.1
-###org/apache/tools/ant/TaskContainer

+###org/apache/tools/ant/TypeAdapter
@3.5
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#setProxy(Ljava/lang/Object;)V
+#getProxy()Ljava/lang/Object;
+#checkProxyClass(Ljava/lang/Class;)V
@3.5.1
-###org/apache/tools/ant/TypeAdapter

+###org/apache/tools/ant/UnknownElement
@3.5
+#<init>(Ljava/lang/String;)V
+#getChildren()Ljava/util/List;
+#getTag()Ljava/lang/String;
+#getNamespace()Ljava/lang/String;
+#setNamespace(Ljava/lang/String;)V
+#getQName()Ljava/lang/String;
+#setQName(Ljava/lang/String;)V
+#getWrapper()Lorg/apache/tools/ant/RuntimeConfigurable;
+#maybeConfigure()V
+#configure(Ljava/lang/Object;)V
+#execute()V
+#addChild(Lorg/apache/tools/ant/UnknownElement;)V
+#applyPreSet(Lorg/apache/tools/ant/UnknownElement;)V
+#getTaskName()Ljava/lang/String;
+#getTask()Lorg/apache/tools/ant/Task;
+#getRealThing()Ljava/lang/Object;
+#setRealThing(Ljava/lang/Object;)V
+#similar(Ljava/lang/Object;)Z
+#copy(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/UnknownElement;
@3.5.1
-###org/apache/tools/ant/UnknownElement

+###org/apache/tools/ant/UnsupportedAttributeException
@3.5
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getAttribute()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/UnsupportedAttributeException

+###org/apache/tools/ant/UnsupportedElementException
@3.5
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getElement()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/UnsupportedElementException

+###org/apache/tools/ant/XmlLogger
@3.5
+#<init>()V
+#buildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
+#setMessageOutputLevel(I)V
+#setOutputPrintStream(Ljava/io/PrintStream;)V
+#setEmacsMode(Z)V
+#setErrorPrintStream(Ljava/io/PrintStream;)V
@3.5.1
-###org/apache/tools/ant/XmlLogger

+###org/apache/tools/ant/attribute/AttributeNamespace
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/attribute/AttributeNamespace

+###org/apache/tools/ant/attribute/BaseIfAttribute
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/attribute/BaseIfAttribute

+###org/apache/tools/ant/attribute/EnableAttribute
@3.5
+#isEnabled(Lorg/apache/tools/ant/UnknownElement;Ljava/lang/String;)Z
@3.5.1
-###org/apache/tools/ant/attribute/EnableAttribute

+###org/apache/tools/ant/attribute/IfBlankAttribute$Unless
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/attribute/IfBlankAttribute$Unless

+###org/apache/tools/ant/attribute/IfBlankAttribute
@3.5
+#<init>()V
+#isEnabled(Lorg/apache/tools/ant/UnknownElement;Ljava/lang/String;)Z
@3.5.1
-###org/apache/tools/ant/attribute/IfBlankAttribute

+###org/apache/tools/ant/attribute/IfSetAttribute$Unless
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/attribute/IfSetAttribute$Unless

+###org/apache/tools/ant/attribute/IfSetAttribute
@3.5
+#<init>()V
+#isEnabled(Lorg/apache/tools/ant/UnknownElement;Ljava/lang/String;)Z
@3.5.1
-###org/apache/tools/ant/attribute/IfSetAttribute

+###org/apache/tools/ant/attribute/IfTrueAttribute$Unless
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/attribute/IfTrueAttribute$Unless

+###org/apache/tools/ant/attribute/IfTrueAttribute
@3.5
+#<init>()V
+#isEnabled(Lorg/apache/tools/ant/UnknownElement;Ljava/lang/String;)Z
@3.5.1
-###org/apache/tools/ant/attribute/IfTrueAttribute

+###org/apache/tools/ant/dispatch/DispatchTask
@3.5
+#<init>()V
+#getActionParameterName()Ljava/lang/String;
+#setAction(Ljava/lang/String;)V
+#getAction()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/dispatch/DispatchTask

+###org/apache/tools/ant/dispatch/DispatchUtils
@3.5
+#<init>()V
+#execute(Ljava/lang/Object;)V
@3.5.1
-###org/apache/tools/ant/dispatch/DispatchUtils

+###org/apache/tools/ant/dispatch/Dispatchable
@3.5
+#getActionParameterName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/dispatch/Dispatchable

+###org/apache/tools/ant/filters/BaseFilterReader
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read([CII)I
+#skip(J)J
+#setProject(Lorg/apache/tools/ant/Project;)V
@3.5.1
-###org/apache/tools/ant/filters/BaseFilterReader

+###org/apache/tools/ant/filters/BaseParamFilterReader
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
@3.5.1
-###org/apache/tools/ant/filters/BaseParamFilterReader

+###org/apache/tools/ant/filters/ChainableReader
@3.5
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/ChainableReader

+###org/apache/tools/ant/filters/ClassConstants
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/ClassConstants

+###org/apache/tools/ant/filters/ConcatFilter
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#setPrepend(Ljava/io/File;)V
+#getPrepend()Ljava/io/File;
+#setAppend(Ljava/io/File;)V
+#getAppend()Ljava/io/File;
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/ConcatFilter

+###org/apache/tools/ant/filters/EscapeUnicode
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/EscapeUnicode

+###org/apache/tools/ant/filters/ExpandProperties
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#add(Lorg/apache/tools/ant/types/PropertySet;)V
+#read()I
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/ExpandProperties

+###org/apache/tools/ant/filters/FixCrLfFilter$AddAsisRemove
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#newInstance(Ljava/lang/String;)Lorg/apache/tools/ant/filters/FixCrLfFilter$AddAsisRemove;
@3.5.1
-###org/apache/tools/ant/filters/FixCrLfFilter$AddAsisRemove

+###org/apache/tools/ant/filters/FixCrLfFilter$CrLf
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#newInstance(Ljava/lang/String;)Lorg/apache/tools/ant/filters/FixCrLfFilter$CrLf;
@3.5.1
-###org/apache/tools/ant/filters/FixCrLfFilter$CrLf

+###org/apache/tools/ant/filters/FixCrLfFilter
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
+#getEof()Lorg/apache/tools/ant/filters/FixCrLfFilter$AddAsisRemove;
+#getEol()Lorg/apache/tools/ant/filters/FixCrLfFilter$CrLf;
+#getFixlast()Z
+#getJavafiles()Z
+#getTab()Lorg/apache/tools/ant/filters/FixCrLfFilter$AddAsisRemove;
+#getTablength()I
+#read()I
+#setEof(Lorg/apache/tools/ant/filters/FixCrLfFilter$AddAsisRemove;)V
+#setEol(Lorg/apache/tools/ant/filters/FixCrLfFilter$CrLf;)V
+#setFixlast(Z)V
+#setJavafiles(Z)V
+#setTab(Lorg/apache/tools/ant/filters/FixCrLfFilter$AddAsisRemove;)V
+#setTablength(I)V
@3.5.1
-###org/apache/tools/ant/filters/FixCrLfFilter

+###org/apache/tools/ant/filters/HeadFilter
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#setLines(J)V
+#setSkip(J)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/HeadFilter

+###org/apache/tools/ant/filters/LineContains$Contains
@3.5
+#<init>()V
+#setValue(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/LineContains$Contains

+###org/apache/tools/ant/filters/LineContains
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#addConfiguredContains(Lorg/apache/tools/ant/filters/LineContains$Contains;)V
+#setNegate(Z)V
+#isNegated()Z
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/LineContains

+###org/apache/tools/ant/filters/LineContainsRegExp
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#addConfiguredRegexp(Lorg/apache/tools/ant/types/RegularExpression;)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
+#setNegate(Z)V
+#setCaseSensitive(Z)V
+#isNegated()Z
@3.5.1
-###org/apache/tools/ant/filters/LineContainsRegExp

+###org/apache/tools/ant/filters/PrefixLines
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#setPrefix(Ljava/lang/String;)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/PrefixLines

+###org/apache/tools/ant/filters/ReplaceTokens$Token
@3.5
+#<init>()V
+#setKey(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/ReplaceTokens$Token

+###org/apache/tools/ant/filters/ReplaceTokens
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#setBeginToken(Ljava/lang/String;)V
+#setEndToken(Ljava/lang/String;)V
+#setPropertiesResource(Lorg/apache/tools/ant/types/Resource;)V
+#addConfiguredToken(Lorg/apache/tools/ant/filters/ReplaceTokens$Token;)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/ReplaceTokens

+###org/apache/tools/ant/filters/SortFilter
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
+#isReverse()Z
+#setReverse(Z)V
+#getComparator()Ljava/util/Comparator;
+#setComparator(Ljava/util/Comparator;)V
+#add(Ljava/util/Comparator;)V
@3.5.1
-###org/apache/tools/ant/filters/SortFilter

+###org/apache/tools/ant/filters/StringInputStream
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/filters/StringInputStream

+###org/apache/tools/ant/filters/StripJavaComments
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/StripJavaComments

+###org/apache/tools/ant/filters/StripLineBreaks
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#setLineBreaks(Ljava/lang/String;)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/StripLineBreaks

+###org/apache/tools/ant/filters/StripLineComments$Comment
@3.5
+#<init>()V
+#setValue(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#addText(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/filters/StripLineComments$Comment

+###org/apache/tools/ant/filters/StripLineComments
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#addConfiguredComment(Lorg/apache/tools/ant/filters/StripLineComments$Comment;)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/StripLineComments

+###org/apache/tools/ant/filters/SuffixLines
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#setSuffix(Ljava/lang/String;)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/SuffixLines

+###org/apache/tools/ant/filters/TabsToSpaces
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#setTablength(I)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/TabsToSpaces

+###org/apache/tools/ant/filters/TailFilter
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#setLines(J)V
+#setSkip(J)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/TailFilter

+###org/apache/tools/ant/filters/TokenFilter$ChainableReaderFilter
@3.5
+#<init>()V
+#setByLine(Z)V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$ChainableReaderFilter

+###org/apache/tools/ant/filters/TokenFilter$ContainsRegex
@3.5
+#<init>()V
+#setPattern(Ljava/lang/String;)V
+#setReplace(Ljava/lang/String;)V
+#setFlags(Ljava/lang/String;)V
+#filter(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$ContainsRegex

+###org/apache/tools/ant/filters/TokenFilter$ContainsString
@3.5
+#<init>()V
+#setContains(Ljava/lang/String;)V
+#filter(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$ContainsString

+###org/apache/tools/ant/filters/TokenFilter$DeleteCharacters
@3.5
+#<init>()V
+#setChars(Ljava/lang/String;)V
+#filter(Ljava/lang/String;)Ljava/lang/String;
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$DeleteCharacters

+###org/apache/tools/ant/filters/TokenFilter$FileTokenizer
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$FileTokenizer

+###org/apache/tools/ant/filters/TokenFilter$Filter
@3.5
+#filter(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$Filter

+###org/apache/tools/ant/filters/TokenFilter$IgnoreBlank
@3.5
+#<init>()V
+#filter(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$IgnoreBlank

+###org/apache/tools/ant/filters/TokenFilter$ReplaceRegex
@3.5
+#<init>()V
+#setPattern(Ljava/lang/String;)V
+#setReplace(Ljava/lang/String;)V
+#setFlags(Ljava/lang/String;)V
+#filter(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$ReplaceRegex

+###org/apache/tools/ant/filters/TokenFilter$ReplaceString
@3.5
+#<init>()V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#filter(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$ReplaceString

+###org/apache/tools/ant/filters/TokenFilter$StringTokenizer
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$StringTokenizer

+###org/apache/tools/ant/filters/TokenFilter$Trim
@3.5
+#<init>()V
+#filter(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter$Trim

+###org/apache/tools/ant/filters/TokenFilter
@3.5
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#read()I
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
+#setDelimOutput(Ljava/lang/String;)V
+#addLineTokenizer(Lorg/apache/tools/ant/util/LineTokenizer;)V
+#addStringTokenizer(Lorg/apache/tools/ant/filters/TokenFilter$StringTokenizer;)V
+#addFileTokenizer(Lorg/apache/tools/ant/filters/TokenFilter$FileTokenizer;)V
+#add(Lorg/apache/tools/ant/util/Tokenizer;)V
+#addReplaceString(Lorg/apache/tools/ant/filters/TokenFilter$ReplaceString;)V
+#addContainsString(Lorg/apache/tools/ant/filters/TokenFilter$ContainsString;)V
+#addReplaceRegex(Lorg/apache/tools/ant/filters/TokenFilter$ReplaceRegex;)V
+#addContainsRegex(Lorg/apache/tools/ant/filters/TokenFilter$ContainsRegex;)V
+#addTrim(Lorg/apache/tools/ant/filters/TokenFilter$Trim;)V
+#addIgnoreBlank(Lorg/apache/tools/ant/filters/TokenFilter$IgnoreBlank;)V
+#addDeleteCharacters(Lorg/apache/tools/ant/filters/TokenFilter$DeleteCharacters;)V
+#add(Lorg/apache/tools/ant/filters/TokenFilter$Filter;)V
+#resolveBackSlash(Ljava/lang/String;)Ljava/lang/String;
+#convertRegexOptions(Ljava/lang/String;)I
@3.5.1
-###org/apache/tools/ant/filters/TokenFilter

+###org/apache/tools/ant/filters/UniqFilter
@3.5
+#<init>()V
+#filter(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/UniqFilter

+###org/apache/tools/ant/filters/util/ChainReaderHelper
@3.5
+#<init>()V
+#setPrimaryReader(Ljava/io/Reader;)V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#setBufferSize(I)V
+#setFilterChains(Ljava/util/Vector;)V
+#getAssembledReader()Ljava/io/Reader;
+#readFully(Ljava/io/Reader;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/filters/util/ChainReaderHelper

+###org/apache/tools/ant/helper/AntXMLContext
@3.5
+#<init>(Lorg/apache/tools/ant/Project;)V
+#setBuildFile(Ljava/io/File;)V
+#setBuildFile(Ljava/net/URL;)V
+#getBuildFile()Ljava/io/File;
+#getBuildFileParent()Ljava/io/File;
+#getBuildFileURL()Ljava/net/URL;
+#getBuildFileParentURL()Ljava/net/URL;
+#getProject()Lorg/apache/tools/ant/Project;
+#getCurrentProjectName()Ljava/lang/String;
+#setCurrentProjectName(Ljava/lang/String;)V
+#currentWrapper()Lorg/apache/tools/ant/RuntimeConfigurable;
+#parentWrapper()Lorg/apache/tools/ant/RuntimeConfigurable;
+#pushWrapper(Lorg/apache/tools/ant/RuntimeConfigurable;)V
+#popWrapper()V
+#getWrapperStack()Ljava/util/Vector;
+#addTarget(Lorg/apache/tools/ant/Target;)V
+#getCurrentTarget()Lorg/apache/tools/ant/Target;
+#getImplicitTarget()Lorg/apache/tools/ant/Target;
+#setCurrentTarget(Lorg/apache/tools/ant/Target;)V
+#setImplicitTarget(Lorg/apache/tools/ant/Target;)V
+#getTargets()Ljava/util/Vector;
+#configureId(Ljava/lang/Object;Lorg/xml/sax/Attributes;)V
+#getLocator()Lorg/xml/sax/Locator;
+#setLocator(Lorg/xml/sax/Locator;)V
+#isIgnoringProjectTag()Z
+#setIgnoreProjectTag(Z)V
+#startPrefixMapping(Ljava/lang/String;Ljava/lang/String;)V
+#endPrefixMapping(Ljava/lang/String;)V
+#getPrefixMapping(Ljava/lang/String;)Ljava/lang/String;
+#getCurrentTargets()Ljava/util/Map;
+#setCurrentTargets(Ljava/util/Map;)V
@3.5.1
-###org/apache/tools/ant/helper/AntXMLContext

+###org/apache/tools/ant/helper/DefaultExecutor
@3.5
+#<init>()V
+#executeTargets(Lorg/apache/tools/ant/Project;[Ljava/lang/String;)V
+#getSubProjectExecutor()Lorg/apache/tools/ant/Executor;
@3.5.1
-###org/apache/tools/ant/helper/DefaultExecutor

+###org/apache/tools/ant/helper/IgnoreDependenciesExecutor
@3.5
+#<init>()V
+#executeTargets(Lorg/apache/tools/ant/Project;[Ljava/lang/String;)V
+#getSubProjectExecutor()Lorg/apache/tools/ant/Executor;
@3.5.1
-###org/apache/tools/ant/helper/IgnoreDependenciesExecutor

+###org/apache/tools/ant/helper/ProjectHelper2$AntHandler
@3.5
+#<init>()V
+#onStartElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)V
+#onStartChild(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)Lorg/apache/tools/ant/helper/ProjectHelper2$AntHandler;
+#onEndChild(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/helper/AntXMLContext;)V
+#onEndElement(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/helper/AntXMLContext;)V
+#characters([CIILorg/apache/tools/ant/helper/AntXMLContext;)V
@3.5.1
-###org/apache/tools/ant/helper/ProjectHelper2$AntHandler

+###org/apache/tools/ant/helper/ProjectHelper2$ElementHandler
@3.5
+#<init>()V
+#onStartElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)V
+#characters([CIILorg/apache/tools/ant/helper/AntXMLContext;)V
+#onStartChild(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)Lorg/apache/tools/ant/helper/ProjectHelper2$AntHandler;
+#onEndElement(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/helper/AntXMLContext;)V
@3.5.1
-###org/apache/tools/ant/helper/ProjectHelper2$ElementHandler

+###org/apache/tools/ant/helper/ProjectHelper2$MainHandler
@3.5
+#<init>()V
+#onStartChild(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)Lorg/apache/tools/ant/helper/ProjectHelper2$AntHandler;
@3.5.1
-###org/apache/tools/ant/helper/ProjectHelper2$MainHandler

+###org/apache/tools/ant/helper/ProjectHelper2$ProjectHandler
@3.5
+#<init>()V
+#onStartElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)V
+#onStartChild(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)Lorg/apache/tools/ant/helper/ProjectHelper2$AntHandler;
@3.5.1
-###org/apache/tools/ant/helper/ProjectHelper2$ProjectHandler

+###org/apache/tools/ant/helper/ProjectHelper2$RootHandler
@3.5
+#<init>(Lorg/apache/tools/ant/helper/AntXMLContext;Lorg/apache/tools/ant/helper/ProjectHelper2$AntHandler;)V
+#getCurrentAntHandler()Lorg/apache/tools/ant/helper/ProjectHelper2$AntHandler;
+#resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;
+#startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
+#setDocumentLocator(Lorg/xml/sax/Locator;)V
+#endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#characters([CII)V
+#startPrefixMapping(Ljava/lang/String;Ljava/lang/String;)V
+#endPrefixMapping(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/helper/ProjectHelper2$RootHandler

+###org/apache/tools/ant/helper/ProjectHelper2$TargetHandler
@3.5
+#<init>()V
+#onStartElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)V
+#onStartChild(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/apache/tools/ant/helper/AntXMLContext;)Lorg/apache/tools/ant/helper/ProjectHelper2$AntHandler;
+#onEndElement(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/helper/AntXMLContext;)V
@3.5.1
-###org/apache/tools/ant/helper/ProjectHelper2$TargetHandler

+###org/apache/tools/ant/helper/ProjectHelper2
@3.5
+#<init>()V
+#canParseAntlibDescriptor(Lorg/apache/tools/ant/types/Resource;)Z
+#parseAntlibDescriptor(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Resource;)Lorg/apache/tools/ant/UnknownElement;
+#parseUnknownElement(Lorg/apache/tools/ant/Project;Ljava/net/URL;)Lorg/apache/tools/ant/UnknownElement;
+#parse(Lorg/apache/tools/ant/Project;Ljava/lang/Object;)V
+#parse(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Lorg/apache/tools/ant/helper/ProjectHelper2$RootHandler;)V
@3.5.1
-###org/apache/tools/ant/helper/ProjectHelper2

+###org/apache/tools/ant/helper/ProjectHelperImpl
@3.5
+#<init>()V
+#parse(Lorg/apache/tools/ant/Project;Ljava/lang/Object;)V
@3.5.1
-###org/apache/tools/ant/helper/ProjectHelperImpl

+###org/apache/tools/ant/helper/SingleCheckExecutor
@3.5
+#<init>()V
+#executeTargets(Lorg/apache/tools/ant/Project;[Ljava/lang/String;)V
+#getSubProjectExecutor()Lorg/apache/tools/ant/Executor;
@3.5.1
-###org/apache/tools/ant/helper/SingleCheckExecutor

+###org/apache/tools/ant/input/DefaultInputHandler
@3.5
+#<init>()V
+#handleInput(Lorg/apache/tools/ant/input/InputRequest;)V
@3.5.1
-###org/apache/tools/ant/input/DefaultInputHandler

+###org/apache/tools/ant/input/GreedyInputHandler
@3.5
+#<init>()V
+#handleInput(Lorg/apache/tools/ant/input/InputRequest;)V
@3.5.1
-###org/apache/tools/ant/input/GreedyInputHandler

+###org/apache/tools/ant/input/InputHandler
@3.5
+#handleInput(Lorg/apache/tools/ant/input/InputRequest;)V
@3.5.1
-###org/apache/tools/ant/input/InputHandler

+###org/apache/tools/ant/input/InputRequest
@3.5
+#<init>(Ljava/lang/String;)V
+#getPrompt()Ljava/lang/String;
+#setInput(Ljava/lang/String;)V
+#isInputValid()Z
+#getInput()Ljava/lang/String;
+#getDefaultValue()Ljava/lang/String;
+#setDefaultValue(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/input/InputRequest

+###org/apache/tools/ant/input/MultipleChoiceInputRequest
@3.5
+#<init>(Ljava/lang/String;Ljava/util/Vector;)V
+#getChoices()Ljava/util/Vector;
+#isInputValid()Z
@3.5.1
-###org/apache/tools/ant/input/MultipleChoiceInputRequest

+###org/apache/tools/ant/input/PropertyFileInputHandler
@3.5
+#<init>()V
+#handleInput(Lorg/apache/tools/ant/input/InputRequest;)V
@3.5.1
-###org/apache/tools/ant/input/PropertyFileInputHandler

+###org/apache/tools/ant/input/SecureInputHandler
@3.5
+#<init>()V
+#handleInput(Lorg/apache/tools/ant/input/InputRequest;)V
@3.5.1
-###org/apache/tools/ant/input/SecureInputHandler

+###org/apache/tools/ant/listener/AnsiColorLogger
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/listener/AnsiColorLogger

+###org/apache/tools/ant/listener/BigProjectLogger
@3.5
+#<init>()V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildFinished(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/listener/BigProjectLogger

+###org/apache/tools/ant/listener/MailLogger
@3.5
+#<init>()V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/listener/MailLogger

+###org/apache/tools/ant/listener/ProfileLogger
@3.5
+#<init>()V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/listener/ProfileLogger

+###org/apache/tools/ant/listener/SilentLogger
@3.5
+#<init>()V
+#buildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/listener/SilentLogger

+###org/apache/tools/ant/listener/SimpleBigProjectLogger
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/listener/SimpleBigProjectLogger

+###org/apache/tools/ant/listener/TimestampedLogger
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/listener/TimestampedLogger

+###org/apache/tools/ant/loader/AntClassLoader2
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/loader/AntClassLoader2

+###org/apache/tools/ant/loader/AntClassLoader5
@3.5
+#<init>(Ljava/lang/ClassLoader;Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;Z)V
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;
+#close()V
@3.5.1
-###org/apache/tools/ant/loader/AntClassLoader5

+###org/apache/tools/ant/property/GetProperty
@3.5
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/property/GetProperty

+###org/apache/tools/ant/property/LocalProperties
@3.5
+#get(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/property/LocalProperties;
+#addLocal(Ljava/lang/String;)V
+#enterScope()V
+#exitScope()V
+#copy()V
+#evaluate(Ljava/lang/String;Lorg/apache/tools/ant/PropertyHelper;)Ljava/lang/Object;
+#setNew(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/tools/ant/PropertyHelper;)Z
+#set(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/tools/ant/PropertyHelper;)Z
@3.5.1
-###org/apache/tools/ant/property/LocalProperties

+###org/apache/tools/ant/property/LocalPropertyStack
@3.5
+#<init>()V
+#addLocal(Ljava/lang/String;)V
+#enterScope()V
+#exitScope()V
+#copy()Lorg/apache/tools/ant/property/LocalPropertyStack;
+#evaluate(Ljava/lang/String;Lorg/apache/tools/ant/PropertyHelper;)Ljava/lang/Object;
+#setNew(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/tools/ant/PropertyHelper;)Z
+#set(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/tools/ant/PropertyHelper;)Z
@3.5.1
-###org/apache/tools/ant/property/LocalPropertyStack

+###org/apache/tools/ant/property/NullReturn
@3.5
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/property/NullReturn

+###org/apache/tools/ant/property/ParseNextProperty
@3.5
+#getProject()Lorg/apache/tools/ant/Project;
+#parseNextProperty(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/property/ParseNextProperty

+###org/apache/tools/ant/property/ParseProperties
@3.5
+#<init>(Lorg/apache/tools/ant/Project;Ljava/util/Collection;Lorg/apache/tools/ant/property/GetProperty;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#parseProperties(Ljava/lang/String;)Ljava/lang/Object;
+#containsProperties(Ljava/lang/String;)Z
+#parseNextProperty(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/property/ParseProperties

+###org/apache/tools/ant/property/PropertyExpander
@3.5
+#parsePropertyName(Ljava/lang/String;Ljava/text/ParsePosition;Lorg/apache/tools/ant/property/ParseNextProperty;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/property/PropertyExpander

+###org/apache/tools/ant/property/ResolvePropertyMap
@3.5
+#<init>(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/property/GetProperty;Ljava/util/Collection;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
+#resolveAllProperties(Ljava/util/Map;)V
+#resolveAllProperties(Ljava/util/Map;Ljava/lang/String;)V
+#resolveAllProperties(Ljava/util/Map;Ljava/lang/String;Z)V
@3.5.1
-###org/apache/tools/ant/property/ResolvePropertyMap

+###org/apache/tools/ant/taskdefs/AbstractCvsTask$Module
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/AbstractCvsTask$Module

+###org/apache/tools/ant/taskdefs/AbstractCvsTask
@3.5
+#<init>()V
+#setExecuteStreamHandler(Lorg/apache/tools/ant/taskdefs/ExecuteStreamHandler;)V
+#execute()V
+#setCvsRoot(Ljava/lang/String;)V
+#getCvsRoot()Ljava/lang/String;
+#setCvsRsh(Ljava/lang/String;)V
+#getCvsRsh()Ljava/lang/String;
+#setPort(I)V
+#getPort()I
+#setPassfile(Ljava/io/File;)V
+#getPassFile()Ljava/io/File;
+#setDest(Ljava/io/File;)V
+#getDest()Ljava/io/File;
+#setPackage(Ljava/lang/String;)V
+#getPackage()Ljava/lang/String;
+#getTag()Ljava/lang/String;
+#setTag(Ljava/lang/String;)V
+#addCommandArgument(Ljava/lang/String;)V
+#addCommandArgument(Lorg/apache/tools/ant/types/Commandline;Ljava/lang/String;)V
+#setDate(Ljava/lang/String;)V
+#setCommand(Ljava/lang/String;)V
+#getCommand()Ljava/lang/String;
+#setQuiet(Z)V
+#setReallyquiet(Z)V
+#setNoexec(Z)V
+#setOutput(Ljava/io/File;)V
+#setError(Ljava/io/File;)V
+#setAppend(Z)V
+#setFailOnError(Z)V
+#addConfiguredCommandline(Lorg/apache/tools/ant/types/Commandline;)V
+#addConfiguredCommandline(Lorg/apache/tools/ant/types/Commandline;Z)V
+#setCompressionLevel(I)V
+#setCompression(Z)V
+#addModule(Lorg/apache/tools/ant/taskdefs/AbstractCvsTask$Module;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/AbstractCvsTask

+###org/apache/tools/ant/taskdefs/AbstractJarSignerTask
@3.5
+#<init>()V
+#setMaxmemory(Ljava/lang/String;)V
+#setJar(Ljava/io/File;)V
+#setAlias(Ljava/lang/String;)V
+#setKeystore(Ljava/lang/String;)V
+#setStorepass(Ljava/lang/String;)V
+#setStoretype(Ljava/lang/String;)V
+#setKeypass(Ljava/lang/String;)V
+#setVerbose(Z)V
+#setStrict(Z)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addSysproperty(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#createPath()Lorg/apache/tools/ant/types/Path;
+#getRedirector()Lorg/apache/tools/ant/types/RedirectorElement;
+#setExecutable(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/AbstractJarSignerTask

+###org/apache/tools/ant/taskdefs/Ant$Reference
@3.5
+#<init>()V
+#setToRefid(Ljava/lang/String;)V
+#getToRefid()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Ant$Reference

+###org/apache/tools/ant/taskdefs/Ant$TargetElement
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Ant$TargetElement

+###org/apache/tools/ant/taskdefs/Ant
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Task;)V
+#setUseNativeBasedir(Z)V
+#setInheritAll(Z)V
+#setInheritRefs(Z)V
+#init()V
+#handleOutput(Ljava/lang/String;)V
+#handleInput([BII)I
+#handleFlush(Ljava/lang/String;)V
+#handleErrorOutput(Ljava/lang/String;)V
+#handleErrorFlush(Ljava/lang/String;)V
+#execute()V
+#setDir(Ljava/io/File;)V
+#setAntfile(Ljava/lang/String;)V
+#setTarget(Ljava/lang/String;)V
+#setOutput(Ljava/lang/String;)V
+#createProperty()Lorg/apache/tools/ant/taskdefs/Property;
+#addReference(Lorg/apache/tools/ant/taskdefs/Ant$Reference;)V
+#addConfiguredTarget(Lorg/apache/tools/ant/taskdefs/Ant$TargetElement;)V
+#addPropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Ant

+###org/apache/tools/ant/taskdefs/AntStructure$StructurePrinter
@3.5
+#printHead(Ljava/io/PrintWriter;Lorg/apache/tools/ant/Project;Ljava/util/Hashtable;Ljava/util/Hashtable;)V
+#printTargetDecl(Ljava/io/PrintWriter;)V
+#printElementDecl(Ljava/io/PrintWriter;Lorg/apache/tools/ant/Project;Ljava/lang/String;Ljava/lang/Class;)V
+#printTail(Ljava/io/PrintWriter;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/AntStructure$StructurePrinter

+###org/apache/tools/ant/taskdefs/AntStructure
@3.5
+#<init>()V
+#setOutput(Ljava/io/File;)V
+#add(Lorg/apache/tools/ant/taskdefs/AntStructure$StructurePrinter;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/AntStructure

+###org/apache/tools/ant/taskdefs/Antlib
@3.5
+#<init>()V
+#createAntlib(Lorg/apache/tools/ant/Project;Ljava/net/URL;Ljava/lang/String;)Lorg/apache/tools/ant/taskdefs/Antlib;
+#addTask(Lorg/apache/tools/ant/Task;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Antlib

+###org/apache/tools/ant/taskdefs/AntlibDefinition
@3.5
+#<init>()V
+#setURI(Ljava/lang/String;)V
+#getURI()Ljava/lang/String;
+#setAntlibClassLoader(Ljava/lang/ClassLoader;)V
+#getAntlibClassLoader()Ljava/lang/ClassLoader;
@3.5.1
-###org/apache/tools/ant/taskdefs/AntlibDefinition

+###org/apache/tools/ant/taskdefs/Apt$Option
@3.5
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Apt$Option

+###org/apache/tools/ant/taskdefs/Apt
@3.5
+#<init>()V
+#getAptExecutable()Ljava/lang/String;
+#setCompiler(Ljava/lang/String;)V
+#setFork(Z)V
+#getCompiler()Ljava/lang/String;
+#isCompile()Z
+#setCompile(Z)V
+#getFactory()Ljava/lang/String;
+#setFactory(Ljava/lang/String;)V
+#setFactoryPathRef(Lorg/apache/tools/ant/types/Reference;)V
+#createFactoryPath()Lorg/apache/tools/ant/types/Path;
+#getFactoryPath()Lorg/apache/tools/ant/types/Path;
+#createOption()Lorg/apache/tools/ant/taskdefs/Apt$Option;
+#getOptions()Ljava/util/Vector;
+#getPreprocessDir()Ljava/io/File;
+#setPreprocessDir(Ljava/io/File;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Apt

+###org/apache/tools/ant/taskdefs/AttributeNamespaceDef
@3.5
+#<init>()V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/AttributeNamespaceDef

+###org/apache/tools/ant/taskdefs/AugmentReference
@3.5
+#<init>()V
+#checkProxyClass(Ljava/lang/Class;)V
+#getProxy()Ljava/lang/Object;
+#setProxy(Ljava/lang/Object;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/AugmentReference

+###org/apache/tools/ant/taskdefs/Available$FileDir
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#isDir()Z
+#isFile()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Available$FileDir

+###org/apache/tools/ant/taskdefs/Available
@3.5
+#<init>()V
+#setSearchParents(Z)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setFilepath(Lorg/apache/tools/ant/types/Path;)V
+#createFilepath()Lorg/apache/tools/ant/types/Path;
+#setProperty(Ljava/lang/String;)V
+#setValue(Ljava/lang/Object;)V
+#setValue(Ljava/lang/String;)V
+#setClassname(Ljava/lang/String;)V
+#setFile(Ljava/io/File;)V
+#setResource(Ljava/lang/String;)V
+#setType(Ljava/lang/String;)V
+#setType(Lorg/apache/tools/ant/taskdefs/Available$FileDir;)V
+#setIgnoresystemclasses(Z)V
+#execute()V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Available

+###org/apache/tools/ant/taskdefs/BUnzip2
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/BUnzip2

+###org/apache/tools/ant/taskdefs/BZip2
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/BZip2

+###org/apache/tools/ant/taskdefs/Basename
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setProperty(Ljava/lang/String;)V
+#setSuffix(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Basename

+###org/apache/tools/ant/taskdefs/BindTargets
@3.5
+#<init>()V
+#setExtensionPoint(Ljava/lang/String;)V
+#setOnMissingExtensionPoint(Ljava/lang/String;)V
+#setOnMissingExtensionPoint(Lorg/apache/tools/ant/ProjectHelper$OnMissingExtensionPoint;)V
+#setTargets(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/BindTargets

+###org/apache/tools/ant/taskdefs/BuildNumber
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/BuildNumber

+###org/apache/tools/ant/taskdefs/CVSPass
@3.5
+#<init>()V
+#execute()V
+#setCvsroot(Ljava/lang/String;)V
+#setPassfile(Ljava/io/File;)V
+#setPassword(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/CVSPass

+###org/apache/tools/ant/taskdefs/CallTarget
@3.5
+#<init>()V
+#setInheritAll(Z)V
+#setInheritRefs(Z)V
+#init()V
+#execute()V
+#createParam()Lorg/apache/tools/ant/taskdefs/Property;
+#addReference(Lorg/apache/tools/ant/taskdefs/Ant$Reference;)V
+#addPropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
+#setTarget(Ljava/lang/String;)V
+#addConfiguredTarget(Lorg/apache/tools/ant/taskdefs/Ant$TargetElement;)V
+#handleOutput(Ljava/lang/String;)V
+#handleInput([BII)I
+#handleFlush(Ljava/lang/String;)V
+#handleErrorOutput(Ljava/lang/String;)V
+#handleErrorFlush(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/CallTarget

+###org/apache/tools/ant/taskdefs/Checksum$FormatElement
@3.5
+#<init>()V
+#getDefault()Lorg/apache/tools/ant/taskdefs/Checksum$FormatElement;
+#getFormat()Ljava/text/MessageFormat;
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Checksum$FormatElement

+###org/apache/tools/ant/taskdefs/Checksum
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setTodir(Ljava/io/File;)V
+#setAlgorithm(Ljava/lang/String;)V
+#setProvider(Ljava/lang/String;)V
+#setFileext(Ljava/lang/String;)V
+#setProperty(Ljava/lang/String;)V
+#setTotalproperty(Ljava/lang/String;)V
+#setVerifyproperty(Ljava/lang/String;)V
+#setForceOverwrite(Z)V
+#setReadBufferSize(I)V
+#setFormat(Lorg/apache/tools/ant/taskdefs/Checksum$FormatElement;)V
+#setPattern(Ljava/lang/String;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#execute()V
+#eval()Z
+#decodeHex([C)[B
@3.5.1
-###org/apache/tools/ant/taskdefs/Checksum

+###org/apache/tools/ant/taskdefs/Chmod
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#setFile(Ljava/io/File;)V
+#setDir(Ljava/io/File;)V
+#setPerm(Ljava/lang/String;)V
+#createInclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createPatternSet()Lorg/apache/tools/ant/types/PatternSet;
+#setIncludes(Ljava/lang/String;)V
+#setExcludes(Ljava/lang/String;)V
+#setDefaultexcludes(Z)V
+#execute()V
+#setExecutable(Ljava/lang/String;)V
+#setCommand(Lorg/apache/tools/ant/types/Commandline;)V
+#setSkipEmptyFilesets(Z)V
+#setAddsourcefile(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Chmod

+###org/apache/tools/ant/taskdefs/Classloader
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setReset(Z)V
+#setReverse(Z)V
+#setParentFirst(Z)V
+#setParentName(Ljava/lang/String;)V
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Classloader

+###org/apache/tools/ant/taskdefs/CloseResources
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/CloseResources

+###org/apache/tools/ant/taskdefs/CommandLauncherTask
@3.5
+#<init>()V
+#addConfigured(Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;)V
+#execute()V
+#setVmLauncher(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/CommandLauncherTask

+###org/apache/tools/ant/taskdefs/Componentdef
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Componentdef

+###org/apache/tools/ant/taskdefs/Concat$TextElement
@3.5
+#<init>()V
+#setFiltering(Z)V
+#setEncoding(Ljava/lang/String;)V
+#setFile(Ljava/io/File;)V
+#addText(Ljava/lang/String;)V
+#setTrimLeading(Z)V
+#setTrim(Z)V
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Concat$TextElement

+###org/apache/tools/ant/taskdefs/Concat
@3.5
+#<init>()V
+#reset()V
+#setDestfile(Ljava/io/File;)V
+#setDest(Lorg/apache/tools/ant/types/Resource;)V
+#setAppend(Z)V
+#setEncoding(Ljava/lang/String;)V
+#setOutputEncoding(Ljava/lang/String;)V
+#setForce(Z)V
+#setOverwrite(Z)V
+#setForceReadOnly(Z)V
+#setIgnoreEmpty(Z)V
+#setResourceName(Ljava/lang/String;)V
+#createPath()Lorg/apache/tools/ant/types/Path;
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addFilelist(Lorg/apache/tools/ant/types/FileList;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#addFilterChain(Lorg/apache/tools/ant/types/FilterChain;)V
+#addText(Ljava/lang/String;)V
+#addHeader(Lorg/apache/tools/ant/taskdefs/Concat$TextElement;)V
+#addFooter(Lorg/apache/tools/ant/taskdefs/Concat$TextElement;)V
+#setFixLastLine(Z)V
+#setEol(Lorg/apache/tools/ant/taskdefs/FixCRLF$CrLf;)V
+#setWriter(Ljava/io/Writer;)V
+#setBinary(Z)V
+#execute()V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Concat

+###org/apache/tools/ant/taskdefs/ConditionTask
@3.5
+#<init>()V
+#setProperty(Ljava/lang/String;)V
+#setValue(Ljava/lang/Object;)V
+#setValue(Ljava/lang/String;)V
+#setElse(Ljava/lang/Object;)V
+#setElse(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/ConditionTask

+###org/apache/tools/ant/taskdefs/Copy
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setTofile(Ljava/io/File;)V
+#setTodir(Ljava/io/File;)V
+#createFilterChain()Lorg/apache/tools/ant/types/FilterChain;
+#createFilterSet()Lorg/apache/tools/ant/types/FilterSet;
+#setPreserveLastModified(Ljava/lang/String;)V[deprecated]
+#setPreserveLastModified(Z)V
+#getPreserveLastModified()Z
+#setFiltering(Z)V
+#setOverwrite(Z)V
+#setForce(Z)V
+#getForce()Z
+#setFlatten(Z)V
+#setVerbose(Z)V
+#setIncludeEmptyDirs(Z)V
+#setQuiet(Z)V
+#setEnableMultipleMappings(Z)V
+#isEnableMultipleMapping()Z
+#setFailOnError(Z)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setOutputEncoding(Ljava/lang/String;)V
+#getOutputEncoding()Ljava/lang/String;
+#setGranularity(J)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Copy

+###org/apache/tools/ant/taskdefs/CopyPath
@3.5
+#<init>()V
+#setDestDir(Ljava/io/File;)V
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#setPath(Lorg/apache/tools/ant/types/Path;)V
+#setPathRef(Lorg/apache/tools/ant/types/Reference;)V
+#createPath()Lorg/apache/tools/ant/types/Path;
+#setGranularity(J)V
+#setPreserveLastModified(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/CopyPath

+###org/apache/tools/ant/taskdefs/Copydir
@3.5
+#<init>()V
+#setSrc(Ljava/io/File;)V
+#setDest(Ljava/io/File;)V
+#setFiltering(Z)V
+#setFlatten(Z)V
+#setForceoverwrite(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Copydir

+###org/apache/tools/ant/taskdefs/Copyfile
@3.5
+#<init>()V
+#setSrc(Ljava/io/File;)V
+#setForceoverwrite(Z)V
+#setDest(Ljava/io/File;)V
+#setFiltering(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Copyfile

+###org/apache/tools/ant/taskdefs/Cvs
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Cvs

+###org/apache/tools/ant/taskdefs/DefBase
@3.5
+#<init>()V
+#setReverseLoader(Z)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#isReverseLoader()Z
+#getLoaderId()Ljava/lang/String;
+#getClasspathId()Ljava/lang/String;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setLoaderRef(Lorg/apache/tools/ant/types/Reference;)V
+#init()V
@3.5.1
-###org/apache/tools/ant/taskdefs/DefBase

+###org/apache/tools/ant/taskdefs/DefaultExcludes
@3.5
+#<init>()V
+#execute()V
+#setDefault(Z)V
+#setAdd(Ljava/lang/String;)V
+#setRemove(Ljava/lang/String;)V
+#setEcho(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/DefaultExcludes

+###org/apache/tools/ant/taskdefs/Definer$Format
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Definer$Format

+###org/apache/tools/ant/taskdefs/Definer$OnError
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Definer$OnError

+###org/apache/tools/ant/taskdefs/Definer
@3.5
+#<init>()V
+#setOnError(Lorg/apache/tools/ant/taskdefs/Definer$OnError;)V
+#setFormat(Lorg/apache/tools/ant/taskdefs/Definer$Format;)V
+#getName()Ljava/lang/String;
+#getFile()Ljava/io/File;
+#getResource()Ljava/lang/String;
+#execute()V
+#makeResourceFromURI(Ljava/lang/String;)Ljava/lang/String;
+#setFile(Ljava/io/File;)V
+#setResource(Ljava/lang/String;)V
+#setAntlib(Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#getClassname()Ljava/lang/String;
+#setClassname(Ljava/lang/String;)V
+#setAdapter(Ljava/lang/String;)V
+#setAdaptTo(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Definer

+###org/apache/tools/ant/taskdefs/Delete
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setDir(Ljava/io/File;)V
+#setVerbose(Z)V
+#setQuiet(Z)V
+#setFailOnError(Z)V
+#setDeleteOnExit(Z)V
+#setIncludeEmptyDirs(Z)V
+#setPerformGcOnFailedDelete(Z)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#createInclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createIncludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExcludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createPatternSet()Lorg/apache/tools/ant/types/PatternSet;
+#setIncludes(Ljava/lang/String;)V
+#setExcludes(Ljava/lang/String;)V
+#setDefaultexcludes(Z)V
+#setIncludesfile(Ljava/io/File;)V
+#setExcludesfile(Ljava/io/File;)V
+#setCaseSensitive(Z)V
+#setFollowSymlinks(Z)V
+#setRemoveNotFollowedSymlinks(Z)V
+#addSelector(Lorg/apache/tools/ant/types/selectors/SelectSelector;)V
+#addAnd(Lorg/apache/tools/ant/types/selectors/AndSelector;)V
+#addOr(Lorg/apache/tools/ant/types/selectors/OrSelector;)V
+#addNot(Lorg/apache/tools/ant/types/selectors/NotSelector;)V
+#addNone(Lorg/apache/tools/ant/types/selectors/NoneSelector;)V
+#addMajority(Lorg/apache/tools/ant/types/selectors/MajoritySelector;)V
+#addDate(Lorg/apache/tools/ant/types/selectors/DateSelector;)V
+#addSize(Lorg/apache/tools/ant/types/selectors/SizeSelector;)V
+#addFilename(Lorg/apache/tools/ant/types/selectors/FilenameSelector;)V
+#addCustom(Lorg/apache/tools/ant/types/selectors/ExtendSelector;)V
+#addContains(Lorg/apache/tools/ant/types/selectors/ContainsSelector;)V
+#addPresent(Lorg/apache/tools/ant/types/selectors/PresentSelector;)V
+#addDepth(Lorg/apache/tools/ant/types/selectors/DepthSelector;)V
+#addDepend(Lorg/apache/tools/ant/types/selectors/DependSelector;)V
+#addContainsRegexp(Lorg/apache/tools/ant/types/selectors/ContainsRegexpSelector;)V
+#addModified(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector;)V
+#add(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Delete

+###org/apache/tools/ant/taskdefs/Deltree
@3.5
+#<init>()V
+#setDir(Ljava/io/File;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Deltree

+###org/apache/tools/ant/taskdefs/DependSet
@3.5
+#<init>()V
+#createSources()Lorg/apache/tools/ant/types/resources/Union;
+#addSrcfileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addSrcfilelist(Lorg/apache/tools/ant/types/FileList;)V
+#createTargets()Lorg/apache/tools/ant/types/Path;
+#addTargetfileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addTargetfilelist(Lorg/apache/tools/ant/types/FileList;)V
+#setVerbose(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/DependSet

+###org/apache/tools/ant/taskdefs/DiagnosticsTask
@3.5
+#<init>()V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/DiagnosticsTask

+###org/apache/tools/ant/taskdefs/Dirname
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setProperty(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Dirname

+###org/apache/tools/ant/taskdefs/Ear
@3.5
+#<init>()V
+#setEarfile(Ljava/io/File;)V
+#setAppxml(Ljava/io/File;)V
+#addArchives(Lorg/apache/tools/ant/types/ZipFileSet;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Ear

+###org/apache/tools/ant/taskdefs/Echo$EchoLevel
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Echo$EchoLevel

+###org/apache/tools/ant/taskdefs/Echo
@3.5
+#<init>()V
+#execute()V
+#setMessage(Ljava/lang/String;)V
+#setFile(Ljava/io/File;)V
+#setOutput(Lorg/apache/tools/ant/types/Resource;)V
+#setAppend(Z)V
+#addText(Ljava/lang/String;)V
+#setLevel(Lorg/apache/tools/ant/taskdefs/Echo$EchoLevel;)V
+#setEncoding(Ljava/lang/String;)V
+#setForce(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Echo

+###org/apache/tools/ant/taskdefs/EchoXML$NamespacePolicy
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
+#getPolicy()Lorg/apache/tools/ant/util/DOMElementWriter$XmlNamespacePolicy;
@3.5.1
-###org/apache/tools/ant/taskdefs/EchoXML$NamespacePolicy

+###org/apache/tools/ant/taskdefs/EchoXML
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setNamespacePolicy(Lorg/apache/tools/ant/taskdefs/EchoXML$NamespacePolicy;)V
+#setAppend(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/EchoXML

+###org/apache/tools/ant/taskdefs/Exec
@3.5
+#<init>()V
+#execute()V
+#setDir(Ljava/lang/String;)V
+#setOs(Ljava/lang/String;)V
+#setCommand(Ljava/lang/String;)V
+#setOutput(Ljava/lang/String;)V
+#setFailonerror(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Exec

+###org/apache/tools/ant/taskdefs/ExecTask
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Task;)V
+#setSpawn(Z)V
+#setTimeout(Ljava/lang/Long;)V
+#setTimeout(Ljava/lang/Integer;)V
+#setExecutable(Ljava/lang/String;)V
+#setDir(Ljava/io/File;)V
+#setOs(Ljava/lang/String;)V
+#getOs()Ljava/lang/String;
+#setCommand(Lorg/apache/tools/ant/types/Commandline;)V
+#setOutput(Ljava/io/File;)V
+#setInput(Ljava/io/File;)V
+#setInputString(Ljava/lang/String;)V
+#setLogError(Z)V
+#setError(Ljava/io/File;)V
+#setOutputproperty(Ljava/lang/String;)V
+#setErrorProperty(Ljava/lang/String;)V
+#setFailonerror(Z)V
+#setNewenvironment(Z)V
+#setResolveExecutable(Z)V
+#setSearchPath(Z)V
+#getResolveExecutable()Z
+#addEnv(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#createArg()Lorg/apache/tools/ant/types/Commandline$Argument;
+#setResultProperty(Ljava/lang/String;)V
+#setFailIfExecutionFails(Z)V
+#setAppend(Z)V
+#addConfiguredRedirector(Lorg/apache/tools/ant/types/RedirectorElement;)V
+#setOsFamily(Ljava/lang/String;)V
+#getOsFamily()Ljava/lang/String;
+#execute()V
+#setVMLauncher(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/ExecTask

+###org/apache/tools/ant/taskdefs/Execute
@3.5
+#setSpawn(Z)V[deprecated]
+#getEnvironmentVariables()Ljava/util/Map;
+#getProcEnvironment()Ljava/util/Vector;[deprecated]
+#toString(Ljava/io/ByteArrayOutputStream;)Ljava/lang/String;
+#<init>()V
+#<init>(Lorg/apache/tools/ant/taskdefs/ExecuteStreamHandler;)V
+#<init>(Lorg/apache/tools/ant/taskdefs/ExecuteStreamHandler;Lorg/apache/tools/ant/taskdefs/ExecuteWatchdog;)V
+#setStreamHandler(Lorg/apache/tools/ant/taskdefs/ExecuteStreamHandler;)V
+#getCommandline()[Ljava/lang/String;
+#setCommandline([Ljava/lang/String;)V
+#setNewenvironment(Z)V
+#getEnvironment()[Ljava/lang/String;
+#setEnvironment([Ljava/lang/String;)V
+#setWorkingDirectory(Ljava/io/File;)V
+#getWorkingDirectory()Ljava/io/File;
+#setAntRun(Lorg/apache/tools/ant/Project;)V
+#setVMLauncher(Z)V
+#launch(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;Z)Ljava/lang/Process;
+#execute()I
+#spawn()V
+#getExitValue()I
+#isFailure(I)Z
+#isFailure()Z
+#killedProcess()Z
+#runCommand(Lorg/apache/tools/ant/Task;[Ljava/lang/String;)V
+#closeStreams(Ljava/lang/Process;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Execute

+###org/apache/tools/ant/taskdefs/ExecuteJava
@3.5
+#<init>()V
+#setJavaCommand(Lorg/apache/tools/ant/types/Commandline;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#setSystemProperties(Lorg/apache/tools/ant/types/CommandlineJava$SysProperties;)V
+#setPermissions(Lorg/apache/tools/ant/types/Permissions;)V
+#setOutput(Ljava/io/PrintStream;)V
+#setTimeout(Ljava/lang/Long;)V
+#execute(Lorg/apache/tools/ant/Project;)V
+#run()V
+#timeoutOccured(Lorg/apache/tools/ant/util/Watchdog;)V
+#killedProcess()Z
+#fork(Lorg/apache/tools/ant/ProjectComponent;)I
+#setupCommandLineForVMS(Lorg/apache/tools/ant/taskdefs/Execute;[Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/ExecuteJava

+###org/apache/tools/ant/taskdefs/ExecuteOn$FileDirBoth
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/ExecuteOn$FileDirBoth

+###org/apache/tools/ant/taskdefs/ExecuteOn
@3.5
+#<init>()V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addDirset(Lorg/apache/tools/ant/types/DirSet;)V
+#addFilelist(Lorg/apache/tools/ant/types/FileList;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setRelative(Z)V
+#setParallel(Z)V
+#setType(Lorg/apache/tools/ant/taskdefs/ExecuteOn$FileDirBoth;)V
+#setSkipEmptyFilesets(Z)V
+#setDest(Ljava/io/File;)V
+#setForwardslash(Z)V
+#setMaxParallel(I)V
+#setAddsourcefile(Z)V
+#setVerbose(Z)V
+#setIgnoremissing(Z)V
+#setForce(Z)V
+#createSrcfile()Lorg/apache/tools/ant/types/Commandline$Marker;
+#createTargetfile()Lorg/apache/tools/ant/types/Commandline$Marker;
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/ExecuteOn

+###org/apache/tools/ant/taskdefs/ExecuteStreamHandler
@3.5
+#setProcessInputStream(Ljava/io/OutputStream;)V
+#setProcessErrorStream(Ljava/io/InputStream;)V
+#setProcessOutputStream(Ljava/io/InputStream;)V
+#start()V
+#stop()V
@3.5.1
-###org/apache/tools/ant/taskdefs/ExecuteStreamHandler

+###org/apache/tools/ant/taskdefs/ExecuteWatchdog
@3.5
+#<init>(J)V
+#<init>(I)V
+#start(Ljava/lang/Process;)V
+#stop()V
+#timeoutOccured(Lorg/apache/tools/ant/util/Watchdog;)V
+#checkException()V
+#isWatching()Z
+#killedProcess()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/ExecuteWatchdog

+###org/apache/tools/ant/taskdefs/Exit
@3.5
+#<init>()V
+#setMessage(Ljava/lang/String;)V
+#setIf(Ljava/lang/Object;)V
+#setIf(Ljava/lang/String;)V
+#setUnless(Ljava/lang/Object;)V
+#setUnless(Ljava/lang/String;)V
+#setStatus(I)V
+#execute()V
+#addText(Ljava/lang/String;)V
+#createCondition()Lorg/apache/tools/ant/taskdefs/condition/ConditionBase;
@3.5.1
-###org/apache/tools/ant/taskdefs/Exit

+###org/apache/tools/ant/taskdefs/Expand
@3.5
+#<init>()V
+#setFailOnEmptyArchive(Z)V
+#getFailOnEmptyArchive()Z
+#execute()V
+#setDest(Ljava/io/File;)V
+#setSrc(Ljava/io/File;)V
+#setOverwrite(Z)V
+#addPatternset(Lorg/apache/tools/ant/types/PatternSet;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setStripAbsolutePathSpec(Z)V
+#setScanForUnicodeExtraFields(Z)V
+#getScanForUnicodeExtraFields()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Expand

+###org/apache/tools/ant/taskdefs/Filter
@3.5
+#<init>()V
+#setToken(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#setFiltersfile(Ljava/io/File;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Filter

+###org/apache/tools/ant/taskdefs/FixCRLF$AddAsisRemove
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/FixCRLF$AddAsisRemove

+###org/apache/tools/ant/taskdefs/FixCRLF$CrLf
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/FixCRLF$CrLf

+###org/apache/tools/ant/taskdefs/FixCRLF$OneLiner
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/FixCRLF;Ljava/io/File;)V
+#getEofStr()Ljava/lang/String;
+#getState()I
+#setState(I)V
+#hasMoreElements()Z
+#nextElement()Ljava/lang/Object;
+#close()V
@3.5.1
-###org/apache/tools/ant/taskdefs/FixCRLF$OneLiner

+###org/apache/tools/ant/taskdefs/FixCRLF
@3.5
+#<init>()V
+#chain(Ljava/io/Reader;)Ljava/io/Reader;
+#setSrcdir(Ljava/io/File;)V
+#setDestdir(Ljava/io/File;)V
+#setJavafiles(Z)V
+#setFile(Ljava/io/File;)V
+#setEol(Lorg/apache/tools/ant/taskdefs/FixCRLF$CrLf;)V
+#setCr(Lorg/apache/tools/ant/taskdefs/FixCRLF$AddAsisRemove;)V
+#setTab(Lorg/apache/tools/ant/taskdefs/FixCRLF$AddAsisRemove;)V
+#setTablength(I)V
+#setEof(Lorg/apache/tools/ant/taskdefs/FixCRLF$AddAsisRemove;)V
+#setEncoding(Ljava/lang/String;)V
+#setOutputEncoding(Ljava/lang/String;)V
+#setFixlast(Z)V
+#setPreserveLastModified(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/FixCRLF

+###org/apache/tools/ant/taskdefs/GUnzip
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/GUnzip

+###org/apache/tools/ant/taskdefs/GZip
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/GZip

+###org/apache/tools/ant/taskdefs/GenerateKey$DistinguishedName
@3.5
+#<init>()V
+#createParam()Ljava/lang/Object;
+#getParams()Ljava/util/Enumeration;
+#toString()Ljava/lang/String;
+#encode(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/GenerateKey$DistinguishedName

+###org/apache/tools/ant/taskdefs/GenerateKey$DnameParam
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/GenerateKey$DnameParam

+###org/apache/tools/ant/taskdefs/GenerateKey
@3.5
+#<init>()V
+#createDname()Lorg/apache/tools/ant/taskdefs/GenerateKey$DistinguishedName;
+#setDname(Ljava/lang/String;)V
+#setAlias(Ljava/lang/String;)V
+#setKeystore(Ljava/lang/String;)V
+#setStorepass(Ljava/lang/String;)V
+#setStoretype(Ljava/lang/String;)V
+#setKeypass(Ljava/lang/String;)V
+#setSigalg(Ljava/lang/String;)V
+#setKeyalg(Ljava/lang/String;)V
+#setKeysize(Ljava/lang/String;)V
+#setValidity(Ljava/lang/String;)V
+#setVerbose(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/GenerateKey

+###org/apache/tools/ant/taskdefs/Get$Base64Converter
@3.5
@3.5.1
-###org/apache/tools/ant/taskdefs/Get$Base64Converter

+###org/apache/tools/ant/taskdefs/Get$DownloadProgress
@3.5
+#beginDownload()V
+#onTick()V
+#endDownload()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Get$DownloadProgress

+###org/apache/tools/ant/taskdefs/Get$NullProgress
@3.5
+#<init>()V
+#beginDownload()V
+#onTick()V
+#endDownload()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Get$NullProgress

+###org/apache/tools/ant/taskdefs/Get$VerboseProgress
@3.5
+#<init>(Ljava/io/PrintStream;)V
+#beginDownload()V
+#onTick()V
+#endDownload()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Get$VerboseProgress

+###org/apache/tools/ant/taskdefs/Get
@3.5
+#<init>()V
+#execute()V
+#doGet(ILorg/apache/tools/ant/taskdefs/Get$DownloadProgress;)Z[deprecated]
+#doGet(Ljava/net/URL;Ljava/io/File;ILorg/apache/tools/ant/taskdefs/Get$DownloadProgress;)Z
+#log(Ljava/lang/String;I)V
+#setSrc(Ljava/net/URL;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setDest(Ljava/io/File;)V
+#setVerbose(Z)V
+#setQuiet(Z)V
+#setIgnoreErrors(Z)V
+#setUseTimestamp(Z)V
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setMaxTime(J)V
+#setRetries(I)V
+#setSkipExisting(Z)V
+#setUserAgent(Ljava/lang/String;)V
+#setHttpUseCaches(Z)V
+#setTryGzipEncoding(Z)V
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Get

+###org/apache/tools/ant/taskdefs/HostInfo
@3.5
+#<init>()V
+#setPrefix(Ljava/lang/String;)V
+#setHost(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/HostInfo

+###org/apache/tools/ant/taskdefs/ImportTask
@3.5
+#<init>()V
+#setOptional(Z)V
+#setFile(Ljava/lang/String;)V
+#setAs(Ljava/lang/String;)V
+#setPrefixSeparator(Ljava/lang/String;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/ImportTask

+###org/apache/tools/ant/taskdefs/Input$Handler
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Input;)V
+#setRefid(Ljava/lang/String;)V
+#getRefid()Ljava/lang/String;
+#setClassname(Ljava/lang/String;)V
+#getClassname()Ljava/lang/String;
+#setType(Lorg/apache/tools/ant/taskdefs/Input$HandlerType;)V
+#getType()Lorg/apache/tools/ant/taskdefs/Input$HandlerType;
@3.5.1
-###org/apache/tools/ant/taskdefs/Input$Handler

+###org/apache/tools/ant/taskdefs/Input$HandlerType
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Input$HandlerType

+###org/apache/tools/ant/taskdefs/Input
@3.5
+#setValidargs(Ljava/lang/String;)V
+#setAddproperty(Ljava/lang/String;)V
+#setMessage(Ljava/lang/String;)V
+#setDefaultvalue(Ljava/lang/String;)V
+#addText(Ljava/lang/String;)V
+#<init>()V
+#execute()V
+#createHandler()Lorg/apache/tools/ant/taskdefs/Input$Handler;
@3.5.1
-###org/apache/tools/ant/taskdefs/Input

+###org/apache/tools/ant/taskdefs/JDBCTask
@3.5
+#<init>()V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#setCaching(Z)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setDriver(Ljava/lang/String;)V
+#setUrl(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setAutocommit(Z)V
+#setRdbms(Ljava/lang/String;)V
+#setVersion(Ljava/lang/String;)V
+#setFailOnConnectionError(Z)V
+#addConnectionProperty(Lorg/apache/tools/ant/taskdefs/Property;)V
+#isCaching(Z)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#isAutocommit()Z
+#getUrl()Ljava/lang/String;
+#getUserId()Ljava/lang/String;
+#setUserid(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#getRdbms()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/JDBCTask

+###org/apache/tools/ant/taskdefs/Jar$FilesetManifestConfig
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Jar$FilesetManifestConfig

+###org/apache/tools/ant/taskdefs/Jar$StrictMode
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
+#getLogLevel()I
@3.5.1
-###org/apache/tools/ant/taskdefs/Jar$StrictMode

+###org/apache/tools/ant/taskdefs/Jar
@3.5
+#<init>()V
+#setWhenempty(Lorg/apache/tools/ant/taskdefs/Zip$WhenEmpty;)V
+#setWhenmanifestonly(Lorg/apache/tools/ant/taskdefs/Zip$WhenEmpty;)V
+#setStrict(Lorg/apache/tools/ant/taskdefs/Jar$StrictMode;)V
+#setJarfile(Ljava/io/File;)V
+#setIndex(Z)V
+#setIndexMetaInf(Z)V
+#setManifestEncoding(Ljava/lang/String;)V
+#addConfiguredManifest(Lorg/apache/tools/ant/taskdefs/Manifest;)V
+#setManifest(Ljava/io/File;)V
+#setFilesetmanifest(Lorg/apache/tools/ant/taskdefs/Jar$FilesetManifestConfig;)V
+#addMetainf(Lorg/apache/tools/ant/types/ZipFileSet;)V
+#addConfiguredIndexJars(Lorg/apache/tools/ant/types/Path;)V
+#addConfiguredService(Lorg/apache/tools/ant/types/spi/Service;)V
+#setMergeClassPathAttributes(Z)V
+#setFlattenAttributes(Z)V
+#reset()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Jar

+###org/apache/tools/ant/taskdefs/Java
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Task;)V
+#execute()V
+#executeJava()I
+#setSpawn(Z)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#createBootclasspath()Lorg/apache/tools/ant/types/Path;
+#createPermissions()Lorg/apache/tools/ant/types/Permissions;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setJar(Ljava/io/File;)V
+#setClassname(Ljava/lang/String;)V
+#setArgs(Ljava/lang/String;)V
+#setCloneVm(Z)V
+#createArg()Lorg/apache/tools/ant/types/Commandline$Argument;
+#setResultProperty(Ljava/lang/String;)V
+#setFork(Z)V
+#setJvmargs(Ljava/lang/String;)V
+#createJvmarg()Lorg/apache/tools/ant/types/Commandline$Argument;
+#setJvm(Ljava/lang/String;)V
+#addSysproperty(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#addSyspropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
+#setFailonerror(Z)V
+#setDir(Ljava/io/File;)V
+#setOutput(Ljava/io/File;)V
+#setInput(Ljava/io/File;)V
+#setInputString(Ljava/lang/String;)V
+#setLogError(Z)V
+#setError(Ljava/io/File;)V
+#setOutputproperty(Ljava/lang/String;)V
+#setErrorProperty(Ljava/lang/String;)V
+#setMaxmemory(Ljava/lang/String;)V
+#setJVMVersion(Ljava/lang/String;)V
+#addEnv(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#setNewenvironment(Z)V
+#setAppend(Z)V
+#setTimeout(Ljava/lang/Long;)V
+#addAssertions(Lorg/apache/tools/ant/types/Assertions;)V
+#addConfiguredRedirector(Lorg/apache/tools/ant/types/RedirectorElement;)V
+#handleInput([BII)I
+#clearArgs()V
+#getCommandLine()Lorg/apache/tools/ant/types/CommandlineJava;
+#getSysProperties()Lorg/apache/tools/ant/types/CommandlineJava$SysProperties;
@3.5.1
-###org/apache/tools/ant/taskdefs/Java

+###org/apache/tools/ant/taskdefs/Javac$ImplementationSpecificArgument
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Javac;)V
+#setCompiler(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Javac$ImplementationSpecificArgument

+###org/apache/tools/ant/taskdefs/Javac
@3.5
+#<init>()V
+#getDebugLevel()Ljava/lang/String;
+#setDebugLevel(Ljava/lang/String;)V
+#getSource()Ljava/lang/String;
+#setSource(Ljava/lang/String;)V
+#createSrc()Lorg/apache/tools/ant/types/Path;
+#setSrcdir(Lorg/apache/tools/ant/types/Path;)V
+#getSrcdir()Lorg/apache/tools/ant/types/Path;
+#setDestdir(Ljava/io/File;)V
+#getDestdir()Ljava/io/File;
+#setSourcepath(Lorg/apache/tools/ant/types/Path;)V
+#getSourcepath()Lorg/apache/tools/ant/types/Path;
+#createSourcepath()Lorg/apache/tools/ant/types/Path;
+#setSourcepathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setBootclasspath(Lorg/apache/tools/ant/types/Path;)V
+#getBootclasspath()Lorg/apache/tools/ant/types/Path;
+#createBootclasspath()Lorg/apache/tools/ant/types/Path;
+#setBootClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setExtdirs(Lorg/apache/tools/ant/types/Path;)V
+#getExtdirs()Lorg/apache/tools/ant/types/Path;
+#createExtdirs()Lorg/apache/tools/ant/types/Path;
+#setListfiles(Z)V
+#getListfiles()Z
+#setFailonerror(Z)V
+#setProceed(Z)V
+#getFailonerror()Z
+#setDeprecation(Z)V
+#getDeprecation()Z
+#setMemoryInitialSize(Ljava/lang/String;)V
+#getMemoryInitialSize()Ljava/lang/String;
+#setMemoryMaximumSize(Ljava/lang/String;)V
+#getMemoryMaximumSize()Ljava/lang/String;
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setDebug(Z)V
+#getDebug()Z
+#setOptimize(Z)V
+#getOptimize()Z
+#setDepend(Z)V
+#getDepend()Z
+#setVerbose(Z)V
+#getVerbose()Z
+#setTarget(Ljava/lang/String;)V
+#getTarget()Ljava/lang/String;
+#setIncludeantruntime(Z)V
+#getIncludeantruntime()Z
+#setIncludejavaruntime(Z)V
+#getIncludejavaruntime()Z
+#setFork(Z)V
+#setExecutable(Ljava/lang/String;)V
+#getExecutable()Ljava/lang/String;
+#isForkedJavac()Z
+#getJavacExecutable()Ljava/lang/String;
+#setNowarn(Z)V
+#getNowarn()Z
+#createCompilerArg()Lorg/apache/tools/ant/taskdefs/Javac$ImplementationSpecificArgument;
+#getCurrentCompilerArgs()[Ljava/lang/String;
+#setTempdir(Ljava/io/File;)V
+#getTempdir()Ljava/io/File;
+#setUpdatedProperty(Ljava/lang/String;)V
+#setErrorProperty(Ljava/lang/String;)V
+#setIncludeDestClasses(Z)V
+#isIncludeDestClasses()Z
+#getTaskSuccess()Z
+#createCompilerClasspath()Lorg/apache/tools/ant/types/Path;
+#add(Lorg/apache/tools/ant/taskdefs/compilers/CompilerAdapter;)V
+#setCreateMissingPackageInfoClass(Z)V
+#execute()V
+#getFileList()[Ljava/io/File;
+#setCompiler(Ljava/lang/String;)V
+#getCompiler()Ljava/lang/String;
+#getCompilerVersion()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javac

+###org/apache/tools/ant/taskdefs/Javadoc$AccessType
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$AccessType

+###org/apache/tools/ant/taskdefs/Javadoc$DocletInfo
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Javadoc;)V
+#createParam()Lorg/apache/tools/ant/taskdefs/Javadoc$DocletParam;
+#getParams()Ljava/util/Enumeration;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$DocletInfo

+###org/apache/tools/ant/taskdefs/Javadoc$DocletParam
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Javadoc;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$DocletParam

+###org/apache/tools/ant/taskdefs/Javadoc$ExtensionInfo
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setPath(Lorg/apache/tools/ant/types/Path;)V
+#getPath()Lorg/apache/tools/ant/types/Path;
+#createPath()Lorg/apache/tools/ant/types/Path;
+#setPathRef(Lorg/apache/tools/ant/types/Reference;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$ExtensionInfo

+###org/apache/tools/ant/taskdefs/Javadoc$GroupArgument
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Javadoc;)V
+#setTitle(Ljava/lang/String;)V
+#addTitle(Lorg/apache/tools/ant/taskdefs/Javadoc$Html;)V
+#getTitle()Ljava/lang/String;
+#setPackages(Ljava/lang/String;)V
+#addPackage(Lorg/apache/tools/ant/taskdefs/Javadoc$PackageName;)V
+#getPackages()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$GroupArgument

+###org/apache/tools/ant/taskdefs/Javadoc$Html
@3.5
+#<init>()V
+#addText(Ljava/lang/String;)V
+#getText()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$Html

+###org/apache/tools/ant/taskdefs/Javadoc$LinkArgument
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Javadoc;)V
+#setHref(Ljava/lang/String;)V
+#getHref()Ljava/lang/String;
+#setPackagelistLoc(Ljava/io/File;)V
+#getPackagelistLoc()Ljava/io/File;
+#setPackagelistURL(Ljava/net/URL;)V
+#getPackagelistURL()Ljava/net/URL;
+#setOffline(Z)V
+#isLinkOffline()Z
+#setResolveLink(Z)V
+#shouldResolveLink()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$LinkArgument

+###org/apache/tools/ant/taskdefs/Javadoc$PackageName
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$PackageName

+###org/apache/tools/ant/taskdefs/Javadoc$ResourceCollectionContainer
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Javadoc;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$ResourceCollectionContainer

+###org/apache/tools/ant/taskdefs/Javadoc$SourceFile
@3.5
+#<init>()V
+#<init>(Ljava/io/File;)V
+#setFile(Ljava/io/File;)V
+#getFile()Ljava/io/File;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$SourceFile

+###org/apache/tools/ant/taskdefs/Javadoc$TagArgument
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Javadoc;)V
+#setName(Ljava/lang/String;)V
+#setScope(Ljava/lang/String;)V
+#setEnabled(Z)V
+#getParameter()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc$TagArgument

+###org/apache/tools/ant/taskdefs/Javadoc
@3.5
+#<init>()V
+#setUseExternalFile(Z)V
+#setDefaultexcludes(Z)V
+#setMaxmemory(Ljava/lang/String;)V
+#setAdditionalparam(Ljava/lang/String;)V
+#createArg()Lorg/apache/tools/ant/types/Commandline$Argument;
+#setSourcepath(Lorg/apache/tools/ant/types/Path;)V
+#createSourcepath()Lorg/apache/tools/ant/types/Path;
+#setSourcepathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setDestdir(Ljava/io/File;)V
+#setSourcefiles(Ljava/lang/String;)V
+#addSource(Lorg/apache/tools/ant/taskdefs/Javadoc$SourceFile;)V
+#setPackagenames(Ljava/lang/String;)V
+#addPackage(Lorg/apache/tools/ant/taskdefs/Javadoc$PackageName;)V
+#setExcludePackageNames(Ljava/lang/String;)V
+#addExcludePackage(Lorg/apache/tools/ant/taskdefs/Javadoc$PackageName;)V
+#setOverview(Ljava/io/File;)V
+#setPublic(Z)V
+#setProtected(Z)V
+#setPackage(Z)V
+#setPrivate(Z)V
+#setAccess(Lorg/apache/tools/ant/taskdefs/Javadoc$AccessType;)V
+#setDoclet(Ljava/lang/String;)V
+#setDocletPath(Lorg/apache/tools/ant/types/Path;)V
+#setDocletPathRef(Lorg/apache/tools/ant/types/Reference;)V
+#createDoclet()Lorg/apache/tools/ant/taskdefs/Javadoc$DocletInfo;
+#addTaglet(Lorg/apache/tools/ant/taskdefs/Javadoc$ExtensionInfo;)V
+#setOld(Z)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setBootclasspath(Lorg/apache/tools/ant/types/Path;)V
+#createBootclasspath()Lorg/apache/tools/ant/types/Path;
+#setBootClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setExtdirs(Ljava/lang/String;)V[deprecated]
+#setExtdirs(Lorg/apache/tools/ant/types/Path;)V
+#setVerbose(Z)V
+#setLocale(Ljava/lang/String;)V
+#setEncoding(Ljava/lang/String;)V
+#setVersion(Z)V
+#setUse(Z)V
+#setAuthor(Z)V
+#setSplitindex(Z)V
+#setWindowtitle(Ljava/lang/String;)V
+#setDoctitle(Ljava/lang/String;)V
+#addDoctitle(Lorg/apache/tools/ant/taskdefs/Javadoc$Html;)V
+#setHeader(Ljava/lang/String;)V
+#addHeader(Lorg/apache/tools/ant/taskdefs/Javadoc$Html;)V
+#setFooter(Ljava/lang/String;)V
+#addFooter(Lorg/apache/tools/ant/taskdefs/Javadoc$Html;)V
+#setBottom(Ljava/lang/String;)V
+#addBottom(Lorg/apache/tools/ant/taskdefs/Javadoc$Html;)V
+#setLinkoffline(Ljava/lang/String;)V
+#setGroup(Ljava/lang/String;)V
+#setLink(Ljava/lang/String;)V
+#setNodeprecated(Z)V
+#setNodeprecatedlist(Z)V
+#setNotree(Z)V
+#setNoindex(Z)V
+#setNohelp(Z)V
+#setNonavbar(Z)V
+#setSerialwarn(Z)V
+#setStylesheetfile(Ljava/io/File;)V
+#setHelpfile(Ljava/io/File;)V
+#setDocencoding(Ljava/lang/String;)V
+#setPackageList(Ljava/lang/String;)V
+#createLink()Lorg/apache/tools/ant/taskdefs/Javadoc$LinkArgument;
+#createTag()Lorg/apache/tools/ant/taskdefs/Javadoc$TagArgument;
+#createGroup()Lorg/apache/tools/ant/taskdefs/Javadoc$GroupArgument;
+#setCharset(Ljava/lang/String;)V
+#setFailonerror(Z)V
+#setFailonwarning(Z)V
+#setSource(Ljava/lang/String;)V
+#setExecutable(Ljava/lang/String;)V
+#addPackageset(Lorg/apache/tools/ant/types/DirSet;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#createSourceFiles()Lorg/apache/tools/ant/taskdefs/Javadoc$ResourceCollectionContainer;
+#setLinksource(Z)V
+#setBreakiterator(Z)V
+#setNoqualifier(Ljava/lang/String;)V
+#setIncludeNoSourcePackages(Z)V
+#setDocFilesSubDirs(Z)V
+#setExcludeDocFilesSubDir(Ljava/lang/String;)V
+#setPostProcessGeneratedJavadocs(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Javadoc

+###org/apache/tools/ant/taskdefs/Jikes
@3.5
@3.5.1
-###org/apache/tools/ant/taskdefs/Jikes

+###org/apache/tools/ant/taskdefs/JikesOutputParser
@3.5
+#setProcessInputStream(Ljava/io/OutputStream;)V
+#setProcessErrorStream(Ljava/io/InputStream;)V
+#setProcessOutputStream(Ljava/io/InputStream;)V
+#start()V
+#stop()V
@3.5.1
-###org/apache/tools/ant/taskdefs/JikesOutputParser

+###org/apache/tools/ant/taskdefs/KeySubst
@3.5
+#<init>()V
+#execute()V
+#setSrc(Ljava/io/File;)V
+#setDest(Ljava/io/File;)V
+#setSep(Ljava/lang/String;)V
+#setKeys(Ljava/lang/String;)V
+#main([Ljava/lang/String;)V
+#replace(Ljava/lang/String;Ljava/util/Hashtable;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/KeySubst

+###org/apache/tools/ant/taskdefs/Length$FileMode
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Length$FileMode

+###org/apache/tools/ant/taskdefs/Length$When
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Length$When

+###org/apache/tools/ant/taskdefs/Length
@3.5
+#<init>()V
+#setProperty(Ljava/lang/String;)V
+#setResource(Lorg/apache/tools/ant/types/Resource;)V
+#setFile(Ljava/io/File;)V
+#add(Lorg/apache/tools/ant/types/FileSet;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setLength(J)V
+#setWhen(Lorg/apache/tools/ant/taskdefs/Length$When;)V
+#setWhen(Lorg/apache/tools/ant/types/Comparison;)V
+#setMode(Lorg/apache/tools/ant/taskdefs/Length$FileMode;)V
+#setString(Ljava/lang/String;)V
+#setTrim(Z)V
+#getTrim()Z
+#execute()V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Length

+###org/apache/tools/ant/taskdefs/LoadFile
@3.5
+#<init>()V
+#setSrcFile(Ljava/io/File;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/LoadFile

+###org/apache/tools/ant/taskdefs/LoadProperties
@3.5
+#<init>()V
+#setSrcFile(Ljava/io/File;)V
+#setResource(Ljava/lang/String;)V
+#setEncoding(Ljava/lang/String;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#setPrefix(Ljava/lang/String;)V
+#setPrefixValues(Z)V
+#execute()V
+#addFilterChain(Lorg/apache/tools/ant/types/FilterChain;)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/LoadProperties

+###org/apache/tools/ant/taskdefs/LoadResource
@3.5
+#<init>()V
+#setEncoding(Ljava/lang/String;)V
+#setProperty(Ljava/lang/String;)V
+#setFailonerror(Z)V
+#setQuiet(Z)V
+#execute()V
+#addFilterChain(Lorg/apache/tools/ant/types/FilterChain;)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/LoadResource

+###org/apache/tools/ant/taskdefs/Local
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Local

+###org/apache/tools/ant/taskdefs/LogOutputStream
@3.5
+#<init>(Lorg/apache/tools/ant/ProjectComponent;)V
+#<init>(Lorg/apache/tools/ant/Task;I)V
+#<init>(Lorg/apache/tools/ant/ProjectComponent;I)V
+#getMessageLevel()I
@3.5.1
-###org/apache/tools/ant/taskdefs/LogOutputStream

+###org/apache/tools/ant/taskdefs/LogStreamHandler
@3.5
+#<init>(Lorg/apache/tools/ant/Task;II)V
+#<init>(Lorg/apache/tools/ant/ProjectComponent;II)V
+#stop()V
@3.5.1
-###org/apache/tools/ant/taskdefs/LogStreamHandler

+###org/apache/tools/ant/taskdefs/MacroDef$Attribute
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setDefault(Ljava/lang/String;)V
+#getDefault()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDoubleExpanding(Z)V
+#isDoubleExpanding()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.5.1
-###org/apache/tools/ant/taskdefs/MacroDef$Attribute

+###org/apache/tools/ant/taskdefs/MacroDef$NestedSequential
@3.5
+#<init>()V
+#addTask(Lorg/apache/tools/ant/Task;)V
+#getNested()Ljava/util/List;
+#similar(Lorg/apache/tools/ant/taskdefs/MacroDef$NestedSequential;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/MacroDef$NestedSequential

+###org/apache/tools/ant/taskdefs/MacroDef$TemplateElement
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setOptional(Z)V
+#isOptional()Z
+#setImplicit(Z)V
+#isImplicit()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.5.1
-###org/apache/tools/ant/taskdefs/MacroDef$TemplateElement

+###org/apache/tools/ant/taskdefs/MacroDef$Text
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setOptional(Z)V
+#getOptional()Z
+#setTrim(Z)V
+#getTrim()Z
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDefault(Ljava/lang/String;)V
+#getDefault()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.5.1
-###org/apache/tools/ant/taskdefs/MacroDef$Text

+###org/apache/tools/ant/taskdefs/MacroDef
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#addConfiguredText(Lorg/apache/tools/ant/taskdefs/MacroDef$Text;)V
+#getText()Lorg/apache/tools/ant/taskdefs/MacroDef$Text;
+#setBackTrace(Z)V
+#getBackTrace()Z
+#createSequential()Lorg/apache/tools/ant/taskdefs/MacroDef$NestedSequential;
+#getNestedTask()Lorg/apache/tools/ant/UnknownElement;
+#getAttributes()Ljava/util/List;
+#getElements()Ljava/util/Map;
+#isValidNameCharacter(C)Z
+#addConfiguredAttribute(Lorg/apache/tools/ant/taskdefs/MacroDef$Attribute;)V
+#addConfiguredElement(Lorg/apache/tools/ant/taskdefs/MacroDef$TemplateElement;)V
+#execute()V
+#similar(Ljava/lang/Object;)Z
+#sameDefinition(Ljava/lang/Object;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/MacroDef

+###org/apache/tools/ant/taskdefs/MacroInstance$Element
@3.5
+#<init>()V
+#addTask(Lorg/apache/tools/ant/Task;)V
+#getUnknownElements()Ljava/util/List;
@3.5.1
-###org/apache/tools/ant/taskdefs/MacroInstance$Element

+###org/apache/tools/ant/taskdefs/MacroInstance
@3.5
+#<init>()V
+#setMacroDef(Lorg/apache/tools/ant/taskdefs/MacroDef;)V
+#getMacroDef()Lorg/apache/tools/ant/taskdefs/MacroDef;
+#setDynamicAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#createDynamicElement(Ljava/lang/String;)Ljava/lang/Object;
+#addTask(Lorg/apache/tools/ant/Task;)V
+#addText(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/MacroInstance

+###org/apache/tools/ant/taskdefs/MakeUrl
@3.5
+#<init>()V
+#setProperty(Ljava/lang/String;)V
+#setFile(Ljava/io/File;)V
+#addFileSet(Lorg/apache/tools/ant/types/FileSet;)V
+#setSeparator(Ljava/lang/String;)V
+#setValidate(Z)V
+#addPath(Lorg/apache/tools/ant/types/Path;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/MakeUrl

+###org/apache/tools/ant/taskdefs/Manifest$Attribute
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#parse(Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getKey()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#addValue(Ljava/lang/String;)V
+#getValues()Ljava/util/Enumeration;
+#addContinuation(Ljava/lang/String;)V
+#write(Ljava/io/PrintWriter;)V
+#write(Ljava/io/PrintWriter;Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Manifest$Attribute

+###org/apache/tools/ant/taskdefs/Manifest$Section
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#read(Ljava/io/BufferedReader;)Ljava/lang/String;
+#merge(Lorg/apache/tools/ant/taskdefs/Manifest$Section;)V
+#merge(Lorg/apache/tools/ant/taskdefs/Manifest$Section;Z)V
+#write(Ljava/io/PrintWriter;)V
+#write(Ljava/io/PrintWriter;Z)V
+#getAttribute(Ljava/lang/String;)Lorg/apache/tools/ant/taskdefs/Manifest$Attribute;
+#getAttributeKeys()Ljava/util/Enumeration;
+#getAttributeValue(Ljava/lang/String;)Ljava/lang/String;
+#removeAttribute(Ljava/lang/String;)V
+#addConfiguredAttribute(Lorg/apache/tools/ant/taskdefs/Manifest$Attribute;)V
+#addAttributeAndCheck(Lorg/apache/tools/ant/taskdefs/Manifest$Attribute;)Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#getWarnings()Ljava/util/Enumeration;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Manifest$Section

+###org/apache/tools/ant/taskdefs/Manifest
@3.5
+#getDefaultManifest()Lorg/apache/tools/ant/taskdefs/Manifest;
+#<init>()V
+#<init>(Ljava/io/Reader;)V
+#addConfiguredSection(Lorg/apache/tools/ant/taskdefs/Manifest$Section;)V
+#addConfiguredAttribute(Lorg/apache/tools/ant/taskdefs/Manifest$Attribute;)V
+#merge(Lorg/apache/tools/ant/taskdefs/Manifest;)V
+#merge(Lorg/apache/tools/ant/taskdefs/Manifest;Z)V
+#merge(Lorg/apache/tools/ant/taskdefs/Manifest;ZZ)V
+#write(Ljava/io/PrintWriter;)V
+#write(Ljava/io/PrintWriter;Z)V
+#toString()Ljava/lang/String;
+#getWarnings()Ljava/util/Enumeration;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getManifestVersion()Ljava/lang/String;
+#getMainSection()Lorg/apache/tools/ant/taskdefs/Manifest$Section;
+#getSection(Ljava/lang/String;)Lorg/apache/tools/ant/taskdefs/Manifest$Section;
+#getSectionNames()Ljava/util/Enumeration;
@3.5.1
-###org/apache/tools/ant/taskdefs/Manifest

+###org/apache/tools/ant/taskdefs/ManifestClassPath
@3.5
+#<init>()V
+#execute()V
+#setProperty(Ljava/lang/String;)V
+#setJarFile(Ljava/io/File;)V
+#setMaxParentLevels(I)V
+#addClassPath(Lorg/apache/tools/ant/types/Path;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/ManifestClassPath

+###org/apache/tools/ant/taskdefs/ManifestException
@3.5
+#<init>(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/ManifestException

+###org/apache/tools/ant/taskdefs/ManifestTask$Mode
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/ManifestTask$Mode

+###org/apache/tools/ant/taskdefs/ManifestTask
@3.5
+#<init>()V
+#addConfiguredSection(Lorg/apache/tools/ant/taskdefs/Manifest$Section;)V
+#addConfiguredAttribute(Lorg/apache/tools/ant/taskdefs/Manifest$Attribute;)V
+#setFile(Ljava/io/File;)V
+#setEncoding(Ljava/lang/String;)V
+#setMode(Lorg/apache/tools/ant/taskdefs/ManifestTask$Mode;)V
+#setMergeClassPathAttributes(Z)V
+#setFlattenAttributes(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/ManifestTask

+###org/apache/tools/ant/taskdefs/MatchingTask
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#createInclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createIncludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExcludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createPatternSet()Lorg/apache/tools/ant/types/PatternSet;
+#setIncludes(Ljava/lang/String;)V
+#XsetItems(Ljava/lang/String;)V
+#setExcludes(Ljava/lang/String;)V
+#XsetIgnore(Ljava/lang/String;)V
+#setDefaultexcludes(Z)V
+#setIncludesfile(Ljava/io/File;)V
+#setExcludesfile(Ljava/io/File;)V
+#setCaseSensitive(Z)V
+#setFollowSymlinks(Z)V
+#hasSelectors()Z
+#selectorCount()I
+#getSelectors(Lorg/apache/tools/ant/Project;)[Lorg/apache/tools/ant/types/selectors/FileSelector;
+#selectorElements()Ljava/util/Enumeration;
+#appendSelector(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#addSelector(Lorg/apache/tools/ant/types/selectors/SelectSelector;)V
+#addAnd(Lorg/apache/tools/ant/types/selectors/AndSelector;)V
+#addOr(Lorg/apache/tools/ant/types/selectors/OrSelector;)V
+#addNot(Lorg/apache/tools/ant/types/selectors/NotSelector;)V
+#addNone(Lorg/apache/tools/ant/types/selectors/NoneSelector;)V
+#addMajority(Lorg/apache/tools/ant/types/selectors/MajoritySelector;)V
+#addDate(Lorg/apache/tools/ant/types/selectors/DateSelector;)V
+#addSize(Lorg/apache/tools/ant/types/selectors/SizeSelector;)V
+#addFilename(Lorg/apache/tools/ant/types/selectors/FilenameSelector;)V
+#addCustom(Lorg/apache/tools/ant/types/selectors/ExtendSelector;)V
+#addContains(Lorg/apache/tools/ant/types/selectors/ContainsSelector;)V
+#addPresent(Lorg/apache/tools/ant/types/selectors/PresentSelector;)V
+#addDepth(Lorg/apache/tools/ant/types/selectors/DepthSelector;)V
+#addDepend(Lorg/apache/tools/ant/types/selectors/DependSelector;)V
+#addContainsRegexp(Lorg/apache/tools/ant/types/selectors/ContainsRegexpSelector;)V
+#addDifferent(Lorg/apache/tools/ant/types/selectors/DifferentSelector;)V
+#addType(Lorg/apache/tools/ant/types/selectors/TypeSelector;)V
+#addModified(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector;)V
+#add(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/MatchingTask

+###org/apache/tools/ant/taskdefs/Mkdir
@3.5
+#<init>()V
+#execute()V
+#setDir(Ljava/io/File;)V
+#getDir()Ljava/io/File;
@3.5.1
-###org/apache/tools/ant/taskdefs/Mkdir

+###org/apache/tools/ant/taskdefs/Move
@3.5
+#<init>()V
+#setPerformGcOnFailedDelete(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Move

+###org/apache/tools/ant/taskdefs/Nice
@3.5
+#<init>()V
+#execute()V
+#setCurrentPriority(Ljava/lang/String;)V
+#setNewPriority(I)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Nice

+###org/apache/tools/ant/taskdefs/Pack
@3.5
+#<init>()V
+#setZipfile(Ljava/io/File;)V
+#setDestfile(Ljava/io/File;)V
+#setSrc(Ljava/io/File;)V
+#setSrcResource(Lorg/apache/tools/ant/types/Resource;)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#execute()V
+#getSrcResource()Lorg/apache/tools/ant/types/Resource;
@3.5.1
-###org/apache/tools/ant/taskdefs/Pack

+###org/apache/tools/ant/taskdefs/Parallel$TaskList
@3.5
+#<init>()V
+#addTask(Lorg/apache/tools/ant/Task;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Parallel$TaskList

+###org/apache/tools/ant/taskdefs/Parallel
@3.5
+#<init>()V
+#addDaemons(Lorg/apache/tools/ant/taskdefs/Parallel$TaskList;)V
+#setPollInterval(I)V
+#setFailOnAny(Z)V
+#addTask(Lorg/apache/tools/ant/Task;)V
+#setThreadsPerProcessor(I)V
+#setThreadCount(I)V
+#setTimeout(J)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Parallel

+###org/apache/tools/ant/taskdefs/Patch
@3.5
+#<init>()V
+#setOriginalfile(Ljava/io/File;)V
+#setDestfile(Ljava/io/File;)V
+#setPatchfile(Ljava/io/File;)V
+#setBackups(Z)V
+#setIgnorewhitespace(Z)V
+#setStrip(I)V
+#setQuiet(Z)V
+#setReverse(Z)V
+#setDir(Ljava/io/File;)V
+#setFailOnError(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Patch

+###org/apache/tools/ant/taskdefs/PathConvert$MapEntry
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/PathConvert;)V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#apply(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/PathConvert$MapEntry

+###org/apache/tools/ant/taskdefs/PathConvert$TargetOs
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/PathConvert$TargetOs

+###org/apache/tools/ant/taskdefs/PathConvert
@3.5
+#<init>()V
+#createPath()Lorg/apache/tools/ant/types/Path;
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#createMap()Lorg/apache/tools/ant/taskdefs/PathConvert$MapEntry;
+#setTargetos(Ljava/lang/String;)V[deprecated]
+#setTargetos(Lorg/apache/tools/ant/taskdefs/PathConvert$TargetOs;)V
+#setSetonempty(Z)V
+#setProperty(Ljava/lang/String;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#setPathSep(Ljava/lang/String;)V
+#setDirSep(Ljava/lang/String;)V
+#setPreserveDuplicates(Z)V
+#isPreserveDuplicates()Z
+#isReference()Z
+#execute()V
+#addMapper(Lorg/apache/tools/ant/types/Mapper;)V
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/PathConvert

+###org/apache/tools/ant/taskdefs/PreSetDef$PreSetDefinition
@3.5
+#<init>(Lorg/apache/tools/ant/AntTypeDefinition;Lorg/apache/tools/ant/UnknownElement;)V
+#setClass(Ljava/lang/Class;)V
+#setClassName(Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#setAdapterClass(Ljava/lang/Class;)V
+#setAdaptToClass(Ljava/lang/Class;)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExposedClass(Lorg/apache/tools/ant/Project;)Ljava/lang/Class;
+#getTypeClass(Lorg/apache/tools/ant/Project;)Ljava/lang/Class;
+#checkClass(Lorg/apache/tools/ant/Project;)V
+#createObject(Lorg/apache/tools/ant/Project;)Ljava/lang/Object;
+#getPreSets()Lorg/apache/tools/ant/UnknownElement;
+#create(Lorg/apache/tools/ant/Project;)Ljava/lang/Object;
+#sameDefinition(Lorg/apache/tools/ant/AntTypeDefinition;Lorg/apache/tools/ant/Project;)Z
+#similarDefinition(Lorg/apache/tools/ant/AntTypeDefinition;Lorg/apache/tools/ant/Project;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/PreSetDef$PreSetDefinition

+###org/apache/tools/ant/taskdefs/PreSetDef
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#addTask(Lorg/apache/tools/ant/Task;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/PreSetDef

+###org/apache/tools/ant/taskdefs/ProjectHelperTask
@3.5
+#<init>()V
+#addConfigured(Lorg/apache/tools/ant/ProjectHelper;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/ProjectHelperTask

+###org/apache/tools/ant/taskdefs/Property
@3.5
+#<init>()V
+#setRelative(Z)V
+#setBasedir(Ljava/io/File;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setLocation(Ljava/io/File;)V
+#setValue(Ljava/lang/Object;)V
+#setValue(Ljava/lang/String;)V
+#addText(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setFile(Ljava/io/File;)V
+#getFile()Ljava/io/File;
+#setUrl(Ljava/net/URL;)V
+#getUrl()Ljava/net/URL;
+#setPrefix(Ljava/lang/String;)V
+#getPrefix()Ljava/lang/String;
+#setPrefixValues(Z)V
+#getPrefixValues()Z
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#getRefid()Lorg/apache/tools/ant/types/Reference;
+#setResource(Ljava/lang/String;)V
+#getResource()Ljava/lang/String;
+#setEnvironment(Ljava/lang/String;)V
+#getEnvironment()Ljava/lang/String;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#setUserProperty(Z)V[deprecated]
+#toString()Ljava/lang/String;
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Property

+###org/apache/tools/ant/taskdefs/PropertyHelperTask$DelegateElement
@3.5
+#getRefid()Ljava/lang/String;
+#setRefid(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/PropertyHelperTask$DelegateElement

+###org/apache/tools/ant/taskdefs/PropertyHelperTask
@3.5
+#<init>()V
+#addConfigured(Lorg/apache/tools/ant/PropertyHelper;)V
+#addConfigured(Lorg/apache/tools/ant/PropertyHelper$Delegate;)V
+#createDelegate()Lorg/apache/tools/ant/taskdefs/PropertyHelperTask$DelegateElement;
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/PropertyHelperTask

+###org/apache/tools/ant/taskdefs/PumpStreamHandler$ThreadWithPumper
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/StreamPumper;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/PumpStreamHandler$ThreadWithPumper

+###org/apache/tools/ant/taskdefs/PumpStreamHandler
@3.5
+#<init>(Ljava/io/OutputStream;Ljava/io/OutputStream;Ljava/io/InputStream;Z)V
+#<init>(Ljava/io/OutputStream;Ljava/io/OutputStream;Ljava/io/InputStream;)V
+#<init>(Ljava/io/OutputStream;Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;)V
+#<init>()V
+#setProcessOutputStream(Ljava/io/InputStream;)V
+#setProcessErrorStream(Ljava/io/InputStream;)V
+#setProcessInputStream(Ljava/io/OutputStream;)V
+#start()V
+#stop()V
@3.5.1
-###org/apache/tools/ant/taskdefs/PumpStreamHandler

+###org/apache/tools/ant/taskdefs/Recorder$ActionChoices
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Recorder$ActionChoices

+###org/apache/tools/ant/taskdefs/Recorder$VerbosityLevelChoices
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Recorder$VerbosityLevelChoices

+###org/apache/tools/ant/taskdefs/Recorder
@3.5
+#<init>()V
+#init()V
+#setName(Ljava/lang/String;)V
+#setAction(Lorg/apache/tools/ant/taskdefs/Recorder$ActionChoices;)V
+#setAppend(Z)V
+#setEmacsMode(Z)V
+#setLoglevel(Lorg/apache/tools/ant/taskdefs/Recorder$VerbosityLevelChoices;)V
+#execute()V
+#buildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildFinished(Lorg/apache/tools/ant/BuildEvent;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Recorder

+###org/apache/tools/ant/taskdefs/RecorderEntry
@3.5
+#getFilename()Ljava/lang/String;
+#setRecordState(Ljava/lang/Boolean;)V
+#buildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#subBuildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
+#setMessageOutputLevel(I)V
+#setOutputPrintStream(Ljava/io/PrintStream;)V
+#setEmacsMode(Z)V
+#setErrorPrintStream(Ljava/io/PrintStream;)V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#cleanup()V
@3.5.1
-###org/apache/tools/ant/taskdefs/RecorderEntry

+###org/apache/tools/ant/taskdefs/Redirector
@3.5
+#<init>(Lorg/apache/tools/ant/Task;)V
+#<init>(Lorg/apache/tools/ant/ProjectComponent;)V
+#setInput(Ljava/io/File;)V
+#setInput([Ljava/io/File;)V
+#setInputString(Ljava/lang/String;)V
+#setLogInputString(Z)V
+#setOutput(Ljava/io/File;)V
+#setOutput([Ljava/io/File;)V
+#setOutputEncoding(Ljava/lang/String;)V
+#setErrorEncoding(Ljava/lang/String;)V
+#setInputEncoding(Ljava/lang/String;)V
+#setLogError(Z)V
+#setAppendProperties(Z)V
+#setError(Ljava/io/File;)V
+#setError([Ljava/io/File;)V
+#setOutputProperty(Ljava/lang/String;)V
+#setAppend(Z)V
+#setAlwaysLog(Z)V
+#setCreateEmptyFiles(Z)V
+#setErrorProperty(Ljava/lang/String;)V
+#setInputFilterChains(Ljava/util/Vector;)V
+#setOutputFilterChains(Ljava/util/Vector;)V
+#setErrorFilterChains(Ljava/util/Vector;)V
+#setBinaryOutput(Z)V
+#createStreams()V
+#createHandler()Lorg/apache/tools/ant/taskdefs/ExecuteStreamHandler;
+#getOutputStream()Ljava/io/OutputStream;
+#getErrorStream()Ljava/io/OutputStream;
+#getInputStream()Ljava/io/InputStream;
+#complete()V
+#setProperties()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Redirector

+###org/apache/tools/ant/taskdefs/Rename
@3.5
+#<init>()V
+#setSrc(Ljava/io/File;)V
+#setDest(Ljava/io/File;)V
+#setReplace(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Rename

+###org/apache/tools/ant/taskdefs/Replace$NestedString
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Replace;)V
+#setExpandProperties(Z)V
+#addText(Ljava/lang/String;)V
+#getText()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Replace$NestedString

+###org/apache/tools/ant/taskdefs/Replace$Replacefilter
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Replace;)V
+#validate()V
+#getReplaceValue()Ljava/lang/String;
+#setToken(Ljava/lang/String;)V
+#getToken()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setProperty(Ljava/lang/String;)V
+#getProperty()Ljava/lang/String;
+#createReplaceToken()Lorg/apache/tools/ant/taskdefs/Replace$NestedString;
+#createReplaceValue()Lorg/apache/tools/ant/taskdefs/Replace$NestedString;
@3.5.1
-###org/apache/tools/ant/taskdefs/Replace$Replacefilter

+###org/apache/tools/ant/taskdefs/Replace
@3.5
+#<init>()V
+#execute()V
+#validateAttributes()V
+#validateReplacefilters()V
+#getProperties(Ljava/io/File;)Ljava/util/Properties;
+#getProperties(Lorg/apache/tools/ant/types/Resource;)Ljava/util/Properties;
+#setFile(Ljava/io/File;)V
+#setSummary(Z)V
+#setReplaceFilterFile(Ljava/io/File;)V
+#setReplaceFilterResource(Lorg/apache/tools/ant/types/Resource;)V
+#setDir(Ljava/io/File;)V
+#setToken(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#setEncoding(Ljava/lang/String;)V
+#createReplaceToken()Lorg/apache/tools/ant/taskdefs/Replace$NestedString;
+#createReplaceValue()Lorg/apache/tools/ant/taskdefs/Replace$NestedString;
+#setPropertyFile(Ljava/io/File;)V
+#setPropertyResource(Lorg/apache/tools/ant/types/Resource;)V
+#createReplacefilter()Lorg/apache/tools/ant/taskdefs/Replace$Replacefilter;
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setPreserveLastModified(Z)V
+#setFailOnNoReplacements(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Replace

+###org/apache/tools/ant/taskdefs/ResourceCount
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#execute()V
+#eval()Z
+#setCount(I)V
+#setWhen(Lorg/apache/tools/ant/types/Comparison;)V
+#setProperty(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/ResourceCount

+###org/apache/tools/ant/taskdefs/Retry
@3.5
+#<init>()V
+#addTask(Lorg/apache/tools/ant/Task;)V
+#setRetryCount(I)V
+#setRetryDelay(I)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Retry

+###org/apache/tools/ant/taskdefs/Rmic$ImplementationSpecificArgument
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Rmic;)V
+#setCompiler(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Rmic$ImplementationSpecificArgument

+###org/apache/tools/ant/taskdefs/Rmic
@3.5
+#<init>()V
+#setBase(Ljava/io/File;)V
+#setDestdir(Ljava/io/File;)V
+#getDestdir()Ljava/io/File;
+#getOutputDir()Ljava/io/File;
+#getBase()Ljava/io/File;
+#setClassname(Ljava/lang/String;)V
+#getClassname()Ljava/lang/String;
+#setSourceBase(Ljava/io/File;)V
+#getSourceBase()Ljava/io/File;
+#setStubVersion(Ljava/lang/String;)V
+#getStubVersion()Ljava/lang/String;
+#setFiltering(Z)V
+#getFiltering()Z
+#setDebug(Z)V
+#getDebug()Z
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#setVerify(Z)V
+#getVerify()Z
+#setIiop(Z)V
+#getIiop()Z
+#setIiopopts(Ljava/lang/String;)V
+#getIiopopts()Ljava/lang/String;
+#setIdl(Z)V
+#getIdl()Z
+#setIdlopts(Ljava/lang/String;)V
+#getIdlopts()Ljava/lang/String;
+#getFileList()Ljava/util/Vector;
+#setIncludeantruntime(Z)V
+#getIncludeantruntime()Z
+#setIncludejavaruntime(Z)V
+#getIncludejavaruntime()Z
+#setExtdirs(Lorg/apache/tools/ant/types/Path;)V
+#createExtdirs()Lorg/apache/tools/ant/types/Path;
+#getExtdirs()Lorg/apache/tools/ant/types/Path;
+#getCompileList()Ljava/util/Vector;
+#setCompiler(Ljava/lang/String;)V
+#getCompiler()Ljava/lang/String;
+#createCompilerArg()Lorg/apache/tools/ant/taskdefs/Rmic$ImplementationSpecificArgument;
+#getCurrentCompilerArgs()[Ljava/lang/String;
+#setExecutable(Ljava/lang/String;)V
+#getExecutable()Ljava/lang/String;
+#createCompilerClasspath()Lorg/apache/tools/ant/types/Path;
+#setListfiles(Z)V
+#add(Lorg/apache/tools/ant/taskdefs/rmic/RmicAdapter;)V
+#execute()V
+#isValidRmiRemote(Ljava/lang/String;)Z
+#getRemoteInterface(Ljava/lang/Class;)Ljava/lang/Class;
+#getLoader()Ljava/lang/ClassLoader;
@3.5.1
-###org/apache/tools/ant/taskdefs/Rmic

+###org/apache/tools/ant/taskdefs/SQLExec$DelimiterType
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/SQLExec$DelimiterType

+###org/apache/tools/ant/taskdefs/SQLExec$OnError
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/SQLExec$OnError

+###org/apache/tools/ant/taskdefs/SQLExec$Transaction
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/SQLExec;)V
+#setSrc(Ljava/io/File;)V
+#setSrcResource(Lorg/apache/tools/ant/types/Resource;)V
+#addText(Ljava/lang/String;)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/SQLExec$Transaction

+###org/apache/tools/ant/taskdefs/SQLExec
@3.5
+#<init>()V
+#setSrc(Ljava/io/File;)V
+#setExpandProperties(Z)V
+#getExpandProperties()Z
+#addText(Ljava/lang/String;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#createTransaction()Lorg/apache/tools/ant/taskdefs/SQLExec$Transaction;
+#setEncoding(Ljava/lang/String;)V
+#setDelimiter(Ljava/lang/String;)V
+#setDelimiterType(Lorg/apache/tools/ant/taskdefs/SQLExec$DelimiterType;)V
+#setPrint(Z)V
+#setShowheaders(Z)V
+#setShowtrailers(Z)V
+#setOutput(Ljava/io/File;)V
+#setOutput(Lorg/apache/tools/ant/types/Resource;)V
+#setOutputEncoding(Ljava/lang/String;)V
+#setAppend(Z)V
+#setOnerror(Lorg/apache/tools/ant/taskdefs/SQLExec$OnError;)V
+#setKeepformat(Z)V
+#setEscapeProcessing(Z)V
+#setRawBlobs(Z)V
+#setStrictDelimiterMatching(Z)V
+#setShowWarnings(Z)V
+#setTreatWarningsAsErrors(Z)V
+#setCsvColumnSeparator(Ljava/lang/String;)V
+#setCsvQuoteCharacter(Ljava/lang/String;)V
+#setErrorProperty(Ljava/lang/String;)V
+#setWarningProperty(Ljava/lang/String;)V
+#setRowCountProperty(Ljava/lang/String;)V
+#execute()V
+#lastDelimiterPosition(Ljava/lang/StringBuffer;Ljava/lang/String;)I
@3.5.1
-###org/apache/tools/ant/taskdefs/SQLExec

+###org/apache/tools/ant/taskdefs/SendEmail
@3.5
+#<init>()V
+#setMailport(Ljava/lang/Integer;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/SendEmail

+###org/apache/tools/ant/taskdefs/Sequential
@3.5
+#<init>()V
+#addTask(Lorg/apache/tools/ant/Task;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Sequential

+###org/apache/tools/ant/taskdefs/SignJar
@3.5
+#<init>()V
+#setSigfile(Ljava/lang/String;)V
+#setSignedjar(Ljava/io/File;)V
+#setInternalsf(Z)V
+#setSectionsonly(Z)V
+#setLazy(Z)V
+#setDestDir(Ljava/io/File;)V
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#getMapper()Lorg/apache/tools/ant/util/FileNameMapper;
+#getTsaurl()Ljava/lang/String;
+#setTsaurl(Ljava/lang/String;)V
+#getTsaproxyhost()Ljava/lang/String;
+#setTsaproxyhost(Ljava/lang/String;)V
+#getTsaproxyport()Ljava/lang/String;
+#setTsaproxyport(Ljava/lang/String;)V
+#getTsacert()Ljava/lang/String;
+#setTsacert(Ljava/lang/String;)V
+#setForce(Z)V
+#isForce()Z
+#setSigAlg(Ljava/lang/String;)V
+#getSigAlg()Ljava/lang/String;
+#setDigestAlg(Ljava/lang/String;)V
+#getDigestAlg()Ljava/lang/String;
+#execute()V
+#setPreserveLastModified(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/SignJar

+###org/apache/tools/ant/taskdefs/Sleep
@3.5
+#<init>()V
+#setSeconds(I)V
+#setHours(I)V
+#setMinutes(I)V
+#setMilliseconds(I)V
+#doSleep(J)V
+#setFailOnError(Z)V
+#validate()V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Sleep

+###org/apache/tools/ant/taskdefs/StreamPumper
@3.5
+#<init>(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
+#<init>(Ljava/io/InputStream;Ljava/io/OutputStream;ZZ)V
+#<init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#run()V
+#isFinished()Z
+#waitFor()V
+#setBufferSize(I)V
+#getBufferSize()I
+#getException()Ljava/lang/Exception;
@3.5.1
-###org/apache/tools/ant/taskdefs/StreamPumper

+###org/apache/tools/ant/taskdefs/SubAnt
@3.5
+#<init>()V
+#handleOutput(Ljava/lang/String;)V
+#handleInput([BII)I
+#handleFlush(Ljava/lang/String;)V
+#handleErrorOutput(Ljava/lang/String;)V
+#handleErrorFlush(Ljava/lang/String;)V
+#execute()V
+#setAntfile(Ljava/lang/String;)V
+#setGenericAntfile(Ljava/io/File;)V
+#setFailonerror(Z)V
+#setTarget(Ljava/lang/String;)V
+#addConfiguredTarget(Lorg/apache/tools/ant/taskdefs/Ant$TargetElement;)V
+#setVerbose(Z)V
+#setOutput(Ljava/lang/String;)V
+#setInheritall(Z)V
+#setInheritrefs(Z)V
+#addProperty(Lorg/apache/tools/ant/taskdefs/Property;)V
+#addReference(Lorg/apache/tools/ant/taskdefs/Ant$Reference;)V
+#addPropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
+#addDirset(Lorg/apache/tools/ant/types/DirSet;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addFilelist(Lorg/apache/tools/ant/types/FileList;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setBuildpath(Lorg/apache/tools/ant/types/Path;)V
+#createBuildpath()Lorg/apache/tools/ant/types/Path;
+#createBuildpathElement()Lorg/apache/tools/ant/types/Path$PathElement;
+#setBuildpathRef(Lorg/apache/tools/ant/types/Reference;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/SubAnt

+###org/apache/tools/ant/taskdefs/Sync$MyCopy
@3.5
+#<init>()V
+#getToDir()Ljava/io/File;
+#getIncludeEmptyDirs()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Sync$MyCopy

+###org/apache/tools/ant/taskdefs/Sync$SyncTarget
@3.5
+#<init>()V
+#setDir(Ljava/io/File;)V
+#setPreserveEmptyDirs(Z)V
+#getPreserveEmptyDirs()Ljava/lang/Boolean;
@3.5.1
-###org/apache/tools/ant/taskdefs/Sync$SyncTarget

+###org/apache/tools/ant/taskdefs/Sync
@3.5
+#<init>()V
+#init()V
+#execute()V
+#setTodir(Ljava/io/File;)V
+#setVerbose(Z)V
+#setOverwrite(Z)V
+#setIncludeEmptyDirs(Z)V
+#setFailOnError(Z)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setGranularity(J)V
+#addPreserveInTarget(Lorg/apache/tools/ant/taskdefs/Sync$SyncTarget;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Sync

+###org/apache/tools/ant/taskdefs/Tar$TarCompressionMethod
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Tar$TarCompressionMethod

+###org/apache/tools/ant/taskdefs/Tar$TarFileSet
@3.5
+#<init>(Lorg/apache/tools/ant/types/FileSet;)V
+#<init>()V
+#getFiles(Lorg/apache/tools/ant/Project;)[Ljava/lang/String;
+#setMode(Ljava/lang/String;)V
+#getMode()I
+#setPreserveLeadingSlashes(Z)V
+#getPreserveLeadingSlashes()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Tar$TarFileSet

+###org/apache/tools/ant/taskdefs/Tar$TarLongFileMode
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#isTruncateMode()Z
+#isWarnMode()Z
+#isGnuMode()Z
+#isFailMode()Z
+#isOmitMode()Z
+#isPosixMode()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Tar$TarLongFileMode

+###org/apache/tools/ant/taskdefs/Tar
@3.5
+#<init>()V
+#createTarFileSet()Lorg/apache/tools/ant/taskdefs/Tar$TarFileSet;
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setTarfile(Ljava/io/File;)V[deprecated]
+#setDestFile(Ljava/io/File;)V
+#setBasedir(Ljava/io/File;)V
+#setLongfile(Ljava/lang/String;)V[deprecated]
+#setLongfile(Lorg/apache/tools/ant/taskdefs/Tar$TarLongFileMode;)V
+#setCompression(Lorg/apache/tools/ant/taskdefs/Tar$TarCompressionMethod;)V
+#setEncoding(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Tar

+###org/apache/tools/ant/taskdefs/TaskOutputStream
@3.5
+#write(I)V
@3.5.1
-###org/apache/tools/ant/taskdefs/TaskOutputStream

+###org/apache/tools/ant/taskdefs/Taskdef
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Taskdef

+###org/apache/tools/ant/taskdefs/TempFile
@3.5
+#<init>()V
+#setProperty(Ljava/lang/String;)V
+#setDestDir(Ljava/io/File;)V
+#setPrefix(Ljava/lang/String;)V
+#setSuffix(Ljava/lang/String;)V
+#setDeleteOnExit(Z)V
+#isDeleteOnExit()Z
+#setCreateFile(Z)V
+#isCreateFile()Z
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/TempFile

+###org/apache/tools/ant/taskdefs/Touch$DateFormatFactory
@3.5
+#getPrimaryFormat()Ljava/text/DateFormat;
+#getFallbackFormat()Ljava/text/DateFormat;
@3.5.1
-###org/apache/tools/ant/taskdefs/Touch$DateFormatFactory

+###org/apache/tools/ant/taskdefs/Touch
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setMillis(J)V
+#setDatetime(Ljava/lang/String;)V
+#setMkdirs(Z)V
+#setVerbose(Z)V
+#setPattern(Ljava/lang/String;)V
+#addConfiguredMapper(Lorg/apache/tools/ant/types/Mapper;)V
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addFilelist(Lorg/apache/tools/ant/types/FileList;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Touch

+###org/apache/tools/ant/taskdefs/Transform
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Transform

+###org/apache/tools/ant/taskdefs/Truncate
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setAdjust(Ljava/lang/Long;)V
+#setLength(Ljava/lang/Long;)V
+#setCreate(Z)V
+#setMkdirs(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Truncate

+###org/apache/tools/ant/taskdefs/Tstamp$CustomFormat
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/Tstamp;)V
+#setProperty(Ljava/lang/String;)V
+#setPattern(Ljava/lang/String;)V
+#setLocale(Ljava/lang/String;)V
+#setTimezone(Ljava/lang/String;)V
+#setOffset(I)V
+#setUnit(Ljava/lang/String;)V
+#setUnit(Lorg/apache/tools/ant/taskdefs/Tstamp$Unit;)V
+#execute(Lorg/apache/tools/ant/Project;Ljava/util/Date;Lorg/apache/tools/ant/Location;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Tstamp$CustomFormat

+###org/apache/tools/ant/taskdefs/Tstamp$Unit
@3.5
+#<init>()V
+#getCalendarField()I
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Tstamp$Unit

+###org/apache/tools/ant/taskdefs/Tstamp
@3.5
+#<init>()V
+#setPrefix(Ljava/lang/String;)V
+#execute()V
+#createFormat()Lorg/apache/tools/ant/taskdefs/Tstamp$CustomFormat;
@3.5.1
-###org/apache/tools/ant/taskdefs/Tstamp

+###org/apache/tools/ant/taskdefs/Typedef
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Typedef

+###org/apache/tools/ant/taskdefs/Unpack
@3.5
+#<init>()V
+#setSrc(Ljava/lang/String;)V
+#setDest(Ljava/lang/String;)V
+#setSrc(Ljava/io/File;)V
+#setSrcResource(Lorg/apache/tools/ant/types/Resource;)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setDest(Ljava/io/File;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Unpack

+###org/apache/tools/ant/taskdefs/Untar$UntarCompressionMethod
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#decompress(Ljava/lang/String;Ljava/io/InputStream;)Ljava/io/InputStream;
@3.5.1
-###org/apache/tools/ant/taskdefs/Untar$UntarCompressionMethod

+###org/apache/tools/ant/taskdefs/Untar
@3.5
+#<init>()V
+#setCompression(Lorg/apache/tools/ant/taskdefs/Untar$UntarCompressionMethod;)V
+#setScanForUnicodeExtraFields(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/Untar

+###org/apache/tools/ant/taskdefs/UpToDate
@3.5
+#<init>()V
+#setProperty(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#setTargetFile(Ljava/io/File;)V
+#setSrcfile(Ljava/io/File;)V
+#addSrcfiles(Lorg/apache/tools/ant/types/FileSet;)V
+#createSrcResources()Lorg/apache/tools/ant/types/resources/Union;
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#eval()Z
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/UpToDate

+###org/apache/tools/ant/taskdefs/VerifyJar
@3.5
+#<init>()V
+#setCertificates(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/VerifyJar

+###org/apache/tools/ant/taskdefs/WaitFor$Unit
@3.5
+#<init>()V
+#getMultiplier()J
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/WaitFor$Unit

+###org/apache/tools/ant/taskdefs/WaitFor
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setMaxWait(J)V
+#setMaxWaitUnit(Lorg/apache/tools/ant/taskdefs/WaitFor$Unit;)V
+#setCheckEvery(J)V
+#setCheckEveryUnit(Lorg/apache/tools/ant/taskdefs/WaitFor$Unit;)V
+#setTimeoutProperty(Ljava/lang/String;)V
+#execute()V
+#calculateCheckEveryMillis()J
+#calculateMaxWaitMillis()J
@3.5.1
-###org/apache/tools/ant/taskdefs/WaitFor

+###org/apache/tools/ant/taskdefs/War
@3.5
+#<init>()V
+#setWarfile(Ljava/io/File;)V[deprecated]
+#setWebxml(Ljava/io/File;)V
+#setNeedxmlfile(Z)V
+#addLib(Lorg/apache/tools/ant/types/ZipFileSet;)V
+#addClasses(Lorg/apache/tools/ant/types/ZipFileSet;)V
+#addWebinf(Lorg/apache/tools/ant/types/ZipFileSet;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/War

+###org/apache/tools/ant/taskdefs/WhichResource
@3.5
+#<init>()V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#execute()V
+#setResource(Ljava/lang/String;)V
+#setClass(Ljava/lang/String;)V
+#setProperty(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/WhichResource

+###org/apache/tools/ant/taskdefs/XSLTLiaison
@3.5
+#setStylesheet(Ljava/io/File;)V
+#addParam(Ljava/lang/String;Ljava/lang/String;)V
+#transform(Ljava/io/File;Ljava/io/File;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTLiaison

+###org/apache/tools/ant/taskdefs/XSLTLiaison2
@3.5
+#configure(Lorg/apache/tools/ant/taskdefs/XSLTProcess;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTLiaison2

+###org/apache/tools/ant/taskdefs/XSLTLiaison3
@3.5
+#setStylesheet(Lorg/apache/tools/ant/types/Resource;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTLiaison3

+###org/apache/tools/ant/taskdefs/XSLTLiaison4
@3.5
+#addParam(Ljava/lang/String;Ljava/lang/Object;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTLiaison4

+###org/apache/tools/ant/taskdefs/XSLTLogger
@3.5
+#log(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTLogger

+###org/apache/tools/ant/taskdefs/XSLTLoggerAware
@3.5
+#setLogger(Lorg/apache/tools/ant/taskdefs/XSLTLogger;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTLoggerAware

+###org/apache/tools/ant/taskdefs/XSLTProcess$Factory$Attribute
@3.5
+#<init>()V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#createDynamicElement(Ljava/lang/String;)Ljava/lang/Object;
+#setDynamicAttribute(Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTProcess$Factory$Attribute

+###org/apache/tools/ant/taskdefs/XSLTProcess$Factory
@3.5
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#addAttribute(Lorg/apache/tools/ant/taskdefs/XSLTProcess$Factory$Attribute;)V
+#getAttributes()Ljava/util/Enumeration;
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTProcess$Factory

+###org/apache/tools/ant/taskdefs/XSLTProcess$OutputProperty
@3.5
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTProcess$OutputProperty

+###org/apache/tools/ant/taskdefs/XSLTProcess$Param
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#setName(Ljava/lang/String;)V
+#setExpression(Ljava/lang/String;)V
+#setType(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getExpression()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#setIf(Ljava/lang/Object;)V
+#setIf(Ljava/lang/String;)V
+#setUnless(Ljava/lang/Object;)V
+#setUnless(Ljava/lang/String;)V
+#shouldUse()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTProcess$Param

+###org/apache/tools/ant/taskdefs/XSLTProcess$ParamType
@3.5
+#values()[Lorg/apache/tools/ant/taskdefs/XSLTProcess$ParamType;
+#valueOf(Ljava/lang/String;)Lorg/apache/tools/ant/taskdefs/XSLTProcess$ParamType;
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTProcess$ParamType

+###org/apache/tools/ant/taskdefs/XSLTProcess$TraceConfiguration
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/XSLTProcess;)V
+#setElements(Z)V
+#getElements()Z
+#setExtension(Z)V
+#getExtension()Z
+#setGeneration(Z)V
+#getGeneration()Z
+#setSelection(Z)V
+#getSelection()Z
+#setTemplates(Z)V
+#getTemplates()Z
+#getOutputStream()Ljava/io/OutputStream;
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTProcess$TraceConfiguration

+###org/apache/tools/ant/taskdefs/XSLTProcess
@3.5
+#<init>()V
+#setScanIncludedDirectories(Z)V
+#setReloadStylesheet(Z)V
+#addMapper(Lorg/apache/tools/ant/types/Mapper;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#addConfiguredStyle(Lorg/apache/tools/ant/types/resources/Resources;)V
+#setXslResource(Lorg/apache/tools/ant/types/Resource;)V
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#execute()V
+#setForce(Z)V
+#setBasedir(Ljava/io/File;)V
+#setDestdir(Ljava/io/File;)V
+#setExtension(Ljava/lang/String;)V
+#setStyle(Ljava/lang/String;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setProcessor(Ljava/lang/String;)V
+#setUseImplicitFileset(Z)V
+#addConfiguredXMLCatalog(Lorg/apache/tools/ant/types/XMLCatalog;)V
+#setFileNameParameter(Ljava/lang/String;)V
+#setFileDirParameter(Ljava/lang/String;)V
+#setSuppressWarnings(Z)V
+#getSuppressWarnings()Z
+#setFailOnTransformationError(Z)V
+#setFailOnError(Z)V
+#setFailOnNoResources(Z)V
+#addSysproperty(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#addSyspropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
+#createTrace()Lorg/apache/tools/ant/taskdefs/XSLTProcess$TraceConfiguration;
+#getTraceConfiguration()Lorg/apache/tools/ant/taskdefs/XSLTProcess$TraceConfiguration;
+#setOut(Ljava/io/File;)V
+#setIn(Ljava/io/File;)V
+#getFactory()Lorg/apache/tools/ant/taskdefs/XSLTProcess$Factory;
+#getXMLCatalog()Lorg/apache/tools/ant/types/XMLCatalog;
+#getOutputProperties()Ljava/util/Enumeration;
+#createParam()Lorg/apache/tools/ant/taskdefs/XSLTProcess$Param;
+#createOutputProperty()Lorg/apache/tools/ant/taskdefs/XSLTProcess$OutputProperty;
+#init()V
+#createFactory()Lorg/apache/tools/ant/taskdefs/XSLTProcess$Factory;
@3.5.1
-###org/apache/tools/ant/taskdefs/XSLTProcess

+###org/apache/tools/ant/taskdefs/XmlProperty
@3.5
+#<init>()V
+#init()V
+#execute()V
+#processNode(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#setFile(Ljava/io/File;)V
+#setSrcResource(Lorg/apache/tools/ant/types/Resource;)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setPrefix(Ljava/lang/String;)V
+#setKeeproot(Z)V
+#setValidate(Z)V
+#setCollapseAttributes(Z)V
+#setSemanticAttributes(Z)V
+#setRootDirectory(Ljava/io/File;)V
+#setIncludeSemanticAttribute(Z)V
+#addConfiguredXMLCatalog(Lorg/apache/tools/ant/types/XMLCatalog;)V
+#getDelimiter()Ljava/lang/String;
+#setDelimiter(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/XmlProperty

+###org/apache/tools/ant/taskdefs/Zip$ArchiveState
@3.5
+#isOutOfDate()Z
+#getResourcesToAdd()[[Lorg/apache/tools/ant/types/Resource;
+#isWithoutAnyResources()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/Zip$ArchiveState

+###org/apache/tools/ant/taskdefs/Zip$Duplicate
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Zip$Duplicate

+###org/apache/tools/ant/taskdefs/Zip$UnicodeExtraField
@3.5
+#getValues()[Ljava/lang/String;
+#<init>()V
+#getPolicy()Lorg/apache/tools/zip/ZipOutputStream$UnicodeExtraFieldPolicy;
@3.5.1
-###org/apache/tools/ant/taskdefs/Zip$UnicodeExtraField

+###org/apache/tools/ant/taskdefs/Zip$WhenEmpty
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/Zip$WhenEmpty

+###org/apache/tools/ant/taskdefs/Zip$Zip64ModeAttribute
@3.5
+#getValues()[Ljava/lang/String;
+#<init>()V
+#getMode()Lorg/apache/tools/zip/Zip64Mode;
@3.5.1
-###org/apache/tools/ant/taskdefs/Zip$Zip64ModeAttribute

+###org/apache/tools/ant/taskdefs/Zip
@3.5
+#<init>()V
+#setZipfile(Ljava/io/File;)V[deprecated]
+#setFile(Ljava/io/File;)V[deprecated]
+#setDestFile(Ljava/io/File;)V
+#getDestFile()Ljava/io/File;
+#setBasedir(Ljava/io/File;)V
+#setCompress(Z)V
+#isCompress()Z
+#setFilesonly(Z)V
+#setUpdate(Z)V
+#isInUpdateMode()Z
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addZipfileset(Lorg/apache/tools/ant/types/ZipFileSet;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#addZipGroupFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#setDuplicate(Lorg/apache/tools/ant/taskdefs/Zip$Duplicate;)V
+#setWhenempty(Lorg/apache/tools/ant/taskdefs/Zip$WhenEmpty;)V
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setKeepCompression(Z)V
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setLevel(I)V
+#getLevel()I
+#setRoundUp(Z)V
+#setPreserve0Permissions(Z)V
+#getPreserve0Permissions()Z
+#setUseLanguageEncodingFlag(Z)V
+#getUseLanguageEnodingFlag()Z
+#setCreateUnicodeExtraFields(Lorg/apache/tools/ant/taskdefs/Zip$UnicodeExtraField;)V
+#getCreateUnicodeExtraFields()Lorg/apache/tools/ant/taskdefs/Zip$UnicodeExtraField;
+#setFallBackToUTF8(Z)V
+#getFallBackToUTF8()Z
+#setZip64Mode(Lorg/apache/tools/ant/taskdefs/Zip$Zip64ModeAttribute;)V
+#getZip64Mode()Lorg/apache/tools/ant/taskdefs/Zip$Zip64ModeAttribute;
+#execute()V
+#executeMain()V
+#reset()V
@3.5.1
-###org/apache/tools/ant/taskdefs/Zip

+###org/apache/tools/ant/taskdefs/compilers/AptCompilerAdapter
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/AptCompilerAdapter

+###org/apache/tools/ant/taskdefs/compilers/AptExternalCompilerAdapter
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/AptExternalCompilerAdapter

+###org/apache/tools/ant/taskdefs/compilers/CompilerAdapter
@3.5
+#setJavac(Lorg/apache/tools/ant/taskdefs/Javac;)V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/CompilerAdapter

+###org/apache/tools/ant/taskdefs/compilers/CompilerAdapterExtension
@3.5
+#getSupportedFileExtensions()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/CompilerAdapterExtension

+###org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory
@3.5
+#getCompiler(Ljava/lang/String;Lorg/apache/tools/ant/Task;)Lorg/apache/tools/ant/taskdefs/compilers/CompilerAdapter;
+#getCompiler(Ljava/lang/String;Lorg/apache/tools/ant/Task;Lorg/apache/tools/ant/types/Path;)Lorg/apache/tools/ant/taskdefs/compilers/CompilerAdapter;
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory

+###org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter
@3.5
+#<init>()V
+#setJavac(Lorg/apache/tools/ant/taskdefs/Javac;)V
+#getJavac()Lorg/apache/tools/ant/taskdefs/Javac;
+#getSupportedFileExtensions()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter

+###org/apache/tools/ant/taskdefs/compilers/Gcj
@3.5
+#<init>()V
+#execute()Z
+#isNativeBuild()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/Gcj

+###org/apache/tools/ant/taskdefs/compilers/Javac12
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/Javac12

+###org/apache/tools/ant/taskdefs/compilers/Javac13
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/Javac13

+###org/apache/tools/ant/taskdefs/compilers/JavacExternal
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/JavacExternal

+###org/apache/tools/ant/taskdefs/compilers/Jikes
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/Jikes

+###org/apache/tools/ant/taskdefs/compilers/Jvc
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/Jvc

+###org/apache/tools/ant/taskdefs/compilers/Kjc
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/Kjc

+###org/apache/tools/ant/taskdefs/compilers/Sj
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/compilers/Sj

+###org/apache/tools/ant/taskdefs/condition/And
@3.5
+#<init>()V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/And

+###org/apache/tools/ant/taskdefs/condition/AntVersion
@3.5
+#<init>()V
+#execute()V
+#eval()Z
+#getAtLeast()Ljava/lang/String;
+#setAtLeast(Ljava/lang/String;)V
+#getExactly()Ljava/lang/String;
+#setExactly(Ljava/lang/String;)V
+#getProperty()Ljava/lang/String;
+#setProperty(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/AntVersion

+###org/apache/tools/ant/taskdefs/condition/Condition
@3.5
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Condition

+###org/apache/tools/ant/taskdefs/condition/ConditionBase
@3.5
+#setTaskName(Ljava/lang/String;)V
+#getTaskName()Ljava/lang/String;
+#addAvailable(Lorg/apache/tools/ant/taskdefs/Available;)V
+#addChecksum(Lorg/apache/tools/ant/taskdefs/Checksum;)V
+#addUptodate(Lorg/apache/tools/ant/taskdefs/UpToDate;)V
+#addNot(Lorg/apache/tools/ant/taskdefs/condition/Not;)V
+#addAnd(Lorg/apache/tools/ant/taskdefs/condition/And;)V
+#addOr(Lorg/apache/tools/ant/taskdefs/condition/Or;)V
+#addEquals(Lorg/apache/tools/ant/taskdefs/condition/Equals;)V
+#addOs(Lorg/apache/tools/ant/taskdefs/condition/Os;)V
+#addIsSet(Lorg/apache/tools/ant/taskdefs/condition/IsSet;)V
+#addHttp(Lorg/apache/tools/ant/taskdefs/condition/Http;)V
+#addSocket(Lorg/apache/tools/ant/taskdefs/condition/Socket;)V
+#addFilesMatch(Lorg/apache/tools/ant/taskdefs/condition/FilesMatch;)V
+#addContains(Lorg/apache/tools/ant/taskdefs/condition/Contains;)V
+#addIsTrue(Lorg/apache/tools/ant/taskdefs/condition/IsTrue;)V
+#addIsFalse(Lorg/apache/tools/ant/taskdefs/condition/IsFalse;)V
+#addIsReference(Lorg/apache/tools/ant/taskdefs/condition/IsReference;)V
+#addIsFileSelected(Lorg/apache/tools/ant/taskdefs/condition/IsFileSelected;)V
+#add(Lorg/apache/tools/ant/taskdefs/condition/Condition;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/ConditionBase

+###org/apache/tools/ant/taskdefs/condition/Contains
@3.5
+#<init>()V
+#setString(Ljava/lang/String;)V
+#setSubstring(Ljava/lang/String;)V
+#setCasesensitive(Z)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Contains

+###org/apache/tools/ant/taskdefs/condition/Equals
@3.5
+#<init>()V
+#setArg1(Ljava/lang/Object;)V
+#setArg1(Ljava/lang/String;)V
+#setArg2(Ljava/lang/Object;)V
+#setArg2(Ljava/lang/String;)V
+#setTrim(Z)V
+#setCasesensitive(Z)V
+#setForcestring(Z)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Equals

+###org/apache/tools/ant/taskdefs/condition/FilesMatch
@3.5
+#<init>()V
+#setFile1(Ljava/io/File;)V
+#setFile2(Ljava/io/File;)V
+#setTextfile(Z)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/FilesMatch

+###org/apache/tools/ant/taskdefs/condition/HasFreeSpace
@3.5
+#<init>()V
+#eval()Z
+#getPartition()Ljava/lang/String;
+#setPartition(Ljava/lang/String;)V
+#getNeeded()Ljava/lang/String;
+#setNeeded(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/HasFreeSpace

+###org/apache/tools/ant/taskdefs/condition/HasMethod
@3.5
+#<init>()V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setClassname(Ljava/lang/String;)V
+#setMethod(Ljava/lang/String;)V
+#setField(Ljava/lang/String;)V
+#setIgnoreSystemClasses(Z)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/HasMethod

+###org/apache/tools/ant/taskdefs/condition/Http
@3.5
+#<init>()V
+#setUrl(Ljava/lang/String;)V
+#setErrorsBeginAt(I)V
+#setRequestMethod(Ljava/lang/String;)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Http

+###org/apache/tools/ant/taskdefs/condition/IsFailure
@3.5
+#<init>()V
+#setCode(I)V
+#getCode()I
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsFailure

+###org/apache/tools/ant/taskdefs/condition/IsFalse
@3.5
+#<init>()V
+#setValue(Z)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsFalse

+###org/apache/tools/ant/taskdefs/condition/IsFileSelected
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setBaseDir(Ljava/io/File;)V
+#validate()V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsFileSelected

+###org/apache/tools/ant/taskdefs/condition/IsLastModified$CompareMode
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsLastModified$CompareMode

+###org/apache/tools/ant/taskdefs/condition/IsLastModified
@3.5
+#<init>()V
+#setMillis(J)V
+#setDatetime(Ljava/lang/String;)V
+#setPattern(Ljava/lang/String;)V
+#add(Lorg/apache/tools/ant/types/Resource;)V
+#setMode(Lorg/apache/tools/ant/taskdefs/condition/IsLastModified$CompareMode;)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsLastModified

+###org/apache/tools/ant/taskdefs/condition/IsReachable
@3.5
+#<init>()V
+#setHost(Ljava/lang/String;)V
+#setUrl(Ljava/lang/String;)V
+#setTimeout(I)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsReachable

+###org/apache/tools/ant/taskdefs/condition/IsReference
@3.5
+#<init>()V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#setType(Ljava/lang/String;)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsReference

+###org/apache/tools/ant/taskdefs/condition/IsSet
@3.5
+#<init>()V
+#setProperty(Ljava/lang/String;)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsSet

+###org/apache/tools/ant/taskdefs/condition/IsSigned
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setName(Ljava/lang/String;)V
+#isSigned(Ljava/io/File;Ljava/lang/String;)Z
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsSigned

+###org/apache/tools/ant/taskdefs/condition/IsTrue
@3.5
+#<init>()V
+#setValue(Z)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/IsTrue

+###org/apache/tools/ant/taskdefs/condition/Matches
@3.5
+#<init>()V
+#setString(Ljava/lang/String;)V
+#setPattern(Ljava/lang/String;)V
+#addRegexp(Lorg/apache/tools/ant/types/RegularExpression;)V
+#setCasesensitive(Z)V
+#setMultiline(Z)V
+#setSingleLine(Z)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Matches

+###org/apache/tools/ant/taskdefs/condition/Not
@3.5
+#<init>()V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Not

+###org/apache/tools/ant/taskdefs/condition/Or
@3.5
+#<init>()V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Or

+###org/apache/tools/ant/taskdefs/condition/Os
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setFamily(Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#setArch(Ljava/lang/String;)V
+#setVersion(Ljava/lang/String;)V
+#eval()Z
+#isFamily(Ljava/lang/String;)Z
+#isName(Ljava/lang/String;)Z
+#isArch(Ljava/lang/String;)Z
+#isVersion(Ljava/lang/String;)Z
+#isOs(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Os

+###org/apache/tools/ant/taskdefs/condition/ParserSupports
@3.5
+#<init>()V
+#setFeature(Ljava/lang/String;)V
+#setProperty(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#eval()Z
+#evalFeature()Z
+#evalProperty()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/ParserSupports

+###org/apache/tools/ant/taskdefs/condition/ResourceContains
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#setResource(Ljava/lang/String;)V
+#setRefid(Ljava/lang/String;)V
+#setSubstring(Ljava/lang/String;)V
+#setCasesensitive(Z)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/ResourceContains

+###org/apache/tools/ant/taskdefs/condition/ResourceExists
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/Resource;)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/ResourceExists

+###org/apache/tools/ant/taskdefs/condition/ResourcesMatch
@3.5
+#<init>()V
+#setAsText(Z)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/ResourcesMatch

+###org/apache/tools/ant/taskdefs/condition/Socket
@3.5
+#<init>()V
+#setServer(Ljava/lang/String;)V
+#setPort(I)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Socket

+###org/apache/tools/ant/taskdefs/condition/TypeFound
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setURI(Ljava/lang/String;)V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/TypeFound

+###org/apache/tools/ant/taskdefs/condition/Xor
@3.5
+#<init>()V
+#eval()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/condition/Xor

+###org/apache/tools/ant/taskdefs/cvslib/CVSEntry
@3.5
+#<init>(Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;)V
+#addFile(Ljava/lang/String;Ljava/lang/String;)V
+#addFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getDate()Ljava/util/Date;
+#setAuthor(Ljava/lang/String;)V
+#getAuthor()Ljava/lang/String;
+#getComment()Ljava/lang/String;
+#getFiles()Ljava/util/Vector;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/cvslib/CVSEntry

+###org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask
@3.5
+#<init>()V
+#setDir(Ljava/io/File;)V
+#setDestfile(Ljava/io/File;)V
+#setUsersfile(Ljava/io/File;)V
+#addUser(Lorg/apache/tools/ant/taskdefs/cvslib/CvsUser;)V
+#setStart(Ljava/util/Date;)V
+#setEnd(Ljava/util/Date;)V
+#setDaysinpast(I)V
+#setRemote(Z)V
+#setStartTag(Ljava/lang/String;)V
+#setEndTag(Ljava/lang/String;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask

+###org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriter
@3.5
+#<init>()V
+#printChangeLog(Ljava/io/PrintWriter;[Lorg/apache/tools/ant/taskdefs/cvslib/CVSEntry;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/cvslib/ChangeLogWriter

+###org/apache/tools/ant/taskdefs/cvslib/CvsTagDiff
@3.5
+#<init>()V
+#setPackage(Ljava/lang/String;)V
+#setStartTag(Ljava/lang/String;)V
+#setStartDate(Ljava/lang/String;)V
+#setEndTag(Ljava/lang/String;)V
+#setEndDate(Ljava/lang/String;)V
+#setDestFile(Ljava/io/File;)V
+#setIgnoreRemoved(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/cvslib/CvsTagDiff

+###org/apache/tools/ant/taskdefs/cvslib/CvsTagEntry
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getFile()Ljava/lang/String;
+#getRevision()Ljava/lang/String;
+#getPreviousRevision()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/cvslib/CvsTagEntry

+###org/apache/tools/ant/taskdefs/cvslib/CvsUser
@3.5
+#<init>()V
+#setDisplayname(Ljava/lang/String;)V
+#setUserid(Ljava/lang/String;)V
+#getUserID()Ljava/lang/String;
+#getDisplayname()Ljava/lang/String;
+#validate()V
@3.5.1
-###org/apache/tools/ant/taskdefs/cvslib/CvsUser

+###org/apache/tools/ant/taskdefs/cvslib/CvsVersion
@3.5
+#<init>()V
+#getClientVersion()Ljava/lang/String;
+#getServerVersion()Ljava/lang/String;
+#setClientVersionProperty(Ljava/lang/String;)V
+#setServerVersionProperty(Ljava/lang/String;)V
+#supportsCvsLogWithSOption()Z
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/cvslib/CvsVersion

+###org/apache/tools/ant/taskdefs/email/EmailAddress
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#setAddress(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#getAddress()Ljava/lang/String;
+#getName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/email/EmailAddress

+###org/apache/tools/ant/taskdefs/email/EmailTask$Encoding
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/email/EmailTask$Encoding

+###org/apache/tools/ant/taskdefs/email/EmailTask
@3.5
+#<init>()V
+#setUser(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setSSL(Z)V
+#setEnableStartTLS(Z)V
+#setEncoding(Lorg/apache/tools/ant/taskdefs/email/EmailTask$Encoding;)V
+#setMailport(I)V
+#setMailhost(Ljava/lang/String;)V
+#setSubject(Ljava/lang/String;)V
+#setMessage(Ljava/lang/String;)V
+#setMessageFile(Ljava/io/File;)V
+#setMessageMimeType(Ljava/lang/String;)V
+#addMessage(Lorg/apache/tools/ant/taskdefs/email/Message;)V
+#addFrom(Lorg/apache/tools/ant/taskdefs/email/EmailAddress;)V
+#setFrom(Ljava/lang/String;)V
+#addReplyTo(Lorg/apache/tools/ant/taskdefs/email/EmailAddress;)V
+#setReplyTo(Ljava/lang/String;)V
+#addTo(Lorg/apache/tools/ant/taskdefs/email/EmailAddress;)V
+#setToList(Ljava/lang/String;)V
+#addCc(Lorg/apache/tools/ant/taskdefs/email/EmailAddress;)V
+#setCcList(Ljava/lang/String;)V
+#addBcc(Lorg/apache/tools/ant/taskdefs/email/EmailAddress;)V
+#setBccList(Ljava/lang/String;)V
+#setFailOnError(Z)V
+#setFiles(Ljava/lang/String;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#createAttachments()Lorg/apache/tools/ant/types/Path;
+#createHeader()Lorg/apache/tools/ant/taskdefs/email/Header;
+#setIncludefilenames(Z)V
+#getIncludeFileNames()Z
+#setIgnoreInvalidRecipients(Z)V
+#execute()V
+#setCharset(Ljava/lang/String;)V
+#getCharset()Ljava/lang/String;
+#setMessageFileInputEncoding(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/email/EmailTask

+###org/apache/tools/ant/taskdefs/email/Header
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/email/Header

+###org/apache/tools/ant/taskdefs/email/Mailer
@3.5
+#<init>()V
+#setHost(Ljava/lang/String;)V
+#setPort(I)V
+#setPortExplicitlySpecified(Z)V
+#setUser(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setSSL(Z)V
+#setEnableStartTLS(Z)V
+#setMessage(Lorg/apache/tools/ant/taskdefs/email/Message;)V
+#setFrom(Lorg/apache/tools/ant/taskdefs/email/EmailAddress;)V
+#setReplyToList(Ljava/util/Vector;)V
+#setToList(Ljava/util/Vector;)V
+#setCcList(Ljava/util/Vector;)V
+#setBccList(Ljava/util/Vector;)V
+#setFiles(Ljava/util/Vector;)V
+#setSubject(Ljava/lang/String;)V
+#setTask(Lorg/apache/tools/ant/Task;)V
+#setIncludeFileNames(Z)V
+#setHeaders(Ljava/util/Vector;)V
+#send()V
+#setIgnoreInvalidRecipients(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/email/Mailer

+###org/apache/tools/ant/taskdefs/email/Message
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/File;)V
+#addText(Ljava/lang/String;)V
+#setSrc(Ljava/io/File;)V
+#setMimeType(Ljava/lang/String;)V
+#getMimeType()Ljava/lang/String;
+#print(Ljava/io/PrintStream;)V
+#isMimeTypeSpecified()Z
+#setCharset(Ljava/lang/String;)V
+#getCharset()Ljava/lang/String;
+#setInputEncoding(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/email/Message

+###org/apache/tools/ant/taskdefs/launcher/CommandLauncher
@3.5
+#<init>()V
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
+#getShellLauncher(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;
+#getVMLauncher(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;
+#setVMLauncher(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;)V
+#setShellLauncher(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/CommandLauncher

+###org/apache/tools/ant/taskdefs/launcher/CommandLauncherProxy
@3.5
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/CommandLauncherProxy

+###org/apache/tools/ant/taskdefs/launcher/Java13CommandLauncher
@3.5
+#<init>()V
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/Java13CommandLauncher

+###org/apache/tools/ant/taskdefs/launcher/MacCommandLauncher
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;)V
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/MacCommandLauncher

+###org/apache/tools/ant/taskdefs/launcher/OS2CommandLauncher
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;)V
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/OS2CommandLauncher

+###org/apache/tools/ant/taskdefs/launcher/PerlScriptCommandLauncher
@3.5
+#<init>(Ljava/lang/String;Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;)V
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/PerlScriptCommandLauncher

+###org/apache/tools/ant/taskdefs/launcher/ScriptCommandLauncher
@3.5
+#<init>(Ljava/lang/String;Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;)V
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/ScriptCommandLauncher

+###org/apache/tools/ant/taskdefs/launcher/VmsCommandLauncher
@3.5
+#<init>()V
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/VmsCommandLauncher

+###org/apache/tools/ant/taskdefs/launcher/WinNTCommandLauncher
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/launcher/CommandLauncher;)V
+#exec(Lorg/apache/tools/ant/Project;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
@3.5.1
-###org/apache/tools/ant/taskdefs/launcher/WinNTCommandLauncher

+###org/apache/tools/ant/taskdefs/optional/Cab
@3.5
+#<init>()V
+#setCabfile(Ljava/io/File;)V
+#setBasedir(Ljava/io/File;)V
+#setCompress(Z)V
+#setVerbose(Z)V
+#setOptions(Ljava/lang/String;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/Cab

+###org/apache/tools/ant/taskdefs/optional/EchoProperties$FormatAttribute
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/EchoProperties$FormatAttribute

+###org/apache/tools/ant/taskdefs/optional/EchoProperties
@3.5
+#<init>()V
+#setSrcfile(Ljava/io/File;)V
+#setDestfile(Ljava/io/File;)V
+#setFailOnError(Z)V
+#setPrefix(Ljava/lang/String;)V
+#setRegex(Ljava/lang/String;)V
+#addPropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
+#setFormat(Lorg/apache/tools/ant/taskdefs/optional/EchoProperties$FormatAttribute;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/EchoProperties

+###org/apache/tools/ant/taskdefs/optional/Javah$ClassArgument
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/optional/Javah;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/Javah$ClassArgument

+###org/apache/tools/ant/taskdefs/optional/Javah
@3.5
+#<init>()V
+#setClass(Ljava/lang/String;)V
+#createClass()Lorg/apache/tools/ant/taskdefs/optional/Javah$ClassArgument;
+#addFileSet(Lorg/apache/tools/ant/types/FileSet;)V
+#getClasses()[Ljava/lang/String;
+#setDestdir(Ljava/io/File;)V
+#getDestdir()Ljava/io/File;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#setBootclasspath(Lorg/apache/tools/ant/types/Path;)V
+#createBootclasspath()Lorg/apache/tools/ant/types/Path;
+#setBootClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getBootclasspath()Lorg/apache/tools/ant/types/Path;
+#setOutputFile(Ljava/io/File;)V
+#getOutputfile()Ljava/io/File;
+#setForce(Z)V
+#getForce()Z
+#setOld(Z)V
+#getOld()Z
+#setStubs(Z)V
+#getStubs()Z
+#setVerbose(Z)V
+#getVerbose()Z
+#setImplementation(Ljava/lang/String;)V
+#createArg()Lorg/apache/tools/ant/util/facade/ImplementationSpecificArgument;
+#getCurrentArgs()[Ljava/lang/String;
+#createImplementationClasspath()Lorg/apache/tools/ant/types/Path;
+#add(Lorg/apache/tools/ant/taskdefs/optional/javah/JavahAdapter;)V
+#execute()V
+#logAndAddFiles(Lorg/apache/tools/ant/types/Commandline;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/Javah

+###org/apache/tools/ant/taskdefs/optional/Native2Ascii
@3.5
+#<init>()V
+#setReverse(Z)V
+#getReverse()Z
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setSrc(Ljava/io/File;)V
+#setDest(Ljava/io/File;)V
+#setExt(Ljava/lang/String;)V
+#setImplementation(Ljava/lang/String;)V
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#createArg()Lorg/apache/tools/ant/util/facade/ImplementationSpecificArgument;
+#createImplementationClasspath()Lorg/apache/tools/ant/types/Path;
+#add(Lorg/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapter;)V
+#execute()V
+#getCurrentArgs()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/Native2Ascii

+###org/apache/tools/ant/taskdefs/optional/PropertyFile$Entry$Operation
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#toOperation(Ljava/lang/String;)I
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/PropertyFile$Entry$Operation

+###org/apache/tools/ant/taskdefs/optional/PropertyFile$Entry$Type
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#toType(Ljava/lang/String;)I
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/PropertyFile$Entry$Type

+###org/apache/tools/ant/taskdefs/optional/PropertyFile$Entry
@3.5
+#<init>()V
+#setKey(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#setOperation(Lorg/apache/tools/ant/taskdefs/optional/PropertyFile$Entry$Operation;)V
+#setType(Lorg/apache/tools/ant/taskdefs/optional/PropertyFile$Entry$Type;)V
+#setDefault(Ljava/lang/String;)V
+#setPattern(Ljava/lang/String;)V
+#setUnit(Lorg/apache/tools/ant/taskdefs/optional/PropertyFile$Unit;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/PropertyFile$Entry

+###org/apache/tools/ant/taskdefs/optional/PropertyFile$Unit
@3.5
+#<init>()V
+#getCalendarField()I
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/PropertyFile$Unit

+###org/apache/tools/ant/taskdefs/optional/PropertyFile
@3.5
+#<init>()V
+#execute()V
+#createEntry()Lorg/apache/tools/ant/taskdefs/optional/PropertyFile$Entry;
+#setFile(Ljava/io/File;)V
+#setComment(Ljava/lang/String;)V
+#setJDKProperties(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/PropertyFile

+###org/apache/tools/ant/taskdefs/optional/RenameExtensions
@3.5
+#<init>()V
+#setFromExtension(Ljava/lang/String;)V
+#setToExtension(Ljava/lang/String;)V
+#setReplace(Z)V
+#setSrcDir(Ljava/io/File;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/RenameExtensions

+###org/apache/tools/ant/taskdefs/optional/ReplaceRegExp
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setMatch(Ljava/lang/String;)V
+#setReplace(Ljava/lang/String;)V
+#setFlags(Ljava/lang/String;)V
+#setByLine(Ljava/lang/String;)V[deprecated]
+#setByLine(Z)V
+#setEncoding(Ljava/lang/String;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#createRegexp()Lorg/apache/tools/ant/types/RegularExpression;
+#createSubstitution()Lorg/apache/tools/ant/types/Substitution;
+#setPreserveLastModified(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ReplaceRegExp

+###org/apache/tools/ant/taskdefs/optional/Rpm
@3.5
+#<init>()V
+#execute()V
+#setTopDir(Ljava/io/File;)V
+#setCommand(Ljava/lang/String;)V
+#setSpecFile(Ljava/lang/String;)V
+#setCleanBuildDir(Z)V
+#setRemoveSpec(Z)V
+#setRemoveSource(Z)V
+#setOutput(Ljava/io/File;)V
+#setError(Ljava/io/File;)V
+#setRpmBuildCommand(Ljava/lang/String;)V
+#setFailOnError(Z)V
+#setQuiet(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/Rpm

+###org/apache/tools/ant/taskdefs/optional/SchemaValidate$SchemaLocation
@3.5
+#<init>()V
+#getNamespace()Ljava/lang/String;
+#setNamespace(Ljava/lang/String;)V
+#getFile()Ljava/io/File;
+#setFile(Ljava/io/File;)V
+#getUrl()Ljava/lang/String;
+#setUrl(Ljava/lang/String;)V
+#getSchemaLocationURL()Ljava/lang/String;
+#getURIandLocation()Ljava/lang/String;
+#validateNamespace()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/SchemaValidate$SchemaLocation

+###org/apache/tools/ant/taskdefs/optional/SchemaValidate
@3.5
+#<init>()V
+#init()V
+#enableXercesSchemaValidation()Z
+#enableJAXP12SchemaValidation()Z
+#addConfiguredSchema(Lorg/apache/tools/ant/taskdefs/optional/SchemaValidate$SchemaLocation;)V
+#setFullChecking(Z)V
+#setNoNamespaceURL(Ljava/lang/String;)V
+#setNoNamespaceFile(Ljava/io/File;)V
+#setDisableDTD(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/SchemaValidate

+###org/apache/tools/ant/taskdefs/optional/Script
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#execute()V
+#setManager(Ljava/lang/String;)V
+#setLanguage(Ljava/lang/String;)V
+#setSrc(Ljava/lang/String;)V
+#addText(Ljava/lang/String;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setSetBeans(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/Script

+###org/apache/tools/ant/taskdefs/optional/TraXLiaison
@3.5
+#<init>()V
+#setStylesheet(Ljava/io/File;)V
+#setStylesheet(Lorg/apache/tools/ant/types/Resource;)V
+#transform(Ljava/io/File;Ljava/io/File;)V
+#setFactory(Ljava/lang/String;)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#setOutputProperty(Ljava/lang/String;Ljava/lang/String;)V
+#setEntityResolver(Lorg/xml/sax/EntityResolver;)V
+#setURIResolver(Ljavax/xml/transform/URIResolver;)V
+#addParam(Ljava/lang/String;Ljava/lang/String;)V
+#addParam(Ljava/lang/String;Ljava/lang/Object;)V
+#setLogger(Lorg/apache/tools/ant/taskdefs/XSLTLogger;)V
+#error(Ljavax/xml/transform/TransformerException;)V
+#fatalError(Ljavax/xml/transform/TransformerException;)V
+#warning(Ljavax/xml/transform/TransformerException;)V
+#configure(Lorg/apache/tools/ant/taskdefs/XSLTProcess;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/TraXLiaison

+###org/apache/tools/ant/taskdefs/optional/XMLValidateTask$Attribute
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setValue(Z)V
+#getName()Ljava/lang/String;
+#getValue()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/XMLValidateTask$Attribute

+###org/apache/tools/ant/taskdefs/optional/XMLValidateTask$Property
@3.5
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/XMLValidateTask$Property

+###org/apache/tools/ant/taskdefs/optional/XMLValidateTask$ValidatorErrorHandler
@3.5
+#init(Ljava/io/File;)V
+#getFailure()Z
+#fatalError(Lorg/xml/sax/SAXParseException;)V
+#error(Lorg/xml/sax/SAXParseException;)V
+#warning(Lorg/xml/sax/SAXParseException;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/XMLValidateTask$ValidatorErrorHandler

+###org/apache/tools/ant/taskdefs/optional/XMLValidateTask
@3.5
+#<init>()V
+#setFailOnError(Z)V
+#setWarn(Z)V
+#setLenient(Z)V
+#setClassName(Ljava/lang/String;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setFile(Ljava/io/File;)V
+#addConfiguredXMLCatalog(Lorg/apache/tools/ant/types/XMLCatalog;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#createAttribute()Lorg/apache/tools/ant/taskdefs/optional/XMLValidateTask$Attribute;
+#createProperty()Lorg/apache/tools/ant/taskdefs/optional/XMLValidateTask$Property;
+#init()V
+#createDTD()Lorg/apache/tools/ant/types/DTDLocation;
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/XMLValidateTask

+###org/apache/tools/ant/taskdefs/optional/XSLTTraceSupport
@3.5
+#configureTrace(Ljavax/xml/transform/Transformer;Lorg/apache/tools/ant/taskdefs/XSLTProcess$TraceConfiguration;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/XSLTTraceSupport

+###org/apache/tools/ant/taskdefs/optional/ccm/CCMCheck
@3.5
+#<init>()V
+#getFile()Ljava/io/File;
+#setFile(Ljava/io/File;)V
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getTask()Ljava/lang/String;
+#setTask(Ljava/lang/String;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ccm/CCMCheck

+###org/apache/tools/ant/taskdefs/optional/ccm/CCMCheckin
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ccm/CCMCheckin

+###org/apache/tools/ant/taskdefs/optional/ccm/CCMCheckinDefault
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ccm/CCMCheckinDefault

+###org/apache/tools/ant/taskdefs/optional/ccm/CCMCheckout
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ccm/CCMCheckout

+###org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask
@3.5
+#<init>()V
+#execute()V
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getPlatform()Ljava/lang/String;
+#setPlatform(Ljava/lang/String;)V
+#getResolver()Ljava/lang/String;
+#setResolver(Ljava/lang/String;)V
+#getRelease()Ljava/lang/String;
+#setRelease(Ljava/lang/String;)V
+#getSubSystem()Ljava/lang/String;
+#setSubSystem(Ljava/lang/String;)V
+#getTask()Ljava/lang/String;
+#setTask(Ljava/lang/String;)V
+#start()V
+#stop()V
+#setProcessInputStream(Ljava/io/OutputStream;)V
+#setProcessErrorStream(Ljava/io/InputStream;)V
+#setProcessOutputStream(Ljava/io/InputStream;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask

+###org/apache/tools/ant/taskdefs/optional/ccm/CCMReconfigure
@3.5
+#<init>()V
+#execute()V
+#getCcmProject()Ljava/lang/String;
+#setCcmProject(Ljava/lang/String;)V
+#isRecurse()Z
+#setRecurse(Z)V
+#isVerbose()Z
+#setVerbose(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ccm/CCMReconfigure

+###org/apache/tools/ant/taskdefs/optional/ccm/Continuus
@3.5
+#<init>()V
+#getCcmAction()Ljava/lang/String;
+#setCcmAction(Ljava/lang/String;)V
+#setCcmDir(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ccm/Continuus

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCCheckin
@3.5
+#<init>()V
+#execute()V
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
+#setNoWarn(Z)V
+#getNoWarn()Z
+#setPreserveTime(Z)V
+#getPreserveTime()Z
+#setKeepCopy(Z)V
+#getKeepCopy()Z
+#setIdentical(Z)V
+#getIdentical()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCCheckin

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCCheckout
@3.5
+#<init>()V
+#execute()V
+#setReserved(Z)V
+#getReserved()Z
+#setNotco(Z)V
+#getNotco()Z
+#setOut(Ljava/lang/String;)V
+#getOut()Ljava/lang/String;
+#setNoData(Z)V
+#getNoData()Z
+#setBranch(Ljava/lang/String;)V
+#getBranch()Ljava/lang/String;
+#setVersion(Z)V
+#getVersion()Z
+#setNoWarn(Z)V
+#getNoWarn()Z
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCCheckout

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCLock
@3.5
+#<init>()V
+#execute()V
+#setReplace(Z)V
+#getReplace()Z
+#setObsolete(Z)V
+#getObsolete()Z
+#setNusers(Ljava/lang/String;)V
+#getNusers()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setPname(Ljava/lang/String;)V
+#getPname()Ljava/lang/String;
+#setObjSel(Ljava/lang/String;)V
+#setObjselect(Ljava/lang/String;)V
+#getObjselect()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCLock

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCMkattr
@3.5
+#<init>()V
+#execute()V
+#setReplace(Z)V
+#getReplace()Z
+#setRecurse(Z)V
+#getRecurse()Z
+#setVersion(Ljava/lang/String;)V
+#getVersion()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
+#setTypeName(Ljava/lang/String;)V
+#getTypeName()Ljava/lang/String;
+#setTypeValue(Ljava/lang/String;)V
+#getTypeValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCMkattr

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCMkbl
@3.5
+#<init>()V
+#execute()V
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
+#setBaselineRootName(Ljava/lang/String;)V
+#getBaselineRootName()Ljava/lang/String;
+#setNoWarn(Z)V
+#getNoWarn()Z
+#setIdentical(Z)V
+#getIdentical()Z
+#setFull(Z)V
+#getFull()Z
+#setNlabel(Z)V
+#getNlabel()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCMkbl

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCMkdir
@3.5
+#<init>()V
+#execute()V
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
+#setNoCheckout(Z)V
+#getNoCheckout()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCMkdir

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCMkelem
@3.5
+#<init>()V
+#execute()V
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
+#setNoWarn(Z)V
+#getNoWarn()Z
+#setPreserveTime(Z)V
+#getPreserveTime()Z
+#setNoCheckout(Z)V
+#getNoCheckout()Z
+#setCheckin(Z)V
+#getCheckin()Z
+#setMaster(Z)V
+#getMaster()Z
+#setEltype(Ljava/lang/String;)V
+#getEltype()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCMkelem

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCMklabel
@3.5
+#<init>()V
+#execute()V
+#setReplace(Z)V
+#getReplace()Z
+#setRecurse(Z)V
+#getRecurse()Z
+#setVersion(Ljava/lang/String;)V
+#getVersion()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
+#setTypeName(Ljava/lang/String;)V
+#getTypeName()Ljava/lang/String;
+#setVOB(Ljava/lang/String;)V
+#getVOB()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCMklabel

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCMklbtype
@3.5
+#<init>()V
+#execute()V
+#setTypeName(Ljava/lang/String;)V
+#getTypeName()Ljava/lang/String;
+#setVOB(Ljava/lang/String;)V
+#getVOB()Ljava/lang/String;
+#setReplace(Z)V
+#getReplace()Z
+#setGlobal(Z)V
+#getGlobal()Z
+#setOrdinary(Z)V
+#getOrdinary()Z
+#setPbranch(Z)V
+#getPbranch()Z
+#setShared(Z)V
+#getShared()Z
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCMklbtype

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCRmtype
@3.5
+#<init>()V
+#execute()V
+#setIgnore(Z)V
+#getIgnore()Z
+#setRmAll(Z)V
+#getRmAll()Z
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setCommentFile(Ljava/lang/String;)V
+#getCommentFile()Ljava/lang/String;
+#setTypeKind(Ljava/lang/String;)V
+#getTypeKind()Ljava/lang/String;
+#setTypeName(Ljava/lang/String;)V
+#getTypeName()Ljava/lang/String;
+#setVOB(Ljava/lang/String;)V
+#getVOB()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCRmtype

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCUnCheckout
@3.5
+#<init>()V
+#execute()V
+#setKeepCopy(Z)V
+#getKeepCopy()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCUnCheckout

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCUnlock
@3.5
+#<init>()V
+#execute()V
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setPname(Ljava/lang/String;)V
+#getPname()Ljava/lang/String;
+#setObjselect(Ljava/lang/String;)V
+#setObjSel(Ljava/lang/String;)V
+#getObjselect()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCUnlock

+###org/apache/tools/ant/taskdefs/optional/clearcase/CCUpdate
@3.5
+#<init>()V
+#execute()V
+#setGraphical(Z)V
+#getGraphical()Z
+#setOverwrite(Z)V
+#getOverwrite()Z
+#setRename(Z)V
+#getRename()Z
+#setCurrentTime(Z)V
+#getCurrentTime()Z
+#setPreserveTime(Z)V
+#getPreserveTime()Z
+#setLog(Ljava/lang/String;)V
+#getLog()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/CCUpdate

+###org/apache/tools/ant/taskdefs/optional/clearcase/ClearCase
@3.5
+#<init>()V
+#setClearToolDir(Ljava/lang/String;)V
+#setViewPath(Ljava/lang/String;)V
+#getViewPath()Ljava/lang/String;
+#getViewPathBasename()Ljava/lang/String;
+#setObjSelect(Ljava/lang/String;)V
+#getObjSelect()Ljava/lang/String;
+#setFailOnErr(Z)V
+#getFailOnErr()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/clearcase/ClearCase

+###org/apache/tools/ant/taskdefs/optional/depend/AntAnalyzer
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/AntAnalyzer

+###org/apache/tools/ant/taskdefs/optional/depend/ClassFile
@3.5
+#<init>()V
+#read(Ljava/io/InputStream;)V
+#getClassRefs()Ljava/util/Vector;
+#getFullClassName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/ClassFile

+###org/apache/tools/ant/taskdefs/optional/depend/ClassFileIterator
@3.5
+#getNextClassFile()Lorg/apache/tools/ant/taskdefs/optional/depend/ClassFile;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/ClassFileIterator

+###org/apache/tools/ant/taskdefs/optional/depend/ClassFileUtils
@3.5
+#<init>()V
+#convertSlashName(Ljava/lang/String;)Ljava/lang/String;
+#convertDotName(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/ClassFileUtils

+###org/apache/tools/ant/taskdefs/optional/depend/Depend
@3.5
+#<init>()V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setWarnOnRmiStubs(Z)V
+#execute()V
+#setSrcdir(Lorg/apache/tools/ant/types/Path;)V
+#setDestDir(Lorg/apache/tools/ant/types/Path;)V
+#setCache(Ljava/io/File;)V
+#setClosure(Z)V
+#setDump(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/Depend

+###org/apache/tools/ant/taskdefs/optional/depend/DirectoryIterator
@3.5
+#<init>(Ljava/io/File;Z)V
+#getNextClassFile()Lorg/apache/tools/ant/taskdefs/optional/depend/ClassFile;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/DirectoryIterator

+###org/apache/tools/ant/taskdefs/optional/depend/JarFileIterator
@3.5
+#<init>(Ljava/io/InputStream;)V
+#getNextClassFile()Lorg/apache/tools/ant/taskdefs/optional/depend/ClassFile;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/JarFileIterator

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/ClassCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
+#getClassName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/ClassCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantCPInfo
@3.5
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#size()I
+#addEntry(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPoolEntry;)I
+#resolve()V
+#getEntry(I)Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPoolEntry;
+#getUTF8Entry(Ljava/lang/String;)I
+#getClassEntry(Ljava/lang/String;)I
+#getConstantEntry(Ljava/lang/Object;)I
+#getMethodRefEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#getInterfaceMethodRefEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#getFieldRefEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#getNameAndTypeEntry(Ljava/lang/String;Ljava/lang/String;)I
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPoolEntry
@3.5
+#<init>(II)V
+#readEntry(Ljava/io/DataInputStream;)Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPoolEntry;
+#isResolved()Z
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
+#read(Ljava/io/DataInputStream;)V
+#getTag()I
+#getNumEntries()I
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPoolEntry

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/DoubleCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/DoubleCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/FieldRefCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
+#toString()Ljava/lang/String;
+#getFieldClassName()Ljava/lang/String;
+#getFieldName()Ljava/lang/String;
+#getFieldType()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/FieldRefCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/FloatCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/FloatCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/IntegerCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/IntegerCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/InterfaceMethodRefCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
+#toString()Ljava/lang/String;
+#getInterfaceMethodClassName()Ljava/lang/String;
+#getInterfaceMethodName()Ljava/lang/String;
+#getInterfaceMethodType()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/InterfaceMethodRefCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/InvokeDynamicCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/InvokeDynamicCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/LongCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/LongCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodHandleCPInfo$ReferenceKind
@3.5
+#values()[Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodHandleCPInfo$ReferenceKind;
+#valueOf(Ljava/lang/String;)Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodHandleCPInfo$ReferenceKind;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodHandleCPInfo$ReferenceKind

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodHandleCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodHandleCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodRefCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
+#getMethodClassName()Ljava/lang/String;
+#getMethodName()Ljava/lang/String;
+#getMethodType()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodRefCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodTypeCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/MethodTypeCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/NameAndTypeCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/NameAndTypeCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/StringCPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/StringCPInfo

+###org/apache/tools/ant/taskdefs/optional/depend/constantpool/Utf8CPInfo
@3.5
+#<init>()V
+#read(Ljava/io/DataInputStream;)V
+#toString()Ljava/lang/String;
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/depend/constantpool/Utf8CPInfo

+###org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool
@3.5
+#<init>()V
+#setDebug(Z)V
+#setVerify(Z)V
+#setSuffix(Ljava/lang/String;)V
+#setVerifyArgs(Ljava/lang/String;)V
+#setBASdtd(Ljava/lang/String;)V
+#setGenerateclient(Z)V
+#setVersion(I)V
+#setJava2iiopParams(Ljava/lang/String;)V
+#start()V
+#stop()V
+#setProcessInputStream(Ljava/io/OutputStream;)V
+#setProcessOutputStream(Ljava/io/InputStream;)V
+#setProcessErrorStream(Ljava/io/InputStream;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/ejb/BorlandGenerateClient
@3.5
+#<init>()V
+#setVersion(I)V
+#setMode(Ljava/lang/String;)V
+#setDebug(Z)V
+#setEjbjar(Ljava/io/File;)V
+#setClientjar(Ljava/io/File;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/BorlandGenerateClient

+###org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler
@3.5
+#<init>(Lorg/apache/tools/ant/Task;Ljava/io/File;)V
+#registerDTD(Ljava/lang/String;Ljava/lang/String;)V
+#resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;
+#getFiles()Ljava/util/Hashtable;
+#getPublicId()Ljava/lang/String;
+#getEjbName()Ljava/lang/String;
+#startDocument()V
+#startElement(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V
+#endElement(Ljava/lang/String;)V
+#characters([CII)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler

+###org/apache/tools/ant/taskdefs/optional/ejb/EJBDeploymentTool
@3.5
+#processDescriptor(Ljava/lang/String;Ljavax/xml/parsers/SAXParser;)V
+#validateConfigured()V
+#setTask(Lorg/apache/tools/ant/Task;)V
+#configure(Lorg/apache/tools/ant/taskdefs/optional/ejb/EjbJar$Config;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/EJBDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/ejb/EjbJar$CMPVersion
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/EjbJar$CMPVersion

+###org/apache/tools/ant/taskdefs/optional/ejb/EjbJar$DTDLocation
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/EjbJar$DTDLocation

+###org/apache/tools/ant/taskdefs/optional/ejb/EjbJar$NamingScheme
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/EjbJar$NamingScheme

+###org/apache/tools/ant/taskdefs/optional/ejb/EjbJar
@3.5
+#<init>()V
+#createWeblogic()Lorg/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool;
+#createWebsphere()Lorg/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool;
+#createBorland()Lorg/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool;
+#createIplanet()Lorg/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool;
+#createJboss()Lorg/apache/tools/ant/taskdefs/optional/ejb/JbossDeploymentTool;
+#createJonas()Lorg/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool;
+#createWeblogictoplink()Lorg/apache/tools/ant/taskdefs/optional/ejb/WeblogicTOPLinkDeploymentTool;
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#createDTD()Lorg/apache/tools/ant/taskdefs/optional/ejb/EjbJar$DTDLocation;
+#createSupport()Lorg/apache/tools/ant/types/FileSet;
+#setManifest(Ljava/io/File;)V
+#setSrcdir(Ljava/io/File;)V
+#setDescriptordir(Ljava/io/File;)V
+#setDependency(Ljava/lang/String;)V
+#setBasejarname(Ljava/lang/String;)V
+#setNaming(Lorg/apache/tools/ant/taskdefs/optional/ejb/EjbJar$NamingScheme;)V
+#getDestdir()Ljava/io/File;
+#setDestdir(Ljava/io/File;)V
+#getCmpversion()Ljava/lang/String;
+#setCmpversion(Lorg/apache/tools/ant/taskdefs/optional/ejb/EjbJar$CMPVersion;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#setFlatdestdir(Z)V
+#setGenericjarsuffix(Ljava/lang/String;)V
+#setBasenameterminator(Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/EjbJar

+###org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool
@3.5
+#<init>()V
+#setDestdir(Ljava/io/File;)V
+#setTask(Lorg/apache/tools/ant/Task;)V
+#setGenericJarSuffix(Ljava/lang/String;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#configure(Lorg/apache/tools/ant/taskdefs/optional/ejb/EjbJar$Config;)V
+#processDescriptor(Ljava/lang/String;Ljavax/xml/parsers/SAXParser;)V
+#getVendorDDPrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#validateConfigured()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool
@3.5
+#<init>()V
+#setIashome(Ljava/io/File;)V
+#setKeepgenerated(Z)V
+#setDebug(Z)V
+#setSuffix(Ljava/lang/String;)V
+#setGenericJarSuffix(Ljava/lang/String;)V
+#processDescriptor(Ljava/lang/String;Ljavax/xml/parsers/SAXParser;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc$EjbcException
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc$EjbcException

+###org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc
@3.5
+#<init>(Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/lang/String;Ljavax/xml/parsers/SAXParser;)V
+#setRetainSource(Z)V
+#setDebugOutput(Z)V
+#registerDTD(Ljava/lang/String;Ljava/lang/String;)V
+#setIasHomeDir(Ljava/io/File;)V
+#getEjbFiles()Ljava/util/Hashtable;
+#getDisplayName()Ljava/lang/String;
+#getCmpDescriptors()[Ljava/lang/String;
+#main([Ljava/lang/String;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc

+###org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbcTask
@3.5
+#<init>()V
+#setEjbdescriptor(Ljava/io/File;)V
+#setIasdescriptor(Ljava/io/File;)V
+#setDest(Ljava/io/File;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setKeepgenerated(Z)V
+#setDebug(Z)V
+#setIashome(Ljava/io/File;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbcTask

+###org/apache/tools/ant/taskdefs/optional/ejb/InnerClassFilenameFilter
@3.5
+#accept(Ljava/io/File;Ljava/lang/String;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/InnerClassFilenameFilter

+###org/apache/tools/ant/taskdefs/optional/ejb/JbossDeploymentTool
@3.5
+#<init>()V
+#setSuffix(Ljava/lang/String;)V
+#validateConfigured()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/JbossDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool
@3.5
+#<init>()V
+#setKeepgenerated(Z)V
+#setAdditionalargs(Ljava/lang/String;)V
+#setNocompil(Z)V
+#setNovalidation(Z)V
+#setJavac(Ljava/lang/String;)V
+#setJavacopts(Ljava/lang/String;)V
+#setRmicopts(Ljava/lang/String;)V
+#setSecpropag(Z)V
+#setVerbose(Z)V
+#setJonasroot(Ljava/io/File;)V
+#setKeepgeneric(Z)V
+#setJarsuffix(Ljava/lang/String;)V
+#setOrb(Ljava/lang/String;)V
+#setNogenic(Z)V
+#processDescriptor(Ljava/lang/String;Ljavax/xml/parsers/SAXParser;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool
@3.5
+#<init>()V
+#addSysproperty(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#createWLClasspath()Lorg/apache/tools/ant/types/Path;
+#setOutputDir(Ljava/io/File;)V
+#setWLClasspath(Lorg/apache/tools/ant/types/Path;)V
+#setCompiler(Ljava/lang/String;)V
+#setRebuild(Z)V
+#setJvmDebugLevel(Ljava/lang/Integer;)V
+#getJvmDebugLevel()Ljava/lang/Integer;
+#setSuffix(Ljava/lang/String;)V
+#setKeepgeneric(Z)V
+#setKeepgenerated(Ljava/lang/String;)V
+#setArgs(Ljava/lang/String;)V
+#setJvmargs(Ljava/lang/String;)V
+#setEjbcClass(Ljava/lang/String;)V
+#getEjbcClass()Ljava/lang/String;
+#setWeblogicdtd(Ljava/lang/String;)V
+#setWLdtd(Ljava/lang/String;)V
+#setEJBdtd(Ljava/lang/String;)V
+#setOldCMP(Z)V
+#setNewCMP(Z)V
+#setNoEJBC(Z)V
+#validateConfigured()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/ejb/WeblogicTOPLinkDeploymentTool
@3.5
+#<init>()V
+#setToplinkdescriptor(Ljava/lang/String;)V
+#setToplinkdtd(Ljava/lang/String;)V
+#validateConfigured()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/WeblogicTOPLinkDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool
@3.5
+#<init>()V
+#createWASClasspath()Lorg/apache/tools/ant/types/Path;
+#setWASClasspath(Lorg/apache/tools/ant/types/Path;)V
+#setDbvendor(Ljava/lang/String;)V
+#setDbname(Ljava/lang/String;)V
+#setDbschema(Ljava/lang/String;)V
+#setCodegen(Z)V
+#setQuiet(Z)V
+#setNovalidate(Z)V
+#setNowarn(Z)V
+#setNoinform(Z)V
+#setTrace(Z)V
+#setRmicoptions(Ljava/lang/String;)V
+#setUse35(Z)V
+#setRebuild(Z)V
+#setSuffix(Ljava/lang/String;)V
+#setKeepgeneric(Z)V
+#setEjbdeploy(Z)V
+#setEJBdtd(Ljava/lang/String;)V
+#setOldCMP(Z)V
+#setNewCMP(Z)V
+#setTempdir(Ljava/lang/String;)V
+#validateConfigured()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/extension/Compatability
@3.5
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/Compatability

+###org/apache/tools/ant/taskdefs/optional/extension/Compatibility
@3.5
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/Compatibility

+###org/apache/tools/ant/taskdefs/optional/extension/DeweyDecimal
@3.5
+#<init>([I)V
+#<init>(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/DeweyDecimal

+###org/apache/tools/ant/taskdefs/optional/extension/Extension
@3.5
+#getAvailable(Ljava/util/jar/Manifest;)[Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;
+#getRequired(Ljava/util/jar/Manifest;)[Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;
+#getOptions(Ljava/util/jar/Manifest;)[Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;
+#addExtension(Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;Ljava/util/jar/Attributes;)V
+#addExtension(Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;Ljava/lang/String;Ljava/util/jar/Attributes;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getExtensionName()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getSpecificationVersion()Lorg/apache/tools/ant/util/DeweyDecimal;
+#getImplementationURL()Ljava/lang/String;
+#getImplementationVendor()Ljava/lang/String;
+#getImplementationVendorID()Ljava/lang/String;
+#getImplementationVersion()Lorg/apache/tools/ant/util/DeweyDecimal;
+#getCompatibilityWith(Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;)Lorg/apache/tools/ant/taskdefs/optional/extension/Compatibility;
+#isCompatibleWith(Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;)Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/Extension

+###org/apache/tools/ant/taskdefs/optional/extension/ExtensionAdapter
@3.5
+#<init>()V
+#setExtensionName(Ljava/lang/String;)V
+#setSpecificationVersion(Ljava/lang/String;)V
+#setSpecificationVendor(Ljava/lang/String;)V
+#setImplementationVendorId(Ljava/lang/String;)V
+#setImplementationVendor(Ljava/lang/String;)V
+#setImplementationVersion(Ljava/lang/String;)V
+#setImplementationUrl(Ljava/lang/String;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/ExtensionAdapter

+###org/apache/tools/ant/taskdefs/optional/extension/ExtensionResolver
@3.5
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;Lorg/apache/tools/ant/Project;)Ljava/io/File;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/ExtensionResolver

+###org/apache/tools/ant/taskdefs/optional/extension/ExtensionSet
@3.5
+#<init>()V
+#addExtension(Lorg/apache/tools/ant/taskdefs/optional/extension/ExtensionAdapter;)V
+#addLibfileset(Lorg/apache/tools/ant/taskdefs/optional/extension/LibFileSet;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#toExtensions(Lorg/apache/tools/ant/Project;)[Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/ExtensionSet

+###org/apache/tools/ant/taskdefs/optional/extension/ExtensionUtil
@3.5
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/ExtensionUtil

+###org/apache/tools/ant/taskdefs/optional/extension/ExtraAttribute
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#validate()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/ExtraAttribute

+###org/apache/tools/ant/taskdefs/optional/extension/JarLibAvailableTask
@3.5
+#<init>()V
+#setProperty(Ljava/lang/String;)V
+#setFile(Ljava/io/File;)V
+#addConfiguredExtension(Lorg/apache/tools/ant/taskdefs/optional/extension/ExtensionAdapter;)V
+#addConfiguredExtensionSet(Lorg/apache/tools/ant/taskdefs/optional/extension/ExtensionSet;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/JarLibAvailableTask

+###org/apache/tools/ant/taskdefs/optional/extension/JarLibDisplayTask
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/JarLibDisplayTask

+###org/apache/tools/ant/taskdefs/optional/extension/JarLibManifestTask
@3.5
+#<init>()V
+#setDestfile(Ljava/io/File;)V
+#addConfiguredExtension(Lorg/apache/tools/ant/taskdefs/optional/extension/ExtensionAdapter;)V
+#addConfiguredDepends(Lorg/apache/tools/ant/taskdefs/optional/extension/ExtensionSet;)V
+#addConfiguredOptions(Lorg/apache/tools/ant/taskdefs/optional/extension/ExtensionSet;)V
+#addConfiguredAttribute(Lorg/apache/tools/ant/taskdefs/optional/extension/ExtraAttribute;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/JarLibManifestTask

+###org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask
@3.5
+#<init>()V
+#setProperty(Ljava/lang/String;)V
+#setCheckExtension(Z)V
+#setFailOnError(Z)V
+#addConfiguredLocation(Lorg/apache/tools/ant/taskdefs/optional/extension/resolvers/LocationResolver;)V
+#addConfiguredUrl(Lorg/apache/tools/ant/taskdefs/optional/extension/resolvers/URLResolver;)V
+#addConfiguredAnt(Lorg/apache/tools/ant/taskdefs/optional/extension/resolvers/AntResolver;)V
+#addConfiguredExtension(Lorg/apache/tools/ant/taskdefs/optional/extension/ExtensionAdapter;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask

+###org/apache/tools/ant/taskdefs/optional/extension/LibFileSet
@3.5
+#<init>()V
+#setIncludeUrl(Z)V
+#setIncludeImpl(Z)V
+#setUrlBase(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/LibFileSet

+###org/apache/tools/ant/taskdefs/optional/extension/Specification
@3.5
+#getSpecifications(Ljava/util/jar/Manifest;)[Lorg/apache/tools/ant/taskdefs/optional/extension/Specification;
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#getSpecificationTitle()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getImplementationTitle()Ljava/lang/String;
+#getSpecificationVersion()Lorg/apache/tools/ant/util/DeweyDecimal;
+#getImplementationVendor()Ljava/lang/String;
+#getImplementationVersion()Ljava/lang/String;
+#getSections()[Ljava/lang/String;
+#getCompatibilityWith(Lorg/apache/tools/ant/taskdefs/optional/extension/Specification;)Lorg/apache/tools/ant/taskdefs/optional/extension/Compatibility;
+#isCompatibleWith(Lorg/apache/tools/ant/taskdefs/optional/extension/Specification;)Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/Specification

+###org/apache/tools/ant/taskdefs/optional/extension/resolvers/AntResolver
@3.5
+#<init>()V
+#setAntfile(Ljava/io/File;)V
+#setDestfile(Ljava/io/File;)V
+#setTarget(Ljava/lang/String;)V
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;Lorg/apache/tools/ant/Project;)Ljava/io/File;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/resolvers/AntResolver

+###org/apache/tools/ant/taskdefs/optional/extension/resolvers/LocationResolver
@3.5
+#<init>()V
+#setLocation(Ljava/lang/String;)V
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;Lorg/apache/tools/ant/Project;)Ljava/io/File;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/resolvers/LocationResolver

+###org/apache/tools/ant/taskdefs/optional/extension/resolvers/URLResolver
@3.5
+#<init>()V
+#setUrl(Ljava/net/URL;)V
+#setDestfile(Ljava/io/File;)V
+#setDestdir(Ljava/io/File;)V
+#resolve(Lorg/apache/tools/ant/taskdefs/optional/extension/Extension;Lorg/apache/tools/ant/Project;)Ljava/io/File;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/extension/resolvers/URLResolver

+###org/apache/tools/ant/taskdefs/optional/i18n/Translate
@3.5
+#<init>()V
+#setBundle(Ljava/lang/String;)V
+#setBundleLanguage(Ljava/lang/String;)V
+#setBundleCountry(Ljava/lang/String;)V
+#setBundleVariant(Ljava/lang/String;)V
+#setToDir(Ljava/io/File;)V
+#setStartToken(Ljava/lang/String;)V
+#setEndToken(Ljava/lang/String;)V
+#setSrcEncoding(Ljava/lang/String;)V
+#setDestEncoding(Ljava/lang/String;)V
+#setBundleEncoding(Ljava/lang/String;)V
+#setForceOverwrite(Z)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/i18n/Translate

+###org/apache/tools/ant/taskdefs/optional/j2ee/AbstractHotDeploymentTool
@3.5
+#<init>()V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#validateAttributes()V
+#deploy()V
+#setTask(Lorg/apache/tools/ant/taskdefs/optional/j2ee/ServerDeploy;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#getUserName()Ljava/lang/String;
+#setUserName(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getServer()Ljava/lang/String;
+#setServer(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/j2ee/AbstractHotDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/j2ee/GenericHotDeploymentTool
@3.5
+#<init>()V
+#createArg()Lorg/apache/tools/ant/types/Commandline$Argument;
+#createJvmarg()Lorg/apache/tools/ant/types/Commandline$Argument;
+#setTask(Lorg/apache/tools/ant/taskdefs/optional/j2ee/ServerDeploy;)V
+#deploy()V
+#validateAttributes()V
+#setClassName(Ljava/lang/String;)V
+#getJava()Lorg/apache/tools/ant/taskdefs/Java;
+#getClassName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/j2ee/GenericHotDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/j2ee/HotDeploymentTool
@3.5
+#validateAttributes()V
+#deploy()V
+#setTask(Lorg/apache/tools/ant/taskdefs/optional/j2ee/ServerDeploy;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/j2ee/HotDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/j2ee/JonasHotDeploymentTool
@3.5
+#<init>()V
+#setDavidhost(Ljava/lang/String;)V
+#setDavidport(I)V
+#setJonasroot(Ljava/io/File;)V
+#setOrb(Ljava/lang/String;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#validateAttributes()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/j2ee/JonasHotDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/j2ee/ServerDeploy
@3.5
+#<init>()V
+#addGeneric(Lorg/apache/tools/ant/taskdefs/optional/j2ee/GenericHotDeploymentTool;)V
+#addWeblogic(Lorg/apache/tools/ant/taskdefs/optional/j2ee/WebLogicHotDeploymentTool;)V
+#addJonas(Lorg/apache/tools/ant/taskdefs/optional/j2ee/JonasHotDeploymentTool;)V
+#execute()V
+#getAction()Ljava/lang/String;
+#setAction(Ljava/lang/String;)V
+#getSource()Ljava/io/File;
+#setSource(Ljava/io/File;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/j2ee/ServerDeploy

+###org/apache/tools/ant/taskdefs/optional/j2ee/WebLogicHotDeploymentTool
@3.5
+#<init>()V
+#deploy()V
+#validateAttributes()V
+#getArguments()Ljava/lang/String;
+#setDebug(Z)V
+#setApplication(Ljava/lang/String;)V
+#setComponent(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/j2ee/WebLogicHotDeploymentTool

+###org/apache/tools/ant/taskdefs/optional/javacc/JJDoc
@3.5
+#setText(Z)V
+#setOnetable(Z)V
+#setOutputfile(Ljava/lang/String;)V
+#setTarget(Ljava/io/File;)V
+#setJavacchome(Ljava/io/File;)V
+#setMaxmemory(Ljava/lang/String;)V
+#<init>()V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/javacc/JJDoc

+###org/apache/tools/ant/taskdefs/optional/javacc/JJTree
@3.5
+#setBuildnodefiles(Z)V
+#setMulti(Z)V
+#setNodedefaultvoid(Z)V
+#setNodefactory(Z)V
+#setNodescopehook(Z)V
+#setNodeusesparser(Z)V
+#setStatic(Z)V
+#setVisitor(Z)V
+#setNodepackage(Ljava/lang/String;)V
+#setVisitorException(Ljava/lang/String;)V
+#setNodeprefix(Ljava/lang/String;)V
+#setOutputdirectory(Ljava/io/File;)V
+#setOutputfile(Ljava/lang/String;)V
+#setTarget(Ljava/io/File;)V
+#setJavacchome(Ljava/io/File;)V
+#setMaxmemory(Ljava/lang/String;)V
+#<init>()V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/javacc/JJTree

+###org/apache/tools/ant/taskdefs/optional/javacc/JavaCC
@3.5
+#setLookahead(I)V
+#setChoiceambiguitycheck(I)V
+#setOtherambiguityCheck(I)V
+#setStatic(Z)V
+#setDebugparser(Z)V
+#setDebuglookahead(Z)V
+#setDebugtokenmanager(Z)V
+#setOptimizetokenmanager(Z)V
+#setErrorreporting(Z)V
+#setJavaunicodeescape(Z)V
+#setUnicodeinput(Z)V
+#setIgnorecase(Z)V
+#setCommontokenaction(Z)V
+#setUsertokenmanager(Z)V
+#setUsercharstream(Z)V
+#setBuildparser(Z)V
+#setBuildtokenmanager(Z)V
+#setSanitycheck(Z)V
+#setForcelacheck(Z)V
+#setCachetokens(Z)V
+#setKeeplinecolumn(Z)V
+#setJDKversion(Ljava/lang/String;)V
+#setOutputdirectory(Ljava/io/File;)V
+#setTarget(Ljava/io/File;)V
+#setJavacchome(Ljava/io/File;)V
+#setMaxmemory(Ljava/lang/String;)V
+#<init>()V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/javacc/JavaCC

+###org/apache/tools/ant/taskdefs/optional/javah/Gcjh
@3.5
+#<init>()V
+#compile(Lorg/apache/tools/ant/taskdefs/optional/Javah;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/javah/Gcjh

+###org/apache/tools/ant/taskdefs/optional/javah/JavahAdapter
@3.5
+#compile(Lorg/apache/tools/ant/taskdefs/optional/Javah;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/javah/JavahAdapter

+###org/apache/tools/ant/taskdefs/optional/javah/JavahAdapterFactory
@3.5
+#<init>()V
+#getDefault()Ljava/lang/String;
+#getAdapter(Ljava/lang/String;Lorg/apache/tools/ant/ProjectComponent;)Lorg/apache/tools/ant/taskdefs/optional/javah/JavahAdapter;
+#getAdapter(Ljava/lang/String;Lorg/apache/tools/ant/ProjectComponent;Lorg/apache/tools/ant/types/Path;)Lorg/apache/tools/ant/taskdefs/optional/javah/JavahAdapter;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/javah/JavahAdapterFactory

+###org/apache/tools/ant/taskdefs/optional/javah/Kaffeh
@3.5
+#<init>()V
+#compile(Lorg/apache/tools/ant/taskdefs/optional/Javah;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/javah/Kaffeh

+###org/apache/tools/ant/taskdefs/optional/javah/SunJavah
@3.5
+#<init>()V
+#compile(Lorg/apache/tools/ant/taskdefs/optional/Javah;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/javah/SunJavah

+###org/apache/tools/ant/taskdefs/optional/jlink/ClassNameReader
@3.5
+#<init>()V
+#getClassName(Ljava/io/InputStream;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jlink/ClassNameReader

+###org/apache/tools/ant/taskdefs/optional/jlink/JlinkTask
@3.5
+#<init>()V
+#setOutfile(Ljava/io/File;)V
+#createMergefiles()Lorg/apache/tools/ant/types/Path;
+#setMergefiles(Lorg/apache/tools/ant/types/Path;)V
+#createAddfiles()Lorg/apache/tools/ant/types/Path;
+#setAddfiles(Lorg/apache/tools/ant/types/Path;)V
+#setCompress(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jlink/JlinkTask

+###org/apache/tools/ant/taskdefs/optional/jlink/jlink
@3.5
+#<init>()V
+#setOutfile(Ljava/lang/String;)V
+#addMergeFile(Ljava/lang/String;)V
+#addAddFile(Ljava/lang/String;)V
+#addMergeFiles([Ljava/lang/String;)V
+#addAddFiles([Ljava/lang/String;)V
+#setCompression(Z)V
+#link()V
+#main([Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jlink/jlink

+###org/apache/tools/ant/taskdefs/optional/jsp/Jasper41Mangler
@3.5
+#<init>()V
+#mapJspToJavaName(Ljava/io/File;)Ljava/lang/String;
+#mapPath(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/Jasper41Mangler

+###org/apache/tools/ant/taskdefs/optional/jsp/JspC$WebAppParameter
@3.5
+#<init>()V
+#getDirectory()Ljava/io/File;
+#setBaseDir(Ljava/io/File;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/JspC$WebAppParameter

+###org/apache/tools/ant/taskdefs/optional/jsp/JspC
@3.5
+#<init>()V
+#setSrcDir(Lorg/apache/tools/ant/types/Path;)V
+#getSrcDir()Lorg/apache/tools/ant/types/Path;
+#setDestdir(Ljava/io/File;)V
+#getDestdir()Ljava/io/File;
+#setPackage(Ljava/lang/String;)V
+#getPackage()Ljava/lang/String;
+#setVerbose(I)V
+#getVerbose()I
+#setFailonerror(Z)V
+#getFailonerror()Z
+#getIeplugin()Ljava/lang/String;
+#setIeplugin(Ljava/lang/String;)V
+#isMapped()Z
+#setMapped(Z)V
+#setUribase(Ljava/io/File;)V
+#getUribase()Ljava/io/File;
+#setUriroot(Ljava/io/File;)V
+#getUriroot()Ljava/io/File;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#setCompilerclasspath(Lorg/apache/tools/ant/types/Path;)V
+#getCompilerclasspath()Lorg/apache/tools/ant/types/Path;
+#createCompilerclasspath()Lorg/apache/tools/ant/types/Path;
+#setWebxml(Ljava/io/File;)V
+#getWebxml()Ljava/io/File;
+#setWebinc(Ljava/io/File;)V
+#getWebinc()Ljava/io/File;
+#addWebApp(Lorg/apache/tools/ant/taskdefs/optional/jsp/JspC$WebAppParameter;)V
+#getWebApp()Lorg/apache/tools/ant/taskdefs/optional/jsp/JspC$WebAppParameter;
+#setCompiler(Ljava/lang/String;)V
+#getCompileList()Ljava/util/Vector;
+#execute()V
+#deleteEmptyJavaFiles()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/JspC

+###org/apache/tools/ant/taskdefs/optional/jsp/JspMangler
@3.5
+#mapJspToJavaName(Ljava/io/File;)Ljava/lang/String;
+#mapPath(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/JspMangler

+###org/apache/tools/ant/taskdefs/optional/jsp/JspNameMangler
@3.5
+#<init>()V
+#mapJspToJavaName(Ljava/io/File;)Ljava/lang/String;
+#mapPath(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/JspNameMangler

+###org/apache/tools/ant/taskdefs/optional/jsp/WLJspc
@3.5
+#<init>()V
+#execute()V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setSrc(Ljava/io/File;)V
+#setDest(Ljava/io/File;)V
+#setPackage(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/WLJspc

+###org/apache/tools/ant/taskdefs/optional/jsp/compilers/DefaultJspCompilerAdapter
@3.5
+#<init>()V
+#setJspc(Lorg/apache/tools/ant/taskdefs/optional/jsp/JspC;)V
+#getJspc()Lorg/apache/tools/ant/taskdefs/optional/jsp/JspC;
+#implementsOwnDependencyChecking()Z
+#getProject()Lorg/apache/tools/ant/Project;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/compilers/DefaultJspCompilerAdapter

+###org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC
@3.5
+#<init>(Lorg/apache/tools/ant/taskdefs/optional/jsp/JspMangler;)V
+#execute()Z
+#createMangler()Lorg/apache/tools/ant/taskdefs/optional/jsp/JspMangler;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC

+###org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapter
@3.5
+#setJspc(Lorg/apache/tools/ant/taskdefs/optional/jsp/JspC;)V
+#execute()Z
+#createMangler()Lorg/apache/tools/ant/taskdefs/optional/jsp/JspMangler;
+#implementsOwnDependencyChecking()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapter

+###org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapterFactory
@3.5
+#getCompiler(Ljava/lang/String;Lorg/apache/tools/ant/Task;)Lorg/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapter;
+#getCompiler(Ljava/lang/String;Lorg/apache/tools/ant/Task;Lorg/apache/tools/ant/AntClassLoader;)Lorg/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapter;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapterFactory

+###org/apache/tools/ant/taskdefs/optional/native2ascii/DefaultNative2Ascii
@3.5
+#<init>()V
+#convert(Lorg/apache/tools/ant/taskdefs/optional/Native2Ascii;Ljava/io/File;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/native2ascii/DefaultNative2Ascii

+###org/apache/tools/ant/taskdefs/optional/native2ascii/KaffeNative2Ascii
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/native2ascii/KaffeNative2Ascii

+###org/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapter
@3.5
+#convert(Lorg/apache/tools/ant/taskdefs/optional/Native2Ascii;Ljava/io/File;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapter

+###org/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapterFactory
@3.5
+#<init>()V
+#getDefault()Ljava/lang/String;
+#getAdapter(Ljava/lang/String;Lorg/apache/tools/ant/ProjectComponent;)Lorg/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapter;
+#getAdapter(Ljava/lang/String;Lorg/apache/tools/ant/ProjectComponent;Lorg/apache/tools/ant/types/Path;)Lorg/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapter;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapterFactory

+###org/apache/tools/ant/taskdefs/optional/native2ascii/SunNative2Ascii
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/native2ascii/SunNative2Ascii

+###org/apache/tools/ant/taskdefs/optional/net/MimeMail
@3.5
+#<init>()V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/net/MimeMail

+###org/apache/tools/ant/taskdefs/optional/net/SetProxy
@3.5
+#<init>()V
+#setProxyHost(Ljava/lang/String;)V
+#setProxyPort(I)V
+#setSocksProxyHost(Ljava/lang/String;)V
+#setSocksProxyPort(I)V
+#setNonProxyHosts(Ljava/lang/String;)V
+#setProxyUser(Ljava/lang/String;)V
+#setProxyPassword(Ljava/lang/String;)V
+#applyWebProxySettings()V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/net/SetProxy

+###org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs
@3.5
+#execute()V
+#getRepository()Ljava/lang/String;
+#getFilenameFormat()Ljava/lang/String;
+#setFilenameFormat(Ljava/lang/String;)V
+#getLineStart()Ljava/lang/String;
+#setLineStart(Ljava/lang/String;)V
+#setRepository(Ljava/lang/String;)V
+#getPvcsproject()Ljava/lang/String;
+#setPvcsproject(Ljava/lang/String;)V
+#getPvcsprojects()Ljava/util/Vector;
+#getWorkspace()Ljava/lang/String;
+#setWorkspace(Ljava/lang/String;)V
+#getPvcsbin()Ljava/lang/String;
+#setPvcsbin(Ljava/lang/String;)V
+#getForce()Ljava/lang/String;
+#setForce(Ljava/lang/String;)V
+#getPromotiongroup()Ljava/lang/String;
+#setPromotiongroup(Ljava/lang/String;)V
+#getLabel()Ljava/lang/String;
+#setLabel(Ljava/lang/String;)V
+#getRevision()Ljava/lang/String;
+#setRevision(Ljava/lang/String;)V
+#getIgnoreReturnCode()Z
+#setIgnoreReturnCode(Z)V
+#addPvcsproject(Lorg/apache/tools/ant/taskdefs/optional/pvcs/PvcsProject;)V
+#getUpdateOnly()Z
+#setUpdateOnly(Z)V
+#getConfig()Ljava/lang/String;
+#setConfig(Ljava/io/File;)V
+#getUserId()Ljava/lang/String;
+#setUserId(Ljava/lang/String;)V
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs

+###org/apache/tools/ant/taskdefs/optional/pvcs/PvcsProject
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/pvcs/PvcsProject

+###org/apache/tools/ant/taskdefs/optional/script/ScriptDef$Attribute
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/script/ScriptDef$Attribute

+###org/apache/tools/ant/taskdefs/optional/script/ScriptDef$NestedElement
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setType(Ljava/lang/String;)V
+#setClassName(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/script/ScriptDef$NestedElement

+###org/apache/tools/ant/taskdefs/optional/script/ScriptDef
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#setName(Ljava/lang/String;)V
+#isAttributeSupported(Ljava/lang/String;)Z
+#addAttribute(Lorg/apache/tools/ant/taskdefs/optional/script/ScriptDef$Attribute;)V
+#addElement(Lorg/apache/tools/ant/taskdefs/optional/script/ScriptDef$NestedElement;)V
+#execute()V
+#createNestedElement(Ljava/lang/String;)Ljava/lang/Object;
+#executeScript(Ljava/util/Map;Ljava/util/Map;)V
+#executeScript(Ljava/util/Map;Ljava/util/Map;Lorg/apache/tools/ant/taskdefs/optional/script/ScriptDefBase;)V
+#setManager(Ljava/lang/String;)V
+#setLanguage(Ljava/lang/String;)V
+#setSrc(Ljava/io/File;)V
+#addText(Ljava/lang/String;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/script/ScriptDef

+###org/apache/tools/ant/taskdefs/optional/script/ScriptDefBase
@3.5
+#<init>()V
+#execute()V
+#createDynamicElement(Ljava/lang/String;)Ljava/lang/Object;
+#setDynamicAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#addText(Ljava/lang/String;)V
+#getText()Ljava/lang/String;
+#fail(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/script/ScriptDefBase

+###org/apache/tools/ant/taskdefs/optional/sos/SOS
@3.5
+#<init>()V
+#setNoCache(Z)V
+#setNoCompress(Z)V
+#setSosCmd(Ljava/lang/String;)V
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setProjectPath(Ljava/lang/String;)V
+#setVssServerPath(Ljava/lang/String;)V
+#setSosHome(Ljava/lang/String;)V
+#setSosServerPath(Ljava/lang/String;)V
+#setLocalPath(Lorg/apache/tools/ant/types/Path;)V
+#setVerbose(Z)V
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/sos/SOS

+###org/apache/tools/ant/taskdefs/optional/sos/SOSCheckin
@3.5
+#<init>()V
+#setFile(Ljava/lang/String;)V
+#setRecursive(Z)V
+#setComment(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/sos/SOSCheckin

+###org/apache/tools/ant/taskdefs/optional/sos/SOSCheckout
@3.5
+#<init>()V
+#setFile(Ljava/lang/String;)V
+#setRecursive(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/sos/SOSCheckout

+###org/apache/tools/ant/taskdefs/optional/sos/SOSCmd
@3.5
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/sos/SOSCmd

+###org/apache/tools/ant/taskdefs/optional/sos/SOSGet
@3.5
+#<init>()V
+#setFile(Ljava/lang/String;)V
+#setRecursive(Z)V
+#setVersion(Ljava/lang/String;)V
+#setLabel(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/sos/SOSGet

+###org/apache/tools/ant/taskdefs/optional/sos/SOSLabel
@3.5
+#<init>()V
+#setVersion(Ljava/lang/String;)V
+#setLabel(Ljava/lang/String;)V
+#setComment(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/sos/SOSLabel

+###org/apache/tools/ant/taskdefs/optional/testing/BlockFor
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#addText(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/testing/BlockFor

+###org/apache/tools/ant/taskdefs/optional/testing/BuildTimeoutException
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/tools/ant/Location;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Lorg/apache/tools/ant/Location;)V
+#<init>(Ljava/lang/Throwable;Lorg/apache/tools/ant/Location;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/testing/BuildTimeoutException

+###org/apache/tools/ant/taskdefs/optional/testing/Funtest
@3.5
+#<init>()V
+#createCondition()Lorg/apache/tools/ant/taskdefs/condition/ConditionBase;
+#addApplication(Lorg/apache/tools/ant/taskdefs/Sequential;)V
+#addSetup(Lorg/apache/tools/ant/taskdefs/Sequential;)V
+#addBlock(Lorg/apache/tools/ant/taskdefs/optional/testing/BlockFor;)V
+#addTests(Lorg/apache/tools/ant/taskdefs/Sequential;)V
+#addReporting(Lorg/apache/tools/ant/taskdefs/Sequential;)V
+#addTeardown(Lorg/apache/tools/ant/taskdefs/Sequential;)V
+#setFailOnTeardownErrors(Z)V
+#setFailureMessage(Ljava/lang/String;)V
+#setFailureProperty(Ljava/lang/String;)V
+#setShutdownTime(J)V
+#setTimeout(J)V
+#setTimeoutUnit(Lorg/apache/tools/ant/taskdefs/WaitFor$Unit;)V
+#setShutdownUnit(Lorg/apache/tools/ant/taskdefs/WaitFor$Unit;)V
+#getApplicationException()Lorg/apache/tools/ant/BuildException;
+#getTeardownException()Lorg/apache/tools/ant/BuildException;
+#getTestException()Lorg/apache/tools/ant/BuildException;
+#getTaskException()Lorg/apache/tools/ant/BuildException;
+#execute()V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/testing/Funtest

+###org/apache/tools/ant/taskdefs/optional/unix/AbstractAccessTask
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setCommand(Lorg/apache/tools/ant/types/Commandline;)V
+#setSkipEmptyFilesets(Z)V
+#setAddsourcefile(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/unix/AbstractAccessTask

+###org/apache/tools/ant/taskdefs/optional/unix/Chgrp
@3.5
+#<init>()V
+#setGroup(Ljava/lang/String;)V
+#setExecutable(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/unix/Chgrp

+###org/apache/tools/ant/taskdefs/optional/unix/Chown
@3.5
+#<init>()V
+#setOwner(Ljava/lang/String;)V
+#setExecutable(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/unix/Chown

+###org/apache/tools/ant/taskdefs/optional/unix/Symlink
@3.5
+#<init>()V
+#init()V
+#execute()V
+#single()V
+#delete()V
+#recreate()V
+#record()V
+#setOverwrite(Z)V
+#setFailOnError(Z)V
+#setAction(Ljava/lang/String;)V
+#setLink(Ljava/lang/String;)V
+#setResource(Ljava/lang/String;)V
+#setLinkfilename(Ljava/lang/String;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#deleteSymlink(Ljava/lang/String;)V[deprecated]
+#deleteSymlink(Ljava/io/File;)V[deprecated]
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/unix/Symlink

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSS$CurrentModUpdated
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSS$CurrentModUpdated

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSS$WritableFiles
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSS$WritableFiles

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSS
@3.5
+#<init>()V
+#setSsdir(Ljava/lang/String;)V
+#setLogin(Ljava/lang/String;)V
+#setVsspath(Ljava/lang/String;)V
+#setServerpath(Ljava/lang/String;)V
+#setFailOnError(Z)V
+#execute()V
+#getFileTimeStamp()Ljava/lang/String;
+#getWritableFiles()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSS

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSADD
@3.5
+#<init>()V
+#setRecursive(Z)V
+#setWritable(Z)V
+#setAutoresponse(Ljava/lang/String;)V
+#setComment(Ljava/lang/String;)V
+#setLocalpath(Lorg/apache/tools/ant/types/Path;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSADD

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKIN
@3.5
+#<init>()V
+#setLocalpath(Lorg/apache/tools/ant/types/Path;)V
+#setRecursive(Z)V
+#setWritable(Z)V
+#setAutoresponse(Ljava/lang/String;)V
+#setComment(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKIN

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKOUT
@3.5
+#<init>()V
+#setLocalpath(Lorg/apache/tools/ant/types/Path;)V
+#setRecursive(Z)V
+#setVersion(Ljava/lang/String;)V
+#setDate(Ljava/lang/String;)V
+#setLabel(Ljava/lang/String;)V
+#setAutoresponse(Ljava/lang/String;)V
+#setFileTimeStamp(Lorg/apache/tools/ant/taskdefs/optional/vss/MSVSS$CurrentModUpdated;)V
+#setWritableFiles(Lorg/apache/tools/ant/taskdefs/optional/vss/MSVSS$WritableFiles;)V
+#setGetLocalCopy(Z)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKOUT

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSCP
@3.5
+#<init>()V
+#setAutoresponse(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSCP

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSCREATE
@3.5
+#<init>()V
+#setComment(Ljava/lang/String;)V
+#setQuiet(Z)V
+#setAutoresponse(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSCREATE

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants
@3.5
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSConstants

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET
@3.5
+#<init>()V
+#setLocalpath(Lorg/apache/tools/ant/types/Path;)V
+#setRecursive(Z)V
+#setQuiet(Z)V
+#setWritable(Z)V
+#setVersion(Ljava/lang/String;)V
+#setDate(Ljava/lang/String;)V
+#setLabel(Ljava/lang/String;)V
+#setAutoresponse(Ljava/lang/String;)V
+#setFileTimeStamp(Lorg/apache/tools/ant/taskdefs/optional/vss/MSVSS$CurrentModUpdated;)V
+#setWritableFiles(Lorg/apache/tools/ant/taskdefs/optional/vss/MSVSS$WritableFiles;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY$BriefCodediffNofile
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY$BriefCodediffNofile

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY
@3.5
+#<init>()V
+#setRecursive(Z)V
+#setUser(Ljava/lang/String;)V
+#setFromDate(Ljava/lang/String;)V
+#setToDate(Ljava/lang/String;)V
+#setFromLabel(Ljava/lang/String;)V
+#setToLabel(Ljava/lang/String;)V
+#setNumdays(I)V
+#setOutput(Ljava/io/File;)V
+#setDateFormat(Ljava/lang/String;)V
+#setStyle(Lorg/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY$BriefCodediffNofile;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY

+###org/apache/tools/ant/taskdefs/optional/vss/MSVSSLABEL
@3.5
+#<init>()V
+#setLabel(Ljava/lang/String;)V
+#setVersion(Ljava/lang/String;)V
+#setComment(Ljava/lang/String;)V
+#setAutoresponse(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/vss/MSVSSLABEL

+###org/apache/tools/ant/taskdefs/optional/windows/Attrib
@3.5
+#<init>()V
+#setFile(Ljava/io/File;)V
+#setReadonly(Z)V
+#setArchive(Z)V
+#setSystem(Z)V
+#setHidden(Z)V
+#setExecutable(Ljava/lang/String;)V
+#setCommand(Ljava/lang/String;)V
+#setAddsourcefile(Z)V
+#setSkipEmptyFilesets(Z)V
+#setParallel(Z)V
+#setMaxParallel(I)V
@3.5.1
-###org/apache/tools/ant/taskdefs/optional/windows/Attrib

+###org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter
@3.5
+#<init>()V
+#setRmic(Lorg/apache/tools/ant/taskdefs/Rmic;)V
+#getRmic()Lorg/apache/tools/ant/taskdefs/Rmic;
+#getMapper()Lorg/apache/tools/ant/util/FileNameMapper;
+#getClasspath()Lorg/apache/tools/ant/types/Path;
@3.5.1
-###org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter

+###org/apache/tools/ant/taskdefs/rmic/ForkingSunRmic
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/rmic/ForkingSunRmic

+###org/apache/tools/ant/taskdefs/rmic/KaffeRmic
@3.5
+#<init>()V
+#execute()Z
+#isAvailable()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/rmic/KaffeRmic

+###org/apache/tools/ant/taskdefs/rmic/RmicAdapter
@3.5
+#setRmic(Lorg/apache/tools/ant/taskdefs/Rmic;)V
+#execute()Z
+#getMapper()Lorg/apache/tools/ant/util/FileNameMapper;
+#getClasspath()Lorg/apache/tools/ant/types/Path;
@3.5.1
-###org/apache/tools/ant/taskdefs/rmic/RmicAdapter

+###org/apache/tools/ant/taskdefs/rmic/RmicAdapterFactory
@3.5
+#getRmic(Ljava/lang/String;Lorg/apache/tools/ant/Task;)Lorg/apache/tools/ant/taskdefs/rmic/RmicAdapter;
+#getRmic(Ljava/lang/String;Lorg/apache/tools/ant/Task;Lorg/apache/tools/ant/types/Path;)Lorg/apache/tools/ant/taskdefs/rmic/RmicAdapter;
@3.5.1
-###org/apache/tools/ant/taskdefs/rmic/RmicAdapterFactory

+###org/apache/tools/ant/taskdefs/rmic/SunRmic
@3.5
+#<init>()V
+#execute()Z
@3.5.1
-###org/apache/tools/ant/taskdefs/rmic/SunRmic

+###org/apache/tools/ant/taskdefs/rmic/WLRmic
@3.5
+#<init>()V
+#execute()Z
+#getStubClassSuffix()Ljava/lang/String;
+#getSkelClassSuffix()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/taskdefs/rmic/WLRmic

+###org/apache/tools/ant/taskdefs/rmic/XNewRmic
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/taskdefs/rmic/XNewRmic

+###org/apache/tools/ant/types/AbstractFileSet
@3.5
+#<init>()V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#setDir(Ljava/io/File;)V
+#getDir()Ljava/io/File;
+#getDir(Lorg/apache/tools/ant/Project;)Ljava/io/File;
+#createPatternSet()Lorg/apache/tools/ant/types/PatternSet;
+#createInclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createIncludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExcludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#setFile(Ljava/io/File;)V
+#setIncludes(Ljava/lang/String;)V
+#appendIncludes([Ljava/lang/String;)V
+#setExcludes(Ljava/lang/String;)V
+#appendExcludes([Ljava/lang/String;)V
+#setIncludesfile(Ljava/io/File;)V
+#setExcludesfile(Ljava/io/File;)V
+#setDefaultexcludes(Z)V
+#getDefaultexcludes()Z
+#setCaseSensitive(Z)V
+#isCaseSensitive()Z
+#setFollowSymlinks(Z)V
+#isFollowSymlinks()Z
+#setMaxLevelsOfSymlinks(I)V
+#getMaxLevelsOfSymlinks()I
+#setErrorOnMissingDir(Z)V
+#getErrorOnMissingDir()Z
+#getDirectoryScanner()Lorg/apache/tools/ant/DirectoryScanner;
+#getDirectoryScanner(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/DirectoryScanner;
+#setupDirectoryScanner(Lorg/apache/tools/ant/FileScanner;)V
+#setupDirectoryScanner(Lorg/apache/tools/ant/FileScanner;Lorg/apache/tools/ant/Project;)V
+#hasSelectors()Z
+#hasPatterns()Z
+#selectorCount()I
+#getSelectors(Lorg/apache/tools/ant/Project;)[Lorg/apache/tools/ant/types/selectors/FileSelector;
+#selectorElements()Ljava/util/Enumeration;
+#appendSelector(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#addSelector(Lorg/apache/tools/ant/types/selectors/SelectSelector;)V
+#addAnd(Lorg/apache/tools/ant/types/selectors/AndSelector;)V
+#addOr(Lorg/apache/tools/ant/types/selectors/OrSelector;)V
+#addNot(Lorg/apache/tools/ant/types/selectors/NotSelector;)V
+#addNone(Lorg/apache/tools/ant/types/selectors/NoneSelector;)V
+#addMajority(Lorg/apache/tools/ant/types/selectors/MajoritySelector;)V
+#addDate(Lorg/apache/tools/ant/types/selectors/DateSelector;)V
+#addSize(Lorg/apache/tools/ant/types/selectors/SizeSelector;)V
+#addDifferent(Lorg/apache/tools/ant/types/selectors/DifferentSelector;)V
+#addFilename(Lorg/apache/tools/ant/types/selectors/FilenameSelector;)V
+#addType(Lorg/apache/tools/ant/types/selectors/TypeSelector;)V
+#addCustom(Lorg/apache/tools/ant/types/selectors/ExtendSelector;)V
+#addContains(Lorg/apache/tools/ant/types/selectors/ContainsSelector;)V
+#addPresent(Lorg/apache/tools/ant/types/selectors/PresentSelector;)V
+#addDepth(Lorg/apache/tools/ant/types/selectors/DepthSelector;)V
+#addDepend(Lorg/apache/tools/ant/types/selectors/DependSelector;)V
+#addContainsRegexp(Lorg/apache/tools/ant/types/selectors/ContainsRegexpSelector;)V
+#addModified(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector;)V
+#addReadable(Lorg/apache/tools/ant/types/selectors/ReadableSelector;)V
+#addWritable(Lorg/apache/tools/ant/types/selectors/WritableSelector;)V
+#add(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#mergeIncludes(Lorg/apache/tools/ant/Project;)[Ljava/lang/String;
+#mergeExcludes(Lorg/apache/tools/ant/Project;)[Ljava/lang/String;
+#mergePatterns(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/types/PatternSet;
@3.5.1
-###org/apache/tools/ant/types/AbstractFileSet

+###org/apache/tools/ant/types/AntFilterReader
@3.5
+#<init>()V
+#setClassName(Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#addParam(Lorg/apache/tools/ant/types/Parameter;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getParams()[Lorg/apache/tools/ant/types/Parameter;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
@3.5.1
-###org/apache/tools/ant/types/AntFilterReader

+###org/apache/tools/ant/types/ArchiveFileSet
@3.5
+#<init>()V
+#setDir(Ljava/io/File;)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setSrc(Ljava/io/File;)V
+#setSrcResource(Lorg/apache/tools/ant/types/Resource;)V
+#getSrc(Lorg/apache/tools/ant/Project;)Ljava/io/File;
+#setErrorOnMissingArchive(Z)V
+#getSrc()Ljava/io/File;
+#setPrefix(Ljava/lang/String;)V
+#getPrefix(Lorg/apache/tools/ant/Project;)Ljava/lang/String;
+#setFullpath(Ljava/lang/String;)V
+#getFullpath(Lorg/apache/tools/ant/Project;)Ljava/lang/String;
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#getDirectoryScanner(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/DirectoryScanner;
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
+#setFileMode(Ljava/lang/String;)V
+#integerSetFileMode(I)V
+#getFileMode(Lorg/apache/tools/ant/Project;)I
+#hasFileModeBeenSet()Z
+#setDirMode(Ljava/lang/String;)V
+#integerSetDirMode(I)V
+#getDirMode(Lorg/apache/tools/ant/Project;)I
+#hasDirModeBeenSet()Z
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#getPrefix()Ljava/lang/String;
+#getFullpath()Ljava/lang/String;
+#getFileMode()I
+#getDirMode()I
@3.5.1
-###org/apache/tools/ant/types/ArchiveFileSet

+###org/apache/tools/ant/types/ArchiveScanner
@3.5
+#<init>()V
+#setErrorOnMissingArchive(Z)V
+#scan()V
+#setSrc(Ljava/io/File;)V
+#setSrc(Lorg/apache/tools/ant/types/Resource;)V
+#setEncoding(Ljava/lang/String;)V
+#getIncludedFiles()[Ljava/lang/String;
+#getIncludedFilesCount()I
+#getIncludedDirectories()[Ljava/lang/String;
+#getIncludedDirsCount()I
+#init()V
+#match(Ljava/lang/String;)Z
+#getResource(Ljava/lang/String;)Lorg/apache/tools/ant/types/Resource;
@3.5.1
-###org/apache/tools/ant/types/ArchiveScanner

+###org/apache/tools/ant/types/Assertions$BaseAssertion
@3.5
+#<init>()V
+#setClass(Ljava/lang/String;)V
+#setPackage(Ljava/lang/String;)V
+#getCommandPrefix()Ljava/lang/String;
+#toCommand()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Assertions$BaseAssertion

+###org/apache/tools/ant/types/Assertions$DisabledAssertion
@3.5
+#<init>()V
+#getCommandPrefix()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Assertions$DisabledAssertion

+###org/apache/tools/ant/types/Assertions$EnabledAssertion
@3.5
+#<init>()V
+#getCommandPrefix()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Assertions$EnabledAssertion

+###org/apache/tools/ant/types/Assertions
@3.5
+#<init>()V
+#addEnable(Lorg/apache/tools/ant/types/Assertions$EnabledAssertion;)V
+#addDisable(Lorg/apache/tools/ant/types/Assertions$DisabledAssertion;)V
+#setEnableSystemAssertions(Ljava/lang/Boolean;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#size()I
+#applyAssertions(Ljava/util/List;)V
+#applyAssertions(Lorg/apache/tools/ant/types/CommandlineJava;)V
+#applyAssertions(Ljava/util/ListIterator;)V
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/Assertions

+###org/apache/tools/ant/types/Commandline$Argument
@3.5
+#<init>()V
+#setValue(Ljava/lang/String;)V
+#setLine(Ljava/lang/String;)V
+#setPath(Lorg/apache/tools/ant/types/Path;)V
+#setPathref(Lorg/apache/tools/ant/types/Reference;)V
+#setFile(Ljava/io/File;)V
+#setPrefix(Ljava/lang/String;)V
+#setSuffix(Ljava/lang/String;)V
+#getParts()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Commandline$Argument

+###org/apache/tools/ant/types/Commandline$Marker
@3.5
+#getPosition()I
+#setPrefix(Ljava/lang/String;)V
+#getPrefix()Ljava/lang/String;
+#setSuffix(Ljava/lang/String;)V
+#getSuffix()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Commandline$Marker

+###org/apache/tools/ant/types/Commandline
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#createArgument()Lorg/apache/tools/ant/types/Commandline$Argument;
+#createArgument(Z)Lorg/apache/tools/ant/types/Commandline$Argument;
+#setExecutable(Ljava/lang/String;)V
+#getExecutable()Ljava/lang/String;
+#addArguments([Ljava/lang/String;)V
+#getCommandline()[Ljava/lang/String;
+#addCommandToList(Ljava/util/ListIterator;)V
+#getArguments()[Ljava/lang/String;
+#addArgumentsToList(Ljava/util/ListIterator;)V
+#toString()Ljava/lang/String;
+#quoteArgument(Ljava/lang/String;)Ljava/lang/String;
+#toString([Ljava/lang/String;)Ljava/lang/String;
+#translateCommandline(Ljava/lang/String;)[Ljava/lang/String;
+#size()I
+#clone()Ljava/lang/Object;
+#clear()V
+#clearArgs()V
+#createMarker()Lorg/apache/tools/ant/types/Commandline$Marker;
+#describeCommand()Ljava/lang/String;
+#describeArguments()Ljava/lang/String;
+#describeCommand(Lorg/apache/tools/ant/types/Commandline;)Ljava/lang/String;
+#describeArguments(Lorg/apache/tools/ant/types/Commandline;)Ljava/lang/String;
+#describeCommand([Ljava/lang/String;)Ljava/lang/String;
+#describeArguments([Ljava/lang/String;)Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
@3.5.1
-###org/apache/tools/ant/types/Commandline

+###org/apache/tools/ant/types/CommandlineJava$SysProperties
@3.5
+#<init>()V
+#getVariables()[Ljava/lang/String;
+#addDefinitionsToList(Ljava/util/ListIterator;)V
+#size()I
+#setSystem()V
+#restoreSystem()V
+#clone()Ljava/lang/Object;
+#addSyspropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
+#addSysproperties(Lorg/apache/tools/ant/types/CommandlineJava$SysProperties;)V
@3.5.1
-###org/apache/tools/ant/types/CommandlineJava$SysProperties

+###org/apache/tools/ant/types/CommandlineJava
@3.5
+#<init>()V
+#createArgument()Lorg/apache/tools/ant/types/Commandline$Argument;
+#createVmArgument()Lorg/apache/tools/ant/types/Commandline$Argument;
+#addSysproperty(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#addSyspropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
+#addSysproperties(Lorg/apache/tools/ant/types/CommandlineJava$SysProperties;)V
+#setVm(Ljava/lang/String;)V
+#setVmversion(Ljava/lang/String;)V
+#setCloneVm(Z)V
+#getAssertions()Lorg/apache/tools/ant/types/Assertions;
+#setAssertions(Lorg/apache/tools/ant/types/Assertions;)V
+#setJar(Ljava/lang/String;)V
+#getJar()Ljava/lang/String;
+#setClassname(Ljava/lang/String;)V
+#getClassname()Ljava/lang/String;
+#createClasspath(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/types/Path;
+#createBootclasspath(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/types/Path;
+#getVmversion()Ljava/lang/String;
+#getCommandline()[Ljava/lang/String;
+#setMaxmemory(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#describeCommand()Ljava/lang/String;
+#describeJavaCommand()Ljava/lang/String;
+#size()I
+#getJavaCommand()Lorg/apache/tools/ant/types/Commandline;
+#getVmCommand()Lorg/apache/tools/ant/types/Commandline;
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#getBootclasspath()Lorg/apache/tools/ant/types/Path;
+#setSystemProperties()V
+#restoreSystemProperties()V
+#getSystemProperties()Lorg/apache/tools/ant/types/CommandlineJava$SysProperties;
+#clone()Ljava/lang/Object;
+#clearJavaArgs()V
+#haveClasspath()Z
@3.5.1
-###org/apache/tools/ant/types/CommandlineJava

+###org/apache/tools/ant/types/Comparison
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
+#evaluate(I)Z
@3.5.1
-###org/apache/tools/ant/types/Comparison

+###org/apache/tools/ant/types/DTDLocation
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/DTDLocation

+###org/apache/tools/ant/types/DataType
@3.5
+#<init>()V
+#isReference()Z
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#invokeCircularReferenceCheck(Lorg/apache/tools/ant/types/DataType;Ljava/util/Stack;Lorg/apache/tools/ant/Project;)V
+#pushAndInvokeCircularReferenceCheck(Lorg/apache/tools/ant/types/DataType;Ljava/util/Stack;Lorg/apache/tools/ant/Project;)V
+#getRefid()Lorg/apache/tools/ant/types/Reference;
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/DataType

+###org/apache/tools/ant/types/Description
@3.5
+#<init>()V
+#addText(Ljava/lang/String;)V
+#getDescription(Lorg/apache/tools/ant/Project;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Description

+###org/apache/tools/ant/types/DirSet
@3.5
+#<init>()V
+#clone()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/DirSet

+###org/apache/tools/ant/types/EnumeratedAttribute
@3.5
+#getValues()[Ljava/lang/String;
+#getInstance(Ljava/lang/Class;Ljava/lang/String;)Lorg/apache/tools/ant/types/EnumeratedAttribute;
+#setValue(Ljava/lang/String;)V
+#containsValue(Ljava/lang/String;)Z
+#indexOfValue(Ljava/lang/String;)I
+#getValue()Ljava/lang/String;
+#getIndex()I
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/EnumeratedAttribute

+###org/apache/tools/ant/types/Environment$Variable
@3.5
+#<init>()V
+#setKey(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#setPath(Lorg/apache/tools/ant/types/Path;)V
+#setFile(Ljava/io/File;)V
+#getContent()Ljava/lang/String;
+#validate()V
@3.5.1
-###org/apache/tools/ant/types/Environment$Variable

+###org/apache/tools/ant/types/Environment
@3.5
+#<init>()V
+#addVariable(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#getVariables()[Ljava/lang/String;
+#getVariablesVector()Ljava/util/Vector;
@3.5.1
-###org/apache/tools/ant/types/Environment

+###org/apache/tools/ant/types/FileList$FileName
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/FileList$FileName

+###org/apache/tools/ant/types/FileList
@3.5
+#<init>()V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#setDir(Ljava/io/File;)V
+#getDir(Lorg/apache/tools/ant/Project;)Ljava/io/File;
+#setFiles(Ljava/lang/String;)V
+#getFiles(Lorg/apache/tools/ant/Project;)[Ljava/lang/String;
+#addConfiguredFile(Lorg/apache/tools/ant/types/FileList$FileName;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
@3.5.1
-###org/apache/tools/ant/types/FileList

+###org/apache/tools/ant/types/FileSet
@3.5
+#<init>()V
+#clone()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
@3.5.1
-###org/apache/tools/ant/types/FileSet

+###org/apache/tools/ant/types/FilterChain
@3.5
+#<init>()V
+#addFilterReader(Lorg/apache/tools/ant/types/AntFilterReader;)V
+#getFilterReaders()Ljava/util/Vector;
+#addClassConstants(Lorg/apache/tools/ant/filters/ClassConstants;)V
+#addExpandProperties(Lorg/apache/tools/ant/filters/ExpandProperties;)V
+#addHeadFilter(Lorg/apache/tools/ant/filters/HeadFilter;)V
+#addLineContains(Lorg/apache/tools/ant/filters/LineContains;)V
+#addLineContainsRegExp(Lorg/apache/tools/ant/filters/LineContainsRegExp;)V
+#addPrefixLines(Lorg/apache/tools/ant/filters/PrefixLines;)V
+#addSuffixLines(Lorg/apache/tools/ant/filters/SuffixLines;)V
+#addReplaceTokens(Lorg/apache/tools/ant/filters/ReplaceTokens;)V
+#addStripJavaComments(Lorg/apache/tools/ant/filters/StripJavaComments;)V
+#addStripLineBreaks(Lorg/apache/tools/ant/filters/StripLineBreaks;)V
+#addStripLineComments(Lorg/apache/tools/ant/filters/StripLineComments;)V
+#addTabsToSpaces(Lorg/apache/tools/ant/filters/TabsToSpaces;)V
+#addTailFilter(Lorg/apache/tools/ant/filters/TailFilter;)V
+#addEscapeUnicode(Lorg/apache/tools/ant/filters/EscapeUnicode;)V
+#addTokenFilter(Lorg/apache/tools/ant/filters/TokenFilter;)V
+#addDeleteCharacters(Lorg/apache/tools/ant/filters/TokenFilter$DeleteCharacters;)V
+#addContainsRegex(Lorg/apache/tools/ant/filters/TokenFilter$ContainsRegex;)V
+#addReplaceRegex(Lorg/apache/tools/ant/filters/TokenFilter$ReplaceRegex;)V
+#addTrim(Lorg/apache/tools/ant/filters/TokenFilter$Trim;)V
+#addReplaceString(Lorg/apache/tools/ant/filters/TokenFilter$ReplaceString;)V
+#addIgnoreBlank(Lorg/apache/tools/ant/filters/TokenFilter$IgnoreBlank;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#add(Lorg/apache/tools/ant/filters/ChainableReader;)V
@3.5.1
-###org/apache/tools/ant/types/FilterChain

+###org/apache/tools/ant/types/FilterSet$Filter
@3.5
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#setToken(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#getToken()Ljava/lang/String;
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/FilterSet$Filter

+###org/apache/tools/ant/types/FilterSet$FiltersFile
@3.5
+#<init>(Lorg/apache/tools/ant/types/FilterSet;)V
+#setFile(Ljava/io/File;)V
@3.5.1
-###org/apache/tools/ant/types/FilterSet$FiltersFile

+###org/apache/tools/ant/types/FilterSet$OnMissing
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/FilterSet$OnMissing

+###org/apache/tools/ant/types/FilterSet
@3.5
+#<init>()V
+#getFilterHash()Ljava/util/Hashtable;
+#setFiltersfile(Ljava/io/File;)V
+#setBeginToken(Ljava/lang/String;)V
+#getBeginToken()Ljava/lang/String;
+#setEndToken(Ljava/lang/String;)V
+#getEndToken()Ljava/lang/String;
+#setRecurse(Z)V
+#isRecurse()Z
+#readFiltersFromFile(Ljava/io/File;)V
+#replaceTokens(Ljava/lang/String;)Ljava/lang/String;
+#addFilter(Lorg/apache/tools/ant/types/FilterSet$Filter;)V
+#createFiltersfile()Lorg/apache/tools/ant/types/FilterSet$FiltersFile;
+#addFilter(Ljava/lang/String;Ljava/lang/String;)V
+#addConfiguredFilterSet(Lorg/apache/tools/ant/types/FilterSet;)V
+#addConfiguredPropertySet(Lorg/apache/tools/ant/types/PropertySet;)V
+#hasFilters()Z
+#clone()Ljava/lang/Object;
+#setOnMissingFiltersFile(Lorg/apache/tools/ant/types/FilterSet$OnMissing;)V
+#getOnMissingFiltersFile()Lorg/apache/tools/ant/types/FilterSet$OnMissing;
@3.5.1
-###org/apache/tools/ant/types/FilterSet

+###org/apache/tools/ant/types/FilterSetCollection
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/types/FilterSet;)V
+#addFilterSet(Lorg/apache/tools/ant/types/FilterSet;)V
+#replaceTokens(Ljava/lang/String;)Ljava/lang/String;
+#hasFilters()Z
@3.5.1
-###org/apache/tools/ant/types/FilterSetCollection

+###org/apache/tools/ant/types/FlexInteger
@3.5
+#<init>(Ljava/lang/String;)V
+#intValue()I
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/FlexInteger

+###org/apache/tools/ant/types/LogLevel
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#getLevel()I
@3.5.1
-###org/apache/tools/ant/types/LogLevel

+###org/apache/tools/ant/types/Mapper$MapperType
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
+#getImplementation()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Mapper$MapperType

+###org/apache/tools/ant/types/Mapper
@3.5
+#<init>(Lorg/apache/tools/ant/Project;)V
+#setType(Lorg/apache/tools/ant/types/Mapper$MapperType;)V
+#addConfigured(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#addConfiguredMapper(Lorg/apache/tools/ant/types/Mapper;)V
+#setClassname(Ljava/lang/String;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#getImplementation()Lorg/apache/tools/ant/util/FileNameMapper;
@3.5.1
-###org/apache/tools/ant/types/Mapper

+###org/apache/tools/ant/types/Parameter
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setType(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getValue()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Parameter

+###org/apache/tools/ant/types/Parameterizable
@3.5
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
@3.5.1
-###org/apache/tools/ant/types/Parameterizable

+###org/apache/tools/ant/types/Path$PathElement
@3.5
+#<init>(Lorg/apache/tools/ant/types/Path;)V
+#setLocation(Ljava/io/File;)V
+#setPath(Ljava/lang/String;)V
+#getParts()[Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
+#isFilesystemOnly()Z
+#size()I
@3.5.1
-###org/apache/tools/ant/types/Path$PathElement

+###org/apache/tools/ant/types/Path
@3.5
+#<init>(Lorg/apache/tools/ant/Project;Ljava/lang/String;)V
+#<init>(Lorg/apache/tools/ant/Project;)V
+#setLocation(Ljava/io/File;)V
+#setPath(Ljava/lang/String;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#createPathElement()Lorg/apache/tools/ant/types/Path$PathElement;
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#addFilelist(Lorg/apache/tools/ant/types/FileList;)V
+#addDirset(Lorg/apache/tools/ant/types/DirSet;)V
+#add(Lorg/apache/tools/ant/types/Path;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#createPath()Lorg/apache/tools/ant/types/Path;
+#append(Lorg/apache/tools/ant/types/Path;)V
+#addExisting(Lorg/apache/tools/ant/types/Path;)V
+#addExisting(Lorg/apache/tools/ant/types/Path;Z)V
+#setCache(Z)V
+#list()[Ljava/lang/String;
+#toString()Ljava/lang/String;
+#translatePath(Lorg/apache/tools/ant/Project;Ljava/lang/String;)[Ljava/lang/String;
+#translateFile(Ljava/lang/String;)Ljava/lang/String;
+#size()I
+#clone()Ljava/lang/Object;
+#concatSystemClasspath()Lorg/apache/tools/ant/types/Path;
+#concatSystemClasspath(Ljava/lang/String;)Lorg/apache/tools/ant/types/Path;
+#concatSystemBootClasspath(Ljava/lang/String;)Lorg/apache/tools/ant/types/Path;
+#addJavaRuntime()V
+#addExtdirs(Lorg/apache/tools/ant/types/Path;)V
+#iterator()Ljava/util/Iterator;
+#isFilesystemOnly()Z
@3.5.1
-###org/apache/tools/ant/types/Path

+###org/apache/tools/ant/types/PatternSet$NameEntry
@3.5
+#<init>(Lorg/apache/tools/ant/types/PatternSet;)V
+#setName(Ljava/lang/String;)V
+#setIf(Ljava/lang/Object;)V
+#setIf(Ljava/lang/String;)V
+#setUnless(Ljava/lang/Object;)V
+#setUnless(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#evalName(Lorg/apache/tools/ant/Project;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/PatternSet$NameEntry

+###org/apache/tools/ant/types/PatternSet
@3.5
+#<init>()V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#addConfiguredPatternset(Lorg/apache/tools/ant/types/PatternSet;)V
+#createInclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createIncludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExcludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#setIncludes(Ljava/lang/String;)V
+#setExcludes(Ljava/lang/String;)V
+#setIncludesfile(Ljava/io/File;)V
+#setExcludesfile(Ljava/io/File;)V
+#append(Lorg/apache/tools/ant/types/PatternSet;Lorg/apache/tools/ant/Project;)V
+#getIncludePatterns(Lorg/apache/tools/ant/Project;)[Ljava/lang/String;
+#getExcludePatterns(Lorg/apache/tools/ant/Project;)[Ljava/lang/String;
+#hasPatterns(Lorg/apache/tools/ant/Project;)Z
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#addConfiguredInvert(Lorg/apache/tools/ant/types/PatternSet;)V
@3.5.1
-###org/apache/tools/ant/types/PatternSet

+###org/apache/tools/ant/types/Permissions$Permission
@3.5
+#<init>()V
+#setClass(Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setActions(Ljava/lang/String;)V
+#getActions()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/Permissions$Permission

+###org/apache/tools/ant/types/Permissions
@3.5
+#<init>()V
+#<init>(Z)V
+#addConfiguredGrant(Lorg/apache/tools/ant/types/Permissions$Permission;)V
+#addConfiguredRevoke(Lorg/apache/tools/ant/types/Permissions$Permission;)V
+#setSecurityManager()V
+#restoreSecurityManager()V
@3.5.1
-###org/apache/tools/ant/types/Permissions

+###org/apache/tools/ant/types/PropertySet$BuiltinPropertySetName
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/PropertySet$BuiltinPropertySetName

+###org/apache/tools/ant/types/PropertySet$PropertyRef
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#setRegex(Ljava/lang/String;)V
+#setPrefix(Ljava/lang/String;)V
+#setBuiltin(Lorg/apache/tools/ant/types/PropertySet$BuiltinPropertySetName;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/PropertySet$PropertyRef

+###org/apache/tools/ant/types/PropertySet
@3.5
+#<init>()V
+#appendName(Ljava/lang/String;)V
+#appendRegex(Ljava/lang/String;)V
+#appendPrefix(Ljava/lang/String;)V
+#appendBuiltin(Lorg/apache/tools/ant/types/PropertySet$BuiltinPropertySetName;)V
+#setMapper(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addPropertyref(Lorg/apache/tools/ant/types/PropertySet$PropertyRef;)V
+#addPropertyset(Lorg/apache/tools/ant/types/PropertySet;)V
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#setDynamic(Z)V
+#setNegate(Z)V
+#getDynamic()Z
+#getMapper()Lorg/apache/tools/ant/types/Mapper;
+#getProperties()Ljava/util/Properties;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
@3.5.1
-###org/apache/tools/ant/types/PropertySet

+###org/apache/tools/ant/types/Quantifier
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
+#evaluate([Z)Z
+#evaluate(II)Z
@3.5.1
-###org/apache/tools/ant/types/Quantifier

+###org/apache/tools/ant/types/RedirectorElement
@3.5
+#<init>()V
+#addConfiguredInputMapper(Lorg/apache/tools/ant/types/Mapper;)V
+#addConfiguredOutputMapper(Lorg/apache/tools/ant/types/Mapper;)V
+#addConfiguredErrorMapper(Lorg/apache/tools/ant/types/Mapper;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#setInput(Ljava/io/File;)V
+#setInputString(Ljava/lang/String;)V
+#setLogInputString(Z)V
+#setOutput(Ljava/io/File;)V
+#setOutputEncoding(Ljava/lang/String;)V
+#setErrorEncoding(Ljava/lang/String;)V
+#setInputEncoding(Ljava/lang/String;)V
+#setLogError(Z)V
+#setError(Ljava/io/File;)V
+#setOutputProperty(Ljava/lang/String;)V
+#setAppend(Z)V
+#setAlwaysLog(Z)V
+#setCreateEmptyFiles(Z)V
+#setErrorProperty(Ljava/lang/String;)V
+#createInputFilterChain()Lorg/apache/tools/ant/types/FilterChain;
+#createOutputFilterChain()Lorg/apache/tools/ant/types/FilterChain;
+#createErrorFilterChain()Lorg/apache/tools/ant/types/FilterChain;
+#setBinaryOutput(Z)V
+#configure(Lorg/apache/tools/ant/taskdefs/Redirector;)V
+#configure(Lorg/apache/tools/ant/taskdefs/Redirector;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/types/RedirectorElement

+###org/apache/tools/ant/types/Reference
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/tools/ant/Project;Ljava/lang/String;)V
+#setRefId(Ljava/lang/String;)V
+#getRefId()Ljava/lang/String;
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#getReferencedObject(Lorg/apache/tools/ant/Project;)Ljava/lang/Object;
+#getReferencedObject()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/Reference

+###org/apache/tools/ant/types/RegularExpression
@3.5
+#<init>()V
+#setPattern(Ljava/lang/String;)V
+#getPattern(Lorg/apache/tools/ant/Project;)Ljava/lang/String;
+#getRegexp(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/util/regexp/Regexp;
+#getRef(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/types/RegularExpression;
@3.5.1
-###org/apache/tools/ant/types/RegularExpression

+###org/apache/tools/ant/types/Resource
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;ZJ)V
+#<init>(Ljava/lang/String;ZJZ)V
+#<init>(Ljava/lang/String;ZJZJ)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isExists()Z
+#setExists(Z)V
+#getLastModified()J
+#setLastModified(J)V
+#isDirectory()Z
+#setDirectory(Z)V
+#setSize(J)V
+#getSize()J
+#clone()Ljava/lang/Object;
+#compareTo(Lorg/apache/tools/ant/types/Resource;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
+#toString()Ljava/lang/String;
+#toLongString()Ljava/lang/String;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#as(Ljava/lang/Class;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/apache/tools/ant/types/Resource

+###org/apache/tools/ant/types/ResourceCollection
@3.5
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
@3.5.1
-###org/apache/tools/ant/types/ResourceCollection

+###org/apache/tools/ant/types/ResourceFactory
@3.5
+#getResource(Ljava/lang/String;)Lorg/apache/tools/ant/types/Resource;
@3.5.1
-###org/apache/tools/ant/types/ResourceFactory

+###org/apache/tools/ant/types/ResourceLocation
@3.5
+#<init>()V
+#setPublicId(Ljava/lang/String;)V
+#setLocation(Ljava/lang/String;)V
+#setBase(Ljava/net/URL;)V
+#getPublicId()Ljava/lang/String;
+#getLocation()Ljava/lang/String;
+#getBase()Ljava/net/URL;
@3.5.1
-###org/apache/tools/ant/types/ResourceLocation

+###org/apache/tools/ant/types/Substitution
@3.5
+#<init>()V
+#setExpression(Ljava/lang/String;)V
+#getExpression(Lorg/apache/tools/ant/Project;)Ljava/lang/String;
+#getRef(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/types/Substitution;
@3.5.1
-###org/apache/tools/ant/types/Substitution

+###org/apache/tools/ant/types/TarFileSet
@3.5
+#<init>()V
+#setUserName(Ljava/lang/String;)V
+#getUserName()Ljava/lang/String;
+#hasUserNameBeenSet()Z
+#setUid(I)V
+#getUid()I
+#hasUserIdBeenSet()Z
+#setGroup(Ljava/lang/String;)V
+#getGroup()Ljava/lang/String;
+#hasGroupBeenSet()Z
+#setGid(I)V
+#getGid()I
+#hasGroupIdBeenSet()Z
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/TarFileSet

+###org/apache/tools/ant/types/TarScanner
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/TarScanner

+###org/apache/tools/ant/types/TimeComparison
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
+#evaluate(JJ)Z
+#evaluate(JJJ)Z
+#compare(JJ)I
+#compare(JJJ)I
@3.5.1
-###org/apache/tools/ant/types/TimeComparison

+###org/apache/tools/ant/types/XMLCatalog
@3.5
+#<init>()V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#createCatalogPath()Lorg/apache/tools/ant/types/Path;
+#setCatalogPathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getCatalogPath()Lorg/apache/tools/ant/types/Path;
+#addDTD(Lorg/apache/tools/ant/types/ResourceLocation;)V
+#addEntity(Lorg/apache/tools/ant/types/ResourceLocation;)V
+#addConfiguredXMLCatalog(Lorg/apache/tools/ant/types/XMLCatalog;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;
+#resolve(Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/transform/Source;
@3.5.1
-###org/apache/tools/ant/types/XMLCatalog

+###org/apache/tools/ant/types/ZipFileSet
@3.5
+#<init>()V
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/ZipFileSet

+###org/apache/tools/ant/types/ZipScanner
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/ZipScanner

+###org/apache/tools/ant/types/mappers/CutDirsMapper
@3.5
+#<init>()V
+#setDirs(I)V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/mappers/CutDirsMapper

+###org/apache/tools/ant/types/mappers/FilterMapper
@3.5
+#<init>()V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/mappers/FilterMapper

+###org/apache/tools/ant/types/optional/AbstractScriptComponent
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getRunner()Lorg/apache/tools/ant/util/ScriptRunnerBase;
+#setSrc(Ljava/io/File;)V
+#addText(Ljava/lang/String;)V
+#setManager(Ljava/lang/String;)V
+#setLanguage(Ljava/lang/String;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setSetBeans(Z)V
@3.5.1
-###org/apache/tools/ant/types/optional/AbstractScriptComponent

+###org/apache/tools/ant/types/optional/ScriptCondition
@3.5
+#<init>()V
+#eval()Z
+#getValue()Z
+#setValue(Z)V
@3.5.1
-###org/apache/tools/ant/types/optional/ScriptCondition

+###org/apache/tools/ant/types/optional/ScriptFilter
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#setLanguage(Ljava/lang/String;)V
+#setToken(Ljava/lang/String;)V
+#getToken()Ljava/lang/String;
+#filter(Ljava/lang/String;)Ljava/lang/String;
+#setSrc(Ljava/io/File;)V
+#addText(Ljava/lang/String;)V
+#setManager(Ljava/lang/String;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setSetBeans(Z)V
@3.5.1
-###org/apache/tools/ant/types/optional/ScriptFilter

+###org/apache/tools/ant/types/optional/ScriptMapper
@3.5
+#<init>()V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#clear()V
+#addMappedName(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/optional/ScriptMapper

+###org/apache/tools/ant/types/optional/ScriptSelector
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#setManager(Ljava/lang/String;)V
+#setLanguage(Ljava/lang/String;)V
+#setSrc(Ljava/io/File;)V
+#addText(Ljava/lang/String;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setSetBeans(Z)V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
+#getBasedir()Ljava/io/File;
+#getFilename()Ljava/lang/String;
+#getFile()Ljava/io/File;
+#isSelected()Z
+#setSelected(Z)V
@3.5.1
-###org/apache/tools/ant/types/optional/ScriptSelector

+###org/apache/tools/ant/types/optional/depend/ClassfileSet$ClassRoot
@3.5
+#<init>()V
+#setClassname(Ljava/lang/String;)V
+#getClassname()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/optional/depend/ClassfileSet$ClassRoot

+###org/apache/tools/ant/types/optional/depend/ClassfileSet
@3.5
+#<init>()V
+#addRootFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#setRootClass(Ljava/lang/String;)V
+#getDirectoryScanner(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/DirectoryScanner;
+#addConfiguredRoot(Lorg/apache/tools/ant/types/optional/depend/ClassfileSet$ClassRoot;)V
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/optional/depend/ClassfileSet

+###org/apache/tools/ant/types/optional/depend/DependScanner
@3.5
+#<init>(Lorg/apache/tools/ant/DirectoryScanner;)V
+#setRootClasses(Ljava/util/Vector;)V
+#getIncludedFiles()[Ljava/lang/String;
+#getIncludedFilesCount()I
+#scan()V
+#addDefaultExcludes()V
+#getExcludedDirectories()[Ljava/lang/String;
+#getExcludedFiles()[Ljava/lang/String;
+#getIncludedDirectories()[Ljava/lang/String;
+#getIncludedDirsCount()I
+#getNotIncludedDirectories()[Ljava/lang/String;
+#getNotIncludedFiles()[Ljava/lang/String;
+#setExcludes([Ljava/lang/String;)V
+#setIncludes([Ljava/lang/String;)V
+#setCaseSensitive(Z)V
+#addBasedir(Ljava/io/File;)V
@3.5.1
-###org/apache/tools/ant/types/optional/depend/DependScanner

+###org/apache/tools/ant/types/resources/AbstractClasspathResource$ClassLoaderWithFlag
@3.5
+#getLoader()Ljava/lang/ClassLoader;
+#needsCleanup()Z
+#cleanup()V
@3.5.1
-###org/apache/tools/ant/types/resources/AbstractClasspathResource$ClassLoaderWithFlag

+###org/apache/tools/ant/types/resources/AbstractClasspathResource
@3.5
+#<init>()V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#getLoader()Lorg/apache/tools/ant/types/Reference;
+#setLoaderRef(Lorg/apache/tools/ant/types/Reference;)V
+#setParentFirst(Z)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#isExists()Z
+#getInputStream()Ljava/io/InputStream;
@3.5.1
-###org/apache/tools/ant/types/resources/AbstractClasspathResource

+###org/apache/tools/ant/types/resources/AbstractResourceCollectionWrapper
@3.5
+#<init>()V
+#setCache(Z)V
+#isCache()Z
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/AbstractResourceCollectionWrapper

+###org/apache/tools/ant/types/resources/AllButFirst
@3.5
+#<init>()V
+#size()I
@3.5.1
-###org/apache/tools/ant/types/resources/AllButFirst

+###org/apache/tools/ant/types/resources/AllButLast
@3.5
+#<init>()V
+#size()I
@3.5.1
-###org/apache/tools/ant/types/resources/AllButLast

+###org/apache/tools/ant/types/resources/Appendable
@3.5
+#getAppendOutputStream()Ljava/io/OutputStream;
@3.5.1
-###org/apache/tools/ant/types/resources/Appendable

+###org/apache/tools/ant/types/resources/ArchiveResource
@3.5
+#setArchive(Ljava/io/File;)V
+#setMode(I)V
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#getArchive()Lorg/apache/tools/ant/types/Resource;
+#getLastModified()J
+#getSize()J
+#isDirectory()Z
+#isExists()Z
+#getMode()I
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#compareTo(Lorg/apache/tools/ant/types/Resource;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/apache/tools/ant/types/resources/ArchiveResource

+###org/apache/tools/ant/types/resources/Archives
@3.5
+#<init>()V
+#createZips()Lorg/apache/tools/ant/types/resources/Union;
+#createTars()Lorg/apache/tools/ant/types/resources/Union;
+#size()I
+#iterator()Ljava/util/Iterator;
+#isFilesystemOnly()Z
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/resources/Archives

+###org/apache/tools/ant/types/resources/BCFileSet
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/types/FileSet;)V
+#iterator()Ljava/util/Iterator;
+#size()I
@3.5.1
-###org/apache/tools/ant/types/resources/BCFileSet

+###org/apache/tools/ant/types/resources/BZip2Resource
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/types/ResourceCollection;)V
@3.5.1
-###org/apache/tools/ant/types/resources/BZip2Resource

+###org/apache/tools/ant/types/resources/BaseResourceCollectionContainer
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Project;)V
+#setCache(Z)V
+#isCache()Z
+#clear()V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#addAll(Ljava/util/Collection;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
+#getResourceCollections()Ljava/util/List;
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/BaseResourceCollectionContainer

+###org/apache/tools/ant/types/resources/BaseResourceCollectionWrapper
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/BaseResourceCollectionWrapper

+###org/apache/tools/ant/types/resources/CompressedResource
@3.5
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/CompressedResource

+###org/apache/tools/ant/types/resources/ContentTransformingResource
@3.5
+#getSize()J
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#as(Ljava/lang/Class;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/resources/ContentTransformingResource

+###org/apache/tools/ant/types/resources/Difference
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/Difference

+###org/apache/tools/ant/types/resources/FileProvider
@3.5
+#getFile()Ljava/io/File;
@3.5.1
-###org/apache/tools/ant/types/resources/FileProvider

+###org/apache/tools/ant/types/resources/FileResource
@3.5
+#<init>()V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#<init>(Ljava/io/File;)V
+#<init>(Lorg/apache/tools/ant/Project;Ljava/io/File;)V
+#<init>(Lorg/apache/tools/ant/Project;Ljava/lang/String;)V
+#setFile(Ljava/io/File;)V
+#getFile()Ljava/io/File;
+#setBaseDir(Ljava/io/File;)V
+#getBaseDir()Ljava/io/File;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#getName()Ljava/lang/String;
+#isExists()Z
+#getLastModified()J
+#isDirectory()Z
+#getSize()J
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#getAppendOutputStream()Ljava/io/OutputStream;
+#compareTo(Lorg/apache/tools/ant/types/Resource;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#isFilesystemOnly()Z
+#touch(J)V
+#getResource(Ljava/lang/String;)Lorg/apache/tools/ant/types/Resource;
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/apache/tools/ant/types/resources/FileResource

+###org/apache/tools/ant/types/resources/FileResourceIterator
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Project;)V
+#<init>(Ljava/io/File;)V
+#<init>(Lorg/apache/tools/ant/Project;Ljava/io/File;)V
+#<init>(Ljava/io/File;[Ljava/lang/String;)V
+#<init>(Lorg/apache/tools/ant/Project;Ljava/io/File;[Ljava/lang/String;)V
+#addFiles([Ljava/lang/String;)V
+#hasNext()Z
+#next()Lorg/apache/tools/ant/types/Resource;
+#remove()V
+#nextResource()Lorg/apache/tools/ant/types/resources/FileResource;
+#next()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/resources/FileResourceIterator

+###org/apache/tools/ant/types/resources/Files
@3.5
+#<init>()V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#createPatternSet()Lorg/apache/tools/ant/types/PatternSet;
+#createInclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createIncludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExclude()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#createExcludesFile()Lorg/apache/tools/ant/types/PatternSet$NameEntry;
+#setIncludes(Ljava/lang/String;)V
+#appendIncludes([Ljava/lang/String;)V
+#setExcludes(Ljava/lang/String;)V
+#appendExcludes([Ljava/lang/String;)V
+#setIncludesfile(Ljava/io/File;)V
+#setExcludesfile(Ljava/io/File;)V
+#setDefaultexcludes(Z)V
+#getDefaultexcludes()Z
+#setCaseSensitive(Z)V
+#isCaseSensitive()Z
+#setFollowSymlinks(Z)V
+#isFollowSymlinks()Z
+#iterator()Ljava/util/Iterator;
+#size()I
+#hasPatterns()Z
+#appendSelector(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#mergeIncludes(Lorg/apache/tools/ant/Project;)[Ljava/lang/String;
+#mergeExcludes(Lorg/apache/tools/ant/Project;)[Ljava/lang/String;
+#mergePatterns(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/types/PatternSet;
+#isFilesystemOnly()Z
@3.5.1
-###org/apache/tools/ant/types/resources/Files

+###org/apache/tools/ant/types/resources/First
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/First

+###org/apache/tools/ant/types/resources/GZipResource
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/types/ResourceCollection;)V
@3.5.1
-###org/apache/tools/ant/types/resources/GZipResource

+###org/apache/tools/ant/types/resources/ImmutableResourceException
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/types/resources/ImmutableResourceException

+###org/apache/tools/ant/types/resources/Intersect
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/Intersect

+###org/apache/tools/ant/types/resources/JavaConstantResource
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/JavaConstantResource

+###org/apache/tools/ant/types/resources/JavaResource
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/tools/ant/types/Path;)V
+#getURL()Ljava/net/URL;
+#compareTo(Lorg/apache/tools/ant/types/Resource;)I
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/apache/tools/ant/types/resources/JavaResource

+###org/apache/tools/ant/types/resources/Last
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/Last

+###org/apache/tools/ant/types/resources/LazyResourceCollectionWrapper
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/LazyResourceCollectionWrapper

+###org/apache/tools/ant/types/resources/LogOutputResource
@3.5
+#<init>(Lorg/apache/tools/ant/ProjectComponent;)V
+#<init>(Lorg/apache/tools/ant/ProjectComponent;I)V
+#getAppendOutputStream()Ljava/io/OutputStream;
+#getOutputStream()Ljava/io/OutputStream;
@3.5.1
-###org/apache/tools/ant/types/resources/LogOutputResource

+###org/apache/tools/ant/types/resources/MappedResource
@3.5
+#<init>(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/util/FileNameMapper;)V
+#getName()Ljava/lang/String;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#as(Ljava/lang/Class;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/MappedResource

+###org/apache/tools/ant/types/resources/MappedResourceCollection
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#setEnableMultipleMappings(Z)V
+#setCache(Z)V
+#isFilesystemOnly()Z
+#size()I
+#iterator()Ljava/util/Iterator;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/MappedResourceCollection

+###org/apache/tools/ant/types/resources/MultiRootFileSet$SetType
@3.5
+#values()[Lorg/apache/tools/ant/types/resources/MultiRootFileSet$SetType;
+#valueOf(Ljava/lang/String;)Lorg/apache/tools/ant/types/resources/MultiRootFileSet$SetType;
@3.5.1
-###org/apache/tools/ant/types/resources/MultiRootFileSet$SetType

+###org/apache/tools/ant/types/resources/MultiRootFileSet
@3.5
+#<init>()V
+#setDir(Ljava/io/File;)V
+#setType(Lorg/apache/tools/ant/types/resources/MultiRootFileSet$SetType;)V
+#setCache(Z)V
+#setBaseDirs(Ljava/lang/String;)V
+#addConfiguredBaseDir(Lorg/apache/tools/ant/types/resources/FileResource;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#clone()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/MultiRootFileSet

+###org/apache/tools/ant/types/resources/PropertyResource
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Project;Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#getObjectValue()Ljava/lang/Object;
+#isExists()Z
+#getSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
@3.5.1
-###org/apache/tools/ant/types/resources/PropertyResource

+###org/apache/tools/ant/types/resources/ResourceDecorator
@3.5
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#getName()Ljava/lang/String;
+#isExists()Z
+#getLastModified()J
+#isDirectory()Z
+#getSize()J
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#isFilesystemOnly()Z
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#as(Ljava/lang/Class;)Ljava/lang/Object;
+#compareTo(Lorg/apache/tools/ant/types/Resource;)I
+#hashCode()I
+#setName(Ljava/lang/String;)V
+#setExists(Z)V
+#setLastModified(J)V
+#setDirectory(Z)V
+#setSize(J)V
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/apache/tools/ant/types/resources/ResourceDecorator

+###org/apache/tools/ant/types/resources/ResourceList
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#addFilterChain(Lorg/apache/tools/ant/types/FilterChain;)V
+#setEncoding(Ljava/lang/String;)V
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
@3.5.1
-###org/apache/tools/ant/types/resources/ResourceList

+###org/apache/tools/ant/types/resources/Resources
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Project;)V
+#setCache(Z)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/Resources

+###org/apache/tools/ant/types/resources/Restrict
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setCache(Z)V
+#isCache()Z
+#add(Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isFilesystemOnly()Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/Restrict

+###org/apache/tools/ant/types/resources/SizeLimitCollection
@3.5
+#<init>()V
+#setCount(I)V
+#getCount()I
+#size()I
@3.5.1
-###org/apache/tools/ant/types/resources/SizeLimitCollection

+###org/apache/tools/ant/types/resources/Sort
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/resources/comparators/ResourceComparator;)V
@3.5.1
-###org/apache/tools/ant/types/resources/Sort

+###org/apache/tools/ant/types/resources/StringResource
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/tools/ant/Project;Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#setValue(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#isExists()Z
+#addText(Ljava/lang/String;)V
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#getSize()J
+#hashCode()I
+#toString()Ljava/lang/String;
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
@3.5.1
-###org/apache/tools/ant/types/resources/StringResource

+###org/apache/tools/ant/types/resources/TarResource
@3.5
+#<init>()V
+#<init>(Ljava/io/File;Lorg/apache/tools/tar/TarEntry;)V
+#<init>(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/tar/TarEntry;)V
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#getUserName()Ljava/lang/String;
+#getGroup()Ljava/lang/String;
+#getUid()I
+#getGid()I
@3.5.1
-###org/apache/tools/ant/types/resources/TarResource

+###org/apache/tools/ant/types/resources/Tokens
@3.5
+#<init>()V
+#setEncoding(Ljava/lang/String;)V
+#add(Lorg/apache/tools/ant/util/Tokenizer;)V
@3.5.1
-###org/apache/tools/ant/types/resources/Tokens

+###org/apache/tools/ant/types/resources/Touchable
@3.5
+#touch(J)V
@3.5.1
-###org/apache/tools/ant/types/resources/Touchable

+###org/apache/tools/ant/types/resources/URLProvider
@3.5
+#getURL()Ljava/net/URL;
@3.5.1
-###org/apache/tools/ant/types/resources/URLProvider

+###org/apache/tools/ant/types/resources/URLResource
@3.5
+#<init>()V
+#<init>(Ljava/net/URL;)V
+#<init>(Lorg/apache/tools/ant/types/resources/URLProvider;)V
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/lang/String;)V
+#setURL(Ljava/net/URL;)V
+#setFile(Ljava/io/File;)V
+#setBaseURL(Ljava/net/URL;)V
+#setRelativePath(Ljava/lang/String;)V
+#getURL()Ljava/net/URL;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#isExists()Z
+#getLastModified()J
+#isDirectory()Z
+#getSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
@3.5.1
-###org/apache/tools/ant/types/resources/URLResource

+###org/apache/tools/ant/types/resources/Union
@3.5
+#getInstance(Lorg/apache/tools/ant/types/ResourceCollection;)Lorg/apache/tools/ant/types/resources/Union;
+#<init>()V
+#<init>(Lorg/apache/tools/ant/Project;)V
+#<init>(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#<init>(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/ResourceCollection;)V
+#list()[Ljava/lang/String;
+#listResources()[Lorg/apache/tools/ant/types/Resource;
@3.5.1
-###org/apache/tools/ant/types/resources/Union

+###org/apache/tools/ant/types/resources/ZipResource
@3.5
+#<init>()V
+#<init>(Ljava/io/File;Ljava/lang/String;Lorg/apache/tools/zip/ZipEntry;)V
+#setZipfile(Ljava/io/File;)V
+#getZipfile()Ljava/io/File;
+#addConfigured(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setRefid(Lorg/apache/tools/ant/types/Reference;)V
+#getInputStream()Ljava/io/InputStream;
+#getOutputStream()Ljava/io/OutputStream;
+#getExtraFields()[Lorg/apache/tools/zip/ZipExtraField;
+#getMethod()I
@3.5.1
-###org/apache/tools/ant/types/resources/ZipResource

+###org/apache/tools/ant/types/resources/comparators/Content
@3.5
+#<init>()V
+#setBinary(Z)V
+#isBinary()Z
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/Content

+###org/apache/tools/ant/types/resources/comparators/Date
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/Date

+###org/apache/tools/ant/types/resources/comparators/DelegatedResourceComparator
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/resources/comparators/ResourceComparator;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/DelegatedResourceComparator

+###org/apache/tools/ant/types/resources/comparators/Exists
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/Exists

+###org/apache/tools/ant/types/resources/comparators/FileSystem
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/FileSystem

+###org/apache/tools/ant/types/resources/comparators/Name
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/Name

+###org/apache/tools/ant/types/resources/comparators/ResourceComparator
@3.5
+#<init>()V
+#compare(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/ResourceComparator

+###org/apache/tools/ant/types/resources/comparators/Reverse
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/types/resources/comparators/ResourceComparator;)V
+#add(Lorg/apache/tools/ant/types/resources/comparators/ResourceComparator;)V
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/Reverse

+###org/apache/tools/ant/types/resources/comparators/Size
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/Size

+###org/apache/tools/ant/types/resources/comparators/Type
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/resources/comparators/Type

+###org/apache/tools/ant/types/resources/selectors/And
@3.5
+#<init>()V
+#<init>([Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/And

+###org/apache/tools/ant/types/resources/selectors/Compare
@3.5
+#<init>()V
+#add(Lorg/apache/tools/ant/types/resources/comparators/ResourceComparator;)V
+#setAgainst(Lorg/apache/tools/ant/types/Quantifier;)V
+#setWhen(Lorg/apache/tools/ant/types/Comparison;)V
+#createControl()Lorg/apache/tools/ant/types/ResourceCollection;
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Compare

+###org/apache/tools/ant/types/resources/selectors/Date
@3.5
+#<init>()V
+#setMillis(J)V
+#getMillis()J
+#setDateTime(Ljava/lang/String;)V
+#getDatetime()Ljava/lang/String;
+#setGranularity(J)V
+#getGranularity()J
+#setPattern(Ljava/lang/String;)V
+#getPattern()Ljava/lang/String;
+#setWhen(Lorg/apache/tools/ant/types/TimeComparison;)V
+#getWhen()Lorg/apache/tools/ant/types/TimeComparison;
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Date

+###org/apache/tools/ant/types/resources/selectors/Exists
@3.5
+#<init>()V
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Exists

+###org/apache/tools/ant/types/resources/selectors/InstanceOf
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#setClass(Ljava/lang/Class;)V
+#setType(Ljava/lang/String;)V
+#setURI(Ljava/lang/String;)V
+#getCheckClass()Ljava/lang/Class;
+#getType()Ljava/lang/String;
+#getURI()Ljava/lang/String;
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/InstanceOf

+###org/apache/tools/ant/types/resources/selectors/Majority
@3.5
+#<init>()V
+#<init>([Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#setAllowtie(Z)V
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Majority

+###org/apache/tools/ant/types/resources/selectors/Name
@3.5
+#<init>()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setRegex(Ljava/lang/String;)V
+#getRegex()Ljava/lang/String;
+#setCaseSensitive(Z)V
+#isCaseSensitive()Z
+#setHandleDirSep(Z)V
+#doesHandledirSep()Z
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Name

+###org/apache/tools/ant/types/resources/selectors/None
@3.5
+#<init>()V
+#<init>([Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/None

+###org/apache/tools/ant/types/resources/selectors/Not
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#add(Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Not

+###org/apache/tools/ant/types/resources/selectors/Or
@3.5
+#<init>()V
+#<init>([Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Or

+###org/apache/tools/ant/types/resources/selectors/ResourceSelector
@3.5
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/ResourceSelector

+###org/apache/tools/ant/types/resources/selectors/ResourceSelectorContainer
@3.5
+#<init>()V
+#<init>([Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#add(Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;)V
+#hasSelectors()Z
+#selectorCount()I
+#getSelectors()Ljava/util/Iterator;
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/ResourceSelectorContainer

+###org/apache/tools/ant/types/resources/selectors/Size
@3.5
+#<init>()V
+#setSize(J)V
+#getSize()J
+#setWhen(Lorg/apache/tools/ant/types/Comparison;)V
+#getWhen()Lorg/apache/tools/ant/types/Comparison;
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Size

+###org/apache/tools/ant/types/resources/selectors/Type$FileDir
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Type$FileDir

+###org/apache/tools/ant/types/resources/selectors/Type
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/types/resources/selectors/Type$FileDir;)V
+#setType(Lorg/apache/tools/ant/types/resources/selectors/Type$FileDir;)V
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/resources/selectors/Type

+###org/apache/tools/ant/types/selectors/AbstractSelectorContainer
@3.5
+#<init>()V
+#hasSelectors()Z
+#selectorCount()I
+#getSelectors(Lorg/apache/tools/ant/Project;)[Lorg/apache/tools/ant/types/selectors/FileSelector;
+#selectorElements()Ljava/util/Enumeration;
+#toString()Ljava/lang/String;
+#appendSelector(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#validate()V
+#addSelector(Lorg/apache/tools/ant/types/selectors/SelectSelector;)V
+#addAnd(Lorg/apache/tools/ant/types/selectors/AndSelector;)V
+#addOr(Lorg/apache/tools/ant/types/selectors/OrSelector;)V
+#addNot(Lorg/apache/tools/ant/types/selectors/NotSelector;)V
+#addNone(Lorg/apache/tools/ant/types/selectors/NoneSelector;)V
+#addMajority(Lorg/apache/tools/ant/types/selectors/MajoritySelector;)V
+#addDate(Lorg/apache/tools/ant/types/selectors/DateSelector;)V
+#addSize(Lorg/apache/tools/ant/types/selectors/SizeSelector;)V
+#addFilename(Lorg/apache/tools/ant/types/selectors/FilenameSelector;)V
+#addCustom(Lorg/apache/tools/ant/types/selectors/ExtendSelector;)V
+#addContains(Lorg/apache/tools/ant/types/selectors/ContainsSelector;)V
+#addPresent(Lorg/apache/tools/ant/types/selectors/PresentSelector;)V
+#addDepth(Lorg/apache/tools/ant/types/selectors/DepthSelector;)V
+#addDepend(Lorg/apache/tools/ant/types/selectors/DependSelector;)V
+#addDifferent(Lorg/apache/tools/ant/types/selectors/DifferentSelector;)V
+#addType(Lorg/apache/tools/ant/types/selectors/TypeSelector;)V
+#addContainsRegexp(Lorg/apache/tools/ant/types/selectors/ContainsRegexpSelector;)V
+#addModified(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector;)V
+#addReadable(Lorg/apache/tools/ant/types/selectors/ReadableSelector;)V
+#addWritable(Lorg/apache/tools/ant/types/selectors/WritableSelector;)V
+#add(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/types/selectors/AbstractSelectorContainer

+###org/apache/tools/ant/types/selectors/AndSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/AndSelector

+###org/apache/tools/ant/types/selectors/BaseExtendSelector
@3.5
+#<init>()V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/BaseExtendSelector

+###org/apache/tools/ant/types/selectors/BaseSelector
@3.5
+#<init>()V
+#setError(Ljava/lang/String;)V
+#getError()Ljava/lang/String;
+#verifySettings()V
+#validate()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/BaseSelector

+###org/apache/tools/ant/types/selectors/BaseSelectorContainer
@3.5
+#<init>()V
+#hasSelectors()Z
+#selectorCount()I
+#getSelectors(Lorg/apache/tools/ant/Project;)[Lorg/apache/tools/ant/types/selectors/FileSelector;
+#selectorElements()Ljava/util/Enumeration;
+#toString()Ljava/lang/String;
+#appendSelector(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#validate()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
+#addSelector(Lorg/apache/tools/ant/types/selectors/SelectSelector;)V
+#addAnd(Lorg/apache/tools/ant/types/selectors/AndSelector;)V
+#addOr(Lorg/apache/tools/ant/types/selectors/OrSelector;)V
+#addNot(Lorg/apache/tools/ant/types/selectors/NotSelector;)V
+#addNone(Lorg/apache/tools/ant/types/selectors/NoneSelector;)V
+#addMajority(Lorg/apache/tools/ant/types/selectors/MajoritySelector;)V
+#addDate(Lorg/apache/tools/ant/types/selectors/DateSelector;)V
+#addSize(Lorg/apache/tools/ant/types/selectors/SizeSelector;)V
+#addFilename(Lorg/apache/tools/ant/types/selectors/FilenameSelector;)V
+#addCustom(Lorg/apache/tools/ant/types/selectors/ExtendSelector;)V
+#addContains(Lorg/apache/tools/ant/types/selectors/ContainsSelector;)V
+#addPresent(Lorg/apache/tools/ant/types/selectors/PresentSelector;)V
+#addDepth(Lorg/apache/tools/ant/types/selectors/DepthSelector;)V
+#addDepend(Lorg/apache/tools/ant/types/selectors/DependSelector;)V
+#addDifferent(Lorg/apache/tools/ant/types/selectors/DifferentSelector;)V
+#addType(Lorg/apache/tools/ant/types/selectors/TypeSelector;)V
+#addContainsRegexp(Lorg/apache/tools/ant/types/selectors/ContainsRegexpSelector;)V
+#addModified(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector;)V
+#addReadable(Lorg/apache/tools/ant/types/selectors/ReadableSelector;)V
+#addWritable(Lorg/apache/tools/ant/types/selectors/WritableSelector;)V
+#add(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
@3.5.1
-###org/apache/tools/ant/types/selectors/BaseSelectorContainer

+###org/apache/tools/ant/types/selectors/ContainsRegexpSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setExpression(Ljava/lang/String;)V
+#setCaseSensitive(Z)V
+#setMultiLine(Z)V
+#setSingleLine(Z)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/ContainsRegexpSelector

+###org/apache/tools/ant/types/selectors/ContainsSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setText(Ljava/lang/String;)V
+#setEncoding(Ljava/lang/String;)V
+#setCasesensitive(Z)V
+#setIgnorewhitespace(Z)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/ContainsSelector

+###org/apache/tools/ant/types/selectors/DateSelector$TimeComparisons
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/selectors/DateSelector$TimeComparisons

+###org/apache/tools/ant/types/selectors/DateSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setMillis(J)V
+#getMillis()J
+#setDatetime(Ljava/lang/String;)V
+#setCheckdirs(Z)V
+#setGranularity(I)V
+#setWhen(Lorg/apache/tools/ant/types/selectors/DateSelector$TimeComparisons;)V
+#setWhen(Lorg/apache/tools/ant/types/TimeComparison;)V
+#setPattern(Ljava/lang/String;)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/DateSelector

+###org/apache/tools/ant/types/selectors/DependSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#selectionTest(Ljava/io/File;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/DependSelector

+###org/apache/tools/ant/types/selectors/DepthSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setMin(I)V
+#setMax(I)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/DepthSelector

+###org/apache/tools/ant/types/selectors/DifferentSelector
@3.5
+#<init>()V
+#setIgnoreFileTimes(Z)V
+#setIgnoreContents(Z)V
@3.5.1
-###org/apache/tools/ant/types/selectors/DifferentSelector

+###org/apache/tools/ant/types/selectors/ExtendFileSelector
@3.5
@3.5.1
-###org/apache/tools/ant/types/selectors/ExtendFileSelector

+###org/apache/tools/ant/types/selectors/ExtendSelector
@3.5
+#<init>()V
+#setClassname(Ljava/lang/String;)V
+#selectorCreate()V
+#addParam(Lorg/apache/tools/ant/types/Parameter;)V
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspathref(Lorg/apache/tools/ant/types/Reference;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/ExtendSelector

+###org/apache/tools/ant/types/selectors/FileSelector
@3.5
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/FileSelector

+###org/apache/tools/ant/types/selectors/FilenameSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setRegex(Ljava/lang/String;)V
+#setCasesensitive(Z)V
+#setNegate(Z)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/FilenameSelector

+###org/apache/tools/ant/types/selectors/MajoritySelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setAllowtie(Z)V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/MajoritySelector

+###org/apache/tools/ant/types/selectors/MappingSelector
@3.5
+#<init>()V
+#setTargetdir(Ljava/io/File;)V
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#addConfigured(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
+#setGranularity(I)V
@3.5.1
-###org/apache/tools/ant/types/selectors/MappingSelector

+###org/apache/tools/ant/types/selectors/NoneSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/NoneSelector

+###org/apache/tools/ant/types/selectors/NotSelector
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#toString()Ljava/lang/String;
+#verifySettings()V
@3.5.1
-###org/apache/tools/ant/types/selectors/NotSelector

+###org/apache/tools/ant/types/selectors/OrSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/OrSelector

+###org/apache/tools/ant/types/selectors/PresentSelector$FilePresence
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/PresentSelector$FilePresence

+###org/apache/tools/ant/types/selectors/PresentSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setTargetdir(Ljava/io/File;)V
+#createMapper()Lorg/apache/tools/ant/types/Mapper;
+#addConfigured(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#setPresent(Lorg/apache/tools/ant/types/selectors/PresentSelector$FilePresence;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/PresentSelector

+###org/apache/tools/ant/types/selectors/ReadableSelector
@3.5
+#<init>()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/ReadableSelector

+###org/apache/tools/ant/types/selectors/SelectSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#hasSelectors()Z
+#selectorCount()I
+#getSelectors(Lorg/apache/tools/ant/Project;)[Lorg/apache/tools/ant/types/selectors/FileSelector;
+#selectorElements()Ljava/util/Enumeration;
+#appendSelector(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#verifySettings()V
+#passesConditions()Z
+#setIf(Ljava/lang/Object;)V
+#setIf(Ljava/lang/String;)V
+#setUnless(Ljava/lang/Object;)V
+#setUnless(Ljava/lang/String;)V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/SelectSelector

+###org/apache/tools/ant/types/selectors/SelectorContainer
@3.5
+#hasSelectors()Z
+#selectorCount()I
+#getSelectors(Lorg/apache/tools/ant/Project;)[Lorg/apache/tools/ant/types/selectors/FileSelector;
+#selectorElements()Ljava/util/Enumeration;
+#appendSelector(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#addSelector(Lorg/apache/tools/ant/types/selectors/SelectSelector;)V
+#addAnd(Lorg/apache/tools/ant/types/selectors/AndSelector;)V
+#addOr(Lorg/apache/tools/ant/types/selectors/OrSelector;)V
+#addNot(Lorg/apache/tools/ant/types/selectors/NotSelector;)V
+#addNone(Lorg/apache/tools/ant/types/selectors/NoneSelector;)V
+#addMajority(Lorg/apache/tools/ant/types/selectors/MajoritySelector;)V
+#addDate(Lorg/apache/tools/ant/types/selectors/DateSelector;)V
+#addSize(Lorg/apache/tools/ant/types/selectors/SizeSelector;)V
+#addFilename(Lorg/apache/tools/ant/types/selectors/FilenameSelector;)V
+#addCustom(Lorg/apache/tools/ant/types/selectors/ExtendSelector;)V
+#addContains(Lorg/apache/tools/ant/types/selectors/ContainsSelector;)V
+#addPresent(Lorg/apache/tools/ant/types/selectors/PresentSelector;)V
+#addDepth(Lorg/apache/tools/ant/types/selectors/DepthSelector;)V
+#addDepend(Lorg/apache/tools/ant/types/selectors/DependSelector;)V
+#addContainsRegexp(Lorg/apache/tools/ant/types/selectors/ContainsRegexpSelector;)V
+#addType(Lorg/apache/tools/ant/types/selectors/TypeSelector;)V
+#addDifferent(Lorg/apache/tools/ant/types/selectors/DifferentSelector;)V
+#addModified(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector;)V
+#add(Lorg/apache/tools/ant/types/selectors/FileSelector;)V
@3.5.1
-###org/apache/tools/ant/types/selectors/SelectorContainer

+###org/apache/tools/ant/types/selectors/SelectorScanner
@3.5
+#setSelectors([Lorg/apache/tools/ant/types/selectors/FileSelector;)V
+#getDeselectedDirectories()[Ljava/lang/String;
+#getDeselectedFiles()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/SelectorScanner

+###org/apache/tools/ant/types/selectors/SelectorUtils
@3.5
+#getInstance()Lorg/apache/tools/ant/types/selectors/SelectorUtils;
+#matchPatternStart(Ljava/lang/String;Ljava/lang/String;)Z
+#matchPatternStart(Ljava/lang/String;Ljava/lang/String;Z)Z
+#matchPath(Ljava/lang/String;Ljava/lang/String;)Z
+#matchPath(Ljava/lang/String;Ljava/lang/String;Z)Z
+#match(Ljava/lang/String;Ljava/lang/String;)Z
+#match(Ljava/lang/String;Ljava/lang/String;Z)Z
+#tokenizePath(Ljava/lang/String;)Ljava/util/Vector;
+#tokenizePath(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Vector;
+#isOutOfDate(Ljava/io/File;Ljava/io/File;I)Z
+#isOutOfDate(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;I)Z
+#isOutOfDate(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;J)Z
+#removeWhitespace(Ljava/lang/String;)Ljava/lang/String;
+#hasWildcards(Ljava/lang/String;)Z
+#rtrimWildcardTokens(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/SelectorUtils

+###org/apache/tools/ant/types/selectors/SignedSelector
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/SignedSelector

+###org/apache/tools/ant/types/selectors/SizeSelector$ByteUnits
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/SizeSelector$ByteUnits

+###org/apache/tools/ant/types/selectors/SizeSelector$SizeComparisons
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/types/selectors/SizeSelector$SizeComparisons

+###org/apache/tools/ant/types/selectors/SizeSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setValue(J)V
+#setUnits(Lorg/apache/tools/ant/types/selectors/SizeSelector$ByteUnits;)V
+#setWhen(Lorg/apache/tools/ant/types/selectors/SizeSelector$SizeComparisons;)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/SizeSelector

+###org/apache/tools/ant/types/selectors/TokenizedPath
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/tools/ant/types/selectors/TokenizedPath;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#depth()I
+#findFile(Ljava/io/File;Z)Ljava/io/File;
+#isSymlink(Ljava/io/File;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toPattern()Lorg/apache/tools/ant/types/selectors/TokenizedPattern;
@3.5.1
-###org/apache/tools/ant/types/selectors/TokenizedPath

+###org/apache/tools/ant/types/selectors/TokenizedPattern
@3.5
+#<init>(Ljava/lang/String;)V
+#matchPath(Lorg/apache/tools/ant/types/selectors/TokenizedPath;Z)Z
+#matchStartOf(Lorg/apache/tools/ant/types/selectors/TokenizedPath;Z)Z
+#toString()Ljava/lang/String;
+#getPattern()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#depth()I
+#containsPattern(Ljava/lang/String;)Z
+#rtrimWildcardTokens()Lorg/apache/tools/ant/types/selectors/TokenizedPath;
+#endsWith(Ljava/lang/String;)Z
+#withoutLastToken()Lorg/apache/tools/ant/types/selectors/TokenizedPattern;
@3.5.1
-###org/apache/tools/ant/types/selectors/TokenizedPattern

+###org/apache/tools/ant/types/selectors/TypeSelector$FileType
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/TypeSelector$FileType

+###org/apache/tools/ant/types/selectors/TypeSelector
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#setType(Lorg/apache/tools/ant/types/selectors/TypeSelector$FileType;)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#verifySettings()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/TypeSelector

+###org/apache/tools/ant/types/selectors/WritableSelector
@3.5
+#<init>()V
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
@3.5.1
-###org/apache/tools/ant/types/selectors/WritableSelector

+###org/apache/tools/ant/types/selectors/modifiedselector/Algorithm
@3.5
+#isValid()Z
+#getValue(Ljava/io/File;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/Algorithm

+###org/apache/tools/ant/types/selectors/modifiedselector/Cache
@3.5
+#isValid()Z
+#delete()V
+#load()V
+#save()V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#iterator()Ljava/util/Iterator;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/Cache

+###org/apache/tools/ant/types/selectors/modifiedselector/ChecksumAlgorithm
@3.5
+#<init>()V
+#setAlgorithm(Ljava/lang/String;)V
+#initChecksum()V
+#isValid()Z
+#getValue(Ljava/io/File;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/ChecksumAlgorithm

+###org/apache/tools/ant/types/selectors/modifiedselector/DigestAlgorithm
@3.5
+#<init>()V
+#setAlgorithm(Ljava/lang/String;)V
+#setProvider(Ljava/lang/String;)V
+#initMessageDigest()V
+#isValid()Z
+#getValue(Ljava/io/File;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/DigestAlgorithm

+###org/apache/tools/ant/types/selectors/modifiedselector/EqualComparator
@3.5
+#<init>()V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/EqualComparator

+###org/apache/tools/ant/types/selectors/modifiedselector/HashvalueAlgorithm
@3.5
+#<init>()V
+#isValid()Z
+#getValue(Ljava/io/File;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/HashvalueAlgorithm

+###org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$AlgorithmName
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$AlgorithmName

+###org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$CacheName
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$CacheName

+###org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$ComparatorName
@3.5
+#<init>()V
+#getValues()[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$ComparatorName

+###org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector
@3.5
+#<init>()V
+#verifySettings()V
+#configure()V
+#isSelected(Lorg/apache/tools/ant/types/Resource;)Z
+#isSelected(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Z
+#setAlgorithmClass(Ljava/lang/String;)V
+#setComparatorClass(Ljava/lang/String;)V
+#setCacheClass(Ljava/lang/String;)V
+#setUpdate(Z)V
+#setSeldirs(Z)V
+#setSelres(Z)V
+#getModified()I
+#setModified(I)V
+#getDelayUpdate()Z
+#setDelayUpdate(Z)V
+#addClasspath(Lorg/apache/tools/ant/types/Path;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#addParam(Ljava/lang/String;Ljava/lang/Object;)V
+#addParam(Lorg/apache/tools/ant/types/Parameter;)V
+#setParameters([Lorg/apache/tools/ant/types/Parameter;)V
+#useParameter(Lorg/apache/tools/ant/types/Parameter;)V
+#toString()Ljava/lang/String;
+#buildFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#targetFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#taskFinished(Lorg/apache/tools/ant/BuildEvent;)V
+#buildStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#targetStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#taskStarted(Lorg/apache/tools/ant/BuildEvent;)V
+#messageLogged(Lorg/apache/tools/ant/BuildEvent;)V
+#getCache()Lorg/apache/tools/ant/types/selectors/modifiedselector/Cache;
+#setCache(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$CacheName;)V
+#getAlgorithm()Lorg/apache/tools/ant/types/selectors/modifiedselector/Algorithm;
+#setAlgorithm(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$AlgorithmName;)V
+#getComparator()Ljava/util/Comparator;
+#setComparator(Lorg/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector$ComparatorName;)V
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector

+###org/apache/tools/ant/types/selectors/modifiedselector/PropertiesfileCache
@3.5
+#<init>()V
+#<init>(Ljava/io/File;)V
+#setCachefile(Ljava/io/File;)V
+#getCachefile()Ljava/io/File;
+#isValid()Z
+#load()V
+#save()V
+#delete()V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/types/selectors/modifiedselector/PropertiesfileCache

+###org/apache/tools/ant/types/spi/Provider
@3.5
+#<init>()V
+#getClassName()Ljava/lang/String;
+#setClassName(Ljava/lang/String;)V
+#check()V
@3.5.1
-###org/apache/tools/ant/types/spi/Provider

+###org/apache/tools/ant/types/spi/Service
@3.5
+#<init>()V
+#setProvider(Ljava/lang/String;)V
+#addConfiguredProvider(Lorg/apache/tools/ant/types/spi/Provider;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getAsStream()Ljava/io/InputStream;
+#check()V
@3.5.1
-###org/apache/tools/ant/types/spi/Service

+###org/apache/tools/ant/util/Base64Converter
@3.5
+#<init>()V
+#encode(Ljava/lang/String;)Ljava/lang/String;
+#encode([B)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/Base64Converter

+###org/apache/tools/ant/util/ChainedMapper
@3.5
+#<init>()V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/ChainedMapper

+###org/apache/tools/ant/util/ClasspathUtils$Delegate
@3.5
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClassname(Ljava/lang/String;)V
+#setClasspathref(Lorg/apache/tools/ant/types/Reference;)V
+#setReverseLoader(Z)V
+#setLoaderRef(Lorg/apache/tools/ant/types/Reference;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#getClassLoadId()Ljava/lang/String;
+#newInstance()Ljava/lang/Object;
+#getClasspath()Lorg/apache/tools/ant/types/Path;
+#isReverseLoader()Z
@3.5.1
-###org/apache/tools/ant/util/ClasspathUtils$Delegate

+###org/apache/tools/ant/util/ClasspathUtils
@3.5
+#<init>()V
+#getClassLoaderForPath(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Reference;)Ljava/lang/ClassLoader;
+#getClassLoaderForPath(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Reference;Z)Ljava/lang/ClassLoader;
+#getClassLoaderForPath(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;Ljava/lang/String;)Ljava/lang/ClassLoader;
+#getClassLoaderForPath(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;Ljava/lang/String;Z)Ljava/lang/ClassLoader;
+#getClassLoaderForPath(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;Ljava/lang/String;ZZ)Ljava/lang/ClassLoader;
+#getUniqueClassLoaderForPath(Lorg/apache/tools/ant/Project;Lorg/apache/tools/ant/types/Path;Z)Ljava/lang/ClassLoader;
+#newInstance(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#newInstance(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;
+#getDelegate(Lorg/apache/tools/ant/ProjectComponent;)Lorg/apache/tools/ant/util/ClasspathUtils$Delegate;
@3.5.1
-###org/apache/tools/ant/util/ClasspathUtils

+###org/apache/tools/ant/util/CollectionUtils$EmptyEnumeration
@3.5
+#<init>()V
+#hasMoreElements()Z
+#nextElement()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/util/CollectionUtils$EmptyEnumeration

+###org/apache/tools/ant/util/CollectionUtils
@3.5
+#<init>()V
+#equals(Ljava/util/Vector;Ljava/util/Vector;)Z
+#equals(Ljava/util/Dictionary;Ljava/util/Dictionary;)Z
+#flattenToString(Ljava/util/Collection;)Ljava/lang/String;
+#putAll(Ljava/util/Dictionary;Ljava/util/Dictionary;)V
+#append(Ljava/util/Enumeration;Ljava/util/Enumeration;)Ljava/util/Enumeration;
+#asEnumeration(Ljava/util/Iterator;)Ljava/util/Enumeration;
+#asIterator(Ljava/util/Enumeration;)Ljava/util/Iterator;
+#asCollection(Ljava/util/Iterator;)Ljava/util/Collection;
+#frequency(Ljava/util/Collection;Ljava/lang/Object;)I
@3.5.1
-###org/apache/tools/ant/util/CollectionUtils

+###org/apache/tools/ant/util/CompositeMapper
@3.5
+#<init>()V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/CompositeMapper

+###org/apache/tools/ant/util/ConcatFileInputStream
@3.5
+#<init>([Ljava/io/File;)V
+#close()V
+#read()I
+#setManagingTask(Lorg/apache/tools/ant/Task;)V
+#setManagingComponent(Lorg/apache/tools/ant/ProjectComponent;)V
+#log(Ljava/lang/String;I)V
@3.5.1
-###org/apache/tools/ant/util/ConcatFileInputStream

+###org/apache/tools/ant/util/ConcatResourceInputStream
@3.5
+#<init>(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#setIgnoreErrors(Z)V
+#isIgnoreErrors()Z
+#close()V
+#read()I
+#setManagingComponent(Lorg/apache/tools/ant/ProjectComponent;)V
+#log(Ljava/lang/String;I)V
@3.5.1
-###org/apache/tools/ant/util/ConcatResourceInputStream

+###org/apache/tools/ant/util/ContainerMapper
@3.5
+#<init>()V
+#addConfiguredMapper(Lorg/apache/tools/ant/types/Mapper;)V
+#addConfigured(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#add(Lorg/apache/tools/ant/util/FileNameMapper;)V
+#getMappers()Ljava/util/List;
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/util/ContainerMapper

+###org/apache/tools/ant/util/DOMElementWriter$XmlNamespacePolicy
@3.5
+#<init>(ZZ)V
@3.5.1
-###org/apache/tools/ant/util/DOMElementWriter$XmlNamespacePolicy

+###org/apache/tools/ant/util/DOMElementWriter
@3.5
+#<init>()V
+#<init>(Z)V
+#<init>(ZLorg/apache/tools/ant/util/DOMElementWriter$XmlNamespacePolicy;)V
+#write(Lorg/w3c/dom/Element;Ljava/io/OutputStream;)V
+#writeXMLDeclaration(Ljava/io/Writer;)V
+#write(Lorg/w3c/dom/Element;Ljava/io/Writer;ILjava/lang/String;)V
+#openElement(Lorg/w3c/dom/Element;Ljava/io/Writer;ILjava/lang/String;)V
+#openElement(Lorg/w3c/dom/Element;Ljava/io/Writer;ILjava/lang/String;Z)V
+#closeElement(Lorg/w3c/dom/Element;Ljava/io/Writer;ILjava/lang/String;Z)V
+#encode(Ljava/lang/String;)Ljava/lang/String;
+#encodeAttributeValue(Ljava/lang/String;)Ljava/lang/String;
+#encodedata(Ljava/lang/String;)Ljava/lang/String;
+#encodedata(Ljava/io/Writer;Ljava/lang/String;)V
+#isReference(Ljava/lang/String;)Z
+#isLegalCharacter(C)Z
@3.5.1
-###org/apache/tools/ant/util/DOMElementWriter

+###org/apache/tools/ant/util/DOMUtils
@3.5
+#<init>()V
+#newDocument()Lorg/w3c/dom/Document;
+#createChildElement(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/Element;
+#appendText(Lorg/w3c/dom/Element;Ljava/lang/String;)V
+#appendCDATA(Lorg/w3c/dom/Element;Ljava/lang/String;)V
+#appendTextElement(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;)V
+#appendCDATAElement(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/util/DOMUtils

+###org/apache/tools/ant/util/DateUtils
@3.5
+#format(JLjava/lang/String;)Ljava/lang/String;
+#format(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;
+#formatElapsedTime(J)Ljava/lang/String;
+#getPhaseOfMoon(Ljava/util/Calendar;)I
+#getDateForHeader()Ljava/lang/String;
+#parseDateFromHeader(Ljava/lang/String;)Ljava/util/Date;
+#parseIso8601DateTime(Ljava/lang/String;)Ljava/util/Date;
+#parseIso8601Date(Ljava/lang/String;)Ljava/util/Date;
+#parseIso8601DateTimeOrDate(Ljava/lang/String;)Ljava/util/Date;
@3.5.1
-###org/apache/tools/ant/util/DateUtils

+###org/apache/tools/ant/util/DeweyDecimal
@3.5
+#<init>([I)V
+#<init>(Ljava/lang/String;)V
+#getSize()I
+#get(I)I
+#isEqual(Lorg/apache/tools/ant/util/DeweyDecimal;)Z
+#isLessThan(Lorg/apache/tools/ant/util/DeweyDecimal;)Z
+#isLessThanOrEqual(Lorg/apache/tools/ant/util/DeweyDecimal;)Z
+#isGreaterThan(Lorg/apache/tools/ant/util/DeweyDecimal;)Z
+#isGreaterThanOrEqual(Lorg/apache/tools/ant/util/DeweyDecimal;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/tools/ant/util/DeweyDecimal;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/apache/tools/ant/util/DeweyDecimal

+###org/apache/tools/ant/util/FileNameMapper
@3.5
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/FileNameMapper

+###org/apache/tools/ant/util/FileTokenizer
@3.5
+#<init>()V
+#getToken(Ljava/io/Reader;)Ljava/lang/String;
+#getPostToken()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/FileTokenizer

+###org/apache/tools/ant/util/FileUtils
@3.5
+#newFileUtils()Lorg/apache/tools/ant/util/FileUtils;
+#getFileUtils()Lorg/apache/tools/ant/util/FileUtils;
+#getFileURL(Ljava/io/File;)Ljava/net/URL;
+#copyFile(Ljava/lang/String;Ljava/lang/String;)V
+#copyFile(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/types/FilterSetCollection;)V
+#copyFile(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/types/FilterSetCollection;Z)V
+#copyFile(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/types/FilterSetCollection;ZZ)V
+#copyFile(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/types/FilterSetCollection;ZZLjava/lang/String;)V
+#copyFile(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZLjava/lang/String;Lorg/apache/tools/ant/Project;)V
+#copyFile(Ljava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZLjava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/Project;)V
+#copyFile(Ljava/io/File;Ljava/io/File;)V
+#copyFile(Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/types/FilterSetCollection;)V
+#copyFile(Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/types/FilterSetCollection;Z)V
+#copyFile(Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/types/FilterSetCollection;ZZ)V
+#copyFile(Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/types/FilterSetCollection;ZZLjava/lang/String;)V
+#copyFile(Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZLjava/lang/String;Lorg/apache/tools/ant/Project;)V
+#copyFile(Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZLjava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/Project;)V
+#copyFile(Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZZLjava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/Project;)V
+#copyFile(Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZZLjava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/Project;Z)V
+#setFileLastModified(Ljava/io/File;J)V
+#resolveFile(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
+#isContextRelativePath(Ljava/lang/String;)Z
+#isAbsolutePath(Ljava/lang/String;)Z
+#translatePath(Ljava/lang/String;)Ljava/lang/String;
+#normalize(Ljava/lang/String;)Ljava/io/File;
+#dissect(Ljava/lang/String;)[Ljava/lang/String;
+#toVMSPath(Ljava/io/File;)Ljava/lang/String;
+#createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
+#createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;ZZ)Ljava/io/File;
+#createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Z)Ljava/io/File;
+#contentEquals(Ljava/io/File;Ljava/io/File;)Z
+#contentEquals(Ljava/io/File;Ljava/io/File;Z)Z
+#getParentFile(Ljava/io/File;)Ljava/io/File;
+#readFully(Ljava/io/Reader;)Ljava/lang/String;
+#readFully(Ljava/io/Reader;I)Ljava/lang/String;
+#safeReadFully(Ljava/io/Reader;)Ljava/lang/String;
+#createNewFile(Ljava/io/File;)Z
+#createNewFile(Ljava/io/File;Z)Z
+#isSymbolicLink(Ljava/io/File;Ljava/lang/String;)Z
+#removeLeadingPath(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;
+#isLeadingPath(Ljava/io/File;Ljava/io/File;)Z
+#toURI(Ljava/lang/String;)Ljava/lang/String;
+#fromURI(Ljava/lang/String;)Ljava/lang/String;
+#fileNameEquals(Ljava/io/File;Ljava/io/File;)Z
+#areSame(Ljava/io/File;Ljava/io/File;)Z
+#rename(Ljava/io/File;Ljava/io/File;)V
+#getFileTimestampGranularity()J
+#hasErrorInCase(Ljava/io/File;)Z
+#isUpToDate(Ljava/io/File;Ljava/io/File;J)Z
+#isUpToDate(Ljava/io/File;Ljava/io/File;)Z
+#isUpToDate(JJJ)Z
+#isUpToDate(JJ)Z
+#close(Ljava/io/Writer;)V
+#close(Ljava/io/Reader;)V
+#close(Ljava/io/OutputStream;)V
+#close(Ljava/io/InputStream;)V
+#close(Ljava/nio/channels/Channel;)V
+#close(Ljava/net/URLConnection;)V
+#delete(Ljava/io/File;)V
+#tryHardToDelete(Ljava/io/File;)Z
+#tryHardToDelete(Ljava/io/File;Z)Z
+#getRelativePath(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;
+#getPathStack(Ljava/lang/String;)[Ljava/lang/String;
+#getPath(Ljava/util/List;)Ljava/lang/String;
+#getPath(Ljava/util/List;C)Ljava/lang/String;
+#getDefaultEncoding()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/FileUtils

+###org/apache/tools/ant/util/FirstMatchMapper
@3.5
+#<init>()V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/FirstMatchMapper

+###org/apache/tools/ant/util/FlatFileNameMapper
@3.5
+#<init>()V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/FlatFileNameMapper

+###org/apache/tools/ant/util/GlobPatternMapper
@3.5
+#<init>()V
+#setHandleDirSep(Z)V
+#getHandleDirSep()Z
+#setCaseSensitive(Z)V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/GlobPatternMapper

+###org/apache/tools/ant/util/IdentityMapper
@3.5
+#<init>()V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/IdentityMapper

+###org/apache/tools/ant/util/IdentityStack
@3.5
+#getInstance(Ljava/util/Stack;)Lorg/apache/tools/ant/util/IdentityStack;
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#contains(Ljava/lang/Object;)Z
+#indexOf(Ljava/lang/Object;I)I
+#lastIndexOf(Ljava/lang/Object;I)I
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#containsAll(Ljava/util/Collection;)Z
@3.5.1
-###org/apache/tools/ant/util/IdentityStack

+###org/apache/tools/ant/util/JAXPUtils
@3.5
+#<init>()V
+#getParserFactory()Ljavax/xml/parsers/SAXParserFactory;
+#getNSParserFactory()Ljavax/xml/parsers/SAXParserFactory;
+#newParserFactory()Ljavax/xml/parsers/SAXParserFactory;
+#getParser()Lorg/xml/sax/Parser;
+#getXMLReader()Lorg/xml/sax/XMLReader;
+#getNamespaceXMLReader()Lorg/xml/sax/XMLReader;
+#getSystemId(Ljava/io/File;)Ljava/lang/String;
+#getDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;
@3.5.1
-###org/apache/tools/ant/util/JAXPUtils

+###org/apache/tools/ant/util/JavaEnvUtils
@3.5
+#getJavaVersion()Ljava/lang/String;
+#getJavaVersionNumber()I
+#isJavaVersion(Ljava/lang/String;)Z
+#isAtLeastJavaVersion(Ljava/lang/String;)Z
+#isKaffe()Z
+#isClasspathBased()Z
+#isGij()Z
+#isApacheHarmony()Z
+#getJreExecutable(Ljava/lang/String;)Ljava/lang/String;
+#getJdkExecutable(Ljava/lang/String;)Ljava/lang/String;
+#getJrePackageTestCases()Ljava/util/Vector;
+#getJrePackages()Ljava/util/Vector;
+#createVmsJavaOptionFile([Ljava/lang/String;)Ljava/io/File;
+#getJavaHome()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/JavaEnvUtils

+###org/apache/tools/ant/util/KeepAliveInputStream
@3.5
+#<init>(Ljava/io/InputStream;)V
+#close()V
+#wrapSystemIn()Ljava/io/InputStream;
@3.5.1
-###org/apache/tools/ant/util/KeepAliveInputStream

+###org/apache/tools/ant/util/KeepAliveOutputStream
@3.5
+#<init>(Ljava/io/OutputStream;)V
+#close()V
+#wrapSystemOut()Ljava/io/PrintStream;
+#wrapSystemErr()Ljava/io/PrintStream;
@3.5.1
-###org/apache/tools/ant/util/KeepAliveOutputStream

+###org/apache/tools/ant/util/LayoutPreservingProperties
@3.5
+#<init>()V
+#<init>(Ljava/util/Properties;)V
+#isRemoveComments()Z
+#setRemoveComments(Z)V
+#load(Ljava/io/InputStream;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#clear()V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clone()Ljava/lang/Object;
+#listLines(Ljava/io/PrintStream;)V
+#saveAs(Ljava/io/File;)V
+#store(Ljava/io/OutputStream;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/util/LayoutPreservingProperties

+###org/apache/tools/ant/util/LazyFileOutputStream
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;Z)V
+#<init>(Ljava/io/File;ZZ)V
+#open()V
+#close()V
+#write([B)V
+#write([BII)V
+#write(I)V
@3.5.1
-###org/apache/tools/ant/util/LazyFileOutputStream

+###org/apache/tools/ant/util/LazyHashtable
@3.5
+#<init>()V
+#elements()Ljava/util/Enumeration;
+#isEmpty()Z
+#size()I
+#contains(Ljava/lang/Object;)Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#keys()Ljava/util/Enumeration;
@3.5.1
-###org/apache/tools/ant/util/LazyHashtable

+###org/apache/tools/ant/util/LeadPipeInputStream
@3.5
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/io/PipedOutputStream;)V
+#<init>(Ljava/io/PipedOutputStream;I)V
+#read()I
+#setBufferSize(I)V
+#setManagingTask(Lorg/apache/tools/ant/Task;)V
+#setManagingComponent(Lorg/apache/tools/ant/ProjectComponent;)V
+#log(Ljava/lang/String;I)V
@3.5.1
-###org/apache/tools/ant/util/LeadPipeInputStream

+###org/apache/tools/ant/util/LineOrientedOutputStream
@3.5
+#<init>()V
+#write(I)V
+#flush()V
+#close()V
+#write([BII)V
@3.5.1
-###org/apache/tools/ant/util/LineOrientedOutputStream

+###org/apache/tools/ant/util/LineOrientedOutputStreamRedirector
@3.5
+#<init>(Ljava/io/OutputStream;)V
+#close()V
+#flush()V
@3.5.1
-###org/apache/tools/ant/util/LineOrientedOutputStreamRedirector

+###org/apache/tools/ant/util/LineTokenizer
@3.5
+#<init>()V
+#setIncludeDelims(Z)V
+#getToken(Ljava/io/Reader;)Ljava/lang/String;
+#getPostToken()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/LineTokenizer

+###org/apache/tools/ant/util/LinkedHashtable
@3.5
+#<init>()V
+#<init>(I)V
+#<init>(IF)V
+#<init>(Ljava/util/Map;)V
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#elements()Ljava/util/Enumeration;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#hashCode()I
+#isEmpty()Z
+#keys()Ljava/util/Enumeration;
+#keySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#toString()Ljava/lang/String;
+#values()Ljava/util/Collection;
@3.5.1
-###org/apache/tools/ant/util/LinkedHashtable

+###org/apache/tools/ant/util/LoaderUtils
@3.5
+#<init>()V
+#setContextClassLoader(Ljava/lang/ClassLoader;)V
+#getContextClassLoader()Ljava/lang/ClassLoader;
+#isContextLoaderAvailable()Z
+#getClassSource(Ljava/lang/Class;)Ljava/io/File;
+#getResourceSource(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/File;
+#classNameToResource(Ljava/lang/String;)Ljava/lang/String;
+#classExists(Ljava/lang/ClassLoader;Ljava/lang/String;)Z
@3.5.1
-###org/apache/tools/ant/util/LoaderUtils

+###org/apache/tools/ant/util/MergingMapper
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/MergingMapper

+###org/apache/tools/ant/util/OutputStreamFunneler
@3.5
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;J)V
+#setTimeout(J)V
+#getFunnelInstance()Ljava/io/OutputStream;
@3.5.1
-###org/apache/tools/ant/util/OutputStreamFunneler

+###org/apache/tools/ant/util/PackageNameMapper
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/util/PackageNameMapper

+###org/apache/tools/ant/util/ProcessUtil
@3.5
+#getProcessId(Ljava/lang/String;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/util/ProcessUtil

+###org/apache/tools/ant/util/PropertyOutputStream
@3.5
+#<init>(Lorg/apache/tools/ant/Project;Ljava/lang/String;)V
+#<init>(Lorg/apache/tools/ant/Project;Ljava/lang/String;Z)V
+#close()V
@3.5.1
-###org/apache/tools/ant/util/PropertyOutputStream

+###org/apache/tools/ant/util/ProxySetup
@3.5
+#<init>(Lorg/apache/tools/ant/Project;)V
+#getSystemProxySetting()Ljava/lang/String;
+#enableProxies()V
@3.5.1
-###org/apache/tools/ant/util/ProxySetup

+###org/apache/tools/ant/util/ReaderInputStream
@3.5
+#<init>(Ljava/io/Reader;)V
+#<init>(Ljava/io/Reader;Ljava/lang/String;)V
+#read()I
+#read([BII)I
+#mark(I)V
+#available()I
+#markSupported()Z
+#reset()V
+#close()V
@3.5.1
-###org/apache/tools/ant/util/ReaderInputStream

+###org/apache/tools/ant/util/ReflectUtil
@3.5
+#newInstance(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#invoke(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#invokeStatic(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#invoke(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#invoke(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getField(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#throwBuildException(Ljava/lang/Exception;)V
+#toBuildException(Ljava/lang/Exception;)Lorg/apache/tools/ant/BuildException;
+#respondsTo(Ljava/lang/Object;Ljava/lang/String;)Z
@3.5.1
-###org/apache/tools/ant/util/ReflectUtil

+###org/apache/tools/ant/util/ReflectWrapper
@3.5
+#<init>(Ljava/lang/ClassLoader;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;)V
+#getObject()Ljava/lang/Object;
+#invoke(Ljava/lang/String;)Ljava/lang/Object;
+#invoke(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#invoke(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/util/ReflectWrapper

+###org/apache/tools/ant/util/RegexpPatternMapper
@3.5
+#<init>()V
+#setHandleDirSep(Z)V
+#setCaseSensitive(Z)V
+#setFrom(Ljava/lang/String;)V
+#setTo(Ljava/lang/String;)V
+#mapFileName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/RegexpPatternMapper

+###org/apache/tools/ant/util/ResourceUtils$ReadOnlyTargetFileException
@3.5
+#<init>(Ljava/io/File;)V
@3.5.1
-###org/apache/tools/ant/util/ResourceUtils$ReadOnlyTargetFileException

+###org/apache/tools/ant/util/ResourceUtils$ResourceSelectorProvider
@3.5
+#getTargetSelectorForSource(Lorg/apache/tools/ant/types/Resource;)Lorg/apache/tools/ant/types/resources/selectors/ResourceSelector;
@3.5.1
-###org/apache/tools/ant/util/ResourceUtils$ResourceSelectorProvider

+###org/apache/tools/ant/util/ResourceUtils
@3.5
+#<init>()V
+#selectOutOfDateSources(Lorg/apache/tools/ant/ProjectComponent;[Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/util/FileNameMapper;Lorg/apache/tools/ant/types/ResourceFactory;)[Lorg/apache/tools/ant/types/Resource;
+#selectOutOfDateSources(Lorg/apache/tools/ant/ProjectComponent;[Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/util/FileNameMapper;Lorg/apache/tools/ant/types/ResourceFactory;J)[Lorg/apache/tools/ant/types/Resource;
+#selectOutOfDateSources(Lorg/apache/tools/ant/ProjectComponent;Lorg/apache/tools/ant/types/ResourceCollection;Lorg/apache/tools/ant/util/FileNameMapper;Lorg/apache/tools/ant/types/ResourceFactory;J)Lorg/apache/tools/ant/types/ResourceCollection;
+#selectSources(Lorg/apache/tools/ant/ProjectComponent;Lorg/apache/tools/ant/types/ResourceCollection;Lorg/apache/tools/ant/util/FileNameMapper;Lorg/apache/tools/ant/types/ResourceFactory;Lorg/apache/tools/ant/util/ResourceUtils$ResourceSelectorProvider;)Lorg/apache/tools/ant/types/ResourceCollection;
+#copyResource(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;)V
+#copyResource(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/Project;)V
+#copyResource(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZLjava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/Project;)V
+#copyResource(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZZLjava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/Project;)V
+#copyResource(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/FilterSetCollection;Ljava/util/Vector;ZZZLjava/lang/String;Ljava/lang/String;Lorg/apache/tools/ant/Project;Z)V
+#setLastModified(Lorg/apache/tools/ant/types/resources/Touchable;J)V
+#contentEquals(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;Z)Z
+#compareContent(Lorg/apache/tools/ant/types/Resource;Lorg/apache/tools/ant/types/Resource;Z)I
+#asFileResource(Lorg/apache/tools/ant/types/resources/FileProvider;)Lorg/apache/tools/ant/types/resources/FileResource;
@3.5.1
-###org/apache/tools/ant/util/ResourceUtils

+###org/apache/tools/ant/util/RetryHandler
@3.5
+#<init>(ILorg/apache/tools/ant/Task;)V
+#execute(Lorg/apache/tools/ant/util/Retryable;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/util/RetryHandler

+###org/apache/tools/ant/util/Retryable
@3.5
+#execute()V
@3.5.1
-###org/apache/tools/ant/util/Retryable

+###org/apache/tools/ant/util/ScriptFixBSFPath
@3.5
+#<init>()V
+#fixClassLoader(Ljava/lang/ClassLoader;Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/util/ScriptFixBSFPath

+###org/apache/tools/ant/util/ScriptRunnerBase
@3.5
+#<init>()V
+#addBeans(Ljava/util/Map;)V
+#addBean(Ljava/lang/String;Ljava/lang/Object;)V
+#executeScript(Ljava/lang/String;)V
+#evaluateScript(Ljava/lang/String;)Ljava/lang/Object;
+#supportsLanguage()Z
+#getManagerName()Ljava/lang/String;
+#setLanguage(Ljava/lang/String;)V
+#getLanguage()Ljava/lang/String;
+#setScriptClassLoader(Ljava/lang/ClassLoader;)V
+#setKeepEngine(Z)V
+#getKeepEngine()Z
+#setSrc(Ljava/io/File;)V
+#loadResource(Lorg/apache/tools/ant/types/Resource;)V
+#loadResources(Lorg/apache/tools/ant/types/ResourceCollection;)V
+#addText(Ljava/lang/String;)V
+#getScript()Ljava/lang/String;
+#clearScript()V
+#setProject(Lorg/apache/tools/ant/Project;)V
+#getProject()Lorg/apache/tools/ant/Project;
+#bindToComponent(Lorg/apache/tools/ant/ProjectComponent;)V
+#bindToComponentMinimum(Lorg/apache/tools/ant/ProjectComponent;)V
@3.5.1
-###org/apache/tools/ant/util/ScriptRunnerBase

+###org/apache/tools/ant/util/ScriptRunnerCreator
@3.5
+#<init>(Lorg/apache/tools/ant/Project;)V
+#createRunner(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/apache/tools/ant/util/ScriptRunnerBase;
@3.5.1
-###org/apache/tools/ant/util/ScriptRunnerCreator

+###org/apache/tools/ant/util/ScriptRunnerHelper
@3.5
+#<init>()V
+#setProjectComponent(Lorg/apache/tools/ant/ProjectComponent;)V
+#getScriptRunner()Lorg/apache/tools/ant/util/ScriptRunnerBase;
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#setSrc(Ljava/io/File;)V
+#addText(Ljava/lang/String;)V
+#setManager(Ljava/lang/String;)V
+#setLanguage(Ljava/lang/String;)V
+#getLanguage()Ljava/lang/String;
+#setSetBeans(Z)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#add(Lorg/apache/tools/ant/types/ResourceCollection;)V
@3.5.1
-###org/apache/tools/ant/util/ScriptRunnerHelper

+###org/apache/tools/ant/util/SourceFileScanner
@3.5
+#<init>(Lorg/apache/tools/ant/Task;)V
+#restrict([Ljava/lang/String;Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/util/FileNameMapper;)[Ljava/lang/String;
+#restrict([Ljava/lang/String;Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/util/FileNameMapper;J)[Ljava/lang/String;
+#restrictAsFiles([Ljava/lang/String;Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/util/FileNameMapper;)[Ljava/io/File;
+#restrictAsFiles([Ljava/lang/String;Ljava/io/File;Ljava/io/File;Lorg/apache/tools/ant/util/FileNameMapper;J)[Ljava/io/File;
+#getResource(Ljava/lang/String;)Lorg/apache/tools/ant/types/Resource;
@3.5.1
-###org/apache/tools/ant/util/SourceFileScanner

+###org/apache/tools/ant/util/SplitClassLoader
@3.5
+#<init>(Ljava/lang/ClassLoader;Lorg/apache/tools/ant/types/Path;Lorg/apache/tools/ant/Project;[Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/util/SplitClassLoader

+###org/apache/tools/ant/util/StringTokenizer
@3.5
+#<init>()V
+#setDelims(Ljava/lang/String;)V
+#setDelimsAreTokens(Z)V
+#setSuppressDelims(Z)V
+#setIncludeDelims(Z)V
+#getToken(Ljava/io/Reader;)Ljava/lang/String;
+#getPostToken()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/StringTokenizer

+###org/apache/tools/ant/util/StringUtils
@3.5
+#lineSplit(Ljava/lang/String;)Ljava/util/Vector;
+#split(Ljava/lang/String;I)Ljava/util/Vector;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getStackTrace(Ljava/lang/Throwable;)Ljava/lang/String;
+#endsWith(Ljava/lang/StringBuffer;Ljava/lang/String;)Z
+#resolveBackSlash(Ljava/lang/String;)Ljava/lang/String;
+#parseHumanSizes(Ljava/lang/String;)J
+#removeSuffix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#removePrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/StringUtils

+###org/apache/tools/ant/util/SymbolicLinkUtils
@3.5
+#getSymbolicLinkUtils()Lorg/apache/tools/ant/util/SymbolicLinkUtils;
+#isSymbolicLink(Ljava/io/File;)Z
+#isSymbolicLink(Ljava/lang/String;)Z
+#isSymbolicLink(Ljava/io/File;Ljava/lang/String;)Z
+#isDanglingSymbolicLink(Ljava/lang/String;)Z
+#isDanglingSymbolicLink(Ljava/io/File;)Z
+#isDanglingSymbolicLink(Ljava/io/File;Ljava/lang/String;)Z
+#deleteSymbolicLink(Ljava/io/File;Lorg/apache/tools/ant/Task;)V
@3.5.1
-###org/apache/tools/ant/util/SymbolicLinkUtils

+###org/apache/tools/ant/util/TaskLogger
@3.5
+#<init>(Lorg/apache/tools/ant/Task;)V
+#info(Ljava/lang/String;)V
+#error(Ljava/lang/String;)V
+#warning(Ljava/lang/String;)V
+#verbose(Ljava/lang/String;)V
+#debug(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/util/TaskLogger

+###org/apache/tools/ant/util/TeeOutputStream
@3.5
+#<init>(Ljava/io/OutputStream;Ljava/io/OutputStream;)V
+#close()V
+#flush()V
+#write([B)V
+#write([BII)V
+#write(I)V
@3.5.1
-###org/apache/tools/ant/util/TeeOutputStream

+###org/apache/tools/ant/util/TimeoutObserver
@3.5
+#timeoutOccured(Lorg/apache/tools/ant/util/Watchdog;)V
@3.5.1
-###org/apache/tools/ant/util/TimeoutObserver

+###org/apache/tools/ant/util/Tokenizer
@3.5
+#getToken(Ljava/io/Reader;)Ljava/lang/String;
+#getPostToken()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/Tokenizer

+###org/apache/tools/ant/util/UUEncoder
@3.5
+#<init>(Ljava/lang/String;)V
+#encode(Ljava/io/InputStream;Ljava/io/OutputStream;)V
@3.5.1
-###org/apache/tools/ant/util/UUEncoder

+###org/apache/tools/ant/util/UnPackageNameMapper
@3.5
+#<init>()V
@3.5.1
-###org/apache/tools/ant/util/UnPackageNameMapper

+###org/apache/tools/ant/util/UnicodeUtil
@3.5
+#EscapeUnicode(C)Ljava/lang/StringBuffer;
@3.5.1
-###org/apache/tools/ant/util/UnicodeUtil

+###org/apache/tools/ant/util/VectorSet
@3.5
+#<init>()V
+#<init>(I)V
+#<init>(II)V
+#<init>(Ljava/util/Collection;)V
+#add(Ljava/lang/Object;)Z
+#add(ILjava/lang/Object;)V
+#addElement(Ljava/lang/Object;)V
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#clear()V
+#clone()Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#insertElementAt(Ljava/lang/Object;I)V
+#remove(I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#removeAllElements()V
+#removeElement(Ljava/lang/Object;)Z
+#removeElementAt(I)V
+#removeRange(II)V
+#retainAll(Ljava/util/Collection;)Z
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#setElementAt(Ljava/lang/Object;I)V
@3.5.1
-###org/apache/tools/ant/util/VectorSet

+###org/apache/tools/ant/util/Watchdog
@3.5
+#<init>(J)V
+#addTimeoutObserver(Lorg/apache/tools/ant/util/TimeoutObserver;)V
+#removeTimeoutObserver(Lorg/apache/tools/ant/util/TimeoutObserver;)V
+#start()V
+#stop()V
+#run()V
@3.5.1
-###org/apache/tools/ant/util/Watchdog

+###org/apache/tools/ant/util/WeakishReference$HardReference
@3.5
+#<init>(Ljava/lang/Object;)V
@3.5.1
-###org/apache/tools/ant/util/WeakishReference$HardReference

+###org/apache/tools/ant/util/WeakishReference
@3.5
+#get()Ljava/lang/Object;
+#createReference(Ljava/lang/Object;)Lorg/apache/tools/ant/util/WeakishReference;
@3.5.1
-###org/apache/tools/ant/util/WeakishReference

+###org/apache/tools/ant/util/WorkerAnt
@3.5
+#<init>(Lorg/apache/tools/ant/Task;Ljava/lang/Object;)V
+#<init>(Lorg/apache/tools/ant/Task;)V
+#getBuildException()Lorg/apache/tools/ant/BuildException;
+#getException()Ljava/lang/Throwable;
+#getTask()Lorg/apache/tools/ant/Task;
+#isFinished()Z
+#waitUntilFinished(J)V
+#rethrowAnyBuildException()V
+#run()V
@3.5.1
-###org/apache/tools/ant/util/WorkerAnt

+###org/apache/tools/ant/util/XMLFragment$Child
@3.5
+#addText(Ljava/lang/String;)V
+#setDynamicAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#createDynamicElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/util/XMLFragment$Child

+###org/apache/tools/ant/util/XMLFragment
@3.5
+#<init>()V
+#getFragment()Lorg/w3c/dom/DocumentFragment;
+#addText(Ljava/lang/String;)V
+#createDynamicElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/util/XMLFragment

+###org/apache/tools/ant/util/XmlConstants
@3.5
@3.5.1
-###org/apache/tools/ant/util/XmlConstants

+###org/apache/tools/ant/util/depend/AbstractAnalyzer
@3.5
+#setClosure(Z)V
+#getFileDependencies()Ljava/util/Enumeration;
+#getClassDependencies()Ljava/util/Enumeration;
+#getClassContainer(Ljava/lang/String;)Ljava/io/File;
+#getSourceContainer(Ljava/lang/String;)Ljava/io/File;
+#addSourcePath(Lorg/apache/tools/ant/types/Path;)V
+#addClassPath(Lorg/apache/tools/ant/types/Path;)V
+#addRootClass(Ljava/lang/String;)V
+#config(Ljava/lang/String;Ljava/lang/Object;)V
+#reset()V
@3.5.1
-###org/apache/tools/ant/util/depend/AbstractAnalyzer

+###org/apache/tools/ant/util/depend/DependencyAnalyzer
@3.5
+#addSourcePath(Lorg/apache/tools/ant/types/Path;)V
+#addClassPath(Lorg/apache/tools/ant/types/Path;)V
+#addRootClass(Ljava/lang/String;)V
+#getFileDependencies()Ljava/util/Enumeration;
+#getClassDependencies()Ljava/util/Enumeration;
+#reset()V
+#config(Ljava/lang/String;Ljava/lang/Object;)V
+#setClosure(Z)V
+#getClassContainer(Ljava/lang/String;)Ljava/io/File;
+#getSourceContainer(Ljava/lang/String;)Ljava/io/File;
@3.5.1
-###org/apache/tools/ant/util/depend/DependencyAnalyzer

+###org/apache/tools/ant/util/facade/FacadeTaskHelper
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setMagicValue(Ljava/lang/String;)V
+#setImplementation(Ljava/lang/String;)V
+#getImplementation()Ljava/lang/String;
+#getExplicitChoice()Ljava/lang/String;
+#addImplementationArgument(Lorg/apache/tools/ant/util/facade/ImplementationSpecificArgument;)V
+#getArgs()[Ljava/lang/String;
+#hasBeenSet()Z
+#getImplementationClasspath(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/types/Path;
@3.5.1
-###org/apache/tools/ant/util/facade/FacadeTaskHelper

+###org/apache/tools/ant/util/facade/ImplementationSpecificArgument
@3.5
+#<init>()V
+#setImplementation(Ljava/lang/String;)V
+#getParts(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/facade/ImplementationSpecificArgument

+###org/apache/tools/ant/util/java15/ProxyDiagnostics
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/java15/ProxyDiagnostics

+###org/apache/tools/ant/util/optional/JavaxScriptRunner
@3.5
+#<init>()V
+#getManagerName()Ljava/lang/String;
+#supportsLanguage()Z
+#executeScript(Ljava/lang/String;)V
+#evaluateScript(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###org/apache/tools/ant/util/optional/JavaxScriptRunner

+###org/apache/tools/ant/util/optional/NoExitSecurityManager
@3.5
+#<init>()V
+#checkExit(I)V
+#checkPermission(Ljava/security/Permission;)V
@3.5.1
-###org/apache/tools/ant/util/optional/NoExitSecurityManager

+###org/apache/tools/ant/util/optional/WeakishReference12
@3.5
+#<init>(Ljava/lang/Object;)V
@3.5.1
-###org/apache/tools/ant/util/optional/WeakishReference12

+###org/apache/tools/ant/util/regexp/Jdk14RegexpMatcher
@3.5
+#<init>()V
+#setPattern(Ljava/lang/String;)V
+#getPattern()Ljava/lang/String;
+#matches(Ljava/lang/String;)Z
+#matches(Ljava/lang/String;I)Z
+#getGroups(Ljava/lang/String;)Ljava/util/Vector;
+#getGroups(Ljava/lang/String;I)Ljava/util/Vector;
@3.5.1
-###org/apache/tools/ant/util/regexp/Jdk14RegexpMatcher

+###org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp
@3.5
+#<init>()V
+#substitute(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp

+###org/apache/tools/ant/util/regexp/Regexp
@3.5
+#substitute(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
@3.5.1
-###org/apache/tools/ant/util/regexp/Regexp

+###org/apache/tools/ant/util/regexp/RegexpFactory
@3.5
+#<init>()V
+#newRegexp()Lorg/apache/tools/ant/util/regexp/Regexp;
+#newRegexp(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/util/regexp/Regexp;
@3.5.1
-###org/apache/tools/ant/util/regexp/RegexpFactory

+###org/apache/tools/ant/util/regexp/RegexpMatcher
@3.5
+#setPattern(Ljava/lang/String;)V
+#getPattern()Ljava/lang/String;
+#matches(Ljava/lang/String;)Z
+#getGroups(Ljava/lang/String;)Ljava/util/Vector;
+#matches(Ljava/lang/String;I)Z
+#getGroups(Ljava/lang/String;I)Ljava/util/Vector;
@3.5.1
-###org/apache/tools/ant/util/regexp/RegexpMatcher

+###org/apache/tools/ant/util/regexp/RegexpMatcherFactory
@3.5
+#<init>()V
+#newRegexpMatcher()Lorg/apache/tools/ant/util/regexp/RegexpMatcher;
+#newRegexpMatcher(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/util/regexp/RegexpMatcher;
+#regexpMatcherPresent(Lorg/apache/tools/ant/Project;)Z
@3.5.1
-###org/apache/tools/ant/util/regexp/RegexpMatcherFactory

+###org/apache/tools/ant/util/regexp/RegexpUtil
@3.5
+#<init>()V
+#hasFlag(II)Z
+#removeFlag(II)I
+#asOptions(Ljava/lang/String;)I
+#asOptions(Z)I
+#asOptions(ZZZ)I
@3.5.1
-###org/apache/tools/ant/util/regexp/RegexpUtil

+###org/apache/tools/bzip2/BZip2Constants
@3.5
@3.5.1
-###org/apache/tools/bzip2/BZip2Constants

+###org/apache/tools/bzip2/CBZip2InputStream
@3.5
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Z)V
+#read()I
+#read([BII)I
+#close()V
@3.5.1
-###org/apache/tools/bzip2/CBZip2InputStream

+###org/apache/tools/bzip2/CBZip2OutputStream
@3.5
+#chooseBlockSize(J)I
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#write(I)V
+#finish()V
+#close()V
+#flush()V
+#getBlockSize()I
+#write([BII)V
@3.5.1
-###org/apache/tools/bzip2/CBZip2OutputStream

+###org/apache/tools/mail/ErrorInQuitException
@3.5
+#<init>(Ljava/io/IOException;)V
@3.5.1
-###org/apache/tools/mail/ErrorInQuitException

+###org/apache/tools/mail/MailMessage
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#setPort(I)V
+#from(Ljava/lang/String;)V
+#replyto(Ljava/lang/String;)V
+#to(Ljava/lang/String;)V
+#cc(Ljava/lang/String;)V
+#bcc(Ljava/lang/String;)V
+#setSubject(Ljava/lang/String;)V
+#setHeader(Ljava/lang/String;Ljava/lang/String;)V
+#getPrintStream()Ljava/io/PrintStream;
+#sendAndClose()V
@3.5.1
-###org/apache/tools/mail/MailMessage

+###org/apache/tools/mail/SmtpResponseReader
@3.5
+#<init>(Ljava/io/InputStream;)V
+#getResponse()Ljava/lang/String;
+#close()V
@3.5.1
-###org/apache/tools/mail/SmtpResponseReader

+###org/apache/tools/tar/TarArchiveSparseEntry
@3.5
+#<init>([B)V
+#isExtended()Z
@3.5.1
-###org/apache/tools/tar/TarArchiveSparseEntry

+###org/apache/tools/tar/TarBuffer
@3.5
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
+#<init>(Ljava/io/InputStream;II)V
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#<init>(Ljava/io/OutputStream;II)V
+#getBlockSize()I
+#getRecordSize()I
+#setDebug(Z)V
+#isEOFRecord([B)Z
+#skipRecord()V
+#readRecord()[B
+#getCurrentBlockNum()I
+#getCurrentRecordNum()I
+#writeRecord([B)V
+#writeRecord([BI)V
+#close()V
@3.5.1
-###org/apache/tools/tar/TarBuffer

+###org/apache/tools/tar/TarConstants
@3.5
@3.5.1
-###org/apache/tools/tar/TarConstants

+###org/apache/tools/tar/TarEntry
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;B)V
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#<init>([B)V
+#<init>([BLorg/apache/tools/zip/ZipEncoding;)V
+#equals(Lorg/apache/tools/tar/TarEntry;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isDescendent(Lorg/apache/tools/tar/TarEntry;)Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setMode(I)V
+#getLinkName()Ljava/lang/String;
+#setLinkName(Ljava/lang/String;)V
+#getUserId()I[deprecated]
+#setUserId(I)V
+#getLongUserId()J
+#setUserId(J)V
+#getGroupId()I[deprecated]
+#setGroupId(I)V
+#getLongGroupId()J
+#setGroupId(J)V
+#getUserName()Ljava/lang/String;
+#setUserName(Ljava/lang/String;)V
+#getGroupName()Ljava/lang/String;
+#setGroupName(Ljava/lang/String;)V
+#setIds(II)V
+#setNames(Ljava/lang/String;Ljava/lang/String;)V
+#setModTime(J)V
+#setModTime(Ljava/util/Date;)V
+#getModTime()Ljava/util/Date;
+#getFile()Ljava/io/File;
+#getMode()I
+#getSize()J
+#setSize(J)V
+#getDevMajor()I
+#setDevMajor(I)V
+#getDevMinor()I
+#setDevMinor(I)V
+#isExtended()Z
+#getRealSize()J
+#isGNUSparse()Z
+#isGNULongLinkEntry()Z
+#isGNULongNameEntry()Z
+#isPaxHeader()Z
+#isGlobalPaxHeader()Z
+#isDirectory()Z
+#isFile()Z
+#isSymbolicLink()Z
+#isLink()Z
+#isCharacterDevice()Z
+#isBlockDevice()Z
+#isFIFO()Z
+#getDirectoryEntries()[Lorg/apache/tools/tar/TarEntry;
+#writeEntryHeader([B)V
+#writeEntryHeader([BLorg/apache/tools/zip/ZipEncoding;Z)V
+#parseTarHeader([B)V
+#parseTarHeader([BLorg/apache/tools/zip/ZipEncoding;)V
@3.5.1
-###org/apache/tools/tar/TarEntry

+###org/apache/tools/tar/TarInputStream
@3.5
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;I)V
+#<init>(Ljava/io/InputStream;ILjava/lang/String;)V
+#<init>(Ljava/io/InputStream;II)V
+#<init>(Ljava/io/InputStream;IILjava/lang/String;)V
+#setDebug(Z)V
+#close()V
+#getRecordSize()I
+#available()I
+#skip(J)J
+#markSupported()Z
+#mark(I)V
+#reset()V
+#getNextEntry()Lorg/apache/tools/tar/TarEntry;
+#read()I
+#read([BII)I
+#copyEntryContents(Ljava/io/OutputStream;)V
+#canReadEntryData(Lorg/apache/tools/tar/TarEntry;)Z
@3.5.1
-###org/apache/tools/tar/TarInputStream

+###org/apache/tools/tar/TarOutputStream
@3.5
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/OutputStream;I)V
+#<init>(Ljava/io/OutputStream;ILjava/lang/String;)V
+#<init>(Ljava/io/OutputStream;II)V
+#<init>(Ljava/io/OutputStream;IILjava/lang/String;)V
+#setLongFileMode(I)V
+#setBigNumberMode(I)V
+#setAddPaxHeadersForNonAsciiNames(Z)V
+#setDebug(Z)V
+#setBufferDebug(Z)V
+#finish()V
+#close()V
+#getRecordSize()I
+#putNextEntry(Lorg/apache/tools/tar/TarEntry;)V
+#closeEntry()V
+#write(I)V
+#write([B)V
+#write([BII)V
@3.5.1
-###org/apache/tools/tar/TarOutputStream

+###org/apache/tools/tar/TarUtils
@3.5
+#parseOctal([BII)J
+#parseOctalOrBinary([BII)J
+#parseBoolean([BI)Z
+#parseName([BII)Ljava/lang/String;
+#parseName([BIILorg/apache/tools/zip/ZipEncoding;)Ljava/lang/String;
+#formatNameBytes(Ljava/lang/String;[BII)I
+#formatNameBytes(Ljava/lang/String;[BIILorg/apache/tools/zip/ZipEncoding;)I
+#formatUnsignedOctalString(J[BII)V
+#formatOctalBytes(J[BII)I
+#formatLongOctalBytes(J[BII)I
+#formatLongOctalOrBinaryBytes(J[BII)I
+#formatCheckSumOctalBytes(J[BII)I
+#computeCheckSum([B)J
@3.5.1
-###org/apache/tools/tar/TarUtils

+###org/apache/tools/zip/AbstractUnicodeExtraField
@3.5
+#getNameCRC32()J
+#setNameCRC32(J)V
+#getUnicodeName()[B
+#setUnicodeName([B)V
+#getCentralDirectoryData()[B
+#getCentralDirectoryLength()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataData()[B
+#getLocalFileDataLength()Lorg/apache/tools/zip/ZipShort;
+#parseFromLocalFileData([BII)V
@3.5.1
-###org/apache/tools/zip/AbstractUnicodeExtraField

+###org/apache/tools/zip/AsiExtraField
@3.5
+#<init>()V
+#getHeaderId()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/tools/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#setUserId(I)V
+#getUserId()I
+#setGroupId(I)V
+#getGroupId()I
+#setLinkedFile(Ljava/lang/String;)V
+#getLinkedFile()Ljava/lang/String;
+#isLink()Z
+#setMode(I)V
+#getMode()I
+#setDirectory(Z)V
+#isDirectory()Z
+#parseFromLocalFileData([BII)V
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/zip/AsiExtraField

+###org/apache/tools/zip/CentralDirectoryParsingZipExtraField
@3.5
+#parseFromCentralDirectoryData([BII)V
@3.5.1
-###org/apache/tools/zip/CentralDirectoryParsingZipExtraField

+###org/apache/tools/zip/ExtraFieldUtils$UnparseableExtraField
@3.5
+#getKey()I
@3.5.1
-###org/apache/tools/zip/ExtraFieldUtils$UnparseableExtraField

+###org/apache/tools/zip/ExtraFieldUtils
@3.5
+#<init>()V
+#register(Ljava/lang/Class;)V
+#createExtraField(Lorg/apache/tools/zip/ZipShort;)Lorg/apache/tools/zip/ZipExtraField;
+#parse([B)[Lorg/apache/tools/zip/ZipExtraField;
+#parse([BZ)[Lorg/apache/tools/zip/ZipExtraField;
+#parse([BZLorg/apache/tools/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/tools/zip/ZipExtraField;
+#mergeLocalFileDataData([Lorg/apache/tools/zip/ZipExtraField;)[B
+#mergeCentralDirectoryData([Lorg/apache/tools/zip/ZipExtraField;)[B
@3.5.1
-###org/apache/tools/zip/ExtraFieldUtils

+###org/apache/tools/zip/GeneralPurposeBit
@3.5
+#<init>()V
+#usesUTF8ForNames()Z
+#useUTF8ForNames(Z)V
+#usesDataDescriptor()Z
+#useDataDescriptor(Z)V
+#usesEncryption()Z
+#useEncryption(Z)V
+#usesStrongEncryption()Z
+#useStrongEncryption(Z)V
+#encode()[B
+#encode([BI)V
+#parse([BI)Lorg/apache/tools/zip/GeneralPurposeBit;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#clone()Ljava/lang/Object;
@3.5.1
-###org/apache/tools/zip/GeneralPurposeBit

+###org/apache/tools/zip/JarMarker
@3.5
+#<init>()V
+#getInstance()Lorg/apache/tools/zip/JarMarker;
+#getHeaderId()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/tools/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
@3.5.1
-###org/apache/tools/zip/JarMarker

+###org/apache/tools/zip/UnicodeCommentExtraField
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;[BII)V
+#<init>(Ljava/lang/String;[B)V
+#getHeaderId()Lorg/apache/tools/zip/ZipShort;
@3.5.1
-###org/apache/tools/zip/UnicodeCommentExtraField

+###org/apache/tools/zip/UnicodePathExtraField
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;[BII)V
+#<init>(Ljava/lang/String;[B)V
+#getHeaderId()Lorg/apache/tools/zip/ZipShort;
@3.5.1
-###org/apache/tools/zip/UnicodePathExtraField

+###org/apache/tools/zip/UnixStat
@3.5
@3.5.1
-###org/apache/tools/zip/UnixStat

+###org/apache/tools/zip/UnparseableExtraFieldData
@3.5
+#<init>()V
+#getHeaderId()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/tools/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V
@3.5.1
-###org/apache/tools/zip/UnparseableExtraFieldData

+###org/apache/tools/zip/UnrecognizedExtraField
@3.5
+#<init>()V
+#setHeaderId(Lorg/apache/tools/zip/ZipShort;)V
+#getHeaderId()Lorg/apache/tools/zip/ZipShort;
+#setLocalFileDataData([B)V
+#getLocalFileDataLength()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataData()[B
+#setCentralDirectoryData([B)V
+#getCentralDirectoryLength()Lorg/apache/tools/zip/ZipShort;
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V
@3.5.1
-###org/apache/tools/zip/UnrecognizedExtraField

+###org/apache/tools/zip/UnsupportedZipFeatureException$Feature
@3.5
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/zip/UnsupportedZipFeatureException$Feature

+###org/apache/tools/zip/UnsupportedZipFeatureException
@3.5
+#<init>(Lorg/apache/tools/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/tools/zip/ZipEntry;)V
+#getFeature()Lorg/apache/tools/zip/UnsupportedZipFeatureException$Feature;
+#getEntry()Lorg/apache/tools/zip/ZipEntry;
@3.5.1
-###org/apache/tools/zip/UnsupportedZipFeatureException

+###org/apache/tools/zip/Zip64ExtendedInformationExtraField
@3.5
+#<init>()V
+#<init>(Lorg/apache/tools/zip/ZipEightByteInteger;Lorg/apache/tools/zip/ZipEightByteInteger;)V
+#<init>(Lorg/apache/tools/zip/ZipEightByteInteger;Lorg/apache/tools/zip/ZipEightByteInteger;Lorg/apache/tools/zip/ZipEightByteInteger;Lorg/apache/tools/zip/ZipLong;)V
+#getHeaderId()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/tools/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V
+#reparseCentralDirectoryData(ZZZZ)V
+#getSize()Lorg/apache/tools/zip/ZipEightByteInteger;
+#setSize(Lorg/apache/tools/zip/ZipEightByteInteger;)V
+#getCompressedSize()Lorg/apache/tools/zip/ZipEightByteInteger;
+#setCompressedSize(Lorg/apache/tools/zip/ZipEightByteInteger;)V
+#getRelativeHeaderOffset()Lorg/apache/tools/zip/ZipEightByteInteger;
+#setRelativeHeaderOffset(Lorg/apache/tools/zip/ZipEightByteInteger;)V
+#getDiskStartNumber()Lorg/apache/tools/zip/ZipLong;
+#setDiskStartNumber(Lorg/apache/tools/zip/ZipLong;)V
@3.5.1
-###org/apache/tools/zip/Zip64ExtendedInformationExtraField

+###org/apache/tools/zip/Zip64Mode
@3.5
+#values()[Lorg/apache/tools/zip/Zip64Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/tools/zip/Zip64Mode;
@3.5.1
-###org/apache/tools/zip/Zip64Mode

+###org/apache/tools/zip/Zip64RequiredException
@3.5
+#<init>(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/zip/Zip64RequiredException

+###org/apache/tools/zip/ZipEightByteInteger
@3.5
+#<init>(J)V
+#<init>(Ljava/math/BigInteger;)V
+#<init>([B)V
+#<init>([BI)V
+#getBytes()[B
+#getLongValue()J
+#getValue()Ljava/math/BigInteger;
+#getBytes(J)[B
+#getBytes(Ljava/math/BigInteger;)[B
+#getLongValue([BI)J
+#getValue([BI)Ljava/math/BigInteger;
+#getLongValue([B)J
+#getValue([B)Ljava/math/BigInteger;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/zip/ZipEightByteInteger

+###org/apache/tools/zip/ZipEncoding
@3.5
+#canEncode(Ljava/lang/String;)Z
+#encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#decode([B)Ljava/lang/String;
@3.5.1
-###org/apache/tools/zip/ZipEncoding

+###org/apache/tools/zip/ZipEncodingHelper
@3.5
+#<init>()V
+#getZipEncoding(Ljava/lang/String;)Lorg/apache/tools/zip/ZipEncoding;
@3.5.1
-###org/apache/tools/zip/ZipEncodingHelper

+###org/apache/tools/zip/ZipEntry
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/zip/ZipEntry;)V
+#<init>(Lorg/apache/tools/zip/ZipEntry;)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#clone()Ljava/lang/Object;
+#getMethod()I
+#setMethod(I)V
+#getInternalAttributes()I
+#setInternalAttributes(I)V
+#getExternalAttributes()J
+#setExternalAttributes(J)V
+#setUnixMode(I)V
+#getUnixMode()I
+#getPlatform()I
+#setExtraFields([Lorg/apache/tools/zip/ZipExtraField;)V
+#getExtraFields()[Lorg/apache/tools/zip/ZipExtraField;
+#getExtraFields(Z)[Lorg/apache/tools/zip/ZipExtraField;
+#addExtraField(Lorg/apache/tools/zip/ZipExtraField;)V
+#addAsFirstExtraField(Lorg/apache/tools/zip/ZipExtraField;)V
+#removeExtraField(Lorg/apache/tools/zip/ZipShort;)V
+#removeUnparseableExtraFieldData()V
+#getExtraField(Lorg/apache/tools/zip/ZipShort;)Lorg/apache/tools/zip/ZipExtraField;
+#getUnparseableExtraFieldData()Lorg/apache/tools/zip/UnparseableExtraFieldData;
+#setExtra([B)V
+#setCentralDirectoryExtra([B)V
+#getLocalFileDataExtra()[B
+#getCentralDirectoryExtra()[B
+#setComprSize(J)V[deprecated]
+#getName()Ljava/lang/String;
+#isDirectory()Z
+#getSize()J
+#setSize(J)V
+#getRawName()[B
+#hashCode()I
+#getGeneralPurposeBit()Lorg/apache/tools/zip/GeneralPurposeBit;
+#setGeneralPurposeBit(Lorg/apache/tools/zip/GeneralPurposeBit;)V
+#getLastModifiedDate()Ljava/util/Date;
+#equals(Ljava/lang/Object;)Z
@3.5.1
-###org/apache/tools/zip/ZipEntry

+###org/apache/tools/zip/ZipExtraField
@3.5
+#getHeaderId()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/tools/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/tools/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
@3.5.1
-###org/apache/tools/zip/ZipExtraField

+###org/apache/tools/zip/ZipFile
@3.5
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#<init>(Ljava/io/File;Ljava/lang/String;Z)V
+#getEncoding()Ljava/lang/String;
+#close()V
+#closeQuietly(Lorg/apache/tools/zip/ZipFile;)V
+#getEntries()Ljava/util/Enumeration;
+#getEntriesInPhysicalOrder()Ljava/util/Enumeration;
+#getEntry(Ljava/lang/String;)Lorg/apache/tools/zip/ZipEntry;
+#getEntries(Ljava/lang/String;)Ljava/lang/Iterable;
+#getEntriesInPhysicalOrder(Ljava/lang/String;)Ljava/lang/Iterable;
+#canReadEntryData(Lorg/apache/tools/zip/ZipEntry;)Z
+#getInputStream(Lorg/apache/tools/zip/ZipEntry;)Ljava/io/InputStream;
@3.5.1
-###org/apache/tools/zip/ZipFile

+###org/apache/tools/zip/ZipLong
@3.5
+#<init>(J)V
+#<init>([B)V
+#<init>([BI)V
+#getBytes()[B
+#getValue()J
+#getBytes(J)[B
+#putLong(J[BI)V
+#putLong([BI)V
+#getValue([BI)J
+#getValue([B)J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/zip/ZipLong

+###org/apache/tools/zip/ZipOutputStream$UnicodeExtraFieldPolicy
@3.5
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/zip/ZipOutputStream$UnicodeExtraFieldPolicy

+###org/apache/tools/zip/ZipOutputStream
@3.5
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/File;)V
+#isSeekable()Z
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setUseLanguageEncodingFlag(Z)V
+#setCreateUnicodeExtraFields(Lorg/apache/tools/zip/ZipOutputStream$UnicodeExtraFieldPolicy;)V
+#setFallbackToUTF8(Z)V
+#setUseZip64(Lorg/apache/tools/zip/Zip64Mode;)V
+#finish()V
+#closeEntry()V
+#putNextEntry(Lorg/apache/tools/zip/ZipEntry;)V
+#setComment(Ljava/lang/String;)V
+#setLevel(I)V
+#setMethod(I)V
+#canWriteEntryData(Lorg/apache/tools/zip/ZipEntry;)Z
+#write([BII)V
+#close()V
+#flush()V
@3.5.1
-###org/apache/tools/zip/ZipOutputStream

+###org/apache/tools/zip/ZipShort
@3.5
+#<init>(I)V
+#<init>([B)V
+#<init>([BI)V
+#getBytes()[B
+#putShort(I[BI)V
+#getValue()I
+#getBytes(I)[B
+#getValue([BI)I
+#getValue([B)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@3.5.1
-###org/apache/tools/zip/ZipShort

+###org/apache/tools/zip/ZipUtil
@3.5
+#<init>()V
+#toDosTime(Ljava/util/Date;)Lorg/apache/tools/zip/ZipLong;
+#toDosTime(J)[B
+#toDosTime(J[BI)V
+#adjustToLong(I)J
+#fromDosTime(Lorg/apache/tools/zip/ZipLong;)Ljava/util/Date;
+#dosToJavaTime(J)J
@3.5.1
-###org/apache/tools/zip/ZipUtil

+###org/apache/tools/ant/launch/AntMain
@3.5
+#startAnt([Ljava/lang/String;Ljava/util/Properties;Ljava/lang/ClassLoader;)V
@3.5.1
-###org/apache/tools/ant/launch/AntMain

+###org/apache/tools/ant/launch/LaunchException
@3.5
+#<init>(Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/launch/LaunchException

+###org/apache/tools/ant/launch/Launcher
@3.5
+#main([Ljava/lang/String;)V
@3.5.1
-###org/apache/tools/ant/launch/Launcher

+###org/apache/tools/ant/launch/Locator
@3.5
+#getClassSource(Ljava/lang/Class;)Ljava/io/File;
+#getResourceSource(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/File;
+#fromURI(Ljava/lang/String;)Ljava/lang/String;
+#fromJarURI(Ljava/lang/String;)Ljava/lang/String;
+#decodeUri(Ljava/lang/String;)Ljava/lang/String;
+#encodeURI(Ljava/lang/String;)Ljava/lang/String;
+#fileToURL(Ljava/io/File;)Ljava/net/URL;[deprecated]
+#getToolsJar()Ljava/io/File;
+#getLocationURLs(Ljava/io/File;)[Ljava/net/URL;
+#getLocationURLs(Ljava/io/File;[Ljava/lang/String;)[Ljava/net/URL;
@3.5.1
-###org/apache/tools/ant/launch/Locator

+###org/easymock/asm/ModuleVisitor
@3.5
+#<init>(I)V
+#<init>(ILorg/easymock/asm/ModuleVisitor;)V
+#visitMainClass(Ljava/lang/String;)V
+#visitPackage(Ljava/lang/String;)V
+#visitRequire(Ljava/lang/String;ILjava/lang/String;)V
+#visitExport(Ljava/lang/String;I[Ljava/lang/String;)V
+#visitOpen(Ljava/lang/String;I[Ljava/lang/String;)V
+#visitUse(Ljava/lang/String;)V
+#visitProvide(Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V
@5.0.0
+#getDelegate()Lorg/easymock/asm/ModuleVisitor;
-#<init>(I)V
-#<init>(ILorg/easymock/asm/ModuleVisitor;)V

+###com/beust/testng/TestNG
@3.5
+#<init>()V
@3.5.1
-###com/beust/testng/TestNG

+###com/beust/testng/TestNGAntTask
@3.5
+#<init>()V
@3.5.1
-###com/beust/testng/TestNGAntTask

+###org/testng/Assert$ThrowingRunnable
@3.5
+#run()V
@3.5.1
-###org/testng/Assert$ThrowingRunnable

+###org/testng/Assert
@3.5
+#assertTrue(ZLjava/lang/String;)V
+#assertTrue(Z)V
+#assertFalse(ZLjava/lang/String;)V
+#assertFalse(Z)V
+#fail(Ljava/lang/String;Ljava/lang/Throwable;)V
+#fail(Ljava/lang/String;)V
+#fail()V
+#assertEquals(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertEquals(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#assertEquals(Ljava/lang/String;Ljava/lang/String;)V
+#assertEquals(DDDLjava/lang/String;)V
+#assertEquals(DDD)V
+#assertEquals(FFFLjava/lang/String;)V
+#assertEquals(FFF)V
+#assertEquals(JJLjava/lang/String;)V
+#assertEquals(JJ)V
+#assertEquals(ZZLjava/lang/String;)V
+#assertEquals(ZZ)V
+#assertEquals(BBLjava/lang/String;)V
+#assertEquals(BB)V
+#assertEquals(CCLjava/lang/String;)V
+#assertEquals(CC)V
+#assertEquals(SSLjava/lang/String;)V
+#assertEquals(SS)V
+#assertEquals(IILjava/lang/String;)V
+#assertEquals(II)V
+#assertNotNull(Ljava/lang/Object;)V
+#assertNotNull(Ljava/lang/Object;Ljava/lang/String;)V
+#assertNull(Ljava/lang/Object;)V
+#assertNull(Ljava/lang/Object;Ljava/lang/String;)V
+#assertSame(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#assertSame(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertNotSame(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#assertNotSame(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertEquals(Ljava/util/Collection;Ljava/util/Collection;)V
+#assertEquals(Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/String;)V
+#assertEquals(Ljava/util/Iterator;Ljava/util/Iterator;)V
+#assertEquals(Ljava/util/Iterator;Ljava/util/Iterator;Ljava/lang/String;)V
+#assertEquals(Ljava/lang/Iterable;Ljava/lang/Iterable;)V
+#assertEquals(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/String;)V
+#assertEquals([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;)V
+#assertEqualsNoOrder([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;)V
+#assertEquals([Ljava/lang/Object;[Ljava/lang/Object;)V
+#assertEqualsNoOrder([Ljava/lang/Object;[Ljava/lang/Object;)V
+#assertEquals(Ljava/util/Set;Ljava/util/Set;)V
+#assertEquals(Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#assertEquals(Ljava/util/Map;Ljava/util/Map;)V
+#assertNotEquals(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#assertNotEquals(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertNotEquals(FFFLjava/lang/String;)V
+#assertNotEquals(FFF)V
+#assertNotEquals(DDDLjava/lang/String;)V
+#assertNotEquals(DDD)V
+#assertThrows(Lorg/testng/Assert$ThrowingRunnable;)V
+#assertThrows(Ljava/lang/Class;Lorg/testng/Assert$ThrowingRunnable;)V
+#expectThrows(Ljava/lang/Class;Lorg/testng/Assert$ThrowingRunnable;)Ljava/lang/Throwable;
@3.5.1
-###org/testng/Assert

+###org/testng/AssertJUnit
@3.5
+#assertTrue(Ljava/lang/String;Z)V
+#assertTrue(Z)V
+#assertFalse(Ljava/lang/String;Z)V
+#assertFalse(Z)V
+#fail(Ljava/lang/String;)V
+#fail()V
+#assertEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertEquals(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#assertEquals(Ljava/lang/String;Ljava/lang/String;)V
+#assertEquals(Ljava/lang/String;DDD)V
+#assertEquals(DDD)V
+#assertEquals(Ljava/lang/String;FFF)V
+#assertEquals(FFF)V
+#assertEquals(Ljava/lang/String;JJ)V
+#assertEquals(JJ)V
+#assertEquals(Ljava/lang/String;ZZ)V
+#assertEquals(ZZ)V
+#assertEquals(Ljava/lang/String;BB)V
+#assertEquals(BB)V
+#assertEquals(Ljava/lang/String;CC)V
+#assertEquals(CC)V
+#assertEquals(Ljava/lang/String;SS)V
+#assertEquals(SS)V
+#assertEquals(Ljava/lang/String;II)V
+#assertEquals(II)V
+#assertNotNull(Ljava/lang/Object;)V
+#assertNotNull(Ljava/lang/String;Ljava/lang/Object;)V
+#assertNull(Ljava/lang/Object;)V
+#assertNull(Ljava/lang/String;Ljava/lang/Object;)V
+#assertSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#assertSame(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertNotSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#assertNotSame(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertEquals([B[B)V
+#assertEquals(Ljava/lang/String;[B[B)V
@3.5.1
-###org/testng/AssertJUnit

+###org/testng/ClassMethodMap
@3.5
+#<init>(Ljava/util/List;Lorg/testng/internal/XmlMethodSelector;)V
+#removeAndCheckIfLast(Lorg/testng/ITestNGMethod;Ljava/lang/Object;)Z
+#getInvokedBeforeClassMethods()Ljava/util/Map;
+#getInvokedAfterClassMethods()Ljava/util/Map;
+#clear()V
@3.5.1
-###org/testng/ClassMethodMap

+###org/testng/CommandLineArgs
@3.5
+#<init>()V
@3.5.1
-###org/testng/CommandLineArgs

+###org/testng/ConversionUtils
@3.5
+#<init>()V
+#wrapDataProvider(Ljava/lang/Class;Ljava/util/Collection;)[Ljava/lang/Object;
@3.5.1
-###org/testng/ConversionUtils

+###org/testng/Converter
@3.5
+#<init>()V
+#main([Ljava/lang/String;)V
@3.5.1
-###org/testng/Converter

+###org/testng/DependencyMap
@3.5
+#<init>([Lorg/testng/ITestNGMethod;)V
+#getMethodsThatBelongTo(Ljava/lang/String;Lorg/testng/ITestNGMethod;)Ljava/util/List;
+#getMethodDependingOn(Ljava/lang/String;Lorg/testng/ITestNGMethod;)Lorg/testng/ITestNGMethod;
@3.5.1
-###org/testng/DependencyMap

+###org/testng/FileAssert
@3.5
+#assertDirectory(Ljava/io/File;Ljava/lang/String;)V
+#assertDirectory(Ljava/io/File;)V
+#assertFile(Ljava/io/File;Ljava/lang/String;)V
+#assertFile(Ljava/io/File;)V
+#assertLength(Ljava/io/File;JLjava/lang/String;)V
+#assertLength(Ljava/io/File;J)V
+#assertMinLength(Ljava/io/File;JLjava/lang/String;)V
+#assertMinLength(Ljava/io/File;J)V
+#assertMaxLength(Ljava/io/File;JLjava/lang/String;)V
+#assertMaxLength(Ljava/io/File;J)V
+#assertReadable(Ljava/io/File;Ljava/lang/String;)V
+#assertReadable(Ljava/io/File;)V
+#assertWriteable(Ljava/io/File;Ljava/lang/String;)V
+#assertWriteable(Ljava/io/File;)V
+#assertReadWrite(Ljava/io/File;Ljava/lang/String;)V
+#assertReadWrite(Ljava/io/File;)V
+#fail(Ljava/lang/String;Ljava/lang/Throwable;)V
+#fail(Ljava/lang/String;)V
+#fail()V
@3.5.1
-###org/testng/FileAssert

+###org/testng/IAlterSuiteListener
@3.5
+#alter(Ljava/util/List;)V
@3.5.1
-###org/testng/IAlterSuiteListener

+###org/testng/IAnnotationTransformer
@3.5
+#transform(Lorg/testng/annotations/ITestAnnotation;Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Method;)V
@3.5.1
-###org/testng/IAnnotationTransformer

+###org/testng/IAnnotationTransformer2
@3.5
+#transform(Lorg/testng/annotations/IConfigurationAnnotation;Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Method;)V
+#transform(Lorg/testng/annotations/IDataProviderAnnotation;Ljava/lang/reflect/Method;)V
+#transform(Lorg/testng/annotations/IFactoryAnnotation;Ljava/lang/reflect/Method;)V
@3.5.1
-###org/testng/IAnnotationTransformer2

+###org/testng/IAnnotationTransformer3
@3.5
+#transform(Lorg/testng/annotations/IListenersAnnotation;Ljava/lang/Class;)V
@3.5.1
-###org/testng/IAnnotationTransformer3

+###org/testng/IAttributes
@3.5
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttributeNames()Ljava/util/Set;
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###org/testng/IAttributes

+###org/testng/IClass
@3.5
+#getName()Ljava/lang/String;
+#getXmlTest()Lorg/testng/xml/XmlTest;
+#getXmlClass()Lorg/testng/xml/XmlClass;
+#getTestName()Ljava/lang/String;
+#getRealClass()Ljava/lang/Class;
+#getInstances(Z)[Ljava/lang/Object;
+#getInstanceCount()I
+#getInstanceHashCodes()[J
+#addInstance(Ljava/lang/Object;)V
@3.5.1
-###org/testng/IClass

+###org/testng/IClassListener
@3.5
+#onBeforeClass(Lorg/testng/ITestClass;Lorg/testng/IMethodInstance;)V
+#onAfterClass(Lorg/testng/ITestClass;Lorg/testng/IMethodInstance;)V
@3.5.1
-###org/testng/IClassListener

+###org/testng/IConfigurable
@3.5
+#run(Lorg/testng/IConfigureCallBack;Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/IConfigurable

+###org/testng/IConfigurationListener
@3.5
+#onConfigurationSuccess(Lorg/testng/ITestResult;)V
+#onConfigurationFailure(Lorg/testng/ITestResult;)V
+#onConfigurationSkip(Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/IConfigurationListener

+###org/testng/IConfigurationListener2
@3.5
+#beforeConfiguration(Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/IConfigurationListener2

+###org/testng/IConfigureCallBack
@3.5
+#runConfigurationMethod(Lorg/testng/ITestResult;)V
+#getParameters()[Ljava/lang/Object;
@3.5.1
-###org/testng/IConfigureCallBack

+###org/testng/IExecutionListener
@3.5
+#onExecutionStart()V
+#onExecutionFinish()V
@3.5.1
-###org/testng/IExecutionListener

+###org/testng/IExpectedExceptionsHolder
@3.5
+#getWrongExceptionMessage(Ljava/lang/Throwable;)Ljava/lang/String;
+#isThrowableMatching(Ljava/lang/Throwable;)Z
@3.5.1
-###org/testng/IExpectedExceptionsHolder

+###org/testng/IExtraOutput
@3.5
+#getParameterOutput()Ljava/util/List;
@3.5.1
-###org/testng/IExtraOutput

+###org/testng/IHookable
@3.5
+#run(Lorg/testng/IHookCallBack;Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/IHookable

+###org/testng/IHookCallBack
@3.5
+#runTestMethod(Lorg/testng/ITestResult;)V
+#getParameters()[Ljava/lang/Object;
@3.5.1
-###org/testng/IHookCallBack

+###org/testng/IInstanceInfo
@3.5
+#getInstance()Ljava/lang/Object;
+#getInstanceClass()Ljava/lang/Class;
@3.5.1
-###org/testng/IInstanceInfo

+###org/testng/IInvokedMethod
@3.5
+#isTestMethod()Z
+#isConfigurationMethod()Z
+#getTestMethod()Lorg/testng/ITestNGMethod;
+#getTestResult()Lorg/testng/ITestResult;
+#getDate()J
@3.5.1
-###org/testng/IInvokedMethod

+###org/testng/IInvokedMethodListener
@3.5
+#beforeInvocation(Lorg/testng/IInvokedMethod;Lorg/testng/ITestResult;)V
+#afterInvocation(Lorg/testng/IInvokedMethod;Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/IInvokedMethodListener

+###org/testng/IInvokedMethodListener2
@3.5
+#beforeInvocation(Lorg/testng/IInvokedMethod;Lorg/testng/ITestResult;Lorg/testng/ITestContext;)V
+#afterInvocation(Lorg/testng/IInvokedMethod;Lorg/testng/ITestResult;Lorg/testng/ITestContext;)V
@3.5.1
-###org/testng/IInvokedMethodListener2

+###org/testng/IMethodInstance
@3.5
+#getMethod()Lorg/testng/ITestNGMethod;
+#getInstances()[Ljava/lang/Object;
+#getInstance()Ljava/lang/Object;
@3.5.1
-###org/testng/IMethodInstance

+###org/testng/IMethodInterceptor
@3.5
+#intercept(Ljava/util/List;Lorg/testng/ITestContext;)Ljava/util/List;
@3.5.1
-###org/testng/IMethodInterceptor

+###org/testng/IMethodSelector
@3.5
+#includeMethod(Lorg/testng/IMethodSelectorContext;Lorg/testng/ITestNGMethod;Z)Z
+#setTestMethods(Ljava/util/List;)V
@3.5.1
-###org/testng/IMethodSelector

+###org/testng/IMethodSelectorContext
@3.5
+#isStopped()Z
+#setStopped(Z)V
+#getUserData()Ljava/util/Map;
@3.5.1
-###org/testng/IMethodSelectorContext

+###org/testng/IModuleFactory
@3.5
+#createModule(Lorg/testng/ITestContext;Ljava/lang/Class;)Lcom/google/inject/Module;
@3.5.1
-###org/testng/IModuleFactory

+###org/testng/IObjectFactory
@3.5
+#newInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
@3.5.1
-###org/testng/IObjectFactory

+###org/testng/IObjectFactory2
@3.5
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
@3.5.1
-###org/testng/IObjectFactory2

+###org/testng/IReporter
@3.5
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
@3.5.1
-###org/testng/IReporter

+###org/testng/IResultMap
@3.5
+#addResult(Lorg/testng/ITestResult;Lorg/testng/ITestNGMethod;)V
+#getResults(Lorg/testng/ITestNGMethod;)Ljava/util/Set;
+#getAllResults()Ljava/util/Set;
+#removeResult(Lorg/testng/ITestNGMethod;)V
+#removeResult(Lorg/testng/ITestResult;)V
+#getAllMethods()Ljava/util/Collection;
+#size()I
@3.5.1
-###org/testng/IResultMap

+###org/testng/IRetryAnalyzer
@3.5
+#retry(Lorg/testng/ITestResult;)Z
@3.5.1
-###org/testng/IRetryAnalyzer

+###org/testng/ISuite
@3.5
+#getName()Ljava/lang/String;
+#getResults()Ljava/util/Map;
+#getObjectFactory()Lorg/testng/IObjectFactory;
+#getObjectFactory2()Lorg/testng/IObjectFactory2;
+#getOutputDirectory()Ljava/lang/String;
+#getParallel()Ljava/lang/String;
+#getParentModule()Ljava/lang/String;
+#getGuiceStage()Ljava/lang/String;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getMethodsByGroups()Ljava/util/Map;
+#getInvokedMethods()Ljava/util/Collection;[deprecated]
+#getAllInvokedMethods()Ljava/util/List;
+#getExcludedMethods()Ljava/util/Collection;
+#run()V
+#getHost()Ljava/lang/String;
+#getSuiteState()Lorg/testng/SuiteRunState;
+#getAnnotationFinder()Lorg/testng/internal/annotations/IAnnotationFinder;
+#getXmlSuite()Lorg/testng/xml/XmlSuite;
+#addListener(Lorg/testng/ITestNGListener;)V
+#getParentInjector()Lcom/google/inject/Injector;
+#setParentInjector(Lcom/google/inject/Injector;)V
+#getAllMethods()Ljava/util/List;
@3.5.1
-###org/testng/ISuite

+###org/testng/ISuiteListener
@3.5
+#onStart(Lorg/testng/ISuite;)V
+#onFinish(Lorg/testng/ISuite;)V
@3.5.1
-###org/testng/ISuiteListener

+###org/testng/ISuiteResult
@3.5
+#getPropertyFileName()Ljava/lang/String;
+#getTestContext()Lorg/testng/ITestContext;
@3.5.1
-###org/testng/ISuiteResult

+###org/testng/ITest
@3.5
+#getTestName()Ljava/lang/String;
@3.5.1
-###org/testng/ITest

+###org/testng/ITestClass
@3.5
+#getInstances(Z)[Ljava/lang/Object;
+#getInstanceHashCodes()[J
+#getInstanceCount()I
+#getTestMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeTestMethods()[Lorg/testng/ITestNGMethod;
+#getAfterTestMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeClassMethods()[Lorg/testng/ITestNGMethod;
+#getAfterClassMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeSuiteMethods()[Lorg/testng/ITestNGMethod;
+#getAfterSuiteMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeTestConfigurationMethods()[Lorg/testng/ITestNGMethod;
+#getAfterTestConfigurationMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeGroupsMethods()[Lorg/testng/ITestNGMethod;
+#getAfterGroupsMethods()[Lorg/testng/ITestNGMethod;
@3.5.1
-###org/testng/ITestClass

+###org/testng/ITestClassFinder
@3.5
+#findTestClasses()[Lorg/testng/IClass;
+#getIClass(Ljava/lang/Class;)Lorg/testng/IClass;
@3.5.1
-###org/testng/ITestClassFinder

+###org/testng/ITestContext
@3.5
+#getName()Ljava/lang/String;
+#getStartDate()Ljava/util/Date;
+#getEndDate()Ljava/util/Date;
+#getPassedTests()Lorg/testng/IResultMap;
+#getSkippedTests()Lorg/testng/IResultMap;
+#getFailedButWithinSuccessPercentageTests()Lorg/testng/IResultMap;
+#getFailedTests()Lorg/testng/IResultMap;
+#getIncludedGroups()[Ljava/lang/String;
+#getExcludedGroups()[Ljava/lang/String;
+#getOutputDirectory()Ljava/lang/String;
+#getSuite()Lorg/testng/ISuite;
+#getAllTestMethods()[Lorg/testng/ITestNGMethod;
+#getHost()Ljava/lang/String;
+#getExcludedMethods()Ljava/util/Collection;
+#getPassedConfigurations()Lorg/testng/IResultMap;
+#getSkippedConfigurations()Lorg/testng/IResultMap;
+#getFailedConfigurations()Lorg/testng/IResultMap;
+#getCurrentXmlTest()Lorg/testng/xml/XmlTest;
+#getGuiceModules(Ljava/lang/Class;)Ljava/util/List;
+#getInjector(Ljava/util/List;)Lcom/google/inject/Injector;
+#getInjector(Lorg/testng/IClass;)Lcom/google/inject/Injector;
+#addInjector(Ljava/util/List;Lcom/google/inject/Injector;)V
@3.5.1
-###org/testng/ITestContext

+###org/testng/ITestListener
@3.5
+#onTestStart(Lorg/testng/ITestResult;)V
+#onTestSuccess(Lorg/testng/ITestResult;)V
+#onTestFailure(Lorg/testng/ITestResult;)V
+#onTestSkipped(Lorg/testng/ITestResult;)V
+#onTestFailedButWithinSuccessPercentage(Lorg/testng/ITestResult;)V
+#onStart(Lorg/testng/ITestContext;)V
+#onFinish(Lorg/testng/ITestContext;)V
@3.5.1
-###org/testng/ITestListener

+###org/testng/ITestMethodFinder
@3.5
+#getTestMethods(Ljava/lang/Class;Lorg/testng/xml/XmlTest;)[Lorg/testng/ITestNGMethod;
+#getBeforeTestMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterTestMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeClassMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterClassMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeSuiteMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterSuiteMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeTestConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterTestConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeGroupsConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterGroupsConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
@3.5.1
-###org/testng/ITestMethodFinder

+###org/testng/ITestNGListener
@3.5
@3.5.1
-###org/testng/ITestNGListener

+###org/testng/ITestNGListenerFactory
@3.5
+#createListener(Ljava/lang/Class;)Lorg/testng/ITestNGListener;
@3.5.1
-###org/testng/ITestNGListenerFactory

+###org/testng/ITestNGMethod
@3.5
+#getRealClass()Ljava/lang/Class;
+#getTestClass()Lorg/testng/ITestClass;
+#setTestClass(Lorg/testng/ITestClass;)V
+#getMethod()Ljava/lang/reflect/Method;[deprecated]
+#getMethodName()Ljava/lang/String;
+#getInstances()[Ljava/lang/Object;[deprecated]
+#getInstance()Ljava/lang/Object;
+#getInstanceHashCodes()[J
+#getGroups()[Ljava/lang/String;
+#getGroupsDependedUpon()[Ljava/lang/String;
+#getMissingGroup()Ljava/lang/String;
+#setMissingGroup(Ljava/lang/String;)V
+#getBeforeGroups()[Ljava/lang/String;
+#getAfterGroups()[Ljava/lang/String;
+#getMethodsDependedUpon()[Ljava/lang/String;
+#addMethodDependedUpon(Ljava/lang/String;)V
+#isTest()Z
+#isBeforeMethodConfiguration()Z
+#isAfterMethodConfiguration()Z
+#isBeforeClassConfiguration()Z
+#isAfterClassConfiguration()Z
+#isBeforeSuiteConfiguration()Z
+#isAfterSuiteConfiguration()Z
+#isBeforeTestConfiguration()Z
+#isAfterTestConfiguration()Z
+#isBeforeGroupsConfiguration()Z
+#isAfterGroupsConfiguration()Z
+#getTimeOut()J
+#setTimeOut(J)V
+#getInvocationCount()I
+#setInvocationCount(I)V
+#getTotalInvocationCount()I
+#getSuccessPercentage()I
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getDate()J
+#setDate(J)V
+#canRunFromClass(Lorg/testng/IClass;)Z
+#isAlwaysRun()Z
+#getThreadPoolSize()I
+#setThreadPoolSize(I)V
+#getEnabled()Z
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#incrementCurrentInvocationCount()V
+#getCurrentInvocationCount()I
+#setParameterInvocationCount(I)V
+#getParameterInvocationCount()I
+#clone()Lorg/testng/ITestNGMethod;
+#getRetryAnalyzer()Lorg/testng/IRetryAnalyzer;
+#setRetryAnalyzer(Lorg/testng/IRetryAnalyzer;)V
+#skipFailedInvocations()Z
+#setSkipFailedInvocations(Z)V
+#getInvocationTimeOut()J
+#ignoreMissingDependencies()Z
+#setIgnoreMissingDependencies(Z)V
+#getInvocationNumbers()Ljava/util/List;
+#setInvocationNumbers(Ljava/util/List;)V
+#addFailedInvocationNumber(I)V
+#getFailedInvocationNumbers()Ljava/util/List;
+#getPriority()I
+#setPriority(I)V
+#getXmlTest()Lorg/testng/xml/XmlTest;
+#getConstructorOrMethod()Lorg/testng/internal/ConstructorOrMethod;
+#findMethodParameters(Lorg/testng/xml/XmlTest;)Ljava/util/Map;
@3.5.1
-###org/testng/ITestNGMethod

+###org/testng/ITestObjectFactory
@3.5
@3.5.1
-###org/testng/ITestObjectFactory

+###org/testng/ITestResult
@3.5
+#getStatus()I
+#setStatus(I)V
+#getMethod()Lorg/testng/ITestNGMethod;
+#getParameters()[Ljava/lang/Object;
+#setParameters([Ljava/lang/Object;)V
+#getTestClass()Lorg/testng/IClass;
+#getThrowable()Ljava/lang/Throwable;
+#setThrowable(Ljava/lang/Throwable;)V
+#getStartMillis()J
+#getEndMillis()J
+#setEndMillis(J)V
+#getName()Ljava/lang/String;
+#isSuccess()Z
+#getHost()Ljava/lang/String;
+#getInstance()Ljava/lang/Object;
+#getTestName()Ljava/lang/String;
+#getInstanceName()Ljava/lang/String;
+#getTestContext()Lorg/testng/ITestContext;
@3.5.1
-###org/testng/ITestResult

+###org/testng/ITestRunnerFactory
@3.5
+#newTestRunner(Lorg/testng/ISuite;Lorg/testng/xml/XmlTest;Ljava/util/Collection;Ljava/util/List;)Lorg/testng/TestRunner;
@3.5.1
-###org/testng/ITestRunnerFactory

+###org/testng/Reporter
@3.5
+#<init>()V
+#setCurrentTestResult(Lorg/testng/ITestResult;)V
+#getOutput()Ljava/util/List;
+#clear()V
+#setEscapeHtml(Z)V
+#log(Ljava/lang/String;)V
+#log(Ljava/lang/String;IZ)V
+#log(Ljava/lang/String;Z)V
+#log(Ljava/lang/String;I)V
+#getCurrentTestResult()Lorg/testng/ITestResult;
+#getOutput(Lorg/testng/ITestResult;)Ljava/util/List;
@3.5.1
-###org/testng/Reporter

+###org/testng/ReporterConfig$Property
@3.5
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
@3.5.1
-###org/testng/ReporterConfig$Property

+###org/testng/ReporterConfig
@3.5
+#<init>()V
+#addProperty(Lorg/testng/ReporterConfig$Property;)V
+#getProperties()Ljava/util/List;
+#getClassName()Ljava/lang/String;
+#setClassName(Ljava/lang/String;)V
+#serialize()Ljava/lang/String;
+#deserialize(Ljava/lang/String;)Lorg/testng/ReporterConfig;
+#newReporterInstance()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/ReporterConfig

+###org/testng/SkipException
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isSkip()Z
@3.5.1
-###org/testng/SkipException

+###org/testng/SuiteRunner
@3.5
+#<init>(Lorg/testng/internal/IConfiguration;Lorg/testng/xml/XmlSuite;Ljava/lang/String;)V
+#<init>(Lorg/testng/internal/IConfiguration;Lorg/testng/xml/XmlSuite;Ljava/lang/String;Lorg/testng/ITestRunnerFactory;)V
+#<init>(Lorg/testng/internal/IConfiguration;Lorg/testng/xml/XmlSuite;Ljava/lang/String;Lorg/testng/ITestRunnerFactory;Z)V
+#getXmlSuite()Lorg/testng/xml/XmlSuite;
+#getName()Ljava/lang/String;
+#setObjectFactory(Lorg/testng/ITestObjectFactory;)V
+#setReportResults(Z)V
+#getParallel()Ljava/lang/String;
+#getParentModule()Ljava/lang/String;
+#getGuiceStage()Ljava/lang/String;
+#getParentInjector()Lcom/google/inject/Injector;
+#setParentInjector(Lcom/google/inject/Injector;)V
+#run()V
+#getReporters()Ljava/util/List;
+#addListener(Lorg/testng/ITestNGListener;)V
+#getOutputDirectory()Ljava/lang/String;
+#getResults()Ljava/util/Map;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getMethodsByGroups()Ljava/util/Map;
+#getInvokedMethods()Ljava/util/Collection;
+#getExcludedMethods()Ljava/util/Collection;
+#getObjectFactory()Lorg/testng/IObjectFactory;
+#getObjectFactory2()Lorg/testng/IObjectFactory2;
+#getAnnotationFinder()Lorg/testng/internal/annotations/IAnnotationFinder;
+#ppp(Ljava/lang/String;)V
+#setHost(Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#getSuiteState()Lorg/testng/SuiteRunState;
+#setSkipFailedInvocationCounts(Ljava/lang/Boolean;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttributeNames()Ljava/util/Set;
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#afterInvocation(Lorg/testng/IInvokedMethod;Lorg/testng/ITestResult;)V
+#beforeInvocation(Lorg/testng/IInvokedMethod;Lorg/testng/ITestResult;)V
+#getAllInvokedMethods()Ljava/util/List;
+#getAllMethods()Ljava/util/List;
@3.5.1
-###org/testng/SuiteRunner

+###org/testng/SuiteRunnerWorker
@3.5
+#<init>(Lorg/testng/ISuite;Lorg/testng/internal/SuiteRunnerMap;ILjava/lang/String;)V
+#run()V
+#compareTo(Lorg/testng/internal/thread/graph/IWorker;)I
+#getTasks()Ljava/util/List;
+#toString()Ljava/lang/String;
+#getTimeOut()J
+#getPriority()I
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/testng/SuiteRunnerWorker

+###org/testng/SuiteRunState
@3.5
+#<init>()V
+#failed()V
+#isFailed()Z
@3.5.1
-###org/testng/SuiteRunState

+###org/testng/TestException
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.5.1
-###org/testng/TestException

+###org/testng/TestListenerAdapter
@3.5
+#<init>()V
+#onTestSuccess(Lorg/testng/ITestResult;)V
+#onTestFailure(Lorg/testng/ITestResult;)V
+#onTestSkipped(Lorg/testng/ITestResult;)V
+#onTestFailedButWithinSuccessPercentage(Lorg/testng/ITestResult;)V
+#onStart(Lorg/testng/ITestContext;)V
+#onFinish(Lorg/testng/ITestContext;)V
+#getFailedButWithinSuccessPercentageTests()Ljava/util/List;
+#getFailedTests()Ljava/util/List;
+#getPassedTests()Ljava/util/List;
+#getSkippedTests()Ljava/util/List;
+#setAllTestMethods(Ljava/util/List;)V
+#setFailedButWithinSuccessPercentageTests(Ljava/util/List;)V
+#setFailedTests(Ljava/util/List;)V
+#setPassedTests(Ljava/util/List;)V
+#setSkippedTests(Ljava/util/List;)V
+#onTestStart(Lorg/testng/ITestResult;)V
+#getTestContexts()Ljava/util/List;
+#getConfigurationFailures()Ljava/util/List;
+#onConfigurationFailure(Lorg/testng/ITestResult;)V
+#getConfigurationSkips()Ljava/util/List;
+#beforeConfiguration(Lorg/testng/ITestResult;)V
+#onConfigurationSkip(Lorg/testng/ITestResult;)V
+#onConfigurationSuccess(Lorg/testng/ITestResult;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/TestListenerAdapter

+###org/testng/TestNG$ExitCodeListener
@3.5
+#<init>()V
+#<init>(Lorg/testng/TestNG;)V
+#beforeConfiguration(Lorg/testng/ITestResult;)V
+#onTestFailure(Lorg/testng/ITestResult;)V
+#onTestSkipped(Lorg/testng/ITestResult;)V
+#onTestFailedButWithinSuccessPercentage(Lorg/testng/ITestResult;)V
+#onTestSuccess(Lorg/testng/ITestResult;)V
+#onStart(Lorg/testng/ITestContext;)V
+#onFinish(Lorg/testng/ITestContext;)V
+#onTestStart(Lorg/testng/ITestResult;)V
+#onConfigurationFailure(Lorg/testng/ITestResult;)V
+#onConfigurationSkip(Lorg/testng/ITestResult;)V
+#onConfigurationSuccess(Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/TestNG$ExitCodeListener

+###org/testng/TestNG
@3.5
+#<init>()V
+#<init>(Z)V
+#getStatus()I
+#setOutputDirectory(Ljava/lang/String;)V
+#setUseDefaultListeners(Z)V
+#setTestJar(Ljava/lang/String;)V
+#setXmlPathInJar(Ljava/lang/String;)V
+#initializeSuitesAndJarFile()V
+#setThreadCount(I)V
+#setParallel(Ljava/lang/String;)V[deprecated]
+#setParallel(Lorg/testng/xml/XmlSuite$ParallelMode;)V
+#setCommandLineSuite(Lorg/testng/xml/XmlSuite;)V
+#setTestClasses([Ljava/lang/Class;)V
+#addMethodSelector(Ljava/lang/String;I)V
+#setTestSuites(Ljava/util/List;)V
+#setXmlSuites(Ljava/util/List;)V
+#setExcludedGroups(Ljava/lang/String;)V
+#setGroups(Ljava/lang/String;)V
+#setObjectFactory(Ljava/lang/Class;)V
+#setObjectFactory(Lorg/testng/ITestObjectFactory;)V
+#setListenerClasses(Ljava/util/List;)V
+#addListener(Ljava/lang/Object;)V
+#addListener(Lorg/testng/IInvokedMethodListener;)V
+#addListener(Lorg/testng/ISuiteListener;)V
+#addListener(Lorg/testng/ITestListener;)V
+#addListener(Lorg/testng/IClassListener;)V
+#addListener(Lorg/testng/IReporter;)V
+#addInvokedMethodListener(Lorg/testng/IInvokedMethodListener;)V
+#getReporters()Ljava/util/Set;
+#getTestListeners()Ljava/util/List;
+#getSuiteListeners()Ljava/util/List;
+#setVerbose(I)V
+#run()V
+#addAlterSuiteListener(Lorg/testng/IAlterSuiteListener;)V
+#addExecutionListener(Lorg/testng/IExecutionListener;)V
+#runSuitesLocally()Ljava/util/List;
+#main([Ljava/lang/String;)V
+#privateMain([Ljava/lang/String;Lorg/testng/ITestListener;)Lorg/testng/TestNG;
+#setSuiteThreadPoolSize(Ljava/lang/Integer;)V
+#getSuiteThreadPoolSize()Ljava/lang/Integer;
+#setRandomizeSuites(Z)V
+#setSourcePath(Ljava/lang/String;)V
+#configure(Ljava/util/Map;)V[deprecated]
+#setTestNames(Ljava/util/List;)V
+#setSkipFailedInvocationCounts(Ljava/lang/Boolean;)V
+#setMaster(Ljava/lang/String;)V
+#setSlave(Ljava/lang/String;)V
+#setJUnit(Ljava/lang/Boolean;)V
+#setMixed(Ljava/lang/Boolean;)V
+#setTestNGVersion()V[deprecated]
+#isJdk14()Z[deprecated]
+#hasFailure()Z
+#hasFailureWithinSuccessPercentage()Z
+#hasSkip()Z
+#getOutputDirectory()Ljava/lang/String;
+#getAnnotationTransformer()Lorg/testng/IAnnotationTransformer;
+#setAnnotationTransformer(Lorg/testng/IAnnotationTransformer;)V
+#getDefaultSuiteName()Ljava/lang/String;
+#setDefaultSuiteName(Ljava/lang/String;)V
+#getDefaultTestName()Ljava/lang/String;
+#setDefaultTestName(Ljava/lang/String;)V
+#setConfigFailurePolicy(Ljava/lang/String;)V
+#getConfigFailurePolicy()Ljava/lang/String;
+#getDefault()Lorg/testng/TestNG;[deprecated]
+#setHasFailure(Z)V[deprecated]
+#setHasFailureWithinSuccessPercentage(Z)V[deprecated]
+#setHasSkip(Z)V[deprecated]
+#setMethodInterceptor(Lorg/testng/IMethodInterceptor;)V
+#setDataProviderThreadCount(I)V
+#addClassLoader(Ljava/lang/ClassLoader;)V
+#setPreserveOrder(Z)V
+#setGroupByInstances(Z)V
+#setServiceLoaderClassLoader(Ljava/net/URLClassLoader;)V
+#getServiceLoaderListeners()Ljava/util/List;
@3.5.1
-###org/testng/TestNG

+###org/testng/TestNGAntTask$Mode
@3.5
+#values()[Lorg/testng/TestNGAntTask$Mode;
+#valueOf(Ljava/lang/String;)Lorg/testng/TestNGAntTask$Mode;
@3.5.1
-###org/testng/TestNGAntTask$Mode

+###org/testng/TestNGAntTask$TestNGLogSH
@3.5
+#<init>(Lorg/apache/tools/ant/Task;IIZ)V
@3.5.1
-###org/testng/TestNGAntTask$TestNGLogSH

+###org/testng/TestNGAntTask
@3.5
+#<init>()V
+#setParallel(Ljava/lang/String;)V
+#setThreadCount(Ljava/lang/String;)V
+#setDataProviderThreadCount(Ljava/lang/String;)V
+#setUseDefaultListeners(Ljava/lang/String;)V
+#setHaltonfailure(Z)V
+#setOnHaltTarget(Ljava/lang/String;)V
+#setFailureProperty(Ljava/lang/String;)V
+#setHaltonskipped(Z)V
+#setSkippedProperty(Ljava/lang/String;)V
+#setHaltonFSP(Z)V
+#setFSPProperty(Ljava/lang/String;)V
+#setDelegateCommandSystemProperties(Z)V
+#setDumpCommand(Z)V
+#setDumpEnv(Z)V
+#setDumpSys(Z)V
+#setEnableAssert(Z)V
+#setWorkingDir(Ljava/io/File;)V
+#setJvm(Ljava/lang/String;)V
+#setTimeout(Ljava/lang/Integer;)V
+#createJvmarg()Lorg/apache/tools/ant/types/Commandline$Argument;
+#addSysproperty(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#addEnv(Lorg/apache/tools/ant/types/Environment$Variable;)V
+#createClasspath()Lorg/apache/tools/ant/types/Path;
+#createBootclasspath()Lorg/apache/tools/ant/types/Path;
+#setClasspath(Lorg/apache/tools/ant/types/Path;)V
+#setClasspathRef(Lorg/apache/tools/ant/types/Reference;)V
+#addXmlfileset(Lorg/apache/tools/ant/types/FileSet;)V
+#setXmlfilesetRef(Lorg/apache/tools/ant/types/Reference;)V
+#addClassfileset(Lorg/apache/tools/ant/types/FileSet;)V
+#setClassfilesetRef(Lorg/apache/tools/ant/types/Reference;)V
+#setTestNames(Ljava/lang/String;)V
+#setSuiteRunnerClass(Ljava/lang/String;)V
+#setSuiteName(Ljava/lang/String;)V
+#setTestName(Ljava/lang/String;)V
+#setJUnit(Z)V
+#setMode(Lorg/testng/TestNGAntTask$Mode;)V
+#setOutputDir(Ljava/io/File;)V
+#setTestJar(Ljava/io/File;)V
+#setGroups(Ljava/lang/String;)V
+#setExcludedGroups(Ljava/lang/String;)V
+#setVerbose(Ljava/lang/Integer;)V
+#setReporter(Ljava/lang/String;)V
+#setObjectFactory(Ljava/lang/String;)V
+#setTestRunnerFactory(Ljava/lang/String;)V
+#setSuiteThreadPoolSize(Ljava/lang/Integer;)V
+#setListener(Ljava/lang/String;)V[deprecated]
+#setListeners(Ljava/lang/String;)V
+#setMethodSelectors(Ljava/lang/String;)V
+#setConfigFailurePolicy(Ljava/lang/String;)V
+#setRandomizeSuites(Ljava/lang/Boolean;)V
+#setMethods(Ljava/lang/String;)V
+#execute()V
+#addConfiguredReporter(Lorg/testng/ReporterConfig;)V
+#setSkipFailedInvocationCounts(Z)V
+#setXmlPathInJar(Ljava/lang/String;)V
+#addConfiguredPropertySet(Lorg/apache/tools/ant/types/PropertySet;)V
@3.5.1
-###org/testng/TestNGAntTask

+###org/testng/TestNGException
@3.5
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.5.1
-###org/testng/TestNGException

+###org/testng/TestNGUtils
@3.5
+#<init>()V
+#createITestNGMethod(Lorg/testng/ITestNGMethod;Ljava/lang/reflect/Method;)Lorg/testng/ITestNGMethod;
@3.5.1
-###org/testng/TestNGUtils

+###org/testng/TestRunner
@3.5
+#<init>(Lorg/testng/internal/IConfiguration;Lorg/testng/ISuite;Lorg/testng/xml/XmlTest;ZLjava/util/Collection;Ljava/util/List;)V
+#getInvoker()Lorg/testng/internal/IInvoker;
+#getBeforeSuiteMethods()[Lorg/testng/ITestNGMethod;
+#getAfterSuiteMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeTestConfigurationMethods()[Lorg/testng/ITestNGMethod;
+#getAfterTestConfigurationMethods()[Lorg/testng/ITestNGMethod;
+#getTestClasses()Ljava/util/Collection;
+#setTestName(Ljava/lang/String;)V
+#setOutputDirectory(Ljava/lang/String;)V
+#run()V
+#createWorkers(Ljava/util/List;)Ljava/util/List;
+#getName()Ljava/lang/String;
+#getStartDate()Ljava/util/Date;
+#getEndDate()Ljava/util/Date;
+#getPassedTests()Lorg/testng/IResultMap;
+#getSkippedTests()Lorg/testng/IResultMap;
+#getFailedTests()Lorg/testng/IResultMap;
+#getFailedButWithinSuccessPercentageTests()Lorg/testng/IResultMap;
+#getIncludedGroups()[Ljava/lang/String;
+#getExcludedGroups()[Ljava/lang/String;
+#getOutputDirectory()Ljava/lang/String;
+#getSuite()Lorg/testng/ISuite;
+#getAllTestMethods()[Lorg/testng/ITestNGMethod;
+#getHost()Ljava/lang/String;
+#getExcludedMethods()Ljava/util/Collection;
+#getFailedConfigurations()Lorg/testng/IResultMap;
+#getPassedConfigurations()Lorg/testng/IResultMap;
+#getSkippedConfigurations()Lorg/testng/IResultMap;
+#addPassedTest(Lorg/testng/ITestNGMethod;Lorg/testng/ITestResult;)V
+#getPassedTests(Lorg/testng/ITestNGMethod;)Ljava/util/Set;
+#getFailedTests(Lorg/testng/ITestNGMethod;)Ljava/util/Set;
+#getSkippedTests(Lorg/testng/ITestNGMethod;)Ljava/util/Set;
+#addSkippedTest(Lorg/testng/ITestNGMethod;Lorg/testng/ITestResult;)V
+#addInvokedMethod(Lorg/testng/internal/InvokedMethod;)V
+#addFailedTest(Lorg/testng/ITestNGMethod;Lorg/testng/ITestResult;)V
+#addFailedButWithinSuccessPercentageTest(Lorg/testng/ITestNGMethod;Lorg/testng/ITestResult;)V
+#getTest()Lorg/testng/xml/XmlTest;
+#getTestListeners()Ljava/util/List;
+#getConfigurationListeners()Ljava/util/List;
+#getVerbose()I
+#setVerbose(I)V
+#addListener(Ljava/lang/Object;)V
+#addTestListener(Lorg/testng/ITestListener;)V
+#addClassListener(Lorg/testng/IClassListener;)V
+#getInvokedMethods()Ljava/util/List;
+#setMethodInterceptor(Lorg/testng/IMethodInterceptor;)V[deprecated]
+#addMethodInterceptor(Lorg/testng/IMethodInterceptor;)V
+#getCurrentXmlTest()Lorg/testng/xml/XmlTest;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttributeNames()Ljava/util/Set;
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getGuiceModules(Ljava/lang/Class;)Ljava/util/List;
+#getInjector(Ljava/util/List;)Lcom/google/inject/Injector;
+#getInjector(Lorg/testng/IClass;)Lcom/google/inject/Injector;
+#addInjector(Ljava/util/List;Lcom/google/inject/Injector;)V
@3.5.1
-###org/testng/TestRunner

+###org/testng/TimeBombSkipException
@3.5
+#<init>(Ljava/lang/String;Ljava/util/Date;)V
+#<init>(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Date;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#isSkip()Z
+#getMessage()Ljava/lang/String;
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
@3.5.1
-###org/testng/TimeBombSkipException

+###org/testng/annotations/AfterClass
@3.5
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#timeOut()J
@3.5.1
-###org/testng/annotations/AfterClass

+###org/testng/annotations/AfterGroups
@3.5
+#value()[Ljava/lang/String;
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#timeOut()J
@3.5.1
-###org/testng/annotations/AfterGroups

+###org/testng/annotations/AfterMethod
@3.5
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#lastTimeOnly()Z
+#timeOut()J
@3.5.1
-###org/testng/annotations/AfterMethod

+###org/testng/annotations/AfterSuite
@3.5
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#timeOut()J
@3.5.1
-###org/testng/annotations/AfterSuite

+###org/testng/annotations/AfterTest
@3.5
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#timeOut()J
@3.5.1
-###org/testng/annotations/AfterTest

+###org/testng/annotations/BeforeClass
@3.5
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#timeOut()J
@3.5.1
-###org/testng/annotations/BeforeClass

+###org/testng/annotations/BeforeGroups
@3.5
+#value()[Ljava/lang/String;
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#timeOut()J
@3.5.1
-###org/testng/annotations/BeforeGroups

+###org/testng/annotations/BeforeMethod
@3.5
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#firstTimeOnly()Z
+#timeOut()J
@3.5.1
-###org/testng/annotations/BeforeMethod

+###org/testng/annotations/BeforeSuite
@3.5
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#timeOut()J
@3.5.1
-###org/testng/annotations/BeforeSuite

+###org/testng/annotations/BeforeTest
@3.5
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
+#timeOut()J
@3.5.1
-###org/testng/annotations/BeforeTest

+###org/testng/annotations/Configuration
@3.5
+#beforeTestClass()Z
+#afterTestClass()Z
+#beforeTestMethod()Z
+#afterTestMethod()Z
+#beforeSuite()Z
+#afterSuite()Z
+#beforeTest()Z
+#afterTest()Z
+#beforeGroups()[Ljava/lang/String;
+#afterGroups()[Ljava/lang/String;
+#parameters()[Ljava/lang/String;[deprecated]
+#enabled()Z
+#groups()[Ljava/lang/String;
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#alwaysRun()Z
+#inheritGroups()Z
+#description()Ljava/lang/String;
@3.5.1
-###org/testng/annotations/Configuration

+###org/testng/annotations/DataProvider
@3.5
+#name()Ljava/lang/String;
+#parallel()Z
+#indices()[I
@3.5.1
-###org/testng/annotations/DataProvider

+###org/testng/annotations/ExpectedExceptions
@3.5
+#value()[Ljava/lang/Class;
@3.5.1
-###org/testng/annotations/ExpectedExceptions

+###org/testng/annotations/Factory
@3.5
+#parameters()[Ljava/lang/String;[deprecated]
+#dataProvider()Ljava/lang/String;
+#dataProviderClass()Ljava/lang/Class;
+#enabled()Z
@3.5.1
-###org/testng/annotations/Factory

+###org/testng/annotations/Guice
@3.5
+#modules()[Ljava/lang/Class;
+#moduleFactory()Ljava/lang/Class;
@3.5.1
-###org/testng/annotations/Guice

+###org/testng/annotations/IAnnotation
@3.5
@3.5.1
-###org/testng/annotations/IAnnotation

+###org/testng/annotations/IConfigurationAnnotation
@3.5
+#getBeforeTestClass()Z
+#getAfterTestClass()Z
+#getBeforeTestMethod()Z
+#getAfterTestMethod()Z
+#getBeforeSuite()Z
+#getAfterSuite()Z
+#getBeforeTest()Z
+#getAfterTest()Z
+#getAlwaysRun()Z
+#getInheritGroups()Z
+#getBeforeGroups()[Ljava/lang/String;
+#getAfterGroups()[Ljava/lang/String;
+#isFakeConfiguration()Z
@3.5.1
-###org/testng/annotations/IConfigurationAnnotation

+###org/testng/annotations/IDataProviderAnnotation
@3.5
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#isParallel()Z
+#setParallel(Z)V
@3.5.1
-###org/testng/annotations/IDataProviderAnnotation

+###org/testng/annotations/IExpectedExceptionsAnnotation
@3.5
+#getValue()[Ljava/lang/Class;
@3.5.1
-###org/testng/annotations/IExpectedExceptionsAnnotation

+###org/testng/annotations/IFactoryAnnotation
@3.5
@3.5.1
-###org/testng/annotations/IFactoryAnnotation

+###org/testng/annotations/IListenersAnnotation
@3.5
+#getValue()[Ljava/lang/Class;
+#setValue([Ljava/lang/Class;)V
@3.5.1
-###org/testng/annotations/IListenersAnnotation

+###org/testng/annotations/IObjectFactoryAnnotation
@3.5
@3.5.1
-###org/testng/annotations/IObjectFactoryAnnotation

+###org/testng/annotations/IParameterizable
@3.5
+#getParameters()[Ljava/lang/String;[deprecated]
+#getEnabled()Z
+#setEnabled(Z)V
@3.5.1
-###org/testng/annotations/IParameterizable

+###org/testng/annotations/IParametersAnnotation
@3.5
+#getValue()[Ljava/lang/String;
@3.5.1
-###org/testng/annotations/IParametersAnnotation

+###org/testng/annotations/ITestAnnotation
@3.5
+#getInvocationCount()I
+#setInvocationCount(I)V
+#getThreadPoolSize()I
+#setThreadPoolSize(I)V
+#getSuccessPercentage()I
+#setSuccessPercentage(I)V
+#getAlwaysRun()Z
+#setAlwaysRun(Z)V
+#getExpectedExceptions()[Ljava/lang/Class;
+#setExpectedExceptions([Ljava/lang/Class;)V
+#getExpectedExceptionsMessageRegExp()Ljava/lang/String;
+#setExpectedExceptionsMessageRegExp(Ljava/lang/String;)V
+#getSuiteName()Ljava/lang/String;
+#setSuiteName(Ljava/lang/String;)V
+#getTestName()Ljava/lang/String;
+#setTestName(Ljava/lang/String;)V
+#getSequential()Z
+#setSequential(Z)V
+#getSingleThreaded()Z
+#setSingleThreaded(Z)V
+#getDataProvider()Ljava/lang/String;
+#setDataProvider(Ljava/lang/String;)V
+#getDataProviderClass()Ljava/lang/Class;
+#setDataProviderClass(Ljava/lang/Class;)V
+#getRetryAnalyzer()Lorg/testng/IRetryAnalyzer;
+#setRetryAnalyzer(Ljava/lang/Class;)V
+#skipFailedInvocations()Z
+#setSkipFailedInvocations(Z)V
+#invocationTimeOut()J
+#setInvocationTimeOut(J)V
+#ignoreMissingDependencies()Z
+#setIgnoreMissingDependencies(Z)V
+#getPriority()I
+#setPriority(I)V
@3.5.1
-###org/testng/annotations/ITestAnnotation

+###org/testng/annotations/ITestOrConfiguration
@3.5
+#getTimeOut()J
+#setTimeOut(J)V
+#getGroups()[Ljava/lang/String;
+#setGroups([Ljava/lang/String;)V
+#getDependsOnGroups()[Ljava/lang/String;
+#setDependsOnGroups([Ljava/lang/String;)V
+#getDependsOnMethods()[Ljava/lang/String;
+#setDependsOnMethods([Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
@3.5.1
-###org/testng/annotations/ITestOrConfiguration

+###org/testng/annotations/Listeners
@3.5
+#value()[Ljava/lang/Class;
@3.5.1
-###org/testng/annotations/Listeners

+###org/testng/annotations/NoInjection
@3.5
@3.5.1
-###org/testng/annotations/NoInjection

+###org/testng/annotations/ObjectFactory
@3.5
@3.5.1
-###org/testng/annotations/ObjectFactory

+###org/testng/annotations/Optional
@3.5
+#value()Ljava/lang/String;
@3.5.1
-###org/testng/annotations/Optional

+###org/testng/annotations/Parameters
@3.5
+#value()[Ljava/lang/String;
@3.5.1
-###org/testng/annotations/Parameters

+###org/testng/annotations/Test
@3.5
+#groups()[Ljava/lang/String;
+#enabled()Z
+#parameters()[Ljava/lang/String;[deprecated]
+#dependsOnGroups()[Ljava/lang/String;
+#dependsOnMethods()[Ljava/lang/String;
+#timeOut()J
+#invocationTimeOut()J
+#invocationCount()I
+#threadPoolSize()I
+#successPercentage()I
+#dataProvider()Ljava/lang/String;
+#dataProviderClass()Ljava/lang/Class;
+#alwaysRun()Z
+#description()Ljava/lang/String;
+#expectedExceptions()[Ljava/lang/Class;
+#expectedExceptionsMessageRegExp()Ljava/lang/String;
+#suiteName()Ljava/lang/String;
+#testName()Ljava/lang/String;
+#sequential()Z
+#singleThreaded()Z
+#retryAnalyzer()Ljava/lang/Class;
+#skipFailedInvocations()Z
+#ignoreMissingDependencies()Z
+#priority()I
@3.5.1
-###org/testng/annotations/Test

+###org/testng/annotations/TestInstance
@3.5
@3.5.1
-###org/testng/annotations/TestInstance

+###org/testng/asserts/Assertion
@3.5
+#<init>()V
+#executeAssert(Lorg/testng/asserts/IAssert;)V
+#onAssertSuccess(Lorg/testng/asserts/IAssert;)V
+#onAssertFailure(Lorg/testng/asserts/IAssert;)V[deprecated]
+#onAssertFailure(Lorg/testng/asserts/IAssert;Ljava/lang/AssertionError;)V
+#onBeforeAssert(Lorg/testng/asserts/IAssert;)V
+#onAfterAssert(Lorg/testng/asserts/IAssert;)V
+#assertTrue(ZLjava/lang/String;)V
+#assertTrue(Z)V
+#assertFalse(ZLjava/lang/String;)V
+#assertFalse(Z)V
+#fail(Ljava/lang/String;Ljava/lang/Throwable;)V
+#fail(Ljava/lang/String;)V
+#fail()V
+#assertEquals(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertEquals(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#assertEquals(Ljava/lang/String;Ljava/lang/String;)V
+#assertEquals(DDDLjava/lang/String;)V
+#assertEquals(DDD)V
+#assertEquals(FFFLjava/lang/String;)V
+#assertEquals(FFF)V
+#assertEquals(JJLjava/lang/String;)V
+#assertEquals(JJ)V
+#assertEquals(ZZLjava/lang/String;)V
+#assertEquals(ZZ)V
+#assertEquals(BBLjava/lang/String;)V
+#assertEquals(BB)V
+#assertEquals(CCLjava/lang/String;)V
+#assertEquals(CC)V
+#assertEquals(SSLjava/lang/String;)V
+#assertEquals(SS)V
+#assertEquals(IILjava/lang/String;)V
+#assertEquals(II)V
+#assertNotNull(Ljava/lang/Object;)V
+#assertNotNull(Ljava/lang/Object;Ljava/lang/String;)V
+#assertNull(Ljava/lang/Object;)V
+#assertNull(Ljava/lang/Object;Ljava/lang/String;)V
+#assertSame(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#assertSame(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertNotSame(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#assertNotSame(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertEquals(Ljava/util/Collection;Ljava/util/Collection;)V
+#assertEquals(Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/String;)V
+#assertEquals([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;)V
+#assertEqualsNoOrder([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/String;)V
+#assertEquals([Ljava/lang/Object;[Ljava/lang/Object;)V
+#assertEqualsNoOrder([Ljava/lang/Object;[Ljava/lang/Object;)V
+#assertEquals([B[B)V
+#assertEquals([B[BLjava/lang/String;)V
+#assertEquals(Ljava/util/Set;Ljava/util/Set;)V
+#assertEquals(Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#assertEquals(Ljava/util/Map;Ljava/util/Map;)V
+#assertNotEquals(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#assertNotEquals(Ljava/lang/Object;Ljava/lang/Object;)V
+#assertNotEquals(FFFLjava/lang/String;)V
+#assertNotEquals(FFF)V
+#assertNotEquals(DDDLjava/lang/String;)V
+#assertNotEquals(DDD)V
@3.5.1
-###org/testng/asserts/Assertion

+###org/testng/asserts/IAssert
@3.5
+#getMessage()Ljava/lang/String;
+#doAssert()V
+#getActual()Ljava/lang/Object;
+#getExpected()Ljava/lang/Object;
@3.5.1
-###org/testng/asserts/IAssert

+###org/testng/asserts/IAssertLifecycle
@3.5
+#executeAssert(Lorg/testng/asserts/IAssert;)V
+#onAssertSuccess(Lorg/testng/asserts/IAssert;)V
+#onAssertFailure(Lorg/testng/asserts/IAssert;)V
+#onAssertFailure(Lorg/testng/asserts/IAssert;Ljava/lang/AssertionError;)V
+#onBeforeAssert(Lorg/testng/asserts/IAssert;)V
+#onAfterAssert(Lorg/testng/asserts/IAssert;)V
@3.5.1
-###org/testng/asserts/IAssertLifecycle

+###org/testng/asserts/LoggingAssert
@3.5
+#<init>()V
+#onBeforeAssert(Lorg/testng/asserts/IAssert;)V
+#getMessages()Ljava/util/List;
@3.5.1
-###org/testng/asserts/LoggingAssert

+###org/testng/asserts/SoftAssert
@3.5
+#<init>()V
+#assertAll()V
@3.5.1
-###org/testng/asserts/SoftAssert

+###org/testng/collections/CollectionUtils
@3.5
+#hasElements(Ljava/util/Collection;)Z
+#hasElements(Ljava/util/Map;)Z
@3.5.1
-###org/testng/collections/CollectionUtils

+###org/testng/collections/ListMultiMap
@3.5
+#<init>()V
+#create()Lorg/testng/collections/ListMultiMap;[deprecated]
@3.5.1
-###org/testng/collections/ListMultiMap

+###org/testng/collections/Lists
@3.5
+#newArrayList()Ljava/util/List;
+#newArrayList(Ljava/util/Collection;)Ljava/util/List;
+#newArrayList([Ljava/lang/Object;)Ljava/util/List;
+#newArrayList(I)Ljava/util/List;
@3.5.1
-###org/testng/collections/Lists

+###org/testng/collections/Maps
@3.5
+#<init>()V
+#newHashMap()Ljava/util/Map;
+#newHashtable()Ljava/util/Map;
+#newListMultiMap()Lorg/testng/collections/ListMultiMap;
+#newSetMultiMap()Lorg/testng/collections/SetMultiMap;
+#newLinkedHashMap()Ljava/util/Map;
+#newHashMap(Ljava/util/Map;)Ljava/util/Map;
@3.5.1
-###org/testng/collections/Maps

+###org/testng/collections/MultiMap
@3.5
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/Collection;
+#getKeys()Ljava/util/List;[deprecated]
+#keySet()Ljava/util/Set;
+#containsKey(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#isEmpty()Z
+#getSize()I[deprecated]
+#size()I
+#remove(Ljava/lang/Object;)Ljava/util/Collection;[deprecated]
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#removeAll(Ljava/lang/Object;)Ljava/util/Collection;
+#getEntrySet()Ljava/util/Set;[deprecated]
+#entrySet()Ljava/util/Set;
+#getValues()Ljava/util/Collection;[deprecated]
+#values()Ljava/util/Collection;
+#putAll(Ljava/lang/Object;Ljava/util/Collection;)Z
@3.5.1
-###org/testng/collections/MultiMap

+###org/testng/collections/Objects$ToStringHelper
@3.5
+#<init>(Ljava/lang/String;)V
+#omitNulls()Lorg/testng/collections/Objects$ToStringHelper;
+#omitEmptyStrings()Lorg/testng/collections/Objects$ToStringHelper;
+#add(Ljava/lang/String;Ljava/lang/String;)Lorg/testng/collections/Objects$ToStringHelper;
+#add(Ljava/lang/String;Ljava/lang/Object;)Lorg/testng/collections/Objects$ToStringHelper;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/collections/Objects$ToStringHelper

+###org/testng/collections/Objects
@3.5
+#toStringHelper(Ljava/lang/Class;)Lorg/testng/collections/Objects$ToStringHelper;
@3.5.1
-###org/testng/collections/Objects

+###org/testng/collections/SetMultiMap
@3.5
+#<init>()V
@3.5.1
-###org/testng/collections/SetMultiMap

+###org/testng/collections/Sets
@3.5
+#newHashSet()Ljava/util/Set;
+#newHashSet(Ljava/util/Collection;)Ljava/util/Set;
+#newLinkedHashSet()Ljava/util/Set;
@3.5.1
-###org/testng/collections/Sets

+###org/testng/internal/Attributes
@3.5
+#<init>()V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeNames()Ljava/util/Set;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###org/testng/internal/Attributes

+###org/testng/internal/BaseClassFinder
@3.5
+#<init>()V
+#getIClass(Ljava/lang/Class;)Lorg/testng/IClass;
+#findTestClasses()[Lorg/testng/IClass;
@3.5.1
-###org/testng/internal/BaseClassFinder

+###org/testng/internal/BaseTestMethod
@3.5
+#<init>(Ljava/lang/String;Ljava/lang/reflect/Method;Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Lorg/testng/internal/ConstructorOrMethod;Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/Object;)V
+#isAlwaysRun()Z
+#getRealClass()Ljava/lang/Class;
+#getTestClass()Lorg/testng/ITestClass;
+#setTestClass(Lorg/testng/ITestClass;)V
+#compareTo(Ljava/lang/Object;)I
+#getMethod()Ljava/lang/reflect/Method;
+#getMethodName()Ljava/lang/String;
+#getInstances()[Ljava/lang/Object;
+#getInstance()Ljava/lang/Object;
+#getInstanceHashCodes()[J
+#getGroups()[Ljava/lang/String;
+#getGroupsDependedUpon()[Ljava/lang/String;
+#getMethodsDependedUpon()[Ljava/lang/String;
+#isTest()Z
+#isBeforeSuiteConfiguration()Z
+#isAfterSuiteConfiguration()Z
+#isBeforeTestConfiguration()Z
+#isAfterTestConfiguration()Z
+#isBeforeGroupsConfiguration()Z
+#isAfterGroupsConfiguration()Z
+#isBeforeClassConfiguration()Z
+#isAfterClassConfiguration()Z
+#isBeforeMethodConfiguration()Z
+#isAfterMethodConfiguration()Z
+#getTimeOut()J
+#setTimeOut(J)V
+#getInvocationCount()I
+#setInvocationCount(I)V
+#getTotalInvocationCount()I
+#getSuccessPercentage()I
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getDate()J
+#setDate(J)V
+#canRunFromClass(Lorg/testng/IClass;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#addMethodDependedUpon(Ljava/lang/String;)V
+#getMissingGroup()Ljava/lang/String;
+#setMissingGroup(Ljava/lang/String;)V
+#getThreadPoolSize()I
+#setThreadPoolSize(I)V
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setEnabled(Z)V
+#getEnabled()Z
+#getBeforeGroups()[Ljava/lang/String;
+#getAfterGroups()[Ljava/lang/String;
+#incrementCurrentInvocationCount()V
+#getCurrentInvocationCount()I
+#setParameterInvocationCount(I)V
+#getParameterInvocationCount()I
+#clone()Lorg/testng/ITestNGMethod;
+#getRetryAnalyzer()Lorg/testng/IRetryAnalyzer;
+#setRetryAnalyzer(Lorg/testng/IRetryAnalyzer;)V
+#skipFailedInvocations()Z
+#setSkipFailedInvocations(Z)V
+#setInvocationTimeOut(J)V
+#getInvocationTimeOut()J
+#ignoreMissingDependencies()Z
+#setIgnoreMissingDependencies(Z)V
+#getInvocationNumbers()Ljava/util/List;
+#setInvocationNumbers(Ljava/util/List;)V
+#getFailedInvocationNumbers()Ljava/util/List;
+#addFailedInvocationNumber(I)V
+#getPriority()I
+#setPriority(I)V
+#getXmlTest()Lorg/testng/xml/XmlTest;
+#setXmlTest(Lorg/testng/xml/XmlTest;)V
+#getConstructorOrMethod()Lorg/testng/internal/ConstructorOrMethod;
+#findMethodParameters(Lorg/testng/xml/XmlTest;)Ljava/util/Map;
+#clone()Ljava/lang/Object;
@3.5.1
-###org/testng/internal/BaseTestMethod

+###org/testng/internal/Bsh
@3.5
+#<init>()V
+#includeMethodFromExpression(Ljava/lang/String;Lorg/testng/ITestNGMethod;)Z
@3.5.1
-###org/testng/internal/Bsh

+###org/testng/internal/BshMock
@3.5
+#<init>()V
+#includeMethodFromExpression(Ljava/lang/String;Lorg/testng/ITestNGMethod;)Z
@3.5.1
-###org/testng/internal/BshMock

+###org/testng/internal/ClassHelper
@3.5
+#addClassLoader(Ljava/lang/ClassLoader;)V
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#newInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#forName(Ljava/lang/String;)Ljava/lang/Class;
+#findDeclaredFactoryMethod(Ljava/lang/Class;Lorg/testng/internal/annotations/IAnnotationFinder;)Lorg/testng/internal/ConstructorOrMethod;
+#getAvailableMethods(Ljava/lang/Class;)Ljava/util/Set;
+#createTestRunner(Lorg/testng/TestRunner;)Lorg/testng/junit/IJUnitTestRunner;
+#createSelector(Lorg/testng/xml/XmlMethodSelector;)Lorg/testng/IMethodSelector;
+#createInstance(Ljava/lang/Class;Ljava/util/Map;Lorg/testng/xml/XmlTest;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestObjectFactory;)Ljava/lang/Object;
+#createInstance1(Ljava/lang/Class;Ljava/util/Map;Lorg/testng/xml/XmlTest;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/IObjectFactory;)Ljava/lang/Object;
+#tryOtherConstructor(Ljava/lang/Class;)Ljava/lang/Object;
+#fileToClass(Ljava/lang/String;)Ljava/lang/Class;
@3.5.1
-###org/testng/internal/ClassHelper

+###org/testng/internal/ClassImpl
@3.5
+#<init>(Lorg/testng/ITestContext;Ljava/lang/Class;Lorg/testng/xml/XmlClass;Ljava/lang/Object;Ljava/util/Map;Lorg/testng/xml/XmlTest;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestObjectFactory;)V
+#getTestName()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getRealClass()Ljava/lang/Class;
+#getInstanceCount()I
+#getInstanceHashCodes()[J
+#getXmlTest()Lorg/testng/xml/XmlTest;
+#getXmlClass()Lorg/testng/xml/XmlClass;
+#getParentInjector()Lcom/google/inject/Injector;
+#getInstances(Z)[Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#addInstance(Ljava/lang/Object;)V
@3.5.1
-###org/testng/internal/ClassImpl

+###org/testng/internal/ClassInfoMap
@3.5
+#<init>()V
+#<init>(Ljava/util/List;)V
+#<init>(Ljava/util/List;Z)V
+#addClass(Ljava/lang/Class;)V
+#getXmlClass(Ljava/lang/Class;)Lorg/testng/xml/XmlClass;
+#put(Ljava/lang/Class;Lorg/testng/xml/XmlClass;)V
+#getClasses()Ljava/util/Set;
+#getSize()I
@3.5.1
-###org/testng/internal/ClassInfoMap

+###org/testng/internal/ClonedMethod
@3.5
+#<init>(Lorg/testng/ITestNGMethod;Ljava/lang/reflect/Method;)V
+#addMethodDependedUpon(Ljava/lang/String;)V
+#canRunFromClass(Lorg/testng/IClass;)Z
+#getAfterGroups()[Ljava/lang/String;
+#getBeforeGroups()[Ljava/lang/String;
+#getCurrentInvocationCount()I
+#getDate()J
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#getEnabled()Z
+#getGroups()[Ljava/lang/String;
+#getGroupsDependedUpon()[Ljava/lang/String;
+#getId()Ljava/lang/String;
+#getInstanceHashCodes()[J
+#getInstances()[Ljava/lang/Object;
+#getInstance()Ljava/lang/Object;
+#getInvocationCount()I
+#getTotalInvocationCount()I
+#getInvocationTimeOut()J
+#getMethod()Ljava/lang/reflect/Method;
+#getMethodName()Ljava/lang/String;
+#getMethodsDependedUpon()[Ljava/lang/String;
+#getMissingGroup()Ljava/lang/String;
+#getParameterInvocationCount()I
+#getRealClass()Ljava/lang/Class;
+#getRetryAnalyzer()Lorg/testng/IRetryAnalyzer;
+#getSuccessPercentage()I
+#getTestClass()Lorg/testng/ITestClass;
+#getThreadPoolSize()I
+#getTimeOut()J
+#setTimeOut(J)V
+#ignoreMissingDependencies()Z
+#incrementCurrentInvocationCount()V
+#isAfterClassConfiguration()Z
+#isAfterGroupsConfiguration()Z
+#isAfterMethodConfiguration()Z
+#isAfterSuiteConfiguration()Z
+#isAfterTestConfiguration()Z
+#isAlwaysRun()Z
+#isBeforeClassConfiguration()Z
+#isBeforeGroupsConfiguration()Z
+#isBeforeMethodConfiguration()Z
+#isBeforeSuiteConfiguration()Z
+#isBeforeTestConfiguration()Z
+#isTest()Z
+#setDate(J)V
+#setId(Ljava/lang/String;)V
+#setIgnoreMissingDependencies(Z)V
+#setInvocationCount(I)V
+#setMissingGroup(Ljava/lang/String;)V
+#setParameterInvocationCount(I)V
+#setRetryAnalyzer(Lorg/testng/IRetryAnalyzer;)V
+#setSkipFailedInvocations(Z)V
+#setTestClass(Lorg/testng/ITestClass;)V
+#setThreadPoolSize(I)V
+#skipFailedInvocations()Z
+#compareTo(Ljava/lang/Object;)I
+#clone()Lorg/testng/internal/ClonedMethod;
+#toString()Ljava/lang/String;
+#getInvocationNumbers()Ljava/util/List;
+#setInvocationNumbers(Ljava/util/List;)V
+#getFailedInvocationNumbers()Ljava/util/List;
+#addFailedInvocationNumber(I)V
+#getPriority()I
+#setPriority(I)V
+#getXmlTest()Lorg/testng/xml/XmlTest;
+#getConstructorOrMethod()Lorg/testng/internal/ConstructorOrMethod;
+#findMethodParameters(Lorg/testng/xml/XmlTest;)Ljava/util/Map;
+#clone()Ljava/lang/Object;
+#clone()Lorg/testng/ITestNGMethod;
@3.5.1
-###org/testng/internal/ClonedMethod

+###org/testng/internal/Configuration
@3.5
+#<init>()V
+#<init>(Lorg/testng/internal/annotations/IAnnotationFinder;)V
+#getAnnotationFinder()Lorg/testng/internal/annotations/IAnnotationFinder;
+#setAnnotationFinder(Lorg/testng/internal/annotations/IAnnotationFinder;)V
+#getObjectFactory()Lorg/testng/ITestObjectFactory;
+#setObjectFactory(Lorg/testng/ITestObjectFactory;)V
+#getHookable()Lorg/testng/IHookable;
+#setHookable(Lorg/testng/IHookable;)V
+#getConfigurable()Lorg/testng/IConfigurable;
+#setConfigurable(Lorg/testng/IConfigurable;)V
+#getExecutionListeners()Ljava/util/List;
+#addExecutionListener(Lorg/testng/IExecutionListener;)V
+#getConfigurationListeners()Ljava/util/List;
+#addConfigurationListener(Lorg/testng/IConfigurationListener;)V
+#getAlterSuiteListeners()Ljava/util/List;
@3.5.1
-###org/testng/internal/Configuration

+###org/testng/internal/ConfigurationGroupMethods
@3.5
+#<init>([Lorg/testng/ITestNGMethod;Ljava/util/Map;Ljava/util/Map;)V
+#getBeforeGroupsMethods()Ljava/util/Map;
+#getAfterGroupsMethods()Ljava/util/Map;
+#isLastMethodForGroup(Ljava/lang/String;Lorg/testng/ITestNGMethod;)Z
+#removeBeforeMethod(Ljava/lang/String;Lorg/testng/ITestNGMethod;)V
+#getBeforeGroupsMap()Ljava/util/Map;
+#getAfterGroupsMap()Ljava/util/Map;
+#removeBeforeGroups([Ljava/lang/String;)V
+#removeAfterGroups(Ljava/util/Collection;)V
@3.5.1
-###org/testng/internal/ConfigurationGroupMethods

+###org/testng/internal/ConfigurationMethod
@3.5
+#<init>(Ljava/lang/reflect/Method;Lorg/testng/internal/annotations/IAnnotationFinder;ZZZZZZZZ[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Object;)V[deprecated]
+#<init>(Lorg/testng/internal/ConstructorOrMethod;Lorg/testng/internal/annotations/IAnnotationFinder;ZZZZZZZZ[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Object;)V
+#createSuiteConfigurationMethods([Lorg/testng/ITestNGMethod;Lorg/testng/internal/annotations/IAnnotationFinder;ZLjava/lang/Object;)[Lorg/testng/ITestNGMethod;
+#createTestConfigurationMethods([Lorg/testng/ITestNGMethod;Lorg/testng/internal/annotations/IAnnotationFinder;ZLjava/lang/Object;)[Lorg/testng/ITestNGMethod;
+#createClassConfigurationMethods([Lorg/testng/ITestNGMethod;Lorg/testng/internal/annotations/IAnnotationFinder;ZLjava/lang/Object;)[Lorg/testng/ITestNGMethod;
+#createBeforeConfigurationMethods([Lorg/testng/ITestNGMethod;Lorg/testng/internal/annotations/IAnnotationFinder;ZLjava/lang/Object;)[Lorg/testng/ITestNGMethod;
+#createAfterConfigurationMethods([Lorg/testng/ITestNGMethod;Lorg/testng/internal/annotations/IAnnotationFinder;ZLjava/lang/Object;)[Lorg/testng/ITestNGMethod;
+#createTestMethodConfigurationMethods([Lorg/testng/ITestNGMethod;Lorg/testng/internal/annotations/IAnnotationFinder;ZLjava/lang/Object;)[Lorg/testng/ITestNGMethod;
+#isAfterClassConfiguration()Z
+#isAfterMethodConfiguration()Z
+#isBeforeClassConfiguration()Z
+#isBeforeMethodConfiguration()Z
+#isAfterSuiteConfiguration()Z
+#isBeforeSuiteConfiguration()Z
+#isBeforeTestConfiguration()Z
+#isAfterTestConfiguration()Z
+#isBeforeGroupsConfiguration()Z
+#isAfterGroupsConfiguration()Z
+#clone()Lorg/testng/internal/ConfigurationMethod;
+#isFirstTimeOnly()Z
+#isLastTimeOnly()Z
+#clone()Lorg/testng/ITestNGMethod;
+#clone()Ljava/lang/Object;
@3.5.1
-###org/testng/internal/ConfigurationMethod

+###org/testng/internal/Constants
@3.5
+#<init>()V
+#getPropertyValue(Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;
+#getBooleanPropertyValue(Ljava/util/Properties;Ljava/lang/String;)Z
+#getIntegerPropertyValue(Ljava/util/Properties;Ljava/lang/String;)I
+#getDefaultValueFor(Ljava/lang/String;)Ljava/lang/String;
+#displayStatus(I)Ljava/lang/String;
@3.5.1
-###org/testng/internal/Constants

+###org/testng/internal/ConstructorOrMethod
@3.5
+#<init>(Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/reflect/Constructor;)V
+#getDeclaringClass()Ljava/lang/Class;
+#getName()Ljava/lang/String;
+#getParameterTypes()[Ljava/lang/Class;
+#getMethod()Ljava/lang/reflect/Method;
+#getConstructor()Ljava/lang/reflect/Constructor;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#setEnabled(Z)V
+#getEnabled()Z
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/internal/ConstructorOrMethod

+###org/testng/internal/DataProviderHolder
@3.5
+#<init>(Lorg/testng/annotations/IDataProviderAnnotation;Ljava/lang/reflect/Method;Ljava/lang/Object;)V
@3.5.1
-###org/testng/internal/DataProviderHolder

+###org/testng/internal/DefaultMethodSelectorContext
@3.5
+#<init>()V
+#getUserData()Ljava/util/Map;
+#isStopped()Z
+#setStopped(Z)V
@3.5.1
-###org/testng/internal/DefaultMethodSelectorContext

+###org/testng/internal/Dynamic
@3.5
+#<init>()V
+#hasBsh()Z
@3.5.1
-###org/testng/internal/Dynamic

+###org/testng/internal/DynamicGraph$Status
@3.5
+#values()[Lorg/testng/internal/DynamicGraph$Status;
+#valueOf(Ljava/lang/String;)Lorg/testng/internal/DynamicGraph$Status;
@3.5.1
-###org/testng/internal/DynamicGraph$Status

+###org/testng/internal/DynamicGraph
@3.5
+#<init>()V
+#setComparator(Ljava/util/Comparator;)V
+#addNode(Ljava/lang/Object;)V
+#addEdge(Ljava/lang/Object;Ljava/lang/Object;)V
+#getFreeNodes()Ljava/util/List;
+#setStatus(Ljava/util/Collection;Lorg/testng/internal/DynamicGraph$Status;)V
+#setStatus(Ljava/lang/Object;Lorg/testng/internal/DynamicGraph$Status;)V
+#getNodeCount()I
+#getNodeCountWithStatus(Lorg/testng/internal/DynamicGraph$Status;)I
+#toString()Ljava/lang/String;
+#toDot()Ljava/lang/String;
+#getEdges()Lorg/testng/collections/ListMultiMap;
@3.5.1
-###org/testng/internal/DynamicGraph

+###org/testng/internal/EclipseInterface
@3.5
+#<init>()V
@3.5.1
-###org/testng/internal/EclipseInterface

+###org/testng/internal/ExpectedExceptionsHolder
@3.5
+#isExpectedException(Ljava/lang/Throwable;)Z
+#wrongException(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#noException(Lorg/testng/ITestNGMethod;)Lorg/testng/TestException;
@3.5.1
-###org/testng/internal/ExpectedExceptionsHolder

+###org/testng/internal/ExtraOutput
@3.5
+#<init>()V
+#getParameterOutput()Ljava/util/List;
@3.5.1
-###org/testng/internal/ExtraOutput

+###org/testng/internal/FactoryMethod
@3.5
+#<init>(Lorg/testng/internal/ConstructorOrMethod;Ljava/lang/Object;Lorg/testng/xml/XmlTest;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestContext;)V
+#invoke()[Ljava/lang/Object;
+#clone()Lorg/testng/ITestNGMethod;
+#clone()Ljava/lang/Object;
@3.5.1
-###org/testng/internal/FactoryMethod

+###org/testng/internal/Graph$Node
@3.5
+#<init>(Ljava/lang/Object;)V
+#addNeighbor(Lorg/testng/internal/Graph$Node;)V
+#getNeighbors()Ljava/util/Set;
+#clone()Lorg/testng/internal/Graph$Node;
+#getObject()Ljava/lang/Object;
+#getPredecessors()Ljava/util/Map;
+#removePredecessor(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#addPredecessor(Ljava/lang/Object;)V
+#hasPredecessors()Z
+#hasPredecessor(Ljava/lang/Object;)Z
+#compareTo(Lorg/testng/internal/Graph$Node;)I
+#clone()Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/testng/internal/Graph$Node

+###org/testng/internal/Graph
@3.5
+#<init>()V
+#addNode(Ljava/lang/Object;)V
+#getPredecessors(Ljava/lang/Object;)Ljava/util/Set;
+#isIndependent(Ljava/lang/Object;)Z
+#addPredecessor(Ljava/lang/Object;Ljava/lang/Object;)V
+#getNeighbors(Ljava/lang/Object;)Ljava/util/Set;
+#getNodeValues()Ljava/util/Collection;
+#getIndependentNodes()Ljava/util/Set;
+#getStrictlySortedNodes()Ljava/util/List;
+#topologicalSort()V
+#findPredecessors(Ljava/lang/Object;)Ljava/util/List;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/internal/Graph

+###org/testng/internal/IBsh
@3.5
+#includeMethodFromExpression(Ljava/lang/String;Lorg/testng/ITestNGMethod;)Z
@3.5.1
-###org/testng/internal/IBsh

+###org/testng/internal/IConfiguration
@3.5
+#getAnnotationFinder()Lorg/testng/internal/annotations/IAnnotationFinder;
+#setAnnotationFinder(Lorg/testng/internal/annotations/IAnnotationFinder;)V
+#getObjectFactory()Lorg/testng/ITestObjectFactory;
+#setObjectFactory(Lorg/testng/ITestObjectFactory;)V
+#getHookable()Lorg/testng/IHookable;
+#setHookable(Lorg/testng/IHookable;)V
+#getConfigurable()Lorg/testng/IConfigurable;
+#setConfigurable(Lorg/testng/IConfigurable;)V
+#getExecutionListeners()Ljava/util/List;
+#addExecutionListener(Lorg/testng/IExecutionListener;)V
+#getConfigurationListeners()Ljava/util/List;
+#addConfigurationListener(Lorg/testng/IConfigurationListener;)V
+#getAlterSuiteListeners()Ljava/util/List;
@3.5.1
-###org/testng/internal/IConfiguration

+###org/testng/internal/IInvoker
@3.5
+#invokeConfigurations(Lorg/testng/IClass;[Lorg/testng/ITestNGMethod;Lorg/testng/xml/XmlSuite;Ljava/util/Map;[Ljava/lang/Object;Ljava/lang/Object;)V
+#invokeTestMethods(Lorg/testng/ITestNGMethod;Lorg/testng/xml/XmlSuite;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Ljava/lang/Object;Lorg/testng/ITestContext;)Ljava/util/List;
@3.5.1
-###org/testng/internal/IInvoker

+###org/testng/internal/InstanceInfo
@3.5
+#<init>(Ljava/lang/Class;Ljava/lang/Object;)V
+#getInstance()Ljava/lang/Object;
+#getInstanceClass()Ljava/lang/Class;
@3.5.1
-###org/testng/internal/InstanceInfo

+###org/testng/internal/InvokedMethod
@3.5
+#<init>(Ljava/lang/Object;Lorg/testng/ITestNGMethod;[Ljava/lang/Object;JLorg/testng/ITestResult;)V
+#isTestMethod()Z
+#toString()Ljava/lang/String;
+#isConfigurationMethod()Z
+#getTestMethod()Lorg/testng/ITestNGMethod;
+#getDate()J
+#getTestResult()Lorg/testng/ITestResult;
@3.5.1
-###org/testng/internal/InvokedMethod

+###org/testng/internal/InvokeMethodRunnable$TestNGRuntimeException
@3.5
+#<init>(Ljava/lang/Throwable;)V
@3.5.1
-###org/testng/internal/InvokeMethodRunnable$TestNGRuntimeException

+###org/testng/internal/InvokeMethodRunnable
@3.5
+#<init>(Lorg/testng/ITestNGMethod;Ljava/lang/Object;[Ljava/lang/Object;Lorg/testng/IHookable;Lorg/testng/ITestResult;)V
+#run()V
@3.5.1
-###org/testng/internal/InvokeMethodRunnable

+###org/testng/internal/Invoker
@3.5
+#<init>(Lorg/testng/internal/IConfiguration;Lorg/testng/ITestContext;Lorg/testng/internal/ITestResultNotifier;Lorg/testng/SuiteRunState;ZLjava/util/Collection;Ljava/util/List;)V
+#invokeConfigurations(Lorg/testng/IClass;[Lorg/testng/ITestNGMethod;Lorg/testng/xml/XmlSuite;Ljava/util/Map;[Ljava/lang/Object;Ljava/lang/Object;)V
+#invokeTestMethods(Lorg/testng/ITestNGMethod;Lorg/testng/xml/XmlSuite;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Ljava/lang/Object;Lorg/testng/ITestContext;)Ljava/util/List;
+#runTestListeners(Lorg/testng/ITestResult;Ljava/util/List;)V
@3.5.1
-###org/testng/internal/Invoker

+###org/testng/internal/IResultListener
@3.5
@3.5.1
-###org/testng/internal/IResultListener

+###org/testng/internal/IResultListener2
@3.5
@3.5.1
-###org/testng/internal/IResultListener2

+###org/testng/internal/ITestResultNotifier
@3.5
+#getPassedTests(Lorg/testng/ITestNGMethod;)Ljava/util/Set;
+#getFailedTests(Lorg/testng/ITestNGMethod;)Ljava/util/Set;
+#getSkippedTests(Lorg/testng/ITestNGMethod;)Ljava/util/Set;
+#addPassedTest(Lorg/testng/ITestNGMethod;Lorg/testng/ITestResult;)V
+#addSkippedTest(Lorg/testng/ITestNGMethod;Lorg/testng/ITestResult;)V
+#addFailedTest(Lorg/testng/ITestNGMethod;Lorg/testng/ITestResult;)V
+#addFailedButWithinSuccessPercentageTest(Lorg/testng/ITestNGMethod;Lorg/testng/ITestResult;)V
+#addInvokedMethod(Lorg/testng/internal/InvokedMethod;)V
+#getTest()Lorg/testng/xml/XmlTest;
+#getTestListeners()Ljava/util/List;
+#getConfigurationListeners()Ljava/util/List;
@3.5.1
-###org/testng/internal/ITestResultNotifier

+###org/testng/internal/MethodGroupsHelper
@3.5
+#<init>()V
+#findGroupsMethods(Ljava/util/Collection;Z)Ljava/util/Map;
@3.5.1
-###org/testng/internal/MethodGroupsHelper

+###org/testng/internal/MethodHelper
@3.5
+#<init>()V
+#collectAndOrderMethods(Ljava/util/List;ZLorg/testng/internal/RunInfo;Lorg/testng/internal/annotations/IAnnotationFinder;ZLjava/util/List;)[Lorg/testng/ITestNGMethod;
+#uniqueMethodList(Ljava/util/Collection;)Ljava/util/List;
+#getMethodsDependedUpon(Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;)Ljava/util/List;
@3.5.1
-###org/testng/internal/MethodHelper

+###org/testng/internal/MethodInheritance
@3.5
+#<init>()V
+#fixMethodInheritance([Lorg/testng/ITestNGMethod;Z)V
@3.5.1
-###org/testng/internal/MethodInheritance

+###org/testng/internal/MethodInstance
@3.5
+#<init>(Lorg/testng/ITestNGMethod;)V
+#getMethod()Lorg/testng/ITestNGMethod;
+#getInstances()[Ljava/lang/Object;
+#getInstance()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/internal/MethodInstance

+###org/testng/internal/MethodInvocationHelper
@3.5
+#<init>()V
@3.5.1
-###org/testng/internal/MethodInvocationHelper

+###org/testng/internal/MethodSelectorDescriptor
@3.5
+#getPriority()I
+#getMethodSelector()Lorg/testng/IMethodSelector;
+#<init>(Lorg/testng/IMethodSelector;I)V
+#compareTo(Lorg/testng/internal/MethodSelectorDescriptor;)I
+#setTestMethods(Ljava/util/List;)V
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/testng/internal/MethodSelectorDescriptor

+###org/testng/internal/NoOpTestClass
@3.5
+#<init>(Lorg/testng/ITestClass;)V
+#setBeforeTestMethods([Lorg/testng/ITestNGMethod;)V
+#setAfterTestMethod([Lorg/testng/ITestNGMethod;)V
+#getAfterClassMethods()[Lorg/testng/ITestNGMethod;
+#getAfterTestMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeClassMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeTestMethods()[Lorg/testng/ITestNGMethod;
+#getTestMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeSuiteMethods()[Lorg/testng/ITestNGMethod;
+#getAfterSuiteMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeTestConfigurationMethods()[Lorg/testng/ITestNGMethod;
+#getAfterTestConfigurationMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeGroupsMethods()[Lorg/testng/ITestNGMethod;
+#getAfterGroupsMethods()[Lorg/testng/ITestNGMethod;
+#getInstanceCount()I
+#getInstanceHashCodes()[J
+#getInstances(Z)[Ljava/lang/Object;
+#getName()Ljava/lang/String;
+#getRealClass()Ljava/lang/Class;
+#addInstance(Ljava/lang/Object;)V
+#setTestClass(Ljava/lang/Class;)V
+#getTestName()Ljava/lang/String;
+#getXmlTest()Lorg/testng/xml/XmlTest;
+#getXmlClass()Lorg/testng/xml/XmlClass;
@3.5.1
-###org/testng/internal/NoOpTestClass

+###org/testng/internal/Nullable
@3.5
@3.5.1
-###org/testng/internal/Nullable

+###org/testng/internal/ObjectFactoryImpl
@3.5
+#<init>()V
+#newInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
@3.5.1
-###org/testng/internal/ObjectFactoryImpl

+###org/testng/internal/OverrideProcessor
@3.5
+#<init>([Ljava/lang/String;[Ljava/lang/String;)V
+#process(Ljava/util/Collection;)Ljava/util/Collection;
@3.5.1
-###org/testng/internal/OverrideProcessor

+###org/testng/internal/PackageUtils
@3.5
+#<init>()V
+#addClassLoader(Ljava/lang/ClassLoader;)V
+#findClassesInPackage(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)[Ljava/lang/String;
@3.5.1
-###org/testng/internal/PackageUtils

+###org/testng/internal/ParameterHolder$ParameterOrigin
@3.5
+#values()[Lorg/testng/internal/ParameterHolder$ParameterOrigin;
+#valueOf(Ljava/lang/String;)Lorg/testng/internal/ParameterHolder$ParameterOrigin;
@3.5.1
-###org/testng/internal/ParameterHolder$ParameterOrigin

+###org/testng/internal/ParameterHolder
@3.5
+#<init>(Ljava/util/Iterator;Lorg/testng/internal/ParameterHolder$ParameterOrigin;Lorg/testng/internal/DataProviderHolder;)V
@3.5.1
-###org/testng/internal/ParameterHolder

+###org/testng/internal/Parameters$MethodParameters
@3.5
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/util/Map;Ljava/util/Map;[Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/internal/Parameters$MethodParameters

+###org/testng/internal/Parameters
@3.5
+#<init>()V
+#createInstantiationParameters(Ljava/lang/reflect/Constructor;Ljava/lang/String;Lorg/testng/internal/annotations/IAnnotationFinder;[Ljava/lang/String;Ljava/util/Map;Lorg/testng/xml/XmlSuite;)[Ljava/lang/Object;
+#createConfigurationParameters(Ljava/lang/reflect/Method;Ljava/util/Map;[Ljava/lang/Object;Lorg/testng/ITestNGMethod;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/xml/XmlSuite;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)[Ljava/lang/Object;
+#getInjectedParameter(Ljava/lang/Class;Ljava/lang/reflect/Method;Lorg/testng/ITestContext;Lorg/testng/ITestResult;)Ljava/lang/Object;
+#convertType(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#handleParameters(Lorg/testng/ITestNGMethod;Ljava/util/Map;Ljava/lang/Object;Lorg/testng/internal/Parameters$MethodParameters;Lorg/testng/xml/XmlSuite;Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/Object;)Lorg/testng/internal/ParameterHolder;
@3.5.1
-###org/testng/internal/Parameters

+###org/testng/internal/PoolService
@3.5
+#<init>(I)V
+#submitTasksAndWait(Ljava/util/List;)Ljava/util/List;
@3.5.1
-###org/testng/internal/PoolService

+###org/testng/internal/PropertiesFile
@3.5
+#<init>(Ljava/lang/String;)V
+#getProperties()Ljava/util/Properties;
@3.5.1
-###org/testng/internal/PropertiesFile

+###org/testng/internal/PropertyUtils
@3.5
+#<init>()V
+#setProperty(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
+#getPropertyType(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;
+#setPropertyRealValue(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
@3.5.1
-###org/testng/internal/PropertyUtils

+###org/testng/internal/RegexpExpectedExceptionsHolder
@3.5
+#<init>(Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestNGMethod;)V
+#isThrowableMatching(Ljava/lang/Throwable;)Z
+#getWrongExceptionMessage(Ljava/lang/Throwable;)Ljava/lang/String;
@3.5.1
-###org/testng/internal/RegexpExpectedExceptionsHolder

+###org/testng/internal/ResultMap
@3.5
+#<init>()V
+#addResult(Lorg/testng/ITestResult;Lorg/testng/ITestNGMethod;)V
+#getResults(Lorg/testng/ITestNGMethod;)Ljava/util/Set;
+#removeResult(Lorg/testng/ITestNGMethod;)V
+#removeResult(Lorg/testng/ITestResult;)V
+#getAllResults()Ljava/util/Set;
+#size()I
+#getAllMethods()Ljava/util/Collection;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/internal/ResultMap

+###org/testng/internal/RunInfo
@3.5
+#<init>()V
+#addMethodSelector(Lorg/testng/IMethodSelector;I)V
+#includeMethod(Lorg/testng/ITestNGMethod;Z)Z
+#ppp(Ljava/lang/String;)V
+#setTestMethods(Ljava/util/List;)V
@3.5.1
-###org/testng/internal/RunInfo

+###org/testng/internal/SuiteRunnerMap
@3.5
+#<init>()V
+#put(Lorg/testng/xml/XmlSuite;Lorg/testng/ISuite;)V
+#get(Lorg/testng/xml/XmlSuite;)Lorg/testng/ISuite;
+#values()Ljava/util/Collection;
@3.5.1
-###org/testng/internal/SuiteRunnerMap

+###org/testng/internal/Tarjan
@3.5
+#<init>(Lorg/testng/internal/Graph;Ljava/lang/Object;)V
+#main([Ljava/lang/String;)V
+#getCycle()Ljava/util/List;
@3.5.1
-###org/testng/internal/Tarjan

+###org/testng/internal/TestMethodWithDataProviderMethodWorker
@3.5
+#<init>(Lorg/testng/internal/Invoker;Lorg/testng/ITestNGMethod;I[Ljava/lang/Object;Ljava/lang/Object;Lorg/testng/xml/XmlSuite;Ljava/util/Map;Lorg/testng/ITestClass;[Lorg/testng/ITestNGMethod;[Lorg/testng/ITestNGMethod;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/internal/ExpectedExceptionsHolder;Lorg/testng/ITestContext;ZIILorg/testng/internal/ITestResultNotifier;)V
+#getMaxTimeOut()J
+#call()Ljava/util/List;
+#getTestResults()Ljava/util/List;
+#getInvocationCount()I
+#getFailureCount()I
+#call()Ljava/lang/Object;
@3.5.1
-###org/testng/internal/TestMethodWithDataProviderMethodWorker

+###org/testng/internal/TestMethodWorker
@3.5
+#<init>(Lorg/testng/internal/IInvoker;[Lorg/testng/IMethodInstance;Lorg/testng/xml/XmlSuite;Ljava/util/Map;Lorg/testng/internal/ConfigurationGroupMethods;Lorg/testng/ClassMethodMap;Lorg/testng/ITestContext;Ljava/util/List;)V
+#getTimeOut()J
+#toString()Ljava/lang/String;
+#run()V
+#getTestResults()Ljava/util/List;
+#getTasks()Ljava/util/List;
+#compareTo(Lorg/testng/internal/thread/graph/IWorker;)I
+#getPriority()I
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/testng/internal/TestMethodWorker

+###org/testng/internal/TestNGClassFinder
@3.5
+#<init>(Lorg/testng/internal/ClassInfoMap;Ljava/util/Map;Lorg/testng/xml/XmlTest;Lorg/testng/internal/IConfiguration;Lorg/testng/ITestContext;)V
+#isTestNGClass(Ljava/lang/Class;Lorg/testng/internal/annotations/IAnnotationFinder;)Z
+#ppp(Ljava/lang/String;)V
@3.5.1
-###org/testng/internal/TestNGClassFinder

+###org/testng/internal/TestNGMethod
@3.5
+#<init>(Ljava/lang/reflect/Method;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/xml/XmlTest;Ljava/lang/Object;)V
+#getInvocationCount()I
+#getTotalInvocationCount()I
+#getSuccessPercentage()I
+#isTest()Z
+#getThreadPoolSize()I
+#setThreadPoolSize(I)V
+#setInvocationCount(I)V
+#clone()Lorg/testng/internal/BaseTestMethod;
+#clone()Lorg/testng/ITestNGMethod;
+#clone()Ljava/lang/Object;
@3.5.1
-###org/testng/internal/TestNGMethod

+###org/testng/internal/TestNGMethodFinder
@3.5
+#<init>(Lorg/testng/internal/RunInfo;Lorg/testng/internal/annotations/IAnnotationFinder;)V
+#getTestMethods(Ljava/lang/Class;Lorg/testng/xml/XmlTest;)[Lorg/testng/ITestNGMethod;
+#getBeforeClassMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterClassMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeTestMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterTestMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeSuiteMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterSuiteMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeTestConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterTestConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeGroupsConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterGroupsConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
@3.5.1
-###org/testng/internal/TestNGMethodFinder

+###org/testng/internal/TestNGProperty
@3.5
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getDefault()Ljava/lang/String;
+#getDocumentation()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getCommandLineName()Ljava/lang/String;
@3.5.1
-###org/testng/internal/TestNGProperty

+###org/testng/internal/TestResult
@3.5
+#<init>()V
+#<init>(Lorg/testng/IClass;Ljava/lang/Object;Lorg/testng/ITestNGMethod;Ljava/lang/Throwable;JJLorg/testng/ITestContext;)V
+#init(Lorg/testng/IClass;Ljava/lang/Object;Lorg/testng/ITestNGMethod;Ljava/lang/Throwable;JJLorg/testng/ITestContext;)V
+#setEndMillis(J)V
+#getTestName()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getMethod()Lorg/testng/ITestNGMethod;
+#setMethod(Lorg/testng/ITestNGMethod;)V
+#getStatus()I
+#setStatus(I)V
+#isSuccess()Z
+#getTestClass()Lorg/testng/IClass;
+#setTestClass(Lorg/testng/IClass;)V
+#getThrowable()Ljava/lang/Throwable;
+#setThrowable(Ljava/lang/Throwable;)V
+#getEndMillis()J
+#getStartMillis()J
+#toString()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getParameters()[Ljava/lang/Object;
+#setParameters([Ljava/lang/Object;)V
+#getInstance()Ljava/lang/Object;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttributeNames()Ljava/util/Set;
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getTestContext()Lorg/testng/ITestContext;
+#setContext(Lorg/testng/ITestContext;)V
+#compareTo(Lorg/testng/ITestResult;)I
+#getInstanceName()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@3.5.1
-###org/testng/internal/TestResult

+###org/testng/internal/Utils
@3.5
+#stringToArray(Ljava/lang/String;)[Ljava/lang/String;
+#classesToXmlClasses([Ljava/lang/Class;)[Lorg/testng/xml/XmlClass;
+#parseMultiLine(Ljava/lang/String;)[Ljava/lang/String;
+#writeUtf8File(Ljava/lang/String;Ljava/lang/String;Lorg/testng/reporters/XMLStringBuffer;Ljava/lang/String;)V
+#writeUtf8File(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#writeFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#openWriter(Ljava/lang/String;Ljava/lang/String;)Ljava/io/BufferedWriter;
+#dumpMap(Ljava/util/Map;)V
+#dumpMethods(Ljava/util/List;)V
+#dependentGroupsForThisMethodForTest(Ljava/lang/reflect/Method;Lorg/testng/internal/annotations/IAnnotationFinder;)[Ljava/lang/String;
+#groupsForThisMethodForTest(Ljava/lang/reflect/Method;Lorg/testng/internal/annotations/IAnnotationFinder;)[Ljava/lang/String;
+#groupsForThisMethodForConfiguration(Ljava/lang/reflect/Method;Lorg/testng/internal/annotations/IAnnotationFinder;)[Ljava/lang/String;
+#dependentGroupsForThisMethodForConfiguration(Ljava/lang/reflect/Method;Lorg/testng/internal/annotations/IAnnotationFinder;)[Ljava/lang/String;
+#log(Ljava/lang/String;)V
+#log(Ljava/lang/String;ILjava/lang/String;)V
+#error(Ljava/lang/String;)V
+#calculateInvokedMethodCount([Lorg/testng/ITestNGMethod;)I
+#split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#initLogger(Ljava/util/logging/Logger;Ljava/lang/String;)V
+#logInvocation(Ljava/lang/String;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
+#writeResourceToFile(Ljava/io/File;Ljava/lang/String;Ljava/lang/Class;)V
+#defaultIfStringEmpty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#isStringBlank(Ljava/lang/String;)Z
+#isStringEmpty(Ljava/lang/String;)Z
+#isStringNotBlank(Ljava/lang/String;)Z
+#isStringNotEmpty(Ljava/lang/String;)Z
+#stackTrace(Ljava/lang/Throwable;Z)[Ljava/lang/String;
+#escapeHtml(Ljava/lang/String;)Ljava/lang/String;
+#escapeUnicode(Ljava/lang/String;)Ljava/lang/String;
+#toString(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;
+#detailedMethodName(Lorg/testng/ITestNGMethod;Z)Ljava/lang/String;
+#arrayToString([Ljava/lang/String;)Ljava/lang/String;
+#replaceSpecialCharacters(Ljava/lang/String;)Ljava/lang/String;
+#join(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
+#copyFile(Ljava/io/File;Ljava/io/File;)V
+#createTempFile(Ljava/lang/String;)Ljava/io/File;
+#checkInstanceOrStatic(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#checkReturnType(Ljava/lang/reflect/Method;[Ljava/lang/Class;)V
+#toString(Ljava/lang/Object;)Ljava/lang/String;
@3.5.1
-###org/testng/internal/Utils

+###org/testng/internal/XmlMethodSelector
@3.5
+#<init>()V
+#includeMethod(Lorg/testng/IMethodSelectorContext;Lorg/testng/ITestNGMethod;Z)Z
+#setXmlClasses(Ljava/util/List;)V
+#getExcludedGroups()Ljava/util/Map;
+#getIncludedGroups()Ljava/util/Map;
+#setExcludedGroups(Ljava/util/Map;)V
+#setIncludedGroups(Ljava/util/Map;)V
+#setExpression(Ljava/lang/String;)V
+#setTestMethods(Ljava/util/List;)V
@3.5.1
-###org/testng/internal/XmlMethodSelector

+###org/testng/internal/Yaml
@3.5
+#<init>()V
+#parse(Ljava/lang/String;Ljava/io/InputStream;)Lorg/testng/xml/XmlSuite;
+#toYaml(Lorg/testng/xml/XmlSuite;)Ljava/lang/StringBuilder;
@3.5.1
-###org/testng/internal/Yaml

+###org/testng/internal/YamlParser
@3.5
+#<init>()V
+#parse(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/testng/xml/XmlSuite;
+#accept(Ljava/lang/String;)Z
+#parse(Ljava/lang/String;Ljava/io/InputStream;Z)Ljava/lang/Object;
@3.5.1
-###org/testng/internal/YamlParser

+###org/testng/internal/annotations/AfterSuiteAnnotation
@3.5
+#<init>()V
@3.5.1
-###org/testng/internal/annotations/AfterSuiteAnnotation

+###org/testng/internal/annotations/AnnotationHelper
@3.5
+#<init>()V
+#findTest(Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/Class;)Lorg/testng/annotations/ITestAnnotation;
+#findTest(Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/reflect/Method;)Lorg/testng/annotations/ITestAnnotation;
+#findTest(Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/ITestNGMethod;)Lorg/testng/annotations/ITestAnnotation;
+#findFactory(Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/reflect/Method;)Lorg/testng/annotations/IFactoryAnnotation;
+#findFactory(Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/reflect/Constructor;)Lorg/testng/annotations/IFactoryAnnotation;
+#findTest(Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/reflect/Constructor;)Lorg/testng/annotations/ITestAnnotation;
+#findConfiguration(Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/reflect/Constructor;)Lorg/testng/annotations/IConfigurationAnnotation;
+#findConfiguration(Lorg/testng/internal/annotations/IAnnotationFinder;Ljava/lang/reflect/Method;)Lorg/testng/annotations/IConfigurationAnnotation;
+#getAllAnnotations()[Ljava/lang/Class;
+#findMethodsWithAnnotation(Ljava/lang/Class;Ljava/lang/Class;Lorg/testng/internal/annotations/IAnnotationFinder;Lorg/testng/xml/XmlTest;)[Lorg/testng/ITestNGMethod;
+#findAnnotationSuperClasses(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
@3.5.1
-###org/testng/internal/annotations/AnnotationHelper

+###org/testng/internal/annotations/BaseAnnotation
@3.5
+#<init>()V
+#getConstructor()Ljava/lang/reflect/Constructor;
+#setConstructor(Ljava/lang/reflect/Constructor;)V
+#getMethod()Ljava/lang/reflect/Method;
+#setMethod(Ljava/lang/reflect/Method;)V
+#getTestClass()Ljava/lang/Class;
+#setTestClass(Ljava/lang/Class;)V
@3.5.1
-###org/testng/internal/annotations/BaseAnnotation

+###org/testng/internal/annotations/BaseBeforeAfter
@3.5
+#<init>()V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
+#setAlwaysRun(Z)V
+#setInheritGroups(Z)V
+#setParameters([Ljava/lang/String;)V
+#getParameters()[Ljava/lang/String;
+#getAlwaysRun()Z
+#getInheritGroups()Z
+#getAfterGroups()[Ljava/lang/String;
+#setAfterGroups([Ljava/lang/String;)V
+#getBeforeGroups()[Ljava/lang/String;
+#setBeforeGroups([Ljava/lang/String;)V
@3.5.1
-###org/testng/internal/annotations/BaseBeforeAfter

+###org/testng/internal/annotations/BeforeSuiteAnnotation
@3.5
+#<init>()V
@3.5.1
-###org/testng/internal/annotations/BeforeSuiteAnnotation

+###org/testng/internal/annotations/ConfigurationAnnotation
@3.5
+#<init>()V
+#setAfterSuite(Z)V
+#setAfterTest(Z)V
+#setAfterTestClass(Z)V
+#setAfterTestMethod(Z)V
+#setAlwaysRun(Z)V
+#setBeforeSuite(Z)V
+#setBeforeTest(Z)V
+#setBeforeTestClass(Z)V
+#setBeforeTestMethod(Z)V
+#setInheritGroups(Z)V
+#setParameters([Ljava/lang/String;)V
+#getBeforeTestClass()Z
+#getAfterTestClass()Z
+#getBeforeTestMethod()Z
+#getAfterTestMethod()Z
+#getBeforeSuite()Z
+#getAfterSuite()Z
+#getBeforeTest()Z
+#getAfterTest()Z
+#getParameters()[Ljava/lang/String;
+#getAlwaysRun()Z
+#getInheritGroups()Z
+#getAfterGroups()[Ljava/lang/String;
+#setAfterGroups([Ljava/lang/String;)V
+#getBeforeGroups()[Ljava/lang/String;
+#setBeforeGroups([Ljava/lang/String;)V
+#setFakeConfiguration(Z)V
+#isFakeConfiguration()Z
+#setFirstTimeOnly(Z)V
+#isFirstTimeOnly()Z
+#setLastTimeOnly(Z)V
+#isLastTimeOnly()Z
@3.5.1
-###org/testng/internal/annotations/ConfigurationAnnotation

+###org/testng/internal/annotations/Converter
@3.5
+#<init>()V
+#getBoolean(Ljava/lang/String;Z)Z
+#getInt(Ljava/lang/String;I)I
+#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getLong(Ljava/lang/String;J)J
+#getStringArray(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#getClassArray(Ljava/lang/String;[Ljava/lang/Class;)[Ljava/lang/Class;
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
@3.5.1
-###org/testng/internal/annotations/Converter

+###org/testng/internal/annotations/DataProviderAnnotation
@3.5
+#<init>()V
+#isParallel()Z
+#setParallel(Z)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
@3.5.1
-###org/testng/internal/annotations/DataProviderAnnotation

+###org/testng/internal/annotations/DefaultAnnotationTransformer
@3.5
+#<init>()V
+#transform(Lorg/testng/annotations/ITestAnnotation;Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Method;)V
@3.5.1
-###org/testng/internal/annotations/DefaultAnnotationTransformer

+###org/testng/internal/annotations/ExpectedExceptionsAnnotation
@3.5
+#<init>()V
+#getValue()[Ljava/lang/Class;
+#setValue([Ljava/lang/Class;)V
@3.5.1
-###org/testng/internal/annotations/ExpectedExceptionsAnnotation

+###org/testng/internal/annotations/FactoryAnnotation
@3.5
+#<init>()V
+#getDataProvider()Ljava/lang/String;
+#setDataProvider(Ljava/lang/String;)V
+#getParameters()[Ljava/lang/String;
+#setParameters([Ljava/lang/String;)V
+#setDataProviderClass(Ljava/lang/Class;)V
+#getDataProviderClass()Ljava/lang/Class;
+#getEnabled()Z
+#setEnabled(Z)V
@3.5.1
-###org/testng/internal/annotations/FactoryAnnotation

+###org/testng/internal/annotations/IAfterClass
@3.5
@3.5.1
-###org/testng/internal/annotations/IAfterClass

+###org/testng/internal/annotations/IAfterGroups
@3.5
@3.5.1
-###org/testng/internal/annotations/IAfterGroups

+###org/testng/internal/annotations/IAfterMethod
@3.5
@3.5.1
-###org/testng/internal/annotations/IAfterMethod

+###org/testng/internal/annotations/IAfterSuite
@3.5
@3.5.1
-###org/testng/internal/annotations/IAfterSuite

+###org/testng/internal/annotations/IAfterTest
@3.5
@3.5.1
-###org/testng/internal/annotations/IAfterTest

+###org/testng/internal/annotations/IAfterTests
@3.5
@3.5.1
-###org/testng/internal/annotations/IAfterTests

+###org/testng/internal/annotations/IAnnotationFinder
@3.5
+#findAnnotation(Ljava/lang/Class;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;
+#findAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;
+#findAnnotation(Lorg/testng/ITestNGMethod;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;
+#findAnnotation(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;
+#hasTestInstance(Ljava/lang/reflect/Method;I)Z
+#findOptionalValues(Ljava/lang/reflect/Method;)[Ljava/lang/String;
+#findOptionalValues(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;
@3.5.1
-###org/testng/internal/annotations/IAnnotationFinder

+###org/testng/internal/annotations/IAnnotationTransformer
@3.5
@3.5.1
-###org/testng/internal/annotations/IAnnotationTransformer

+###org/testng/internal/annotations/IBaseBeforeAfter
@3.5
+#getEnabled()Z
+#getGroups()[Ljava/lang/String;
+#getDependsOnGroups()[Ljava/lang/String;
+#getDependsOnMethods()[Ljava/lang/String;
+#getAlwaysRun()Z
+#getInheritGroups()Z
+#getDescription()Ljava/lang/String;
@3.5.1
-###org/testng/internal/annotations/IBaseBeforeAfter

+###org/testng/internal/annotations/IBeforeClass
@3.5
@3.5.1
-###org/testng/internal/annotations/IBeforeClass

+###org/testng/internal/annotations/IBeforeGroups
@3.5
@3.5.1
-###org/testng/internal/annotations/IBeforeGroups

+###org/testng/internal/annotations/IBeforeMethod
@3.5
@3.5.1
-###org/testng/internal/annotations/IBeforeMethod

+###org/testng/internal/annotations/IBeforeSuite
@3.5
@3.5.1
-###org/testng/internal/annotations/IBeforeSuite

+###org/testng/internal/annotations/IBeforeTest
@3.5
@3.5.1
-###org/testng/internal/annotations/IBeforeTest

+###org/testng/internal/annotations/IDataProvidable
@3.5
+#getDataProvider()Ljava/lang/String;
+#setDataProvider(Ljava/lang/String;)V
+#getDataProviderClass()Ljava/lang/Class;
+#setDataProviderClass(Ljava/lang/Class;)V
@3.5.1
-###org/testng/internal/annotations/IDataProvidable

+###org/testng/internal/annotations/IListeners
@3.5
@3.5.1
-###org/testng/internal/annotations/IListeners

+###org/testng/internal/annotations/ITest
@3.5
@3.5.1
-###org/testng/internal/annotations/ITest

+###org/testng/internal/annotations/JDK15AnnotationFinder
@3.5
+#<init>(Lorg/testng/IAnnotationTransformer;)V
+#findAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;
+#findAnnotation(Lorg/testng/ITestNGMethod;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;
+#findAnnotation(Ljava/lang/Class;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;
+#findAnnotation(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)Lorg/testng/annotations/IAnnotation;
+#hasTestInstance(Ljava/lang/reflect/Method;I)Z
+#findOptionalValues(Ljava/lang/reflect/Method;)[Ljava/lang/String;
+#findOptionalValues(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;
@3.5.1
-###org/testng/internal/annotations/JDK15AnnotationFinder

+###org/testng/internal/annotations/JDK15TagFactory
@3.5
+#<init>()V
+#createTag(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/Class;Lorg/testng/IAnnotationTransformer;)Lorg/testng/annotations/IAnnotation;
@3.5.1
-###org/testng/internal/annotations/JDK15TagFactory

+###org/testng/internal/annotations/ListenersAnnotation
@3.5
+#<init>()V
+#getValue()[Ljava/lang/Class;
+#setValue([Ljava/lang/Class;)V
@3.5.1
-###org/testng/internal/annotations/ListenersAnnotation

+###org/testng/internal/annotations/ObjectFactoryAnnotation
@3.5
+#<init>()V
@3.5.1
-###org/testng/internal/annotations/ObjectFactoryAnnotation

+###org/testng/internal/annotations/ParametersAnnotation
@3.5
+#<init>()V
+#getValue()[Ljava/lang/String;
+#setValue([Ljava/lang/String;)V
@3.5.1
-###org/testng/internal/annotations/ParametersAnnotation

+###org/testng/internal/annotations/TestAnnotation
@3.5
+#<init>()V
+#getExpectedExceptions()[Ljava/lang/Class;
+#setExpectedExceptions([Ljava/lang/Class;)V
+#getExpectedExceptionsMessageRegExp()Ljava/lang/String;
+#setExpectedExceptionsMessageRegExp(Ljava/lang/String;)V
+#setAlwaysRun(Z)V
+#setDataProvider(Ljava/lang/String;)V
+#getDataProviderClass()Ljava/lang/Class;
+#setDataProviderClass(Ljava/lang/Class;)V
+#setInvocationCount(I)V
+#setSuccessPercentage(I)V
+#getInvocationCount()I
+#invocationTimeOut()J
+#setInvocationTimeOut(J)V
+#getSuccessPercentage()I
+#getDataProvider()Ljava/lang/String;
+#getAlwaysRun()Z
+#getThreadPoolSize()I
+#setThreadPoolSize(I)V
+#getSuiteName()Ljava/lang/String;
+#setSuiteName(Ljava/lang/String;)V
+#getTestName()Ljava/lang/String;
+#setTestName(Ljava/lang/String;)V
+#getSingleThreaded()Z
+#setSingleThreaded(Z)V
+#getSequential()Z
+#setSequential(Z)V
+#getRetryAnalyzer()Lorg/testng/IRetryAnalyzer;
+#setRetryAnalyzer(Ljava/lang/Class;)V
+#setSkipFailedInvocations(Z)V
+#skipFailedInvocations()Z
+#setIgnoreMissingDependencies(Z)V
+#ignoreMissingDependencies()Z
@3.5.1
-###org/testng/internal/annotations/TestAnnotation

+###org/testng/internal/annotations/TestOrConfiguration
@3.5
+#<init>()V
+#getGroups()[Ljava/lang/String;
+#getEnabled()Z
+#setDependsOnGroups([Ljava/lang/String;)V
+#setDependsOnMethods([Ljava/lang/String;)V
+#setGroups([Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#setEnabled(Z)V
+#getDependsOnGroups()[Ljava/lang/String;
+#getDependsOnMethods()[Ljava/lang/String;
+#getParameters()[Ljava/lang/String;
+#setParameters([Ljava/lang/String;)V
+#setDescription(Ljava/lang/String;)V
+#getPriority()I
+#setPriority(I)V
+#setTimeOut(J)V
+#getTimeOut()J
@3.5.1
-###org/testng/internal/annotations/TestOrConfiguration

+###org/testng/internal/collections/Pair
@3.5
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#first()Ljava/lang/Object;
+#second()Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#create(Ljava/lang/Object;Ljava/lang/Object;)Lorg/testng/internal/collections/Pair;
+#of(Ljava/lang/Object;Ljava/lang/Object;)Lorg/testng/internal/collections/Pair;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/internal/collections/Pair

+###org/testng/internal/invokers/InvokedMethodListenerInvoker
@3.5
+#<init>(Lorg/testng/internal/invokers/InvokedMethodListenerMethod;Lorg/testng/ITestResult;Lorg/testng/ITestContext;)V
+#invokeListener(Lorg/testng/IInvokedMethodListener;Lorg/testng/IInvokedMethod;)V
@3.5.1
-###org/testng/internal/invokers/InvokedMethodListenerInvoker

+###org/testng/internal/invokers/InvokedMethodListenerMethod
@3.5
+#values()[Lorg/testng/internal/invokers/InvokedMethodListenerMethod;
+#valueOf(Ljava/lang/String;)Lorg/testng/internal/invokers/InvokedMethodListenerMethod;
@3.5.1
-###org/testng/internal/invokers/InvokedMethodListenerMethod

+###org/testng/internal/junit/ArrayAsserts
@3.5
+#<init>()V
+#assertArrayEquals(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V
+#assertArrayEquals([Ljava/lang/Object;[Ljava/lang/Object;)V
+#assertArrayEquals(Ljava/lang/String;[B[B)V
+#assertArrayEquals([B[B)V
+#assertArrayEquals(Ljava/lang/String;[C[C)V
+#assertArrayEquals([C[C)V
+#assertArrayEquals(Ljava/lang/String;[S[S)V
+#assertArrayEquals([S[S)V
+#assertArrayEquals(Ljava/lang/String;[I[I)V
+#assertArrayEquals([I[I)V
+#assertArrayEquals(Ljava/lang/String;[J[J)V
+#assertArrayEquals([J[J)V
+#assertArrayEquals(Ljava/lang/String;[D[DD)V
+#assertArrayEquals([D[DD)V
+#assertArrayEquals(Ljava/lang/String;[F[FF)V
+#assertArrayEquals([F[FF)V
@3.5.1
-###org/testng/internal/junit/ArrayAsserts

+###org/testng/internal/junit/ArrayComparisonFailure
@3.5
+#<init>(Ljava/lang/String;Ljava/lang/AssertionError;I)V
+#addDimension(I)V
+#getMessage()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/internal/junit/ArrayComparisonFailure

+###org/testng/internal/junit/ComparisonCriteria
@3.5
+#<init>()V
+#arrayEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
@3.5.1
-###org/testng/internal/junit/ComparisonCriteria

+###org/testng/internal/junit/ExactComparisonCriteria
@3.5
+#<init>()V
@3.5.1
-###org/testng/internal/junit/ExactComparisonCriteria

+###org/testng/internal/junit/InexactComparisonCriteria
@3.5
+#<init>(D)V
@3.5.1
-###org/testng/internal/junit/InexactComparisonCriteria

+###org/testng/internal/remote/SlavePool
@3.5
+#<init>()V
+#addSlaves([Ljava/net/Socket;)V
+#addSlave(Ljava/net/Socket;)V
+#getSlave()Lorg/testng/remote/ConnectionInfo;
+#returnSlave(Lorg/testng/remote/ConnectionInfo;)V
@3.5.1
-###org/testng/internal/remote/SlavePool

+###org/testng/internal/remote/SocketLinkedBlockingQueue
@3.5
+#<init>()V
@3.5.1
-###org/testng/internal/remote/SocketLinkedBlockingQueue

+###org/testng/internal/thread/ExecutorAdapter
@3.5
+#<init>(ILorg/testng/internal/thread/IThreadFactory;)V
+#submitRunnable(Ljava/lang/Runnable;)Lorg/testng/internal/thread/IFutureResult;
+#stopNow()V
+#awaitTermination(J)Z
+#getStackTraces()[[Ljava/lang/StackTraceElement;
@3.5.1
-###org/testng/internal/thread/ExecutorAdapter

+###org/testng/internal/thread/FutureResultAdapter
@3.5
+#<init>(Ljava/util/concurrent/Future;)V
+#get()Ljava/lang/Object;
@3.5.1
-###org/testng/internal/thread/FutureResultAdapter

+###org/testng/internal/thread/IExecutor
@3.5
+#submitRunnable(Ljava/lang/Runnable;)Lorg/testng/internal/thread/IFutureResult;
+#shutdown()V
+#awaitTermination(J)Z
+#stopNow()V
+#getStackTraces()[[Ljava/lang/StackTraceElement;
@3.5.1
-###org/testng/internal/thread/IExecutor

+###org/testng/internal/thread/IFutureResult
@3.5
+#get()Ljava/lang/Object;
@3.5.1
-###org/testng/internal/thread/IFutureResult

+###org/testng/internal/thread/IThreadFactory
@3.5
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
+#getThreadFactory()Ljava/lang/Object;
+#getThreads()Ljava/util/List;
@3.5.1
-###org/testng/internal/thread/IThreadFactory

+###org/testng/internal/thread/TestNGThread
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Runnable;Ljava/lang/String;)V
@3.5.1
-###org/testng/internal/thread/TestNGThread

+###org/testng/internal/thread/ThreadExecutionException
@3.5
+#<init>(Ljava/lang/Throwable;)V
@3.5.1
-###org/testng/internal/thread/ThreadExecutionException

+###org/testng/internal/thread/ThreadTimeoutException
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.5.1
-###org/testng/internal/thread/ThreadTimeoutException

+###org/testng/internal/thread/ThreadUtil$ThreadFactoryImpl
@3.5
+#<init>(Ljava/lang/String;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
+#getThreadFactory()Ljava/lang/Object;
+#getThreads()Ljava/util/List;
@3.5.1
-###org/testng/internal/thread/ThreadUtil$ThreadFactoryImpl

+###org/testng/internal/thread/ThreadUtil
@3.5
+#<init>()V
+#isTestNGThread()Z
+#execute(Ljava/util/List;IJZ)V
+#currentThreadInfo()Ljava/lang/String;
+#createExecutor(ILjava/lang/String;)Lorg/testng/internal/thread/IExecutor;
@3.5.1
-###org/testng/internal/thread/ThreadUtil

+###org/testng/internal/thread/graph/GraphThreadPoolExecutor
@3.5
+#<init>(Lorg/testng/internal/DynamicGraph;Lorg/testng/internal/thread/graph/IThreadWorkerFactory;IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
+#run()V
+#afterExecute(Ljava/lang/Runnable;Ljava/lang/Throwable;)V
@3.5.1
-###org/testng/internal/thread/graph/GraphThreadPoolExecutor

+###org/testng/internal/thread/graph/IThreadWorkerFactory
@3.5
+#createWorkers(Ljava/util/List;)Ljava/util/List;
@3.5.1
-###org/testng/internal/thread/graph/IThreadWorkerFactory

+###org/testng/internal/thread/graph/IWorker
@3.5
+#getTasks()Ljava/util/List;
+#getTimeOut()J
+#getPriority()I
@3.5.1
-###org/testng/internal/thread/graph/IWorker

+###org/testng/internal/thread/graph/SuiteWorkerFactory
@3.5
+#<init>(Lorg/testng/internal/SuiteRunnerMap;Ljava/lang/Integer;Ljava/lang/String;)V
+#createWorkers(Ljava/util/List;)Ljava/util/List;
@3.5.1
-###org/testng/internal/thread/graph/SuiteWorkerFactory

+###org/testng/junit/IJUnitTestRunner
@3.5
+#setInvokedMethodListeners(Ljava/util/Collection;)V
+#setTestResultNotifier(Lorg/testng/internal/ITestResultNotifier;)V
+#run(Ljava/lang/Class;[Ljava/lang/String;)V
+#getTestMethods()Ljava/util/List;
@3.5.1
-###org/testng/junit/IJUnitTestRunner

+###org/testng/junit/JUnit3TestClass
@3.5
+#<init>(Ljunit/framework/Test;)V
@3.5.1
-###org/testng/junit/JUnit3TestClass

+###org/testng/junit/JUnit3TestMethod
@3.5
+#<init>(Lorg/testng/junit/JUnitTestClass;Ljunit/framework/Test;)V
@3.5.1
-###org/testng/junit/JUnit3TestMethod

+###org/testng/junit/JUnit3TestRecognizer
@3.5
+#<init>()V
+#isTest(Ljava/lang/Class;)Z
@3.5.1
-###org/testng/junit/JUnit3TestRecognizer

+###org/testng/junit/JUnit4TestClass
@3.5
+#<init>(Lorg/junit/runner/Description;)V
@3.5.1
-###org/testng/junit/JUnit4TestClass

+###org/testng/junit/JUnit4TestMethod
@3.5
+#<init>(Lorg/testng/junit/JUnitTestClass;Lorg/junit/runner/Description;)V
+#getInstances()[Ljava/lang/Object;
@3.5.1
-###org/testng/junit/JUnit4TestMethod

+###org/testng/junit/JUnit4TestRecognizer
@3.5
+#<init>()V
+#isTest(Ljava/lang/Class;)Z
@3.5.1
-###org/testng/junit/JUnit4TestRecognizer

+###org/testng/junit/JUnit4TestRunner
@3.5
+#<init>()V
+#<init>(Lorg/testng/internal/ITestResultNotifier;)V
+#getTestMethods()Ljava/util/List;
+#setTestResultNotifier(Lorg/testng/internal/ITestResultNotifier;)V
+#setInvokedMethodListeners(Ljava/util/Collection;)V
+#run(Ljava/lang/Class;[Ljava/lang/String;)V
+#start(Ljava/lang/Class;[Ljava/lang/String;)Lorg/junit/runner/Result;
@3.5.1
-###org/testng/junit/JUnit4TestRunner

+###org/testng/junit/JUnitMethodFinder
@3.5
+#<init>(Ljava/lang/String;Lorg/testng/internal/annotations/IAnnotationFinder;)V
+#getTestMethods(Ljava/lang/Class;Lorg/testng/xml/XmlTest;)[Lorg/testng/ITestNGMethod;
+#getBeforeTestMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterTestMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterClassMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeClassMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeSuiteMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterSuiteMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeTestConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterTestConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getBeforeGroupsConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
+#getAfterGroupsConfigurationMethods(Ljava/lang/Class;)[Lorg/testng/ITestNGMethod;
@3.5.1
-###org/testng/junit/JUnitMethodFinder

+###org/testng/junit/JUnitTestClass
@3.5
+#<init>(Ljava/lang/Class;)V
+#addInstance(Ljava/lang/Object;)V
+#getName()Ljava/lang/String;
+#getRealClass()Ljava/lang/Class;
+#getTestName()Ljava/lang/String;
+#getXmlTest()Lorg/testng/xml/XmlTest;
+#getXmlClass()Lorg/testng/xml/XmlClass;
+#getInstanceCount()I
+#getInstanceHashCodes()[J
+#getInstances(Z)[Ljava/lang/Object;
+#getTestMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeTestMethods()[Lorg/testng/ITestNGMethod;
+#getAfterTestMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeClassMethods()[Lorg/testng/ITestNGMethod;
+#getAfterClassMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeSuiteMethods()[Lorg/testng/ITestNGMethod;
+#getAfterSuiteMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeGroupsMethods()[Lorg/testng/ITestNGMethod;
+#getAfterGroupsMethods()[Lorg/testng/ITestNGMethod;
+#getBeforeTestConfigurationMethods()[Lorg/testng/ITestNGMethod;
+#getAfterTestConfigurationMethods()[Lorg/testng/ITestNGMethod;
@3.5.1
-###org/testng/junit/JUnitTestClass

+###org/testng/junit/JUnitTestFinder
@3.5
+#<init>()V
+#isJUnitTest(Ljava/lang/Class;)Z
@3.5.1
-###org/testng/junit/JUnitTestFinder

+###org/testng/junit/JUnitTestMethod
@3.5
+#isTest()Z
+#clone()Lorg/testng/ITestNGMethod;
+#clone()Ljava/lang/Object;
@3.5.1
-###org/testng/junit/JUnitTestMethod

+###org/testng/junit/JUnitTestRunner
@3.5
+#<init>()V
+#<init>(Lorg/testng/internal/ITestResultNotifier;)V
+#getTestMethods()Ljava/util/List;
+#setTestResultNotifier(Lorg/testng/internal/ITestResultNotifier;)V
+#startTest(Ljunit/framework/Test;)V
+#addError(Ljunit/framework/Test;Ljava/lang/Throwable;)V
+#addFailure(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V
+#endTest(Ljunit/framework/Test;)V
+#setInvokedMethodListeners(Ljava/util/Collection;)V
+#run(Ljava/lang/Class;[Ljava/lang/String;)V
+#start(Ljava/lang/Class;[Ljava/lang/String;)Ljunit/framework/TestResult;
@3.5.1
-###org/testng/junit/JUnitTestRunner

+###org/testng/log/TextFormatter
@3.5
+#<init>()V
+#format(Ljava/util/logging/LogRecord;)Ljava/lang/String;
@3.5.1
-###org/testng/log/TextFormatter

+###org/testng/log4testng/Logger
@3.5
+#getLogger(Ljava/lang/Class;)Lorg/testng/log4testng/Logger;
+#isTraceEnabled()Z
+#trace(Ljava/lang/Object;)V
+#trace(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/Object;)V
+#debug(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/Object;)V
+#info(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Object;)V
+#warn(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Object;)V
+#error(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#fatal(Ljava/lang/Object;)V
+#fatal(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#main([Ljava/lang/String;)V
@3.5.1
-###org/testng/log4testng/Logger

+###org/testng/mustache/BaseChunk
@3.5
+#<init>(Lorg/testng/mustache/Model;)V
@3.5.1
-###org/testng/mustache/BaseChunk

+###org/testng/mustache/Model
@3.5
+#<init>(Ljava/util/Map;)V
+#push(Ljava/lang/String;Ljava/lang/Object;)V
+#resolveValue(Ljava/lang/String;)Lorg/testng/mustache/Value;
+#getTopSubModel()Ljava/lang/Object;
+#popSubModel()V
+#resolveValueToString(Ljava/lang/String;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/mustache/Model

+###org/testng/mustache/Mustache
@3.5
+#<init>()V
+#run(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@3.5.1
-###org/testng/mustache/Mustache

+###org/testng/mustache/StringChunk
@3.5
+#<init>(Lorg/testng/mustache/Model;Ljava/lang/String;)V
+#compose()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/mustache/StringChunk

+###org/testng/mustache/Value
@3.5
+#<init>(Ljava/lang/Object;)V
+#get()Ljava/lang/Object;
@3.5.1
-###org/testng/mustache/Value

+###org/testng/mustache/VariableChunk
@3.5
+#<init>(Lorg/testng/mustache/Model;Ljava/lang/String;)V
+#compose()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/mustache/VariableChunk

+###org/testng/remote/ConnectionInfo
@3.5
+#<init>()V
+#getOis()Ljava/io/ObjectInputStream;
+#getOos()Ljava/io/ObjectOutputStream;
+#setSocket(Ljava/net/Socket;)V
+#getSocket()Ljava/net/Socket;
@3.5.1
-###org/testng/remote/ConnectionInfo

+###org/testng/remote/RemoteArgs
@3.5
+#<init>()V
@3.5.1
-###org/testng/remote/RemoteArgs

+###org/testng/remote/RemoteSuiteWorker
@3.5
+#<init>(Lorg/testng/xml/XmlSuite;Lorg/testng/internal/remote/SlavePool;Lorg/testng/remote/adapter/RemoteResultListener;)V
+#run()V
@3.5.1
-###org/testng/remote/RemoteSuiteWorker

+###org/testng/remote/RemoteTestNG
@3.5
+#<init>()V
+#setHost(Ljava/lang/String;)V
+#run()V
+#main([Ljava/lang/String;)V
+#isVerbose()Z
+#isDebug()Z
@3.5.1
-###org/testng/remote/RemoteTestNG

+###org/testng/remote/RemoteWorker
@3.5
+#<init>(Lorg/testng/remote/adapter/RemoteResultListener;Lorg/testng/internal/remote/SlavePool;)V
@3.5.1
-###org/testng/remote/RemoteWorker

+###org/testng/remote/SuiteDispatcher
@3.5
+#<init>(Ljava/lang/String;)V
+#dispatch(Lorg/testng/internal/IConfiguration;Ljava/util/List;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
@3.5.1
-###org/testng/remote/SuiteDispatcher

+###org/testng/remote/SuiteSlave
@3.5
+#<init>(Ljava/lang/String;Lorg/testng/TestNG;)V
+#waitForSuites()V
@3.5.1
-###org/testng/remote/SuiteSlave

+###org/testng/remote/adapter/DefaultMastertAdapter
@3.5
+#<init>()V
+#init(Ljava/util/Properties;)V
+#runSuitesRemotely(Lorg/testng/xml/XmlSuite;Lorg/testng/remote/adapter/RemoteResultListener;)V
+#awaitTermination(J)V
@3.5.1
-###org/testng/remote/adapter/DefaultMastertAdapter

+###org/testng/remote/adapter/DefaultWorkerAdapter
@3.5
+#<init>()V
+#init(Ljava/util/Properties;)V
+#getSuite(J)Lorg/testng/xml/XmlSuite;
+#returnResult(Lorg/testng/ISuite;)V
@3.5.1
-###org/testng/remote/adapter/DefaultWorkerAdapter

+###org/testng/remote/adapter/IMasterAdapter
@3.5
+#init(Ljava/util/Properties;)V
+#runSuitesRemotely(Lorg/testng/xml/XmlSuite;Lorg/testng/remote/adapter/RemoteResultListener;)V
+#awaitTermination(J)V
@3.5.1
-###org/testng/remote/adapter/IMasterAdapter

+###org/testng/remote/adapter/IWorkerAdapter
@3.5
+#init(Ljava/util/Properties;)V
+#getSuite(J)Lorg/testng/xml/XmlSuite;
+#returnResult(Lorg/testng/ISuite;)V
@3.5.1
-###org/testng/remote/adapter/IWorkerAdapter

+###org/testng/remote/adapter/RemoteResultListener
@3.5
+#<init>(Lorg/testng/SuiteRunner;)V
+#onResult(Lorg/testng/ISuite;)V
@3.5.1
-###org/testng/remote/adapter/RemoteResultListener

+###org/testng/remote/strprotocol/AbstractRemoteTestRunnerClient$ServerConnection
@3.5
+#<init>(Lorg/testng/remote/strprotocol/AbstractRemoteTestRunnerClient;Lorg/testng/remote/strprotocol/IMessageSender;)V
+#run()V
@3.5.1
-###org/testng/remote/strprotocol/AbstractRemoteTestRunnerClient$ServerConnection

+###org/testng/remote/strprotocol/AbstractRemoteTestRunnerClient
@3.5
+#<init>()V
+#startListening([Lorg/testng/remote/strprotocol/IRemoteSuiteListener;[Lorg/testng/remote/strprotocol/IRemoteTestListener;Lorg/testng/remote/strprotocol/AbstractRemoteTestRunnerClient$ServerConnection;)V
+#getSuiteListeners()[Lorg/testng/remote/strprotocol/IRemoteSuiteListener;
+#getTestListeners()[Lorg/testng/remote/strprotocol/IRemoteTestListener;
+#isRunning()Z
+#stopTest()V
@3.5.1
-###org/testng/remote/strprotocol/AbstractRemoteTestRunnerClient

+###org/testng/remote/strprotocol/BaseMessageSender
@3.5
+#<init>(Ljava/lang/String;IZ)V
+#connect()V
+#sendAck()V
+#sendStop()V
+#initReceiver()V
+#stopReceiver()V
+#shutDown()V
@3.5.1
-###org/testng/remote/strprotocol/BaseMessageSender

+###org/testng/remote/strprotocol/GenericMessage
@3.5
+#<init>(I)V
+#getSuiteCount()I
+#setSuiteCount(I)V
+#getTestCount()I
+#setTestCount(I)V
+#getMessageAsString()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/remote/strprotocol/GenericMessage

+###org/testng/remote/strprotocol/IMessage
@3.5
@3.5.1
-###org/testng/remote/strprotocol/IMessage

+###org/testng/remote/strprotocol/IMessageSender
@3.5
+#connect()V
+#initReceiver()V
+#stopReceiver()V
+#sendMessage(Lorg/testng/remote/strprotocol/IMessage;)V
+#receiveMessage()Lorg/testng/remote/strprotocol/IMessage;
+#shutDown()V
+#sendAck()V
+#sendStop()V
@3.5.1
-###org/testng/remote/strprotocol/IMessageSender

+###org/testng/remote/strprotocol/IRemoteSuiteListener
@3.5
+#onInitialization(Lorg/testng/remote/strprotocol/GenericMessage;)V
+#onStart(Lorg/testng/remote/strprotocol/SuiteMessage;)V
+#onFinish(Lorg/testng/remote/strprotocol/SuiteMessage;)V
@3.5.1
-###org/testng/remote/strprotocol/IRemoteSuiteListener

+###org/testng/remote/strprotocol/IRemoteTestListener
@3.5
+#onStart(Lorg/testng/remote/strprotocol/TestMessage;)V
+#onFinish(Lorg/testng/remote/strprotocol/TestMessage;)V
+#onTestStart(Lorg/testng/remote/strprotocol/TestResultMessage;)V
+#onTestSuccess(Lorg/testng/remote/strprotocol/TestResultMessage;)V
+#onTestFailure(Lorg/testng/remote/strprotocol/TestResultMessage;)V
+#onTestSkipped(Lorg/testng/remote/strprotocol/TestResultMessage;)V
+#onTestFailedButWithinSuccessPercentage(Lorg/testng/remote/strprotocol/TestResultMessage;)V
@3.5.1
-###org/testng/remote/strprotocol/IRemoteTestListener

+###org/testng/remote/strprotocol/IStringMessage
@3.5
+#getMessageAsString()Ljava/lang/String;
@3.5.1
-###org/testng/remote/strprotocol/IStringMessage

+###org/testng/remote/strprotocol/MessageHelper
@3.5
+#<init>()V
+#getMessageType(Ljava/lang/String;)I
+#unmarshallGenericMessage(Ljava/lang/String;)Lorg/testng/remote/strprotocol/GenericMessage;
+#createSuiteMessage(Ljava/lang/String;)Lorg/testng/remote/strprotocol/SuiteMessage;
+#createTestMessage(Ljava/lang/String;)Lorg/testng/remote/strprotocol/TestMessage;
+#unmarshallTestResultMessage(Ljava/lang/String;)Lorg/testng/remote/strprotocol/TestResultMessage;
+#replaceNewLine(Ljava/lang/String;)Ljava/lang/String;
+#replaceUnicodeCharactersWithAscii(Ljava/lang/String;)Ljava/lang/String;
+#replaceAsciiCharactersWithUnicode(Ljava/lang/String;)Ljava/lang/String;
+#replaceNewLineReplacer(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/testng/remote/strprotocol/MessageHelper

+###org/testng/remote/strprotocol/MessageHub
@3.5
+#<init>(Lorg/testng/remote/strprotocol/IMessageSender;)V
+#connect()V
+#shutDown()V
+#sendMessage(Lorg/testng/remote/strprotocol/IMessage;)V
+#receiveMessage()Lorg/testng/remote/strprotocol/IMessage;
+#setDebug(Z)V
+#initReceiver()V
+#getMessageSender()Lorg/testng/remote/strprotocol/IMessageSender;
@3.5.1
-###org/testng/remote/strprotocol/MessageHub

+###org/testng/remote/strprotocol/RemoteTestListener
@3.5
+#<init>(Lorg/testng/ISuite;Lorg/testng/xml/XmlTest;Lorg/testng/remote/strprotocol/MessageHub;)V
+#onStart(Lorg/testng/ITestContext;)V
+#onFinish(Lorg/testng/ITestContext;)V
+#onTestStart(Lorg/testng/ITestResult;)V
+#beforeConfiguration(Lorg/testng/ITestResult;)V
+#onTestFailedButWithinSuccessPercentage(Lorg/testng/ITestResult;)V
+#onTestFailure(Lorg/testng/ITestResult;)V
+#onTestSkipped(Lorg/testng/ITestResult;)V
+#onTestSuccess(Lorg/testng/ITestResult;)V
+#onConfigurationFailure(Lorg/testng/ITestResult;)V
+#onConfigurationSkip(Lorg/testng/ITestResult;)V
+#onConfigurationSuccess(Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/remote/strprotocol/RemoteTestListener

+###org/testng/remote/strprotocol/SerializedMessageSender
@3.5
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;IZ)V
+#sendMessage(Lorg/testng/remote/strprotocol/IMessage;)V
+#receiveMessage()Lorg/testng/remote/strprotocol/IMessage;
@3.5.1
-###org/testng/remote/strprotocol/SerializedMessageSender

+###org/testng/remote/strprotocol/StringMessageSender
@3.5
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;IZ)V
+#sendMessage(Lorg/testng/remote/strprotocol/IMessage;)V
+#receiveMessage()Lorg/testng/remote/strprotocol/IMessage;
@3.5.1
-###org/testng/remote/strprotocol/StringMessageSender

+###org/testng/remote/strprotocol/SuiteMessage
@3.5
+#<init>(Ljava/lang/String;ZI)V
+#<init>(Lorg/testng/ISuite;Z)V
+#setExcludedMethods(Ljava/util/List;)V
+#getExcludedMethods()Ljava/util/List;
+#getDescriptionForMethod(Ljava/lang/String;)Ljava/lang/String;
+#isMessageOnStart()Z
+#getSuiteName()Ljava/lang/String;
+#getTestMethodCount()I
+#getMessageAsString()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/remote/strprotocol/SuiteMessage

+###org/testng/remote/strprotocol/TestMessage
@3.5
+#<init>(ZLjava/lang/String;Ljava/lang/String;IIIII)V
+#<init>(Lorg/testng/ITestContext;Z)V
+#isMessageOnStart()Z
+#getMessageAsString()Ljava/lang/String;
+#getSuiteName()Ljava/lang/String;
+#getTestName()Ljava/lang/String;
+#isTestStart()Z
+#getTestMethodCount()I
+#getSuccessPercentageFailedTestCount()I
+#getFailedTestCount()I
+#getPassedTestCount()I
+#getSkippedTestCount()I
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/remote/strprotocol/TestMessage

+###org/testng/remote/strprotocol/TestResultMessage
@3.5
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;JJLjava/lang/String;II)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/testng/ITestResult;)V
+#<init>(Lorg/testng/ITestContext;Lorg/testng/ITestResult;)V
+#getResult()I
+#getMessageAsString()Ljava/lang/String;
+#getSuiteName()Ljava/lang/String;
+#getTestClass()Ljava/lang/String;
+#getMethod()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getStackTrace()Ljava/lang/String;
+#getEndMillis()J
+#getStartMillis()J
+#getParameters()[Ljava/lang/String;
+#getParameterTypes()[Ljava/lang/String;
+#getTestDescription()Ljava/lang/String;
+#toDisplayString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getInvocationCount()I
+#getCurrentInvocationCount()I
+#toString()Ljava/lang/String;
+#setParameters([Ljava/lang/String;)V
+#getInstanceName()Ljava/lang/String;
@3.5.1
-###org/testng/remote/strprotocol/TestResultMessage

+###org/testng/reporters/Buffer
@3.5
+#<init>()V
+#create()Lorg/testng/reporters/IBuffer;
@3.5.1
-###org/testng/reporters/Buffer

+###org/testng/reporters/DotTestListener
@3.5
+#<init>()V
+#onTestFailure(Lorg/testng/ITestResult;)V
+#onTestSkipped(Lorg/testng/ITestResult;)V
+#onTestSuccess(Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/reporters/DotTestListener

+###org/testng/reporters/EmailableReporter
@3.5
+#<init>()V
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#generateSuiteSummaryReport(Ljava/util/List;)V
@3.5.1
-###org/testng/reporters/EmailableReporter

+###org/testng/reporters/EmailableReporter2$ClassResult
@3.5
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getClassName()Ljava/lang/String;
+#getMethodResults()Ljava/util/List;
@3.5.1
-###org/testng/reporters/EmailableReporter2$ClassResult

+###org/testng/reporters/EmailableReporter2$MethodResult
@3.5
+#<init>(Ljava/util/List;)V
+#getResults()Ljava/util/List;
@3.5.1
-###org/testng/reporters/EmailableReporter2$MethodResult

+###org/testng/reporters/EmailableReporter2$SuiteResult
@3.5
+#<init>(Lorg/testng/ISuite;)V
+#getSuiteName()Ljava/lang/String;
+#getTestResults()Ljava/util/List;
@3.5.1
-###org/testng/reporters/EmailableReporter2$SuiteResult

+###org/testng/reporters/EmailableReporter2$TestResult
@3.5
+#<init>(Lorg/testng/ITestContext;)V
+#getTestName()Ljava/lang/String;
+#getFailedConfigurationResults()Ljava/util/List;
+#getFailedTestResults()Ljava/util/List;
+#getSkippedConfigurationResults()Ljava/util/List;
+#getSkippedTestResults()Ljava/util/List;
+#getPassedTestResults()Ljava/util/List;
+#getFailedTestCount()I
+#getSkippedTestCount()I
+#getPassedTestCount()I
+#getDuration()J
+#getIncludedGroups()Ljava/lang/String;
+#getExcludedGroups()Ljava/lang/String;
@3.5.1
-###org/testng/reporters/EmailableReporter2$TestResult

+###org/testng/reporters/EmailableReporter2
@3.5
+#<init>()V
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
@3.5.1
-###org/testng/reporters/EmailableReporter2

+###org/testng/reporters/ExitCodeListener
@3.5
+#<init>()V
+#<init>(Lorg/testng/TestNG;)V
@3.5.1
-###org/testng/reporters/ExitCodeListener

+###org/testng/reporters/FailedReporter
@3.5
+#<init>()V
+#<init>(Lorg/testng/xml/XmlSuite;)V
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#onFinish(Lorg/testng/ITestContext;)V[deprecated]
@3.5.1
-###org/testng/reporters/FailedReporter

+###org/testng/reporters/Files
@3.5
+#<init>()V
+#readFile(Ljava/io/File;)Ljava/lang/String;
+#readFile(Ljava/io/InputStream;)Ljava/lang/String;
+#writeFile(Ljava/lang/String;Ljava/io/File;)V
+#copyFile(Ljava/io/InputStream;Ljava/io/File;)V
+#streamToString(Ljava/io/InputStream;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/Files

+###org/testng/reporters/FileStringBuffer
@3.5
+#<init>()V
+#<init>(I)V
+#append(Ljava/lang/CharSequence;)Lorg/testng/reporters/FileStringBuffer;
+#toWriter(Ljava/io/Writer;)V
+#toString()Ljava/lang/String;
+#main([Ljava/lang/String;)V
+#append(Ljava/lang/CharSequence;)Lorg/testng/reporters/IBuffer;
@3.5.1
-###org/testng/reporters/FileStringBuffer

+###org/testng/reporters/HtmlHelper
@3.5
+#<init>()V
+#getCssString()Ljava/lang/String;
+#getCssString(Ljava/lang/String;)Ljava/lang/String;
+#generateStylesheet(Ljava/lang/String;)Ljava/io/File;
@3.5.1
-###org/testng/reporters/HtmlHelper

+###org/testng/reporters/IBuffer
@3.5
+#append(Ljava/lang/CharSequence;)Lorg/testng/reporters/IBuffer;
+#toWriter(Ljava/io/Writer;)V
@3.5.1
-###org/testng/reporters/IBuffer

+###org/testng/reporters/JqReporter
@3.5
+#<init>()V
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
@3.5.1
-###org/testng/reporters/JqReporter

+###org/testng/reporters/JUnitReportReporter
@3.5
+#<init>()V
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
@3.5.1
-###org/testng/reporters/JUnitReportReporter

+###org/testng/reporters/JUnitXMLReporter
@3.5
+#<init>()V
+#onTestStart(Lorg/testng/ITestResult;)V
+#beforeConfiguration(Lorg/testng/ITestResult;)V
+#onTestSuccess(Lorg/testng/ITestResult;)V
+#onTestFailedButWithinSuccessPercentage(Lorg/testng/ITestResult;)V
+#onTestFailure(Lorg/testng/ITestResult;)V
+#onTestSkipped(Lorg/testng/ITestResult;)V
+#onStart(Lorg/testng/ITestContext;)V
+#onFinish(Lorg/testng/ITestContext;)V
+#onConfigurationFailure(Lorg/testng/ITestResult;)V
+#onConfigurationSkip(Lorg/testng/ITestResult;)V
+#onConfigurationSuccess(Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/reporters/JUnitXMLReporter

+###org/testng/reporters/SuiteHTMLReporter
@3.5
+#<init>()V
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
@3.5.1
-###org/testng/reporters/SuiteHTMLReporter

+###org/testng/reporters/TestHTMLReporter
@3.5
+#<init>()V
+#onStart(Lorg/testng/ITestContext;)V
+#onFinish(Lorg/testng/ITestContext;)V
+#generateTable(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Ljava/util/Comparator;)V
+#generateLog(Lorg/testng/ITestContext;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V
@3.5.1
-###org/testng/reporters/TestHTMLReporter

+###org/testng/reporters/TextReporter
@3.5
+#<init>(Ljava/lang/String;I)V
+#onFinish(Lorg/testng/ITestContext;)V
+#ppp(Ljava/lang/String;)V
@3.5.1
-###org/testng/reporters/TextReporter

+###org/testng/reporters/VerboseReporter
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#beforeConfiguration(Lorg/testng/ITestResult;)V
+#onConfigurationFailure(Lorg/testng/ITestResult;)V
+#onConfigurationSkip(Lorg/testng/ITestResult;)V
+#onConfigurationSuccess(Lorg/testng/ITestResult;)V
+#onTestStart(Lorg/testng/ITestResult;)V
+#onTestFailure(Lorg/testng/ITestResult;)V
+#onTestFailedButWithinSuccessPercentage(Lorg/testng/ITestResult;)V
+#onTestSkipped(Lorg/testng/ITestResult;)V
+#onTestSuccess(Lorg/testng/ITestResult;)V
+#onStart(Lorg/testng/ITestContext;)V
+#onFinish(Lorg/testng/ITestContext;)V
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/reporters/VerboseReporter

+###org/testng/reporters/XMLConstants
@3.5
@3.5.1
-###org/testng/reporters/XMLConstants

+###org/testng/reporters/XMLReporter
@3.5
+#<init>()V
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#addDurationAttributes(Lorg/testng/reporters/XMLReporterConfig;Ljava/util/Properties;Ljava/util/Date;Ljava/util/Date;)V
+#getFileFragmentationLevel()I
+#setFileFragmentationLevel(I)V
+#getStackTraceOutputMethod()I
+#setStackTraceOutputMethod(I)V
+#getOutputDirectory()Ljava/lang/String;
+#setOutputDirectory(Ljava/lang/String;)V
+#isGenerateGroupsAttribute()Z
+#setGenerateGroupsAttribute(Z)V
+#isSplitClassAndPackageNames()Z
+#setSplitClassAndPackageNames(Z)V
+#getTimestampFormat()Ljava/lang/String;
+#setTimestampFormat(Ljava/lang/String;)V
+#isGenerateDependsOnMethods()Z
+#setGenerateDependsOnMethods(Z)V
+#setGenerateDependsOnGroups(Z)V
+#isGenerateDependsOnGroups()Z
+#setGenerateTestResultAttributes(Z)V
+#isGenerateTestResultAttributes()Z
@3.5.1
-###org/testng/reporters/XMLReporter

+###org/testng/reporters/XMLReporterConfig
@3.5
+#<init>()V
+#getStatus(Ljava/lang/String;)Ljava/lang/Integer;
+#getFileFragmentationLevel()I
+#setFileFragmentationLevel(I)V
+#getStackTraceOutputMethod()I
+#setStackTraceOutputMethod(I)V
+#getOutputDirectory()Ljava/lang/String;
+#setOutputDirectory(Ljava/lang/String;)V
+#isGenerateGroupsAttribute()Z
+#setGenerateGroupsAttribute(Z)V
+#isSplitClassAndPackageNames()Z
+#setSplitClassAndPackageNames(Z)V
+#getTimestampFormat()Ljava/lang/String;
+#setTimestampFormat(Ljava/lang/String;)V
+#isGenerateDependsOnMethods()Z
+#setGenerateDependsOnMethods(Z)V
+#isGenerateDependsOnGroups()Z
+#setGenerateDependsOnGroups(Z)V
+#setGenerateTestResultAttributes(Z)V
+#isGenerateTestResultAttributes()Z
@3.5.1
-###org/testng/reporters/XMLReporterConfig

+###org/testng/reporters/XMLStringBuffer
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/testng/reporters/IBuffer;Ljava/lang/String;)V
+#setXmlDetails(Ljava/lang/String;Ljava/lang/String;)V
+#setDocType(Ljava/lang/String;)V
+#push(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#push(Ljava/lang/String;Ljava/lang/String;)V
+#push(Ljava/lang/String;Ljava/util/Properties;)V
+#push(Ljava/lang/String;[Ljava/lang/String;)V
+#push(Ljava/lang/String;)V
+#pop()V
+#pop(Ljava/lang/String;)V
+#addRequired(Ljava/lang/String;Ljava/lang/String;)V
+#addRequired(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#addRequired(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#addOptional(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#addOptional(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#addOptional(Ljava/lang/String;Ljava/lang/String;)V
+#addOptional(Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Properties;)V
+#addOptional(Ljava/lang/String;Ljava/lang/Boolean;)V
+#addEmptyElement(Ljava/lang/String;)V
+#addEmptyElement(Ljava/lang/String;Ljava/util/Properties;)V
+#addEmptyElement(Ljava/lang/String;[Ljava/lang/String;)V
+#addComment(Ljava/lang/String;)V
+#addString(Ljava/lang/String;)V
+#addCDATA(Ljava/lang/String;)V
+#getStringBuffer()Lorg/testng/reporters/IBuffer;
+#toXML()Ljava/lang/String;
+#main([Ljava/lang/String;)V
+#getCurrentIndent()Ljava/lang/String;
+#toWriter(Ljava/io/Writer;)V
@3.5.1
-###org/testng/reporters/XMLStringBuffer

+###org/testng/reporters/XMLSuiteResultWriter
@3.5
+#<init>(Lorg/testng/reporters/XMLReporterConfig;)V
+#writeSuiteResult(Lorg/testng/reporters/XMLStringBuffer;Lorg/testng/ISuiteResult;)V
+#addTestMethodParams(Lorg/testng/reporters/XMLStringBuffer;Lorg/testng/ITestResult;)V
@3.5.1
-###org/testng/reporters/XMLSuiteResultWriter

+###org/testng/reporters/XMLUtils
@3.5
+#xml(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;
+#extractComment(Ljava/lang/String;Ljava/util/Properties;)Ljava/lang/String;
+#xmlOptional(Lorg/testng/reporters/IBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Properties;)V
+#xmlOptional(Lorg/testng/reporters/IBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#xmlRequired(Lorg/testng/reporters/IBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#xmlOpen(Lorg/testng/reporters/IBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
+#appendAttributes(Lorg/testng/reporters/IBuffer;Ljava/util/Properties;)V
+#xmlOpen(Lorg/testng/reporters/IBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;Z)V
+#xmlClose(Lorg/testng/reporters/IBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#escape(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/XMLUtils

+###org/testng/reporters/jq/BannerPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#generate(Lorg/testng/reporters/XMLStringBuffer;)V
@3.5.1
-###org/testng/reporters/jq/BannerPanel

+###org/testng/reporters/jq/BaseMultiSuitePanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#generate(Lorg/testng/reporters/XMLStringBuffer;)V
+#getClassName()Ljava/lang/String;
+#getPanelName(Lorg/testng/ISuite;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/BaseMultiSuitePanel

+###org/testng/reporters/jq/BasePanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
@3.5.1
-###org/testng/reporters/jq/BasePanel

+###org/testng/reporters/jq/ChronologicalPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#getPrefix()Ljava/lang/String;
+#getHeader(Lorg/testng/ISuite;)Ljava/lang/String;
+#getContent(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;
+#getNavigatorLink(Lorg/testng/ISuite;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/ChronologicalPanel

+###org/testng/reporters/jq/GroupPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#getPrefix()Ljava/lang/String;
+#getHeader(Lorg/testng/ISuite;)Ljava/lang/String;
+#getContent(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;
+#getNavigatorLink(Lorg/testng/ISuite;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/GroupPanel

+###org/testng/reporters/jq/IgnoredMethodsPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#getPrefix()Ljava/lang/String;
+#getHeader(Lorg/testng/ISuite;)Ljava/lang/String;
+#getContent(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;
+#getNavigatorLink(Lorg/testng/ISuite;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/IgnoredMethodsPanel

+###org/testng/reporters/jq/INavigatorPanel
@3.5
+#getPanelName(Lorg/testng/ISuite;)Ljava/lang/String;
+#getNavigatorLink(Lorg/testng/ISuite;)Ljava/lang/String;
+#getClassName()Ljava/lang/String;
+#getPrefix()Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/INavigatorPanel

+###org/testng/reporters/jq/IPanel
@3.5
+#generate(Lorg/testng/reporters/XMLStringBuffer;)V
@3.5.1
-###org/testng/reporters/jq/IPanel

+###org/testng/reporters/jq/Main
@3.5
+#<init>()V
+#generateReport(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
@3.5.1
-###org/testng/reporters/jq/Main

+###org/testng/reporters/jq/Model
@3.5
+#<init>(Ljava/util/List;)V
+#getSuites()Ljava/util/List;
+#getFailedResultsByClass(Lorg/testng/ISuite;)Lorg/testng/reporters/jq/ResultsByClass;
+#getSkippedResultsByClass(Lorg/testng/ISuite;)Lorg/testng/reporters/jq/ResultsByClass;
+#getPassedResultsByClass(Lorg/testng/ISuite;)Lorg/testng/reporters/jq/ResultsByClass;
+#getTag(Lorg/testng/ITestResult;)Ljava/lang/String;
+#getTestResults(Lorg/testng/ISuite;)Ljava/util/List;
+#getTestResultName(Lorg/testng/ITestResult;)Ljava/lang/String;
+#getAllFailedResults()Ljava/util/List;
+#getImage(Ljava/lang/String;)Ljava/lang/String;
+#getStatusForSuite(Ljava/lang/String;)Ljava/lang/String;
+#nonnullSet(Ljava/util/Set;)Ljava/util/Set;
+#nonnullList(Ljava/util/List;)Ljava/util/List;
+#getGroups(Ljava/lang/String;)Ljava/util/List;
+#getMethodsInGroup(Ljava/lang/String;)Ljava/util/List;
+#getAllTestResults(Lorg/testng/ISuite;)Ljava/util/List;
+#getAllTestResults(Lorg/testng/ISuite;Z)Ljava/util/List;
@3.5.1
-###org/testng/reporters/jq/Model

+###org/testng/reporters/jq/NavigatorPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;Ljava/util/List;)V
+#generate(Lorg/testng/reporters/XMLStringBuffer;)V
@3.5.1
-###org/testng/reporters/jq/NavigatorPanel

+###org/testng/reporters/jq/ReporterPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#getPrefix()Ljava/lang/String;
+#getHeader(Lorg/testng/ISuite;)Ljava/lang/String;
+#getContent(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;
+#getNavigatorLink(Lorg/testng/ISuite;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/ReporterPanel

+###org/testng/reporters/jq/ResultsByClass
@3.5
+#<init>()V
+#addResult(Ljava/lang/Class;Lorg/testng/ITestResult;)V
+#getResults(Ljava/lang/Class;)Ljava/util/List;
+#getClasses()Ljava/util/List;
@3.5.1
-###org/testng/reporters/jq/ResultsByClass

+###org/testng/reporters/jq/SuitePanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#generate(Lorg/testng/reporters/XMLStringBuffer;)V
@3.5.1
-###org/testng/reporters/jq/SuitePanel

+###org/testng/reporters/jq/TestNgXmlPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#getPrefix()Ljava/lang/String;
+#getHeader(Lorg/testng/ISuite;)Ljava/lang/String;
+#getContent(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;
+#getNavigatorLink(Lorg/testng/ISuite;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/TestNgXmlPanel

+###org/testng/reporters/jq/TestPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#getPrefix()Ljava/lang/String;
+#getHeader(Lorg/testng/ISuite;)Ljava/lang/String;
+#getContent(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;
+#getNavigatorLink(Lorg/testng/ISuite;)Ljava/lang/String;
+#getClassName()Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/TestPanel

+###org/testng/reporters/jq/TimesPanel
@3.5
+#<init>(Lorg/testng/reporters/jq/Model;)V
+#getPrefix()Ljava/lang/String;
+#getHeader(Lorg/testng/ISuite;)Ljava/lang/String;
+#getContent(Lorg/testng/ISuite;Lorg/testng/reporters/XMLStringBuffer;)Ljava/lang/String;
+#getNavigatorLink(Lorg/testng/ISuite;)Ljava/lang/String;
@3.5.1
-###org/testng/reporters/jq/TimesPanel

+###org/testng/reporters/util/StackTraceTools
@3.5
+#<init>()V
+#getTestRoot([Ljava/lang/StackTraceElement;Lorg/testng/ITestNGMethod;)I
+#getTestNGInstrastructure([Ljava/lang/StackTraceElement;Lorg/testng/ITestNGMethod;)[Ljava/lang/StackTraceElement;
@3.5.1
-###org/testng/reporters/util/StackTraceTools

+###org/testng/util/RetryAnalyzerCount
@3.5
+#<init>()V
+#retry(Lorg/testng/ITestResult;)Z
+#retryMethod(Lorg/testng/ITestResult;)Z
@3.5.1
-###org/testng/util/RetryAnalyzerCount

+###org/testng/util/Strings
@3.5
+#<init>()V
+#isNullOrEmpty(Ljava/lang/String;)Z
+#escapeHtml(Ljava/lang/String;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@3.5.1
-###org/testng/util/Strings

+###org/testng/xml/IFileParser
@3.5
+#parse(Ljava/lang/String;Ljava/io/InputStream;Z)Ljava/lang/Object;
@3.5.1
-###org/testng/xml/IFileParser

+###org/testng/xml/IPostProcessor
@3.5
+#process(Ljava/util/Collection;)Ljava/util/Collection;
@3.5.1
-###org/testng/xml/IPostProcessor

+###org/testng/xml/ISuiteParser
@3.5
+#accept(Ljava/lang/String;)Z
@3.5.1
-###org/testng/xml/ISuiteParser

+###org/testng/xml/LaunchSuite$ExistingSuite
@3.5
+#<init>(Ljava/io/File;)V
+#getSuiteBuffer()Lorg/testng/reporters/XMLStringBuffer;
+#save(Ljava/io/File;)Ljava/io/File;
@3.5.1
-###org/testng/xml/LaunchSuite$ExistingSuite

+###org/testng/xml/LaunchSuite
@3.5
+#isTemporary()Z
+#save(Ljava/io/File;)Ljava/io/File;
+#getSuiteBuffer()Lorg/testng/reporters/XMLStringBuffer;
@3.5.1
-###org/testng/xml/LaunchSuite

+###org/testng/xml/Parameters
@3.5
+#<init>()V
+#getLocalParameter(Ljava/lang/String;)Ljava/util/List;
+#getAllValues(Ljava/lang/String;)Ljava/util/List;
+#getValue(Ljava/lang/String;)Ljava/util/List;
+#addLocalParameter(Ljava/lang/String;Ljava/lang/String;)V
+#addAllParameter(Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###org/testng/xml/Parameters

+###org/testng/xml/Parser
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/io/InputStream;)V
+#setPostProcessor(Lorg/testng/xml/IPostProcessor;)V
+#setLoadClasses(Z)V
+#parse()Ljava/util/Collection;
+#parseToList()Ljava/util/List;
@3.5.1
-###org/testng/xml/Parser

+###org/testng/xml/ResultContentHandler
@3.5
+#<init>(Lorg/testng/remote/strprotocol/IRemoteSuiteListener;Lorg/testng/remote/strprotocol/IRemoteTestListener;Z)V
+#startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
+#characters([CII)V
+#endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###org/testng/xml/ResultContentHandler

+###org/testng/xml/ResultXMLParser
@3.5
+#<init>(Lorg/testng/remote/strprotocol/IRemoteSuiteListener;Lorg/testng/remote/strprotocol/IRemoteTestListener;)V
+#parse()V
+#parse(Ljava/lang/String;Ljava/io/InputStream;Z)Ljava/lang/Object;
+#main([Ljava/lang/String;)V
@3.5.1
-###org/testng/xml/ResultXMLParser

+###org/testng/xml/SuiteGenerator
@3.5
+#<init>()V
+#createProxiedXmlSuite(Ljava/io/File;)Lorg/testng/xml/LaunchSuite;
+#createSuite(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Map;Ljava/util/Collection;Ljava/util/Map;Ljava/lang/String;I)Lorg/testng/xml/LaunchSuite;
+#createCustomizedSuite(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Map;Ljava/lang/String;I)Lorg/testng/xml/LaunchSuite;[deprecated]
@3.5.1
-###org/testng/xml/SuiteGenerator

+###org/testng/xml/SuiteXmlParser
@3.5
+#<init>()V
+#parse(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/testng/xml/XmlSuite;
+#accept(Ljava/lang/String;)Z
+#parse(Ljava/lang/String;Ljava/io/InputStream;Z)Ljava/lang/Object;
@3.5.1
-###org/testng/xml/SuiteXmlParser

+###org/testng/xml/TestNGContentHandler
@3.5
+#<init>(Ljava/lang/String;Z)V
+#resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;
+#xmlClasses(ZLorg/xml/sax/Attributes;)V
+#xmlListeners(ZLorg/xml/sax/Attributes;)V
+#xmlListener(ZLorg/xml/sax/Attributes;)V
+#xmlPackages(ZLorg/xml/sax/Attributes;)V
+#xmlMethodSelectors(ZLorg/xml/sax/Attributes;)V
+#xmlSelectorClass(ZLorg/xml/sax/Attributes;)V
+#xmlMethodSelector(ZLorg/xml/sax/Attributes;)V
+#xmlRun(ZLorg/xml/sax/Attributes;)V
+#xmlGroup(ZLorg/xml/sax/Attributes;)V
+#startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
+#endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#error(Lorg/xml/sax/SAXParseException;)V
+#characters([CII)V
+#getSuite()Lorg/testng/xml/XmlSuite;
@3.5.1
-###org/testng/xml/TestNGContentHandler

+###org/testng/xml/XmlClass
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Z)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;IZ)V
+#getSupportClass()Ljava/lang/Class;
+#setClass(Ljava/lang/Class;)V
+#getExcludedMethods()Ljava/util/List;
+#setExcludedMethods(Ljava/util/List;)V
+#getIncludedMethods()Ljava/util/List;
+#setIncludedMethods(Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#loadClasses()Z
+#toString()Ljava/lang/String;
+#toXml(Ljava/lang/String;)Ljava/lang/String;
+#listToString(Ljava/util/List;)Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#getIndex()I
+#setIndex(I)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#setParameters(Ljava/util/Map;)V
+#getAllParameters()Ljava/util/Map;
+#getLocalParameters()Ljava/util/Map;
+#getParameters()Ljava/util/Map;[deprecated]
+#setXmlTest(Lorg/testng/xml/XmlTest;)V
@3.5.1
-###org/testng/xml/XmlClass

+###org/testng/xml/XmlDefine
@3.5
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toXml(Ljava/lang/String;)Ljava/lang/String;
+#onElement(Ljava/lang/String;)V
+#getIncludes()Ljava/util/List;
@3.5.1
-###org/testng/xml/XmlDefine

+###org/testng/xml/XmlDependencies
@3.5
+#<init>()V
+#onGroup(Ljava/lang/String;Ljava/lang/String;)V
+#getDependencies()Ljava/util/Map;
+#toXml(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/testng/xml/XmlDependencies

+###org/testng/xml/XmlGroups
@3.5
+#<init>()V
+#getDefines()Ljava/util/List;
+#addDefine(Lorg/testng/xml/XmlDefine;)V
+#setDefines(Ljava/util/List;)V
+#getRun()Lorg/testng/xml/XmlRun;
+#setRun(Lorg/testng/xml/XmlRun;)V
+#getDependencies()Ljava/util/List;
+#setXmlDependencies(Lorg/testng/xml/XmlDependencies;)V
+#toXml(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/testng/xml/XmlGroups

+###org/testng/xml/XmlInclude
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;Ljava/util/List;I)V
+#setDescription(Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getInvocationNumbers()Ljava/util/List;
+#getIndex()I
+#toXml(Ljava/lang/String;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#addParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getParameters()Ljava/util/Map;[deprecated]
+#getLocalParameters()Ljava/util/Map;
+#getAllParameters()Ljava/util/Map;
+#setXmlClass(Lorg/testng/xml/XmlClass;)V
@3.5.1
-###org/testng/xml/XmlInclude

+###org/testng/xml/XmlMethodSelector
@3.5
+#<init>()V
+#setClassName(Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#setElement(Ljava/lang/String;Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#setScript(Lorg/testng/xml/XmlScript;)V
+#getExpression()Ljava/lang/String;
+#setExpression(Ljava/lang/String;)V
+#getLanguage()Ljava/lang/String;
+#setLanguage(Ljava/lang/String;)V
+#getPriority()I
+#setPriority(I)V
+#toXml(Ljava/lang/String;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.5.1
-###org/testng/xml/XmlMethodSelector

+###org/testng/xml/XmlMethodSelectors
@3.5
+#<init>()V
+#getMethodSelectors()Ljava/util/List;
+#setMethodSelector(Lorg/testng/xml/XmlMethodSelector;)V
+#toXml(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/testng/xml/XmlMethodSelectors

+###org/testng/xml/XmlPackage
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getExclude()Ljava/util/List;
+#setExclude(Ljava/util/List;)V
+#getInclude()Ljava/util/List;
+#setInclude(Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getXmlClasses()Ljava/util/List;
+#toXml(Ljava/lang/String;)Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.5.1
-###org/testng/xml/XmlPackage

+###org/testng/xml/XMLParser
@3.5
+#<init>()V
+#parse(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;)V
@3.5.1
-###org/testng/xml/XMLParser

+###org/testng/xml/XmlRun
@3.5
+#<init>()V
+#toXml(Ljava/lang/String;)Ljava/lang/String;
+#getExcludes()Ljava/util/List;
+#onExclude(Ljava/lang/String;)V
+#getIncludes()Ljava/util/List;
+#onInclude(Ljava/lang/String;)V
@3.5.1
-###org/testng/xml/XmlRun

+###org/testng/xml/XmlScript
@3.5
+#<init>()V
+#setLanguage(Ljava/lang/String;)V
+#setScript(Ljava/lang/String;)V
+#getScript()Ljava/lang/String;
+#getLanguage()Ljava/lang/String;
@3.5.1
-###org/testng/xml/XmlScript

+###org/testng/xml/XmlSuite$ParallelMode
@3.5
+#values()[Lorg/testng/xml/XmlSuite$ParallelMode;
+#valueOf(Ljava/lang/String;)Lorg/testng/xml/XmlSuite$ParallelMode;
+#getValidParallel(Ljava/lang/String;)Lorg/testng/xml/XmlSuite$ParallelMode;
+#toString()Ljava/lang/String;
@3.5.1
-###org/testng/xml/XmlSuite$ParallelMode

+###org/testng/xml/XmlSuite
@3.5
+#<init>()V
+#getFileName()Ljava/lang/String;
+#setFileName(Ljava/lang/String;)V
+#getParallel()Lorg/testng/xml/XmlSuite$ParallelMode;
+#getParentModule()Ljava/lang/String;
+#getGuiceStage()Ljava/lang/String;
+#getObjectFactory()Lorg/testng/ITestObjectFactory;
+#setObjectFactory(Lorg/testng/ITestObjectFactory;)V
+#setParallel(Ljava/lang/String;)V[deprecated]
+#setParallel(Lorg/testng/xml/XmlSuite$ParallelMode;)V
+#setParentModule(Ljava/lang/String;)V
+#setGuiceStage(Ljava/lang/String;)V
+#setConfigFailurePolicy(Ljava/lang/String;)V
+#getConfigFailurePolicy()Ljava/lang/String;
+#getVerbose()Ljava/lang/Integer;
+#setVerbose(Ljava/lang/Integer;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getTest()Ljava/lang/String;
+#getTests()Ljava/util/List;
+#setTests(Ljava/util/List;)V
+#getMethodSelectors()Ljava/util/List;
+#setMethodSelectors(Ljava/util/List;)V
+#setParameters(Ljava/util/Map;)V
+#getParameters()Ljava/util/Map;
+#getAllParameters()Ljava/util/Map;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getThreadCount()I
+#setThreadCount(I)V
+#isJUnit()Ljava/lang/Boolean;
+#setJUnit(Ljava/lang/Boolean;)V
+#setJunit(Ljava/lang/Boolean;)V
+#skipFailedInvocationCounts()Ljava/lang/Boolean;
+#setSkipFailedInvocationCounts(Z)V
+#setXmlPackages(Ljava/util/List;)V
+#getXmlPackages()Ljava/util/List;
+#getPackages()Ljava/util/List;
+#setMethodSelectors(Lorg/testng/xml/XmlMethodSelectors;)V
+#setPackages(Ljava/util/List;)V
+#toXml()Ljava/lang/String;
+#setXmlMethodSelectors(Lorg/testng/xml/XmlMethodSelectors;)V
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#setTimeOut(Ljava/lang/String;)V
+#getTimeOut()Ljava/lang/String;
+#getTimeOut(J)J
+#setSuiteFiles(Ljava/util/List;)V
+#getSuiteFiles()Ljava/util/List;
+#setListeners(Ljava/util/List;)V
+#getListeners()Ljava/util/List;
+#setDataProviderThreadCount(I)V
+#getDataProviderThreadCount()I
+#setParentSuite(Lorg/testng/xml/XmlSuite;)V
+#getParentSuite()Lorg/testng/xml/XmlSuite;
+#getChildSuites()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#setPreserveOrder(Ljava/lang/String;)V
+#getPreserveOrder()Ljava/lang/String;
+#getIncludedGroups()Ljava/util/List;
+#addIncludedGroup(Ljava/lang/String;)V
+#setIncludedGroups(Ljava/util/List;)V
+#setExcludedGroups(Ljava/util/List;)V
+#getExcludedGroups()Ljava/util/List;
+#addExcludedGroup(Ljava/lang/String;)V
+#getGroupByInstances()Ljava/lang/Boolean;
+#setGroupByInstances(Z)V
+#addListener(Ljava/lang/String;)V
+#getAllowReturnValues()Ljava/lang/Boolean;
+#setAllowReturnValues(Ljava/lang/Boolean;)V
+#setGroups(Lorg/testng/xml/XmlGroups;)V
+#onParameterElement(Ljava/lang/String;Ljava/lang/String;)V
+#onListenerElement(Ljava/lang/String;)V
+#onSuiteFilesElement(Ljava/lang/String;)V
+#onPackagesElement(Ljava/lang/String;)V
+#onMethodSelectorElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getGroups()Lorg/testng/xml/XmlGroups;
+#addTest(Lorg/testng/xml/XmlTest;)V
+#getPackageNames()Ljava/util/Collection;
@3.5.1
-###org/testng/xml/XmlSuite

+###org/testng/xml/XmlTest
@3.5
+#<init>(Lorg/testng/xml/XmlSuite;I)V
+#<init>(Lorg/testng/xml/XmlSuite;)V
+#<init>()V
+#setXmlPackages(Ljava/util/List;)V
+#getXmlPackages()Ljava/util/List;
+#getPackages()Ljava/util/List;
+#setPackages(Ljava/util/List;)V
+#getMethodSelectors()Ljava/util/List;
+#setMethodSelectors(Ljava/util/List;)V
+#getSuite()Lorg/testng/xml/XmlSuite;
+#getIncludedGroups()Ljava/util/List;
+#setClassNames(Ljava/util/List;)V[deprecated]
+#getXmlClasses()Ljava/util/List;
+#getClasses()Ljava/util/List;
+#setClasses(Ljava/util/List;)V
+#setXmlClasses(Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setVerbose(I)V
+#getThreadCount()I
+#setThreadCount(I)V
+#setIncludedGroups(Ljava/util/List;)V
+#setExcludedGroups(Ljava/util/List;)V
+#getExcludedGroups()Ljava/util/List;
+#addIncludedGroup(Ljava/lang/String;)V
+#addExcludedGroup(Ljava/lang/String;)V
+#getVerbose()I
+#getGroupByInstances()Z
+#setGroupByInstances(Z)V
+#isJUnit()Z
+#setJUnit(Z)V
+#setJunit(Z)V
+#setSkipFailedInvocationCounts(Z)V
+#skipFailedInvocationCounts()Z
+#addMetaGroup(Ljava/lang/String;Ljava/util/List;)V
+#setMetaGroups(Ljava/util/Map;)V
+#getMetaGroups()Ljava/util/Map;
+#setParameters(Ljava/util/Map;)V
+#addParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getAllParameters()Ljava/util/Map;
+#getLocalParameters()Ljava/util/Map;
+#getParameters()Ljava/util/Map;[deprecated]
+#getTestParameters()Ljava/util/Map;
+#setParallel(Lorg/testng/xml/XmlSuite$ParallelMode;)V
+#getParallel()Lorg/testng/xml/XmlSuite$ParallelMode;
+#getTimeOut()Ljava/lang/String;
+#getTimeOut(J)J
+#setTimeOut(J)V
+#setExpression(Ljava/lang/String;)V
+#setBeanShellExpression(Ljava/lang/String;)V
+#getExpression()Ljava/lang/String;
+#toXml(Ljava/lang/String;)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#getInvocationNumbers(Ljava/lang/String;)Ljava/util/List;
+#setPreserveOrder(Ljava/lang/String;)V
+#getPreserveOrder()Ljava/lang/String;
+#setSuite(Lorg/testng/xml/XmlSuite;)V
+#getAllowReturnValues()Ljava/lang/Boolean;
+#setAllowReturnValues(Ljava/lang/Boolean;)V
+#getIndex()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#addXmlDependencyGroup(Ljava/lang/String;Ljava/lang/String;)V
+#getXmlDependencyGroups()Ljava/util/Map;
+#setXmlSuite(Lorg/testng/xml/XmlSuite;)V
+#setGroups(Lorg/testng/xml/XmlGroups;)V
@3.5.1
-###org/testng/xml/XmlTest

+###org/testng/xml/XmlUtils
@3.5
+#<init>()V
+#setProperty(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#dumpParameters(Lorg/testng/reporters/XMLStringBuffer;Ljava/util/Map;)V
@3.5.1
-###org/testng/xml/XmlUtils

+###org/testng/xml/dom/DomUtil$NodeProcessor
@3.5
+#process(Lorg/w3c/dom/Node;)V
@3.5.1
-###org/testng/xml/dom/DomUtil$NodeProcessor

+###org/testng/xml/dom/DomUtil
@3.5
+#<init>(Lorg/w3c/dom/Document;)V
+#populate(Lorg/testng/xml/XmlSuite;)V
+#findChildren(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/util/Iterator;
@3.5.1
-###org/testng/xml/dom/DomUtil

+###org/testng/xml/dom/DomXmlParser
@3.5
+#<init>()V
+#parse(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/testng/xml/XmlSuite;
+#accept(Ljava/lang/String;)Z
+#parse2(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/testng/xml/XmlSuite;
+#parse(Ljava/lang/String;Ljava/io/InputStream;Z)Ljava/lang/Object;
@3.5.1
-###org/testng/xml/dom/DomXmlParser

+###org/testng/xml/dom/ITagFactory
@3.5
+#getClassForTag(Ljava/lang/String;)Ljava/lang/Class;
@3.5.1
-###org/testng/xml/dom/ITagFactory

+###org/testng/xml/dom/ITagSetter
@3.5
+#setProperty(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/Node;)V
@3.5.1
-###org/testng/xml/dom/ITagSetter

+###org/testng/xml/dom/OnElement
@3.5
+#tag()Ljava/lang/String;
+#attributes()[Ljava/lang/String;
@3.5.1
-###org/testng/xml/dom/OnElement

+###org/testng/xml/dom/OnElementList
@3.5
+#tag()Ljava/lang/String;
+#attributes()[Ljava/lang/String;
@3.5.1
-###org/testng/xml/dom/OnElementList

+###org/testng/xml/dom/ParentSetter
@3.5
@3.5.1
-###org/testng/xml/dom/ParentSetter

+###org/testng/xml/dom/Reflect
@3.5
+#<init>()V
+#findMethodsWithAnnotation(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;)Ljava/util/List;
+#findSetterForTag(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Lorg/testng/internal/collections/Pair;
+#toCapitalizedCamelCase(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###org/testng/xml/dom/Reflect

+###org/testng/xml/dom/Tag
@3.5
+#name()Ljava/lang/String;
@3.5.1
-###org/testng/xml/dom/Tag

+###org/testng/xml/dom/TagContent
@3.5
+#name()Ljava/lang/String;
@3.5.1
-###org/testng/xml/dom/TagContent

+###org/testng/xml/dom/TestNGTagFactory
@3.5
+#<init>()V
+#getClassForTag(Ljava/lang/String;)Ljava/lang/Class;
@3.5.1
-###org/testng/xml/dom/TestNGTagFactory

+###org/testng/xml/dom/Wrapper
@3.5
+#<init>(Ljava/lang/annotation/Annotation;Ljava/lang/Object;)V
+#getTagName()Ljava/lang/String;
+#getParameters(Lorg/w3c/dom/Element;)Ljava/util/List;
@3.5.1
-###org/testng/xml/dom/Wrapper

+###org/testng/xml/dom/XDom
@3.5
+#<init>(Lorg/testng/xml/dom/ITagFactory;Lorg/w3c/dom/Document;)V
+#parse()Ljava/lang/Object;
+#populateChildren(Lorg/w3c/dom/Node;Ljava/lang/Object;)V
+#main([Ljava/lang/String;)V
@3.5.1
-###org/testng/xml/dom/XDom

+###org/testng/internal/Version
@3.5
+#<init>()V
+#displayBanner()V
@3.5.1
-###org/testng/internal/Version

+###com/beust/jcommander/converters/BaseConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#getOptionName()Ljava/lang/String;
@3.5.1
-###com/beust/jcommander/converters/BaseConverter

+###com/beust/jcommander/converters/BigDecimalConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/math/BigDecimal;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/BigDecimalConverter

+###com/beust/jcommander/converters/BooleanConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/lang/Boolean;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/BooleanConverter

+###com/beust/jcommander/converters/CommaParameterSplitter
@3.5
+#<init>()V
+#split(Ljava/lang/String;)Ljava/util/List;
@3.5.1
-###com/beust/jcommander/converters/CommaParameterSplitter

+###com/beust/jcommander/converters/DoubleConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/lang/Double;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/DoubleConverter

+###com/beust/jcommander/converters/FileConverter
@3.5
+#<init>()V
+#convert(Ljava/lang/String;)Ljava/io/File;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/FileConverter

+###com/beust/jcommander/converters/FloatConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/lang/Float;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/FloatConverter

+###com/beust/jcommander/converters/IntegerConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/lang/Integer;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/IntegerConverter

+###com/beust/jcommander/converters/IParameterSplitter
@3.5
+#split(Ljava/lang/String;)Ljava/util/List;
@3.5.1
-###com/beust/jcommander/converters/IParameterSplitter

+###com/beust/jcommander/converters/ISO8601DateConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/util/Date;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/ISO8601DateConverter

+###com/beust/jcommander/converters/LongConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/lang/Long;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/LongConverter

+###com/beust/jcommander/converters/NoConverter
@3.5
+#<init>()V
+#convert(Ljava/lang/String;)Ljava/lang/String;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/NoConverter

+###com/beust/jcommander/converters/PathConverter
@3.5
+#<init>()V
+#convert(Ljava/lang/String;)Ljava/nio/file/Path;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/PathConverter

+###com/beust/jcommander/converters/StringConverter
@3.5
+#<init>()V
+#convert(Ljava/lang/String;)Ljava/lang/String;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/StringConverter

+###com/beust/jcommander/converters/URIConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/net/URI;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/URIConverter

+###com/beust/jcommander/converters/URLConverter
@3.5
+#<init>(Ljava/lang/String;)V
+#convert(Ljava/lang/String;)Ljava/net/URL;
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/converters/URLConverter

+###com/beust/jcommander/defaultprovider/PropertyFileDefaultProvider
@3.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getDefaultValueFor(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###com/beust/jcommander/defaultprovider/PropertyFileDefaultProvider

+###com/beust/jcommander/DynamicParameter
@3.5
+#names()[Ljava/lang/String;
+#required()Z
+#description()Ljava/lang/String;
+#descriptionKey()Ljava/lang/String;
+#hidden()Z
+#validateWith()Ljava/lang/Class;
+#assignment()Ljava/lang/String;
+#validateValueWith()Ljava/lang/Class;
@3.5.1
-###com/beust/jcommander/DynamicParameter

+###com/beust/jcommander/FuzzyMap
@3.5
+#<init>()V
+#findInMap(Ljava/util/Map;Lcom/beust/jcommander/FuzzyMap$IKey;ZZ)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/FuzzyMap

+###com/beust/jcommander/IDefaultProvider
@3.5
+#getDefaultValueFor(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###com/beust/jcommander/IDefaultProvider

+###com/beust/jcommander/internal/Console
@3.5
+#print(Ljava/lang/String;)V
+#println(Ljava/lang/String;)V
+#readPassword(Z)[C
@3.5.1
-###com/beust/jcommander/internal/Console

+###com/beust/jcommander/internal/DefaultConsole
@3.5
+#<init>()V
+#print(Ljava/lang/String;)V
+#println(Ljava/lang/String;)V
+#readPassword(Z)[C
@3.5.1
-###com/beust/jcommander/internal/DefaultConsole

+###com/beust/jcommander/internal/DefaultConverterFactory
@3.5
+#<init>()V
+#getConverter(Ljava/lang/Class;)Ljava/lang/Class;
@3.5.1
-###com/beust/jcommander/internal/DefaultConverterFactory

+###com/beust/jcommander/internal/JDK6Console
@3.5
+#<init>(Ljava/lang/Object;)V
+#print(Ljava/lang/String;)V
+#println(Ljava/lang/String;)V
+#readPassword(Z)[C
@3.5.1
-###com/beust/jcommander/internal/JDK6Console

+###com/beust/jcommander/internal/Lists
@3.5
+#<init>()V
+#newArrayList()Ljava/util/List;
+#newArrayList(Ljava/util/Collection;)Ljava/util/List;
+#newArrayList([Ljava/lang/Object;)Ljava/util/List;
+#newArrayList(I)Ljava/util/List;
+#newLinkedList()Ljava/util/LinkedList;
+#newLinkedList(Ljava/util/Collection;)Ljava/util/LinkedList;
@3.5.1
-###com/beust/jcommander/internal/Lists

+###com/beust/jcommander/internal/Maps
@3.5
+#<init>()V
+#newHashMap()Ljava/util/Map;
+#newLinkedHashMap()Ljava/util/Map;
+#newHashMap([Ljava/lang/Object;)Ljava/util/Map;
@3.5.1
-###com/beust/jcommander/internal/Maps

+###com/beust/jcommander/internal/Nullable
@3.5
@3.5.1
-###com/beust/jcommander/internal/Nullable

+###com/beust/jcommander/internal/Sets
@3.5
+#<init>()V
+#newHashSet()Ljava/util/Set;
+#newLinkedHashSet()Ljava/util/Set;
@3.5.1
-###com/beust/jcommander/internal/Sets

+###com/beust/jcommander/IParameterValidator
@3.5
+#validate(Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###com/beust/jcommander/IParameterValidator

+###com/beust/jcommander/IParameterValidator2
@3.5
+#validate(Ljava/lang/String;Ljava/lang/String;Lcom/beust/jcommander/ParameterDescription;)V
@3.5.1
-###com/beust/jcommander/IParameterValidator2

+###com/beust/jcommander/IStringConverter
@3.5
+#convert(Ljava/lang/String;)Ljava/lang/Object;
@3.5.1
-###com/beust/jcommander/IStringConverter

+###com/beust/jcommander/IStringConverterFactory
@3.5
+#getConverter(Ljava/lang/Class;)Ljava/lang/Class;
@3.5.1
-###com/beust/jcommander/IStringConverterFactory

+###com/beust/jcommander/IValueValidator
@3.5
+#validate(Ljava/lang/String;Ljava/lang/Object;)V
@3.5.1
-###com/beust/jcommander/IValueValidator

+###com/beust/jcommander/IVariableArity
@3.5
+#processVariableArity(Ljava/lang/String;[Ljava/lang/String;)I
@3.5.1
-###com/beust/jcommander/IVariableArity

+###com/beust/jcommander/JCommander
@3.5
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/util/ResourceBundle;)V
+#<init>(Ljava/lang/Object;Ljava/util/ResourceBundle;[Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;[Ljava/lang/String;)V
+#getConsole()Lcom/beust/jcommander/internal/Console;
+#addObject(Ljava/lang/Object;)V
+#setDescriptionsBundle(Ljava/util/ResourceBundle;)V
+#parse([Ljava/lang/String;)V
+#parseWithoutValidation([Ljava/lang/String;)V
+#getMainParameterDescription()Ljava/lang/String;
+#setProgramName(Ljava/lang/String;)V
+#setProgramName(Ljava/lang/String;[Ljava/lang/String;)V
+#usage(Ljava/lang/String;)V
+#usage(Ljava/lang/String;Ljava/lang/StringBuilder;)V
+#usage(Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/lang/String;)V
+#getCommandDescription(Ljava/lang/String;)Ljava/lang/String;
+#usage()V
+#usage(Ljava/lang/StringBuilder;)V
+#usage(Ljava/lang/StringBuilder;Ljava/lang/String;)V
+#setParameterDescriptionComparator(Ljava/util/Comparator;)V
+#setColumnSize(I)V
+#getColumnSize()I
+#getParameters()Ljava/util/List;
+#getMainParameter()Lcom/beust/jcommander/ParameterDescription;
+#setDefaultProvider(Lcom/beust/jcommander/IDefaultProvider;)V
+#addConverterFactory(Lcom/beust/jcommander/IStringConverterFactory;)V
+#findConverter(Ljava/lang/Class;)Ljava/lang/Class;
+#convertValue(Lcom/beust/jcommander/ParameterDescription;Ljava/lang/String;)Ljava/lang/Object;
+#convertValue(Lcom/beust/jcommander/Parameterized;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#addCommand(Ljava/lang/String;Ljava/lang/Object;)V
+#addCommand(Ljava/lang/Object;)V
+#addCommand(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/String;)V
+#getCommands()Ljava/util/Map;
+#getParsedCommand()Ljava/lang/String;
+#getParsedAlias()Ljava/lang/String;
+#getObjects()Ljava/util/List;
+#setVerbose(I)V
+#setCaseSensitiveOptions(Z)V
+#setAllowAbbreviatedOptions(Z)V
+#setAcceptUnknownOptions(Z)V
+#getUnknownOptions()Ljava/util/List;
+#setAllowParameterOverwriting(Z)V
+#isParameterOverwritingAllowed()Z
@3.5.1
-###com/beust/jcommander/JCommander

+###com/beust/jcommander/MissingCommandException
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@3.5.1
-###com/beust/jcommander/MissingCommandException

+###com/beust/jcommander/Parameter
@3.5
+#names()[Ljava/lang/String;
+#description()Ljava/lang/String;
+#required()Z
+#descriptionKey()Ljava/lang/String;
+#arity()I
+#password()Z
+#converter()Ljava/lang/Class;
+#listConverter()Ljava/lang/Class;
+#hidden()Z
+#validateWith()Ljava/lang/Class;
+#validateValueWith()Ljava/lang/Class;
+#variableArity()Z
+#splitter()Ljava/lang/Class;
+#echoInput()Z
+#help()Z
+#forceNonOverwritable()Z
@3.5.1
-###com/beust/jcommander/Parameter

+###com/beust/jcommander/ParameterDescription
@3.5
+#<init>(Ljava/lang/Object;Lcom/beust/jcommander/DynamicParameter;Lcom/beust/jcommander/Parameterized;Ljava/util/ResourceBundle;Lcom/beust/jcommander/JCommander;)V
+#<init>(Ljava/lang/Object;Lcom/beust/jcommander/Parameter;Lcom/beust/jcommander/Parameterized;Ljava/util/ResourceBundle;Lcom/beust/jcommander/JCommander;)V
+#getLongestName()Ljava/lang/String;
+#getDefault()Ljava/lang/Object;
+#getDescription()Ljava/lang/String;
+#getObject()Ljava/lang/Object;
+#getNames()Ljava/lang/String;
+#getParameter()Lcom/beust/jcommander/WrappedParameter;
+#getParameterized()Lcom/beust/jcommander/Parameterized;
+#addValue(Ljava/lang/String;)V
+#isAssigned()Z
+#setAssigned(Z)V
+#addValue(Ljava/lang/String;Z)V
+#validateValueParameter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V
+#validateParameter(Lcom/beust/jcommander/ParameterDescription;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#isDynamicParameter()Z
+#isHelp()Z
+#isNonOverwritableForced()Z
@3.5.1
-###com/beust/jcommander/ParameterDescription

+###com/beust/jcommander/ParameterException
@3.5
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.5.1
-###com/beust/jcommander/ParameterException

+###com/beust/jcommander/Parameterized
@3.5
+#<init>(Lcom/beust/jcommander/WrappedParameter;Lcom/beust/jcommander/ParametersDelegate;Ljava/lang/reflect/Field;Ljava/lang/reflect/Method;)V
+#parseArg(Ljava/lang/Object;)Ljava/util/List;
+#getWrappedParameter()Lcom/beust/jcommander/WrappedParameter;
+#getType()Ljava/lang/Class;
+#getName()Ljava/lang/String;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#isDynamicParameter(Ljava/lang/reflect/Field;)Z
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#getDelegateAnnotation()Lcom/beust/jcommander/ParametersDelegate;
+#getGenericType()Ljava/lang/reflect/Type;
+#getParameter()Lcom/beust/jcommander/Parameter;
+#findFieldGenericType()Ljava/lang/reflect/Type;
+#isDynamicParameter()Z
@3.5.1
-###com/beust/jcommander/Parameterized

+###com/beust/jcommander/Parameters
@3.5
+#resourceBundle()Ljava/lang/String;
+#separators()Ljava/lang/String;
+#optionPrefixes()Ljava/lang/String;
+#commandDescription()Ljava/lang/String;
+#commandDescriptionKey()Ljava/lang/String;
+#commandNames()[Ljava/lang/String;
+#hidden()Z
@3.5.1
-###com/beust/jcommander/Parameters

+###com/beust/jcommander/ParametersDelegate
@3.5
@3.5.1
-###com/beust/jcommander/ParametersDelegate

+###com/beust/jcommander/ResourceBundle
@3.5
+#value()Ljava/lang/String;
@3.5.1
-###com/beust/jcommander/ResourceBundle

+###com/beust/jcommander/StringKey
@3.5
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.5.1
-###com/beust/jcommander/StringKey

+###com/beust/jcommander/Strings
@3.5
+#<init>()V
+#isStringEmpty(Ljava/lang/String;)Z
@3.5.1
-###com/beust/jcommander/Strings

+###com/beust/jcommander/validators/NoValidator
@3.5
+#<init>()V
+#validate(Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###com/beust/jcommander/validators/NoValidator

+###com/beust/jcommander/validators/NoValueValidator
@3.5
+#<init>()V
+#validate(Ljava/lang/String;Ljava/lang/Object;)V
@3.5.1
-###com/beust/jcommander/validators/NoValueValidator

+###com/beust/jcommander/validators/PositiveInteger
@3.5
+#<init>()V
+#validate(Ljava/lang/String;Ljava/lang/String;)V
@3.5.1
-###com/beust/jcommander/validators/PositiveInteger

+###com/beust/jcommander/WrappedParameter
@3.5
+#<init>(Lcom/beust/jcommander/Parameter;)V
+#<init>(Lcom/beust/jcommander/DynamicParameter;)V
+#getParameter()Lcom/beust/jcommander/Parameter;
+#getDynamicParameter()Lcom/beust/jcommander/DynamicParameter;
+#arity()I
+#hidden()Z
+#required()Z
+#password()Z
+#names()[Ljava/lang/String;
+#variableArity()Z
+#validateWith()Ljava/lang/Class;
+#validateValueWith()Ljava/lang/Class;
+#echoInput()Z
+#addValue(Lcom/beust/jcommander/Parameterized;Ljava/lang/Object;Ljava/lang/Object;)V
+#getAssignment()Ljava/lang/String;
+#isHelp()Z
+#isNonOverwritableForced()Z
@3.5.1
-###com/beust/jcommander/WrappedParameter

+###bsh/BSHBlock$NodeFilter
@3.5
+#isVisible(Lbsh/SimpleNode;)Z
@3.5.1
-###bsh/BSHBlock$NodeFilter

+###bsh/BSHFormalComment
@3.5
+#<init>(I)V
@3.5.1
-###bsh/BSHFormalComment

+###bsh/BSHPackageDeclaration
@3.5
+#<init>(I)V
+#eval(Lbsh/CallStack;Lbsh/Interpreter;)Ljava/lang/Object;
@3.5.1
-###bsh/BSHPackageDeclaration

+###bsh/BshClassManager$Listener
@3.5
+#classLoaderChanged()V
@3.5.1
-###bsh/BshClassManager$Listener

+###bsh/BshClassManager
@3.5
+#<init>()V
+#createClassManager(Lbsh/Interpreter;)Lbsh/BshClassManager;
+#classExists(Ljava/lang/String;)Z
+#classForName(Ljava/lang/String;)Ljava/lang/Class;
+#plainClassForName(Ljava/lang/String;)Ljava/lang/Class;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#cacheClassInfo(Ljava/lang/String;Ljava/lang/Class;)V
+#cacheResolvedMethod(Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/reflect/Method;)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#addClassPath(Ljava/net/URL;)V
+#reset()V
+#setClassPath([Ljava/net/URL;)V
+#reloadAllClasses()V
+#reloadClasses([Ljava/lang/String;)V
+#reloadPackage(Ljava/lang/String;)V
+#addListener(Lbsh/BshClassManager$Listener;)V
+#removeListener(Lbsh/BshClassManager$Listener;)V
+#dump(Ljava/io/PrintWriter;)V
+#defineClass(Ljava/lang/String;[B)Ljava/lang/Class;
@3.5.1
-###bsh/BshClassManager

+###bsh/BshIterator
@3.5
+#next()Ljava/lang/Object;
+#hasNext()Z
@3.5.1
-###bsh/BshIterator

+###bsh/BshMethod
@3.5
+#getParameterTypes()[Ljava/lang/Class;
+#getParameterNames()[Ljava/lang/String;
+#getReturnType()Ljava/lang/Class;
+#getModifiers()Lbsh/Modifiers;
+#getName()Ljava/lang/String;
+#invoke([Ljava/lang/Object;Lbsh/Interpreter;)Ljava/lang/Object;
+#invoke([Ljava/lang/Object;Lbsh/Interpreter;Lbsh/CallStack;Lbsh/SimpleNode;)Ljava/lang/Object;
+#hasModifier(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;
@3.5.1
-###bsh/BshMethod

+###bsh/CallStack
@3.5
+#<init>()V
+#<init>(Lbsh/NameSpace;)V
+#clear()V
+#push(Lbsh/NameSpace;)V
+#top()Lbsh/NameSpace;
+#get(I)Lbsh/NameSpace;
+#set(ILbsh/NameSpace;)V
+#pop()Lbsh/NameSpace;
+#swap(Lbsh/NameSpace;)Lbsh/NameSpace;
+#depth()I
+#toArray()[Lbsh/NameSpace;
+#toString()Ljava/lang/String;
+#copy()Lbsh/CallStack;
@3.5.1
-###bsh/CallStack

+###bsh/Capabilities$Unavailable
@3.5
+#<init>(Ljava/lang/String;)V
@3.5.1
-###bsh/Capabilities$Unavailable

+###bsh/Capabilities
@3.5
+#<init>()V
+#haveSwing()Z
+#canGenerateInterfaces()Z
+#haveAccessibility()Z
+#setAccessibility(Z)V
+#classExists(Ljava/lang/String;)Z
@3.5.1
-###bsh/Capabilities

+###bsh/ClassGenerator
@3.5
+#<init>()V
+#getClassGenerator()Lbsh/ClassGenerator;
+#generateClass(Ljava/lang/String;Lbsh/Modifiers;[Ljava/lang/Class;Ljava/lang/Class;Lbsh/BSHBlock;ZLbsh/CallStack;Lbsh/Interpreter;)Ljava/lang/Class;
+#invokeSuperclassMethod(Lbsh/BshClassManager;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#setInstanceNameSpaceParent(Ljava/lang/Object;Ljava/lang/String;Lbsh/NameSpace;)V
@3.5.1
-###bsh/ClassGenerator

+###bsh/ClassIdentifier
@3.5
+#<init>(Ljava/lang/Class;)V
+#getTargetClass()Ljava/lang/Class;
+#toString()Ljava/lang/String;
@3.5.1
-###bsh/ClassIdentifier

+###bsh/ClassPathException
@3.5
+#<init>(Ljava/lang/String;)V
@3.5.1
-###bsh/ClassPathException

+###bsh/CollectionManager$BasicBshIterator
@3.5
+#<init>(Ljava/lang/Object;)V
+#next()Ljava/lang/Object;
+#hasNext()Z
@3.5.1
-###bsh/CollectionManager$BasicBshIterator

+###bsh/CollectionManager
@3.5
+#<init>()V
+#getCollectionManager()Lbsh/CollectionManager;
+#isBshIterable(Ljava/lang/Object;)Z
+#getBshIterator(Ljava/lang/Object;)Lbsh/BshIterator;
+#isMap(Ljava/lang/Object;)Z
+#getFromMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putInMap(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.5.1
-###bsh/CollectionManager

+###bsh/ConsoleInterface
@3.5
+#getIn()Ljava/io/Reader;
+#getOut()Ljava/io/PrintStream;
+#getErr()Ljava/io/PrintStream;
+#println(Ljava/lang/Object;)V
+#print(Ljava/lang/Object;)V
+#error(Ljava/lang/Object;)V
@3.5.1
-###bsh/ConsoleInterface

+###bsh/EvalError
@3.5
+#<init>(Ljava/lang/String;Lbsh/SimpleNode;Lbsh/CallStack;)V
+#toString()Ljava/lang/String;
+#reThrow(Ljava/lang/String;)V
+#getErrorText()Ljava/lang/String;
+#getErrorLineNumber()I
+#getErrorSourceFile()Ljava/lang/String;
+#getScriptStackTrace()Ljava/lang/String;
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)V
@3.5.1
-###bsh/EvalError

+###bsh/ExternalNameSpace
@3.5
+#<init>()V
+#<init>(Lbsh/NameSpace;Ljava/lang/String;Ljava/util/Map;)V
+#getMap()Ljava/util/Map;
+#setMap(Ljava/util/Map;)V
+#unsetVariable(Ljava/lang/String;)V
+#getVariableNames()[Ljava/lang/String;
+#getDeclaredVariables()[Lbsh/Variable;
+#setTypedVariable(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Lbsh/Modifiers;)V
+#setMethod(Ljava/lang/String;Lbsh/BshMethod;)V
+#getMethod(Ljava/lang/String;[Ljava/lang/Class;Z)Lbsh/BshMethod;
+#clear()V
@3.5.1
-###bsh/ExternalNameSpace

+###bsh/Interpreter
@3.5
+#<init>(Ljava/io/Reader;Ljava/io/PrintStream;Ljava/io/PrintStream;ZLbsh/NameSpace;Lbsh/Interpreter;Ljava/lang/String;)V
+#<init>(Ljava/io/Reader;Ljava/io/PrintStream;Ljava/io/PrintStream;ZLbsh/NameSpace;)V
+#<init>(Ljava/io/Reader;Ljava/io/PrintStream;Ljava/io/PrintStream;Z)V
+#<init>(Lbsh/ConsoleInterface;Lbsh/NameSpace;)V
+#<init>(Lbsh/ConsoleInterface;)V
+#<init>()V
+#setConsole(Lbsh/ConsoleInterface;)V
+#setNameSpace(Lbsh/NameSpace;)V
+#getNameSpace()Lbsh/NameSpace;
+#main([Ljava/lang/String;)V
+#invokeMain(Ljava/lang/Class;[Ljava/lang/String;)V
+#run()V
+#source(Ljava/lang/String;Lbsh/NameSpace;)Ljava/lang/Object;
+#source(Ljava/lang/String;)Ljava/lang/Object;
+#eval(Ljava/io/Reader;Lbsh/NameSpace;Ljava/lang/String;)Ljava/lang/Object;
+#eval(Ljava/io/Reader;)Ljava/lang/Object;
+#eval(Ljava/lang/String;)Ljava/lang/Object;
+#eval(Ljava/lang/String;Lbsh/NameSpace;)Ljava/lang/Object;
+#error(Ljava/lang/Object;)V
+#getIn()Ljava/io/Reader;
+#getOut()Ljava/io/PrintStream;
+#getErr()Ljava/io/PrintStream;
+#println(Ljava/lang/Object;)V
+#print(Ljava/lang/Object;)V
+#debug(Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/Object;
+#set(Ljava/lang/String;Ljava/lang/Object;)V
+#set(Ljava/lang/String;J)V
+#set(Ljava/lang/String;I)V
+#set(Ljava/lang/String;D)V
+#set(Ljava/lang/String;F)V
+#set(Ljava/lang/String;Z)V
+#unset(Ljava/lang/String;)V
+#getInterface(Ljava/lang/Class;)Ljava/lang/Object;
+#pathToFile(Ljava/lang/String;)Ljava/io/File;
+#redirectOutputToFile(Ljava/lang/String;)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#getClassManager()Lbsh/BshClassManager;
+#setStrictJava(Z)V
+#getStrictJava()Z
+#getSourceFileInfo()Ljava/lang/String;
+#getParent()Lbsh/Interpreter;
+#setOut(Ljava/io/PrintStream;)V
+#setErr(Ljava/io/PrintStream;)V
+#setExitOnEOF(Z)V
+#setShowResults(Z)V
+#getShowResults()Z
@3.5.1
-###bsh/Interpreter

+###bsh/InterpreterError
@3.5
+#<init>(Ljava/lang/String;)V
@3.5.1
-###bsh/InterpreterError

+###bsh/JavaCharStream
@3.5
+#BeginToken()C
+#readChar()C
+#getColumn()I
+#getLine()I
+#getEndColumn()I
+#getEndLine()I
+#getBeginColumn()I
+#getBeginLine()I
+#backup(I)V
+#<init>(Ljava/io/Reader;III)V
+#<init>(Ljava/io/Reader;II)V
+#<init>(Ljava/io/Reader;)V
+#ReInit(Ljava/io/Reader;III)V
+#ReInit(Ljava/io/Reader;II)V
+#ReInit(Ljava/io/Reader;)V
+#<init>(Ljava/io/InputStream;III)V
+#<init>(Ljava/io/InputStream;II)V
+#<init>(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;III)V
+#ReInit(Ljava/io/InputStream;II)V
+#ReInit(Ljava/io/InputStream;)V
+#GetImage()Ljava/lang/String;
+#GetSuffix(I)[C
+#Done()V
+#adjustBeginLineColumn(II)V
@3.5.1
-###bsh/JavaCharStream

+###bsh/Modifiers
@3.5
+#<init>()V
+#addModifier(ILjava/lang/String;)V
+#hasModifier(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;
@3.5.1
-###bsh/Modifiers

+###bsh/NameSource$Listener
@3.5
+#nameSourceChanged(Lbsh/NameSource;)V
@3.5.1
-###bsh/NameSource$Listener

+###bsh/NameSource
@3.5
+#getAllNames()[Ljava/lang/String;
+#addNameSourceListener(Lbsh/NameSource$Listener;)V
@3.5.1
-###bsh/NameSource

+###bsh/NameSpace
@3.5
+#<init>(Lbsh/NameSpace;Ljava/lang/String;)V
+#<init>(Lbsh/BshClassManager;Ljava/lang/String;)V
+#<init>(Lbsh/NameSpace;Lbsh/BshClassManager;Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#get(Ljava/lang/String;Lbsh/Interpreter;)Ljava/lang/Object;
+#setVariable(Ljava/lang/String;Ljava/lang/Object;Z)V
+#unsetVariable(Ljava/lang/String;)V
+#getVariableNames()[Ljava/lang/String;
+#getMethodNames()[Ljava/lang/String;
+#getMethods()[Lbsh/BshMethod;
+#getParent()Lbsh/NameSpace;
+#getSuper(Lbsh/Interpreter;)Lbsh/This;
+#getGlobal(Lbsh/Interpreter;)Lbsh/This;
+#getClassManager()Lbsh/BshClassManager;
+#prune()V
+#setParent(Lbsh/NameSpace;)V
+#getVariable(Ljava/lang/String;)Ljava/lang/Object;
+#getVariable(Ljava/lang/String;Z)Ljava/lang/Object;
+#getDeclaredVariables()[Lbsh/Variable;
+#setTypedVariable(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Z)V
+#setTypedVariable(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Lbsh/Modifiers;)V
+#setMethod(Ljava/lang/String;Lbsh/BshMethod;)V
+#getMethod(Ljava/lang/String;[Ljava/lang/Class;)Lbsh/BshMethod;
+#getMethod(Ljava/lang/String;[Ljava/lang/Class;Z)Lbsh/BshMethod;
+#importClass(Ljava/lang/String;)V
+#importPackage(Ljava/lang/String;)V
+#importCommands(Ljava/lang/String;)V
+#getCommand(Ljava/lang/String;[Ljava/lang/Class;Lbsh/Interpreter;)Ljava/lang/Object;
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
+#getAllNames()[Ljava/lang/String;
+#addNameSourceListener(Lbsh/NameSource$Listener;)V
+#doSuperImport()V
+#toString()Ljava/lang/String;
+#invokeMethod(Ljava/lang/String;[Ljava/lang/Object;Lbsh/Interpreter;)Ljava/lang/Object;
+#invokeMethod(Ljava/lang/String;[Ljava/lang/Object;Lbsh/Interpreter;Lbsh/CallStack;Lbsh/SimpleNode;)Ljava/lang/Object;
+#classLoaderChanged()V
+#nameSpaceChanged()V
+#loadDefaultImports()V
+#getInvocationLine()I
+#getInvocationText()Ljava/lang/String;
+#identifierToClass(Lbsh/ClassIdentifier;)Ljava/lang/Class;
+#clear()V
+#importObject(Ljava/lang/Object;)V
+#importStatic(Ljava/lang/Class;)V
@3.5.1
-###bsh/NameSpace

+###bsh/ParseException
@3.5
+#setErrorSourceFile(Ljava/lang/String;)V
+#getErrorSourceFile()Ljava/lang/String;
+#<init>(Lbsh/Token;[[I[Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;
+#getMessage(Z)Ljava/lang/String;
+#getErrorLineNumber()I
+#getErrorText()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.5.1
-###bsh/ParseException

+###bsh/Parser
@3.5
+#setRetainComments(Z)V
+#popNode()Lbsh/SimpleNode;
+#main([Ljava/lang/String;)V
+#Line()Z
+#Modifiers(IZ)Lbsh/Modifiers;
+#ClassDeclaration()V
+#MethodDeclaration()V
+#PackageDeclaration()V
+#ImportDeclaration()V
+#VariableDeclarator()V
+#VariableInitializer()V
+#ArrayInitializer()V
+#FormalParameters()V
+#FormalParameter()V
+#Type()V
+#ReturnType()V
+#PrimitiveType()V
+#AmbiguousName()V
+#NameList()I
+#Expression()V
+#Assignment()V
+#AssignmentOperator()I
+#ConditionalExpression()V
+#ConditionalOrExpression()V
+#ConditionalAndExpression()V
+#InclusiveOrExpression()V
+#ExclusiveOrExpression()V
+#AndExpression()V
+#EqualityExpression()V
+#InstanceOfExpression()V
+#RelationalExpression()V
+#ShiftExpression()V
+#AdditiveExpression()V
+#MultiplicativeExpression()V
+#UnaryExpression()V
+#PreIncrementExpression()V
+#PreDecrementExpression()V
+#UnaryExpressionNotPlusMinus()V
+#CastLookahead()V
+#PostfixExpression()V
+#CastExpression()V
+#PrimaryExpression()V
+#MethodInvocation()V
+#PrimaryPrefix()V
+#PrimarySuffix()V
+#Literal()V
+#BooleanLiteral()Z
+#NullLiteral()V
+#VoidLiteral()V
+#Arguments()V
+#ArgumentList()V
+#AllocationExpression()V
+#ArrayDimensions()V
+#Statement()V
+#LabeledStatement()V
+#Block()V
+#BlockStatement()V
+#FormalComment()V
+#EmptyStatement()V
+#StatementExpression()V
+#SwitchStatement()V
+#SwitchLabel()V
+#IfStatement()V
+#WhileStatement()V
+#DoStatement()V
+#ForStatement()V
+#EnhancedForStatement()V
+#ForInit()V
+#TypedVariableDeclaration()V
+#StatementExpressionList()V
+#ForUpdate()V
+#BreakStatement()V
+#ContinueStatement()V
+#ReturnStatement()V
+#SynchronizedStatement()V
+#ThrowStatement()V
+#TryStatement()V
+#<init>(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;)V
+#<init>(Ljava/io/Reader;)V
+#ReInit(Ljava/io/Reader;)V
+#<init>(Lbsh/ParserTokenManager;)V
+#ReInit(Lbsh/ParserTokenManager;)V
+#getNextToken()Lbsh/Token;
+#getToken(I)Lbsh/Token;
+#generateParseException()Lbsh/ParseException;
+#enable_tracing()V
+#disable_tracing()V
@3.5.1
-###bsh/Parser

+###bsh/ParserConstants
@3.5
@3.5.1
-###bsh/ParserConstants

+###bsh/ParserTokenManager
@3.5
+#setDebugStream(Ljava/io/PrintStream;)V
+#<init>(Lbsh/JavaCharStream;)V
+#<init>(Lbsh/JavaCharStream;I)V
+#ReInit(Lbsh/JavaCharStream;)V
+#ReInit(Lbsh/JavaCharStream;I)V
+#SwitchTo(I)V
+#getNextToken()Lbsh/Token;
@3.5.1
-###bsh/ParserTokenManager

+###bsh/ParserTreeConstants
@3.5
@3.5.1
-###bsh/ParserTreeConstants

+###bsh/Primitive
@3.5
+#<init>(Ljava/lang/Object;)V
+#<init>(Z)V
+#<init>(B)V
+#<init>(S)V
+#<init>(C)V
+#<init>(I)V
+#<init>(J)V
+#<init>(F)V
+#<init>(D)V
+#getValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#getType()Ljava/lang/Class;
+#binaryOperation(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#unaryOperation(Lbsh/Primitive;I)Lbsh/Primitive;
+#intValue()I
+#booleanValue()Z
+#isNumber()Z
+#numberValue()Ljava/lang/Number;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#unwrap(Ljava/lang/Object;)Ljava/lang/Object;
+#unwrap([Ljava/lang/Object;)[Ljava/lang/Object;
+#wrap([Ljava/lang/Object;[Ljava/lang/Class;)[Ljava/lang/Object;
+#wrap(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getDefaultValue(Ljava/lang/Class;)Lbsh/Primitive;
+#boxType(Ljava/lang/Class;)Ljava/lang/Class;
+#unboxType(Ljava/lang/Class;)Ljava/lang/Class;
+#castToType(Ljava/lang/Class;I)Lbsh/Primitive;
+#isWrapperType(Ljava/lang/Class;)Z
@3.5.1
-###bsh/Primitive

+###bsh/ReflectManager
@3.5
+#<init>()V
+#getReflectManager()Lbsh/ReflectManager;
+#RMSetAccessible(Ljava/lang/Object;)Z
+#setAccessible(Ljava/lang/Object;)Z
@3.5.1
-###bsh/ReflectManager

+###bsh/StringUtil
@3.5
+#<init>()V
+#split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#bubbleSort([Ljava/lang/String;)[Ljava/lang/String;
+#maxCommonPrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#methodString(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/String;
+#normalizeClassName(Ljava/lang/Class;)Ljava/lang/String;
@3.5.1
-###bsh/StringUtil

+###bsh/TargetError
@3.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lbsh/SimpleNode;Lbsh/CallStack;Z)V
+#<init>(Ljava/lang/Throwable;Lbsh/SimpleNode;Lbsh/CallStack;)V
+#getTarget()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
+#printStackTrace()V
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(ZLjava/io/PrintStream;)V
+#printTargetError(Ljava/lang/Throwable;)Ljava/lang/String;
+#xPrintTargetError(Ljava/lang/Throwable;)Ljava/lang/String;
+#inNativeCode()Z
@3.5.1
-###bsh/TargetError

+###bsh/This
@3.5
+#getInterface(Ljava/lang/Class;)Ljava/lang/Object;
+#getInterface([Ljava/lang/Class;)Ljava/lang/Object;
+#getNameSpace()Lbsh/NameSpace;
+#toString()Ljava/lang/String;
+#run()V
+#invokeMethod(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeMethod(Ljava/lang/String;[Ljava/lang/Object;Lbsh/Interpreter;Lbsh/CallStack;Lbsh/SimpleNode;Z)Ljava/lang/Object;
+#bind(Lbsh/This;Lbsh/NameSpace;Lbsh/Interpreter;)V
@3.5.1
-###bsh/This

+###bsh/Token
@3.5
+#<init>()V
+#toString()Ljava/lang/String;
+#newToken(I)Lbsh/Token;
@3.5.1
-###bsh/Token

+###bsh/TokenMgrError
@3.5
+#getMessage()Ljava/lang/String;
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(ZIIILjava/lang/String;CI)V
@3.5.1
-###bsh/TokenMgrError

+###bsh/UtilEvalError
@3.5
+#<init>(Ljava/lang/String;)V
+#toEvalError(Ljava/lang/String;Lbsh/SimpleNode;Lbsh/CallStack;)Lbsh/EvalError;
+#toEvalError(Lbsh/SimpleNode;Lbsh/CallStack;)Lbsh/EvalError;
@3.5.1
-###bsh/UtilEvalError

+###bsh/UtilTargetError
@3.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#toEvalError(Ljava/lang/String;Lbsh/SimpleNode;Lbsh/CallStack;)Lbsh/EvalError;
@3.5.1
-###bsh/UtilTargetError

+###bsh/Variable
@3.5
+#setValue(Ljava/lang/Object;I)V
+#getType()Ljava/lang/Class;
+#getTypeDescriptor()Ljava/lang/String;
+#getModifiers()Lbsh/Modifiers;
+#getName()Ljava/lang/String;
+#hasModifier(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;
@3.5.1
-###bsh/Variable

+###bsh/XThis
@3.5
+#<init>(Lbsh/NameSpace;Lbsh/Interpreter;)V
+#toString()Ljava/lang/String;
+#getInterface(Ljava/lang/Class;)Ljava/lang/Object;
+#getInterface([Ljava/lang/Class;)Ljava/lang/Object;
@3.5.1
-###bsh/XThis

+###bsh/classpath/BshClassLoader
@3.5
+#<init>(Lbsh/BshClassManager;[Ljava/net/URL;)V
+#<init>(Lbsh/BshClassManager;Lbsh/classpath/BshClassPath;)V
+#addURL(Ljava/net/URL;)V
+#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;
@3.5.1
-###bsh/classpath/BshClassLoader

+###bsh/classpath/BshClassPath$AmbiguousName
@3.5
+#<init>()V
+#add(Ljava/lang/String;)V
+#get()Ljava/util/List;
@3.5.1
-###bsh/classpath/BshClassPath$AmbiguousName

+###bsh/classpath/BshClassPath$ClassSource
@3.5
+#<init>()V
@3.5.1
-###bsh/classpath/BshClassPath$ClassSource

+###bsh/classpath/BshClassPath$DirClassSource
@3.5
+#getDir()Ljava/io/File;
+#toString()Ljava/lang/String;
+#getCode(Ljava/lang/String;)[B
+#readBytesFromFile(Ljava/io/File;Ljava/lang/String;)[B
@3.5.1
-###bsh/classpath/BshClassPath$DirClassSource

+###bsh/classpath/BshClassPath$GeneratedClassSource
@3.5
+#getCode(Ljava/lang/String;)[B
@3.5.1
-###bsh/classpath/BshClassPath$GeneratedClassSource

+###bsh/classpath/BshClassPath$JarClassSource
@3.5
+#getURL()Ljava/net/URL;
+#getCode(Ljava/lang/String;)[B
+#toString()Ljava/lang/String;
@3.5.1
-###bsh/classpath/BshClassPath$JarClassSource

+###bsh/classpath/BshClassPath$MappingFeedback
@3.5
+#startClassMapping()V
+#classMapping(Ljava/lang/String;)V
+#errorWhileMapping(Ljava/lang/String;)V
+#endClassMapping()V
@3.5.1
-###bsh/classpath/BshClassPath$MappingFeedback

+###bsh/classpath/BshClassPath
@3.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[Ljava/net/URL;)V
+#setPath([Ljava/net/URL;)V
+#addComponent(Lbsh/classpath/BshClassPath;)V
+#add([Ljava/net/URL;)V
+#add(Ljava/net/URL;)V
+#getPathComponents()[Ljava/net/URL;
+#getClassesForPackage(Ljava/lang/String;)Ljava/util/Set;
+#getClassSource(Ljava/lang/String;)Lbsh/classpath/BshClassPath$ClassSource;
+#setClassSource(Ljava/lang/String;Lbsh/classpath/BshClassPath$ClassSource;)V
+#insureInitialized()V
+#getClassNameByUnqName(Ljava/lang/String;)Ljava/lang/String;
+#getAllNames()[Ljava/lang/String;
+#classPathChanged()V
+#isClassFileName(Ljava/lang/String;)Z
+#isArchiveFileName(Ljava/lang/String;)Z
+#canonicalizeClassName(Ljava/lang/String;)Ljava/lang/String;
+#splitClassname(Ljava/lang/String;)[Ljava/lang/String;
+#removeInnerClassNames(Ljava/util/Collection;)Ljava/util/Collection;
+#getUserClassPathComponents()[Ljava/net/URL;
+#getPackagesSet()Ljava/util/Set;
+#addListener(Lbsh/classpath/ClassPathListener;)V
+#removeListener(Lbsh/classpath/ClassPathListener;)V
+#getUserClassPath()Lbsh/classpath/BshClassPath;
+#getBootClassPath()Lbsh/classpath/BshClassPath;
+#main([Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#addNameSourceListener(Lbsh/NameSource$Listener;)V
+#addMappingFeedback(Lbsh/classpath/BshClassPath$MappingFeedback;)V
@3.5.1
-###bsh/classpath/BshClassPath

+###bsh/classpath/ClassManagerImpl
@3.5
+#<init>()V
+#classForName(Ljava/lang/String;)Ljava/lang/Class;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#addClassPath(Ljava/net/URL;)V
+#reset()V
+#setClassPath([Ljava/net/URL;)V
+#reloadAllClasses()V
+#reloadClasses([Ljava/lang/String;)V
+#reloadPackage(Ljava/lang/String;)V
+#getClassPath()Lbsh/classpath/BshClassPath;
+#doSuperImport()V
+#getClassNameByUnqName(Ljava/lang/String;)Ljava/lang/String;
+#addListener(Lbsh/BshClassManager$Listener;)V
+#removeListener(Lbsh/BshClassManager$Listener;)V
+#getBaseLoader()Ljava/lang/ClassLoader;
+#defineClass(Ljava/lang/String;[B)Ljava/lang/Class;
+#dump(Ljava/io/PrintWriter;)V
@3.5.1
-###bsh/classpath/ClassManagerImpl

+###bsh/classpath/ClassPathListener
@3.5
+#classPathChanged()V
@3.5.1
-###bsh/classpath/ClassPathListener

+###bsh/classpath/DiscreteFilesClassLoader$ClassSourceMap
@3.5
+#<init>()V
+#put(Ljava/lang/String;Lbsh/classpath/BshClassPath$ClassSource;)V
+#get(Ljava/lang/String;)Lbsh/classpath/BshClassPath$ClassSource;
@3.5.1
-###bsh/classpath/DiscreteFilesClassLoader$ClassSourceMap

+###bsh/classpath/DiscreteFilesClassLoader
@3.5
+#<init>(Lbsh/BshClassManager;Lbsh/classpath/DiscreteFilesClassLoader$ClassSourceMap;)V
+#findClass(Ljava/lang/String;)Ljava/lang/Class;
+#toString()Ljava/lang/String;
@3.5.1
-###bsh/classpath/DiscreteFilesClassLoader

+###bsh/reflect/ReflectManagerImpl
@3.5
+#<init>()V
+#setAccessible(Ljava/lang/Object;)Z
@3.5.1
-###bsh/reflect/ReflectManagerImpl

+###bsh/collection/CollectionIterator
@3.5
+#<init>(Ljava/lang/Object;)V
+#next()Ljava/lang/Object;
+#hasNext()Z
@3.5.1
-###bsh/collection/CollectionIterator

+###bsh/collection/CollectionManagerImpl
@3.5
+#<init>()V
+#getBshIterator(Ljava/lang/Object;)Lbsh/BshIterator;
+#isMap(Ljava/lang/Object;)Z
+#getFromMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putInMap(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.5.1
-###bsh/collection/CollectionManagerImpl

+###bsh/util/AWTConsole
@3.5
+#getIn()Ljava/io/Reader;
+#getOut()Ljava/io/PrintStream;
+#getErr()Ljava/io/PrintStream;
+#<init>(IILjava/io/InputStream;Ljava/io/OutputStream;)V
+#keyPressed(Ljava/awt/event/KeyEvent;)V
+#<init>()V
+#<init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#type(ICI)V
+#setCaretPosition(I)V
+#println(Ljava/lang/Object;)V
+#error(Ljava/lang/Object;)V
+#print(Ljava/lang/Object;Ljava/awt/Color;)V
+#print(Ljava/lang/Object;)V
+#run()V
+#main([Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#keyTyped(Ljava/awt/event/KeyEvent;)V
+#keyReleased(Ljava/awt/event/KeyEvent;)V
@3.5.1
-###bsh/util/AWTConsole

+###bsh/util/AWTDemoApplet
@3.5
+#<init>()V
+#init()V
@3.5.1
-###bsh/util/AWTDemoApplet

+###bsh/util/AWTRemoteApplet
@3.5
+#<init>()V
+#init()V
@3.5.1
-###bsh/util/AWTRemoteApplet

+###bsh/util/BshCanvas
@3.5
+#<init>()V
+#<init>(Lbsh/This;)V
+#paintComponent(Ljava/awt/Graphics;)V
+#getBufferedGraphics()Ljava/awt/Graphics;
+#setBounds(IIII)V
@3.5.1
-###bsh/util/BshCanvas

+###bsh/util/ClassBrowser
@3.5
+#<init>()V
+#<init>(Lbsh/BshClassManager;)V
+#init()V
+#main([Ljava/lang/String;)V
+#setFrame(Ljavax/swing/JFrame;)V
+#setFrame(Ljavax/swing/JInternalFrame;)V
+#valueChanged(Ljavax/swing/event/ListSelectionEvent;)V
+#driveToClass(Ljava/lang/String;)V
+#toFront()V
+#classPathChanged()V
@3.5.1
-###bsh/util/ClassBrowser

+###bsh/util/GUIConsoleInterface
@3.5
+#print(Ljava/lang/Object;Ljava/awt/Color;)V
+#setNameCompletion(Lbsh/util/NameCompletion;)V
+#setWaitFeedback(Z)V
@3.5.1
-###bsh/util/GUIConsoleInterface

+###bsh/util/Httpd
@3.5
+#main([Ljava/lang/String;)V
+#<init>(I)V
+#run()V
@3.5.1
-###bsh/util/Httpd

+###bsh/util/JConsole$BlockingPipedInputStream
@3.5
+#<init>(Ljava/io/PipedOutputStream;)V
+#read()I
+#close()V
@3.5.1
-###bsh/util/JConsole$BlockingPipedInputStream

+###bsh/util/JConsole
@3.5
+#getInputStream()Ljava/io/InputStream;
+#getIn()Ljava/io/Reader;
+#getOut()Ljava/io/PrintStream;
+#getErr()Ljava/io/PrintStream;
+#<init>()V
+#<init>(Ljava/io/InputStream;Ljava/io/OutputStream;)V
+#requestFocus()V
+#keyPressed(Ljava/awt/event/KeyEvent;)V
+#keyTyped(Ljava/awt/event/KeyEvent;)V
+#keyReleased(Ljava/awt/event/KeyEvent;)V
+#println(Ljava/lang/Object;)V
+#print(Ljava/lang/Object;)V
+#println()V
+#error(Ljava/lang/Object;)V
+#println(Ljavax/swing/Icon;)V
+#print(Ljavax/swing/Icon;)V
+#print(Ljava/lang/Object;Ljava/awt/Font;)V
+#print(Ljava/lang/Object;Ljava/awt/Color;)V
+#print(Ljava/lang/Object;Ljava/awt/Font;Ljava/awt/Color;)V
+#print(Ljava/lang/Object;Ljava/lang/String;ILjava/awt/Color;)V
+#print(Ljava/lang/Object;Ljava/lang/String;ILjava/awt/Color;ZZZ)V
+#setFont(Ljava/awt/Font;)V
+#run()V
+#toString()Ljava/lang/String;
+#mouseClicked(Ljava/awt/event/MouseEvent;)V
+#mousePressed(Ljava/awt/event/MouseEvent;)V
+#mouseReleased(Ljava/awt/event/MouseEvent;)V
+#mouseEntered(Ljava/awt/event/MouseEvent;)V
+#mouseExited(Ljava/awt/event/MouseEvent;)V
+#propertyChange(Ljava/beans/PropertyChangeEvent;)V
+#actionPerformed(Ljava/awt/event/ActionEvent;)V
+#setNameCompletion(Lbsh/util/NameCompletion;)V
+#setWaitFeedback(Z)V
@3.5.1
-###bsh/util/JConsole

+###bsh/util/JDemoApplet
@3.5
+#<init>()V
+#init()V
@3.5.1
-###bsh/util/JDemoApplet

+###bsh/util/JRemoteApplet
@3.5
+#<init>()V
+#init()V
@3.5.1
-###bsh/util/JRemoteApplet

+###bsh/util/NameCompletion
@3.5
+#completeName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###bsh/util/NameCompletion

+###bsh/util/NameCompletionTable
@3.5
+#<init>()V
+#add(Lbsh/util/NameCompletionTable;)V
+#add(Lbsh/NameSource;)V
+#completeName(Ljava/lang/String;)[Ljava/lang/String;
@3.5.1
-###bsh/util/NameCompletionTable

+###bsh/util/Sessiond
@3.5
+#<init>(Lbsh/NameSpace;I)V
+#run()V
@3.5.1
-###bsh/util/Sessiond

+###bsh/util/Util
@3.5
+#<init>()V
+#startSplashScreen()V
+#endSplashScreen()V
@3.5.1
-###bsh/util/Util

+###bsh/commands/dir
@3.5
+#<init>()V
+#usage()Ljava/lang/String;
+#invoke(Lbsh/Interpreter;Lbsh/CallStack;)V
+#invoke(Lbsh/Interpreter;Lbsh/CallStack;Ljava/lang/String;)V
@3.5.1
-###bsh/commands/dir

+###bsh/util/BeanShellBSFEngine
@3.5
+#<init>()V
+#initialize(Lorg/apache/bsf/BSFManager;Ljava/lang/String;Ljava/util/Vector;)V
+#setDebug(Z)V
+#call(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Ljava/lang/String;IILjava/lang/Object;Ljava/util/Vector;Ljava/util/Vector;)Ljava/lang/Object;
+#eval(Ljava/lang/String;IILjava/lang/Object;)Ljava/lang/Object;
+#exec(Ljava/lang/String;IILjava/lang/Object;)V
+#declareBean(Lorg/apache/bsf/BSFDeclaredBean;)V
+#undeclareBean(Lorg/apache/bsf/BSFDeclaredBean;)V
+#terminate()V
@3.5.1
-###bsh/util/BeanShellBSFEngine

+###bsh/ClassGeneratorImpl
@3.5
+#<init>()V
+#generateClass(Ljava/lang/String;Lbsh/Modifiers;[Ljava/lang/Class;Ljava/lang/Class;Lbsh/BSHBlock;ZLbsh/CallStack;Lbsh/Interpreter;)Ljava/lang/Class;
+#invokeSuperclassMethod(Lbsh/BshClassManager;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#setInstanceNameSpaceParent(Ljava/lang/Object;Ljava/lang/String;Lbsh/NameSpace;)V
+#generateClassImpl(Ljava/lang/String;Lbsh/Modifiers;[Ljava/lang/Class;Ljava/lang/Class;Lbsh/BSHBlock;ZLbsh/CallStack;Lbsh/Interpreter;)Ljava/lang/Class;
+#invokeSuperclassMethodImpl(Lbsh/BshClassManager;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.5.1
-###bsh/ClassGeneratorImpl

+###bsh/ClassGeneratorUtil$ConstructorArgs
@3.5
+#getBoolean()Z
+#getByte()B
+#getChar()C
+#getShort()S
+#getInt()I
+#getLong()J
+#getDouble()D
+#getFloat()F
+#getObject()Ljava/lang/Object;
@3.5.1
-###bsh/ClassGeneratorUtil$ConstructorArgs

+###bsh/ClassGeneratorUtil
@3.5
+#<init>(Lbsh/Modifiers;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Lbsh/Variable;[Lbsh/DelayedEvalBshMethod;Lbsh/NameSpace;Z)V
+#generateClass()[B
+#generateParameterReifierCode([Ljava/lang/String;ZLbsh/org/objectweb/asm/CodeVisitor;)V
+#generateReturnCode(Ljava/lang/String;Lbsh/org/objectweb/asm/CodeVisitor;)V
+#getConstructorArgs(Ljava/lang/String;Lbsh/This;[Ljava/lang/Object;I)Lbsh/ClassGeneratorUtil$ConstructorArgs;
+#initInstance(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
@3.5.1
-###bsh/ClassGeneratorUtil

+###bsh/DelayedEvalBshMethod
@3.5
+#getReturnTypeDescriptor()Ljava/lang/String;
+#getReturnType()Ljava/lang/Class;
+#getParamTypeDescriptors()[Ljava/lang/String;
+#getParameterTypes()[Ljava/lang/Class;
@3.5.1
-###bsh/DelayedEvalBshMethod

+###bsh/org/objectweb/asm/ClassVisitor
@3.5
+#visit(ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lbsh/org/objectweb/asm/CodeVisitor;
+#visitEnd()V
@3.5.1
-###bsh/org/objectweb/asm/ClassVisitor

+###bsh/org/objectweb/asm/ClassWriter
@3.5
+#<init>(Z)V
+#visit(ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lbsh/org/objectweb/asm/CodeVisitor;
+#visitEnd()V
+#toByteArray()[B
@3.5.1
-###bsh/org/objectweb/asm/ClassWriter

+###bsh/org/objectweb/asm/CodeVisitor
@3.5
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILbsh/org/objectweb/asm/Label;)V
+#visitLabel(Lbsh/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILbsh/org/objectweb/asm/Label;[Lbsh/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lbsh/org/objectweb/asm/Label;[I[Lbsh/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lbsh/org/objectweb/asm/Label;Lbsh/org/objectweb/asm/Label;Lbsh/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Lbsh/org/objectweb/asm/Label;Lbsh/org/objectweb/asm/Label;I)V
+#visitLineNumber(ILbsh/org/objectweb/asm/Label;)V
@3.5.1
-###bsh/org/objectweb/asm/CodeVisitor

+###bsh/org/objectweb/asm/CodeWriter
@3.5
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitJumpInsn(ILbsh/org/objectweb/asm/Label;)V
+#visitLabel(Lbsh/org/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILbsh/org/objectweb/asm/Label;[Lbsh/org/objectweb/asm/Label;)V
+#visitLookupSwitchInsn(Lbsh/org/objectweb/asm/Label;[I[Lbsh/org/objectweb/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lbsh/org/objectweb/asm/Label;Lbsh/org/objectweb/asm/Label;Lbsh/org/objectweb/asm/Label;Ljava/lang/String;)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Lbsh/org/objectweb/asm/Label;Lbsh/org/objectweb/asm/Label;I)V
+#visitLineNumber(ILbsh/org/objectweb/asm/Label;)V
@3.5.1
-###bsh/org/objectweb/asm/CodeWriter

+###bsh/org/objectweb/asm/Constants
@3.5
@3.5.1
-###bsh/org/objectweb/asm/Constants

+###bsh/org/objectweb/asm/Label
@3.5
+#<init>()V
@3.5.1
-###bsh/org/objectweb/asm/Label

+###bsh/org/objectweb/asm/Type
@3.5
+#getType(Ljava/lang/String;)Lbsh/org/objectweb/asm/Type;
+#getType(Ljava/lang/Class;)Lbsh/org/objectweb/asm/Type;
+#getArgumentTypes(Ljava/lang/String;)[Lbsh/org/objectweb/asm/Type;
+#getArgumentTypes(Ljava/lang/reflect/Method;)[Lbsh/org/objectweb/asm/Type;
+#getReturnType(Ljava/lang/String;)Lbsh/org/objectweb/asm/Type;
+#getReturnType(Ljava/lang/reflect/Method;)Lbsh/org/objectweb/asm/Type;
+#getSort()I
+#getDimensions()I
+#getElementType()Lbsh/org/objectweb/asm/Type;
+#getClassName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getMethodDescriptor(Lbsh/org/objectweb/asm/Type;[Lbsh/org/objectweb/asm/Type;)Ljava/lang/String;
+#getInternalName(Ljava/lang/Class;)Ljava/lang/String;
+#getDescriptor(Ljava/lang/Class;)Ljava/lang/String;
+#getMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getSize()I
+#getOpcode(I)I
@3.5.1
-###bsh/org/objectweb/asm/Type

+###bsh/servlet/BshServlet
@3.5
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#doPost(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#escape(Ljava/lang/String;)Ljava/lang/String;
@3.5.1
-###bsh/servlet/BshServlet

+###bsh/servlet/SimpleTemplate
@3.5
+#getTemplate(Ljava/lang/String;)Lbsh/servlet/SimpleTemplate;
+#getStringFromStream(Ljava/io/InputStream;)Ljava/lang/String;
+#getStringFromStream(Ljava/io/Reader;)Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/io/Reader;)V
+#<init>(Ljava/net/URL;)V
+#replace(Ljava/lang/String;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/PrintWriter;)V
+#write(Ljava/io/PrintStream;)V
+#main([Ljava/lang/String;)V
+#setCacheTemplates(Z)V
@3.5.1
-###bsh/servlet/SimpleTemplate

+###bsh/Console
@3.5
+#<init>()V
+#main([Ljava/lang/String;)V
@3.5.1
-###bsh/Console

+###bsh/Remote
@3.5
+#<init>()V
+#main([Ljava/lang/String;)V
+#eval(Ljava/lang/String;Ljava/lang/String;)I
@3.5.1
-###bsh/Remote

+###org/easymock/internal/ReflectionUtils$Predicate
@3.6
+#test(Ljava/lang/Object;)Z
@4.3
-###org/easymock/internal/ReflectionUtils$Predicate

+###org/easymock/AbstractMatcher
@2.0
+#<init>()V
+#matches([Ljava/lang/Object;[Ljava/lang/Object;)Z
+#toString([Ljava/lang/Object;)Ljava/lang/String;
@3.0
-###org/easymock/AbstractMatcher

+###org/easymock/ArgumentsMatcher
@2.0
+#matches([Ljava/lang/Object;[Ljava/lang/Object;)Z
+#toString([Ljava/lang/Object;)Ljava/lang/String;
@3.0
-###org/easymock/ArgumentsMatcher

+###org/easymock/internal/AlwaysMatcher
@2.0
+#<init>()V
+#matches([Ljava/lang/Object;[Ljava/lang/Object;)Z
@3.0
-###org/easymock/internal/AlwaysMatcher

+###org/easymock/internal/ArrayMatcher
@2.0
+#<init>()V
+#argumentToString(Ljava/lang/Object;)Ljava/lang/String;
+#argumentMatches(Ljava/lang/Object;Ljava/lang/Object;)Z
@2.5
-#argumentToString(Ljava/lang/Object;)Ljava/lang/String;
@3.0
-###org/easymock/internal/ArrayMatcher

+###org/easymock/internal/EqualsMatcher
@2.0
+#<init>()V
@3.0
-###org/easymock/internal/EqualsMatcher

+###org/easymock/internal/ILegacyMatcherMethods
@2.0
+#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#setMatcher(Ljava/lang/reflect/Method;Lorg/easymock/ArgumentsMatcher;)V
@3.0
-###org/easymock/internal/ILegacyMatcherMethods

+###org/easymock/internal/ILegacyMethods
@2.0
+#setDefaultReturnValue(Ljava/lang/Object;)V
+#setDefaultThrowable(Ljava/lang/Throwable;)V
+#setDefaultVoidCallable()V
@3.0
-###org/easymock/internal/ILegacyMethods

+###org/easymock/internal/LegacyMatcherProvider
@2.0
+#<init>()V
+#getMatcher(Ljava/lang/reflect/Method;)Lorg/easymock/ArgumentsMatcher;
+#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#setMatcher(Ljava/lang/reflect/Method;Lorg/easymock/ArgumentsMatcher;)V
@3.0
-###org/easymock/internal/LegacyMatcherProvider

+###org/easymock/MockControl
@2.0
+#createControl(Ljava/lang/Class;)Lorg/easymock/MockControl;
+#createStrictControl(Ljava/lang/Class;)Lorg/easymock/MockControl;
+#createNiceControl(Ljava/lang/Class;)Lorg/easymock/MockControl;
+#getMock()Ljava/lang/Object;
+#reset()V
+#replay()V
+#verify()V
+#setVoidCallable()V
+#setThrowable(Ljava/lang/Throwable;)V
+#setReturnValue(Ljava/lang/Object;)V
+#setVoidCallable(I)V
+#setThrowable(Ljava/lang/Throwable;I)V
+#setReturnValue(Ljava/lang/Object;I)V
+#setReturnValue(Ljava/lang/Object;Lorg/easymock/internal/Range;)V
+#setDefaultVoidCallable()V
+#setDefaultThrowable(Ljava/lang/Throwable;)V
+#setDefaultReturnValue(Ljava/lang/Object;)V
+#setMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#setVoidCallable(II)V
+#setVoidCallable(Lorg/easymock/internal/Range;)V
+#setThrowable(Ljava/lang/Throwable;II)V
+#setThrowable(Ljava/lang/Throwable;Lorg/easymock/internal/Range;)V
+#setReturnValue(Ljava/lang/Object;II)V
+#setDefaultMatcher(Lorg/easymock/ArgumentsMatcher;)V
+#expectAndReturn(Ljava/lang/Object;Ljava/lang/Object;)V
+#expectAndReturn(II)V
+#expectAndReturn(Ljava/lang/Object;Ljava/lang/Object;Lorg/easymock/internal/Range;)V
+#expectAndReturn(IILorg/easymock/internal/Range;)V
+#expectAndReturn(Ljava/lang/Object;Ljava/lang/Object;I)V
+#expectAndReturn(III)V
+#expectAndReturn(Ljava/lang/Object;Ljava/lang/Object;II)V
+#expectAndReturn(IIII)V
+#expectAndThrow(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#expectAndThrow(Ljava/lang/Object;Ljava/lang/Throwable;Lorg/easymock/internal/Range;)V
+#expectAndThrow(Ljava/lang/Object;Ljava/lang/Throwable;I)V
+#expectAndThrow(Ljava/lang/Object;Ljava/lang/Throwable;II)V
+#expectAndDefaultReturn(Ljava/lang/Object;Ljava/lang/Object;)V
+#expectAndDefaultThrow(Ljava/lang/Object;Ljava/lang/Throwable;)V
@3.0
-###org/easymock/MockControl

+###org/easymock/asm/ClassTooLargeException
@4.0
+#<init>(Ljava/lang/String;I)V
+#getClassName()Ljava/lang/String;
+#getConstantPoolCount()I

+###org/easymock/asm/ConstantDynamic
@4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/asm/Handle;[Ljava/lang/Object;)V
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getBootstrapMethod()Lorg/easymock/asm/Handle;
+#getBootstrapMethodArguments()[Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.0.1
+#getBootstrapMethodArgumentCount()I
+#getBootstrapMethodArgument(I)Ljava/lang/Object;
+#getSize()I
-#getBootstrapMethodArguments()[Ljava/lang/Object;

+###org/easymock/asm/MethodTooLargeException
@4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#getClassName()Ljava/lang/String;
+#getMethodName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getCodeSize()I

+###org/easymock/internal/IgnoreAnimalSniffer
@5.1.0

+###org/easymock/internal/ClassMockingData
@5.1.0
+#<init>(Ljava/lang/reflect/InvocationHandler;[Ljava/lang/reflect/Method;)V
+#isMocked(Ljava/lang/reflect/Method;)Z
+#handler()Ljava/lang/reflect/InvocationHandler;

+###org/easymock/EasyMockExtension
@4.1
+#<init>()V
+#postProcessTestInstance(Ljava/lang/Object;Lorg/junit/jupiter/api/extension/ExtensionContext;)V

+###org/easymock/Preview
@4.1

+###org/easymock/bytebuddy/ByteBuddy$EnumerationImplementation$InitializationAppender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/ByteBuddy$EnumerationImplementation$ValuesMethodAppender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/ByteBuddy$EnumerationImplementation
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/ByteBuddy$RecordConstructorStrategy$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/ByteBuddy$RecordConstructorStrategy
@5.0.0
+#values()[Lorg/easymock/bytebuddy/ByteBuddy$RecordConstructorStrategy;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/ByteBuddy$RecordConstructorStrategy;
+#extractConstructors(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/util/List;
+#inject(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/ByteBuddy$RecordObjectMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/ByteBuddy$RecordObjectMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/ByteBuddy$RecordObjectMethod;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/ByteBuddy
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/ClassFileVersion;)V
+#subclass(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#subclass(Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#subclass(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#subclass(Ljava/lang/reflect/Type;Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#subclass(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#subclass(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeInterface()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeInterface(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeInterface([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeInterface(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeInterface([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeInterface(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makePackage(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeRecord()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeAnnotation()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeEnumeration([Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#makeEnumeration(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#redefine(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#redefine(Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#redefine(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#rebase(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#rebase(Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#rebase(Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#rebase(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#rebase(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#rebase(Ljava/lang/Package;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#rebase(Lorg/easymock/bytebuddy/description/type/PackageDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#decorate(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#decorate(Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#decorate(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#with(Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/NamingStrategy;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Factory;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy;)Lorg/easymock/bytebuddy/ByteBuddy;
+#with(Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;)Lorg/easymock/bytebuddy/ByteBuddy;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/ByteBuddy;
+#ignore(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/ByteBuddy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/ClassFileVersion$VersionLocator$Resolved
@5.0.0
+#resolve()Lorg/easymock/bytebuddy/ClassFileVersion;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/ClassFileVersion$VersionLocator$Resolver
@5.0.0
+#values()[Lorg/easymock/bytebuddy/ClassFileVersion$VersionLocator$Resolver;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/ClassFileVersion$VersionLocator$Resolver;
+#run()Lorg/easymock/bytebuddy/ClassFileVersion$VersionLocator;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/ClassFileVersion$VersionLocator$Unresolved
@5.0.0
+#resolve()Lorg/easymock/bytebuddy/ClassFileVersion;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/ClassFileVersion$VersionLocator
@5.0.0
+#resolve()Lorg/easymock/bytebuddy/ClassFileVersion;

+###org/easymock/bytebuddy/ClassFileVersion
@5.0.0
+#ofMinorMajor(I)Lorg/easymock/bytebuddy/ClassFileVersion;
+#ofJavaVersionString(Ljava/lang/String;)Lorg/easymock/bytebuddy/ClassFileVersion;
+#ofJavaVersion(I)Lorg/easymock/bytebuddy/ClassFileVersion;
+#latest()Lorg/easymock/bytebuddy/ClassFileVersion;
+#ofThisVm()Lorg/easymock/bytebuddy/ClassFileVersion;
+#ofThisVm(Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/ClassFileVersion;
+#of(Ljava/lang/Class;)Lorg/easymock/bytebuddy/ClassFileVersion;
+#of(Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/ClassFileVersion;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/ClassFileVersion;
+#ofClassFile([B)Lorg/easymock/bytebuddy/ClassFileVersion;
+#getMinorMajorVersion()I
+#getMajorVersion()S
+#getMinorVersion()S
+#getJavaVersion()I
+#isAtLeast(Lorg/easymock/bytebuddy/ClassFileVersion;)Z
+#isGreaterThan(Lorg/easymock/bytebuddy/ClassFileVersion;)Z
+#isAtMost(Lorg/easymock/bytebuddy/ClassFileVersion;)Z
+#isLessThan(Lorg/easymock/bytebuddy/ClassFileVersion;)Z
+#asPreviewVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#isPreviewVersion()Z
+#compareTo(Lorg/easymock/bytebuddy/ClassFileVersion;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy$AbstractBase
@5.0.0
+#<init>()V
+#subclass(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/String;
+#redefine(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;
+#rebase(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/NamingStrategy$PrefixingRandom
@5.0.0
+#<init>(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver$ForFixedValue
@5.0.0
+#<init>(Ljava/lang/String;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver$ForGivenType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver$ForUnnamedType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver$ForUnnamedType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver$ForUnnamedType;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver$WithCallerSuffix
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/NamingStrategy$Suffixing
@5.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver;)V
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver$ForFixedValue
@5.0.0
+#<init>(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver$ForGivenType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver$ForUnnamedType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver$ForUnnamedType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver$ForUnnamedType;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver
@5.0.0

+###org/easymock/bytebuddy/NamingStrategy$SuffixingRandom
@5.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver;)V
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver;Ljava/lang/String;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/NamingStrategy$SuffixingRandom$BaseNameResolver;Ljava/lang/String;Lorg/easymock/bytebuddy/utility/RandomString;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/NamingStrategy$Suffixing$BaseNameResolver;Ljava/lang/String;Lorg/easymock/bytebuddy/utility/RandomString;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/NamingStrategy
@5.0.0
+#subclass(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/String;
+#redefine(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;
+#rebase(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/TypeCache$LookupKey
@5.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/TypeCache$SimpleKey
@5.0.0
+#<init>(Ljava/lang/Class;[Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Ljava/util/Collection;)V
+#<init>(Ljava/util/Collection;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/TypeCache$Sort
@5.0.0
+#values()[Lorg/easymock/bytebuddy/TypeCache$Sort;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/TypeCache$Sort;

+###org/easymock/bytebuddy/TypeCache$StorageKey
@5.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/TypeCache$WithInlineExpunction
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/TypeCache$Sort;)V
+#find(Ljava/lang/ClassLoader;Ljava/lang/Object;)Ljava/lang/Class;
+#insert(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Class;
+#findOrInsert(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Class;
+#findOrInsert(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/util/concurrent/Callable;Ljava/lang/Object;)Ljava/lang/Class;

+###org/easymock/bytebuddy/TypeCache
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/TypeCache$Sort;)V
+#find(Ljava/lang/ClassLoader;Ljava/lang/Object;)Ljava/lang/Class;
+#insert(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Class;
+#findOrInsert(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Class;
+#findOrInsert(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/util/concurrent/Callable;Ljava/lang/Object;)Ljava/lang/Class;
+#expungeStaleEntries()V
+#clear()V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock$Default
@5.0.0
+#<init>()V
+#acquire()Z
+#release()V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock$Global
@5.0.0
+#<init>()V
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#acquire()Z
+#release()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock$Inactive
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock$Inactive;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock$Inactive;
+#acquire()Z
+#release()V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock
@5.0.0
+#acquire()Z
+#release()V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy
@5.0.0
+#resolve(Ljava/lang/String;[BLjava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#typePool(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Delegator$Matchable
@5.0.0
+#and(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#and(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#and(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#or(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#or(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#or(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Delegator
@5.0.0
+#with(Lorg/easymock/bytebuddy/ByteBuddy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithoutBatchStrategy;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#enableNativeMethodPrefix(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#disableNativeMethodPrefix()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#disableClassFormatChanges()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#warmUp([Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#warmUp(Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;[Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;[Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#makeRaw()Ljava/lang/instrument/ClassFileTransformer;
+#installOn(Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#installOnByteBuddyAgent()Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOn(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOn(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOnByteBuddyAgent(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOnByteBuddyAgent(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Dispatcher
@5.0.0
+#isNativeMethodPrefixSupported(Ljava/lang/instrument/Instrumentation;)Z
+#setNativeMethodPrefix(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;Ljava/lang/String;)V
+#addTransformer(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;Z)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction;
+#run()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$ForJava9CapableVm
@5.0.0
+#make(Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionEnforcer;Ljava/util/List;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$ForLegacyVm
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$ForLegacyVm;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$ForLegacyVm;
+#make(Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionEnforcer;Ljava/util/List;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionEnforcer;Ljava/util/List;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher
@5.0.0
+#run()[B
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$LegacyVmDispatcher
@5.0.0
+#run()[B
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionEnforcer;Ljava/util/List;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;)V
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B
+#iterator(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Ljava/util/Iterator;
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Ignoring
@5.0.0
+#and(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#or(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#or(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#and(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy$Disabled;
+#resolve()Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;
+#apply(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy$ForPrefix
@5.0.0
+#resolve()Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;
+#apply(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy
@5.0.0
+#resolve()Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;
+#apply(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Redefining$WithResubmission
@5.0.0
+#resubmitOnError()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Redefining
@5.0.0
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithImplicitDiscoveryStrategy;
+#redefineOnly([Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable;
+#withResubmission(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithoutResubmissionSpecification;
+#makeRaw()Ljava/lang/instrument/ClassFileTransformer;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$DifferentialMatcher
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$SimpleMatcher
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$TransformerIterator
@5.0.0
+#hasNext()Z
+#next()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Transformation
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$Transforming
@5.0.0
+#transform(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Extendable;
+#asTerminalTransformation()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#and(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#or(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#or(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#and(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy$Enabled$Dispatcher
@5.0.0
+#transform(Ljava/lang/instrument/ClassFileTransformer;Ljava/lang/Object;Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy$Enabled
@5.0.0
+#apply(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;)V
+#with(Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy$NoOp;
+#apply(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;)V
+#with(Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy
@5.0.0
+#apply(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;)V
+#with(Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Default$WarmupStrategy;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Default
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/ByteBuddy;)V
+#of([Lorg/easymock/bytebuddy/build/Plugin;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#of(Ljava/util/List;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#of(Lorg/easymock/bytebuddy/build/EntryPoint;[Lorg/easymock/bytebuddy/build/Plugin;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#of(Lorg/easymock/bytebuddy/build/EntryPoint;Ljava/util/List;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#of(Lorg/easymock/bytebuddy/ClassFileVersion;[Lorg/easymock/bytebuddy/build/Plugin;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#of(Lorg/easymock/bytebuddy/ClassFileVersion;Ljava/util/List;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#of(Lorg/easymock/bytebuddy/build/EntryPoint;Lorg/easymock/bytebuddy/ClassFileVersion;[Lorg/easymock/bytebuddy/build/Plugin;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#of(Lorg/easymock/bytebuddy/build/EntryPoint;Lorg/easymock/bytebuddy/ClassFileVersion;Ljava/util/List;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/ByteBuddy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#enableNativeMethodPrefix(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#disableNativeMethodPrefix()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#warmUp([Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#warmUp(Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithoutBatchStrategy;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#disableClassFormatChanges()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;[Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;[Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#type(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#makeRaw()Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#installOn(Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#installOnByteBuddyAgent()Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOn(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOn(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOnByteBuddyAgent(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOnByteBuddyAgent(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#makeRaw()Ljava/lang/instrument/ClassFileTransformer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default;
+#withSuperTypeLoading()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;
+#isLoadedFirst()Z
+#withSuperTypeLoading(Ljava/util/concurrent/ExecutorService;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate$NotifyingClassLoadingAction
@5.0.0
+#call()Ljava/lang/Class;
+#call()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate$SimpleClassLoadingAction
@5.0.0
+#call()Ljava/lang/Class;
+#call()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous$ThreadSwitchingClassLoadingDelegate
@5.0.0
+#load(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$SuperTypeLoading$Asynchronous
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;Ljava/util/concurrent/ExecutorService;)V
+#isLoadedFirst()Z
+#apply(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$SuperTypeLoading$UnlockingClassLoadingDelegate
@5.0.0
+#load(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$SuperTypeLoading
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;)V
+#isLoadedFirst()Z
+#apply(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy
@5.0.0
+#isLoadedFirst()Z
+#apply(Ljava/lang/String;Ljava/lang/Class;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy$ByThrowableType
@5.0.0
+#<init>([Ljava/lang/Class;)V
+#<init>(Ljava/util/Set;)V
+#ofOptionalTypes()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;
+#isFallback(Ljava/lang/Class;Ljava/lang/Throwable;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy$Simple
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy$Simple;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy$Simple;
+#isFallback(Ljava/lang/Class;Ljava/lang/Throwable;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy
@5.0.0
+#isFallback(Ljava/lang/Class;Ljava/lang/Throwable;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Extendable
@5.0.0
+#asTerminalTransformation()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable
@5.0.0

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Identified
@5.0.0
+#transform(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Extendable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored
@5.0.0

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$Dispatcher
@5.0.0
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#register(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$Minimal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$Minimal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$Minimal;
+#dispatcher()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$Dispatcher;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#register(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$NoOp;
+#dispatcher()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$Dispatcher;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#register(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher$InjectingInitializer
@5.0.0
+#onLoad(Ljava/lang/Class;)V
+#isAlive()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher
@5.0.0
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Eager$Dispatcher
@5.0.0
+#register(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Eager
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/dynamic/NexusAccessor;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Lazy$Dispatcher
@5.0.0
+#register(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Lazy
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/dynamic/NexusAccessor;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split$Dispatcher
@5.0.0
+#register(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/dynamic/NexusAccessor;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection
@5.0.0
+#dispatcher()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$Dispatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy
@5.0.0
+#dispatcher()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$Dispatcher;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$Disabled;
+#resolve(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingInstrumentation
@5.0.0
+#<init>(Ljava/lang/instrument/Instrumentation;Ljava/io/File;)V
+#resolve(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingJna
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingJna;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingJna;
+#resolve(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingReflection
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingReflection;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingReflection;
+#resolve(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingUnsafe$OfFactory
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory;)V
+#resolve(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingUnsafe
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingUnsafe;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy$UsingUnsafe;
+#resolve(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy
@5.0.0
+#resolve(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$Adapter
@5.0.0
+#<init>()V
+#onBeforeInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onError(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#onReset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onBeforeWarmUp(Ljava/util/Set;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onWarmUpError(Ljava/lang/Class;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)V
+#onAfterWarmUp(Ljava/util/Map;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Z)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;)V
+#<init>(Ljava/util/List;)V
+#onBeforeInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onError(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#onReset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onBeforeWarmUp(Ljava/util/Set;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onWarmUpError(Ljava/lang/Class;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)V
+#onAfterWarmUp(Ljava/util/Map;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$ErrorSuppressing
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$ErrorSuppressing;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$ErrorSuppressing;
+#onBeforeInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onError(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#onReset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onBeforeWarmUp(Ljava/util/Set;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onWarmUpError(Ljava/lang/Class;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)V
+#onAfterWarmUp(Ljava/util/Map;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Z)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$NoOp;
+#onBeforeInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onError(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#onReset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onBeforeWarmUp(Ljava/util/Set;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onWarmUpError(Ljava/lang/Class;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)V
+#onAfterWarmUp(Ljava/util/Map;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Z)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener$StreamWriting
@5.0.0
+#<init>(Ljava/io/PrintStream;)V
+#toSystemOut()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;
+#toSystemError()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;
+#onBeforeInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onError(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#onReset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onBeforeWarmUp(Ljava/util/Set;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onWarmUpError(Ljava/lang/Class;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)V
+#onAfterWarmUp(Ljava/util/Map;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener
@5.0.0
+#onBeforeInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onError(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#onReset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onBeforeWarmUp(Ljava/util/Set;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onWarmUpError(Ljava/lang/Class;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Ljava/lang/Throwable;)V
+#onAfterWarmUp(Ljava/util/Map;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Z)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$BridgeMethodImplementation$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$BridgeMethodImplementation
@5.0.0
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$ConstructorImplementation;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$FactoryImplementation;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender$Dispatcher$UsingDirectInvocation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender$Dispatcher$UsingDirectInvocation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender$Dispatcher$UsingDirectInvocation;
+#initialize()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender$Dispatcher$UsingMethodHandle
@5.0.0
+#initialize()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender$Dispatcher
@5.0.0
+#initialize()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$LambdaMethodImplementation
@5.0.0
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory$SerializationImplementation
@5.0.0
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaInstanceFactory
@5.0.0
+#make(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ZLjava/util/List;Ljava/util/List;Ljava/util/Collection;)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$Unavailable
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$Unavailable;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$Unavailable;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#getStackSize()I
+#getLocalVariableLength()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$UsingMethodHandleLookup
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$UsingMethodHandleLookup;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$UsingMethodHandleLookup;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#getStackSize()I
+#getLocalVariableLength()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$UsingUnsafe
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$UsingUnsafe;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader$UsingUnsafe;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#getStackSize()I
+#getLocalVariableLength()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory$Loader
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#getStackSize()I
+#getLocalVariableLength()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$LambdaMetafactoryFactory;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;
+#release(Ljava/lang/instrument/ClassFileTransformer;Ljava/lang/instrument/Instrumentation;)V
+#of(Z)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;
+#isEnabled()Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$Adapter
@5.0.0
+#<init>()V
+#onDiscovery(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLorg/easymock/bytebuddy/dynamic/DynamicType;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#onComplete(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;)V
+#<init>(Ljava/util/List;)V
+#onDiscovery(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLorg/easymock/bytebuddy/dynamic/DynamicType;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#onComplete(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$Filtering
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;)V
+#onDiscovery(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLorg/easymock/bytebuddy/dynamic/DynamicType;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#onComplete(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$ModuleReadEdgeCompleting
@5.0.0
+#<init>(Ljava/lang/instrument/Instrumentation;ZLjava/util/Set;)V
+#of(Ljava/lang/instrument/Instrumentation;Z[Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLorg/easymock/bytebuddy/dynamic/DynamicType;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$NoOp;
+#onDiscovery(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLorg/easymock/bytebuddy/dynamic/DynamicType;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#onComplete(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$StreamWriting
@5.0.0
+#<init>(Ljava/io/PrintStream;)V
+#toSystemOut()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$StreamWriting;
+#toSystemError()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$StreamWriting;
+#withTransformationsOnly()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;
+#withErrorsOnly()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;
+#onDiscovery(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLorg/easymock/bytebuddy/dynamic/DynamicType;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#onComplete(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$WithErrorsOnly
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;)V
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener$WithTransformationsOnly
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLorg/easymock/bytebuddy/dynamic/DynamicType;)V
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Listener
@5.0.0
+#onDiscovery(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLorg/easymock/bytebuddy/dynamic/DynamicType;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#onComplete(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Z)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;)V
+#<init>(Ljava/util/List;)V
+#classFileLocator(Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy$ForClassLoader
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy$ForClassLoader;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy$ForClassLoader;
+#withFallbackTo([Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;
+#withFallbackTo(Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;
+#withFallbackTo([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;
+#withFallbackTo(Ljava/util/List;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy$NoOp;
+#classFileLocator(Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)V
+#classFileLocator(Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy
@5.0.0
+#classFileLocator(Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable
@5.0.0
+#and(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#and(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#and(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#and(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#or(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#or(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#or(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;
+#or(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Matchable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode$Handler$ForPatchWithGap
@5.0.0
+#onBeforeRegistration(Ljava/lang/instrument/Instrumentation;)V
+#onAfterRegistration(Ljava/lang/instrument/Instrumentation;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode$Handler$ForPatchWithOverlap
@5.0.0
+#onBeforeRegistration(Ljava/lang/instrument/Instrumentation;)V
+#onAfterRegistration(Ljava/lang/instrument/Instrumentation;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode$Handler$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode$Handler$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode$Handler$NoOp;
+#onBeforeRegistration(Ljava/lang/instrument/Instrumentation;)V
+#onAfterRegistration(Ljava/lang/instrument/Instrumentation;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode$Handler
@5.0.0
+#onBeforeRegistration(Ljava/lang/instrument/Instrumentation;)V
+#onAfterRegistration(Ljava/lang/instrument/Instrumentation;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$ClassLoading
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$ClassLoading;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$ClassLoading;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/pool/TypePool;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$Default;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/pool/TypePool;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$Eager
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$Eager;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$Eager;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/pool/TypePool;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$WithTypePoolCache$Simple
@5.0.0
+#<init>(Ljava/util/concurrent/ConcurrentMap;)V
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool$Default$ReaderMode;Ljava/util/concurrent/ConcurrentMap;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$WithTypePoolCache
@5.0.0
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/pool/TypePool;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy
@5.0.0
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/pool/TypePool;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForLoadState
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForLoadState;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForLoadState;
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForResolvableTypes
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForResolvableTypes;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForResolvableTypes;
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z
+#inverted()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Inversion
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)V
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Trivial
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Trivial;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Trivial;
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher$Conjunction
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher;)V
+#<init>(Ljava/util/List;)V
+#matches(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher$Disjunction
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher;)V
+#<init>(Ljava/util/List;)V
+#matches(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher$ForElementMatchers
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#matches(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher$Trivial
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher$Trivial;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher$Trivial;
+#matches(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher
@5.0.0
+#matches(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher$Conjunction
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher;)V
+#<init>(Ljava/util/List;)V
+#matches(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher$Disjunction
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher;)V
+#<init>(Ljava/util/List;)V
+#matches(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher$ForElementMatchers
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#matches(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher$Trivial
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher$Trivial;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher$Trivial;
+#matches(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher
@5.0.0
+#matches(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithImplicitDiscoveryStrategy
@5.0.0
+#redefineOnly([Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification
@5.0.0

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithoutBatchStrategy
@5.0.0
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithImplicitDiscoveryStrategy;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithoutResubmissionSpecification
@5.0.0
+#resubmitOnError()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitOnError(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionOnErrorMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;
+#resubmitImmediate(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$ResubmissionImmediateMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithResubmissionSpecification;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable
@5.0.0
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable;
+#withResubmission(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithoutResubmissionSpecification;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForFixedSize
@5.0.0
+#ofSize(I)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;
+#batch(Ljava/util/List;)Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForMatchedGrouping
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#<init>(Ljava/util/Collection;)V
+#withMinimum(I)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;
+#withMaximum(I)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;
+#withinRange(II)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;
+#batch(Ljava/util/List;)Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForTotal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForTotal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForTotal;
+#batch(Ljava/util/List;)Ljava/lang/Iterable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning
@5.0.0
+#of(I)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;
+#batch(Ljava/util/List;)Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing$SlicingIterable$SlicingIterator
@5.0.0
+#hasNext()Z
+#next()Ljava/util/List;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing$SlicingIterable
@5.0.0
+#iterator()Ljava/util/Iterator;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Slicing
@5.0.0
+#withMinimum(ILorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;
+#withMaximum(ILorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;
+#withinRange(IILorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;
+#batch(Ljava/util/List;)Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator
@5.0.0
+#batch(Ljava/util/List;)Ljava/lang/Iterable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRedefinition
@5.0.0

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation
@5.0.0

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$PrependableIterator
@5.0.0
+#prepend(Ljava/lang/Iterable;)V
+#hasNext()Z
+#next()Ljava/util/List;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector
@5.0.0

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Explicit
@5.0.0
+#<init>([Ljava/lang/Class;)V
+#<init>(Ljava/util/Set;)V
+#resolve(Ljava/lang/instrument/Instrumentation;)Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterable
@5.0.0
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterator
@5.0.0
+#hasNext()Z
+#next()Ljava/lang/Iterable;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$WithSortOrderAssumption$OrderedReiteratingIterable
@5.0.0
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$WithSortOrderAssumption$OrderedReiteratingIterator
@5.0.0
+#hasNext()Z
+#next()Ljava/lang/Iterable;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating;
+#resolve(Ljava/lang/instrument/Instrumentation;)Ljava/lang/Iterable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$SinglePass
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$SinglePass;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$SinglePass;
+#resolve(Ljava/lang/instrument/Instrumentation;)Ljava/lang/Iterable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy
@5.0.0
+#resolve(Ljava/lang/instrument/Instrumentation;)Ljava/lang/Iterable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher
@5.0.0
+#isModifiableClass(Ljava/lang/instrument/Instrumentation;Ljava/lang/Class;)Z
+#isRetransformClassesSupported(Ljava/lang/instrument/Instrumentation;)Z
+#retransformClasses(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$Adapter
@5.0.0
+#<init>()V
+#onBatch(ILjava/util/List;Ljava/util/List;)V
+#onError(ILjava/util/List;Ljava/lang/Throwable;Ljava/util/List;)Ljava/lang/Iterable;
+#onComplete(ILjava/util/List;Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$BatchReallocator
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;)V
+#splitting()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;
+#onError(ILjava/util/List;Ljava/lang/Throwable;Ljava/util/List;)Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$Compound$CompoundIterable$CompoundIterator
@5.0.0
+#hasNext()Z
+#next()Ljava/util/List;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$Compound$CompoundIterable
@5.0.0
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)V
+#<init>(Ljava/util/List;)V
+#onBatch(ILjava/util/List;Ljava/util/List;)V
+#onError(ILjava/util/List;Ljava/lang/Throwable;Ljava/util/List;)Ljava/lang/Iterable;
+#onComplete(ILjava/util/List;Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$ErrorEscalating;
+#onBatch(ILjava/util/List;Ljava/util/List;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$NoOp;
+#onBatch(ILjava/util/List;Ljava/util/List;)V
+#onError(ILjava/util/List;Ljava/lang/Throwable;Ljava/util/List;)Ljava/lang/Iterable;
+#onComplete(ILjava/util/List;Ljava/util/Map;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$Pausing
@5.0.0
+#of(JLjava/util/concurrent/TimeUnit;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;
+#onBatch(ILjava/util/List;Ljava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$StreamWriting
@5.0.0
+#<init>(Ljava/io/PrintStream;)V
+#toSystemOut()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;
+#toSystemError()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;
+#onBatch(ILjava/util/List;Ljava/util/List;)V
+#onError(ILjava/util/List;Ljava/lang/Throwable;Ljava/util/List;)Ljava/lang/Iterable;
+#onComplete(ILjava/util/List;Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$Yielding
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$Yielding;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener$Yielding;
+#onBatch(ILjava/util/List;Ljava/util/List;)V
+#onError(ILjava/util/List;Ljava/lang/Throwable;Ljava/util/List;)Ljava/lang/Iterable;
+#onComplete(ILjava/util/List;Ljava/util/Map;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener
@5.0.0
+#onBatch(ILjava/util/List;Ljava/util/List;)V
+#onError(ILjava/util/List;Ljava/lang/Throwable;Ljava/util/List;)Ljava/lang/Iterable;
+#onComplete(ILjava/util/List;Ljava/util/Map;)V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionEnforcer$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionEnforcer$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionEnforcer$Disabled;
+#isEnforced(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionEnforcer
@5.0.0
+#isEnforced(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$AtFixedRate
@5.0.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;)V
+#isAlive()Z
+#schedule(Ljava/lang/Runnable;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$ForFuture
@5.0.0
+#<init>(Ljava/util/concurrent/Future;)V
+#cancel()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable$NoOp;
+#cancel()V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable
@5.0.0
+#cancel()V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$NoOp;
+#isAlive()Z
+#schedule(Ljava/lang/Runnable;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$WithFixedDelay
@5.0.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;)V
+#isAlive()Z
+#schedule(Ljava/lang/Runnable;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler
@5.0.0
+#isAlive()Z
+#schedule(Ljava/lang/Runnable;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionScheduler$Cancelable;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Disabled;
+#apply(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Installation;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$LookupKey
@5.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$ResubmissionInstallationListener
@5.0.0
+#onInstall(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#onReset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)V
+#run()V

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$Resubmitter$ConcurrentHashSet
@5.0.0
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#size()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$Resubmitter
@5.0.0
+#onError(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;ZLjava/lang/Throwable;)V
+#isEnforced(Ljava/lang/String;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled$StorageKey
@5.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Enabled
@5.0.0
+#apply(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Installation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Installation
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy
@5.0.0
+#apply(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$ResubmissionStrategy$Installation;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForSplitAdvice
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;)V
+#transform(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#withExceptionHandler(Lorg/easymock/bytebuddy/asm/Advice$ExceptionHandler;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#with(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#include([Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#include([Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#include(Ljava/util/List;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#advice(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#advice(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#advice(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#advice(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer$ForBuildPlugin
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/Plugin;)V
+#transform(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$Transformer
@5.0.0
+#transform(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator;)V
+#<init>(Ljava/util/List;)V
+#decorate(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator$NoOp;
+#decorate(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator
@5.0.0
+#decorate(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy$Default;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy$ForBuildEntryPoint
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/EntryPoint;)V
+#builder(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy
@5.0.0
+#builder(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/agent/builder/AgentBuilder
@5.0.0
+#with(Lorg/easymock/bytebuddy/ByteBuddy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Listener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$CircularityLock;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PoolStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LocationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TypeStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionListenable$WithoutBatchStrategy;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$FallbackStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InstallationListener;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$InjectionStrategy;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#with(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$TransformerDecorator;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#enableNativeMethodPrefix(Ljava/lang/String;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#disableNativeMethodPrefix()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#disableClassFormatChanges()Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#warmUp([Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#warmUp(Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;[Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeTo(Ljava/lang/instrument/Instrumentation;Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;[Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#assureReadEdgeFromAndTo(Ljava/lang/instrument/Instrumentation;Ljava/util/Collection;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#type(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Identified$Narrowable;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#ignore(Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RawMatcher;)Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$Ignored;
+#makeRaw()Ljava/lang/instrument/ClassFileTransformer;
+#installOn(Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#installOnByteBuddyAgent()Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOn(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOn(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOnByteBuddyAgent(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;
+#patchOnByteBuddyAgent(Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$PatchMode;)Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;

+###org/easymock/bytebuddy/agent/builder/LambdaFactory
@5.0.0
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#register(Ljava/lang/instrument/ClassFileTransformer;Ljava/lang/Object;)Z
+#release(Ljava/lang/instrument/ClassFileTransformer;)Z
+#make(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ZLjava/util/List;Ljava/util/List;)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer$AbstractBase
@5.0.0
+#<init>()V
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z

+###org/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer$WithDelegation
@5.0.0
+#iterator(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Ljava/util/Iterator;
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer
@5.0.0
+#iterator(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/lang/Class;Ljava/security/ProtectionDomain;)Ljava/util/Iterator;
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/agent/builder/ResettableClassFileTransformer;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator;Lorg/easymock/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Listener;)Z

+###org/easymock/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling
@5.0.0

+###org/easymock/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithoutExceptionHandling
@5.0.0

+###org/easymock/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/asm/Advice$AdviceVisitor$WithoutExitAdvice
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/asm/Advice$AdviceVisitor
@5.0.0
+#onVisitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitMaxs(II)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;[Lorg/easymock/bytebuddy/jar/asm/Label;[Lorg/easymock/bytebuddy/jar/asm/Label;[ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/asm/Advice$AllArguments
@5.0.0
+#readOnly()Z
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
+#nullIfEmpty()Z

+###org/easymock/bytebuddy/asm/Advice$Appender$EmulatingMethodVisitor
@5.0.0
+#visitCode()V
+#visitMaxs(II)V
+#visitEnd()V

+###org/easymock/bytebuddy/asm/Advice$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Argument
@5.0.0
+#value()I
+#readOnly()Z
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
+#optional()Z

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$Factory;

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice$Default$ForMethodEnter
@5.0.0
+#returned()I
+#thrown()I
+#mapped(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice$Default$ForMethodExit
@5.0.0
+#returned()I
+#thrown()I
+#mapped(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice$Default
@5.0.0
+#argument(I)I
+#exit()I
+#named(Ljava/lang/String;)I
+#enter()I

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice
@5.0.0
+#mapped(I)I

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod$Default$Copying
@5.0.0
+#argument(I)I
+#variable(I)I
+#isCopyingArguments()Z
+#prepare(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod$Default$Simple
@5.0.0
+#argument(I)I
+#variable(I)I
+#isCopyingArguments()Z
+#prepare(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod$Default
@5.0.0
+#exit()I
+#named(Ljava/lang/String;)I
+#enter()I
+#returned()I
+#thrown()I
+#bindEnter(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice;
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription;Z)Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice;
+#getNamedTypes()Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod
@5.0.0
+#variable(I)I
+#prepare(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)I
+#bindEnter(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice;
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription;Z)Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice;
+#isCopyingArguments()Z
+#getNamedTypes()Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$ArgumentHandler
@5.0.0
+#argument(I)I
+#exit()I
+#enter()I
+#named(Ljava/lang/String;)I
+#returned()I
+#thrown()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$AsScalar
@5.0.0
+#skipOnDefaultValue()Z

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$DefaultValueSkip$Dispatcher
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$DefaultValueSkip$Dispatcher;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$DefaultValueSkip$Dispatcher;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$DefaultValueSkip
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ExceptionHandler$Factory$Enabled
@5.0.0
+#wrap(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForPostProcessor;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ExceptionHandler$Factory$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ExceptionHandler$Factory$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ExceptionHandler$Factory$NoOp;
+#wrap(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForPostProcessor;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ExceptionHandler$Factory
@5.0.0
+#wrap(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForPostProcessor;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ExceptionHandler
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$Factory
@5.0.0
+#<init>()V
+#with(Ljava/lang/Class;[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$Handler;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$Factory;
+#with(Ljava/lang/Class;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$Factory;
+#with(Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$Handler$Factory;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$Factory;
+#withSuppressed(Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;
+#withSuppressed(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Z)Lorg/easymock/bytebuddy/asm/Advice$PostProcessor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ForArray
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ForScalar
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$Handler$Factory$Simple
@5.0.0
+#<init>(Ljava/lang/Class;Ljava/util/List;)V
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;ZLorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$Handler$Factory
@5.0.0
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;ZLorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;)Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$Handler
@5.0.0
+#getIndex()I
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToAllArguments$Handler$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToAllArguments$Handler$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToAllArguments$Handler$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;ZLorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;)Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToAllArguments$Handler
@5.0.0
+#getIndex()I
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToAllArguments
@5.0.0
+#index()I
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToArguments$Handler$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToArguments$Handler$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToArguments$Handler$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;ZLorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;)Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToArguments$Handler
@5.0.0
+#getIndex()I
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToArguments$ToArgument
@5.0.0
+#value()I
+#index()I
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToArguments
@5.0.0
+#value()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToArguments$ToArgument;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToFields$Handler$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToFields$Handler$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToFields$Handler$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;ZLorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;)Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToFields$Handler
@5.0.0
+#getIndex()I
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToFields$ToField
@5.0.0
+#value()Ljava/lang/String;
+#declaringType()Ljava/lang/Class;
+#index()I
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToFields
@5.0.0
+#value()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToFields$ToField;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToReturned$Handler$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToReturned$Handler$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToReturned$Handler$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;ZLorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;)Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToReturned$Handler
@5.0.0
+#getIndex()I
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToReturned
@5.0.0
+#index()I
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToThis$Handler$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToThis$Handler$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToThis$Handler$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;ZLorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;)Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToThis$Handler
@5.0.0
+#getIndex()I
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToThis
@5.0.0
+#index()I
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToThrown$Handler$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToThrown$Handler$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$AssignReturned$ToThrown$Handler$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;ZLorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;)Ljava/util/List;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToThrown$Handler
@5.0.0
+#getIndex()I
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$AssignReturned$ToThrown
@5.0.0
+#index()I
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$AssignReturned
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForPostProcessor;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Delegator$ForDynamicInvocation
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Delegator$ForStaticInvocation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$Delegator$ForStaticInvocation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$Delegator$ForStaticInvocation;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Z)V

+###org/easymock/bytebuddy/asm/Advice$Delegator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Z)V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Bound
@5.0.0
+#prepare()V
+#initialize()V
+#apply()V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter$ForMethodEnter
@5.0.0
+#initialize()V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter$ForMethodExit
@5.0.0
+#initialize()V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$AdviceMethodWriter
@5.0.0
+#prepare()V
+#apply()V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$ForMethodEnter$WithDiscardedEnterType
@5.0.0
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$ForMethodEnter$WithRetainedEnterType
@5.0.0
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$ForMethodEnter
@5.0.0
+#isPrependLineNumber()Z
+#getActualAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$ForMethodExit$WithExceptionHandler
@5.0.0
+#getThrowable()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$ForMethodExit$WithoutExceptionHandler
@5.0.0
+#getThrowable()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved$ForMethodExit
@5.0.0
+#getArgumentHandlerFactory()Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$Factory;
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating$Resolved
@5.0.0
+#getNamedTypes()Ljava/util/Map;
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Bound;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Delegating
@5.0.0
+#isAlive()Z
+#isBinary()Z
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNamedTypes()Ljava/util/Map;
+#asMethodEnter(Ljava/util/List;Lorg/easymock/bytebuddy/jar/asm/ClassReader;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved;Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodEnter;
+#asMethodExit(Ljava/util/List;Lorg/easymock/bytebuddy/jar/asm/ClassReader;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved;Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodExit;
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inactive
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Inactive;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Inactive;
+#isAlive()Z
+#isBinary()Z
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isPrependLineNumber()Z
+#getActualAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getNamedTypes()Ljava/util/Map;
+#getThrowable()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getArgumentHandlerFactory()Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$Factory;
+#asMethodEnter(Ljava/util/List;Lorg/easymock/bytebuddy/jar/asm/ClassReader;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved;Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodEnter;
+#asMethodExit(Ljava/util/List;Lorg/easymock/bytebuddy/jar/asm/ClassReader;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved;Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodExit;
+#prepare()V
+#initialize()V
+#apply()V
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Bound;
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor
@5.0.0
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotableParameterCount(IZ)V
+#visitAnnotationDefault()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/bytebuddy/jar/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitVarInsn(II)V
+#visitIincInsn(II)V
+#visitInsn(I)V
+#visitEnd()V
+#visitMaxs(II)V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableCollector
@5.0.0
+#visitTryCatchBlock(Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableExtractor
@5.0.0
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner$ExceptionTableSubstitutor
@5.0.0
+#visitTryCatchBlock(Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitLabel(Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitJumpInsn(ILorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitTableSwitchInsn(IILorg/easymock/bytebuddy/jar/asm/Label;[Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/easymock/bytebuddy/jar/asm/Label;[I[Lorg/easymock/bytebuddy/jar/asm/Label;)V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner
@5.0.0
+#prepare()V
+#initialize()V
+#apply()V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType
@5.0.0
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType
@5.0.0
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter
@5.0.0
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Bound;
+#isPrependLineNumber()Z
+#getActualAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getNamedTypes()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithExceptionHandler
@5.0.0
+#getThrowable()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithoutExceptionHandler
@5.0.0
+#getThrowable()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit
@5.0.0
+#getNamedTypes()Ljava/util/Map;
+#getArgumentHandlerFactory()Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$Factory;
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Bound;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved
@5.0.0

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Inlining
@5.0.0
+#isAlive()Z
+#isBinary()Z
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNamedTypes()Ljava/util/Map;
+#asMethodEnter(Ljava/util/List;Lorg/easymock/bytebuddy/jar/asm/ClassReader;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved;Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodEnter;
+#asMethodExit(Ljava/util/List;Lorg/easymock/bytebuddy/jar/asm/ClassReader;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved;Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodExit;
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Bound
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;I)I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Disabled;
+#bind(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Bound;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;I)I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$ForType$Bound
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$ForType
@5.0.0
+#bind(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Bound;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$ForValue$Bound
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$ForValue$Inverted
@5.0.0
+#bind(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Bound;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$ForValue
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$ForValue;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$ForValue;
+#bind(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Bound;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation$ForLabel
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler
@5.0.0
+#bind(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Bound;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase
@5.0.0
+#isAlive()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodEnter
@5.0.0
+#isPrependLineNumber()Z
+#getActualAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodExit
@5.0.0
+#getThrowable()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getArgumentHandlerFactory()Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$Factory;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved
@5.0.0
+#getNamedTypes()Ljava/util/Map;
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForInstrumentedMethod;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$Relocation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Bound;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Bound
@5.0.0
+#onPrepare(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#onStart(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#onEnd(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#onEndWithSkip(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$NoOp;
+#bind(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Bound;
+#onPrepare(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#onStart(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#onEnd(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#onEndWithSkip(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing$Bound
@5.0.0
+#onPrepare(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#onStart(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#onEnd(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#onEndWithSkip(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing
@5.0.0
+#bind(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Bound;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler
@5.0.0
+#bind(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Bound;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved
@5.0.0
+#isBinary()Z
+#getNamedTypes()Ljava/util/Map;
+#asMethodEnter(Ljava/util/List;Lorg/easymock/bytebuddy/jar/asm/ClassReader;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved;Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodEnter;
+#asMethodExit(Ljava/util/List;Lorg/easymock/bytebuddy/jar/asm/ClassReader;Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Unresolved;Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$Dispatcher$Resolved$ForMethodExit;

+###org/easymock/bytebuddy/asm/Advice$Dispatcher
@5.0.0
+#isAlive()Z
+#getAdviceType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/asm/Advice$Enter
@5.0.0
+#readOnly()Z
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$ExceptionHandler$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$ExceptionHandler$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$ExceptionHandler$Default;

+###org/easymock/bytebuddy/asm/Advice$ExceptionHandler$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$ExceptionHandler
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$Exit
@5.0.0
+#readOnly()Z
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$FieldValue
@5.0.0
+#value()Ljava/lang/String;
+#declaringType()Ljava/lang/Class;
+#readOnly()Z
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$Local
@5.0.0
+#value()Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$MethodSizeHandler$Default$ForAdvice
@5.0.0
+#requireStackSize(I)V
+#requireLocalVariableLength(I)V
+#requireStackSizePadding(I)V
+#requireLocalVariableLengthPadding(I)V
+#recordMaxima(II)V

+###org/easymock/bytebuddy/asm/Advice$MethodSizeHandler$Default$WithCopiedArguments
@5.0.0
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;
+#compoundLocalVariableLength(I)I

+###org/easymock/bytebuddy/asm/Advice$MethodSizeHandler$Default$WithRetainedArguments
@5.0.0
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;
+#compoundLocalVariableLength(I)I

+###org/easymock/bytebuddy/asm/Advice$MethodSizeHandler$Default
@5.0.0
+#bindEnter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;
+#requireStackSize(I)V
+#requireLocalVariableLength(I)V
+#compoundStackSize(I)I
+#compoundLocalVariableLength(I)I

+###org/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice
@5.0.0
+#requireStackSizePadding(I)V
+#requireLocalVariableLengthPadding(I)V
+#recordMaxima(II)V

+###org/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForInstrumentedMethod
@5.0.0
+#bindEnter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;
+#compoundStackSize(I)I
+#compoundLocalVariableLength(I)I

+###org/easymock/bytebuddy/asm/Advice$MethodSizeHandler$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$NoOp;
+#bindEnter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$MethodSizeHandler$ForAdvice;
+#compoundStackSize(I)I
+#compoundLocalVariableLength(I)I
+#requireStackSize(I)V
+#requireLocalVariableLength(I)V
+#requireStackSizePadding(I)V
+#requireLocalVariableLengthPadding(I)V
+#recordMaxima(II)V

+###org/easymock/bytebuddy/asm/Advice$MethodSizeHandler
@5.0.0
+#requireStackSize(I)V
+#requireLocalVariableLength(I)V

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;
+#isDelegation()Z

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$Illegal
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$Simple
@5.0.0
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;)V
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory
@5.0.0
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForAllArguments$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForAllArguments$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForAllArguments$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForAllArguments
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Z)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Resolved$Factory
@5.0.0
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/method/ParameterDescription;)V
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/method/ParameterDescription;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Resolved
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Lorg/easymock/bytebuddy/description/method/ParameterDescription;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;I)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;IZ)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForArgument
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForEnterValue$Factory
@5.0.0
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForEnterValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForExitValue$Factory
@5.0.0
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForExitValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField$Resolved$Factory
@5.0.0
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/field/FieldDescription;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField$Resolved
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved$WithExplicitType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved$WithImplicitType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Ljava/lang/String;)V

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForField
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForInstrumentedMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForInstrumentedMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForInstrumentedMethod;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForInstrumentedType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForInstrumentedType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForInstrumentedType;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForLocalValue$Factory
@5.0.0
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForLocalValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/lang/String;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForConstantValue
@5.0.0
+#<init>(Ljava/lang/String;)V
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForDescriptor
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForDescriptor;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForDescriptor;
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForJavaSignature
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForJavaSignature;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForJavaSignature;
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForMethodName
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForMethodName;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForMethodName;
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForPropertyName
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForPropertyName;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForPropertyName;
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForReturnTypeName
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForReturnTypeName;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForReturnTypeName;
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForStringRepresentation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForStringRepresentation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForStringRepresentation;
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForTypeName
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForTypeName;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer$ForTypeName;
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin$Renderer
@5.0.0
+#apply(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForOrigin
@5.0.0
+#<init>(Ljava/util/List;)V
+#parse(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForReturnValue$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForReturnValue$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForReturnValue$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForReturnValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForSerializedValue$Factory
@5.0.0
+#of(Ljava/lang/Class;Ljava/io/Serializable;Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForSerializedValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForStackManipulation$Factory
@5.0.0
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)V
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#of(Ljava/lang/Class;Ljava/lang/Object;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForStackManipulation$OfAnnotationProperty
@5.0.0
+#of(Ljava/lang/Class;Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForStackManipulation$OfDefaultValue
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForStackManipulation$OfDynamicInvocation
@5.0.0
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/util/List;)V
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForStackManipulation
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForStubValue
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForStubValue;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForStubValue;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForThisReference
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Z)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForThrowable$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForThrowable$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForThrowable$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForThrowable
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForUnusedValue$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForUnusedValue$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$ForUnusedValue$Factory;
+#getAnnotationType()Ljava/lang/Class;
+#make(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory$AdviceType;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$ForUnusedValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;
+#isPremature(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Z

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$AbstractReadOnlyAdapter
@5.0.0
+#<init>()V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray$ReadOnly
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray$ReadWrite
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Ljava/util/List;)V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForArray
@5.0.0
+#resolveRead()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadOnly
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue$ReadWrite
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForDefaultValue
@5.0.0
+#resolveRead()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForField$ReadOnly
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForField$ReadWrite
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForField$WriteOnly
@5.0.0
+#resolveRead()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForField
@5.0.0
+#resolveRead()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForStackManipulation$Writable
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolveRead()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForStackManipulation
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#of(Ljava/lang/Object;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#resolveRead()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForVariable$ReadOnly
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;ILorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForVariable$ReadWrite
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;ILorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target$ForVariable
@5.0.0
+#resolveRead()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping$Target
@5.0.0
+#resolveRead()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveWrite()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#resolveIncrement(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$OffsetMapping
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;

+###org/easymock/bytebuddy/asm/Advice$OnDefaultValue
@5.0.0

+###org/easymock/bytebuddy/asm/Advice$OnMethodEnter
@5.0.0
+#skipOn()Ljava/lang/Class;
+#prependLineNumber()Z
+#inline()Z
+#suppress()Ljava/lang/Class;

+###org/easymock/bytebuddy/asm/Advice$OnMethodExit
@5.0.0
+#repeatOn()Ljava/lang/Class;
+#onThrowable()Ljava/lang/Class;
+#backupArguments()Z
+#inline()Z
+#suppress()Ljava/lang/Class;

+###org/easymock/bytebuddy/asm/Advice$OnNonDefaultValue
@5.0.0

+###org/easymock/bytebuddy/asm/Advice$Origin
@5.0.0
+#value()Ljava/lang/String;

+###org/easymock/bytebuddy/asm/Advice$PostProcessor$Compound
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForPostProcessor;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$PostProcessor$Factory$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)V
+#<init>(Ljava/util/List;)V
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Z)Lorg/easymock/bytebuddy/asm/Advice$PostProcessor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice$PostProcessor$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Z)Lorg/easymock/bytebuddy/asm/Advice$PostProcessor;

+###org/easymock/bytebuddy/asm/Advice$PostProcessor$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$NoOp;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForPostProcessor;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Z)Lorg/easymock/bytebuddy/asm/Advice$PostProcessor;

+###org/easymock/bytebuddy/asm/Advice$PostProcessor
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForPostProcessor;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/Advice$Return
@5.0.0
+#readOnly()Z
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$ForAdvice
@5.0.0
+#translateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#injectReturnFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectExceptionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectIntermediateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/util/List;)V

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$Initialization
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$Initialization;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$Initialization;

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$TranslationMode
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$TranslationMode;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$TranslationMode;

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$Trivial
@5.0.0
+#translateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;
+#injectReturnFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectExceptionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectPostCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectInitializationFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectStartFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$WithPreservedArguments$WithArgumentCopy
@5.0.0
+#injectStartFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#translateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;II[Ljava/lang/Object;I[Ljava/lang/Object;)V

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$WithPreservedArguments$WithoutArgumentCopy
@5.0.0
+#injectStartFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#translateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;II[Ljava/lang/Object;I[Ljava/lang/Object;)V

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default$WithPreservedArguments
@5.0.0
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;
+#injectReturnFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectExceptionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectPostCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectInitializationFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$Default
@5.0.0
+#bindEnter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;
+#getReaderHint()I

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice
@5.0.0

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForInstrumentedMethod
@5.0.0
+#bindEnter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;
+#getReaderHint()I
+#injectInitializationFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectStartFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectPostCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForPostProcessor
@5.0.0
+#injectIntermediateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/util/List;)V

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$NoOp;
+#bindEnter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;
+#bindExit(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$StackMapFrameHandler$ForAdvice;
+#getReaderHint()I
+#translateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#injectReturnFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectExceptionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectInitializationFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectStartFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectPostCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectIntermediateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/util/List;)V

+###org/easymock/bytebuddy/asm/Advice$StackMapFrameHandler
@5.0.0
+#translateFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#injectReturnFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectExceptionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#injectCompletionFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/asm/Advice$StubValue
@5.0.0

+###org/easymock/bytebuddy/asm/Advice$This
@5.0.0
+#readOnly()Z
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
+#optional()Z

+###org/easymock/bytebuddy/asm/Advice$Thrown
@5.0.0
+#readOnly()Z
+#typing()Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/asm/Advice$Unused
@5.0.0

+###org/easymock/bytebuddy/asm/Advice$WithCustomMapping
@5.0.0
+#bind(Ljava/lang/Class;Ljava/lang/Object;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Ljava/lang/reflect/Method;I)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Ljava/lang/reflect/Constructor;I)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/method/ParameterDescription;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Ljava/lang/Enum;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindSerialized(Ljava/lang/Class;Ljava/io/Serializable;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindSerialized(Ljava/lang/Class;Ljava/io/Serializable;Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindProperty(Ljava/lang/Class;Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindLambda(Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindLambda(Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindLambda(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindLambda(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindLambda(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindLambda(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindDynamic(Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindDynamic(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindDynamic(Ljava/lang/Class;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindDynamic(Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindDynamic(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bindDynamic(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Ljava/lang/Class;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bind(Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Factory;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bootstrap(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bootstrap(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#bootstrap(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#with(Lorg/easymock/bytebuddy/asm/Advice$PostProcessor$Factory;)Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#to(Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Ljava/lang/Class;Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Ljava/lang/Class;Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/asm/Advice;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/Advice
@5.0.0
+#to(Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Ljava/lang/Class;Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Ljava/lang/Class;Ljava/lang/Class;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/asm/Advice;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/asm/Advice;
+#withCustomMapping()Lorg/easymock/bytebuddy/asm/Advice$WithCustomMapping;
+#on(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/asm/Advice;
+#withExceptionPrinting()Lorg/easymock/bytebuddy/asm/Advice;
+#withExceptionHandler(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/asm/Advice;
+#withExceptionHandler(Lorg/easymock/bytebuddy/asm/Advice$ExceptionHandler;)Lorg/easymock/bytebuddy/asm/Advice;
+#wrap(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$AbstractBase
@5.0.0
+#<init>()V
+#mergeWriter(I)I
+#mergeReader(I)I

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;)V
+#<init>(Ljava/util/List;)V
+#mergeWriter(I)I
+#mergeReader(I)I
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredFields$DispatchingVisitor
@5.0.0
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredFields$Entry
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Z
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredFields$FieldVisitorWrapper
@5.0.0
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredFields
@5.0.0
+#<init>()V
+#field(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredFields$FieldVisitorWrapper;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredFields;
+#field(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredFields;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor
@5.0.0
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Z
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$MethodVisitorWrapper
@5.0.0
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods
@5.0.0
+#<init>()V
+#method(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$MethodVisitorWrapper;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#method(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#constructor(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$MethodVisitorWrapper;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#constructor(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#invokable(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$MethodVisitorWrapper;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#invokable(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#writerFlags(I)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#readerFlags(I)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#mergeWriter(I)I
+#mergeReader(I)I
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$NoOp;
+#mergeWriter(I)I
+#mergeReader(I)I
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;

+###org/easymock/bytebuddy/asm/AsmVisitorWrapper
@5.0.0
+#mergeWriter(I)I
+#mergeReader(I)I
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$AttributeTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$ConstantArrayTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$ConstantDynamicTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$ConstantTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$CreateClassVisitorFactory
@5.0.0
+#run()Lorg/easymock/bytebuddy/asm/ClassVisitorFactory;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$FrameTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$HandleTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$LabelArrayTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$LabelTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$NullCheckedConstruction
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory$TypePathTranslator
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ClassVisitorFactory
@5.0.0
+#getType()Ljava/lang/Class;
+#of(Ljava/lang/Class;)Lorg/easymock/bytebuddy/asm/ClassVisitorFactory;
+#of(Ljava/lang/Class;Lorg/easymock/bytebuddy/ByteBuddy;)Lorg/easymock/bytebuddy/asm/ClassVisitorFactory;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;)Ljava/lang/Object;
+#unwrap(Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberAttributeExtension$ForField
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#annotate([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForField;
+#annotate(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForField;
+#annotate([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForField;
+#annotate(Ljava/util/Collection;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForField;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Factory;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForField;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#on(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;

+###org/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#annotateMethod([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#annotateMethod(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#annotateMethod([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#annotateMethod(Ljava/util/Collection;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#annotateParameter(I[Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#annotateParameter(ILjava/util/List;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#annotateParameter(I[Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#annotateParameter(ILjava/util/Collection;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;)Lorg/easymock/bytebuddy/asm/MemberAttributeExtension$ForMethod;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#on(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;

+###org/easymock/bytebuddy/asm/MemberAttributeExtension
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberRemoval$MemberRemovingClassVisitor
@5.0.0
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;

+###org/easymock/bytebuddy/asm/MemberRemoval
@5.0.0
+#<init>()V
+#stripFields(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberRemoval;
+#stripMethods(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberRemoval;
+#stripConstructors(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberRemoval;
+#stripInvokables(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberRemoval;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding$Resolved
@5.0.0
+#isBound()Z
+#make(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding$Unresolved
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding$Unresolved;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding$Unresolved;
+#isBound()Z
+#make(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding
@5.0.0
+#isBound()Z
+#make(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Factory$Compound
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$ForElementMatchers$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$ForElementMatchers
@5.0.0
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Z)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding;
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$InvocationType;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$ForFirstBinding
@5.0.0
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Z)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding;
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$InvocationType;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$InvocationType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$InvocationType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$InvocationType;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$NoOp;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement;
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Z)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding;
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$InvocationType;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Replacement
@5.0.0
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Z)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding;
+#bind(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$InvocationType;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Replacement$Binding;

+###org/easymock/bytebuddy/asm/MemberSubstitution$SubstitutingMethodVisitor
@5.0.0
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitMaxs(II)V

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution;
+#executing([Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step$Factory;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Factory;
+#executing(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Factory;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step$Resolution
@5.0.0
+#getStackManipulation()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getResultType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#make(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/Map;I)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step$Resolution;
+#getStackManipulation()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getResultType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/Map;I)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step$Resolution;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain
@5.0.0
+#withDefaultAssigner()Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Factory;
+#with(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Factory;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForFieldAccess$FieldResolver$ForElementMatcher
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForFieldAccess$FieldResolver$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForFieldAccess$FieldResolver
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/field/FieldDescription;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForFieldAccess$OfGivenField
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForFieldAccess$OfMatchedField
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForFieldAccess
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForFieldAccess$FieldResolver;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver$Matching
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForMethodInvocation$OfGivenMethod
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForMethodInvocation$OfMatchedMethod
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForMethodInvocation
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$ForMethodInvocation$MethodResolver;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Stubbing
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Stubbing;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Stubbing;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/MemberSubstitution$Substitution
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/ByteCodeElement;Lorg/easymock/bytebuddy/description/type/TypeList$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/asm/MemberSubstitution$TypePoolResolver$ForClassFileLocator
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)V
+#<init>(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/pool/TypePool$Default$ReaderMode;)V
+#of(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$TypePoolResolver;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/pool/TypePool;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$TypePoolResolver$ForExplicitPool
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/pool/TypePool;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$TypePoolResolver$OfImplicitPool
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/MemberSubstitution$TypePoolResolver$OfImplicitPool;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$TypePoolResolver$OfImplicitPool;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/asm/MemberSubstitution$TypePoolResolver
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification$ForMatchedByteCodeElement
@5.0.0
+#replaceWith(Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Factory;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification$ForMatchedField
@5.0.0
+#onRead()Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification;
+#onWrite()Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification;
+#replaceWith(Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Factory;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification$ForMatchedMethod
@5.0.0
+#onVirtualCall()Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification;
+#onSuperCall()Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification;
+#replaceWith(Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Factory;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification
@5.0.0
+#stub()Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWith(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWith(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWithField(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWith(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWith(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWithMethod(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWithMethod(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWithInstrumentedMethod()Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWithChain([Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Chain$Step$Factory;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWithChain(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#replaceWith(Lorg/easymock/bytebuddy/asm/MemberSubstitution$Substitution$Factory;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/MemberSubstitution
@5.0.0
+#strict()Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#relaxed()Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#element(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification;
+#field(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification$ForMatchedField;
+#method(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification$ForMatchedMethod;
+#constructor(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification;
+#invokable(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/MemberSubstitution$WithoutSpecification;
+#with(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#with(Lorg/easymock/bytebuddy/asm/MemberSubstitution$TypePoolResolver;)Lorg/easymock/bytebuddy/asm/MemberSubstitution;
+#on(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ModifierAdjustment$Adjustment
@5.0.0
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/ModifierAdjustment$ModifierAdjustingClassVisitor
@5.0.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;

+###org/easymock/bytebuddy/asm/ModifierAdjustment
@5.0.0
+#<init>()V
+#withTypeModifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForType;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withTypeModifiers(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withTypeModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForType;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withTypeModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withFieldModifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForField;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withFieldModifiers(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withFieldModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForField;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withFieldModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withMethodModifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withMethodModifiers(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withMethodModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withMethodModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withConstructorModifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withConstructorModifiers(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withConstructorModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withConstructorModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withInvokableModifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withInvokableModifiers(Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withInvokableModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#withInvokableModifiers(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/List;)Lorg/easymock/bytebuddy/asm/ModifierAdjustment;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/asm/ModifierAdjustment$ModifierAdjustingClassVisitor;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/asm/TypeConstantAdjustment$TypeConstantDissolvingClassVisitor$TypeConstantDissolvingMethodVisitor
@5.0.0
+#visitLdcInsn(Ljava/lang/Object;)V

+###org/easymock/bytebuddy/asm/TypeConstantAdjustment$TypeConstantDissolvingClassVisitor
@5.0.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;

+###org/easymock/bytebuddy/asm/TypeConstantAdjustment
@5.0.0
+#values()[Lorg/easymock/bytebuddy/asm/TypeConstantAdjustment;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/asm/TypeConstantAdjustment;
+#mergeWriter(I)I
+#mergeReader(I)I
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;

+###org/easymock/bytebuddy/asm/TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceAnnotationVisitor
@5.0.0
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/asm/TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceFieldVisitor
@5.0.0
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/asm/TypeReferenceAdjustment$TypeReferenceClassVisitor$TypeReferenceMethodVisitor
@5.0.0
+#visitAnnotationDefault()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitInsnAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTryCatchAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitLocalVariableAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;[Lorg/easymock/bytebuddy/jar/asm/Label;[Lorg/easymock/bytebuddy/jar/asm/Label;[ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTryCatchBlock(Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Ljava/lang/String;)V

+###org/easymock/bytebuddy/asm/TypeReferenceAdjustment$TypeReferenceClassVisitor
@5.0.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitNestHost(Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitNestMember(Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/asm/TypeReferenceAdjustment
@5.0.0
+#strict()Lorg/easymock/bytebuddy/asm/TypeReferenceAdjustment;
+#relaxed()Lorg/easymock/bytebuddy/asm/TypeReferenceAdjustment;
+#filter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/asm/TypeReferenceAdjustment;
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/field/FieldList;Lorg/easymock/bytebuddy/description/method/MethodList;II)Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/AccessControllerPlugin$AccessControlWrapper$PrefixingMethodVisitor
@5.0.0
+#visitCode()V
+#visitMaxs(II)V

+###org/easymock/bytebuddy/build/AccessControllerPlugin$AccessControlWrapper
@5.0.0
+#wrap(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/AccessControllerPlugin$Enhance
@5.0.0

+###org/easymock/bytebuddy/build/AccessControllerPlugin$Initializer$WithProperty
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/AccessControllerPlugin$Initializer$WithoutProperty
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/AccessControllerPlugin$Initializer
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/AccessControllerPlugin
@5.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#make()Lorg/easymock/bytebuddy/build/Plugin;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/AndroidDescriptor$Trivial
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/AndroidDescriptor$Trivial;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/AndroidDescriptor$Trivial;
+#getTypeScope(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/build/AndroidDescriptor$TypeScope;

+###org/easymock/bytebuddy/build/AndroidDescriptor$TypeScope
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/AndroidDescriptor$TypeScope;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/AndroidDescriptor$TypeScope;

+###org/easymock/bytebuddy/build/AndroidDescriptor
@5.0.0
+#getTypeScope(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/build/AndroidDescriptor$TypeScope;

+###org/easymock/bytebuddy/build/BuildLogger$Adapter
@5.0.0
+#<init>()V
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/easymock/bytebuddy/build/BuildLogger$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/build/BuildLogger;)V
+#<init>(Ljava/util/List;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/BuildLogger$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/BuildLogger$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/BuildLogger$NoOp;
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/easymock/bytebuddy/build/BuildLogger$StreamWriting
@5.0.0
+#<init>(Ljava/io/PrintStream;)V
+#toSystemOut()Lorg/easymock/bytebuddy/build/BuildLogger;
+#toSystemError()Lorg/easymock/bytebuddy/build/BuildLogger;
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/BuildLogger
@5.0.0
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/easymock/bytebuddy/build/CachedReturnPlugin$CacheField
@5.0.0

+###org/easymock/bytebuddy/build/CachedReturnPlugin$CacheFieldOffsetMapping
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/asm/Advice$ArgumentHandler;Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Sort;)Lorg/easymock/bytebuddy/asm/Advice$OffsetMapping$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/CachedReturnPlugin$Enhance
@5.0.0
+#value()Ljava/lang/String;

+###org/easymock/bytebuddy/build/CachedReturnPlugin
@5.0.0
+#<init>()V
+#<init>(Z)V
+#make()Lorg/easymock/bytebuddy/build/Plugin;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/DispatcherAnnotationPlugin
@5.0.0
+#<init>()V
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#close()V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/EntryPoint$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/EntryPoint$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/EntryPoint$Default;

+###org/easymock/bytebuddy/build/EntryPoint$Unvalidated
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/EntryPoint;)V
+#byteBuddy(Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/ByteBuddy;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/EntryPoint
@5.0.0
+#byteBuddy(Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/ByteBuddy;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$AnnotationOrderComparator
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$AnnotationOrderComparator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$AnnotationOrderComparator;
+#compare(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$Enhance$InvokeSuper
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$Enhance$InvokeSuper;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$Enhance$InvokeSuper;

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$Enhance
@5.0.0
+#invokeSuper()Lorg/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$Enhance$InvokeSuper;
+#simpleComparisonsFirst()Z
+#includeSyntheticFields()Z
+#permitSubclassEquality()Z
+#useTypeHashConstant()Z

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$Sorted
@5.0.0
+#value()I

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$ValueHandling$Sort
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$ValueHandling$Sort;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$ValueHandling$Sort;

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$ValueHandling
@5.0.0
+#value()Lorg/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$ValueHandling$Sort;

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$ValueMatcher
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin$WithNonNullableFields
@5.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/HashCodeAndEqualsPlugin
@5.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#make()Lorg/easymock/bytebuddy/build/Plugin;
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#close()V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$AbstractBase
@5.0.0
+#<init>()V
+#withErrorHandlers([Lorg/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#withParallelTransformation(I)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#apply(Ljava/io/File;Ljava/io/File;[Lorg/easymock/bytebuddy/build/Plugin$Factory;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Summary;
+#apply(Ljava/io/File;Ljava/io/File;Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Summary;
+#apply(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;Lorg/easymock/bytebuddy/build/Plugin$Engine$Target;[Lorg/easymock/bytebuddy/build/Plugin$Factory;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Summary;

+###org/easymock/bytebuddy/build/Plugin$Engine$Default
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/ByteBuddy;)V
+#of(Lorg/easymock/bytebuddy/build/EntryPoint;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#scan(Ljava/lang/ClassLoader;)Ljava/util/Set;
+#main([Ljava/lang/String;)V
+#with(Lorg/easymock/bytebuddy/ByteBuddy;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/build/Plugin$Engine$TypeStrategy;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#withoutErrorHandlers()Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#withErrorHandlers(Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Factory;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#apply(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;Lorg/easymock/bytebuddy/build/Plugin$Engine$Target;Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Summary;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher;

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForParallelTransformation$EagerWork
@5.0.0
+#call()Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Materializable;
+#call()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForParallelTransformation$Factory
@5.0.0
+#<init>(Ljava/util/concurrent/Executor;)V
+#make(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForParallelTransformation$WithThrowawayExecutorService$Factory
@5.0.0
+#<init>(I)V
+#make(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForParallelTransformation$WithThrowawayExecutorService
@5.0.0
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForParallelTransformation
@5.0.0
+#accept(Ljava/util/concurrent/Callable;Z)V
+#complete()V
+#close()V

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForSerialTransformation$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForSerialTransformation$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForSerialTransformation$Factory;
+#make(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher;

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$ForSerialTransformation
@5.0.0
+#accept(Ljava/util/concurrent/Callable;Z)V
+#complete()V
+#close()V

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Materializable$ForFailedElement
@5.0.0
+#materialize(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Materializable$ForRetainedElement
@5.0.0
+#materialize(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Materializable$ForTransformedElement
@5.0.0
+#materialize(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Materializable$ForUnresolvedElement
@5.0.0
+#materialize(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Materializable
@5.0.0
+#materialize(Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Dispatcher
@5.0.0
+#accept(Ljava/util/concurrent/Callable;Z)V
+#complete()V

+###org/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler;)V
+#<init>(Ljava/util/List;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onUnresolved(Ljava/lang/String;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler$Enforcing
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler$Enforcing;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler$Enforcing;
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onUnresolved(Ljava/lang/String;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler$Failing
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler$Failing;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler$Failing;
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onUnresolved(Ljava/lang/String;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler
@5.0.0
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onUnresolved(Ljava/lang/String;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Listener$Adapter
@5.0.0
+#<init>()V
+#onDiscovery(Ljava/lang/String;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onComplete(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onUnresolved(Ljava/lang/String;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Listener$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener;)V
+#<init>(Ljava/util/List;)V
+#onDiscovery(Ljava/lang/String;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onComplete(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onUnresolved(Ljava/lang/String;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Listener$ForErrorHandler
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onUnresolved(Ljava/lang/String;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Listener$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener$NoOp;
+#onDiscovery(Ljava/lang/String;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onComplete(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onUnresolved(Ljava/lang/String;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Listener$StreamWriting
@5.0.0
+#<init>(Ljava/io/PrintStream;)V
+#toSystemOut()Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener$StreamWriting;
+#toSystemError()Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener$StreamWriting;
+#withTransformationsOnly()Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener;
+#withErrorsOnly()Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener;
+#onDiscovery(Ljava/lang/String;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onUnresolved(Ljava/lang/String;)V
+#onLiveInitializer(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onComplete(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onManifest(Ljava/util/jar/Manifest;)V
+#onResource(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Listener$WithErrorsOnly
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Listener$WithTransformationsOnly
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#onError(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onError(Ljava/util/Map;)V
+#onError(Lorg/easymock/bytebuddy/build/Plugin;Ljava/lang/Throwable;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Listener
@5.0.0
+#onDiscovery(Ljava/lang/String;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onTransformation(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/build/Plugin;)V
+#onIgnored(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onComplete(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy$Default;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy$Eager
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy$Eager;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy$Eager;
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy
@5.0.0
+#typePool(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Compound$Origin$CompoundIterator
@5.0.0
+#hasNext()Z
+#next()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Compound$Origin
@5.0.0
+#getManifest()Ljava/util/jar/Manifest;
+#getClassFileLocator()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#iterator()Ljava/util/Iterator;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Compound
@5.0.0
+#<init>(Ljava/util/Collection;)V
+#read()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Element$ForByteArray
@5.0.0
+#<init>(Ljava/lang/String;[B)V
+#getName()Ljava/lang/String;
+#getInputStream()Ljava/io/InputStream;
+#resolveAs(Ljava/lang/Class;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Element$ForFile
@5.0.0
+#<init>(Ljava/io/File;Ljava/io/File;)V
+#getName()Ljava/lang/String;
+#getInputStream()Ljava/io/InputStream;
+#resolveAs(Ljava/lang/Class;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Element$ForJarEntry
@5.0.0
+#<init>(Ljava/util/jar/JarFile;Ljava/util/jar/JarEntry;)V
+#getName()Ljava/lang/String;
+#getInputStream()Ljava/io/InputStream;
+#resolveAs(Ljava/lang/Class;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Element
@5.0.0
+#getName()Ljava/lang/String;
+#getInputStream()Ljava/io/InputStream;
+#resolveAs(Ljava/lang/Class;)Ljava/lang/Object;

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Empty
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Empty;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Empty;
+#read()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;
+#getClassFileLocator()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#getManifest()Ljava/util/jar/Manifest;
+#iterator()Ljava/util/Iterator;
+#close()V

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Filtering
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#<init>(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Z)V
+#read()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$ForFolder$FolderIterator
@5.0.0
+#hasNext()Z
+#next()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$ForFolder
@5.0.0
+#<init>(Ljava/io/File;)V
+#read()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;
+#getClassFileLocator()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#getManifest()Ljava/util/jar/Manifest;
+#iterator()Ljava/util/Iterator;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$ForJarFile
@5.0.0
+#<init>(Ljava/io/File;)V
+#read()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$InMemory$MapEntryIterator
@5.0.0
+#hasNext()Z
+#next()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$InMemory
@5.0.0
+#<init>(Ljava/util/Map;)V
+#ofTypes([Ljava/lang/Class;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;
+#ofTypes(Ljava/util/Collection;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;
+#ofTypes(Ljava/util/Map;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;
+#read()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;
+#getClassFileLocator()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#getManifest()Ljava/util/jar/Manifest;
+#iterator()Ljava/util/Iterator;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Origin$Filtering
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#<init>(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;Lorg/easymock/bytebuddy/matcher/ElementMatcher;Z)V
+#getManifest()Ljava/util/jar/Manifest;
+#getClassFileLocator()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#close()V
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Origin$ForJarFile$JarFileIterator
@5.0.0
+#hasNext()Z
+#next()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Origin$ForJarFile
@5.0.0
+#<init>(Ljava/util/jar/JarFile;)V
+#getManifest()Ljava/util/jar/Manifest;
+#getClassFileLocator()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#close()V
+#iterator()Ljava/util/Iterator;

+###org/easymock/bytebuddy/build/Plugin$Engine$Source$Origin
@5.0.0
+#getManifest()Ljava/util/jar/Manifest;
+#getClassFileLocator()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;

+###org/easymock/bytebuddy/build/Plugin$Engine$Source
@5.0.0
+#read()Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Origin;

+###org/easymock/bytebuddy/build/Plugin$Engine$Summary
@5.0.0
+#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V
+#getTransformed()Ljava/util/List;
+#getFailed()Ljava/util/Map;
+#getUnresolved()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/build/Plugin$Engine$Target$Discarding
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Discarding;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Discarding;
+#write(Ljava/util/jar/Manifest;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;
+#store(Ljava/util/Map;)V
+#retain(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;)V
+#close()V

+###org/easymock/bytebuddy/build/Plugin$Engine$Target$ForFolder
@5.0.0
+#<init>(Ljava/io/File;)V
+#write(Ljava/util/jar/Manifest;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;
+#store(Ljava/util/Map;)V
+#retain(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;)V
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Target$ForJarFile
@5.0.0
+#<init>(Ljava/io/File;)V
+#write(Ljava/util/jar/Manifest;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Target$InMemory
@5.0.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#write(Ljava/util/jar/Manifest;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;
+#store(Ljava/util/Map;)V
+#retain(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;)V
+#close()V
+#getStorage()Ljava/util/Map;
+#toTypeMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$Target$Sink$ForJarOutputStream
@5.0.0
+#<init>(Ljava/util/jar/JarOutputStream;)V
+#store(Ljava/util/Map;)V
+#retain(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;)V
+#close()V

+###org/easymock/bytebuddy/build/Plugin$Engine$Target$Sink
@5.0.0
+#store(Ljava/util/Map;)V
+#retain(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source$Element;)V

+###org/easymock/bytebuddy/build/Plugin$Engine$Target
@5.0.0
+#write(Ljava/util/jar/Manifest;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Target$Sink;

+###org/easymock/bytebuddy/build/Plugin$Engine$TypeStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Engine$TypeStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Engine$TypeStrategy$Default;

+###org/easymock/bytebuddy/build/Plugin$Engine$TypeStrategy$ForEntryPoint
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/EntryPoint;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)V
+#builder(Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Engine$TypeStrategy
@5.0.0
+#builder(Lorg/easymock/bytebuddy/ByteBuddy;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/build/Plugin$Engine
@5.0.0
+#with(Lorg/easymock/bytebuddy/ByteBuddy;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/build/Plugin$Engine$TypeStrategy;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/build/Plugin$Engine$PoolStrategy;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/build/Plugin$Engine$Listener;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#withoutErrorHandlers()Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#withErrorHandlers([Lorg/easymock/bytebuddy/build/Plugin$Engine$ErrorHandler;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#withErrorHandlers(Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#withParallelTransformation(I)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#with(Lorg/easymock/bytebuddy/build/Plugin$Engine$Dispatcher$Factory;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#ignore(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/build/Plugin$Engine;
+#apply(Ljava/io/File;Ljava/io/File;[Lorg/easymock/bytebuddy/build/Plugin$Factory;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Summary;
+#apply(Ljava/io/File;Ljava/io/File;Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Summary;
+#apply(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;Lorg/easymock/bytebuddy/build/Plugin$Engine$Target;[Lorg/easymock/bytebuddy/build/Plugin$Factory;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Summary;
+#apply(Lorg/easymock/bytebuddy/build/Plugin$Engine$Source;Lorg/easymock/bytebuddy/build/Plugin$Engine$Target;Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Engine$Summary;

+###org/easymock/bytebuddy/build/Plugin$Factory$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/build/Plugin;)V
+#make()Lorg/easymock/bytebuddy/build/Plugin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$ForIndex$WithDynamicType
@5.0.0
+#<init>(ILjava/lang/String;)V
+#resolve(ILjava/lang/Class;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$ForIndex
@5.0.0
+#<init>(ILjava/lang/Object;)V
+#resolve(ILjava/lang/Class;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$ForType
@5.0.0
+#of(Ljava/lang/Class;Ljava/lang/Object;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver;
+#resolve(ILjava/lang/Class;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$NoOp;
+#resolve(ILjava/lang/Class;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution;

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution$Resolved
@5.0.0
+#<init>(Ljava/lang/Object;)V
+#isResolved()Z
+#getArgument()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution$Unresolved
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution$Unresolved;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution$Unresolved;
+#isResolved()Z
+#getArgument()Ljava/lang/Object;

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution
@5.0.0
+#isResolved()Z
+#getArgument()Ljava/lang/Object;

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver
@5.0.0
+#resolve(ILjava/lang/Class;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver$Resolution;

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator$Ambiguous
@5.0.0
+#replaceBy(Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator$Resolved;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator;
+#instantiate()Lorg/easymock/bytebuddy/build/Plugin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator$Resolved
@5.0.0
+#replaceBy(Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator$Resolved;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator;
+#instantiate()Lorg/easymock/bytebuddy/build/Plugin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator$Unresolved
@5.0.0
+#replaceBy(Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator$Resolved;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator;
+#instantiate()Lorg/easymock/bytebuddy/build/Plugin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator
@5.0.0
+#replaceBy(Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator$Resolved;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Instantiator;
+#instantiate()Lorg/easymock/bytebuddy/build/Plugin;

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$Priority
@5.0.0
+#value()I

+###org/easymock/bytebuddy/build/Plugin$Factory$UsingReflection
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#with([Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection$ArgumentResolver;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection;
+#with(Ljava/util/List;)Lorg/easymock/bytebuddy/build/Plugin$Factory$UsingReflection;
+#make()Lorg/easymock/bytebuddy/build/Plugin;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$Factory
@5.0.0
+#make()Lorg/easymock/bytebuddy/build/Plugin;

+###org/easymock/bytebuddy/build/Plugin$ForElementMatcher
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$NoOp
@5.0.0
+#<init>()V
+#make()Lorg/easymock/bytebuddy/build/Plugin;
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#close()V
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/Plugin$WithInitialization
@5.0.0
+#initialize(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Ljava/util/Map;

+###org/easymock/bytebuddy/build/Plugin$WithPreprocessor
@5.0.0
+#onPreprocess(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)V

+###org/easymock/bytebuddy/build/Plugin
@5.0.0
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/build/RepeatedAnnotationPlugin$Enhance
@5.0.0
+#value()Ljava/lang/Class;

+###org/easymock/bytebuddy/build/RepeatedAnnotationPlugin$RepeatedAnnotationAppender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/RepeatedAnnotationPlugin
@5.0.0
+#<init>()V
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/build/ToStringPlugin$Enhance$Prefix
@5.0.0
+#values()[Lorg/easymock/bytebuddy/build/ToStringPlugin$Enhance$Prefix;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/build/ToStringPlugin$Enhance$Prefix;

+###org/easymock/bytebuddy/build/ToStringPlugin$Enhance
@5.0.0
+#prefix()Lorg/easymock/bytebuddy/build/ToStringPlugin$Enhance$Prefix;
+#includeSyntheticFields()Z

+###org/easymock/bytebuddy/build/ToStringPlugin$Exclude
@5.0.0

+###org/easymock/bytebuddy/build/ToStringPlugin
@5.0.0
+#<init>()V
+#make()Lorg/easymock/bytebuddy/build/Plugin;
+#matches(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#close()V
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;)V
+#<init>(Ljava/util/List;)V
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#get(I)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/ByteCodeElement$Token
@5.0.0
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/ByteCodeElement$TypeDependant
@5.0.0
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/ByteCodeElement
@5.0.0
+#isVisibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isAccessibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z

+###org/easymock/bytebuddy/description/DeclaredByType$WithMandatoryDeclaration
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/DeclaredByType
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/ModifierReviewable$AbstractBase
@5.0.0
+#<init>()V
+#isAbstract()Z
+#isFinal()Z
+#isStatic()Z
+#isPublic()Z
+#isProtected()Z
+#isPackagePrivate()Z
+#isPrivate()Z
+#isNative()Z
+#isSynchronized()Z
+#isStrict()Z
+#isMandated()Z
+#isSynthetic()Z
+#isBridge()Z
+#isDeprecated()Z
+#isAnnotation()Z
+#isEnum()Z
+#isInterface()Z
+#isTransient()Z
+#isVolatile()Z
+#isVarArgs()Z
+#getSyntheticState()Lorg/easymock/bytebuddy/description/modifier/SyntheticState;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#getOwnership()Lorg/easymock/bytebuddy/description/modifier/Ownership;
+#getEnumerationState()Lorg/easymock/bytebuddy/description/modifier/EnumerationState;
+#getTypeManifestation()Lorg/easymock/bytebuddy/description/modifier/TypeManifestation;
+#getFieldManifestation()Lorg/easymock/bytebuddy/description/modifier/FieldManifestation;
+#getFieldPersistence()Lorg/easymock/bytebuddy/description/modifier/FieldPersistence;
+#getSynchronizationState()Lorg/easymock/bytebuddy/description/modifier/SynchronizationState;
+#getMethodManifestation()Lorg/easymock/bytebuddy/description/modifier/MethodManifestation;
+#getMethodStrictness()Lorg/easymock/bytebuddy/description/modifier/MethodStrictness;
+#getParameterManifestation()Lorg/easymock/bytebuddy/description/modifier/ParameterManifestation;
+#getProvisioningState()Lorg/easymock/bytebuddy/description/modifier/ProvisioningState;

+###org/easymock/bytebuddy/description/ModifierReviewable$ForFieldDescription
@5.0.0
+#isVolatile()Z
+#isTransient()Z
+#getFieldManifestation()Lorg/easymock/bytebuddy/description/modifier/FieldManifestation;
+#getFieldPersistence()Lorg/easymock/bytebuddy/description/modifier/FieldPersistence;

+###org/easymock/bytebuddy/description/ModifierReviewable$ForMethodDescription
@5.0.0
+#isSynchronized()Z
+#isVarArgs()Z
+#isNative()Z
+#isBridge()Z
+#isStrict()Z
+#getSynchronizationState()Lorg/easymock/bytebuddy/description/modifier/SynchronizationState;
+#getMethodStrictness()Lorg/easymock/bytebuddy/description/modifier/MethodStrictness;
+#getMethodManifestation()Lorg/easymock/bytebuddy/description/modifier/MethodManifestation;

+###org/easymock/bytebuddy/description/ModifierReviewable$ForParameterDescription
@5.0.0
+#isMandated()Z
+#getParameterManifestation()Lorg/easymock/bytebuddy/description/modifier/ParameterManifestation;
+#getProvisioningState()Lorg/easymock/bytebuddy/description/modifier/ProvisioningState;

+###org/easymock/bytebuddy/description/ModifierReviewable$ForTypeDefinition
@5.0.0
+#isInterface()Z
+#isAnnotation()Z
+#getTypeManifestation()Lorg/easymock/bytebuddy/description/modifier/TypeManifestation;

+###org/easymock/bytebuddy/description/ModifierReviewable$OfAbstraction
@5.0.0
+#isAbstract()Z

+###org/easymock/bytebuddy/description/ModifierReviewable$OfByteCodeElement
@5.0.0
+#isPublic()Z
+#isProtected()Z
+#isPackagePrivate()Z
+#isPrivate()Z
+#isStatic()Z
+#isDeprecated()Z
+#getOwnership()Lorg/easymock/bytebuddy/description/modifier/Ownership;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;

+###org/easymock/bytebuddy/description/ModifierReviewable$OfEnumeration
@5.0.0
+#isEnum()Z
+#getEnumerationState()Lorg/easymock/bytebuddy/description/modifier/EnumerationState;

+###org/easymock/bytebuddy/description/ModifierReviewable
@5.0.0
+#getModifiers()I
+#isFinal()Z
+#isSynthetic()Z
+#getSyntheticState()Lorg/easymock/bytebuddy/description/modifier/SyntheticState;

+###org/easymock/bytebuddy/description/NamedElement$WithDescriptor
@5.0.0
+#getDescriptor()Ljava/lang/String;
+#getGenericSignature()Ljava/lang/String;

+###org/easymock/bytebuddy/description/NamedElement$WithGenericName
@5.0.0
+#toGenericString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/NamedElement$WithOptionalName
@5.0.0
+#isNamed()Z

+###org/easymock/bytebuddy/description/NamedElement$WithRuntimeName
@5.0.0
+#getName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;

+###org/easymock/bytebuddy/description/NamedElement
@5.0.0
+#getActualName()Ljava/lang/String;

+###org/easymock/bytebuddy/description/TypeVariableSource$AbstractBase
@5.0.0
+#<init>()V
+#findVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#findExpectedVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;

+###org/easymock/bytebuddy/description/TypeVariableSource$Visitor$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/TypeVariableSource$Visitor$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/TypeVariableSource$Visitor$NoOp;
+#onType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#onMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#onMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Ljava/lang/Object;
+#onType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/TypeVariableSource$Visitor
@5.0.0
+#onType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/Object;
+#onMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/TypeVariableSource
@5.0.0
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getEnclosingSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#isInferrable()Z
+#findVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#findExpectedVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#accept(Lorg/easymock/bytebuddy/description/TypeVariableSource$Visitor;)Ljava/lang/Object;
+#isGenerified()Z

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription$AbstractBase
@5.0.0
+#<init>()V
+#getValue(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getRetention()Ljava/lang/annotation/RetentionPolicy;
+#getElementTypes()Ljava/util/Set;
+#isSupportedOn(Ljava/lang/annotation/ElementType;)Z
+#isSupportedOn(Ljava/lang/String;)Z
+#isInherited()Z
+#isDocumented()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler
@5.0.0
+#of(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/annotation/Annotation;
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder
@5.0.0
+#ofType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#ofType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Ljava/lang/Enum;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineEnumerationArray(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineEnumerationArray(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;[Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineEnumerationArray(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineAnnotationArray(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineAnnotationArray(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineTypeArray(Ljava/lang/String;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineTypeArray(Ljava/lang/String;[Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;B)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;C)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;S)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;I)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;J)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;F)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;D)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#define(Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[Z)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[B)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[C)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[S)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[I)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[J)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[F)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[D)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#defineArray(Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Builder;
+#build()Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#build(Z)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation
@5.0.0
+#of(Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;
+#load()Ljava/lang/annotation/Annotation;
+#asValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getValue(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#prepare(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;
+#getAnnotationType()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription$Latent$Loadable
@5.0.0
+#load()Ljava/lang/annotation/Annotation;
+#getValue(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getAnnotationType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#prepare(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription$Latent
@5.0.0
+#getValue(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getAnnotationType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#prepare(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Latent$Loadable;
+#prepare(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable
@5.0.0
+#load()Ljava/lang/annotation/Annotation;

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription$RenderingDispatcher
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$RenderingDispatcher;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$RenderingDispatcher;
+#appendPrefix(Ljava/lang/StringBuilder;Ljava/lang/String;I)V
+#appendType(Ljava/lang/StringBuilder;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V

+###org/easymock/bytebuddy/description/annotation/AnnotationDescription
@5.0.0
+#getValue(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getValue(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getAnnotationType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#prepare(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;
+#getRetention()Ljava/lang/annotation/RetentionPolicy;
+#getElementTypes()Ljava/util/Set;
+#isSupportedOn(Ljava/lang/annotation/ElementType;)Z
+#isSupportedOn(Ljava/lang/String;)Z
+#isInherited()Z
+#isDocumented()Z

+###org/easymock/bytebuddy/description/annotation/AnnotationList$AbstractBase
@5.0.0
+#<init>()V
+#isAnnotationPresent(Ljava/lang/Class;)Z
+#isAnnotationPresent(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#ofType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;
+#ofType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#inherited(Ljava/util/Set;)Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#visibility(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList;

+###org/easymock/bytebuddy/description/annotation/AnnotationList$Empty
@5.0.0
+#<init>()V
+#asList(I)Ljava/util/List;
+#isAnnotationPresent(Ljava/lang/Class;)Z
+#isAnnotationPresent(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#ofType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;
+#ofType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#inherited(Ljava/util/Set;)Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#visibility(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList;

+###org/easymock/bytebuddy/description/annotation/AnnotationList$Explicit
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)V
+#<init>(Ljava/util/List;)V
+#asList(Ljava/util/List;)Ljava/util/List;
+#get(I)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations
@5.0.0
+#<init>([Ljava/lang/annotation/Annotation;)V
+#<init>(Ljava/util/List;)V
+#asList([[Ljava/lang/annotation/Annotation;)Ljava/util/List;
+#get(I)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationList
@5.0.0
+#isAnnotationPresent(Ljava/lang/Class;)Z
+#isAnnotationPresent(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#ofType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;
+#ofType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#inherited(Ljava/util/Set;)Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#visibility(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList;

+###org/easymock/bytebuddy/description/annotation/AnnotationSource$Empty
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/annotation/AnnotationSource$Empty;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationSource$Empty;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/annotation/AnnotationSource$Explicit
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)V
+#<init>(Ljava/util/List;)V
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/annotation/AnnotationSource
@5.0.0
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$AbstractBase
@5.0.0
+#<init>()V
+#resolve(Ljava/lang/Class;)Ljava/lang/Object;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForAnnotationDescription$Loaded
@5.0.0
+#<init>(Ljava/lang/annotation/Annotation;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#resolve()Ljava/lang/annotation/Annotation;
+#represents(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForAnnotationDescription
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)V
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant$Loaded
@5.0.0
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#resolve()Ljava/lang/Object;
+#represents(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant$PropertyDelegate$ForArrayType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant$PropertyDelegate$ForArrayType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant$PropertyDelegate$ForArrayType;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#toString(Ljava/lang/Object;)Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#hashCode(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant$PropertyDelegate
@5.0.0
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#hashCode(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#toString(Ljava/lang/Object;)Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForConstant
@5.0.0
+#of(Z)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(B)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(S)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(C)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(I)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(J)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(F)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(D)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([Z)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([B)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([S)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([C)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([I)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([J)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([F)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([D)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(Ljava/lang/Object;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Ljava/lang/Object;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForDescriptionArray$Loaded
@5.0.0
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#resolve()Ljava/lang/Object;
+#represents(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForDescriptionArray
@5.0.0
+#<init>(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#of([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Ljava/lang/Object;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForEnumerationDescription$Loaded$WithIncompatibleRuntimeType
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#resolve()Ljava/lang/Enum;
+#represents(Ljava/lang/Object;)Z
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForEnumerationDescription$Loaded
@5.0.0
+#<init>(Ljava/lang/Enum;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#resolve()Ljava/lang/Enum;
+#represents(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForEnumerationDescription$WithUnknownConstant$Loaded
@5.0.0
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#resolve()Ljava/lang/Enum;
+#toString()Ljava/lang/String;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForEnumerationDescription$WithUnknownConstant
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#toString()Ljava/lang/String;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForEnumerationDescription
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)V
+#of(Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForIncompatibleType$Loaded
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#resolve()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForIncompatibleType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Ljava/lang/Object;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForMismatchedType$Loaded
@5.0.0
+#<init>(Ljava/lang/reflect/Method;Ljava/lang/String;)V
+#resolve()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForMismatchedType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/lang/String;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Ljava/lang/Object;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForMissingType$Loaded
@5.0.0
+#<init>(Ljava/lang/String;Ljava/lang/ClassNotFoundException;)V
+#resolve()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForMissingType
@5.0.0
+#<init>(Ljava/lang/String;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Ljava/lang/Object;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForMissingValue$Loaded
@5.0.0
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#resolve()Ljava/lang/Object;
+#represents(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForMissingValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForTypeDescription$Loaded
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#resolve()Ljava/lang/Class;
+#represents(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$ForTypeDescription
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#resolve()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded$AbstractBase$ForUnresolvedProperty
@5.0.0
+#<init>()V
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#represents(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded$AbstractBase
@5.0.0
+#<init>()V
+#resolve(Ljava/lang/Class;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded
@5.0.0
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#resolve()Ljava/lang/Object;
+#resolve(Ljava/lang/Class;)Ljava/lang/Object;
+#represents(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$RenderingDispatcher
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$RenderingDispatcher;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$RenderingDispatcher;
+#toSourceString(Z)Ljava/lang/String;
+#toSourceString(B)Ljava/lang/String;
+#toSourceString(S)Ljava/lang/String;
+#toSourceString(C)Ljava/lang/String;
+#toSourceString(I)Ljava/lang/String;
+#toSourceString(J)Ljava/lang/String;
+#toSourceString(F)Ljava/lang/String;
+#toSourceString(D)Ljava/lang/String;
+#toSourceString(Ljava/lang/String;)Ljava/lang/String;
+#toSourceString(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;
+#toSourceString(Ljava/util/List;)Ljava/lang/String;
+#toArrayErrorString(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;)Ljava/lang/String;
+#toTypeErrorString(Ljava/lang/Class;)Ljava/lang/String;

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$Sort
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#isDefined()Z

+###org/easymock/bytebuddy/description/annotation/AnnotationValue$State
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#isDefined()Z
+#isResolved()Z

+###org/easymock/bytebuddy/description/annotation/AnnotationValue
@5.0.0
+#getState()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$State;
+#getSort()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Sort;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#filter(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#resolve()Ljava/lang/Object;
+#resolve(Ljava/lang/Class;)Ljava/lang/Object;
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/description/annotation/AnnotationValue$Loaded;

+###org/easymock/bytebuddy/description/enumeration/EnumerationDescription$AbstractBase
@5.0.0
+#<init>()V
+#getActualName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/enumeration/EnumerationDescription$ForLoadedEnumeration
@5.0.0
+#<init>(Ljava/lang/Enum;)V
+#asList([Ljava/lang/Enum;)Ljava/util/List;
+#getValue()Ljava/lang/String;
+#getEnumerationType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#load(Ljava/lang/Class;)Ljava/lang/Enum;

+###org/easymock/bytebuddy/description/enumeration/EnumerationDescription$Latent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#getEnumerationType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#load(Ljava/lang/Class;)Ljava/lang/Enum;

+###org/easymock/bytebuddy/description/enumeration/EnumerationDescription
@5.0.0
+#getValue()Ljava/lang/String;
+#getEnumerationType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#load(Ljava/lang/Class;)Ljava/lang/Enum;

+###org/easymock/bytebuddy/description/field/FieldDescription$AbstractBase
@5.0.0
+#<init>()V
+#getInternalName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getGenericSignature()Ljava/lang/String;
+#isVisibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isAccessibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#getActualModifiers()I
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;
+#asSignatureToken()Lorg/easymock/bytebuddy/description/field/FieldDescription$SignatureToken;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toGenericString()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/field/FieldDescription$ForLoadedField
@5.0.0
+#<init>(Ljava/lang/reflect/Field;)V
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#isSynthetic()Z
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape$AbstractBase
@5.0.0
+#<init>()V
+#asDefined()Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/description/field/FieldDescription$InGenericShape
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;

+###org/easymock/bytebuddy/description/field/FieldDescription$Latent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/field/FieldDescription$SignatureToken
@5.0.0
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#getName()Ljava/lang/String;
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/field/FieldDescription$Token
@5.0.0
+#<init>(Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#<init>(Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getModifiers()I
+#getAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;
+#asSignatureToken(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription$SignatureToken;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/field/FieldDescription$TypeSubstituting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#asDefined()Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/field/FieldDescription
@5.0.0
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getActualModifiers()I
+#asSignatureToken()Lorg/easymock/bytebuddy/description/field/FieldDescription$SignatureToken;

+###org/easymock/bytebuddy/description/field/FieldList$AbstractBase
@5.0.0
+#<init>()V
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asDefined()Lorg/easymock/bytebuddy/description/field/FieldList;

+###org/easymock/bytebuddy/description/field/FieldList$Empty
@5.0.0
+#<init>()V
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asDefined()Lorg/easymock/bytebuddy/description/field/FieldList;

+###org/easymock/bytebuddy/description/field/FieldList$Explicit
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/field/FieldList$ForLoadedFields
@5.0.0
+#<init>([Ljava/lang/reflect/Field;)V
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/field/FieldList$ForTokens
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/field/FieldList$TypeSubstituting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#get(I)Lorg/easymock/bytebuddy/description/field/FieldDescription$InGenericShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/field/FieldList
@5.0.0
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asDefined()Lorg/easymock/bytebuddy/description/field/FieldList;

+###org/easymock/bytebuddy/description/method/MethodDescription$AbstractBase
@5.0.0
+#<init>()V
+#getStackSize()I
+#isMethod()Z
+#isConstructor()Z
+#isTypeInitializer()Z
+#represents(Ljava/lang/reflect/Method;)Z
+#represents(Ljava/lang/reflect/Constructor;)Z
+#getName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getGenericSignature()Ljava/lang/String;
+#getActualModifiers()I
+#getActualModifiers(Z)I
+#getActualModifiers(ZLorg/easymock/bytebuddy/description/modifier/Visibility;)I
+#isVisibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isAccessibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isVirtual()Z
+#isDefaultMethod()Z
+#isSpecializableFor(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#getDefaultValue(Ljava/lang/Class;)Ljava/lang/Object;
+#isInvokableOn(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isInvokeBootstrap()Z
+#isInvokeBootstrap(Ljava/util/List;)Z
+#isConstantBootstrap()Z
+#isConstantBootstrap(Ljava/util/List;)Z
+#isDefaultValue()Z
+#isDefaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Z
+#getEnclosingSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#isInferrable()Z
+#accept(Lorg/easymock/bytebuddy/description/TypeVariableSource$Visitor;)Ljava/lang/Object;
+#isGenerified()Z
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;
+#asSignatureToken()Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;
+#asTypeToken()Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;
+#isBridgeCompatible(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toGenericString()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/method/MethodDescription$ForLoadedConstructor
@5.0.0
+#<init>(Ljava/lang/reflect/Constructor;)V
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#isConstructor()Z
+#isTypeInitializer()Z
+#represents(Ljava/lang/reflect/Method;)Z
+#represents(Ljava/lang/reflect/Constructor;)Z
+#getName()Ljava/lang/String;
+#getModifiers()I
+#isSynthetic()Z
+#getInternalName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getParameterAnnotations()[[Ljava/lang/annotation/Annotation;
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/method/MethodDescription$ForLoadedMethod
@5.0.0
+#<init>(Ljava/lang/reflect/Method;)V
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#isConstructor()Z
+#isTypeInitializer()Z
+#isBridge()Z
+#represents(Ljava/lang/reflect/Method;)Z
+#represents(Ljava/lang/reflect/Constructor;)Z
+#getName()Ljava/lang/String;
+#getModifiers()I
+#isSynthetic()Z
+#getInternalName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getLoadedMethod()Ljava/lang/reflect/Method;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getParameterAnnotations()[[Ljava/lang/annotation/Annotation;
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape$AbstractBase$Executable
@5.0.0
+#getAnnotatedReceiverType(Ljava/lang/Object;)Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape$AbstractBase$ForLoadedExecutable
@5.0.0
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape$AbstractBase
@5.0.0
+#<init>()V
+#asDefined()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;

+###org/easymock/bytebuddy/description/method/MethodDescription$InGenericShape
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;

+###org/easymock/bytebuddy/description/method/MethodDescription$Latent$TypeInitializer
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/method/MethodDescription$Latent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;ILjava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/method/MethodDescription$SignatureToken
@5.0.0
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getParameterTypes()Ljava/util/List;
+#asTypeToken()Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;
+#getDescriptor()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/method/MethodDescription$Token
@5.0.0
+#<init>(I)V
+#<init>(Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#<init>(Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
+#<init>(Ljava/lang/String;ILjava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#getName()Ljava/lang/String;
+#getModifiers()I
+#getTypeVariableTokens()Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameterTokens()Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;
+#asSignatureToken(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/method/MethodDescription$TypeSubstituting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getModifiers()I
+#getInternalName()Ljava/lang/String;
+#asDefined()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#isConstructor()Z
+#isMethod()Z
+#isTypeInitializer()Z
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/method/MethodDescription$TypeToken
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getParameterTypes()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/method/MethodDescription
@5.0.0
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getActualModifiers()I
+#getActualModifiers(Z)I
+#getActualModifiers(ZLorg/easymock/bytebuddy/description/modifier/Visibility;)I
+#isConstructor()Z
+#isMethod()Z
+#isTypeInitializer()Z
+#represents(Ljava/lang/reflect/Method;)Z
+#represents(Ljava/lang/reflect/Constructor;)Z
+#isVirtual()Z
+#getStackSize()I
+#isDefaultMethod()Z
+#isSpecializableFor(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getDefaultValue(Ljava/lang/Class;)Ljava/lang/Object;
+#isInvokableOn(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isInvokeBootstrap()Z
+#isInvokeBootstrap(Ljava/util/List;)Z
+#isConstantBootstrap()Z
+#isConstantBootstrap(Ljava/util/List;)Z
+#isDefaultValue()Z
+#isDefaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Z
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asSignatureToken()Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;
+#asTypeToken()Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;
+#isBridgeCompatible(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Z

+###org/easymock/bytebuddy/description/method/MethodList$AbstractBase
@5.0.0
+#<init>()V
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asSignatureTokenList()Ljava/util/List;
+#asSignatureTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/util/List;
+#asDefined()Lorg/easymock/bytebuddy/description/method/MethodList;

+###org/easymock/bytebuddy/description/method/MethodList$Empty
@5.0.0
+#<init>()V
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asSignatureTokenList()Ljava/util/List;
+#asSignatureTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/util/List;
+#asDefined()Lorg/easymock/bytebuddy/description/method/MethodList;

+###org/easymock/bytebuddy/description/method/MethodList$Explicit
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/MethodList$ForLoadedMethods
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#<init>([Ljava/lang/reflect/Constructor;[Ljava/lang/reflect/Method;)V
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/MethodList$ForTokens
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/MethodList$TypeSubstituting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/MethodDescription$InGenericShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/MethodList
@5.0.0
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asSignatureTokenList()Ljava/util/List;
+#asSignatureTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/util/List;
+#asDefined()Lorg/easymock/bytebuddy/description/method/MethodList;

+###org/easymock/bytebuddy/description/method/ParameterDescription$AbstractBase
@5.0.0
+#<init>()V
+#getName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#getModifiers()I
+#getOffset()I
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/method/ParameterDescription$Token;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$OfConstructor
@5.0.0
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$OfLegacyVmConstructor
@5.0.0
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getIndex()I
+#isNamed()Z
+#hasModifiers()Z
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$OfLegacyVmMethod
@5.0.0
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getIndex()I
+#isNamed()Z
+#hasModifiers()Z
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$OfMethod
@5.0.0
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$Parameter
@5.0.0
+#getModifiers(Ljava/lang/Object;)I
+#isNamePresent(Ljava/lang/Object;)Z
+#getName(Ljava/lang/Object;)Ljava/lang/String;

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$ParameterAnnotationSource$ForLoadedConstructor
@5.0.0
+#<init>(Ljava/lang/reflect/Constructor;)V
+#getParameterAnnotations()[[Ljava/lang/annotation/Annotation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$ParameterAnnotationSource$ForLoadedMethod
@5.0.0
+#<init>(Ljava/lang/reflect/Method;)V
+#getParameterAnnotations()[[Ljava/lang/annotation/Annotation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$ParameterAnnotationSource
@5.0.0
+#getParameterAnnotations()[[Ljava/lang/annotation/Annotation;

+###org/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter
@5.0.0
+#getName()Ljava/lang/String;
+#getIndex()I
+#isNamed()Z
+#getModifiers()I
+#hasModifiers()Z

+###org/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape$AbstractBase
@5.0.0
+#<init>()V
+#asDefined()Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape
@5.0.0
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;

+###org/easymock/bytebuddy/description/method/ParameterDescription$InGenericShape
@5.0.0
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InGenericShape;

+###org/easymock/bytebuddy/description/method/ParameterDescription$Latent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/method/ParameterDescription$Token;II)V
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;II)V
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Ljava/lang/String;Ljava/lang/Integer;II)V
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getIndex()I
+#getOffset()I
+#isNamed()Z
+#hasModifiers()Z
+#getName()Ljava/lang/String;
+#getModifiers()I
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/description/method/ParameterDescription$Token$TypeList
@5.0.0
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription$Token;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterDescription$Token
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/lang/String;Ljava/lang/Integer;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Ljava/lang/String;Ljava/lang/Integer;)V
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getName()Ljava/lang/String;
+#getModifiers()Ljava/lang/Integer;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/method/ParameterDescription$Token;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/method/ParameterDescription$TypeSubstituting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InGenericShape;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InGenericShape;
+#getIndex()I
+#isNamed()Z
+#hasModifiers()Z
+#getOffset()I
+#getName()Ljava/lang/String;
+#getModifiers()I
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asDefined()Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/method/ParameterDescription
@5.0.0
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getIndex()I
+#hasModifiers()Z
+#getOffset()I

+###org/easymock/bytebuddy/description/method/ParameterList$AbstractBase
@5.0.0
+#<init>()V
+#hasExplicitMetaData()Z
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#asDefined()Lorg/easymock/bytebuddy/description/method/ParameterList;

+###org/easymock/bytebuddy/description/method/ParameterList$Empty
@5.0.0
+#<init>()V
+#hasExplicitMetaData()Z
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asDefined()Lorg/easymock/bytebuddy/description/method/ParameterList;

+###org/easymock/bytebuddy/description/method/ParameterList$Explicit$ForTypes
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;[Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList$Explicit
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/method/ParameterDescription;)V
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList$ForLoadedExecutable$Executable
@5.0.0
+#isInstance(Ljava/lang/Object;)Z
+#getParameterCount(Ljava/lang/Object;)I
+#getParameters(Ljava/lang/Object;)[Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList$ForLoadedExecutable$OfConstructor
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList$ForLoadedExecutable$OfLegacyVmConstructor
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList$ForLoadedExecutable$OfLegacyVmMethod
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList$ForLoadedExecutable$OfMethod
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList$ForLoadedExecutable
@5.0.0
+#of(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/description/method/ParameterList;
+#of(Ljava/lang/reflect/Constructor;Lorg/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$ParameterAnnotationSource;)Lorg/easymock/bytebuddy/description/method/ParameterList;
+#of(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/description/method/ParameterList;
+#of(Ljava/lang/reflect/Method;Lorg/easymock/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$ParameterAnnotationSource;)Lorg/easymock/bytebuddy/description/method/ParameterList;
+#size()I

+###org/easymock/bytebuddy/description/method/ParameterList$ForTokens
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList$TypeSubstituting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InGenericShape;Ljava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription$InGenericShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/method/ParameterList
@5.0.0
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asDefined()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#hasExplicitMetaData()Z

+###org/easymock/bytebuddy/description/modifier/EnumerationState
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/EnumerationState;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/EnumerationState;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isEnumeration()Z

+###org/easymock/bytebuddy/description/modifier/FieldManifestation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/FieldManifestation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/FieldManifestation;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isFinal()Z
+#isVolatile()Z
+#isPlain()Z

+###org/easymock/bytebuddy/description/modifier/FieldPersistence
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/FieldPersistence;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/FieldPersistence;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isTransient()Z

+###org/easymock/bytebuddy/description/modifier/Mandate
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/Mandate;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/Mandate;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isMandated()Z

+###org/easymock/bytebuddy/description/modifier/MethodArguments
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/MethodArguments;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/MethodArguments;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isVarArgs()Z

+###org/easymock/bytebuddy/description/modifier/MethodManifestation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/MethodManifestation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/MethodManifestation;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isNative()Z
+#isAbstract()Z
+#isFinal()Z
+#isBridge()Z

+###org/easymock/bytebuddy/description/modifier/MethodStrictness
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/MethodStrictness;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/MethodStrictness;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isStrict()Z

+###org/easymock/bytebuddy/description/modifier/ModifierContributor$ForField
@5.0.0

+###org/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod
@5.0.0

+###org/easymock/bytebuddy/description/modifier/ModifierContributor$ForParameter
@5.0.0

+###org/easymock/bytebuddy/description/modifier/ModifierContributor$ForType
@5.0.0

+###org/easymock/bytebuddy/description/modifier/ModifierContributor$Resolver
@5.0.0
+#of([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForType;)Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$Resolver;
+#of([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForField;)Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$Resolver;
+#of([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$Resolver;
+#of([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForParameter;)Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$Resolver;
+#of(Ljava/util/Collection;)Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$Resolver;
+#resolve()I
+#resolve(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/modifier/ModifierContributor
@5.0.0
+#getMask()I
+#getRange()I
+#isDefault()Z

+###org/easymock/bytebuddy/description/modifier/Ownership
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/Ownership;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/Ownership;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isStatic()Z

+###org/easymock/bytebuddy/description/modifier/ParameterManifestation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/ParameterManifestation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/ParameterManifestation;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isFinal()Z

+###org/easymock/bytebuddy/description/modifier/ProvisioningState
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/ProvisioningState;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/ProvisioningState;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isMandated()Z

+###org/easymock/bytebuddy/description/modifier/SynchronizationState
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/SynchronizationState;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/SynchronizationState;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isSynchronized()Z

+###org/easymock/bytebuddy/description/modifier/SyntheticState
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/SyntheticState;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/SyntheticState;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isSynthetic()Z

+###org/easymock/bytebuddy/description/modifier/TypeManifestation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/TypeManifestation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/TypeManifestation;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isFinal()Z
+#isAbstract()Z
+#isInterface()Z
+#isAnnotation()Z

+###org/easymock/bytebuddy/description/modifier/Visibility
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#getMask()I
+#getRange()I
+#isDefault()Z
+#isPublic()Z
+#isProtected()Z
+#isPackagePrivate()Z
+#isPrivate()Z
+#expandTo(Lorg/easymock/bytebuddy/description/modifier/Visibility;)Lorg/easymock/bytebuddy/description/modifier/Visibility;

+###org/easymock/bytebuddy/description/type/PackageDescription$AbstractBase
@5.0.0
+#<init>()V
+#getInternalName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#contains(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isDefault()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/type/PackageDescription$ForLoadedPackage
@5.0.0
+#<init>(Ljava/lang/Package;)V
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getName()Ljava/lang/String;

+###org/easymock/bytebuddy/description/type/PackageDescription$Simple
@5.0.0
+#<init>(Ljava/lang/String;)V
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getName()Ljava/lang/String;

+###org/easymock/bytebuddy/description/type/PackageDescription
@5.0.0
+#contains(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isDefault()Z

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$AbstractBase
@5.0.0
+#<init>()V
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;
+#getDescriptor()Ljava/lang/String;
+#getGenericSignature()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$ForLoadedRecordComponent$RecordComponent
@5.0.0
+#isInstance(Ljava/lang/Object;)Z
+#getName(Ljava/lang/Object;)Ljava/lang/String;
+#getDeclaringRecord(Ljava/lang/Object;)Ljava/lang/Class;
+#getAccessor(Ljava/lang/Object;)Ljava/lang/reflect/Method;
+#getType(Ljava/lang/Object;)Ljava/lang/Class;
+#getGenericType(Ljava/lang/Object;)Ljava/lang/reflect/Type;
+#getGenericSignature(Ljava/lang/Object;)Ljava/lang/String;
+#getAnnotatedType(Ljava/lang/Object;)Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$ForLoadedRecordComponent
@5.0.0
+#of(Ljava/lang/Object;)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getActualName()Ljava/lang/String;
+#getGenericSignature()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape$AbstractBase
@5.0.0
+#<init>()V
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#asDefined()Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape
@5.0.0
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$InGenericShape
@5.0.0
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription$InGenericShape;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$Latent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getActualName()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$Token
@5.0.0
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription$TypeSubstituting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription$InGenericShape;
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asDefined()Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getActualName()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/description/type/RecordComponentDescription
@5.0.0
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getAccessor()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#asToken(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;

+###org/easymock/bytebuddy/description/type/RecordComponentList$AbstractBase
@5.0.0
+#<init>()V
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#asDefined()Lorg/easymock/bytebuddy/description/type/RecordComponentList;

+###org/easymock/bytebuddy/description/type/RecordComponentList$Empty
@5.0.0
+#<init>()V
+#asDefined()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;

+###org/easymock/bytebuddy/description/type/RecordComponentList$Explicit
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)V
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/RecordComponentList$ForLoadedRecordComponents
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/RecordComponentList$ForTokens
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/RecordComponentList$TypeSubstituting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InGenericShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/RecordComponentList
@5.0.0
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#asTypeList()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#asDefined()Lorg/easymock/bytebuddy/description/type/RecordComponentList;

+###org/easymock/bytebuddy/description/type/TypeDefinition$Sort$AnnotatedType
@5.0.0
+#isInstance(Ljava/lang/reflect/AnnotatedElement;)Z
+#getType(Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/reflect/Type;

+###org/easymock/bytebuddy/description/type/TypeDefinition$Sort
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#describe(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#describeAnnotated(Ljava/lang/reflect/AnnotatedElement;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isNonGeneric()Z
+#isParameterized()Z
+#isGenericArray()Z
+#isWildcard()Z
+#isTypeVariable()Z

+###org/easymock/bytebuddy/description/type/TypeDefinition$SuperClassIterator
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#hasNext()Z
+#next()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#remove()V
+#next()Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDefinition
@5.0.0
+#asGenericType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#getTypeName()Ljava/lang/String;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#isArray()Z
+#isRecord()Z
+#isPrimitive()Z
+#represents(Ljava/lang/reflect/Type;)Z

+###org/easymock/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation
@5.0.0
+#<init>()V
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#isAnonymousType()Z
+#isLocalType()Z
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getModifiers()I
+#getGenericSignature()Ljava/lang/String;
+#getActualModifiers(Z)I
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#isSealed()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType
@5.0.0
+#<init>()V
+#isPrimitive()Z
+#isArray()Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDescriptor()Ljava/lang/String;
+#getCanonicalName()Ljava/lang/String;
+#getSimpleName()Ljava/lang/String;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$AbstractBase
@5.0.0
+#<init>()V
+#isAssignableFrom(Ljava/lang/Class;)Z
+#isAssignableFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isAssignableTo(Ljava/lang/Class;)Z
+#isAssignableTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isInHierarchyWith(Ljava/lang/Class;)Z
+#isInHierarchyWith(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#asGenericType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#isInstance(Ljava/lang/Object;)Z
+#isAnnotationValue(Ljava/lang/Object;)Z
+#getInternalName()Ljava/lang/String;
+#getActualModifiers(Z)I
+#getGenericSignature()Ljava/lang/String;
+#isSamePackage(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isVisibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isAccessibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#getInheritedAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getActualName()Ljava/lang/String;
+#getLongSimpleName()Ljava/lang/String;
+#isPrimitiveWrapper()Z
+#isAnnotationReturnType()Z
+#isAnnotationValue()Z
+#represents(Ljava/lang/reflect/Type;)Z
+#getTypeName()Ljava/lang/String;
+#getEnclosingSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#isInferrable()Z
+#accept(Lorg/easymock/bytebuddy/description/TypeVariableSource$Visitor;)Ljava/lang/Object;
+#isPackageType()Z
+#isGenerified()Z
+#getInnerClassCount()I
+#isInnerClass()Z
+#isNestedClass()Z
+#asBoxed()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#asUnboxed()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDefaultValue()Ljava/lang/Object;
+#isNestHost()Z
+#isNestMateOf(Ljava/lang/Class;)Z
+#isNestMateOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isMemberType()Z
+#isCompileTimeConstant()Z
+#isSealed()Z
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#iterator()Ljava/util/Iterator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/type/TypeDescription$ArrayProjection
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;I)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isArray()Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isPrimitive()Z
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getSimpleName()Ljava/lang/String;
+#getCanonicalName()Ljava/lang/String;
+#isAnonymousType()Z
+#isLocalType()Z
+#isMemberType()Z
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getInheritedAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$ForLoadedType$Dispatcher
@5.0.0
+#getAnnotatedSuperclass(Ljava/lang/Class;)Ljava/lang/reflect/AnnotatedElement;
+#getAnnotatedInterfaces(Ljava/lang/Class;)[Ljava/lang/reflect/AnnotatedElement;
+#getNestHost(Ljava/lang/Class;)Ljava/lang/Class;
+#getNestMembers(Ljava/lang/Class;)[Ljava/lang/Class;
+#isNestmateOf(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isSealed(Ljava/lang/Class;)Z
+#getPermittedSubclasses(Ljava/lang/Class;)[Ljava/lang/Class;
+#isRecord(Ljava/lang/Class;)Z
+#getRecordComponents(Ljava/lang/Class;)[Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$ForLoadedType
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#getName(Ljava/lang/Class;)Ljava/lang/String;
+#of(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isAssignableFrom(Ljava/lang/Class;)Z
+#isAssignableFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isAssignableTo(Ljava/lang/Class;)Z
+#isAssignableTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isInHierarchyWith(Ljava/lang/Class;)Z
+#isInHierarchyWith(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#represents(Ljava/lang/reflect/Type;)Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isArray()Z
+#isPrimitive()Z
+#isAnnotation()Z
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getSimpleName()Ljava/lang/String;
+#isAnonymousType()Z
+#isLocalType()Z
+#isMemberType()Z
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#getName()Ljava/lang/String;
+#getCanonicalName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getModifiers()I
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asGenericType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#isNestHost()Z
+#isNestMateOf(Ljava/lang/Class;)Z
+#isNestMateOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#isSealed()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$ForPackageDescription
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/PackageDescription;)V
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isAnonymousType()Z
+#isLocalType()Z
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AbstractBase
@5.0.0
+#<init>()V
+#getModifiers()I
+#asGenericType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asRawType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#represents(Ljava/lang/reflect/Type;)Z

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$Chained
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher
@5.0.0
+#getAnnotatedExceptionTypes(Ljava/lang/Object;)[Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType
@5.0.0
+#<init>(Ljava/lang/reflect/AccessibleObject;I)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher
@5.0.0
+#getAnnotatedParameterTypes(Ljava/lang/Object;)[Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType
@5.0.0
+#<init>(Ljava/lang/reflect/AccessibleObject;I)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedField$Dispatcher
@5.0.0
+#getAnnotatedType(Ljava/lang/reflect/Field;)Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedField
@5.0.0
+#<init>(Ljava/lang/reflect/Field;)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedInterface
@5.0.0
+#<init>(Ljava/lang/Class;I)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher
@5.0.0
+#getAnnotatedReturnType(Ljava/lang/reflect/Method;)Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType
@5.0.0
+#<init>(Ljava/lang/reflect/Method;)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedRecordComponent
@5.0.0
+#<init>(Ljava/lang/Object;)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedSuperClass
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedTypeVariable
@5.0.0
+#<init>(Ljava/lang/reflect/TypeVariable;)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#ofTypeVariableBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$Simple
@5.0.0
+#<init>(Ljava/lang/reflect/AnnotatedElement;)V
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator
@5.0.0
+#<init>()V
+#ofWildcardUpperBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofWildcardLowerBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofTypeVariableBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofTypeArgument(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofOuterClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#asList()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType
@5.0.0
+#isInstance(Ljava/lang/reflect/AnnotatedElement;)Z
+#getAnnotatedGenericComponentType(Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForComponentType
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForOwnerType$AnnotatedType
@5.0.0
+#getAnnotatedOwnerType(Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForOwnerType
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType
@5.0.0
+#isInstance(Ljava/lang/reflect/AnnotatedElement;)Z
+#getAnnotatedActualTypeArguments(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForTypeArgument
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$AnnotatedTypeVariable
@5.0.0
+#isInstance(Ljava/lang/reflect/AnnotatedElement;)Z
+#getAnnotatedBounds(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$OfFormalTypeVariable$FormalTypeVariable
@5.0.0
+#getAnnotatedBounds(Ljava/lang/Object;)[Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType$OfFormalTypeVariable
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForTypeVariableBoundType
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForWildcardLowerBoundType$AnnotatedWildcardType
@5.0.0
+#isInstance(Ljava/lang/reflect/AnnotatedElement;)Z
+#getAnnotatedLowerBounds(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForWildcardLowerBoundType
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType$AnnotatedWildcardType
@5.0.0
+#isInstance(Ljava/lang/reflect/AnnotatedElement;)Z
+#getAnnotatedUpperBounds(Ljava/lang/reflect/AnnotatedElement;)[Ljava/lang/reflect/AnnotatedElement;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$NoOp;
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#asList()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#ofWildcardUpperBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofWildcardLowerBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofTypeVariableBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofTypeArgument(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofOuterClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#isAnnotationPresent(Ljava/lang/Class;)Z
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getAnnotations()[Ljava/lang/annotation/Annotation;
+#getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader
@5.0.0
+#resolve()Ljava/lang/reflect/AnnotatedElement;
+#asList()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#ofWildcardUpperBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofWildcardLowerBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofTypeVariableBoundType(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofTypeArgument(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofOuterClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;
+#ofComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder$OfGenericArrayType
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder$OfNonGenericType
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder$OfParameterizedType
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder$OfTypeVariable
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder$Visitor
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder$Visitor;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder$Visitor;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder
@5.0.0
+#of(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#rawType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#rawType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#rawType(Ljava/lang/Class;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#rawType(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#unboundWildcard()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#unboundWildcard([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#unboundWildcard(Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#unboundWildcard([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#unboundWildcard(Ljava/util/Collection;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#typeVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#parameterizedType(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#parameterizedType(Ljava/lang/Class;Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#parameterizedType(Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#parameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#parameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/Collection;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#parameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/Collection;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#asWildcardUpperBound()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardUpperBound([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardUpperBound(Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardUpperBound([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardUpperBound(Ljava/util/Collection;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardLowerBound()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardLowerBound([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardLowerBound(Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardLowerBound([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asWildcardLowerBound(Ljava/util/Collection;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asArray()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#asArray(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#annotate([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#annotate(Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#annotate([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#annotate(Ljava/util/Collection;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Builder;
+#build()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#build([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#build(Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#build([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#build(Ljava/util/Collection;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$ForLoadedFieldType
@5.0.0
+#<init>(Ljava/lang/reflect/Field;)V
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$ForLoadedReturnType
@5.0.0
+#<init>(Ljava/lang/reflect/Method;)V
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$ForLoadedSuperClass
@5.0.0
+#of(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$OfConstructorParameter
@5.0.0
+#<init>(Ljava/lang/reflect/Constructor;I[Ljava/lang/Class;)V
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$OfMethodParameter
@5.0.0
+#<init>(Ljava/lang/reflect/Method;I[Ljava/lang/Class;)V
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$OfRecordComponent
@5.0.0
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation$OfAnnotatedElement
@5.0.0
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation
@5.0.0
+#<init>()V
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#iterator()Ljava/util/Iterator;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazyInterfaceList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazyInterfaceType
@5.0.0
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithLazyNavigation$LazySuperClass
@5.0.0
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithLazyNavigation$OfAnnotatedElement
@5.0.0
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithLazyNavigation
@5.0.0
+#<init>()V
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#iterator()Ljava/util/Iterator;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)V
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProjection
@5.0.0
+#<init>()V
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#findBindingOf(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeName()Ljava/lang/String;
+#getSymbol()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Ljava/lang/Object;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#isArray()Z
+#isPrimitive()Z
+#isRecord()Z
+#represents(Ljava/lang/reflect/Type;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$LazyProxy
@5.1.0
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfGenericArray$ForLoadedType
@5.0.0
+#<init>(Ljava/lang/reflect/GenericArrayType;)V
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#represents(Ljava/lang/reflect/Type;)Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfGenericArray$Latent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)V
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfGenericArray
@5.0.0
+#<init>()V
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#findBindingOf(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getSymbol()Ljava/lang/String;
+#getTypeName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#isArray()Z
+#isPrimitive()Z
+#isRecord()Z
+#iterator()Ljava/util/Iterator;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Ljava/lang/Object;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForErasure
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#of(Ljava/lang/Class;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#represents(Ljava/lang/reflect/Type;)Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForReifiedErasure
@5.0.0
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$Latent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)V
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType
@5.0.0
+#<init>()V
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#findBindingOf(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Ljava/lang/Object;
+#getTypeName()Ljava/lang/String;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#getActualName()Ljava/lang/String;
+#isArray()Z
+#isPrimitive()Z
+#isRecord()Z
+#represents(Ljava/lang/reflect/Type;)Z
+#iterator()Ljava/util/Iterator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$ForGenerifiedErasure
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$ForLoadedType$ParameterArgumentTypeList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$ForLoadedType
@5.0.0
+#<init>(Ljava/lang/reflect/ParameterizedType;)V
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#represents(Ljava/lang/reflect/Type;)Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$ForReifiedType
@5.0.0
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$Latent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)V
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$RenderingDelegate
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$RenderingDelegate;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$RenderingDelegate;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType
@5.0.0
+#<init>()V
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#findBindingOf(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getTypeName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#isPrimitive()Z
+#isArray()Z
+#isRecord()Z
+#represents(Ljava/lang/reflect/Type;)Z
+#iterator()Ljava/util/Iterator;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Ljava/lang/Object;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable$ForLoadedType$TypeVariableBoundList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable$ForLoadedType
@5.0.0
+#<init>(Ljava/lang/reflect/TypeVariable;)V
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#represents(Ljava/lang/reflect/Type;)Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable$Symbolic
@5.0.0
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)V
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#findBindingOf(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Ljava/lang/Object;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#isArray()Z
+#isPrimitive()Z
+#isRecord()Z
+#represents(Ljava/lang/reflect/Type;)Z
+#iterator()Ljava/util/Iterator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable$WithAnnotationOverlay
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)V
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable
@5.0.0
+#<init>()V
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#findBindingOf(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Ljava/lang/Object;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#isArray()Z
+#isPrimitive()Z
+#isRecord()Z
+#represents(Ljava/lang/reflect/Type;)Z
+#iterator()Ljava/util/Iterator;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfWildcardType$ForLoadedType$WildcardLowerBoundTypeList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfWildcardType$ForLoadedType$WildcardUpperBoundTypeList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfWildcardType$ForLoadedType
@5.0.0
+#<init>(Ljava/lang/reflect/WildcardType;)V
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#represents(Ljava/lang/reflect/Type;)Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfWildcardType$Latent
@5.0.0
+#unbounded(Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#boundedAbove(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#boundedBelow(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$OfWildcardType
@5.0.0
+#<init>()V
+#getSort()Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#findBindingOf(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getSymbol()Ljava/lang/String;
+#getTypeName()Ljava/lang/String;
+#getActualName()Ljava/lang/String;
+#isPrimitive()Z
+#isArray()Z
+#isRecord()Z
+#represents(Ljava/lang/reflect/Type;)Z
+#iterator()Ljava/util/Iterator;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Ljava/lang/Object;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$AnnotationStripper$NonAnnotatedTypeVariable
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$AnnotationStripper
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$AnnotationStripper;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$AnnotationStripper;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$AbstractBase
@5.0.0
+#<init>()V
+#isAssignableFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Z

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForGenericArray
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForNonGenericType
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$ContravariantBinding
@5.0.0
+#isAssignableFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$CovariantBinding
@5.0.0
+#isAssignableFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner$InvariantBinding
@5.0.0
+#isAssignableFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType$ParameterAssigner;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForParameterizedType
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher$ForTypeVariable
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher
@5.0.0
+#isAssignableFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Z

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Assigner$Dispatcher;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForRawType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor$OfTypeArgument
@5.0.0
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;)V
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$NoOp;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reducing
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/type/TypeVariableToken;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForAttachment
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForAttachment;
+#of(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForAttachment;
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForAttachment;
+#of(Lorg/easymock/bytebuddy/description/method/ParameterDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForAttachment;
+#of(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForAttachment;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForDetachment
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForReplacement
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTokenNormalization
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$RetainedMethodTypeVariable
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor
@5.0.0
+#onType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Ljava/lang/Object;
+#onType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding
@5.0.0
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution
@5.0.0
+#<init>()V
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor
@5.0.0
+#<init>()V
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$TypeErasing
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$TypeErasing;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$TypeErasing;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Validator$ForTypeAnnotations
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Validator$ForTypeAnnotations;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Validator$ForTypeAnnotations;
+#ofFormalTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Z
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Validator
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Validator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor$Validator;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Generic
@5.0.0
+#asRawType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#findBindingOf(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$Latent
@5.0.0
+#<init>(Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;[Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#<init>(Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Ljava/util/List;)V
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#isAnonymousType()Z
+#isLocalType()Z
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription$LazyProxy
@5.1.0
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/description/type/TypeDescription$SuperTypeLoading$ClassLoadingDelegate$Simple
@5.0.0
+#values()[Lorg/easymock/bytebuddy/description/type/TypeDescription$SuperTypeLoading$ClassLoadingDelegate$Simple;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/description/type/TypeDescription$SuperTypeLoading$ClassLoadingDelegate$Simple;
+#load(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;

+###org/easymock/bytebuddy/description/type/TypeDescription$SuperTypeLoading$ClassLoadingDelegate
@5.0.0
+#load(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;

+###org/easymock/bytebuddy/description/type/TypeDescription$SuperTypeLoading$ClassLoadingTypeList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeDescription$SuperTypeLoading$ClassLoadingTypeProjection
@5.0.0
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#iterator()Ljava/util/Iterator;

+###org/easymock/bytebuddy/description/type/TypeDescription$SuperTypeLoading
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/description/type/TypeDescription$SuperTypeLoading$ClassLoadingDelegate;)V
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getModifiers()I
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDescriptor()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getStackSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#isArray()Z
+#isPrimitive()Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getSimpleName()Ljava/lang/String;
+#getCanonicalName()Ljava/lang/String;
+#isAnonymousType()Z
+#isLocalType()Z
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#isSealed()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/description/type/TypeDescription
@5.0.0
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isInstance(Ljava/lang/Object;)Z
+#isAssignableFrom(Ljava/lang/Class;)Z
+#isAssignableFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isAssignableTo(Ljava/lang/Class;)Z
+#isAssignableTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isInHierarchyWith(Ljava/lang/Class;)Z
+#isInHierarchyWith(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getActualModifiers(Z)I
+#getSimpleName()Ljava/lang/String;
+#getLongSimpleName()Ljava/lang/String;
+#getCanonicalName()Ljava/lang/String;
+#isAnonymousType()Z
+#isLocalType()Z
+#isMemberType()Z
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getInheritedAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#isSamePackage(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isPrimitiveWrapper()Z
+#isAnnotationReturnType()Z
+#isAnnotationValue()Z
+#isAnnotationValue(Ljava/lang/Object;)Z
+#isPackageType()Z
+#getInnerClassCount()I
+#isInnerClass()Z
+#isNestedClass()Z
+#asBoxed()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#asUnboxed()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDefaultValue()Ljava/lang/Object;
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#isNestHost()Z
+#isNestMateOf(Ljava/lang/Class;)Z
+#isNestMateOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Z
+#isCompileTimeConstant()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#isSealed()Z
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;

+###org/easymock/bytebuddy/description/type/TypeList$AbstractBase
@5.0.0
+#<init>()V
+#getStackSize()I
+#toInternalNames()[Ljava/lang/String;

+###org/easymock/bytebuddy/description/type/TypeList$Empty
@5.0.0
+#<init>()V
+#toInternalNames()[Ljava/lang/String;
+#getStackSize()I

+###org/easymock/bytebuddy/description/type/TypeList$Explicit
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#<init>(Ljava/util/List;)V
+#of(Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeList;
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$ForLoadedTypes
@5.0.0
+#<init>([Ljava/lang/Class;)V
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#size()I
+#toInternalNames()[Ljava/lang/String;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$AbstractBase
@5.0.0
+#<init>()V
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#getStackSize()I
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#asRawTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$Empty
@5.0.0
+#<init>()V
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#asRawTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#getStackSize()I

+###org/easymock/bytebuddy/description/type/TypeList$Generic$Explicit
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$OfTypeVariables$AttachedTypeVariable
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$OfTypeVariables
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure
@5.0.0
+#<init>(Ljava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes
@5.0.0
+#<init>(Ljava/util/List;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)V
+#attachVariables(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#attach(Lorg/easymock/bytebuddy/description/field/FieldDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#attach(Lorg/easymock/bytebuddy/description/method/MethodDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#attachVariables(Lorg/easymock/bytebuddy/description/method/MethodDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#attach(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$ForLoadedTypes$OfTypeVariables
@5.0.0
+#of(Ljava/lang/reflect/GenericDeclaration;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$ForLoadedTypes
@5.0.0
+#<init>([Ljava/lang/reflect/Type;)V
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$OfConstructorExceptionTypes
@5.0.0
+#<init>(Ljava/lang/reflect/Constructor;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$OfLoadedInterfaceTypes
@5.0.0
+#<init>(Ljava/lang/Class;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic$OfMethodExceptionTypes
@5.0.0
+#<init>(Ljava/lang/reflect/Method;)V
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/description/type/TypeList$Generic
@5.0.0
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#asRawTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#asTokenList(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token$TokenList;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getStackSize()I

+###org/easymock/bytebuddy/description/type/TypeList
@5.0.0
+#toInternalNames()[Ljava/lang/String;
+#getStackSize()I

+###org/easymock/bytebuddy/description/type/TypeVariableToken
@5.0.0
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/description/type/TypeVariableToken;
+#getSymbol()Ljava/lang/String;
+#getBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/type/TypeVariableToken;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#accept(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/description/ByteCodeElement$Token;

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)V
+#<init>(Ljava/util/List;)V
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForClassLoader$BootLoaderProxyCreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForClassLoader$BootLoaderProxyCreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForClassLoader$BootLoaderProxyCreationAction;
+#run()Ljava/lang/ClassLoader;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForClassLoader$WeaklyReferenced
@5.0.0
+#of(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForClassLoader
@5.0.0
+#ofSystemLoader()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofPlatformLoader()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofBootLoader()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#of(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#read(Ljava/lang/Class;)[B
+#read([Ljava/lang/Class;)Ljava/util/Map;
+#read(Ljava/util/Collection;)Ljava/util/Map;
+#readToNames([Ljava/lang/Class;)Ljava/util/Map;
+#readToNames(Ljava/util/Collection;)Ljava/util/Map;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForFolder
@5.0.0
+#<init>(Ljava/io/File;)V
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$Default$BootLoaderProxyCreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$Default$BootLoaderProxyCreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$Default$BootLoaderProxyCreationAction;
+#run()Ljava/lang/ClassLoader;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$Default
@5.0.0
+#of(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate;
+#locate(Ljava/lang/String;)Ljava/lang/Class;
+#getClassLoader()Ljava/lang/ClassLoader;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$Explicit
@5.0.0
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Collection;)V
+#<init>(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate;Ljava/util/Collection;)V
+#of(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate;
+#locate(Ljava/lang/String;)Ljava/lang/Class;
+#getClassLoader()Ljava/lang/ClassLoader;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$CreationAction;
+#run()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Initializable;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Initializable
@5.0.0
+#initialize()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher;

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Resolved
@5.0.0
+#<init>(Ljava/lang/reflect/Field;)V
+#initialize()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher;
+#extract(Ljava/lang/ClassLoader;)Ljava/util/Vector;
+#run()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher$Unresolved
@5.0.0
+#<init>(Ljava/lang/String;)V
+#initialize()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader$Dispatcher
@5.0.0
+#extract(Ljava/lang/ClassLoader;)Ljava/util/Vector;

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate$ForDelegatingClassLoader
@5.0.0
+#locate(Ljava/lang/String;)Ljava/lang/Class;

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate
@5.0.0
+#locate(Ljava/lang/String;)Ljava/lang/Class;
+#getClassLoader()Ljava/lang/ClassLoader;

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$Dispatcher
@5.0.0
+#isRetransformClassesSupported(Ljava/lang/instrument/Instrumentation;)Z
+#addTransformer(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;Z)V
+#retransformClasses(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)V

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ExtractionClassFileTransformer
@5.0.0
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation
@5.0.0
+#<init>(Ljava/lang/instrument/Instrumentation;Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$ForInstrumentation$ClassLoadingDelegate;)V
+#fromInstalledAgent(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#of(Ljava/lang/instrument/Instrumentation;Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForJarFile
@5.0.0
+#<init>(Ljava/util/jar/JarFile;)V
+#of(Ljava/io/File;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofClassPath()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofClassPath(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofRuntimeJar()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForModule$WeaklyReferenced
@5.0.0
+#of(Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForModule
@5.0.0
+#ofBootLayer()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#of(Lorg/easymock/bytebuddy/utility/JavaModule;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForModuleFile
@5.0.0
+#<init>(Ljava/util/zip/ZipFile;)V
+#ofBootPath()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofBootPath(Ljava/io/File;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofModulePath()Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofModulePath(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofModulePath(Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#of(Ljava/io/File;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForUrl$ClassLoaderCreationAction
@5.0.0
+#run()Ljava/lang/ClassLoader;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$ForUrl
@5.0.0
+#<init>([Ljava/net/URL;)V
+#<init>(Ljava/util/Collection;)V
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$NoOp;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$PackageDiscriminating
@5.0.0
+#<init>(Ljava/util/Map;)V
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution$Explicit
@5.0.0
+#<init>([B)V
+#isResolved()Z
+#resolve()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution$Illegal
@5.0.0
+#<init>(Ljava/lang/String;)V
+#isResolved()Z
+#resolve()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution
@5.0.0
+#isResolved()Z
+#resolve()[B

+###org/easymock/bytebuddy/dynamic/ClassFileLocator$Simple
@5.0.0
+#<init>(Ljava/util/Map;)V
+#of(Ljava/lang/String;[B)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#of(Lorg/easymock/bytebuddy/dynamic/DynamicType;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#of(Ljava/util/Map;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#ofResources(Ljava/util/Map;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/ClassFileLocator
@5.0.0
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$FieldDefinitionAdapter
@5.0.0
+#annotateField(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$FieldMatchAdapter
@5.0.0
+#annotateField(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$InnerTypeDefinitionForMethodAdapter
@5.0.0
+#asAnonymousType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$InnerTypeDefinitionForTypeAdapter
@5.0.0
+#asAnonymousType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#asMemberType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$AnnotationAdapter
@5.0.0
+#receiverType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateMethod(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(ILjava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$ParameterAnnotationAdapter
@5.0.0
+#annotateParameter(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$SimpleParameterAnnotationAdapter
@5.0.0
+#annotateParameter(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$TypeVariableAnnotationAdapter
@5.0.0
+#annotateTypeVariable(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter
@5.0.0
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#throwing(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#intercept(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#withoutCode()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter$AnnotationAdapter
@5.0.0
+#receiverType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateMethod(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(ILjava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter
@5.0.0
+#intercept(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#withoutCode()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$OptionalMethodMatchAdapter
@5.0.0
+#intercept(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#withoutCode()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$RecordComponentDefinitionAdapter
@5.0.0
+#annotateRecordComponent(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Factory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#transform(Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$RecordComponentMatchAdapter
@5.0.0
+#annotateRecordComponent(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Factory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#transform(Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$TypeVariableDefinitionAdapter
@5.0.0
+#annotateTypeVariable(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter
@5.0.0
+#defineField(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#field(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Valuable;
+#defineMethod(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineConstructor(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#invokable(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#implement(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#ignoreAlso(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineRecordComponent(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#recordComponent(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition;
+#initializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#initializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#name(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#suffix(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#modifiers(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#merge(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#topLevelType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#innerTypeOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition$ForType;
+#innerTypeOf(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition;
+#declaredTypes(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#unsealed()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#transform(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#visit(Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#require(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#toTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator
@5.0.0
+#<init>()V
+#visit(Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#initializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#modifiers(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#merge(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#suffix(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#name(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#topLevelType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#innerTypeOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition$ForType;
+#innerTypeOf(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition;
+#declaredTypes(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#unsealed()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#implement(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#initializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#ignoreAlso(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#ignoreAlso(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#transform(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineField(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#field(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Valuable;
+#defineMethod(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineConstructor(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#invokable(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#require(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineRecordComponent(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#define(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#recordComponent(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition;
+#recordComponent(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#make()Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#make(Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#make(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#make(Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#toTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$UsingTypeWriter
@5.0.0
+#<init>()V
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#make(Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#make(Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$AbstractBase
@5.0.0
+#<init>()V
+#innerTypeOf(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition$ForType;
+#innerTypeOf(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition;
+#innerTypeOf(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition;
+#declaredTypes([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#declaredTypes([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#declaredTypes(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#noNestMate()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestHost(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#modifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForType;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#modifiers(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#merge([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForType;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#implement([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#implement(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#implement([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#typeVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#typeVariable(Ljava/lang/String;[Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#typeVariable(Ljava/lang/String;Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#typeVariable(Ljava/lang/String;[Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#defineRecordComponent(Ljava/lang/String;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#define(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#recordComponent(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition;
+#defineField(Ljava/lang/String;Ljava/lang/reflect/Type;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForField;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Ljava/lang/reflect/Type;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Ljava/lang/reflect/Type;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForField;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#define(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#define(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#serialVersionUid(J)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#field(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Valuable;
+#ignoreAlso(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineMethod(Ljava/lang/String;Ljava/lang/reflect/Type;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Ljava/lang/reflect/Type;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Ljava/lang/reflect/Type;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineConstructor([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineConstructor(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#define(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#define(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#define(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#defineProperty(Ljava/lang/String;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#defineProperty(Ljava/lang/String;Ljava/lang/reflect/Type;Z)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#defineProperty(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#defineProperty(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Z)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#method(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#constructor(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#invokable(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#withHashCodeEquals()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#withToString()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#require(Lorg/easymock/bytebuddy/description/type/TypeDescription;[B)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#require(Lorg/easymock/bytebuddy/description/type/TypeDescription;[BLorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#require([Lorg/easymock/bytebuddy/dynamic/DynamicType;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#make(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#make()Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$AbstractBase
@5.0.0
+#<init>()V
+#annotateField([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#annotateField(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#annotateField([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable$AbstractBase
@5.0.0
+#<init>()V
+#value(Z)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(J)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(F)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(D)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable
@5.0.0

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional
@5.0.0

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Valuable
@5.0.0
+#value(Z)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(J)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(F)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(D)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#value(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition
@5.0.0
+#annotateField([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#annotateField(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#annotateField([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#annotateField(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Factory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#transform(Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition$ForType
@5.0.0
+#asMemberType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition
@5.0.0
+#asAnonymousType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$AbstractBase$Adapter
@5.0.0
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#transform(Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$AbstractBase
@5.0.0
+#<init>()V
+#annotateMethod([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateMethod(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateMethod([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(I[Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(ILjava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(I[Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition$AbstractBase
@5.0.0
+#<init>()V
+#throwing([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#throwing(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#throwing([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition
@5.0.0
+#throwing([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#throwing(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#throwing([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#throwing(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$AbstractBase
@5.0.0
+#<init>()V
+#defaultValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional
@5.0.0

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition
@5.0.0
+#intercept(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#withoutCode()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$AbstractBase
@5.0.0
+#<init>()V
+#withParameter(Ljava/lang/reflect/Type;Ljava/lang/String;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForParameter;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Ljava/lang/reflect/Type;Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Ljava/lang/reflect/Type;Ljava/lang/String;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForParameter;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable$AbstractBase$Adapter
@5.0.0
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#throwing(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#intercept(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#withoutCode()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable$AbstractBase
@5.0.0
+#<init>()V
+#annotateParameter([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#annotateParameter(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#annotateParameter([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable
@5.0.0
+#annotateParameter([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#annotateParameter(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#annotateParameter([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#annotateParameter(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial$AbstractBase
@5.0.0
+#<init>()V
+#withParameter(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#withParameters([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#withParameters(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#withParameters([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#withParameters(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial
@5.0.0
+#withParameters([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#withParameters(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#withParameters([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#withParameters(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$AbstractBase
@5.0.0
+#<init>()V
+#withParameter(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase$Adapter
@5.0.0
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#throwing(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ExceptionDefinition;
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#intercept(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#withoutCode()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase
@5.0.0
+#<init>()V
+#annotateParameter([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#annotateParameter(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#annotateParameter([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable
@5.0.0
+#annotateParameter([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#annotateParameter(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#annotateParameter([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#annotateParameter(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple
@5.0.0
+#withParameter(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition
@5.0.0
+#withParameter(Ljava/lang/reflect/Type;Ljava/lang/String;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForParameter;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Ljava/lang/reflect/Type;Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Ljava/lang/reflect/Type;Ljava/lang/String;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForParameter;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;
+#withParameter(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition$AbstractBase
@5.0.0
+#<init>()V
+#receiverType(Ljava/lang/reflect/AnnotatedElement;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition
@5.0.0
+#receiverType(Ljava/lang/reflect/AnnotatedElement;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#receiverType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$AbstractBase
@5.0.0
+#<init>()V
+#typeVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#typeVariable(Ljava/lang/String;[Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#typeVariable(Ljava/lang/String;Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#typeVariable(Ljava/lang/String;[Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable$AbstractBase$Adapter
@5.0.0
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#intercept(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#withoutCode()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;
+#defaultValue(Ljava/lang/Object;Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ReceiverTypeDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable$AbstractBase
@5.0.0
+#<init>()V
+#annotateTypeVariable([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#annotateTypeVariable(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#annotateTypeVariable([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable
@5.0.0
+#annotateTypeVariable([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#annotateTypeVariable(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#annotateTypeVariable([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#annotateTypeVariable(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition
@5.0.0
+#typeVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#typeVariable(Ljava/lang/String;[Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#typeVariable(Ljava/lang/String;Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#typeVariable(Ljava/lang/String;[Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$TypeVariableDefinition$Annotatable;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition
@5.0.0
+#annotateMethod([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateMethod(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateMethod([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateMethod(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(I[Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(ILjava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(I[Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#annotateParameter(ILjava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;
+#transform(Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional$AbstractBase
@5.0.0
+#<init>()V
+#annotateRecordComponent([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#annotateRecordComponent(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#annotateRecordComponent([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional
@5.0.0

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition
@5.0.0
+#annotateRecordComponent([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#annotateRecordComponent(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#annotateRecordComponent([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#annotateRecordComponent(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Factory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#transform(Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition$AbstractBase
@5.0.0
+#<init>()V
+#annotateTypeVariable([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#annotateTypeVariable(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#annotateTypeVariable([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition
@5.0.0
+#annotateTypeVariable([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#annotateTypeVariable(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#annotateTypeVariable([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#annotateTypeVariable(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;

+###org/easymock/bytebuddy/dynamic/DynamicType$Builder
@5.0.0
+#visit(Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#name(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#suffix(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#modifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForType;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#modifiers(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#modifiers(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#merge([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForType;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#merge(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#topLevelType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#innerTypeOf(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition$ForType;
+#innerTypeOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition$ForType;
+#innerTypeOf(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition;
+#innerTypeOf(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition;
+#innerTypeOf(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition;
+#declaredTypes([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#declaredTypes([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#declaredTypes(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#declaredTypes(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#noNestMate()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestHost(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#unsealed()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType([Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#implement([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#implement(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#implement([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#implement(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#initializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#initializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#require(Lorg/easymock/bytebuddy/description/type/TypeDescription;[B)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#require(Lorg/easymock/bytebuddy/description/type/TypeDescription;[BLorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#require([Lorg/easymock/bytebuddy/dynamic/DynamicType;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#require(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#typeVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#typeVariable(Ljava/lang/String;[Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#typeVariable(Ljava/lang/String;Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#typeVariable(Ljava/lang/String;[Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#transform(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineField(Ljava/lang/String;Ljava/lang/reflect/Type;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForField;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Ljava/lang/reflect/Type;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Ljava/lang/reflect/Type;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForField;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#defineField(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#define(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#define(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#serialVersionUid(J)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#field(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Valuable;
+#field(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Valuable;
+#ignoreAlso(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#ignoreAlso(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineMethod(Ljava/lang/String;Ljava/lang/reflect/Type;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Ljava/lang/reflect/Type;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Ljava/lang/reflect/Type;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineMethod(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineConstructor([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineConstructor(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineConstructor(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#define(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#define(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#define(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#defineProperty(Ljava/lang/String;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#defineProperty(Ljava/lang/String;Ljava/lang/reflect/Type;Z)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#defineProperty(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#defineProperty(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Z)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional;
+#method(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#constructor(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#invokable(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#invokable(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#withHashCodeEquals()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#withToString()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineRecordComponent(Ljava/lang/String;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#defineRecordComponent(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#define(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#recordComponent(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition;
+#recordComponent(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/pool/TypePool;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#make()Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#make(Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#make(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#make(Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#toTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/dynamic/DynamicType$Default$Loaded
@5.0.0
+#getLoaded()Ljava/lang/Class;
+#getLoadedAuxiliaryTypes()Ljava/util/Map;
+#getAllLoaded()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Default$Unloaded
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;[BLorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;Ljava/util/List;Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved;)V
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Loaded;
+#load(Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Loaded;
+#include([Lorg/easymock/bytebuddy/dynamic/DynamicType;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#include(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Default
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;[BLorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;Ljava/util/List;)V
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/ClassFileLocator$Resolution;
+#close()V
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getAllTypes()Ljava/util/Map;
+#getLoadedTypeInitializers()Ljava/util/Map;
+#hasAliveLoadedTypeInitializers()Z
+#getBytes()[B
+#getAuxiliaryTypes()Ljava/util/Map;
+#saveIn(Ljava/io/File;)Ljava/util/Map;
+#inject(Ljava/io/File;Ljava/io/File;)Ljava/io/File;
+#inject(Ljava/io/File;)Ljava/io/File;
+#toJar(Ljava/io/File;)Ljava/io/File;
+#toJar(Ljava/io/File;Ljava/util/jar/Manifest;)Ljava/io/File;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/DynamicType$Loaded
@5.0.0
+#getLoaded()Ljava/lang/Class;
+#getLoadedAuxiliaryTypes()Ljava/util/Map;
+#getAllLoaded()Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/DynamicType$Unloaded
@5.0.0
+#load(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Loaded;
+#load(Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Loaded;
+#include([Lorg/easymock/bytebuddy/dynamic/DynamicType;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#include(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;

+###org/easymock/bytebuddy/dynamic/DynamicType
@5.0.0
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getBytes()[B
+#getAuxiliaryTypes()Ljava/util/Map;
+#getAllTypes()Ljava/util/Map;
+#getLoadedTypeInitializers()Ljava/util/Map;
+#hasAliveLoadedTypeInitializers()Z
+#saveIn(Ljava/io/File;)Ljava/util/Map;
+#inject(Ljava/io/File;Ljava/io/File;)Ljava/io/File;
+#inject(Ljava/io/File;)Ljava/io/File;
+#toJar(Ljava/io/File;)Ljava/io/File;
+#toJar(Ljava/io/File;Ljava/util/jar/Manifest;)Ljava/io/File;

+###org/easymock/bytebuddy/dynamic/Nexus
@5.0.0
+#initialize(Ljava/lang/Class;I)V
+#register(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ref/ReferenceQueue;ILjava/lang/Object;)V
+#clean(Ljava/lang/ref/Reference;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/dynamic/NexusAccessor$Dispatcher$Available
@5.0.0
+#isAlive()Z
+#clean(Ljava/lang/ref/Reference;)V
+#register(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ref/ReferenceQueue;ILorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction;
+#run()Lorg/easymock/bytebuddy/dynamic/NexusAccessor$Dispatcher;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/NexusAccessor$Dispatcher$Unavailable
@5.0.0
+#isAlive()Z
+#clean(Ljava/lang/ref/Reference;)V
+#register(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ref/ReferenceQueue;ILorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/NexusAccessor$Dispatcher
@5.0.0
+#isAlive()Z
+#clean(Ljava/lang/ref/Reference;)V
+#register(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ref/ReferenceQueue;ILorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)V

+###org/easymock/bytebuddy/dynamic/NexusAccessor$InitializationAppender
@5.0.0
+#<init>(I)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/NexusAccessor
@5.0.0
+#<init>()V
+#<init>(Ljava/lang/ref/ReferenceQueue;)V
+#isAlive()Z
+#clean(Ljava/lang/ref/Reference;)V
+#register(Ljava/lang/String;Ljava/lang/ClassLoader;ILorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/TargetType
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/dynamic/Transformer$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/dynamic/Transformer;)V
+#<init>(Ljava/util/List;)V
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/Transformer$ForField$FieldModifierTransformer
@5.0.0
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/Transformer$ForField$TransformedField
@5.0.0
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getModifiers()I
+#asDefined()Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#getName()Ljava/lang/String;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/dynamic/Transformer$ForField
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/Transformer;)V
+#withModifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForField;)Lorg/easymock/bytebuddy/dynamic/Transformer;
+#withModifiers(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/Transformer;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/Transformer$ForMethod$MethodModifierTransformer
@5.0.0
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/Transformer$ForMethod$TransformedMethod$AttachmentVisitor
@5.0.0
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/Transformer$ForMethod$TransformedMethod$TransformedParameter
@5.0.0
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaringMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getIndex()I
+#isNamed()Z
+#hasModifiers()Z
+#getName()Ljava/lang/String;
+#getModifiers()I
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asDefined()Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/dynamic/Transformer$ForMethod$TransformedMethod$TransformedParameterList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/method/ParameterDescription;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/Transformer$ForMethod$TransformedMethod
@5.0.0
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#getModifiers()I
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#asDefined()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getReceiverType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#asDefined()Lorg/easymock/bytebuddy/description/ByteCodeElement$TypeDependant;

+###org/easymock/bytebuddy/dynamic/Transformer$ForMethod
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/Transformer;)V
+#withModifiers([Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForMethod;)Lorg/easymock/bytebuddy/dynamic/Transformer;
+#withModifiers(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/Transformer;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/Transformer$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/Transformer$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/Transformer$NoOp;
+#make()Lorg/easymock/bytebuddy/dynamic/Transformer;
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/Transformer
@5.0.0
+#transform(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Active$Resolved
@5.0.0
+#injectedInto(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#initialize(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Active
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/dynamic/NexusAccessor;)V
+#resolve()Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Disabled;
+#resolve()Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved;
+#injectedInto(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#initialize(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Lazy
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Lazy;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Lazy;
+#resolve()Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved;
+#injectedInto(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#initialize(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Passive
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Passive;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Passive;
+#resolve()Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved;
+#injectedInto(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#initialize(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved
@5.0.0
+#injectedInto(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#initialize(Lorg/easymock/bytebuddy/dynamic/DynamicType;Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/TypeResolutionStrategy
@5.0.0
+#resolve()Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved;

+###org/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy$Default;

+###org/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy
@5.0.0
+#generateVisibilityBridge(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Z

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$ChildFirst$PrependingEnumeration
@5.0.0
+#hasMoreElements()Z
+#nextElement()Ljava/net/URL;
+#nextElement()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$ChildFirst
@5.0.0
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Map;)V
+#<init>(Ljava/lang/ClassLoader;ZLjava/util/Map;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Map;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;)V
+#<init>(Ljava/lang/ClassLoader;ZLjava/util/Map;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;)V
+#<init>(Ljava/lang/ClassLoader;ZLjava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Lorg/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor;)V
+#<init>(Ljava/lang/ClassLoader;ZLjava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Lorg/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor;)V
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;ZZ)Ljava/util/Map;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$ClassDefinitionAction
@5.0.0
+#run()Ljava/lang/Class;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$EmptyEnumeration
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$EmptyEnumeration;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$EmptyEnumeration;
+#hasMoreElements()Z
+#nextElement()Ljava/net/URL;
+#nextElement()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$CreationAction;
+#run()Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$ForJava9CapableVm
@5.0.0
+#apply(Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$ForLegacyVm
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$ForLegacyVm;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$ForLegacyVm;
+#apply(Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader;Ljava/lang/String;)Ljava/lang/Package;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy
@5.0.0
+#apply(Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader;Ljava/lang/String;)Ljava/lang/Package;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction$ByteArrayUrlStreamHandler$ByteArrayUrlConnection
@5.0.0
+#connect()V
+#getInputStream()Ljava/io/InputStream;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction$ByteArrayUrlStreamHandler
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler$UrlDefinitionAction
@5.0.0
+#run()Ljava/net/URL;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;
+#isManifest()Z

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SingletonEnumeration
@5.0.0
+#hasMoreElements()Z
+#nextElement()Ljava/net/URL;
+#nextElement()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$CreationAction;
+#run()Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$Initializable;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$ForJava7CapableVm
@5.0.0
+#getClassLoadingLock(Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$ForJava8CapableVm
@5.0.0
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy;
+#getClassLoadingLock(Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$ForLegacyVm
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$ForLegacyVm;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$ForLegacyVm;
+#getClassLoadingLock(Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$Initializable
@5.0.0
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy
@5.0.0
+#getClassLoadingLock(Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader;Ljava/lang/String;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader
@5.0.0
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Map;)V
+#<init>(Ljava/lang/ClassLoader;ZLjava/util/Map;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Map;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;)V
+#<init>(Ljava/lang/ClassLoader;ZLjava/util/Map;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;)V
+#<init>(Ljava/lang/ClassLoader;ZLjava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Lorg/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor;)V
+#<init>(Ljava/lang/ClassLoader;ZLjava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Lorg/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor;)V
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/ByteArrayClassLoader$PersistenceHandler;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;ZZ)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor$ForClassFileTransformer$AllPermissionsCollection
@5.0.0
+#add(Ljava/security/Permission;)V
+#implies(Ljava/security/Permission;)Z
+#elements()Ljava/util/Enumeration;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor$ForClassFileTransformer
@5.0.0
+#<init>(Ljava/lang/instrument/ClassFileTransformer;)V
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/security/ProtectionDomain;[B)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor$NoOp;
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/security/ProtectionDomain;[B)[B

+###org/easymock/bytebuddy/dynamic/loading/ClassFilePostProcessor
@5.0.0
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/security/ProtectionDomain;[B)[B

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$AbstractBase
@5.0.0
+#<init>()V
+#inject(Ljava/util/Map;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingInstrumentation$Dispatcher
@5.0.0
+#appendToBootstrapClassLoaderSearch(Ljava/lang/instrument/Instrumentation;Ljava/util/jar/JarFile;)V
+#appendToSystemClassLoaderSearch(Ljava/lang/instrument/Instrumentation;Ljava/util/jar/JarFile;)V
+#isModifiableModule(Ljava/lang/instrument/Instrumentation;Ljava/lang/Object;)Z
+#redefineModule(Ljava/lang/instrument/Instrumentation;Ljava/lang/Object;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;)V

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingInstrumentation$Target
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingInstrumentation$Target;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingInstrumentation$Target;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingInstrumentation
@5.0.0
+#redefineModule(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/utility/JavaModule;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;)V
+#of(Ljava/io/File;Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingInstrumentation$Target;Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#isAlive()Z
+#injectRaw(Ljava/util/Map;)Ljava/util/Map;
+#isAvailable()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$CreationAction;
+#run()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$Enabled
@5.0.0
+#isAvailable()Z
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$Jvm
@5.0.0
+#JVM_DefineClass(Lcom/sun/jna/JNIEnv;Ljava/lang/String;Ljava/lang/ClassLoader;[BILjava/security/ProtectionDomain;)Ljava/lang/Class;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$Unavailable
@5.0.0
+#isAvailable()Z
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$Windows32BitFunctionMapper
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$Windows32BitFunctionMapper;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher$Windows32BitFunctionMapper;
+#getFunctionName(Lcom/sun/jna/NativeLibrary;Ljava/lang/reflect/Method;)Ljava/lang/String;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna$Dispatcher
@5.0.0
+#isAvailable()Z
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingJna
@5.0.0
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)V
+#isAvailable()Z
+#ofSystemLoader()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#ofPlatformLoader()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#ofBootLoader()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#isAlive()Z
+#injectRaw(Ljava/util/Map;)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingLookup$MethodHandles$Lookup
@5.0.0
+#lookupClass(Ljava/lang/Object;)Ljava/lang/Class;
+#lookupModes(Ljava/lang/Object;)I
+#defineClass(Ljava/lang/Object;[B)Ljava/lang/Class;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingLookup$MethodHandles
@5.0.0
+#privateLookupIn(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingLookup
@5.0.0
+#of(Ljava/lang/Object;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingLookup;
+#lookupType()Ljava/lang/Class;
+#in(Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingLookup;
+#isAlive()Z
+#injectRaw(Ljava/util/Map;)Ljava/util/Map;
+#isAvailable()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction;
+#run()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$Initializable;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$Direct$ForJava7CapableVm
@5.0.0
+#getClassLoadingLock(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$Direct$ForLegacyVm
@5.0.0
+#getClassLoadingLock(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$Direct
@5.0.0
+#isAvailable()Z
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher;
+#findClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#getDefinedPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#getPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#definePackage(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$Initializable$Unavailable
@5.0.0
+#isAvailable()Z
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher;
+#getClassLoadingLock(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#findClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#getDefinedPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#getPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#definePackage(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$Initializable
@5.0.0
+#isAvailable()Z
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$Unavailable
@5.0.0
+#getClassLoadingLock(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#findClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#getDefinedPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#getPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#definePackage(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection
@5.0.0
+#isAvailable()Z
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher;
+#getClassLoadingLock(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#findClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#getDefinedPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#getPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#definePackage(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride$ForJava7CapableVm
@5.0.0
+#getClassLoadingLock(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride$ForLegacyVm
@5.0.0
+#getClassLoadingLock(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeOverride
@5.0.0
+#isAvailable()Z
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher;
+#findClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#getDefinedPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#getPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#definePackage(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher
@5.0.0
+#getClassLoadingLock(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;
+#findClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#getDefinedPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#getPackage(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Package;
+#definePackage(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$System
@5.0.0
+#getSecurityManager()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingReflection
@5.0.0
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;Z)V
+#isAlive()Z
+#injectRaw(Ljava/util/Map;)Ljava/util/Map;
+#isAvailable()Z
+#ofSystemClassLoader()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$CreationAction;
+#run()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$Initializable;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$Enabled
@5.0.0
+#isAvailable()Z
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher;
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$Initializable
@5.0.0
+#isAvailable()Z
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$Unavailable
@5.0.0
+#isAvailable()Z
+#initialize()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher;
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher
@5.0.0
+#defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory$AccessResolver$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory$AccessResolver$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory$AccessResolver$Default;
+#apply(Ljava/lang/reflect/AccessibleObject;)V

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory$AccessResolver
@5.0.0
+#apply(Ljava/lang/reflect/AccessibleObject;)V

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory$AccessResolver;)V
+#resolve(Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory;
+#resolve(Ljava/lang/instrument/Instrumentation;Z)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Factory;
+#isAvailable()Z
+#make(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#make(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$System
@5.0.0
+#getSecurityManager()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe
@5.0.0
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)V
+#isAlive()Z
+#injectRaw(Ljava/util/Map;)Ljava/util/Map;
+#isAvailable()Z
+#ofSystemLoader()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#ofPlatformLoader()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#ofBootLoader()Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassInjector
@5.0.0
+#isAlive()Z
+#inject(Ljava/util/Map;)Ljava/util/Map;
+#injectRaw(Ljava/util/Map;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable
@5.0.0
+#with(Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#with(Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#allowExistingTypes()Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#opened()Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$InjectionDispatcher
@5.0.0
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#with(Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#with(Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#allowExistingTypes()Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#opened()Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$WrappingDispatcher
@5.0.0
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#with(Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#with(Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#allowExistingTypes()Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#opened()Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default;
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#with(Ljava/security/ProtectionDomain;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#with(Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#allowExistingTypes()Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;
+#opened()Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$Configurable;

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$ForBootstrapInjection
@5.0.0
+#<init>(Ljava/lang/instrument/Instrumentation;Ljava/io/File;)V
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$ForJnaInjection
@5.0.0
+#<init>()V
+#<init>(Ljava/security/ProtectionDomain;)V
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$ForUnsafeInjection
@5.0.0
+#<init>()V
+#<init>(Ljava/security/ProtectionDomain;)V
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy$UsingLookup
@5.0.0
+#of(Ljava/lang/Object;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;
+#withFallback(Ljava/util/concurrent/Callable;)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;
+#withFallback(Ljava/util/concurrent/Callable;Z)Lorg/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy;
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassLoadingStrategy
@5.0.0
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$BootstrapInjection$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$BootstrapInjection$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$BootstrapInjection$Disabled;
+#make(Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;

+###org/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$BootstrapInjection$Enabled
@5.0.0
+#make(Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$BootstrapInjection
@5.0.0
+#make(Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/dynamic/loading/ClassInjector;

+###org/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Dispatcher
@5.0.0
+#isModifiableClass(Ljava/lang/instrument/Instrumentation;Ljava/lang/Class;)Z
+#isRetransformClassesSupported(Ljava/lang/instrument/Instrumentation;)Z
+#addTransformer(Ljava/lang/instrument/Instrumentation;Ljava/lang/instrument/ClassFileTransformer;Z)V
+#retransformClasses(Ljava/lang/instrument/Instrumentation;[Ljava/lang/Class;)V

+###org/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy$ClassRedefinitionTransformer
@5.0.0
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B
+#assertTransformation()V

+###org/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy$ClassResettingTransformer
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy$ClassResettingTransformer;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy$ClassResettingTransformer;
+#transform(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B

+###org/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy;
+#isRedefinition()Z
+#reset(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Ljava/util/List;)V

+###org/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy
@5.0.0
+#<init>(Ljava/lang/instrument/Instrumentation;Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy;)V
+#of(Ljava/lang/instrument/Instrumentation;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy;
+#fromInstalledAgent()Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy;
+#fromInstalledAgent(Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy$Strategy;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy;
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#reset([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy;
+#reset(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy;
+#enableBootstrapInjection(Ljava/io/File;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy;
+#preregistered([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/loading/ClassReloadingStrategy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/InjectionClassLoader$Strategy;
+#load(Lorg/easymock/bytebuddy/dynamic/loading/InjectionClassLoader;Ljava/util/Map;)Ljava/util/Map;
+#load(Ljava/lang/ClassLoader;Ljava/util/Map;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/loading/InjectionClassLoader
@5.0.0
+#isSealed()Z
+#seal()Z
+#defineClass(Ljava/lang/String;[B)Ljava/lang/Class;
+#defineClasses(Ljava/util/Map;)Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder
@5.0.0
+#<init>()V
+#<init>(Z)V
+#append([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#append(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#append([Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#append(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#appendMostSpecific([Ljava/lang/Class;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#appendMostSpecific(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#appendMostSpecific([Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#appendMostSpecific(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#filter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$Builder;
+#build()Ljava/lang/ClassLoader;
+#build(Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader$CompoundEnumeration
@5.0.0
+#hasMoreElements()Z
+#nextElement()Ljava/net/URL;
+#nextElement()Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/loading/MultipleParentClassLoader
@5.0.0
+#<init>(Ljava/util/List;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/util/List;)V
+#<init>(Ljava/lang/ClassLoader;Ljava/util/List;Z)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition$Simple
@5.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)V
+#isDefined()Z
+#getSpecificationTitle()Ljava/lang/String;
+#getSpecificationVersion()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getImplementationTitle()Ljava/lang/String;
+#getImplementationVersion()Ljava/lang/String;
+#getImplementationVendor()Ljava/lang/String;
+#getSealBase()Ljava/net/URL;
+#isCompatibleTo(Ljava/lang/Package;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition$Trivial
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition$Trivial;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition$Trivial;
+#isDefined()Z
+#getSpecificationTitle()Ljava/lang/String;
+#getSpecificationVersion()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getImplementationTitle()Ljava/lang/String;
+#getImplementationVersion()Ljava/lang/String;
+#getImplementationVendor()Ljava/lang/String;
+#getSealBase()Ljava/net/URL;
+#isCompatibleTo(Ljava/lang/Package;)Z

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition$Undefined
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition$Undefined;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition$Undefined;
+#isDefined()Z
+#getSpecificationTitle()Ljava/lang/String;
+#getSpecificationVersion()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getImplementationTitle()Ljava/lang/String;
+#getImplementationVersion()Ljava/lang/String;
+#getImplementationVendor()Ljava/lang/String;
+#getSealBase()Ljava/net/URL;
+#isCompatibleTo(Ljava/lang/Package;)Z

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition
@5.0.0
+#isDefined()Z
+#getSpecificationTitle()Ljava/lang/String;
+#getSpecificationVersion()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getImplementationTitle()Ljava/lang/String;
+#getImplementationVersion()Ljava/lang/String;
+#getImplementationVendor()Ljava/lang/String;
+#getSealBase()Ljava/net/URL;
+#isCompatibleTo(Ljava/lang/Package;)Z

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading$SealBaseLocator$ForFixedValue
@5.0.0
+#<init>(Ljava/net/URL;)V
+#findSealBase(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/net/URL;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading$SealBaseLocator$ForTypeResourceUrl
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading$SealBaseLocator;)V
+#findSealBase(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/net/URL;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading$SealBaseLocator$NonSealing
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading$SealBaseLocator$NonSealing;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading$SealBaseLocator$NonSealing;
+#findSealBase(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/net/URL;

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading$SealBaseLocator
@5.0.0
+#findSealBase(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/net/URL;

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$ManifestReading$SealBaseLocator;)V
+#define(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$NoOp;
+#define(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition;

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Trivial
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Trivial;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Trivial;
+#define(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition;

+###org/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy
@5.0.0
+#define(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/loading/PackageDefinitionStrategy$Definition;

+###org/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default;
+#resolve(ILorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/jar/asm/ClassWriter;

+###org/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy$FrameComputingClassWriter
@5.0.0
+#<init>(ILorg/easymock/bytebuddy/pool/TypePool;)V
+#<init>(Lorg/easymock/bytebuddy/jar/asm/ClassReader;ILorg/easymock/bytebuddy/pool/TypePool;)V

+###org/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy
@5.0.0
+#resolve(ILorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/jar/asm/ClassWriter;
+#resolve(ILorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/jar/asm/ClassReader;)Lorg/easymock/bytebuddy/jar/asm/ClassWriter;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$AbstractBase
@5.0.0
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution;
+#locate(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForClassHierarchy$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForClassHierarchy$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForClassHierarchy$Factory;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForClassHierarchy
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForExactType$Factory
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForExactType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForTopLevelType$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForTopLevelType$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForTopLevelType$Factory;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$ForTopLevelType
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$NoOp;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator;
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution;
+#locate(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution$Illegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution$Illegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution$Illegal;
+#isResolved()Z
+#getField()Lorg/easymock/bytebuddy/description/field/FieldDescription;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution$Simple
@5.0.0
+#isResolved()Z
+#getField()Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution
@5.0.0
+#isResolved()Z
+#getField()Lorg/easymock/bytebuddy/description/field/FieldDescription;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldLocator
@5.0.0
+#locate(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution;
+#locate(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Resolution;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Compiled$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Compiled$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Compiled$NoOp;
+#target(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Compiled
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Default$Compiled$Entry
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Z
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Default$Compiled
@5.0.0
+#target(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Default$Entry
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Default
@5.0.0
+#<init>()V
+#prepend(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Factory;Ljava/lang/Object;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldRegistry;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Compiled;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/FieldRegistry
@5.0.0
+#prepend(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Factory;Ljava/lang/Object;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldRegistry;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/FieldRegistry$Compiled;

+###org/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Default
@5.0.0
+#of(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;[Lorg/easymock/bytebuddy/description/modifier/ModifierContributor$ForType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#of(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;I)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withModifiers(I)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAuxiliaryField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;Ljava/lang/Object;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withRecordComponent(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInterfaces(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAnnotations(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withNestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withNestMembers(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withEnclosingType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withEnclosingMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withDeclaringType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withDeclaredTypes(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withPermittedSubclasses(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeVariableToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withName(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withTypeVariables(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withLocalClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAnonymousClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withRecord(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;
+#getTypeInitializer()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#isAnonymousType()Z
+#isLocalType()Z
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#isSealed()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#validated()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withRecord(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAnonymousClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withLocalClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withPermittedSubclasses(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withDeclaredTypes(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withDeclaringType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withEnclosingMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withEnclosingType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withNestMembers(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withNestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAnnotations(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeVariableToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withInterfaces(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withModifiers(I)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withRecordComponent(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAuxiliaryField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;Ljava/lang/Object;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Factory$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Factory$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Factory$Default;
+#subclass(Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;

+###org/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Factory
@5.0.0
+#represent(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#subclass(Ljava/lang/String;ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;

+###org/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Frozen
@5.0.0
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getModifiers()I
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getName()Ljava/lang/String;
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#isAnonymousType()Z
+#isLocalType()Z
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getGenericSignature()Ljava/lang/String;
+#getActualModifiers(Z)I
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#isSealed()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#withField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAuxiliaryField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;Ljava/lang/Object;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withRecordComponent(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withModifiers(I)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInterfaces(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeVariableToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAnnotations(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withNestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withNestMembers(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withEnclosingType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withEnclosingMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withDeclaringType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withDeclaredTypes(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withPermittedSubclasses(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withLocalClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAnonymousClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withRecord(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withName(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withTypeVariables(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;
+#getTypeInitializer()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#validated()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withRecord(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAnonymousClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withLocalClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withPermittedSubclasses(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withDeclaredTypes(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withDeclaringType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withEnclosingMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withEnclosingType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withNestMembers(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withNestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAnnotations(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeVariableToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withInterfaces(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withModifiers(I)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withRecordComponent(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAuxiliaryField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;Ljava/lang/Object;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Prepareable$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Prepareable$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Prepareable$NoOp;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Prepareable
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName
@5.0.0
+#withField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAuxiliaryField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;Ljava/lang/Object;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withRecordComponent(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withModifiers(I)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInterfaces(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withNestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withNestMembers(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withEnclosingType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withEnclosingMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withDeclaringType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withDeclaredTypes(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withPermittedSubclasses(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withLocalClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAnonymousClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withRecord(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeVariableToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withAnnotations(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withName(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;
+#withTypeVariables(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;

+###org/easymock/bytebuddy/dynamic/scaffold/InstrumentedType
@5.0.0
+#withField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAuxiliaryField(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;Ljava/lang/Object;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withRecordComponent(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withModifiers(I)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withInterfaces(Lorg/easymock/bytebuddy/description/type/TypeList$Generic;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeVariableToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAnnotations(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withNestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withNestMembers(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withEnclosingType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withEnclosingMethod(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withDeclaringType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withDeclaredTypes(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withPermittedSubclasses(Lorg/easymock/bytebuddy/description/type/TypeList;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withLocalClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAnonymousClass(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withRecord(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withInitializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;
+#getTypeInitializer()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#validated()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase
@5.0.0
+#<init>()V
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod$Token
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod;
+#harmonize(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJVMMethod$Token;
+#harmonize(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token
@5.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod;
+#harmonize(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token;
+#harmonize(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer
@5.0.0
+#harmonize(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Detached
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Ambiguous$Node
@5.0.0
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Sort;
+#getRepresentative()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getMethodTypes()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Ambiguous
@5.0.0
+#getKey()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized;
+#getCandidates()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#extendBy(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;
+#inject(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;
+#asNode(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial
@5.0.0
+#getKey()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized;
+#getCandidates()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#extendBy(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;
+#inject(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;
+#asNode(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved$Node
@5.0.0
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Sort;
+#getRepresentative()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getMethodTypes()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved
@5.0.0
+#getKey()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized;
+#getCandidates()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#extendBy(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;
+#inject(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;
+#asNode(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry
@5.0.0
+#getKey()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized;
+#getCandidates()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#extendBy(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;
+#inject(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry;
+#asNode(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Graph
@5.0.0
+#locate(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#listNodes()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$NodeList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key
@5.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger$Directional
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger$Directional;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger$Directional;
+#merge(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger
@5.0.0
+#merge(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default
@5.0.0
+#of(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;
+#of(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Merger;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;
+#forJavaHierarchy()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;
+#forJVMHierarchy()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$ForDeclaredMethods
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$ForDeclaredMethods;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$ForDeclaredMethods;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler
@5.0.0
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Empty
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Empty;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Empty;
+#locate(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#listNodes()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$NodeList;
+#getSuperClassGraph()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;
+#getInterfaceGraph(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked$Delegation
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;Ljava/util/Map;)V
+#getSuperClassGraph()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;
+#getInterfaceGraph(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;
+#locate(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#listNodes()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$NodeList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked
@5.0.0
+#getSuperClassGraph()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;
+#getInterfaceGraph(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Sort;
+#getRepresentative()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getMethodTypes()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Sort
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Sort;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Sort;
+#isResolved()Z
+#isUnique()Z
+#isMadeVisible()Z

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Unresolved
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Unresolved;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Unresolved;
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Sort;
+#getRepresentative()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getMethodTypes()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node
@5.0.0
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node$Sort;
+#getRepresentative()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getMethodTypes()Ljava/util/Set;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$NodeList
@5.0.0
+#<init>(Ljava/util/List;)V
+#get(I)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#size()I
+#asMethodList()Lorg/easymock/bytebuddy/description/method/MethodList;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Simple
@5.0.0
+#<init>(Ljava/util/LinkedHashMap;)V
+#of(Ljava/util/List;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph;
+#locate(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#listNodes()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$NodeList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodGraph
@5.0.0
+#locate(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Node;
+#listNodes()Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$NodeList;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Compiled
@5.0.0
+#getInstrumentedType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getInstrumentedMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;
+#getTypeInitializer()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Compiled$Entry
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Compiled
@5.0.0
+#getInstrumentedType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;
+#getTypeInitializer()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#getMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getInstrumentedMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#target(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Entry
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Prepared$Entry
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Prepared
@5.0.0
+#getInstrumentedType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;
+#getTypeInitializer()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#getMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getInstrumentedMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target$Factory;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Compiled;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Default
@5.0.0
+#<init>()V
+#prepend(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;
+#append(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy;Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Prepared;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$Compiled
@5.0.0
+#assemble(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;Lorg/easymock/bytebuddy/description/modifier/Visibility;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForAbstractMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForAbstractMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForAbstractMethod;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$Compiled;
+#assemble(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;Lorg/easymock/bytebuddy/description/modifier/Visibility;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForAnnotationValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$Compiled;
+#assemble(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;Lorg/easymock/bytebuddy/description/modifier/Visibility;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation$Compiled
@5.0.0
+#assemble(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;Lorg/easymock/bytebuddy/description/modifier/Visibility;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/Implementation;)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation$Compiled;
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$Compiled;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForVisibilityBridge$Compiled
@5.0.0
+#assemble(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;Lorg/easymock/bytebuddy/description/modifier/Visibility;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForVisibilityBridge
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForVisibilityBridge;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForVisibilityBridge;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForVisibilityBridge$Compiled;
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$Compiled;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler
@5.0.0
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$Compiled;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Prepared
@5.0.0
+#getInstrumentedType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getInstrumentedMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;
+#getTypeInitializer()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#compile(Lorg/easymock/bytebuddy/implementation/Implementation$Target$Factory;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Compiled;

+###org/easymock/bytebuddy/dynamic/scaffold/MethodRegistry
@5.0.0
+#prepend(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;
+#append(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Handler;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy;Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Prepared;

+###org/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Compiled$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Compiled$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Compiled$NoOp;
+#target(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Compiled
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Default$Compiled$Entry
@5.0.0
+#matches(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Z
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Default$Compiled
@5.0.0
+#target(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Default$Entry
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Default
@5.0.0
+#<init>()V
+#prepend(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Factory;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Compiled;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry
@5.0.0
+#prepend(Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Factory;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/RecordComponentRegistry$Compiled;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$Drain$Default
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$Drain
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$None
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$None;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$None;
+#isDefined()Z
+#expandWith(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#wrap(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)V
+#isDefined()Z
+#expandWith(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#wrap(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeInitializer
@5.0.0
+#isDefined()Z
+#expandWith(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;
+#wrap(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeValidation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;
+#of(Z)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;
+#isEnabled()Z

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ClassDumpAction$Dispatcher$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ClassDumpAction$Dispatcher$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ClassDumpAction$Dispatcher$Disabled;
+#dump(Lorg/easymock/bytebuddy/description/type/TypeDescription;Z[B)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ClassDumpAction$Dispatcher$Enabled
@5.0.0
+#dump(Lorg/easymock/bytebuddy/description/type/TypeDescription;Z[B)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ClassDumpAction$Dispatcher
@5.0.0
+#dump(Lorg/easymock/bytebuddy/description/type/TypeDescription;Z[B)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ClassDumpAction
@5.0.0
+#run()Ljava/lang/Void;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation$CreationClassVisitor
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation$ImplementationContextClassVisitor
@5.0.0
+#getAuxiliaryTypes()Ljava/util/List;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation
@5.0.0
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$ContextRegistry
@5.0.0
+#setImplementationContext(Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;)V
+#getAuxiliaryTypes()Ljava/util/List;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$RegistryContextClassVisitor
@5.0.0
+#getAuxiliaryTypes()Ljava/util/List;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithDecorationOnly$DecorationClassVisitor
@5.0.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithDecorationOnly$LazyFieldList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithDecorationOnly
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$Active
@5.0.0
+#<init>()V
+#onFrame(II)V
+#emitFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$Expanding
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$Expanding;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$Expanding;
+#onFrame(II)V
+#emitFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter$NoOp;
+#onFrame(II)V
+#emitFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$FrameWriter
@5.0.0
+#onFrame(II)V
+#emitFrame(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain$WithActiveRecord
@5.0.0
+#visitInsn(I)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain$WithoutActiveRecord
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithDrain
@5.0.0
+#visitEnd()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain$WithActiveRecord
@5.0.0
+#visitInsn(I)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain$WithoutActiveRecord
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending$WithoutDrain
@5.0.0
+#visitEnd()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Appending
@5.0.0
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitMaxs(II)V
+#visitEnd()V
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)V
+#complete(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler$Creating
@5.0.0
+#complete(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$InitializationHandler
@5.0.0
+#complete(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$OpenedClassRemapper
@5.0.0

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$AttributeObtainingFieldVisitor
@5.0.0
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$AttributeObtainingMethodVisitor
@5.0.0
+#visitAnnotationDefault()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotableParameterCount(IZ)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitCode()V
+#visitEnd()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$AttributeObtainingRecordComponentVisitor
@5.0.0
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor$CodePreservingMethodVisitor
@5.0.0
+#visitAnnotationDefault()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotableParameterCount(IZ)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitCode()V
+#visitMaxs(II)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor
@5.0.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining
@5.0.0
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$SignatureKey
@5.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$UnresolvedType
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$Compound
@5.0.0
+#<init>(Ljava/util/List;)V
+#assertType(IZZ)V
+#assertField(Ljava/lang/String;ZZZZ)V
+#assertMethod(Ljava/lang/String;ZZZZZZZZ)V
+#assertDefaultValue(Ljava/lang/String;)V
+#assertDefaultMethodCall()V
+#assertAnnotation()V
+#assertTypeAnnotation()V
+#assertTypeInConstantPool()V
+#assertMethodTypeInConstantPool()V
+#assertHandleInConstantPool()V
+#assertInvokeDynamic()V
+#assertSubRoutine()V
+#assertDynamicValueInConstantPool()V
+#assertNestMate()V
+#assertRecord()V
+#assertPermittedSubclass()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForAnnotation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForAnnotation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForAnnotation;
+#assertField(Ljava/lang/String;ZZZZ)V
+#assertMethod(Ljava/lang/String;ZZZZZZZZ)V
+#assertAnnotation()V
+#assertTypeAnnotation()V
+#assertDefaultValue(Ljava/lang/String;)V
+#assertDefaultMethodCall()V
+#assertType(IZZ)V
+#assertTypeInConstantPool()V
+#assertMethodTypeInConstantPool()V
+#assertHandleInConstantPool()V
+#assertInvokeDynamic()V
+#assertSubRoutine()V
+#assertDynamicValueInConstantPool()V
+#assertNestMate()V
+#assertRecord()V
+#assertPermittedSubclass()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClass
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClass;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClass;
+#assertType(IZZ)V
+#assertField(Ljava/lang/String;ZZZZ)V
+#assertMethod(Ljava/lang/String;ZZZZZZZZ)V
+#assertAnnotation()V
+#assertTypeAnnotation()V
+#assertDefaultValue(Ljava/lang/String;)V
+#assertDefaultMethodCall()V
+#assertTypeInConstantPool()V
+#assertMethodTypeInConstantPool()V
+#assertHandleInConstantPool()V
+#assertInvokeDynamic()V
+#assertSubRoutine()V
+#assertDynamicValueInConstantPool()V
+#assertNestMate()V
+#assertRecord()V
+#assertPermittedSubclass()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForClassFileVersion
@5.0.0
+#assertType(IZZ)V
+#assertField(Ljava/lang/String;ZZZZ)V
+#assertMethod(Ljava/lang/String;ZZZZZZZZ)V
+#assertAnnotation()V
+#assertTypeAnnotation()V
+#assertDefaultValue(Ljava/lang/String;)V
+#assertDefaultMethodCall()V
+#assertTypeInConstantPool()V
+#assertMethodTypeInConstantPool()V
+#assertHandleInConstantPool()V
+#assertInvokeDynamic()V
+#assertSubRoutine()V
+#assertDynamicValueInConstantPool()V
+#assertNestMate()V
+#assertRecord()V
+#assertPermittedSubclass()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForInterface
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForInterface;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForInterface;
+#assertField(Ljava/lang/String;ZZZZ)V
+#assertMethod(Ljava/lang/String;ZZZZZZZZ)V
+#assertAnnotation()V
+#assertTypeAnnotation()V
+#assertDefaultValue(Ljava/lang/String;)V
+#assertDefaultMethodCall()V
+#assertType(IZZ)V
+#assertTypeInConstantPool()V
+#assertMethodTypeInConstantPool()V
+#assertHandleInConstantPool()V
+#assertInvokeDynamic()V
+#assertSubRoutine()V
+#assertDynamicValueInConstantPool()V
+#assertNestMate()V
+#assertRecord()V
+#assertPermittedSubclass()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForPackageType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForPackageType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForPackageType;
+#assertField(Ljava/lang/String;ZZZZ)V
+#assertMethod(Ljava/lang/String;ZZZZZZZZ)V
+#assertAnnotation()V
+#assertTypeAnnotation()V
+#assertDefaultValue(Ljava/lang/String;)V
+#assertDefaultMethodCall()V
+#assertTypeInConstantPool()V
+#assertMethodTypeInConstantPool()V
+#assertHandleInConstantPool()V
+#assertInvokeDynamic()V
+#assertSubRoutine()V
+#assertType(IZZ)V
+#assertDynamicValueInConstantPool()V
+#assertNestMate()V
+#assertRecord()V
+#assertPermittedSubclass()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForRecord
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForRecord;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$ForRecord;
+#assertField(Ljava/lang/String;ZZZZ)V
+#assertMethod(Ljava/lang/String;ZZZZZZZZ)V
+#assertAnnotation()V
+#assertTypeAnnotation()V
+#assertDefaultValue(Ljava/lang/String;)V
+#assertDefaultMethodCall()V
+#assertType(IZZ)V
+#assertTypeInConstantPool()V
+#assertMethodTypeInConstantPool()V
+#assertHandleInConstantPool()V
+#assertInvokeDynamic()V
+#assertSubRoutine()V
+#assertDynamicValueInConstantPool()V
+#assertNestMate()V
+#assertRecord()V
+#assertPermittedSubclass()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint
@5.0.0
+#assertType(IZZ)V
+#assertField(Ljava/lang/String;ZZZZ)V
+#assertMethod(Ljava/lang/String;ZZZZZZZZ)V
+#assertAnnotation()V
+#assertTypeAnnotation()V
+#assertDefaultValue(Ljava/lang/String;)V
+#assertDefaultMethodCall()V
+#assertTypeInConstantPool()V
+#assertMethodTypeInConstantPool()V
+#assertHandleInConstantPool()V
+#assertInvokeDynamic()V
+#assertSubRoutine()V
+#assertDynamicValueInConstantPool()V
+#assertNestMate()V
+#assertRecord()V
+#assertPermittedSubclass()V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingFieldVisitor
@5.0.0
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor
@5.0.0
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotationDefault()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/easymock/bytebuddy/jar/asm/Label;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor
@5.0.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitPermittedSubclass(Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitNestHost(Ljava/lang/String;)V
+#visitNestMember(Ljava/lang/String;)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$Default
@5.0.0
+#forCreation(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Compiled;Ljava/util/List;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool;Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter;
+#forRedefinition(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Prepared;Ljava/util/List;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool;Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter;
+#forRebasing(Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry$Prepared;Ljava/util/List;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool;Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter;
+#forDecoration(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/ClassFileVersion;Ljava/util/List;Ljava/util/List;Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter;
+#make(Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Disabled;
+#target(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Record$ForExplicitField
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;Ljava/lang/Object;Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#isImplicit()Z
+#getField()Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#getFieldAppender()Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;
+#resolveDefault(Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Record$ForImplicitField
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#isImplicit()Z
+#getField()Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#getFieldAppender()Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;
+#resolveDefault(Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Record
@5.0.0
+#isImplicit()Z
+#getField()Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#getFieldAppender()Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;
+#resolveDefault(Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool
@5.0.0
+#target(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$FieldPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$AccessBridgeWrapper$AccessorBridge
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getModifiers()I
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$AccessBridgeWrapper$BridgeTarget
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getModifiers()I
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$AccessBridgeWrapper
@5.0.0
+#of(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Ljava/util/Set;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#prepend(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyHead(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#applyBody(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyAttributes(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyCode(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$OfVisibilityBridge$VisibilityBridge
@5.0.0
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getModifiers()I
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$OfVisibilityBridge
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#prepend(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#applyHead(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#applyBody(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyAttributes(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyCode(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithAnnotationDefaultValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;)V
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#applyHead(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#applyBody(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyAttributes(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyCode(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#prepend(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)V
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;Lorg/easymock/bytebuddy/description/modifier/Visibility;)V
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#applyHead(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#applyBody(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyAttributes(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyCode(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#prepend(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithoutBody
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;Lorg/easymock/bytebuddy/description/modifier/Visibility;)V
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#applyHead(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#applyBody(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyAttributes(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyCode(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#prepend(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod
@5.0.0
+#<init>()V
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForNonImplementedMethod
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyBody(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyAttributes(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyCode(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#applyHead(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#prepend(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#isDefined()Z
+#isImplemented()Z

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record
@5.0.0
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#prepend(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyHead(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#applyBody(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyAttributes(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyCode(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool
@5.0.0
+#target(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Disabled;
+#target(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Record$ForExplicitRecordComponent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)V
+#isImplicit()Z
+#getRecordComponent()Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;
+#getRecordComponentAppender()Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Record$ForImplicitRecordComponent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)V
+#isImplicit()Z
+#getRecordComponent()Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;
+#getRecordComponentAppender()Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Record
@5.0.0
+#isImplicit()Z
+#getRecordComponent()Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;
+#getRecordComponentAppender()Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool
@5.0.0
+#target(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$RecordComponentPool$Record;

+###org/easymock/bytebuddy/dynamic/scaffold/TypeWriter
@5.0.0
+#make(Lorg/easymock/bytebuddy/dynamic/TypeResolutionStrategy$Resolved;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Unloaded;
+#wrap(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;II)Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;

+###org/easymock/bytebuddy/dynamic/scaffold/inline/AbstractInliningDynamicTypeBuilder
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/DecoratingDynamicTypeBuilder
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)V
+#visit(Lorg/easymock/bytebuddy/asm/AsmVisitorWrapper;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#suffix(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#name(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#modifiers(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#merge(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#topLevelType()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#innerTypeOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition$ForType;
+#innerTypeOf(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$InnerTypeDefinition;
+#declaredTypes(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestHost(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#nestMembers(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#permittedSubclass(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#unsealed()Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#attribute(Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#annotateType(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#implement(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition$Optional;
+#initializer(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#initializer(Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#typeVariable(Ljava/lang/String;Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$TypeVariableDefinition;
+#transform(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/Transformer;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineField(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Optional$Valuable;
+#field(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$FieldDefinition$Valuable;
+#ignoreAlso(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#defineMethod(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#defineConstructor(I)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial;
+#invokable(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ImplementationDefinition;
+#defineRecordComponent(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition$Optional;
+#recordComponent(Lorg/easymock/bytebuddy/matcher/LatentMatcher;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder$RecordComponentDefinition;
+#require(Ljava/util/Collection;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#toTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer$Prefixing
@5.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#transform(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer$Suffixing
@5.0.0
+#withRandomSuffix()Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;
+#<init>(Ljava/lang/String;)V
+#transform(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer
@5.0.0
+#transform(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Default
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/Set;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;
+#getAuxiliaryTypes()Ljava/util/List;
+#asTokenMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Disabled
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Disabled;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Disabled;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;
+#getAuxiliaryTypes()Ljava/util/List;
+#asTokenMap()Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution$ForRebasedConstructor$RebasedConstructor
@5.0.0
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution$ForRebasedConstructor
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;
+#isRebased()Z
+#getResolvedMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getAppendedParameters()Lorg/easymock/bytebuddy/description/type/TypeList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution$ForRebasedMethod$RebasedMethod
@5.0.0
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution$ForRebasedMethod
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;
+#isRebased()Z
+#getResolvedMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getAppendedParameters()Lorg/easymock/bytebuddy/description/type/TypeList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution$Preserved
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)V
+#isRebased()Z
+#getResolvedMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getAppendedParameters()Lorg/easymock/bytebuddy/description/type/TypeList;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution
@5.0.0
+#isRebased()Z
+#getResolvedMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getAppendedParameters()Lorg/easymock/bytebuddy/description/type/TypeList;

+###org/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;
+#getAuxiliaryTypes()Ljava/util/List;
+#asTokenMap()Ljava/util/Map;

+###org/easymock/bytebuddy/dynamic/scaffold/inline/RebaseDynamicTypeBuilder
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/RebaseImplementationTarget$Factory
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/implementation/Implementation$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/RebaseImplementationTarget$RebasedMethodInvocation
@5.0.0
+#getMethodDescription()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#withCheckedCompatibilityTo(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/dynamic/scaffold/inline/RebaseImplementationTarget
@5.0.0
+#invokeSuper(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#getOriginType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getOriginType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)V

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default$WithMethodAttributeAppenderFactory
@5.0.0
+#extractConstructors(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/util/List;
+#inject(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default;
+#extractConstructors(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/util/List;
+#inject(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;
+#with(Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;)Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy;
+#withInheritedAnnotations()Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy;

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$ForDefaultConstructor
@5.0.0
+#<init>()V
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#<init>(Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;)V
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;)V
+#extractConstructors(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/util/List;
+#inject(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy
@5.0.0
+#extractConstructors(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/util/List;
+#inject(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodRegistry;

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder$InstrumentableMatcher
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$WithFlexibleName;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;Lorg/easymock/bytebuddy/implementation/Implementation$Context$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeValidation;Lorg/easymock/bytebuddy/dynamic/VisibilityBridgeStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/ClassWriterStrategy;Lorg/easymock/bytebuddy/matcher/LatentMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassImplementationTarget$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassImplementationTarget$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassImplementationTarget$Factory;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/implementation/Implementation$Target;

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassImplementationTarget$OriginTypeResolver
@5.0.0
+#values()[Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassImplementationTarget$OriginTypeResolver;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassImplementationTarget$OriginTypeResolver;

+###org/easymock/bytebuddy/dynamic/scaffold/subclass/SubclassImplementationTarget
@5.0.0
+#invokeSuper(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#getOriginType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/DefaultMethodCall$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/DefaultMethodCall
@5.0.0
+#prioritize([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prioritize(Ljava/lang/Iterable;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prioritize([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prioritize(Ljava/util/Collection;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#unambiguousOnly()Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/EqualsMethod$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/EqualsMethod$CompoundComparator
@5.0.0
+#compare(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/EqualsMethod$ConditionalReturn
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/EqualsMethod$NaturalOrderComparator
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/EqualsMethod$NaturalOrderComparator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/EqualsMethod$NaturalOrderComparator;
+#compare(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/easymock/bytebuddy/implementation/EqualsMethod$NullValueGuard$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/EqualsMethod$NullValueGuard$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/EqualsMethod$NullValueGuard$NoOp;
+#before()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#after()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getRequiredVariablePadding()I

+###org/easymock/bytebuddy/implementation/EqualsMethod$NullValueGuard$UsingJump$AfterInstruction
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/EqualsMethod$NullValueGuard$UsingJump$BeforeInstruction
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/EqualsMethod$NullValueGuard$UsingJump
@5.0.0
+#before()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#after()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getRequiredVariablePadding()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/EqualsMethod$NullValueGuard
@5.0.0
+#before()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#after()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getRequiredVariablePadding()I

+###org/easymock/bytebuddy/implementation/EqualsMethod$SuperClassCheck
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/EqualsMethod$SuperClassCheck;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/EqualsMethod$SuperClassCheck;

+###org/easymock/bytebuddy/implementation/EqualsMethod$TypeCompatibilityCheck
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/EqualsMethod$TypeCompatibilityCheck;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/EqualsMethod$TypeCompatibilityCheck;

+###org/easymock/bytebuddy/implementation/EqualsMethod$TypePropertyComparator
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/EqualsMethod$TypePropertyComparator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/EqualsMethod$TypePropertyComparator;
+#compare(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/easymock/bytebuddy/implementation/EqualsMethod$ValueComparator
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/EqualsMethod$ValueComparator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/EqualsMethod$ValueComparator;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z

+###org/easymock/bytebuddy/implementation/EqualsMethod
@5.0.0
+#requiringSuperClassEquality()Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#isolated()Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#withIgnoredFields(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#withNonNullableFields(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#withPrimitiveTypedFieldsFirst()Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#withEnumerationTypedFieldsFirst()Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#withPrimitiveWrapperTypedFieldsFirst()Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#withStringTypedFieldsFirst()Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#withFieldOrder(Ljava/util/Comparator;)Lorg/easymock/bytebuddy/implementation/EqualsMethod;
+#withSubclassEquality()Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/ExceptionMethod$ConstructionDelegate$ForDefaultConstructor
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#make()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/ExceptionMethod$ConstructionDelegate$ForStringConstructor
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;)V
+#make()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/ExceptionMethod$ConstructionDelegate
@5.0.0
+#make()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/ExceptionMethod
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/ExceptionMethod$ConstructionDelegate;)V
+#throwing(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#throwing(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#throwing(Ljava/lang/Class;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#throwing(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable
@5.0.0
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$PropertyConfigurable;

+###org/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation$Absolute
@5.0.0
+#with(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation;
+#prepare(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation$Prepared;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation$Prepared
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription;

+###org/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation$Relative$Prepared
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation$Relative
@5.0.0
+#with(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation;
+#prepare(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation$Prepared;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation
@5.0.0
+#with(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation;
+#prepare(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldLocation$Prepared;

+###org/easymock/bytebuddy/implementation/FieldAccessor$FieldNameExtractor$ForBeanProperty
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldNameExtractor$ForBeanProperty;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldNameExtractor$ForBeanProperty;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/FieldAccessor$FieldNameExtractor$ForFixedValue
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$FieldNameExtractor
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForImplicitProperty$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForImplicitProperty
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#setsArgumentAt(I)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsDefaultValue()Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsReference(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsReference(Ljava/lang/Object;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsFieldValueOf(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsFieldValueOf(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsFieldValueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsFieldValueOf(Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldNameExtractor;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$PropertyConfigurable;
+#in(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable;
+#in(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable;
+#in(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable;

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$OfConstantValue
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$OfDefaultValue
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$OfFieldValue
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$OfParameterValue
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$OfReferenceValue
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$TerminationHandler
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$TerminationHandler;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$ForSetter$TerminationHandler;

+###org/easymock/bytebuddy/implementation/FieldAccessor$ForSetter
@5.0.0
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FieldAccessor$OwnerTypeLocatable
@5.0.0
+#in(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable;
+#in(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable;
+#in(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable;

+###org/easymock/bytebuddy/implementation/FieldAccessor$PropertyConfigurable
@5.0.0
+#setsArgumentAt(I)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsDefaultValue()Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsValue(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsReference(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsReference(Ljava/lang/Object;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsFieldValueOf(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsFieldValueOf(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsFieldValueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#setsFieldValueOf(Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldNameExtractor;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;

+###org/easymock/bytebuddy/implementation/FieldAccessor
@5.0.0
+#ofField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$OwnerTypeLocatable;
+#ofBeanProperty()Lorg/easymock/bytebuddy/implementation/FieldAccessor$OwnerTypeLocatable;
+#of(Lorg/easymock/bytebuddy/implementation/FieldAccessor$FieldNameExtractor;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$OwnerTypeLocatable;
+#of(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable;
+#of(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/FieldAccessor$AssignerConfigurable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable
@5.0.0
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation;

+###org/easymock/bytebuddy/implementation/FixedValue$ForArgument
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FixedValue$ForNullValue
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/FixedValue$ForNullValue;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/FixedValue$ForNullValue;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;

+###org/easymock/bytebuddy/implementation/FixedValue$ForOriginType$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FixedValue$ForOriginType
@5.0.0
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/implementation/FixedValue$ForPoolValue
@5.0.0
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FixedValue$ForThisValue$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FixedValue$ForThisValue
@5.0.0
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation;

+###org/easymock/bytebuddy/implementation/FixedValue$ForValue
@5.0.0
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/FixedValue
@5.0.0
+#value(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable;
+#reference(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable;
+#reference(Ljava/lang/Object;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable;
+#value(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable;
+#value(Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable;
+#argument(I)Lorg/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable;
+#self()Lorg/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable;
+#nullValue()Lorg/easymock/bytebuddy/implementation/Implementation;
+#originType()Lorg/easymock/bytebuddy/implementation/FixedValue$AssignerConfigurable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/HashCodeMethod$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/HashCodeMethod$NullValueGuard$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/HashCodeMethod$NullValueGuard$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/HashCodeMethod$NullValueGuard$NoOp;
+#before()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#after()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getRequiredVariablePadding()I

+###org/easymock/bytebuddy/implementation/HashCodeMethod$NullValueGuard$UsingJump$AfterInstruction
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/HashCodeMethod$NullValueGuard$UsingJump$BeforeInstruction
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/HashCodeMethod$NullValueGuard$UsingJump
@5.0.0
+#before()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#after()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getRequiredVariablePadding()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/HashCodeMethod$NullValueGuard
@5.0.0
+#before()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#after()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getRequiredVariablePadding()I

+###org/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForDynamicTypeHash
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForDynamicTypeHash;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForDynamicTypeHash;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForFixedValue
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForStaticTypeHash
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForStaticTypeHash;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForStaticTypeHash;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForSuperMethodCall
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForSuperMethodCall;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider$ForSuperMethodCall;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/HashCodeMethod$OffsetProvider
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/HashCodeMethod$ValueTransformer
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/HashCodeMethod$ValueTransformer;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/HashCodeMethod$ValueTransformer;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z

+###org/easymock/bytebuddy/implementation/HashCodeMethod
@5.0.0
+#usingSuperClassOffset()Lorg/easymock/bytebuddy/implementation/HashCodeMethod;
+#usingTypeHashOffset(Z)Lorg/easymock/bytebuddy/implementation/HashCodeMethod;
+#usingDefaultOffset()Lorg/easymock/bytebuddy/implementation/HashCodeMethod;
+#usingOffset(I)Lorg/easymock/bytebuddy/implementation/HashCodeMethod;
+#withIgnoredFields(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/implementation/HashCodeMethod;
+#withNonNullableFields(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/implementation/HashCodeMethod;
+#withMultiplier(I)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Composable
@5.0.0
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;

+###org/easymock/bytebuddy/implementation/Implementation$Compound$Composable
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/Implementation;Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)V
+#<init>(Ljava/util/List;Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/Implementation;)V
+#<init>(Ljava/util/List;)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$AbstractPropertyAccessorMethod
@5.0.0
+#getModifiers()I

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$AccessorMethod
@5.0.0
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$AccessorMethodDelegation
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$CacheValueField
@5.0.0
+#getType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$DelegationRecord
@5.0.0
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getSort()Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$Sort;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;
+#applyHead(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#applyBody(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyAttributes(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#applyCode(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#prepend(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)Lorg/easymock/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record;
+#getMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$Factory$WithFixedSuffix
@5.0.0
+#<init>(Ljava/lang/String;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;[deprecated]
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/Implementation$Context$Default$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$Default$Factory;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;[deprecated]
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$FieldCacheEntry
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$FieldGetter
@5.0.0
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$FieldGetterDelegation
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$FieldSetter
@5.0.0
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getParameters()Lorg/easymock/bytebuddy/description/method/ParameterList;
+#getExceptionTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDefaultValue()Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getInternalName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default$FieldSetterDelegation
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Context$Default
@5.0.0
+#isEnabled()Z
+#registerAccessorFor(Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#registerGetterFor(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#registerSetterFor(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#register(Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getAuxiliaryTypes()Ljava/util/List;
+#cache(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#drain(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$Drain;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V

+###org/easymock/bytebuddy/implementation/Implementation$Context$Disabled$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/Implementation$Context$Disabled$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$Disabled$Factory;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;[deprecated]
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;

+###org/easymock/bytebuddy/implementation/Implementation$Context$Disabled
@5.0.0
+#isEnabled()Z
+#getAuxiliaryTypes()Ljava/util/List;
+#drain(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$Drain;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V
+#register(Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#registerAccessorFor(Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#registerGetterFor(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#registerSetterFor(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#cache(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;

+###org/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView$AbstractBase
@5.0.0
+#getInstrumentedType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#getFrameGeneration()Lorg/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView
@5.0.0
+#isEnabled()Z
+#getAuxiliaryTypes()Ljava/util/List;
+#drain(Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer$Drain;Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory;)V

+###org/easymock/bytebuddy/implementation/Implementation$Context$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;[deprecated]
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lorg/easymock/bytebuddy/dynamic/scaffold/TypeInitializer;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$ExtractableView;

+###org/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration;
+#isActive()Z
+#same(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/util/List;)V
+#same1(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/util/List;)V
+#append(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/util/List;Ljava/util/List;)V
+#chop(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;ILjava/util/List;)V
+#full(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/util/List;Ljava/util/List;)V

+###org/easymock/bytebuddy/implementation/Implementation$Context
@5.0.0
+#register(Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#cache(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#getInstrumentedType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#getFrameGeneration()Lorg/easymock/bytebuddy/implementation/Implementation$Context$FrameGeneration;

+###org/easymock/bytebuddy/implementation/Implementation$Simple$Dispatcher
@5.0.0
+#apply(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/Implementation$Simple$ForDispatcher$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Simple$ForDispatcher
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Simple
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)V
+#<init>([Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#of(Lorg/easymock/bytebuddy/implementation/Implementation$Simple$Dispatcher;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#of(Lorg/easymock/bytebuddy/implementation/Implementation$Simple$Dispatcher;I)Lorg/easymock/bytebuddy/implementation/Implementation;
+#of(Lorg/easymock/bytebuddy/implementation/Implementation$Simple$Dispatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Prepareable;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#of(Lorg/easymock/bytebuddy/implementation/Implementation$Simple$Dispatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType$Prepareable;I)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation$AbstractBase
@5.0.0
+#<init>()V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation$Illegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation$Illegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation$Illegal;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#getMethodDescription()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#withCheckedCompatibilityTo(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation$Simple
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#getMethodDescription()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#withCheckedCompatibilityTo(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation
@5.0.0
+#getMethodDescription()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#withCheckedCompatibilityTo(Lorg/easymock/bytebuddy/description/method/MethodDescription$TypeToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/Implementation$Target$AbstractBase$DefaultMethodInvocation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/Implementation$Target$AbstractBase$DefaultMethodInvocation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation$Target$AbstractBase$DefaultMethodInvocation;
+#of(Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/implementation/Implementation$Target$AbstractBase$DefaultMethodInvocation;

+###org/easymock/bytebuddy/implementation/Implementation$Target$AbstractBase
@5.0.0
+#getInstrumentedType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#invokeDefault(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#invokeDefault(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#invokeDominant(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/Implementation$Target$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;Lorg/easymock/bytebuddy/ClassFileVersion;)Lorg/easymock/bytebuddy/implementation/Implementation$Target;

+###org/easymock/bytebuddy/implementation/Implementation$Target
@5.0.0
+#getInstrumentedType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getOriginType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;
+#invokeSuper(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#invokeDefault(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#invokeDefault(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#invokeDominant(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/Implementation
@5.0.0
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;

+###org/easymock/bytebuddy/implementation/InvocationHandlerAdapter$AssignerConfigurable
@5.0.0
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;

+###org/easymock/bytebuddy/implementation/InvocationHandlerAdapter$ForField$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvocationHandlerAdapter$ForField
@5.0.0
+#withoutMethodCache()Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter$WithoutPrivilegeConfiguration;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#withPrivilegedLookup()Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter$AssignerConfigurable;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvocationHandlerAdapter$ForInstance$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvocationHandlerAdapter$ForInstance
@5.0.0
+#withoutMethodCache()Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter$WithoutPrivilegeConfiguration;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#withPrivilegedLookup()Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter$AssignerConfigurable;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvocationHandlerAdapter$WithoutPrivilegeConfiguration
@5.0.0
+#withPrivilegedLookup()Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter$AssignerConfigurable;

+###org/easymock/bytebuddy/implementation/InvocationHandlerAdapter
@5.0.0
+#of(Ljava/lang/reflect/InvocationHandler;)Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter;
+#of(Ljava/lang/reflect/InvocationHandler;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter;
+#toField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter;
+#toField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter;
+#withoutMethodCache()Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter$WithoutPrivilegeConfiguration;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#withPrivilegedLookup()Lorg/easymock/bytebuddy/implementation/InvocationHandlerAdapter$AssignerConfigurable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$AbstractDelegator
@5.0.0
+#withBooleanValue([Z)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withByteValue([B)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withShortValue([S)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withCharacterValue([C)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withIntegerValue([I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withLongValue([J)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withFloatValue([F)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withDoubleValue([D)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withValue([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withReference(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withReference([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withType([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withInstance([Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withNullValue([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withNullValue([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withArgument([I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withArgument(I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withThis([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withThis([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withMethodArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withImplicitAndMethodArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withField([Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withEnumeration([Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withField(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;[Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$Appender
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/InvokeDynamic;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper$WrappingArgumentProvider
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ConstantPoolWrapper;
+#of(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForBooleanConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForByteConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForCharacterConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForClassConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForDoubleConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForEnumerationValue
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForField$WithExplicitType
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForField
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForFloatConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForInstance
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForIntegerConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodInstanceAndParameters
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodInstanceAndParameters;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodInstanceAndParameters;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodParameters
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodParameters;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForInterceptedMethodParameters;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForJavaConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForLongConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForMethodParameter$WithExplicitType
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForMethodParameter
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForNullValue
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForShortConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForStringConstant
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$ForThisInstance
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/util/List;)V
+#getLoadInstruction()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getLoadedTypes()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved
@5.0.0
+#getLoadInstruction()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getLoadedTypes()Ljava/util/List;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider$Resolved;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Default$Target
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Target$Resolved;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Default
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Default$Target;
+#appendArguments(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#appendArgument(Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#withoutArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#withNameProvider(Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$NameProvider;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#withReturnTypeProvider(Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ReturnTypeProvider;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$NameProvider$ForExplicitName
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$NameProvider$ForInterceptedMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$NameProvider$ForInterceptedMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$NameProvider$ForInterceptedMethod;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$NameProvider
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForExplicitType
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForInterceptedMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForInterceptedMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ReturnTypeProvider$ForInterceptedMethod;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ReturnTypeProvider
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Target$Resolved$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)V
+#getStackManipulation()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getInternalName()Ljava/lang/String;
+#getParameterTypes()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Target$Resolved
@5.0.0
+#getStackManipulation()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getInternalName()Ljava/lang/String;
+#getParameterTypes()Ljava/util/List;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Target
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Target$Resolved;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$Target;
+#appendArguments(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#appendArgument(Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ArgumentProvider;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#withoutArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#withNameProvider(Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$NameProvider;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#withReturnTypeProvider(Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider$ReturnTypeProvider;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$InvocationProvider;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$TerminationHandler
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/InvokeDynamic$TerminationHandler;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$TerminationHandler;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments
@5.0.0
+#withoutArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#withField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withField(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;[Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withEnumeration([Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withField([Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withImplicitAndMethodArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withMethodArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withThis([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withThis([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withArgument(I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withArgument([I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withNullValue([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withNullValue([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withInstance([Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withType([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withReference([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withReference(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withValue([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withDoubleValue([D)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withFloatValue([F)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withLongValue([J)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withIntegerValue([I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withCharacterValue([C)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withShortValue([S)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withByteValue([B)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withBooleanValue([Z)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitTarget
@5.0.0
+#invoke(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#invoke(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#invoke(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#invoke(Ljava/lang/String;Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#invoke(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType$OfArgument
@5.0.0
+#as(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType$OfField
@5.0.0
+#as(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType$OfInstance
@5.0.0
+#as(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;

+###org/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType
@5.0.0
+#as(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#as(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#withField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withField(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;[Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withEnumeration([Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withField([Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withImplicitAndMethodArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withMethodArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withThis([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withThis([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withArgument(I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withArgument([I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withNullValue([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withNullValue([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withInstance([Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withType([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withReference([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withReference(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withValue([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withDoubleValue([D)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withFloatValue([F)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withLongValue([J)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withIntegerValue([I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withCharacterValue([C)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withShortValue([S)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withByteValue([B)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withBooleanValue([Z)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;

+###org/easymock/bytebuddy/implementation/InvokeDynamic
@5.0.0
+#bootstrap(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitTarget;
+#bootstrap(Ljava/lang/reflect/Method;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitTarget;
+#bootstrap(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitTarget;
+#bootstrap(Ljava/lang/reflect/Constructor;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitTarget;
+#bootstrap(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitTarget;
+#bootstrap(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitTarget;
+#lambda(Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#lambda(Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#lambda(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#lambda(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitArguments;
+#withBooleanValue([Z)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withByteValue([B)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withShortValue([S)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withCharacterValue([C)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withIntegerValue([I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withLongValue([J)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withFloatValue([F)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withDoubleValue([D)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withValue([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withReference(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withReference([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withType([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withEnumeration([Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withInstance([Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withNullValue([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withNullValue([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withArgument([I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withArgument(I)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withThis([Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withThis([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withMethodArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withImplicitAndMethodArguments()Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withField([Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withField(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;[Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic;
+#withField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/InvokeDynamic$WithImplicitType;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/LoadedTypeInitializer$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;)V
+#<init>(Ljava/util/List;)V
+#onLoad(Ljava/lang/Class;)V
+#isAlive()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/LoadedTypeInitializer$ForStaticField
@5.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#onLoad(Ljava/lang/Class;)V
+#isAlive()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/LoadedTypeInitializer$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer$NoOp;
+#onLoad(Ljava/lang/Class;)V
+#isAlive()Z

+###org/easymock/bytebuddy/implementation/LoadedTypeInitializer
@5.0.0
+#onLoad(Ljava/lang/Class;)V
+#isAlive()Z

+###org/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;
+#getVisibility()Lorg/easymock/bytebuddy/description/modifier/Visibility;

+###org/easymock/bytebuddy/implementation/MethodAccessorFactory$Illegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$Illegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$Illegal;
+#registerAccessorFor(Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#registerGetterFor(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#registerSetterFor(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;

+###org/easymock/bytebuddy/implementation/MethodAccessorFactory
@5.0.0
+#registerAccessorFor(Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#registerGetterFor(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#registerSetterFor(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory$AccessType;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;

+###org/easymock/bytebuddy/implementation/MethodCall$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForField$ArgumentProvider
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForField$Factory
@5.0.0
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForField
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForInstance$Factory
@5.0.0
+#<init>(Ljava/lang/Object;)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForInstance
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription;)V
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForInstrumentedType$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForInstrumentedType$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForInstrumentedType$Factory;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForInstrumentedType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodCall$ArgumentProvider
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodCall$Factory
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/MethodCall;)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodCall
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/MethodCall$Appender;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;)V
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameter$Factory
@5.0.0
+#<init>(I)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameter$OfInstrumentedMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameter$OfInstrumentedMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameter$OfInstrumentedMethod;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameter
@5.0.0
+#<init>(ILorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameterArray$ForInstrumentedMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameterArray$ForInstrumentedMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameterArray$ForInstrumentedMethod;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameterArray
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/ParameterList;)V
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameterArrayElement$OfInvokedMethod
@5.0.0
+#<init>(I)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameterArrayElement$OfParameter
@5.0.0
+#<init>(II)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameterArrayElement
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/ParameterDescription;I)V
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForNullConstant
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForNullConstant;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForNullConstant;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForStackManipulation
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/reflect/Type;)V
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)V
+#of(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$Factory;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForThisReference$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForThisReference$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForThisReference$Factory;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ArgumentProvider;

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$ForThisReference
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Ljava/util/List;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader
@5.0.0
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/MethodCall$FieldSetting$Appender
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$FieldSetting$Appender;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$FieldSetting$Appender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;

+###org/easymock/bytebuddy/implementation/MethodCall$FieldSetting
@5.0.0
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodInvoker;

+###org/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$ForContextualInvocation
@5.0.0
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$ForDefaultMethodInvocation
@5.0.0
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$ForSuperMethodInvocation
@5.0.0
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$ForVirtualInvocation$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodInvoker;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$ForVirtualInvocation$WithImplicitType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$ForVirtualInvocation$WithImplicitType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$ForVirtualInvocation$WithImplicitType;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodInvoker;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/MethodCall$MethodInvoker$ForVirtualInvocation
@5.0.0
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodInvoker
@5.0.0
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/MethodCall$MethodLocator$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodLocator;

+###org/easymock/bytebuddy/implementation/MethodCall$MethodLocator$ForElementMatcher$Factory
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodLocator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodLocator$ForElementMatcher
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodLocator$ForExplicitMethod
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodLocator;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$MethodLocator$ForInstrumentedMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$MethodLocator$ForInstrumentedMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodLocator$ForInstrumentedMethod;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$MethodLocator;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/implementation/MethodCall$MethodLocator
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler;

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForConstructingInvocation
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForField$Factory
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForField$Location$ForExplicitField
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForField$Location$ForImplicitField
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForField$Location
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/field/FieldDescription;

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForField
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForMethodCall$Factory
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/MethodCall;)V
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForMethodCall$Resolved
@5.0.0
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForMethodCall
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForMethodParameter$Resolved
@5.0.0
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForMethodParameter
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForSelfOrStaticInvocation$Factory
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForSelfOrStaticInvocation$Factory;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForSelfOrStaticInvocation$Factory;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler;

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForSelfOrStaticInvocation$Resolved
@5.0.0
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForSelfOrStaticInvocation
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForValue$Factory
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$ForValue
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved
@5.0.0
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Simple
@5.0.0
+#make(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TargetHandler
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TargetHandler$Resolved;

+###org/easymock/bytebuddy/implementation/MethodCall$TerminationHandler$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TerminationHandler;

+###org/easymock/bytebuddy/implementation/MethodCall$TerminationHandler$FieldSetting$Explicit
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TerminationHandler;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TerminationHandler$FieldSetting$Implicit
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TerminationHandler;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TerminationHandler$FieldSetting
@5.0.0
+#prepare()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodCall$TerminationHandler$Simple
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/MethodCall$TerminationHandler$Simple;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall$TerminationHandler$Simple;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$TerminationHandler;
+#prepare()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/MethodCall$TerminationHandler
@5.0.0
+#prepare()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#toStackManipulation(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget
@5.0.0
+#on(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#on(Ljava/lang/Object;Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#on(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#on(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#onArgument(I)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#onField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#onField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#onField(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#onField(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#onMethodCall(Lorg/easymock/bytebuddy/implementation/MethodCall;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#onSuper()Lorg/easymock/bytebuddy/implementation/MethodCall;
+#onDefault()Lorg/easymock/bytebuddy/implementation/MethodCall;

+###org/easymock/bytebuddy/implementation/MethodCall
@5.0.0
+#invoke(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget;
+#invoke(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget;
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget;
+#invoke(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget;
+#invoke(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget;
+#invoke(Lorg/easymock/bytebuddy/implementation/MethodCall$MethodLocator$Factory;)Lorg/easymock/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget;
+#invokeSelf()Lorg/easymock/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget;
+#invokeSuper()Lorg/easymock/bytebuddy/implementation/MethodCall;
+#call(Ljava/util/concurrent/Callable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#run(Ljava/lang/Runnable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#construct(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#construct(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#with([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#with([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#with([Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#with([Lorg/easymock/bytebuddy/utility/JavaConstant;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withReference([Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withArgument([I)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withAllArguments()Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withArgumentArray()Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withArgumentArrayElements(I)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withArgumentArrayElements(II)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withArgumentArrayElements(III)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withThis()Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withOwnType()Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withField([Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withField(Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;[Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#withMethodCall(Lorg/easymock/bytebuddy/implementation/MethodCall;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#with(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#with(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#with([Lorg/easymock/bytebuddy/implementation/MethodCall$ArgumentLoader$Factory;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#with(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/MethodCall;
+#setsField(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/implementation/MethodCall$FieldSetting;
+#setsField(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/MethodCall$FieldSetting;
+#setsField(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/implementation/MethodCall$FieldSetting;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled$ForConstruction
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#invoke()Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;
+#getRecords()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled$ForField
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#invoke()Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;
+#getRecords()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled$ForMethodReturn
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#invoke()Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;
+#getRecords()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled$ForStaticCall
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#invoke()Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;
+#getRecords()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#invoke()Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;
+#getRecords()Ljava/util/List;

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$ForConstruction
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$ForField$WithInstance
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$ForField$WithLookup
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$ForField
@5.0.0
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$ForMethodReturn
@5.0.0
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$ForStaticMethod
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate
@5.0.0
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$ImplementationDelegate$Compiled;

+###org/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties
@5.0.0
+#withResolvers([Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties;
+#withResolvers(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties;
+#withBinders([Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties;
+#withBinders(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties;
+#withBindingResolver(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties;
+#filter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties;
+#to(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toConstructor(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toConstructor(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toMethodReturnOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toMethodReturnOf(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/MethodDelegation
@5.0.0
+#to(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#to(Ljava/lang/Object;Lorg/easymock/bytebuddy/description/type/TypeDefinition;Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toConstructor(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toConstructor(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toField(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toField(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/FieldLocator$Factory;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toMethodReturnOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#toMethodReturnOf(Ljava/lang/String;Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Compiler;)Lorg/easymock/bytebuddy/implementation/MethodDelegation;
+#withDefaultConfiguration()Lorg/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties;
+#withEmptyConfiguration()Lorg/easymock/bytebuddy/implementation/MethodDelegation$WithCustomProperties;
+#withAssigner(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/StubMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/StubMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/StubMethod;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;

+###org/easymock/bytebuddy/implementation/SuperMethodCall$Appender$TerminationHandler
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/SuperMethodCall$Appender$TerminationHandler;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/SuperMethodCall$Appender$TerminationHandler;

+###org/easymock/bytebuddy/implementation/SuperMethodCall$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/SuperMethodCall$WithoutReturn
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/SuperMethodCall$WithoutReturn;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/SuperMethodCall$WithoutReturn;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;

+###org/easymock/bytebuddy/implementation/SuperMethodCall
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/SuperMethodCall;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/SuperMethodCall;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#andThen(Lorg/easymock/bytebuddy/implementation/Implementation$Composable;)Lorg/easymock/bytebuddy/implementation/Implementation$Composable;

+###org/easymock/bytebuddy/implementation/ToStringMethod$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/ToStringMethod$PrefixResolver$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/ToStringMethod$PrefixResolver$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/ToStringMethod$PrefixResolver$Default;

+###org/easymock/bytebuddy/implementation/ToStringMethod$PrefixResolver$ForFixedValue
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/ToStringMethod$PrefixResolver
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/ToStringMethod$ValueConsumer
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/ToStringMethod$ValueConsumer;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/ToStringMethod$ValueConsumer;
+#isValid()Z

+###org/easymock/bytebuddy/implementation/ToStringMethod
@5.0.0
+#prefixedByFullyQualifiedClassName()Lorg/easymock/bytebuddy/implementation/ToStringMethod;
+#prefixedByCanonicalClassName()Lorg/easymock/bytebuddy/implementation/ToStringMethod;
+#prefixedBySimpleClassName()Lorg/easymock/bytebuddy/implementation/ToStringMethod;
+#prefixedBy(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/ToStringMethod;
+#prefixedBy(Lorg/easymock/bytebuddy/implementation/ToStringMethod$PrefixResolver;)Lorg/easymock/bytebuddy/implementation/ToStringMethod;
+#withIgnoredFields(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/implementation/ToStringMethod;
+#withTokens(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/Implementation;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/ToStringMethod$Appender;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Default
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/lang/String;Ljava/lang/Object;)V
+#append(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#append(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;ILjava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender$ForTypeAnnotations
@5.0.0
+#ofSuperClass(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;
+#ofInterfaceType(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;
+#ofFieldType(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;
+#ofMethodReturnType(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;
+#ofMethodParameterType(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;
+#ofExceptionType(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;
+#ofReceiverType(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic$Visitor;
+#ofTypeVariable(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;ZLjava/util/List;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#ofTypeVariable(Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;ZILjava/util/List;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target$OnField
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;)V
+#visit(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visit(Ljava/lang/String;ZILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target$OnMethod
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#visit(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visit(Ljava/lang/String;ZILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target$OnMethodParameter
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;I)V
+#visit(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visit(Ljava/lang/String;ZILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target$OnRecordComponent
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;)V
+#visit(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visit(Ljava/lang/String;ZILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target$OnType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;)V
+#visit(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visit(Ljava/lang/String;ZILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target
@5.0.0
+#visit(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visit(Ljava/lang/String;ZILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/implementation/attribute/AnnotationAppender
@5.0.0
+#append(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;
+#append(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;ILjava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender;

+###org/easymock/bytebuddy/implementation/attribute/AnnotationRetention
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;
+#of(Z)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationRetention;
+#isEnabled()Z

+###org/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Default;
+#on(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;
+#on(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;
+#on(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;
+#on(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;

+###org/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter$Factory
@5.0.0
+#on(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;
+#on(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;
+#on(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;
+#on(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;

+###org/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter
@5.0.0
+#isRelevant(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Z

+###org/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;)V
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Explicit
@5.0.0
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Factory$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Factory;)V
+#<init>(Ljava/util/List;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;

+###org/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$ForInstrumentedField
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$ForInstrumentedField;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$ForInstrumentedField;
+#apply(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;

+###org/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender$NoOp;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/FieldAttributeAppender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;)V
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Explicit$Target$OnMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Explicit$Target$OnMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Explicit$Target$OnMethod;
+#make(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target;

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Explicit$Target$OnMethodParameter
@5.0.0
+#make(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Explicit$Target
@5.0.0
+#make(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/attribute/AnnotationAppender$Target;

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Explicit
@5.0.0
+#<init>(ILjava/util/List;)V
+#<init>(Ljava/util/List;)V
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;
+#ofMethodAnnotations(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;
+#ofParameterAnnotations(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory;)V
+#<init>(Ljava/util/List;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$ForInstrumentedMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$ForInstrumentedMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$ForInstrumentedMethod;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$ForReceiverType
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender$NoOp;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/MethodAttributeAppender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;)V
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Explicit
@5.0.0
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Factory$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Factory;)V
+#<init>(Ljava/util/List;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$Factory
@5.0.0
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;

+###org/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$ForInstrumentedRecordComponent
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$ForInstrumentedRecordComponent;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$ForInstrumentedRecordComponent;
+#apply(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;

+###org/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender$NoOp;
+#make(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender;
+#apply(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/RecordComponentAttributeAppender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender;)V
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$Explicit
@5.0.0
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$ForInstrumentedType$Differentiating
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$ForInstrumentedType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$ForInstrumentedType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$ForInstrumentedType;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender$NoOp;
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/attribute/TypeAttributeAppender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/attribute/AnnotationValueFilter;)V

+###org/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy$Enumerating
@5.0.0
+#<init>(Ljava/lang/String;)V
+#name(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType;)Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy$Suffixing
@5.0.0
+#<init>(Ljava/lang/String;)V
+#name(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType;)Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy$SuffixingRandom
@5.0.0
+#<init>(Ljava/lang/String;)V
+#name(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType;)Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy
@5.0.0
+#name(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType;)Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType$SignatureRelevant
@5.0.0

+###org/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType
@5.0.0
+#make(Ljava/lang/String;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType;
+#getSuffix()Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$AssignableSignatureCall
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;Z)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$ConstructorCall$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$ConstructorCall
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$ConstructorCall;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$ConstructorCall;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;

+###org/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$MethodCall$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$MethodCall
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$PrecomputedMethodGraph
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$PrecomputedMethodGraph;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy$PrecomputedMethodGraph;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDefinition;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;
+#compile(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/dynamic/scaffold/MethodGraph$Linked;[deprecated]

+###org/easymock/bytebuddy/implementation/auxiliary/MethodCallProxy
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;Z)V
+#<init>(Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;ZLorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)V
+#getSuffix()Ljava/lang/String;
+#make(Ljava/lang/String;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/PrivilegedMemberLookupAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/auxiliary/PrivilegedMemberLookupAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/auxiliary/PrivilegedMemberLookupAction;
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/auxiliary/AuxiliaryType;
+#getSuffix()Ljava/lang/String;
+#make(Ljava/lang/String;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType;

+###org/easymock/bytebuddy/implementation/auxiliary/TrivialType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/auxiliary/TrivialType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/auxiliary/TrivialType;
+#getSuffix()Ljava/lang/String;
+#make(Ljava/lang/String;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType;

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$AbstractMethodErrorThrow
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/auxiliary/TypeProxy$AbstractMethodErrorThrow;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/auxiliary/TypeProxy$AbstractMethodErrorThrow;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$ForDefaultMethod
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Z)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$ForSuperMethodByConstructor
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Ljava/util/List;ZZ)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$ForSuperMethodByReflectionFactory
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;ZZ)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$InvocationFactory$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/auxiliary/TypeProxy$InvocationFactory$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/auxiliary/TypeProxy$InvocationFactory$Default;

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$InvocationFactory
@5.0.0
+#invoke(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$MethodCall$Appender$AccessorMethodInvocation
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$MethodCall$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$MethodCall
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$SilentConstruction$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy$SilentConstruction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/auxiliary/TypeProxy$SilentConstruction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/auxiliary/TypeProxy$SilentConstruction;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;

+###org/easymock/bytebuddy/implementation/auxiliary/TypeProxy
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/auxiliary/TypeProxy$InvocationFactory;ZZ)V
+#getSuffix()Ljava/lang/String;
+#make(Ljava/lang/String;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver$ParameterIndexToken
@5.0.0
+#<init>(I)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver$PrimitiveTypePrecedence
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver$PrimitiveTypePrecedence;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver$PrimitiveTypePrecedence;
+#forPrimitive(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver$PrimitiveTypePrecedence;
+#resolve(Lorg/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver$PrimitiveTypePrecedence;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/ArgumentTypeResolver;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/DeclaringTypeResolver
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/DeclaringTypeResolver;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/DeclaringTypeResolver;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver;)V
+#<init>(Ljava/util/List;)V
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Directional
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Directional;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Directional;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$NoOp;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;
+#isUnresolved()Z
+#merge(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver$Default;
+#resolve(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver;Lorg/easymock/bytebuddy/description/method/MethodDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver$StreamWriting
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;Ljava/io/PrintStream;)V
+#toSystemOut()Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;
+#toSystemOut(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;
+#toSystemError()Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;
+#toSystemError(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;
+#resolve(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver;Lorg/easymock/bytebuddy/description/method/MethodDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver$Unique
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver$Unique;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver$Unique;
+#resolve(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver;Lorg/easymock/bytebuddy/description/method/MethodDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver;Lorg/easymock/bytebuddy/description/method/MethodDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding$Builder$Build
@5.0.0
+#isValid()Z
+#getTargetParameterIndex(Ljava/lang/Object;)Ljava/lang/Integer;
+#getTarget()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding$Builder
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#append(Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;)Z
+#build(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding$Illegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding$Illegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding$Illegal;
+#getTargetParameterIndex(Ljava/lang/Object;)Ljava/lang/Integer;
+#getTarget()Lorg/easymock/bytebuddy/description/method/MethodDescription;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding
@5.0.0
+#getTargetParameterIndex(Ljava/lang/Object;)Ljava/lang/Integer;
+#getTarget()Lorg/easymock/bytebuddy/description/method/MethodDescription;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker$Simple
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker$Simple;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker$Simple;
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker$Virtual
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker
@5.0.0
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding$Anonymous
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#getIdentificationToken()Ljava/lang/Object;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding$Illegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding$Illegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding$Illegal;
+#getIdentificationToken()Ljava/lang/Void;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#getIdentificationToken()Ljava/lang/Object;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding$Unique
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/Object;)V
+#of(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding$Unique;
+#getIdentificationToken()Ljava/lang/Object;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding
@5.0.0
+#getIdentificationToken()Ljava/lang/Object;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$Processor
@5.0.0
+#<init>(Ljava/util/List;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$BindingResolver;)V
+#bind(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$TerminationHandler;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$Record$Illegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$Record$Illegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$Record$Illegal;
+#bind(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$TerminationHandler;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$Record
@5.0.0
+#bind(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$TerminationHandler;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$TerminationHandler$Default
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$TerminationHandler$Default;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$TerminationHandler$Default;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$TerminationHandler
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bind/MethodDelegationBinder
@5.0.0
+#compile(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$Record;

+###org/easymock/bytebuddy/implementation/bind/MethodNameEqualityResolver
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/MethodNameEqualityResolver;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/MethodNameEqualityResolver;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/ParameterLengthResolver
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/ParameterLengthResolver;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/ParameterLengthResolver;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/annotation/AllArguments$Assignment
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/AllArguments$Assignment;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/AllArguments$Assignment;

+###org/easymock/bytebuddy/implementation/bind/annotation/AllArguments$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/AllArguments$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/AllArguments$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/AllArguments
@5.0.0
+#value()Lorg/easymock/bytebuddy/implementation/bind/annotation/AllArguments$Assignment;
+#includeSelf()Z
+#nullIfEmpty()Z

+###org/easymock/bytebuddy/implementation/bind/annotation/Argument$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Argument$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Argument$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/Argument$BindingMechanic
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Argument$BindingMechanic;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Argument$BindingMechanic;

+###org/easymock/bytebuddy/implementation/bind/annotation/Argument
@5.0.0
+#value()I
+#bindingMechanic()Lorg/easymock/bytebuddy/implementation/bind/annotation/Argument$BindingMechanic;

+###org/easymock/bytebuddy/implementation/bind/annotation/BindingPriority$Resolver
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/BindingPriority$Resolver;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/BindingPriority$Resolver;
+#resolve(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$AmbiguityResolver$Resolution;

+###org/easymock/bytebuddy/implementation/bind/annotation/BindingPriority
@5.0.0
+#value()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Default$Binder$TypeLocator$ForParameterType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Default$Binder$TypeLocator$ForParameterType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Default$Binder$TypeLocator$ForParameterType;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/implementation/bind/annotation/Default$Binder$TypeLocator$ForType
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Default$Binder$TypeLocator
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/implementation/bind/annotation/Default$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Default$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Default$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/Default
@5.0.0
+#serializableProxy()Z
+#proxyType()Ljava/lang/Class;

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultCall$Binder$DefaultMethodLocator$Explicit
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultCall$Binder$DefaultMethodLocator$Implicit
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/DefaultCall$Binder$DefaultMethodLocator$Implicit;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/DefaultCall$Binder$DefaultMethodLocator$Implicit;
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultCall$Binder$DefaultMethodLocator
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultCall$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/DefaultCall$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/DefaultCall$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultCall
@5.0.0
+#targetType()Ljava/lang/Class;
+#serializableProxy()Z
+#nullIfImpossible()Z

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder$DelegationMethod
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder$MethodLocator$ForExplicitType
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder$MethodLocator$ForImplicitType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder$MethodLocator$ForImplicitType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder$MethodLocator$ForImplicitType;
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder$MethodLocator
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/DefaultMethod
@5.0.0
+#cached()Z
+#privileged()Z
+#targetType()Ljava/lang/Class;
+#nullIfImpossible()Z

+###org/easymock/bytebuddy/implementation/bind/annotation/Empty$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Empty$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Empty$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/Empty
@5.0.0

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$AccessorProxy
@5.0.0
+#getSuffix()Ljava/lang/String;
+#make(Ljava/lang/String;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldGetter$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldGetter
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$Factory$Duplex
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$Factory$Simplex
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$Factory
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver;

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$ForGetter
@5.0.0
+#isResolved()Z
+#getProxyType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$ForGetterSetterPair
@5.0.0
+#isResolved()Z
+#getProxyType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$ForSetter
@5.0.0
+#isResolved()Z
+#getProxyType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$Unresolved
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$Unresolved;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver$Unresolved;
+#isResolved()Z
+#getProxyType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldResolver
@5.0.0
+#isResolved()Z
+#getProxyType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#apply(Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;Lorg/easymock/bytebuddy/description/field/FieldDescription;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType$Builder;

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldSetter$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$FieldSetter
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$InstanceFieldConstructor$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$InstanceFieldConstructor
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$StaticFieldConstructor
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$StaticFieldConstructor;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder$StaticFieldConstructor;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy$Binder
@5.0.0
+#install(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#install(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#install(Ljava/lang/Class;Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#install(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#getHandledType()Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldProxy
@5.0.0
+#serializableProxy()Z
+#value()Ljava/lang/String;
+#declaringType()Ljava/lang/Class;

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldValue$Binder$Delegate
@5.0.0
+#getHandledType()Ljava/lang/Class;

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldValue$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldValue$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/FieldValue$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/FieldValue
@5.0.0
+#value()Ljava/lang/String;
+#declaringType()Ljava/lang/Class;

+###org/easymock/bytebuddy/implementation/bind/annotation/IgnoreForBinding$Verifier
@5.0.0
+#check(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Z

+###org/easymock/bytebuddy/implementation/bind/annotation/IgnoreForBinding
@5.0.0

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$DefaultMethodLocator$Explicit
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$DefaultMethodLocator$Implicit
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$DefaultMethodLocator$Implicit;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$DefaultMethodLocator$Implicit;
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$DefaultMethodLocator
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/Implementation$SpecialMethodInvocation;

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$RedirectionProxy$InstanceFieldConstructor$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$RedirectionProxy$InstanceFieldConstructor
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$RedirectionProxy$MethodCall$Appender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$RedirectionProxy$MethodCall
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$RedirectionProxy$StaticFieldConstructor
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$RedirectionProxy$StaticFieldConstructor;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$RedirectionProxy$StaticFieldConstructor;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder$RedirectionProxy
@5.0.0
+#getSuffix()Ljava/lang/String;
+#make(Ljava/lang/String;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph$Binder
@5.0.0
+#install(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#install(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Morph
@5.0.0
+#serializableProxy()Z
+#defaultMethod()Z
+#defaultTarget()Ljava/lang/Class;

+###org/easymock/bytebuddy/implementation/bind/annotation/Origin$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Origin$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Origin$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/Origin
@5.0.0
+#cache()Z
+#privileged()Z

+###org/easymock/bytebuddy/implementation/bind/annotation/Pipe$Binder$RedirectionProxy$ConstructorCall
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Pipe$Binder$RedirectionProxy$ConstructorCall;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Pipe$Binder$RedirectionProxy$ConstructorCall;
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;

+###org/easymock/bytebuddy/implementation/bind/annotation/Pipe$Binder$RedirectionProxy$MethodCall
@5.0.0
+#prepare(Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;)Lorg/easymock/bytebuddy/dynamic/scaffold/InstrumentedType;
+#appender(Lorg/easymock/bytebuddy/implementation/Implementation$Target;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Pipe$Binder$RedirectionProxy
@5.0.0
+#getSuffix()Ljava/lang/String;
+#make(Ljava/lang/String;Lorg/easymock/bytebuddy/ClassFileVersion;Lorg/easymock/bytebuddy/implementation/MethodAccessorFactory;)Lorg/easymock/bytebuddy/dynamic/DynamicType;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Pipe$Binder
@5.0.0
+#install(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#install(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Pipe
@5.0.0
+#serializableProxy()Z

+###org/easymock/bytebuddy/implementation/bind/annotation/RuntimeType$Verifier
@5.0.0
+#check(Lorg/easymock/bytebuddy/description/annotation/AnnotationSource;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;

+###org/easymock/bytebuddy/implementation/bind/annotation/RuntimeType
@5.0.0

+###org/easymock/bytebuddy/implementation/bind/annotation/StubValue$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/StubValue$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/StubValue$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/StubValue
@5.0.0

+###org/easymock/bytebuddy/implementation/bind/annotation/Super$Binder$TypeLocator$ForInstrumentedType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Binder$TypeLocator$ForInstrumentedType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Binder$TypeLocator$ForInstrumentedType;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/implementation/bind/annotation/Super$Binder$TypeLocator$ForParameterType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Binder$TypeLocator$ForParameterType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Binder$TypeLocator$ForParameterType;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/implementation/bind/annotation/Super$Binder$TypeLocator$ForType
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/Super$Binder$TypeLocator
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/implementation/bind/annotation/Super$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/Super$Instantiation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Instantiation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Instantiation;

+###org/easymock/bytebuddy/implementation/bind/annotation/Super
@5.0.0
+#strategy()Lorg/easymock/bytebuddy/implementation/bind/annotation/Super$Instantiation;
+#ignoreFinalizer()Z
+#serializableProxy()Z
+#constructorParameters()[Ljava/lang/Class;
+#proxyType()Ljava/lang/Class;

+###org/easymock/bytebuddy/implementation/bind/annotation/SuperCall$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/SuperCall$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/SuperCall$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/SuperCall
@5.0.0
+#serializableProxy()Z
+#fallbackToDefault()Z
+#nullIfImpossible()Z

+###org/easymock/bytebuddy/implementation/bind/annotation/SuperMethod$Binder$DelegationMethod
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/SuperMethod$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/SuperMethod$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/SuperMethod$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/SuperMethod
@5.0.0
+#cached()Z
+#privileged()Z
+#fallbackToDefault()Z
+#nullIfImpossible()Z

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound
@5.0.0
+#isBound()Z
+#bind(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound$DefaultArgument
@5.0.0
+#value()I
+#bindingMechanic()Lorg/easymock/bytebuddy/implementation/bind/annotation/Argument$BindingMechanic;
+#annotationType()Ljava/lang/Class;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound
@5.0.0
+#isBound()Z
+#bind(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler
@5.0.0
+#isBound()Z
+#bind(Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$DelegationProcessor
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFieldBinding
@5.0.0
+#<init>()V
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFixedValue$OfConstant
@5.0.0
+#of(Ljava/lang/Class;Ljava/lang/Object;)Lorg/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder;
+#getHandledType()Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder$ForFixedValue
@5.0.0
+#<init>()V
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$ParameterBinder
@5.0.0
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder$Record
@5.0.0
+#bind(Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$TerminationHandler;Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodInvoker;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$MethodBinding;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/TargetMethodAnnotationDrivenBinder
@5.0.0
+#of(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder;
+#compile(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$Record;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bind/annotation/This$Binder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bind/annotation/This$Binder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bind/annotation/This$Binder;
+#getHandledType()Ljava/lang/Class;
+#bind(Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription$Loadable;Lorg/easymock/bytebuddy/description/method/MethodDescription;Lorg/easymock/bytebuddy/description/method/ParameterDescription;Lorg/easymock/bytebuddy/implementation/Implementation$Target;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bind/MethodDelegationBinder$ParameterBinding;

+###org/easymock/bytebuddy/implementation/bind/annotation/This
@5.0.0
+#optional()Z

+###org/easymock/bytebuddy/implementation/bytecode/Addition
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Addition;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Addition;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender;)V
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Simple
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#<init>(Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size
@5.0.0
+#<init>(II)V
+#getOperandStackSize()I
+#getLocalVariableSize()I
+#merge(Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/ByteCodeAppender$Size;

+###org/easymock/bytebuddy/implementation/bytecode/Division
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Division;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Division;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/Duplication$WithFlip
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Duplication$WithFlip;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Duplication$WithFlip;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/Duplication
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Duplication;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Duplication;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/Duplication;
+#flipOver(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/Multiplication
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Multiplication;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Multiplication;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/Remainder
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Remainder;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Remainder;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/Removal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Removal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Removal;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/ShiftLeft
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/ShiftLeft;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/ShiftLeft;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/ShiftRight$Unsigned
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/ShiftRight$Unsigned;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/ShiftRight$Unsigned;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/ShiftRight
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/ShiftRight;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/ShiftRight;
+#toUnsigned()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/StackManipulation$AbstractBase
@5.0.0
+#<init>()V
+#isValid()Z

+###org/easymock/bytebuddy/implementation/bytecode/StackManipulation$Compound
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#<init>(Ljava/util/List;)V
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/StackManipulation$Illegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Illegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Illegal;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/StackManipulation$Simple$Dispatcher
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/StackManipulation$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Simple$Dispatcher;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size
@5.0.0
+#<init>(II)V
+#getSizeImpact()I
+#getMaximalSize()I
+#aggregate(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/StackManipulation$Trivial
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Trivial;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Trivial;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/StackManipulation
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/StackSize
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#of(Ljava/lang/Class;)Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#of(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;
+#of([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)I
+#of(Ljava/util/Collection;)I
+#getSize()I
+#toIncreasingSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#toDecreasingSize()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#maximum(Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;)Lorg/easymock/bytebuddy/implementation/bytecode/StackSize;

+###org/easymock/bytebuddy/implementation/bytecode/Subtraction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Subtraction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Subtraction;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/Throw
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/Throw;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/Throw;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/TypeCreation
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/Assigner$EqualTypesOnly
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$EqualTypesOnly;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$EqualTypesOnly;

+###org/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Refusing
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Refusing;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Refusing;
+#assign(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
+#of(Z)Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;
+#isDynamic()Z

+###org/easymock/bytebuddy/implementation/bytecode/assign/Assigner
@5.0.0
+#assign(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/assign/InstanceCheck
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/TypeCasting
@5.0.0
+#to(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveBoxingDelegate
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveBoxingDelegate;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveBoxingDelegate;
+#forPrimitive(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveBoxingDelegate;
+#assignBoxedTo(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveTypeAwareAssigner
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)V
+#assign(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate$ExplicitlyTypedUnboxingResponsible
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate$ExplicitlyTypedUnboxingResponsible;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate$ExplicitlyTypedUnboxingResponsible;
+#assignUnboxedTo(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate$ImplicitlyTypedUnboxingResponsible
@5.0.0
+#assignUnboxedTo(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate$UnboxingResponsible
@5.0.0
+#assignUnboxedTo(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate;
+#forPrimitive(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate;
+#forReferenceType(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveUnboxingDelegate$UnboxingResponsible;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveWideningDelegate$WideningStackManipulation
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveWideningDelegate
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveWideningDelegate;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveWideningDelegate;
+#forPrimitive(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveWideningDelegate;
+#widenTo(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/assign/primitive/VoidAwareAssigner
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner;)V
+#assign(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner$IsAssignableToVisitor$OfGenericArray
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner$IsAssignableToVisitor$OfManifestType
@5.0.0
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner$IsAssignableToVisitor$OfNonGenericType
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner$IsAssignableToVisitor$OfParameterizedType
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner$IsAssignableToVisitor$OfSimpleType
@5.0.0
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner$IsAssignableToVisitor$OfWildcard
@5.0.0
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner$IsAssignableToVisitor
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)V
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Boolean;
+#onNonGenericType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onTypeVariable(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onParameterizedType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onWildcard(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#onGenericArray(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/reference/GenericTypeAwareAssigner;
+#assign(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/assign/reference/ReferenceTypeAwareAssigner
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/assign/reference/ReferenceTypeAwareAssigner;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/assign/reference/ReferenceTypeAwareAssigner;
+#assign(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;Lorg/easymock/bytebuddy/implementation/bytecode/assign/Assigner$Typing;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayAccess$Loader
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayAccess$Putter
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayAccess
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/collection/ArrayAccess;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/collection/ArrayAccess;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/collection/ArrayAccess;
+#load()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#store()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#forEach(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayFactory$ArrayCreator$ForPrimitiveType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/collection/ArrayFactory$ArrayCreator$ForPrimitiveType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/collection/ArrayFactory$ArrayCreator$ForPrimitiveType;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#getStorageOpcode()I

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayFactory$ArrayCreator$ForReferenceType
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#getStorageOpcode()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayFactory$ArrayCreator
@5.0.0
+#getStorageOpcode()I

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayFactory$ArrayStackManipulation
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayFactory
@5.0.0
+#forType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/implementation/bytecode/collection/ArrayFactory;
+#withValues(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/collection/ArrayLength
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/collection/ArrayLength;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/collection/ArrayLength;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/collection/CollectionFactory
@5.0.0
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#withValues(Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/constant/ClassConstant$ForReferenceType
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/ClassConstant
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/ClassConstant;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/ClassConstant;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/constant/DefaultValue
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/DefaultValue;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/DefaultValue;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/constant/DoubleConstant$ConstantPool
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/DoubleConstant
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/DoubleConstant;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/DoubleConstant;
+#forValue(D)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/constant/FieldConstant$Cached
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;)V
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/bytecode/constant/FieldConstant
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)V
+#cached()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/bytecode/constant/FloatConstant$ConstantPool
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/FloatConstant
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/FloatConstant;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/FloatConstant;
+#forValue(F)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/constant/IntegerConstant$ConstantPool
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/IntegerConstant$SingleBytePush
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/IntegerConstant$TwoBytePush
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/IntegerConstant
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/IntegerConstant;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/IntegerConstant;
+#forValue(Z)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#forValue(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/constant/JavaConstantValue$Visitor
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/JavaConstantValue$Visitor;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/JavaConstantValue$Visitor;
+#onValue(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Ljava/lang/Object;
+#onType(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#onMethodType(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#onMethodHandle(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;)Lorg/easymock/bytebuddy/jar/asm/Handle;
+#onDynamic(Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;)Lorg/easymock/bytebuddy/jar/asm/ConstantDynamic;
+#onDynamic(Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;)Ljava/lang/Object;
+#onMethodHandle(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;)Ljava/lang/Object;
+#onMethodType(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;)Ljava/lang/Object;
+#onType(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Ljava/lang/Object;

+###org/easymock/bytebuddy/implementation/bytecode/constant/JavaConstantValue
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/utility/JavaConstant;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/LongConstant$ConstantPool
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/LongConstant
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/LongConstant;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/LongConstant;
+#forValue(J)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$CachedConstructor
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$CachedMethod
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$CanCache
@5.0.0
+#cached()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$CanCacheIllegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$CanCacheIllegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$CanCacheIllegal;
+#cached()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$ForConstructor
@5.0.0
+#cached()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$ForMethod
@5.0.0
+#cached()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$PrivilegedLookup
@5.0.0
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#cached()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant
@5.0.0
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$CanCache;
+#ofPrivileged(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/MethodConstant$CanCache;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/implementation/bytecode/constant/NullConstant
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/constant/NullConstant;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/constant/NullConstant;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/constant/SerializedConstant
@5.0.0
+#of(Ljava/io/Serializable;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/constant/TextConstant
@5.0.0
+#<init>(Ljava/lang/String;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/FieldAccess$AccessDispatcher$FieldGetInstruction
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/FieldAccess$AccessDispatcher$FieldPutInstruction
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/FieldAccess$AccessDispatcher
@5.0.0
+#read()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#write()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/FieldAccess$Defined
@5.0.0
+#read()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#write()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/member/FieldAccess$OfGenericField
@5.0.0
+#read()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#write()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/FieldAccess
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/member/FieldAccess;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/member/FieldAccess;
+#forEnumeration(Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#forField(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/implementation/bytecode/member/FieldAccess$Defined;
+#forField(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/member/FieldAccess$Defined;

+###org/easymock/bytebuddy/implementation/bytecode/member/HandleInvocation
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$DynamicInvocation
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation;Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/util/List;)V
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$HandleInvocation
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$HandleType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$HandleType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$HandleType;

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$IllegalInvocation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$IllegalInvocation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$IllegalInvocation;
+#virtual(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#special(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#dynamic(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#onHandle(Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$HandleType;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$Invocation
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#virtual(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#special(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#dynamic(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#onHandle(Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$HandleType;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$OfGenericMethod
@5.0.0
+#virtual(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#special(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#dynamic(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#onHandle(Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$HandleType;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$WithImplicitInvocationTargetType
@5.0.0
+#virtual(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#special(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#dynamic(Ljava/lang/String;Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;Ljava/util/List;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#onHandle(Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$HandleType;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation;
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$WithImplicitInvocationTargetType;
+#invoke(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodInvocation$WithImplicitInvocationTargetType;

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodReturn
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodReturn;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodReturn;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#isValid()Z
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$MethodLoading$TypeCastingHandler$ForBridgeTarget
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#ofIndex(Lorg/easymock/bytebuddy/description/type/TypeDescription;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$MethodLoading$TypeCastingHandler$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$MethodLoading$TypeCastingHandler$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$MethodLoading$TypeCastingHandler$NoOp;
+#ofIndex(Lorg/easymock/bytebuddy/description/type/TypeDescription;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$MethodLoading$TypeCastingHandler
@5.0.0
+#ofIndex(Lorg/easymock/bytebuddy/description/type/TypeDescription;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$MethodLoading
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#prependThisReference()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#asBridgeOf(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$MethodLoading;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$OffsetIncrementing
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$OffsetLoading
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$OffsetWriting
@5.0.0
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/implementation/Implementation$Context;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation$Size;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess
@5.0.0
+#values()[Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess;
+#allArgumentsOf(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/member/MethodVariableAccess$MethodLoading;
+#loadThis()Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#loadFrom(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#storeAt(I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#increment(II)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#load(Lorg/easymock/bytebuddy/description/method/ParameterDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#store(Lorg/easymock/bytebuddy/description/method/ParameterDescription;)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;
+#increment(Lorg/easymock/bytebuddy/description/method/ParameterDescription;I)Lorg/easymock/bytebuddy/implementation/bytecode/StackManipulation;

+###org/easymock/bytebuddy/matcher/AccessibilityMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/AnnotationTargetMatcher
@5.0.0
+#<init>(Ljava/lang/annotation/ElementType;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/AnnotationTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ArrayTypeMatcher
@5.0.0
+#<init>()V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/BooleanMatcher
@5.0.0
+#of(Z)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#<init>(Z)V
+#matches(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/CachingMatcher$WithInlineEviction
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/concurrent/ConcurrentMap;I)V

+###org/easymock/bytebuddy/matcher/CachingMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/concurrent/ConcurrentMap;)V
+#matches(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ClassLoaderHierarchyMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#matches(Ljava/lang/ClassLoader;)Z
+#toString()Ljava/lang/String;
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ClassLoaderParentMatcher
@5.0.0
+#<init>(Ljava/lang/ClassLoader;)V
+#matches(Ljava/lang/ClassLoader;)Z
+#toString()Ljava/lang/String;
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/CollectionElementMatcher
@5.0.0
+#<init>(ILorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/CollectionErasureMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/CollectionItemMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/CollectionOneToOneMatcher
@5.0.0
+#<init>(Ljava/util/List;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/CollectionSizeMatcher
@5.0.0
+#<init>(I)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/DeclaringAnnotationMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/DeclaringFieldMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/DeclaringMethodMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/DeclaringTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/DefinedShapeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/DescriptorMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ElementMatcher$Junction$AbstractBase
@5.0.0
+#<init>()V
+#and(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#or(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;

+###org/easymock/bytebuddy/matcher/ElementMatcher$Junction$Conjunction
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#<init>(Ljava/util/List;)V
+#matches(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ElementMatcher$Junction$Disjunction
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#<init>(Ljava/util/List;)V
+#matches(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ElementMatcher$Junction$ForNonNullValues
@5.0.0
+#<init>()V
+#matches(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ElementMatcher$Junction
@5.0.0
+#and(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#or(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;

+###org/easymock/bytebuddy/matcher/ElementMatcher
@5.0.0
+#matches(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/matcher/ElementMatchers
@5.0.0
+#failSafe(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#cached(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Ljava/util/concurrent/ConcurrentMap;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#cached(Lorg/easymock/bytebuddy/matcher/ElementMatcher;I)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Ljava/lang/Object;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#definedField(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#definedMethod(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Lorg/easymock/bytebuddy/description/method/ParameterDescription$InDefinedShape;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#definedParameter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasType(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasGenericType(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isMandated()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#is(Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#not(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#any()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#none()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#anyOf([Ljava/lang/Object;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#anyOf(Ljava/lang/Iterable;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#anyOf([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#anyOf([Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#anyOf([Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#anyOf([Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#anyOf([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#noneOf([Ljava/lang/Object;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#noneOf(Ljava/lang/Iterable;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#noneOf([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#noneOf([Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#noneOf([Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#noneOf([Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#noneOf([Ljava/lang/annotation/Annotation;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#whereAny(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#whereNone(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#erasure(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#erasure(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#erasure(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#erasures([Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#erasures([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#erasures(Ljava/lang/Iterable;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#erasures(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isVariable(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isVariable(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#named(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#namedOneOf([Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#namedIgnoreCase(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#nameStartsWith(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#nameStartsWithIgnoreCase(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#nameEndsWith(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#nameEndsWithIgnoreCase(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#nameContains(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#nameContainsIgnoreCase(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#nameMatches(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isNamed()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasDescriptor(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDeclaredBy(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDeclaredBy(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDeclaredBy(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDeclaredByGeneric(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDeclaredByGeneric(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDeclaredByGeneric(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isVisibleTo(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isVisibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isAccessibleTo(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isAccessibleTo(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isAbstract()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isEnum()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isAnnotatedWith(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isAnnotatedWith(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isAnnotatedWith(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#declaresAnnotation(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isPublic()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isProtected()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isPackagePrivate()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isPrivate()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isStatic()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isFinal()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSynthetic()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSynchronized()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isNative()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isStrict()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isVarArgs()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isBridge()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#returnsGeneric(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#returnsGeneric(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#returns(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#returns(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#returns(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#returnsGeneric(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesGenericArgument(ILjava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesGenericArgument(ILorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesGenericArgument(ILorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesGenericArguments([Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesGenericArguments([Lorg/easymock/bytebuddy/description/type/TypeDefinition;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesGenericArguments(Ljava/util/List;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesGenericArguments(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesArgument(ILjava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesArgument(ILorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesArgument(ILorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesArguments([Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesArguments([Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesArguments(Ljava/lang/Iterable;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesArguments(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesArguments(I)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#takesNoArguments()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasParameters(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#canThrow(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#canThrow(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#declaresGenericException(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#declaresGenericException(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#declaresException(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#declaresException(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#declaresGenericException(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isOverriddenFrom(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isOverriddenFrom(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isOverriddenFrom(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isOverriddenFromGeneric(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isOverriddenFromGeneric(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isOverriddenFromGeneric(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isInterface()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isAnnotation()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isMethod()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isConstructor()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isTypeInitializer()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isVirtual()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDefaultMethod()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDefaultConstructor()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isMain()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isDefaultFinalizer()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isFinalizer()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isHashCode()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isEquals()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isClone()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isToString()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSetter()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSetter(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSetter(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGenericSetter(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSetter(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGenericSetter(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSetter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGenericSetter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGetter()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGetter(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGetter(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGenericGetter(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGetter(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGenericGetter(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGetter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isGenericGetter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasMethodName(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasSignature(Lorg/easymock/bytebuddy/description/method/MethodDescription$SignatureToken;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSubTypeOf(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSubTypeOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSuperTypeOf(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSuperTypeOf(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasSuperClass(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasGenericSuperClass(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasSuperType(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasGenericSuperType(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#inheritsAnnotation(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#inheritsAnnotation(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#inheritsAnnotation(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasAnnotation(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#declaresField(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#declaresMethod(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#ofSort(Lorg/easymock/bytebuddy/description/type/TypeDefinition$Sort;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#ofSort(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isPrimitive()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isArray()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isRecord()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#genericFieldType(Ljava/lang/reflect/Type;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#genericFieldType(Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#genericFieldType(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#fieldType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#fieldType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#fieldType(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isVolatile()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isTransient()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#annotationType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#annotationType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#annotationType(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#targetsElement(Ljava/lang/annotation/ElementType;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isBootstrapClassLoader()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isSystemClassLoader()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isExtensionClassLoader()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isChildOf(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#hasChild(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#isParentOf(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#ofType(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#supportsModules()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;

+###org/easymock/bytebuddy/matcher/EqualityMatcher
@5.0.0
+#<init>(Ljava/lang/Object;)V
+#matches(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ErasureMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/FailSafeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Z)V
+#matches(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/FieldTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/FilterableList$AbstractBase
@5.0.0
+#<init>()V
+#filter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/FilterableList;
+#getOnly()Ljava/lang/Object;
+#subList(II)Lorg/easymock/bytebuddy/matcher/FilterableList;
+#subList(II)Ljava/util/List;

+###org/easymock/bytebuddy/matcher/FilterableList$Empty
@5.0.0
+#<init>()V
+#get(I)Ljava/lang/Object;
+#size()I
+#getOnly()Ljava/lang/Object;
+#filter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/FilterableList;
+#subList(II)Lorg/easymock/bytebuddy/matcher/FilterableList;
+#subList(II)Ljava/util/List;

+###org/easymock/bytebuddy/matcher/FilterableList
@5.0.0
+#filter(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)Lorg/easymock/bytebuddy/matcher/FilterableList;
+#getOnly()Ljava/lang/Object;
+#subList(II)Lorg/easymock/bytebuddy/matcher/FilterableList;

+###org/easymock/bytebuddy/matcher/HasSuperClassMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/HasSuperTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/InheritedAnnotationMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/InstanceTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/IsNamedMatcher
@5.0.0
+#<init>()V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher$Conjunction
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/matcher/LatentMatcher;)V
+#<init>(Ljava/util/List;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher$Disjunction
@5.0.0
+#<init>([Lorg/easymock/bytebuddy/matcher/LatentMatcher;)V
+#<init>(Ljava/util/List;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher$ForFieldToken$ResolvedMatcher
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher$ForFieldToken
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/field/FieldDescription$Token;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher$ForMethodToken$ResolvedMatcher
@5.0.0
+#doMatch(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Z
+#doMatch(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher$ForMethodToken
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/method/MethodDescription$Token;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher$ForRecordComponentToken
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$Token;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher$ForSelfDeclaredMethod
@5.0.0
+#values()[Lorg/easymock/bytebuddy/matcher/LatentMatcher$ForSelfDeclaredMethod;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/LatentMatcher$ForSelfDeclaredMethod;
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;

+###org/easymock/bytebuddy/matcher/LatentMatcher$Resolved
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/LatentMatcher
@5.0.0
+#resolve(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/matcher/ElementMatcher;

+###org/easymock/bytebuddy/matcher/MethodExceptionTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/MethodOverrideMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/MethodParameterTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/MethodParameterTypesMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/MethodParametersMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/MethodReturnTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/MethodSortMatcher$Sort
@5.0.0
+#values()[Lorg/easymock/bytebuddy/matcher/MethodSortMatcher$Sort;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/MethodSortMatcher$Sort;

+###org/easymock/bytebuddy/matcher/MethodSortMatcher
@5.0.0
+#of(Lorg/easymock/bytebuddy/matcher/MethodSortMatcher$Sort;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#<init>(Lorg/easymock/bytebuddy/matcher/MethodSortMatcher$Sort;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/ModifierMatcher$Mode
@5.0.0
+#values()[Lorg/easymock/bytebuddy/matcher/ModifierMatcher$Mode;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/ModifierMatcher$Mode;

+###org/easymock/bytebuddy/matcher/ModifierMatcher
@5.0.0
+#of(Lorg/easymock/bytebuddy/matcher/ModifierMatcher$Mode;)Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#<init>(Lorg/easymock/bytebuddy/matcher/ModifierMatcher$Mode;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/NameMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/NegatingMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#matches(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/NullMatcher
@5.0.0
+#<init>()V
+#make()Lorg/easymock/bytebuddy/matcher/ElementMatcher$Junction;
+#matches(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/PrimitiveTypeMatcher
@5.0.0
+#<init>()V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/RecordMatcher
@5.0.0
+#<init>()V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/SignatureTokenMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/StringMatcher$Mode
@5.0.0
+#values()[Lorg/easymock/bytebuddy/matcher/StringMatcher$Mode;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/matcher/StringMatcher$Mode;

+###org/easymock/bytebuddy/matcher/StringMatcher
@5.0.0
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/matcher/StringMatcher$Mode;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/StringSetMatcher
@5.0.0
+#<init>(Ljava/util/Set;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/SubTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/SuperTypeMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/TypeSortMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/matcher/VisibilityMatcher
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$AbstractBase$ArrayTypeResolution
@5.0.0
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$AbstractBase$ComponentTypeReference
@5.0.0
+#resolve()Ljava/lang/String;

+###org/easymock/bytebuddy/pool/TypePool$AbstractBase$Hierarchical
@5.0.0
+#describe(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$AbstractBase
@5.0.0
+#describe(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$CacheProvider$Discriminating
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/matcher/ElementMatcher;Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider;Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider;)V
+#find(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool$Resolution;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V

+###org/easymock/bytebuddy/pool/TypePool$CacheProvider$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider$NoOp;
+#find(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool$Resolution;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V

+###org/easymock/bytebuddy/pool/TypePool$CacheProvider$Simple$UsingSoftReference
@5.0.0
+#<init>()V
+#find(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool$Resolution;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V

+###org/easymock/bytebuddy/pool/TypePool$CacheProvider$Simple
@5.0.0
+#<init>()V
+#<init>(Ljava/util/concurrent/ConcurrentMap;)V
+#withObjectType()Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider;
+#find(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool$Resolution;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V
+#getStorage()Ljava/util/concurrent/ConcurrentMap;

+###org/easymock/bytebuddy/pool/TypePool$CacheProvider
@5.0.0
+#find(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool$Resolution;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V

+###org/easymock/bytebuddy/pool/TypePool$ClassLoading
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/lang/ClassLoader;)V
+#of(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/pool/TypePool;
+#of(Ljava/lang/ClassLoader;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/pool/TypePool;
+#ofSystemLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#ofPlatformLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#ofBootLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex$DoubleIndexed
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase
@5.0.0
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)V
+#onComplete()V

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForByteCodeElement$WithIndex
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForByteCodeElement
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex$DoubleIndexed
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForTypeVariable
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$AnnotationRegistrant
@5.0.0
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)V
+#onComplete()V

+###org/easymock/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForAnnotationProperty$Bound
@5.0.0
+#resolve()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForAnnotationProperty
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool;Ljava/lang/String;)V
+#bind(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$AbstractBase$ComponentTypeReference;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForArrayType
@5.0.0
+#<init>(Ljava/lang/String;)V
+#bind(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$AbstractBase$ComponentTypeReference;
+#resolve()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$Illegal
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$Illegal;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$Illegal;
+#bind(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$AbstractBase$ComponentTypeReference;

+###org/easymock/bytebuddy/pool/TypePool$Default$ComponentTypeLocator
@5.0.0
+#bind(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$AbstractBase$ComponentTypeReference;

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfField
@5.0.0
+#extract(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField;
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ExceptionTypeRegistrant
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ParameterTypeRegistrant
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ReturnTypeTypeRegistrant
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod
@5.0.0
+#<init>()V
+#extract(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod;
+#visitParameterType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#resolve()Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod;
+#resolve()Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution;

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfRecordComponent
@5.0.0
+#extract(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForRecordComponent;
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType$InterfaceTypeRegistrant
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType$SuperClassRegistrant
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType
@5.0.0
+#extract(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType;
+#visitSuperclass()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#resolve()Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType;
+#resolve()Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution;

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature
@5.0.0
+#<init>()V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V
+#resolve()Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution;

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForDirectBound
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForLowerBound
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase$ForUpperBound
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase
@5.0.0
+#<init>()V
+#appendDirectBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#appendUpperBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#appendLowerBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#appendPlaceholder()V

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$ForInnerClass
@5.0.0
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken;)V
+#toToken()Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;
+#isParameterized()Z
+#getName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$ForTopLevelType
@5.0.0
+#<init>(Ljava/lang/String;)V
+#toToken()Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;
+#isParameterized()Z
+#getName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken
@5.0.0
+#appendLowerBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#appendUpperBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#appendDirectBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#appendPlaceholder()V
+#isParameterized()Z
+#getName()Ljava/lang/String;
+#toToken()Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeExtractor
@5.0.0
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeRegistrant$RejectingSignatureVisitor
@5.0.0
+#<init>()V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/pool/TypePool$Default$GenericTypeRegistrant
@5.0.0
+#register(Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;)V

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution$Illegal
@5.0.0
+#<init>(Ljava/lang/String;)V
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution$Simple
@5.0.0
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken$Resolution
@5.0.0
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/annotation/AnnotationDescription;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldTokenList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray$LazyGenericArray
@5.0.0
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard$LazyLowerBoundWildcard
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType
@5.0.0
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested$LazyParameterizedType
@5.0.0
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getTypeArguments()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getTypePathPrefix()Ljava/lang/String;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType$LazyPrimitiveType
@5.0.0
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForPrimitiveType;
+#of(C)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken;
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$AnnotatedTypeVariable
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable$LazyBoundTokenList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/util/Map;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$UnresolvedTypeVariable
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard$LazyUnboundWildcard
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUnboundWildcard;
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard$LazyUpperBoundWildcard
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getLowerBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList$ForWildcardBound
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$OfFormalTypeVariable
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/util/Map;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField$Tokenized
@5.0.0
+#resolveFieldType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForField
@5.0.0
+#resolveFieldType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod$Tokenized
@5.0.0
+#resolveReturnType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveParameterTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveExceptionTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveTypeVariables(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/util/Map;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod
@5.0.0
+#resolveReturnType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveParameterTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveExceptionTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForRecordComponent$Tokenized
@5.0.0
+#resolveRecordType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForRecordComponent
@5.0.0
+#resolveRecordType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized
@5.0.0
+#resolveSuperClass(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveInterfaceTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveTypeVariables(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/util/Map;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType
@5.0.0
+#resolveSuperClass(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveInterfaceTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Malformed
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Malformed;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Malformed;
+#resolveSuperClass(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveInterfaceTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveTypeVariables(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/util/Map;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveFieldType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveReturnType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveParameterTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveExceptionTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveRecordType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#asRawTypes()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getStackSize()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType
@5.0.0
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw;
+#resolveSuperClass(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveInterfaceTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveTypeVariables(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/util/Map;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveFieldType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveReturnType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#resolveParameterTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveExceptionTypes(Ljava/util/List;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#resolveRecordType(Ljava/lang/String;Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution
@5.0.0
+#resolveTypeVariables(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/util/Map;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeList$Generic;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken
@5.0.0
+#toGenericType(Lorg/easymock/bytebuddy/pool/TypePool;Lorg/easymock/bytebuddy/description/TypeVariableSource;Ljava/lang/String;Ljava/util/Map;)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#isPrimaryBound(Lorg/easymock/bytebuddy/pool/TypePool;)Z
+#getTypePathPrefix()Ljava/lang/String;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyNonGenericReceiverType
@5.0.0
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getComponentType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable
@5.0.0
+#getUpperBounds()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getTypeVariableSource()Lorg/easymock/bytebuddy/description/TypeVariableSource;
+#getSymbol()Ljava/lang/String;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyNestMemberList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#size()I
+#toInternalNames()[Ljava/lang/String;
+#getStackSize()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyTypeList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#size()I
+#toInternalNames()[Ljava/lang/String;
+#getStackSize()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken$ParameterToken
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$RecordComponentToken
@5.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$RecordComponentTokenList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$Malformed$TokenList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$Malformed
@5.0.0
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#asErasures()Lorg/easymock/bytebuddy/description/type/TypeList;
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList
@5.0.0
+#get(I)Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#size()I
+#get(I)Ljava/lang/Object;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType
@5.0.0
+#asErasure()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$SelfContained
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$SelfContained;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$SelfContained;
+#getEnclosingMethod(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isSelfContained()Z
+#isLocalType()Z

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod
@5.0.0
+#getEnclosingMethod(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isSelfContained()Z
+#isLocalType()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$WithinType
@5.0.0
+#getEnclosingMethod(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isSelfContained()Z
+#isLocalType()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment
@5.0.0
+#getEnclosingMethod(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType(Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isSelfContained()Z
+#isLocalType()Z

+###org/easymock/bytebuddy/pool/TypePool$Default$LazyTypeDescription
@5.0.0
+#getSuperClass()Lorg/easymock/bytebuddy/description/type/TypeDescription$Generic;
+#getInterfaces()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getEnclosingMethod()Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;
+#getEnclosingType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getDeclaredTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#isAnonymousType()Z
+#isLocalType()Z
+#getDeclaredFields()Lorg/easymock/bytebuddy/description/field/FieldList;
+#getDeclaredMethods()Lorg/easymock/bytebuddy/description/method/MethodList;
+#getPackage()Lorg/easymock/bytebuddy/description/type/PackageDescription;
+#getName()Ljava/lang/String;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getModifiers()I
+#getActualModifiers(Z)I
+#getNestHost()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getNestMembers()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#getTypeVariables()Lorg/easymock/bytebuddy/description/type/TypeList$Generic;
+#getGenericSignature()Ljava/lang/String;
+#getRecordComponents()Lorg/easymock/bytebuddy/description/type/RecordComponentList;
+#isRecord()Z
+#isSealed()Z
+#getPermittedSubtypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getClassFileVersion()Lorg/easymock/bytebuddy/ClassFileVersion;
+#getDeclaringType()Lorg/easymock/bytebuddy/description/type/TypeDefinition;

+###org/easymock/bytebuddy/pool/TypePool$Default$ParameterBag
@5.0.0

+###org/easymock/bytebuddy/pool/TypePool$Default$ReaderMode
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$Default$ReaderMode;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Default$ReaderMode;
+#isExtended()Z

+###org/easymock/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor$AnnotationLookup
@5.0.0
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)V
+#onComplete()V

+###org/easymock/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor$ArrayLookup
@5.0.0
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)V
+#onComplete()V

+###org/easymock/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor
@5.0.0
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor
@5.0.0
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor
@5.0.0
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotableParameterCount(IZ)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitLabel(Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;I)V
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#register(Ljava/lang/String;Lorg/easymock/bytebuddy/description/annotation/AnnotationValue;)V
+#onComplete()V
+#visitEnd()V

+###org/easymock/bytebuddy/pool/TypePool$Default$TypeExtractor$RecordComponentExtractor
@5.0.0
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/pool/TypePool$Default$TypeExtractor
@5.0.0
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#visitNestHost(Ljava/lang/String;)V
+#visitNestMember(Ljava/lang/String;)V
+#visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;
+#visitPermittedSubclass(Ljava/lang/String;)V

+###org/easymock/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution
@5.0.0
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription
@5.0.0
+#getName()Ljava/lang/String;

+###org/easymock/bytebuddy/pool/TypePool$Default$WithLazyResolution
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/pool/TypePool$Default$ReaderMode;)V
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/pool/TypePool$Default$ReaderMode;Lorg/easymock/bytebuddy/pool/TypePool;)V
+#ofSystemLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#ofPlatformLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#ofBootLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#of(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/pool/TypePool;
+#of(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/pool/TypePool;

+###org/easymock/bytebuddy/pool/TypePool$Default
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/pool/TypePool$Default$ReaderMode;)V
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool$CacheProvider;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;Lorg/easymock/bytebuddy/pool/TypePool$Default$ReaderMode;Lorg/easymock/bytebuddy/pool/TypePool;)V
+#ofSystemLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#ofPlatformLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#ofBootLoader()Lorg/easymock/bytebuddy/pool/TypePool;
+#of(Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/pool/TypePool;
+#of(Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/pool/TypePool;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Empty
@5.0.0
+#values()[Lorg/easymock/bytebuddy/pool/TypePool$Empty;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Empty;
+#describe(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V

+###org/easymock/bytebuddy/pool/TypePool$Explicit
@5.0.0
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool;Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$LazyFacade$LazyResolution
@5.0.0
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$LazyFacade$LazyTypeDescription
@5.0.0
+#getName()Ljava/lang/String;

+###org/easymock/bytebuddy/pool/TypePool$LazyFacade
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/pool/TypePool;)V
+#clear()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Resolution$Illegal
@5.0.0
+#<init>(Ljava/lang/String;)V
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Resolution$NoSuchTypeException
@5.0.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/easymock/bytebuddy/pool/TypePool$Resolution$Simple
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/description/type/TypeDescription;)V
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/pool/TypePool$Resolution
@5.0.0
+#isResolved()Z
+#resolve()Lorg/easymock/bytebuddy/description/type/TypeDescription;

+###org/easymock/bytebuddy/pool/TypePool
@5.0.0
+#describe(Ljava/lang/String;)Lorg/easymock/bytebuddy/pool/TypePool$Resolution;
+#clear()V

+###org/easymock/bytebuddy/utility/CompoundList
@5.0.0
+#of(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
+#of(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
+#of(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
+#of(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;

+###org/easymock/bytebuddy/utility/ConstructorComparator
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/ConstructorComparator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/ConstructorComparator;
+#compare(Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Constructor;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/easymock/bytebuddy/utility/FieldComparator
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/FieldComparator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/FieldComparator;
+#compare(Ljava/lang/reflect/Field;Ljava/lang/reflect/Field;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/easymock/bytebuddy/utility/FileSystem$ForLegacyVm
@5.0.0
+#copy(Ljava/io/File;Ljava/io/File;)V
+#move(Ljava/io/File;Ljava/io/File;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/FileSystem$ForNio2CapableVm$Dispatcher
@5.0.0
+#toPath(Ljava/io/File;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/FileSystem$ForNio2CapableVm$Files
@5.0.0
+#copy(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#move(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/FileSystem$ForNio2CapableVm$StandardCopyOption
@5.0.0
+#toArray(I)[Ljava/lang/Object;
+#valueOf(Ljava/lang/String;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/FileSystem$ForNio2CapableVm
@5.0.0
+#copy(Ljava/io/File;Ljava/io/File;)V
+#move(Ljava/io/File;Ljava/io/File;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/FileSystem
@5.0.0
+#<init>()V
+#getInstance()Lorg/easymock/bytebuddy/utility/FileSystem;
+#copy(Ljava/io/File;Ljava/io/File;)V
+#move(Ljava/io/File;Ljava/io/File;)V

+###org/easymock/bytebuddy/utility/GraalImageCode$ImageCodeContextAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/GraalImageCode$ImageCodeContextAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/GraalImageCode$ImageCodeContextAction;
+#run()Lorg/easymock/bytebuddy/utility/GraalImageCode;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/GraalImageCode
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/GraalImageCode;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/GraalImageCode;
+#getCurrent()Lorg/easymock/bytebuddy/utility/GraalImageCode;
+#sorted([Ljava/lang/Object;Ljava/util/Comparator;)[Ljava/lang/Object;
+#isDefined()Z
+#isNativeImageExecution()Z

+###org/easymock/bytebuddy/utility/Invoker
@5.0.0
+#newInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#invoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Dynamic
@5.0.0
+#ofNullConstant()Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofPrimitiveType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofPrimitiveType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofEnumeration(Ljava/lang/Enum;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofEnumeration(Lorg/easymock/bytebuddy/description/enumeration/EnumerationDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofField(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofField(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofInvocation(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofInvocation(Ljava/lang/reflect/Method;Ljava/util/List;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofInvocation(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofInvocation(Ljava/lang/reflect/Constructor;Ljava/util/List;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofInvocation(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofInvocation(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/util/List;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#ofVarHandle(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofVarHandle(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofArrayVarHandle(Ljava/lang/Class;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofArrayVarHandle(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#bootstrap(Ljava/lang/String;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#bootstrap(Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/List;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#bootstrap(Ljava/lang/String;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#bootstrap(Ljava/lang/String;Ljava/lang/reflect/Constructor;Ljava/util/List;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#bootstrap(Ljava/lang/String;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;[Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#bootstrap(Ljava/lang/String;Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Ljava/util/List;)Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;
+#getName()Ljava/lang/String;
+#getBootstrap()Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#getArguments()Ljava/util/List;
+#withType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#withType(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#toDescription()Ljava/lang/Object;
+#accept(Lorg/easymock/bytebuddy/utility/JavaConstant$Visitor;)Ljava/lang/Object;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/utility/JavaConstant$MethodHandle$HandleType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle$HandleType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle$HandleType;
+#getIdentifier()I
+#isField()Z

+###org/easymock/bytebuddy/utility/JavaConstant$MethodHandle$MethodHandleInfo
@5.0.0
+#getName(Ljava/lang/Object;)Ljava/lang/String;
+#getDeclaringClass(Ljava/lang/Object;)Ljava/lang/Class;
+#getReferenceKind(Ljava/lang/Object;)I
+#getMethodType(Ljava/lang/Object;)Ljava/lang/Object;
+#revealDirect(Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$MethodHandle$MethodHandles$Lookup
@5.0.0
+#lookupClass(Ljava/lang/Object;)Ljava/lang/Class;
+#revealDirect(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$MethodHandle$MethodHandles
@5.0.0
+#publicLookup()Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$MethodHandle$MethodType
@5.0.0
+#returnType(Ljava/lang/Object;)Ljava/lang/Class;
+#parameterArray(Ljava/lang/Object;)[Ljava/lang/Class;

+###org/easymock/bytebuddy/utility/JavaConstant$MethodHandle
@5.0.0
+#ofLoaded(Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#ofLoaded(Ljava/lang/Object;Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#of(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#of(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#ofSpecial(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#ofSpecial(Lorg/easymock/bytebuddy/description/method/MethodDescription$InDefinedShape;Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#ofGetter(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#ofGetter(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#ofSetter(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#ofSetter(Lorg/easymock/bytebuddy/description/field/FieldDescription$InDefinedShape;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;
+#lookupType(Ljava/lang/Object;)Ljava/lang/Class;
+#toDescription()Ljava/lang/Object;
+#accept(Lorg/easymock/bytebuddy/utility/JavaConstant$Visitor;)Ljava/lang/Object;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getHandleType()Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle$HandleType;
+#getOwnerType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getName()Ljava/lang/String;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getParameterTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getDescriptor()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/utility/JavaConstant$MethodType$Dispatcher
@5.0.0
+#returnType(Ljava/lang/Object;)Ljava/lang/Class;
+#parameterArray(Ljava/lang/Object;)[Ljava/lang/Class;

+###org/easymock/bytebuddy/utility/JavaConstant$MethodType
@5.0.0
+#ofLoaded(Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#of(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;[Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;Ljava/util/List;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#of(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#of(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#of(Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#ofSetter(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#ofSetter(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#ofGetter(Ljava/lang/reflect/Field;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#ofGetter(Lorg/easymock/bytebuddy/description/field/FieldDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#ofConstant(Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#ofConstant(Ljava/lang/Class;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#ofConstant(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;
+#getReturnType()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#getParameterTypes()Lorg/easymock/bytebuddy/description/type/TypeList;
+#getDescriptor()Ljava/lang/String;
+#toDescription()Ljava/lang/Object;
+#accept(Lorg/easymock/bytebuddy/utility/JavaConstant$Visitor;)Ljava/lang/Object;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$Dispatcher$OfClassDesc
@5.0.0
+#ofDescriptor(Ljava/lang/String;)Ljava/lang/Object;
+#descriptorString(Ljava/lang/Object;)Ljava/lang/String;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc$ForKind
@5.0.0
+#valueOf(IZ)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc
@5.0.0
+#refKind(Ljava/lang/Object;)I
+#methodName(Ljava/lang/Object;)Ljava/lang/String;
+#owner(Ljava/lang/Object;)Ljava/lang/Object;
+#lookupDescriptor(Ljava/lang/Object;)Ljava/lang/String;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$Dispatcher$OfDynamicConstantDesc
@5.0.0
+#ofCanonical(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#bootstrapArgs(Ljava/lang/Object;)[Ljava/lang/Object;
+#constantName(Ljava/lang/Object;)Ljava/lang/String;
+#constantType(Ljava/lang/Object;)Ljava/lang/Object;
+#bootstrapMethod(Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$Dispatcher$OfMethodHandleDesc
@5.0.0
+#of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#invocationType(Ljava/lang/Object;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$Dispatcher$OfMethodTypeDesc
@5.0.0
+#of(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#ofDescriptor(Ljava/lang/String;)Ljava/lang/Object;
+#returnType(Ljava/lang/Object;)Ljava/lang/Object;
+#parameterArray(Ljava/lang/Object;)[Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$Dispatcher
@5.0.0
+#isInstance(Ljava/lang/Object;)Z
+#toArray(I)[Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$OfTrivialValue
@5.0.0
+#toDescription()Ljava/lang/Object;
+#accept(Lorg/easymock/bytebuddy/utility/JavaConstant$Visitor;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple$OfTypeDescription
@5.0.0
+#toDescription()Ljava/lang/Object;
+#accept(Lorg/easymock/bytebuddy/utility/JavaConstant$Visitor;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Simple
@5.0.0
+#ofLoaded(Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofDescription(Ljava/lang/Object;Ljava/lang/ClassLoader;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofDescription(Ljava/lang/Object;Lorg/easymock/bytebuddy/dynamic/ClassFileLocator;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#ofDescription(Ljava/lang/Object;Lorg/easymock/bytebuddy/pool/TypePool;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#of(Lorg/easymock/bytebuddy/description/type/TypeDescription;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#wrap(Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#wrap(Ljava/util/List;)Ljava/util/List;
+#getValue()Ljava/lang/Object;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/utility/JavaConstant$Visitor$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/JavaConstant$Visitor$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/JavaConstant$Visitor$NoOp;
+#onValue(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#onType(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#onMethodType(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#onMethodHandle(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#onDynamic(Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;)Lorg/easymock/bytebuddy/utility/JavaConstant;
+#onDynamic(Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;)Ljava/lang/Object;
+#onMethodHandle(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;)Ljava/lang/Object;
+#onMethodType(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;)Ljava/lang/Object;
+#onType(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Ljava/lang/Object;
+#onValue(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant$Visitor
@5.0.0
+#onValue(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Ljava/lang/Object;
+#onType(Lorg/easymock/bytebuddy/utility/JavaConstant$Simple;)Ljava/lang/Object;
+#onMethodType(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodType;)Ljava/lang/Object;
+#onMethodHandle(Lorg/easymock/bytebuddy/utility/JavaConstant$MethodHandle;)Ljava/lang/Object;
+#onDynamic(Lorg/easymock/bytebuddy/utility/JavaConstant$Dynamic;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaConstant
@5.0.0
+#toDescription()Ljava/lang/Object;
+#getTypeDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#accept(Lorg/easymock/bytebuddy/utility/JavaConstant$Visitor;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaModule$Module
@5.0.0
+#isInstance(Ljava/lang/Object;)Z
+#isNamed(Ljava/lang/Object;)Z
+#getName(Ljava/lang/Object;)Ljava/lang/String;
+#getClassLoader(Ljava/lang/Object;)Ljava/lang/ClassLoader;
+#getResourceAsStream(Ljava/lang/Object;Ljava/lang/String;)Ljava/io/InputStream;
+#isExported(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z
+#isOpen(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z
+#canRead(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/utility/JavaModule$Resolver
@5.0.0
+#getModule(Ljava/lang/Class;)Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/JavaModule
@5.0.0
+#ofType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/utility/JavaModule;
+#of(Ljava/lang/Object;)Lorg/easymock/bytebuddy/utility/JavaModule;
+#isSupported()Z
+#isNamed()Z
+#getActualName()Ljava/lang/String;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getClassLoader()Ljava/lang/ClassLoader;
+#unwrap()Ljava/lang/Object;
+#canRead(Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#isExported(Lorg/easymock/bytebuddy/description/type/PackageDescription;Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#isOpened(Lorg/easymock/bytebuddy/description/type/PackageDescription;Lorg/easymock/bytebuddy/utility/JavaModule;)Z
+#getDeclaredAnnotations()Lorg/easymock/bytebuddy/description/annotation/AnnotationList;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/utility/JavaType$LatentTypeWithSimpleName
@5.0.0
+#getSimpleName()Ljava/lang/String;

+###org/easymock/bytebuddy/utility/JavaType
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/JavaType;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/JavaType;
+#getTypeStub()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#load()Ljava/lang/Class;
+#loadAsDescription()Lorg/easymock/bytebuddy/description/type/TypeDescription;
+#isAvailable()Z
+#isInstance(Ljava/lang/Object;)Z

+###org/easymock/bytebuddy/utility/MethodComparator
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/MethodComparator;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/MethodComparator;
+#compare(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/easymock/bytebuddy/utility/OpenedClassReader
@5.0.0
+#of([B)Lorg/easymock/bytebuddy/jar/asm/ClassReader;

+###org/easymock/bytebuddy/utility/QueueFactory$Dispatcher
@5.0.0
+#arrayDeque()Ljava/util/Queue;
+#arrayDeque(Ljava/util/Collection;)Ljava/util/Queue;

+###org/easymock/bytebuddy/utility/QueueFactory
@5.0.0
+#make()Ljava/util/Queue;
+#make(Ljava/util/Collection;)Ljava/util/Queue;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/RandomString
@5.0.0
+#<init>()V
+#<init>(I)V
+#<init>(ILjava/util/Random;)V
+#make()Ljava/lang/String;
+#make(I)Ljava/lang/String;
+#hashOf(Ljava/lang/Object;)Ljava/lang/String;
+#hashOf(I)Ljava/lang/String;
+#nextString()Ljava/lang/String;

+###org/easymock/bytebuddy/utility/StreamDrainer
@5.0.0
+#<init>()V
+#<init>(I)V
+#drain(Ljava/io/InputStream;)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Container
@5.0.0

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Defaults
@5.0.0

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForConstructor
@5.0.0
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForContainerCreation
@5.0.0
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForDefaultValue$OfNonPrimitiveArray
@5.0.0
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForDefaultValue$OfPrimitiveArray
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForDefaultValue$OfPrimitiveArray;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForDefaultValue$OfPrimitiveArray;
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForDefaultValue
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForDefaultValue;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForDefaultValue;
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForInstanceCheck
@5.0.0
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForNonStaticMethod
@5.0.0
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForStaticMethod
@5.0.0
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher$ForUnresolvedMethod
@5.0.0
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Dispatcher
@5.0.0
+#invoke([Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Ljava/lang/reflect/Method;)I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver$CreationAction
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver$CreationAction;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver$CreationAction;
+#run()Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver;
+#run()Ljava/lang/Object;

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver$ForModuleSystem
@5.0.0
+#accept(Ljava/lang/ClassLoader;Ljava/lang/Class;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver$NoOp
@5.0.0
+#values()[Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver$NoOp;
+#valueOf(Ljava/lang/String;)Lorg/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver$NoOp;
+#accept(Ljava/lang/ClassLoader;Ljava/lang/Class;)V

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader$Resolver
@5.0.0
+#accept(Ljava/lang/ClassLoader;Ljava/lang/Class;)V

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$DynamicClassLoader
@5.0.0

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Instance
@5.0.0

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$IsConstructor
@5.0.0

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$IsStatic
@5.0.0

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$Proxied
@5.0.0
+#value()Ljava/lang/String;

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher$ProxiedInvocationHandler
@5.0.0
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/dispatcher/JavaDispatcher
@5.0.0
+#of(Ljava/lang/Class;)Ljava/security/PrivilegedAction;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/nullability/AlwaysNull
@5.0.0

+###org/easymock/bytebuddy/utility/nullability/MaybeNull
@5.0.0

+###org/easymock/bytebuddy/utility/nullability/NeverNull$ByDefault
@5.0.0

+###org/easymock/bytebuddy/utility/nullability/NeverNull
@5.0.0

+###org/easymock/bytebuddy/utility/nullability/UnknownNull
@5.0.0

+###org/easymock/bytebuddy/utility/privilege/GetMethodAction
@5.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;)V
+#run()Ljava/lang/reflect/Method;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/privilege/GetSystemPropertyAction
@5.0.0
+#<init>(Ljava/lang/String;)V
+#run()Ljava/lang/String;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/privilege/SetAccessibleAction
@5.0.0
+#<init>(Ljava/lang/reflect/AccessibleObject;)V
+#run()Ljava/lang/reflect/AccessibleObject;
+#run()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/easymock/bytebuddy/utility/visitor/ContextClassVisitor
@5.0.0
+#active()Lorg/easymock/bytebuddy/utility/visitor/ContextClassVisitor;
+#getAuxiliaryTypes()Ljava/util/List;
+#getLoadedTypeInitializer()Lorg/easymock/bytebuddy/implementation/LoadedTypeInitializer;
+#visitEnd()V

+###org/easymock/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor
@5.0.0
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitLabel(Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/easymock/bytebuddy/jar/asm/Label;[Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/easymock/bytebuddy/jar/asm/Label;[I[Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsn(I)V

+###org/easymock/bytebuddy/utility/visitor/LineNumberPrependingMethodVisitor
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;)V
+#visitLineNumber(ILorg/easymock/bytebuddy/jar/asm/Label;)V

+###org/easymock/bytebuddy/utility/visitor/LocalVariableAwareMethodVisitor
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;)V
+#visitVarInsn(II)V
+#getFreeOffset()I

+###org/easymock/bytebuddy/utility/visitor/MetadataAwareClassVisitor
@5.0.0
+#visitNestHost(Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitPermittedSubclass(Ljava/lang/String;)V
+#visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/bytebuddy/jar/asm/Attribute;)V
+#visitNestMember(Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/utility/visitor/StackAwareMethodVisitor
@5.0.0
+#of(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/description/method/MethodDescription;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#drainStack()V
+#drainStack(IILorg/easymock/bytebuddy/implementation/bytecode/StackSize;)I
+#register(Lorg/easymock/bytebuddy/jar/asm/Label;Ljava/util/List;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitJumpInsn(ILorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLabel(Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLineNumber(ILorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitTableSwitchInsn(IILorg/easymock/bytebuddy/jar/asm/Label;[Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/easymock/bytebuddy/jar/asm/Label;[I[Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitTryCatchBlock(Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Ljava/lang/String;)V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V

+###org/easymock/bytebuddy/jar/asm/AnnotationVisitor
@5.0.0
+#getDelegate()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/jar/asm/Attribute
@5.0.0
+#isUnknown()Z
+#isCodeAttribute()Z

+###org/easymock/bytebuddy/jar/asm/ByteVector
@5.0.0
+#<init>()V
+#<init>(I)V
+#size()I
+#putByte(I)Lorg/easymock/bytebuddy/jar/asm/ByteVector;
+#putShort(I)Lorg/easymock/bytebuddy/jar/asm/ByteVector;
+#putInt(I)Lorg/easymock/bytebuddy/jar/asm/ByteVector;
+#putLong(J)Lorg/easymock/bytebuddy/jar/asm/ByteVector;
+#putUTF8(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/ByteVector;
+#putByteArray([BII)Lorg/easymock/bytebuddy/jar/asm/ByteVector;

+###org/easymock/bytebuddy/jar/asm/ClassReader
@5.0.0
+#<init>([B)V
+#<init>([BII)V
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/lang/String;)V
+#getAccess()I
+#getClassName()Ljava/lang/String;
+#getSuperName()Ljava/lang/String;
+#getInterfaces()[Ljava/lang/String;
+#accept(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;I)V
+#accept(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;[Lorg/easymock/bytebuddy/jar/asm/Attribute;I)V
+#getItemCount()I
+#getItem(I)I
+#getMaxStringLength()I
+#readByte(I)I
+#readUnsignedShort(I)I
+#readShort(I)S
+#readInt(I)I
+#readLong(I)J
+#readUTF8(I[C)Ljava/lang/String;
+#readClass(I[C)Ljava/lang/String;
+#readModule(I[C)Ljava/lang/String;
+#readPackage(I[C)Ljava/lang/String;
+#readConst(I[C)Ljava/lang/Object;

+###org/easymock/bytebuddy/jar/asm/ClassTooLargeException
@5.0.0
+#<init>(Ljava/lang/String;I)V
+#getClassName()Ljava/lang/String;
+#getConstantPoolCount()I

+###org/easymock/bytebuddy/jar/asm/ClassVisitor
@5.0.0
+#getDelegate()Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitModule(Ljava/lang/String;ILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/ModuleVisitor;
+#visitNestHost(Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/bytebuddy/jar/asm/Attribute;)V
+#visitNestMember(Ljava/lang/String;)V
+#visitPermittedSubclass(Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/jar/asm/ClassWriter
@5.0.0
+#<init>(I)V
+#<init>(Lorg/easymock/bytebuddy/jar/asm/ClassReader;I)V
+#hasFlags(I)Z
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitModule(Ljava/lang/String;ILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/ModuleVisitor;
+#visitNestHost(Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/bytebuddy/jar/asm/Attribute;)V
+#visitNestMember(Ljava/lang/String;)V
+#visitPermittedSubclass(Ljava/lang/String;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#visitEnd()V
+#toByteArray()[B
+#newConst(Ljava/lang/Object;)I
+#newUTF8(Ljava/lang/String;)I
+#newClass(Ljava/lang/String;)I
+#newMethodType(Ljava/lang/String;)I
+#newModule(Ljava/lang/String;)I
+#newPackage(Ljava/lang/String;)I
+#newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I[deprecated]
+#newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
+#newConstantDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)I
+#newInvokeDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)I
+#newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+#newMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
+#newNameType(Ljava/lang/String;Ljava/lang/String;)I

+###org/easymock/bytebuddy/jar/asm/ConstantDynamic
@5.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)V
+#getName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getBootstrapMethod()Lorg/easymock/bytebuddy/jar/asm/Handle;
+#getBootstrapMethodArgumentCount()I
+#getBootstrapMethodArgument(I)Ljava/lang/Object;
+#getSize()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/jar/asm/FieldVisitor
@5.0.0
+#getDelegate()Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/bytebuddy/jar/asm/Attribute;)V
+#visitEnd()V

+###org/easymock/bytebuddy/jar/asm/Handle
@5.0.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#getTag()I
+#getOwner()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getDesc()Ljava/lang/String;
+#isInterface()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/jar/asm/Label
@5.0.0
+#<init>()V
+#getOffset()I
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/jar/asm/MethodTooLargeException
@5.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#getClassName()Ljava/lang/String;
+#getMethodName()Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getCodeSize()I

+###org/easymock/bytebuddy/jar/asm/MethodVisitor
@5.0.0
+#getDelegate()Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#visitParameter(Ljava/lang/String;I)V
+#visitAnnotationDefault()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotableParameterCount(IZ)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/bytebuddy/jar/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitVarInsn(II)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)V
+#visitJumpInsn(ILorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLabel(Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitIincInsn(II)V
+#visitTableSwitchInsn(IILorg/easymock/bytebuddy/jar/asm/Label;[Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitLookupSwitchInsn(Lorg/easymock/bytebuddy/jar/asm/Label;[I[Lorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;[Lorg/easymock/bytebuddy/jar/asm/Label;[Lorg/easymock/bytebuddy/jar/asm/Label;[ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitLineNumber(ILorg/easymock/bytebuddy/jar/asm/Label;)V
+#visitMaxs(II)V
+#visitEnd()V

+###org/easymock/bytebuddy/jar/asm/ModuleVisitor
@5.0.0
+#getDelegate()Lorg/easymock/bytebuddy/jar/asm/ModuleVisitor;
+#visitMainClass(Ljava/lang/String;)V
+#visitPackage(Ljava/lang/String;)V
+#visitRequire(Ljava/lang/String;ILjava/lang/String;)V
+#visitExport(Ljava/lang/String;I[Ljava/lang/String;)V
+#visitOpen(Ljava/lang/String;I[Ljava/lang/String;)V
+#visitUse(Ljava/lang/String;)V
+#visitProvide(Ljava/lang/String;[Ljava/lang/String;)V
+#visitEnd()V

+###org/easymock/bytebuddy/jar/asm/Opcodes
@5.0.0

+###org/easymock/bytebuddy/jar/asm/RecordComponentVisitor
@5.0.0
+#getDelegate()Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/bytebuddy/jar/asm/Attribute;)V
+#visitEnd()V

+###org/easymock/bytebuddy/jar/asm/Type
@5.0.0
+#getType(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getType(Ljava/lang/Class;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getType(Ljava/lang/reflect/Constructor;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getType(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getElementType()Lorg/easymock/bytebuddy/jar/asm/Type;
+#getObjectType(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getMethodType(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getMethodType(Lorg/easymock/bytebuddy/jar/asm/Type;[Lorg/easymock/bytebuddy/jar/asm/Type;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getArgumentTypes()[Lorg/easymock/bytebuddy/jar/asm/Type;
+#getArgumentTypes(Ljava/lang/String;)[Lorg/easymock/bytebuddy/jar/asm/Type;
+#getArgumentTypes(Ljava/lang/reflect/Method;)[Lorg/easymock/bytebuddy/jar/asm/Type;
+#getReturnType()Lorg/easymock/bytebuddy/jar/asm/Type;
+#getReturnType(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getReturnType(Ljava/lang/reflect/Method;)Lorg/easymock/bytebuddy/jar/asm/Type;
+#getClassName()Ljava/lang/String;
+#getInternalName()Ljava/lang/String;
+#getInternalName(Ljava/lang/Class;)Ljava/lang/String;
+#getDescriptor()Ljava/lang/String;
+#getDescriptor(Ljava/lang/Class;)Ljava/lang/String;
+#getConstructorDescriptor(Ljava/lang/reflect/Constructor;)Ljava/lang/String;
+#getMethodDescriptor(Lorg/easymock/bytebuddy/jar/asm/Type;[Lorg/easymock/bytebuddy/jar/asm/Type;)Ljava/lang/String;
+#getMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getSort()I
+#getDimensions()I
+#getSize()I
+#getArgumentsAndReturnSizes()I
+#getArgumentsAndReturnSizes(Ljava/lang/String;)I
+#getOpcode(I)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/jar/asm/TypePath
@5.0.0
+#getLength()I
+#getStep(I)I
+#getStepArgument(I)I
+#fromString(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/TypePath;
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/jar/asm/TypeReference
@5.0.0
+#<init>(I)V
+#newTypeReference(I)Lorg/easymock/bytebuddy/jar/asm/TypeReference;
+#newTypeParameterReference(II)Lorg/easymock/bytebuddy/jar/asm/TypeReference;
+#newTypeParameterBoundReference(III)Lorg/easymock/bytebuddy/jar/asm/TypeReference;
+#newSuperTypeReference(I)Lorg/easymock/bytebuddy/jar/asm/TypeReference;
+#newFormalParameterReference(I)Lorg/easymock/bytebuddy/jar/asm/TypeReference;
+#newExceptionReference(I)Lorg/easymock/bytebuddy/jar/asm/TypeReference;
+#newTryCatchReference(I)Lorg/easymock/bytebuddy/jar/asm/TypeReference;
+#newTypeArgumentReference(II)Lorg/easymock/bytebuddy/jar/asm/TypeReference;
+#getSort()I
+#getTypeParameterIndex()I
+#getTypeParameterBoundIndex()I
+#getSuperTypeIndex()I
+#getFormalParameterIndex()I
+#getExceptionIndex()I
+#getTryCatchBlockIndex()I
+#getTypeArgumentIndex()I
+#getValue()I

+###org/easymock/bytebuddy/jar/asm/signature/SignatureReader
@5.0.0
+#<init>(Ljava/lang/String;)V
+#accept(Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;)V
+#acceptType(Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;)V

+###org/easymock/bytebuddy/jar/asm/signature/SignatureVisitor
@5.0.0
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/jar/asm/signature/SignatureWriter
@5.0.0
+#<init>()V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitClassBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitEnd()V
+#toString()Ljava/lang/String;

+###org/easymock/bytebuddy/jar/asm/commons/AnnotationRemapper
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;Lorg/easymock/bytebuddy/jar/asm/commons/Remapper;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;Lorg/easymock/bytebuddy/jar/asm/commons/Remapper;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/jar/asm/commons/ClassRemapper
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/ClassVisitor;Lorg/easymock/bytebuddy/jar/asm/commons/Remapper;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitModule(Ljava/lang/String;ILjava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/ModuleVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/bytebuddy/jar/asm/Attribute;)V
+#visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitNestHost(Ljava/lang/String;)V
+#visitNestMember(Ljava/lang/String;)V
+#visitPermittedSubclass(Ljava/lang/String;)V

+###org/easymock/bytebuddy/jar/asm/commons/FieldRemapper
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/FieldVisitor;Lorg/easymock/bytebuddy/jar/asm/commons/Remapper;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/jar/asm/commons/MethodRemapper
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/MethodVisitor;Lorg/easymock/bytebuddy/jar/asm/commons/Remapper;)V
+#visitAnnotationDefault()Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Handle;[Ljava/lang/Object;)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitInsnAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;Ljava/lang/String;)V
+#visitTryCatchAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/easymock/bytebuddy/jar/asm/Label;Lorg/easymock/bytebuddy/jar/asm/Label;I)V
+#visitLocalVariableAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;[Lorg/easymock/bytebuddy/jar/asm/Label;[Lorg/easymock/bytebuddy/jar/asm/Label;[ILjava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/jar/asm/commons/ModuleHashesAttribute
@5.0.0
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#<init>()V

+###org/easymock/bytebuddy/jar/asm/commons/ModuleRemapper
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/ModuleVisitor;Lorg/easymock/bytebuddy/jar/asm/commons/Remapper;)V
+#visitMainClass(Ljava/lang/String;)V
+#visitPackage(Ljava/lang/String;)V
+#visitRequire(Ljava/lang/String;ILjava/lang/String;)V
+#visitExport(Ljava/lang/String;I[Ljava/lang/String;)V
+#visitOpen(Ljava/lang/String;I[Ljava/lang/String;)V
+#visitUse(Ljava/lang/String;)V
+#visitProvide(Ljava/lang/String;[Ljava/lang/String;)V

+###org/easymock/bytebuddy/jar/asm/commons/RecordComponentRemapper
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/RecordComponentVisitor;Lorg/easymock/bytebuddy/jar/asm/commons/Remapper;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/bytebuddy/jar/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/bytebuddy/jar/asm/AnnotationVisitor;

+###org/easymock/bytebuddy/jar/asm/commons/Remapper
@5.0.0
+#<init>()V
+#mapDesc(Ljava/lang/String;)Ljava/lang/String;
+#mapType(Ljava/lang/String;)Ljava/lang/String;
+#mapTypes([Ljava/lang/String;)[Ljava/lang/String;
+#mapMethodDesc(Ljava/lang/String;)Ljava/lang/String;
+#mapValue(Ljava/lang/Object;)Ljava/lang/Object;
+#mapSignature(Ljava/lang/String;Z)Ljava/lang/String;
+#mapAnnotationAttributeName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapInnerClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapMethodName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapInvokeDynamicMethodName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapRecordComponentName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapFieldName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapPackageName(Ljava/lang/String;)Ljava/lang/String;
+#mapModuleName(Ljava/lang/String;)Ljava/lang/String;
+#map(Ljava/lang/String;)Ljava/lang/String;

+###org/easymock/bytebuddy/jar/asm/commons/SignatureRemapper
@5.0.0
+#<init>(Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;Lorg/easymock/bytebuddy/jar/asm/commons/Remapper;)V
+#visitClassType(Ljava/lang/String;)V
+#visitInnerClassType(Ljava/lang/String;)V
+#visitFormalTypeParameter(Ljava/lang/String;)V
+#visitTypeVariable(Ljava/lang/String;)V
+#visitArrayType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitBaseType(C)V
+#visitClassBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitExceptionType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterface()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitInterfaceBound()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitParameterType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitReturnType()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitSuperclass()Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitTypeArgument()V
+#visitTypeArgument(C)Lorg/easymock/bytebuddy/jar/asm/signature/SignatureVisitor;
+#visitEnd()V

+###org/easymock/bytebuddy/jar/asm/commons/SimpleRemapper
@5.0.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#mapMethodName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapInvokeDynamicMethodName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapAnnotationAttributeName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mapFieldName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#map(Ljava/lang/String;)Ljava/lang/String;

+###org/easymock/asm/RecordComponentVisitor
@4.2
+#<init>(I)V[deprecated]
+#<init>(ILorg/easymock/asm/RecordComponentVisitor;)V[deprecated]
+#getDelegateExperimental()Lorg/easymock/asm/RecordComponentVisitor;[deprecated]
+#visitAnnotationExperimental(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;[deprecated]
+#visitTypeAnnotationExperimental(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;[deprecated]
+#visitAttributeExperimental(Lorg/easymock/asm/Attribute;)V[deprecated]
+#visitEndExperimental()V[deprecated]
@4.3
+#getDelegate()Lorg/easymock/asm/RecordComponentVisitor;
+#visitAnnotation(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitTypeAnnotation(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;
+#visitAttribute(Lorg/easymock/asm/Attribute;)V
+#visitEnd()V
-#getDelegateExperimental()Lorg/easymock/asm/RecordComponentVisitor;[deprecated]
-#visitAnnotationExperimental(Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;[deprecated]
-#visitTypeAnnotationExperimental(ILorg/easymock/asm/TypePath;Ljava/lang/String;Z)Lorg/easymock/asm/AnnotationVisitor;[deprecated]
-#visitAttributeExperimental(Lorg/easymock/asm/Attribute;)V[deprecated]
-#visitEndExperimental()V[deprecated]
@5.0.0
-#<init>(I)V
-#<init>(ILorg/easymock/asm/RecordComponentVisitor;)V

+###org/easymock/mockito/OngoingStubbingBridge
@4.1
+#<init>(Lorg/easymock/IExpectationSetters;)V
@4.3
-###org/easymock/mockito/OngoingStubbingBridge
