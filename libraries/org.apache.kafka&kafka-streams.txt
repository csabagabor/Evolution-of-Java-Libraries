
+###org/apache/kafka/streams/errors/BrokerNotFoundException
@0.11.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/InvalidStateStoreException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/LockException
@0.10.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/ProcessorStateException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/StreamsException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TaskId;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/kafka/streams/processor/TaskId;)V
+#<init>(Ljava/lang/Throwable;Lorg/apache/kafka/streams/processor/TaskId;)V
+#taskId()Ljava/util/Optional;
+#setTaskId(Lorg/apache/kafka/streams/processor/TaskId;)V

+###org/apache/kafka/streams/errors/TaskAssignmentException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/TaskIdFormatException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/TopologyBuilderException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@2.0.0
-###org/apache/kafka/streams/errors/TopologyBuilderException

+###org/apache/kafka/streams/KafkaClientSupplier
@0.10.0.0
+#getProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
+#getConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/Consumer;
+#getRestoreConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/Consumer;
@1.1.0
+#getAdminClient(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;
@2.0.0
+#getGlobalConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/Consumer;
@2.4.0
*#getAdminClient(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;[deprecated]
+#getAdmin(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/Admin;
@3.0.0
-#getAdminClient(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;[deprecated]

+###org/apache/kafka/streams/KafkaStreams$State
@0.10.2.0
+#values()[Lorg/apache/kafka/streams/KafkaStreams$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/KafkaStreams$State;
+#isRunning()Z
+#isCreatedOrRunning()Z
+#isValidTransition(Lorg/apache/kafka/streams/KafkaStreams$State;)Z
@0.11.0.1
-#isCreatedOrRunning()Z
@2.5.0
+#isRunningOrRebalancing()Z
-#isRunning()Z
@3.1.0
+#hasNotStarted()Z
+#isShuttingDown()Z
+#hasCompletedShutdown()Z
+#hasStartedOrFinishedShuttingDown()Z

+###org/apache/kafka/streams/KafkaStreams$StateListener
@0.10.2.0
+#onChange(Lorg/apache/kafka/streams/KafkaStreams$State;Lorg/apache/kafka/streams/KafkaStreams$State;)V

+###org/apache/kafka/streams/KafkaStreams
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Ljava/util/Properties;)V
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;)V
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;)V
+#start()V
+#close()V
+#setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V
@0.10.0.1
+#cleanUp()V
@0.10.1.0
+#toString()Ljava/lang/String;
+#allMetadata()Ljava/util/Collection;
+#allMetadataForStore(Ljava/lang/String;)Ljava/util/Collection;
+#metadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/StreamsMetadata;
+#metadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/state/StreamsMetadata;
+#store(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/lang/Object;
@0.10.2.0
+#setStateListener(Lorg/apache/kafka/streams/KafkaStreams$StateListener;)V
+#state()Lorg/apache/kafka/streams/KafkaStreams$State;
+#metrics()Ljava/util/Map;
+#close(JLjava/util/concurrent/TimeUnit;)Z
+#toString(Ljava/lang/String;)Ljava/lang/String;
@1.0.0
+#setGlobalStateRestoreListener(Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
*#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Ljava/util/Properties;)V[deprecated]
*#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;)V[deprecated]
*#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;)V[deprecated]
+#<init>(Lorg/apache/kafka/streams/Topology;Ljava/util/Properties;)V
+#<init>(Lorg/apache/kafka/streams/Topology;Lorg/apache/kafka/streams/StreamsConfig;)V
+#<init>(Lorg/apache/kafka/streams/Topology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;)V
*#toString()Ljava/lang/String;[deprecated]
*#toString(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#localThreadsMetadata()Ljava/util/Set;
@1.1.0
+#<init>(Lorg/apache/kafka/streams/Topology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/common/utils/Time;)V
@2.0.0
+#<init>(Lorg/apache/kafka/streams/Topology;Ljava/util/Properties;Lorg/apache/kafka/streams/KafkaClientSupplier;)V
+#<init>(Lorg/apache/kafka/streams/Topology;Ljava/util/Properties;Lorg/apache/kafka/common/utils/Time;)V
+#<init>(Lorg/apache/kafka/streams/Topology;Ljava/util/Properties;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/common/utils/Time;)V
*#<init>(Lorg/apache/kafka/streams/Topology;Lorg/apache/kafka/streams/StreamsConfig;)V[deprecated]
*#<init>(Lorg/apache/kafka/streams/Topology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;)V[deprecated]
*#<init>(Lorg/apache/kafka/streams/Topology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/common/utils/Time;)V[deprecated]
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Ljava/util/Properties;)V[deprecated]
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;)V[deprecated]
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;)V[deprecated]
-#toString()Ljava/lang/String;[deprecated]
-#toString(Ljava/lang/String;)Ljava/lang/String;[deprecated]
@2.1.0
*#close(JLjava/util/concurrent/TimeUnit;)Z[deprecated]
+#close(Ljava/time/Duration;)Z
@2.5.0
*#metadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/StreamsMetadata;[deprecated]
*#metadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/state/StreamsMetadata;[deprecated]
+#queryMetadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/KeyQueryMetadata;
+#queryMetadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/KeyQueryMetadata;
*#store(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/lang/Object;[deprecated]
+#store(Lorg/apache/kafka/streams/StoreQueryParameters;)Ljava/lang/Object;
+#allLocalStorePartitionLags()Ljava/util/Map;
@2.8.0
*#setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V[deprecated]
+#setUncaughtExceptionHandler(Lorg/apache/kafka/streams/errors/StreamsUncaughtExceptionHandler;)V
+#addStreamThread()Ljava/util/Optional;
+#removeStreamThread()Ljava/util/Optional;
+#removeStreamThread(Ljava/time/Duration;)Ljava/util/Optional;
@3.0.0
*#allMetadata()Ljava/util/Collection;[deprecated]
+#metadataForAllStreamsClients()Ljava/util/Collection;
*#allMetadataForStore(Ljava/lang/String;)Ljava/util/Collection;[deprecated]
+#streamsMetadataForStore(Ljava/lang/String;)Ljava/util/Collection;
*#localThreadsMetadata()Ljava/util/Set;[deprecated]
+#metadataForLocalThreads()Ljava/util/Set;
-#close(JLjava/util/concurrent/TimeUnit;)Z[deprecated]
-#metadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/StreamsMetadata;[deprecated]
-#metadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/state/StreamsMetadata;[deprecated]
-#store(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/lang/Object;[deprecated]
@3.2.0
+#query(Lorg/apache/kafka/streams/query/StateQueryRequest;)Lorg/apache/kafka/streams/query/StateQueryResult;
@3.3.0
+#close(Lorg/apache/kafka/streams/KafkaStreams$CloseOptions;)Z
+#pause()V
+#isPaused()Z
+#resume()V

+###org/apache/kafka/streams/KeyValue
@0.10.0.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#pair(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/KeyValue;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/kstream/Aggregator
@0.10.0.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/ForeachAction
@0.10.0.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/kafka/streams/kstream/GlobalKTable
@0.10.2.0
@1.1.0
+#queryableStoreName()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/Initializer
@0.10.0.0
+#apply()Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/internals/AbstractKTableKTableJoinValueGetterSupplier
@0.10.1.1
+#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;)V
+#storeNames()[Ljava/lang/String;
@1.0.1
-###org/apache/kafka/streams/kstream/internals/AbstractKTableKTableJoinValueGetterSupplier

+###org/apache/kafka/streams/kstream/internals/AbstractStream
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/util/Set;)V
+#reverseJoiner(Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/ValueJoiner;
@0.10.0.1
+#<init>(Lorg/apache/kafka/streams/kstream/internals/AbstractStream;)V
@0.10.2.0
+#keyValueStore(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStoreSupplier;
+#windowedStore(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStoreSupplier;
+#storeFactory(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
-#<init>(Lorg/apache/kafka/streams/kstream/internals/AbstractStream;)V
@0.11.0.0
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/util/Set;)V
-#reverseJoiner(Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/ValueJoiner;
-#keyValueStore(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStoreSupplier;
-#windowedStore(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStoreSupplier;
-#storeFactory(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
@1.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/AbstractStream;)V
@2.1.0
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;

+###org/apache/kafka/streams/kstream/internals/CacheFlushListener
@0.10.1.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
@2.2.0
-###org/apache/kafka/streams/kstream/internals/CacheFlushListener

+###org/apache/kafka/streams/kstream/internals/Change
@0.10.0.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@0.10.2.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/kstream/internals/ChangedDeserializer
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;)V
+#inner()Lorg/apache/kafka/common/serialization/Deserializer;
+#setInner(Lorg/apache/kafka/common/serialization/Deserializer;)V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Lorg/apache/kafka/streams/kstream/internals/Change;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@0.11.0.0
+#inner()Lorg/apache/kafka/common/serialization/ExtendedDeserializer;
+#deserialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Lorg/apache/kafka/streams/kstream/internals/Change;
+#deserialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Ljava/lang/Object;
-#inner()Lorg/apache/kafka/common/serialization/Deserializer;
@2.1.0
+#inner()Lorg/apache/kafka/common/serialization/Deserializer;
-#inner()Lorg/apache/kafka/common/serialization/ExtendedDeserializer;
@2.3.0
-#configure(Ljava/util/Map;Z)V
@2.4.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Deserializer;)V
-#setInner(Lorg/apache/kafka/common/serialization/Deserializer;)V
@2.5.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Deserializer;)V
@3.0.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V

+###org/apache/kafka/streams/kstream/internals/ChangedSerializer
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;)V
+#inner()Lorg/apache/kafka/common/serialization/Serializer;
+#setInner(Lorg/apache/kafka/common/serialization/Serializer;)V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/Change;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@0.11.0.0
+#serialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;Lorg/apache/kafka/streams/kstream/internals/Change;)[B
+#serialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
@2.4.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;)V
-#setInner(Lorg/apache/kafka/common/serialization/Serializer;)V
@2.5.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;)V
@3.0.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V

+###org/apache/kafka/streams/kstream/internals/GlobalKTableImpl
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;)V
@1.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;Z)V
+#queryableStoreName()Ljava/lang/String;
@2.2.0
-#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;)V
-#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;Z)V

+###org/apache/kafka/streams/kstream/internals/KGroupedTableImpl
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.2.0
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
@0.11.0.0
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;)Lorg/apache/kafka/streams/kstream/KTable;
+#count()Lorg/apache/kafka/streams/kstream/KTable;
@1.0.0
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@2.0.0
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#count(Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
@2.4.0
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/kstream/internals/KStreamAggProcessorSupplier
@0.10.0.0
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#enableSendingOldValues()V

+###org/apache/kafka/streams/kstream/internals/KStreamAggregate
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#enableSendingOldValues()V
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
@2.0.0
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KStreamImpl
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/util/Set;)V
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KStream;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KStream;
+#selectKey(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#map(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#print()V
+#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#writeAsText(Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#flatMap(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#branch([Lorg/apache/kafka/streams/kstream/Predicate;)[Lorg/apache/kafka/streams/kstream/KStream;
+#merge(Lorg/apache/kafka/streams/kstream/KStreamBuilder;[Lorg/apache/kafka/streams/kstream/KStream;)Lorg/apache/kafka/streams/kstream/KStream;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;)V
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#to(Ljava/lang/String;)V
+#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
+#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
+#transform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#process(Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;
+#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#countByKey(Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#countByKey(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
+#countByKey(Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#countByKey(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/util/Set;Z)V
+#print(Ljava/lang/String;)V
+#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
+#groupByKey()Lorg/apache/kafka/streams/kstream/KGroupedStream;
+#groupByKey(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/util/Set;)V
-#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
-#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
-#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
-#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#countByKey(Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
-#countByKey(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
-#countByKey(Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#countByKey(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.2.0
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;
@0.11.0.0
+#peek(Lorg/apache/kafka/streams/kstream/ForeachAction;)Lorg/apache/kafka/streams/kstream/KStream;
@1.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/lang/String;Ljava/util/Set;Z)V
+#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
+#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Ljava/lang/String;)V
+#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#print(Lorg/apache/kafka/streams/kstream/Printed;)V
+#writeAsText(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
+#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
+#merge(Lorg/apache/kafka/streams/kstream/KStream;)Lorg/apache/kafka/streams/kstream/KStream;
+#through(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Produced;)Lorg/apache/kafka/streams/kstream/KStream;
+#to(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Produced;)V
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
+#groupByKey(Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/util/Set;Z)V
-#merge(Lorg/apache/kafka/streams/kstream/KStreamBuilder;[Lorg/apache/kafka/streams/kstream/KStream;)Lorg/apache/kafka/streams/kstream/KStream;
@1.1.0
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
@2.0.0
+#to(Lorg/apache/kafka/streams/processor/TopicNameExtractor;)V
+#to(Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/streams/kstream/Produced;)V
-#print()V
-#print(Ljava/lang/String;)V
-#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
-#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
-#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Ljava/lang/String;)V
-#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
-#writeAsText(Ljava/lang/String;)V
-#writeAsText(Ljava/lang/String;Ljava/lang/String;)V
-#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#writeAsText(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
-#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
-#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
-#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
-#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
-#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
-#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
-#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
-#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
-#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
-#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
-#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
-#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
-#groupByKey(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
@2.1.0
*#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
*#groupByKey(Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
+#groupByKey(Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
-#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/lang/String;Ljava/util/Set;Z)V
@2.2.0
+#flatTransform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
@2.3.0
+#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
@2.4.0
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#selectKey(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#map(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMap(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#branch(Lorg/apache/kafka/streams/kstream/Named;[Lorg/apache/kafka/streams/kstream/Predicate;)[Lorg/apache/kafka/streams/kstream/KStream;
+#merge(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/streams/kstream/Named;)V
+#peek(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#transform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatTransform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#process(Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)V
*#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
*#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
*#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
@2.5.0
+#toTable()Lorg/apache/kafka/streams/kstream/KTable;
+#toTable(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#toTable(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#toTable(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.6.0
*#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#through(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Produced;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#repartition()Lorg/apache/kafka/streams/kstream/KStream;
+#repartition(Lorg/apache/kafka/streams/kstream/Repartitioned;)Lorg/apache/kafka/streams/kstream/KStream;
@2.8.0
*#branch([Lorg/apache/kafka/streams/kstream/Predicate;)[Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#branch(Lorg/apache/kafka/streams/kstream/Named;[Lorg/apache/kafka/streams/kstream/Predicate;)[Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#split()Lorg/apache/kafka/streams/kstream/BranchedKStream;
+#split(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/BranchedKStream;
@3.0.0
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
*#process(Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V[deprecated]
+#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)V
*#process(Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)V[deprecated]
+#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)V
-#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
-#groupByKey(Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
-#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
@3.3.0
*#transform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#processValues(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#processValues(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
-#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)V
-#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)V

+###org/apache/kafka/streams/kstream/internals/KStreamPrint
@0.11.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@1.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/ForeachAction;)V
-#<init>(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@2.8.0
+#get()Ljava/lang/Object;
@3.0.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KStreamReduce
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Reducer;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#enableSendingOldValues()V
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
@2.0.0
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Reducer;)V
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KStreamTransform$KStreamTransformProcessor
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/Transformer;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
+#punctuate(J)V
+#close()V
@2.0.0
-#punctuate(J)V
@2.2.0
-###org/apache/kafka/streams/kstream/internals/KStreamTransform$KStreamTransformProcessor

+###org/apache/kafka/streams/kstream/internals/KStreamTransform
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/TransformerSupplier;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.2.0
-###org/apache/kafka/streams/kstream/internals/KStreamTransform

+###org/apache/kafka/streams/kstream/internals/KStreamTransformValues$KStreamTransformValuesProcessor
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/ValueTransformer;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
+#punctuate(J)V
+#close()V
@1.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKey;)V
-#<init>(Lorg/apache/kafka/streams/kstream/ValueTransformer;)V
@2.0.0
-#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKey;)V
-#punctuate(J)V
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
-#process(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/kafka/streams/kstream/internals/KStreamTransformValues
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@1.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKeySupplier;)V
-#<init>(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;)V
@2.0.0
-#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKeySupplier;)V
@2.6.0
+#stores()Ljava/util/Set;
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KStreamWindowAggregate
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#enableSendingOldValues()V
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
@2.0.0
-#<init>(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V
@2.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V
+#windows()Lorg/apache/kafka/streams/kstream/Windows;
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;
@3.3.0
+#<init>(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/EmitStrategy;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V
-#<init>(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V

+###org/apache/kafka/streams/kstream/internals/KStreamWindowReduce
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Reducer;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#enableSendingOldValues()V
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
@2.0.0
-#<init>(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Reducer;)V
@2.1.0
-###org/apache/kafka/streams/kstream/internals/KStreamWindowReduce

+###org/apache/kafka/streams/kstream/internals/KTableAggregate
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;)V
+#enableSendingOldValues()V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
@1.0.1
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;)V
@2.7.0
+#enableSendingOldValues(Z)Z
-#enableSendingOldValues()V
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KTableImpl
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;)V
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KTable;
+#print()V
+#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#writeAsText(Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;)V
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#to(Ljava/lang/String;)V
+#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
+#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
+#toStream()Lorg/apache/kafka/streams/kstream/KStream;
+#toStream(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#getStoreName()Ljava/lang/String;
+#print(Ljava/lang/String;)V
+#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#materialize(Lorg/apache/kafka/streams/kstream/internals/KTableSource;)V
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;)V
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.1.1
-#materialize(Lorg/apache/kafka/streams/kstream/internals/KTableSource;)V
@0.10.2.0
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
@0.11.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Ljava/lang/String;Z)V
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Z)V
+#queryableStoreName()Ljava/lang/String;
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Ljava/lang/String;)V
-#getStoreName()Ljava/lang/String;
@1.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Ljava/lang/String;Z)V
+#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Z)V
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Z)V
@1.1.0
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.0.0
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Materialized;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#filter(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#print()V
-#print(Ljava/lang/String;)V
-#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
-#writeAsText(Ljava/lang/String;)V
-#writeAsText(Ljava/lang/String;Ljava/lang/String;)V
-#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;)V
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#to(Ljava/lang/String;)V
-#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
-#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
-#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
-#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
-#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;ZLorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
+#suppress(Lorg/apache/kafka/streams/kstream/Suppressed;)Lorg/apache/kafka/streams/kstream/KTable;
*#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedTable;[deprecated]
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
-#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/util/Set;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Z)V
@2.2.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;ZLorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
@2.3.0
+#valueGetterSupplier()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#enableSendingOldValues()V
@2.4.0
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Materialized;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#toStream(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#toStream(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.7.0
+#enableSendingOldValues(Z)Z
-#enableSendingOldValues()V
@2.8.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/graph/GraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
@3.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/graph/GraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
-#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedTable;[deprecated]
@3.1.0
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/TableJoined;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/TableJoined;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/TableJoined;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/TableJoined;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/kstream/internals/KTableProcessorSupplier
@0.10.0.0
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#enableSendingOldValues()V
@2.7.0
+#enableSendingOldValues(Z)Z
-#enableSendingOldValues()V

+###org/apache/kafka/streams/kstream/internals/KTableReduce
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;)V
+#enableSendingOldValues()V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
@1.0.1
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;)V
@2.7.0
+#enableSendingOldValues(Z)Z
-#enableSendingOldValues()V
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KTableRepartitionMap
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableImpl;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#enableSendingOldValues()V
@1.0.1
-#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableImpl;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V
@2.7.0
+#enableSendingOldValues(Z)Z
-#enableSendingOldValues()V
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KTableSource
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#materialize()V
+#isMaterialized()Z
+#enableSendingOldValues()V
@0.10.1.1
-#materialize()V
-#isMaterialized()Z
@2.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#queryableName()Ljava/lang/String;
+#materialize()V
-#<init>(Ljava/lang/String;)V
@2.4.1
+#materialized()Z
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#get()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
@0.10.1.1
+#storeNames()[Ljava/lang/String;
@2.2.0
-#<init>(Ljava/lang/String;)V
@2.4.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/streams/kstream/internals/KTableValueGetter
@0.10.0.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0
+#close()V
@2.3.0
+#get(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
-#get(Ljava/lang/Object;)Ljava/lang/Object;
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V

+###org/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier
@0.10.0.0
+#get()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
@0.10.1.1
+#storeNames()[Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/SessionKeySerde
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
+#configure(Ljava/util/Map;Z)V
+#close()V
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#extractEnd([B)J
+#extractStart([B)J
+#extractKeyBytes([B)[B
+#from([BLorg/apache/kafka/common/serialization/Deserializer;)Lorg/apache/kafka/streams/kstream/Windowed;
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/common/utils/Bytes;
+#bytesToBinary(Lorg/apache/kafka/streams/kstream/Windowed;)Lorg/apache/kafka/common/utils/Bytes;
+#extractWindow([B)Lorg/apache/kafka/streams/kstream/Window;
@0.10.2.1
+#from([BLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;)Lorg/apache/kafka/common/utils/Bytes;
+#fromBytes(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/kstream/Windowed;
-#from([BLorg/apache/kafka/common/serialization/Deserializer;)Lorg/apache/kafka/streams/kstream/Windowed;
-#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/common/utils/Bytes;
@0.11.0.0
-#extractWindow([B)Lorg/apache/kafka/streams/kstream/Window;
@1.0.0
+#extractWindow([B)Lorg/apache/kafka/streams/kstream/Window;
@2.0.0
-###org/apache/kafka/streams/kstream/internals/SessionKeySerde

+###org/apache/kafka/streams/kstream/internals/SessionWindow
@0.10.2.0
+#<init>(JJ)V
+#overlap(Lorg/apache/kafka/streams/kstream/Window;)Z

+###org/apache/kafka/streams/kstream/internals/TimeWindow
@0.10.0.0
+#<init>(JJ)V
+#overlap(Lorg/apache/kafka/streams/kstream/Window;)Z

+###org/apache/kafka/streams/kstream/internals/UnlimitedWindow
@0.10.0.0
+#<init>(J)V
+#overlap(Lorg/apache/kafka/streams/kstream/Window;)Z

+###org/apache/kafka/streams/kstream/internals/WindowedDeserializer
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;)V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Lorg/apache/kafka/streams/kstream/Windowed;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@0.10.2.0
+#<init>()V
+#innerDeserializer()Lorg/apache/kafka/common/serialization/Deserializer;
@1.0.0
+#<init>(Ljava/lang/Long;)V
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;J)V
+#getWindowSize()Ljava/lang/Long;
@2.0.0
-###org/apache/kafka/streams/kstream/internals/WindowedDeserializer

+###org/apache/kafka/streams/kstream/internals/WindowedSerializer
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;)V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
+#close()V
+#serializeBaseKey(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@0.10.2.0
+#<init>()V
+#innerSerializer()Lorg/apache/kafka/common/serialization/Serializer;
@1.0.0
-#serializeBaseKey(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
-#innerSerializer()Lorg/apache/kafka/common/serialization/Serializer;
@2.0.0
+#serializeBaseKey(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
-#<init>(Lorg/apache/kafka/common/serialization/Serializer;)V
-#<init>()V
-#configure(Ljava/util/Map;Z)V
-#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
-#close()V
-#serialize(Ljava/lang/String;Ljava/lang/Object;)[B

+###org/apache/kafka/streams/kstream/internals/WindowedStreamPartitioner
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/WindowedSerializer;)V
+#partition(Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;I)Ljava/lang/Integer;
+#partition(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
@0.10.2.1
-#<init>(Lorg/apache/kafka/streams/kstream/internals/WindowedSerializer;)V
@2.0.0
+#partition(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;I)Ljava/lang/Integer;
+#partition(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
-#partition(Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;I)Ljava/lang/Integer;
-#partition(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
@2.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/WindowedSerializer;)V
@3.4.0
*#partition(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;I)Ljava/lang/Integer;[deprecated]
*#partition(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;[deprecated]

+###org/apache/kafka/streams/kstream/JoinWindows
@0.10.0.0
+#of(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#within(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#before(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#after(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#windowsFor(J)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.1
+#with(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
-#within(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
@0.10.1.0
+#of(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#size()J
-#of(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/JoinWindows;
-#with(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
@0.10.2.0
+#until(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#maintainMs()J
+#until(J)Lorg/apache/kafka/streams/kstream/Windows;
@2.1.0
*#of(J)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
+#of(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/JoinWindows;
*#before(J)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
+#before(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/JoinWindows;
*#after(J)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
+#after(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#grace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#gracePeriodMs()J
*#until(J)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
*#maintainMs()J[deprecated]
+#toString()Ljava/lang/String;
*#until(J)Lorg/apache/kafka/streams/kstream/Windows;[deprecated]
@3.0.0
-#of(J)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
-#before(J)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
-#after(J)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
-#until(J)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
-#maintainMs()J[deprecated]
-#until(J)Lorg/apache/kafka/streams/kstream/Windows;[deprecated]
@3.1.0
+#ofTimeDifferenceAndGrace(Ljava/time/Duration;Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/JoinWindows;
+#ofTimeDifferenceWithNoGrace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/JoinWindows;
*#of(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]
*#grace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/JoinWindows;[deprecated]

+###org/apache/kafka/streams/kstream/KeyValueMapper
@0.10.0.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/KGroupedStream
@0.10.1.0
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.2.0
+#count(Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
@0.11.0.0
+#count()Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
@1.0.0
*#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#count(Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#count(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#count(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#count(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#count(Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#count(Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#count(Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#count(Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/KTable;
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#windowedBy(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/TimeWindowedKStream;
+#windowedBy(Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/SessionWindowedKStream;
@2.0.0
-#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#count(Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#count(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#count(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#count(Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#count(Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#count(Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#count(Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
@2.4.0
+#count(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.5.0
+#cogroup(Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/CogroupedKStream;
@2.7.0
+#windowedBy(Lorg/apache/kafka/streams/kstream/SlidingWindows;)Lorg/apache/kafka/streams/kstream/TimeWindowedKStream;

+###org/apache/kafka/streams/kstream/KGroupedTable
@0.10.0.0
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.2.0
+#count(Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
@0.11.0.0
+#count()Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
@1.0.0
*#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#count(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#count(Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
@2.0.0
-#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#count(Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
@2.4.0
+#count(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/kstream/KStream
@0.10.0.0
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KStream;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KStream;
+#selectKey(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#map(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#print()V
+#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#writeAsText(Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#flatMap(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#branch([Lorg/apache/kafka/streams/kstream/Predicate;)[Lorg/apache/kafka/streams/kstream/KStream;
+#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;)V
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#to(Ljava/lang/String;)V
+#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
+#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
+#transform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#process(Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;
+#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#countByKey(Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
+#countByKey(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
+#countByKey(Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#countByKey(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.1.0
+#print(Ljava/lang/String;)V
+#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
+#groupByKey()Lorg/apache/kafka/streams/kstream/KGroupedStream;
+#groupByKey(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
-#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
-#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
-#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
-#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#reduceByKey(Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#aggregateByKey(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#countByKey(Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KTable;
-#countByKey(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/KTable;
-#countByKey(Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#countByKey(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.2.0
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;
@0.11.0.0
+#peek(Lorg/apache/kafka/streams/kstream/ForeachAction;)Lorg/apache/kafka/streams/kstream/KStream;
@1.0.0
*#print()V[deprecated]
*#print(Ljava/lang/String;)V[deprecated]
*#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
*#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
+#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
+#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Ljava/lang/String;)V[deprecated]
+#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
+#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
+#print(Lorg/apache/kafka/streams/kstream/Printed;)V
+#merge(Lorg/apache/kafka/streams/kstream/KStream;)Lorg/apache/kafka/streams/kstream/KStream;
*#writeAsText(Ljava/lang/String;)V[deprecated]
*#writeAsText(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
*#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
+#writeAsText(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
+#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
+#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
+#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
*#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#through(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Produced;)Lorg/apache/kafka/streams/kstream/KStream;
*#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V[deprecated]
*#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
*#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V[deprecated]
+#to(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Produced;)V
+#groupByKey(Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
*#groupByKey(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
*#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
*#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
*#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
*#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
*#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
*#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
@1.1.0
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
@2.0.0
+#to(Lorg/apache/kafka/streams/processor/TopicNameExtractor;)V
+#to(Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/streams/kstream/Produced;)V
-#print()V[deprecated]
-#print(Ljava/lang/String;)V[deprecated]
-#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
-#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
-#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
-#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Ljava/lang/String;)V[deprecated]
-#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
-#print(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
-#writeAsText(Ljava/lang/String;)V[deprecated]
-#writeAsText(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
-#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
-#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
-#writeAsText(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
-#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
-#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
-#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/KeyValueMapper;)V[deprecated]
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V[deprecated]
-#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
-#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V[deprecated]
-#groupByKey(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
-#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
-#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
@2.1.0
*#groupByKey(Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
+#groupByKey(Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
*#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedStream;
@2.2.0
+#flatTransform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
@2.3.0
+#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
@2.4.0
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#selectKey(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#map(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMap(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatMapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/streams/kstream/Named;)V
+#peek(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#branch(Lorg/apache/kafka/streams/kstream/Named;[Lorg/apache/kafka/streams/kstream/Predicate;)[Lorg/apache/kafka/streams/kstream/KStream;
+#merge(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#transform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatTransform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#process(Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)V
*#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
*#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
*#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
@2.5.0
+#toTable()Lorg/apache/kafka/streams/kstream/KTable;
+#toTable(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#toTable(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#toTable(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.6.0
*#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#through(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Produced;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#repartition()Lorg/apache/kafka/streams/kstream/KStream;
+#repartition(Lorg/apache/kafka/streams/kstream/Repartitioned;)Lorg/apache/kafka/streams/kstream/KStream;
@2.8.0
*#branch([Lorg/apache/kafka/streams/kstream/Predicate;)[Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#branch(Lorg/apache/kafka/streams/kstream/Named;[Lorg/apache/kafka/streams/kstream/Predicate;)[Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#split()Lorg/apache/kafka/streams/kstream/BranchedKStream;
+#split(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/BranchedKStream;
@3.0.0
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;
+#leftJoin(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
*#process(Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V[deprecated]
+#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)V
*#process(Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)V[deprecated]
+#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)V
-#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
-#groupByKey(Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedStream;[deprecated]
-#join(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#leftJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
-#outerJoin(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
@3.3.0
*#transform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransform(Lorg/apache/kafka/streams/kstream/TransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
*#flatTransformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;[deprecated]
+#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#processValues(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#processValues(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
-#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)V
-#process(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)V

+###org/apache/kafka/streams/kstream/KStreamBuilder
@0.10.0.0
+#<init>()V
+#stream([Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#table(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#merge([Lorg/apache/kafka/streams/kstream/KStream;)Lorg/apache/kafka/streams/kstream/KStream;
+#newName(Ljava/lang/String;)Ljava/lang/String;
@0.10.1.0
+#stream(Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/kstream/KStream;
+#table(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#table(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#table(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.2.0
+#stream(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/kstream/KStream;
+#table(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#globalTable(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#globalTable(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
@0.11.0.0
+#stream(Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/kstream/KStream;
+#table(Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#globalTable(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#globalTable(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#globalTable(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#globalTable(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#newStoreName(Ljava/lang/String;)Ljava/lang/String;
@2.0.0
-###org/apache/kafka/streams/kstream/KStreamBuilder

+###org/apache/kafka/streams/kstream/KTable
@0.10.0.0
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KTable;
+#print()V
+#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#writeAsText(Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#to(Ljava/lang/String;)V
+#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
+#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V
+#toStream()Lorg/apache/kafka/streams/kstream/KStream;
+#toStream(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
+#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;)V
@0.10.1.0
+#print(Ljava/lang/String;)V
+#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;)V
+#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#through(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#getStoreName()Ljava/lang/String;
-#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.11.0.0
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
*#print()V[deprecated]
*#print(Ljava/lang/String;)V[deprecated]
*#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
*#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
*#writeAsText(Ljava/lang/String;)V[deprecated]
*#writeAsText(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
*#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
*#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;)V[deprecated]
+#through(Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#queryableStoreName()Ljava/lang/String;
-#getStoreName()Ljava/lang/String;
@1.0.0
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#filter(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#to(Ljava/lang/String;)V[deprecated]
*#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V[deprecated]
*#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
*#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V[deprecated]
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
*#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedTable;[deprecated]
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
*#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
@1.1.0
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.0.0
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Materialized;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
-#filter(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#print()V[deprecated]
-#print(Ljava/lang/String;)V[deprecated]
-#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
-#print(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
-#writeAsText(Ljava/lang/String;)V[deprecated]
-#writeAsText(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
-#writeAsText(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
-#writeAsText(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]
-#foreach(Lorg/apache/kafka/streams/kstream/ForeachAction;)V[deprecated]
-#through(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#through(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#to(Ljava/lang/String;)V[deprecated]
-#to(Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V[deprecated]
-#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)V[deprecated]
-#to(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)V[deprecated]
-#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/KGroupedTable;[deprecated]
-#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
-#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
@2.1.0
+#suppress(Lorg/apache/kafka/streams/kstream/Suppressed;)Lorg/apache/kafka/streams/kstream/KTable;
*#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedTable;[deprecated]
+#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedTable;
@2.4.0
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#filter(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#filterNot(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#mapValues(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#toStream(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#toStream(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#transformValues(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;Lorg/apache/kafka/streams/kstream/Materialized;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#outerJoin(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@3.0.0
-#groupBy(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Serialized;)Lorg/apache/kafka/streams/kstream/KGroupedTable;[deprecated]
@3.1.0
*#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/TableJoined;)Lorg/apache/kafka/streams/kstream/KTable;
*#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#join(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/TableJoined;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
*#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/TableJoined;)Lorg/apache/kafka/streams/kstream/KTable;
*#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;[deprecated]
+#leftJoin(Lorg/apache/kafka/streams/kstream/KTable;Ljava/util/function/Function;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/TableJoined;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/kstream/Merger
@0.10.2.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/Predicate
@0.10.0.0
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/kafka/streams/kstream/PrintForeachAction
@0.11.0.0
+#<init>(Ljava/io/PrintWriter;Ljava/lang/String;)V
+#apply(Ljava/lang/Object;Ljava/lang/Object;)V
+#close()V
@1.0.0
-###org/apache/kafka/streams/kstream/PrintForeachAction

+###org/apache/kafka/streams/kstream/Reducer
@0.10.0.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/SessionWindows
@0.10.2.0
+#with(J)Lorg/apache/kafka/streams/kstream/SessionWindows;
+#until(J)Lorg/apache/kafka/streams/kstream/SessionWindows;
+#inactivityGap()J
+#maintainMs()J
@1.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.1.0
*#with(J)Lorg/apache/kafka/streams/kstream/SessionWindows;[deprecated]
+#with(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SessionWindows;
*#until(J)Lorg/apache/kafka/streams/kstream/SessionWindows;[deprecated]
+#grace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SessionWindows;
+#gracePeriodMs()J
*#maintainMs()J[deprecated]
+#toString()Ljava/lang/String;
@3.0.0
+#ofInactivityGapWithNoGrace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SessionWindows;
+#ofInactivityGapAndGrace(Ljava/time/Duration;Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SessionWindows;
*#with(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SessionWindows;[deprecated]
*#grace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SessionWindows;[deprecated]
-#with(J)Lorg/apache/kafka/streams/kstream/SessionWindows;[deprecated]
-#until(J)Lorg/apache/kafka/streams/kstream/SessionWindows;[deprecated]
-#maintainMs()J[deprecated]

+###org/apache/kafka/streams/kstream/TimeWindows
@0.10.0.0
+#of(Ljava/lang/String;J)Lorg/apache/kafka/streams/kstream/TimeWindows;
+#advanceBy(J)Lorg/apache/kafka/streams/kstream/TimeWindows;
+#windowsFor(J)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.1.0
+#of(J)Lorg/apache/kafka/streams/kstream/TimeWindows;
+#size()J
-#of(Ljava/lang/String;J)Lorg/apache/kafka/streams/kstream/TimeWindows;
@0.10.2.0
+#until(J)Lorg/apache/kafka/streams/kstream/TimeWindows;
+#maintainMs()J
+#until(J)Lorg/apache/kafka/streams/kstream/Windows;
@2.1.0
*#of(J)Lorg/apache/kafka/streams/kstream/TimeWindows;[deprecated]
+#of(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/TimeWindows;
*#advanceBy(J)Lorg/apache/kafka/streams/kstream/TimeWindows;[deprecated]
+#advanceBy(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/TimeWindows;
+#grace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/TimeWindows;
+#gracePeriodMs()J
*#until(J)Lorg/apache/kafka/streams/kstream/TimeWindows;[deprecated]
*#maintainMs()J[deprecated]
+#toString()Ljava/lang/String;
*#until(J)Lorg/apache/kafka/streams/kstream/Windows;[deprecated]
@3.0.0
+#ofSizeWithNoGrace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/TimeWindows;
+#ofSizeAndGrace(Ljava/time/Duration;Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/TimeWindows;
*#of(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/TimeWindows;[deprecated]
*#grace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/TimeWindows;[deprecated]
-#of(J)Lorg/apache/kafka/streams/kstream/TimeWindows;[deprecated]
-#advanceBy(J)Lorg/apache/kafka/streams/kstream/TimeWindows;[deprecated]
-#until(J)Lorg/apache/kafka/streams/kstream/TimeWindows;[deprecated]
-#maintainMs()J[deprecated]
-#until(J)Lorg/apache/kafka/streams/kstream/Windows;[deprecated]

+###org/apache/kafka/streams/kstream/Transformer
@0.10.0.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#transform(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#punctuate(J)Ljava/lang/Object;
+#close()V
@1.0.0
*#punctuate(J)Ljava/lang/Object;[deprecated]
@2.0.0
-#punctuate(J)Ljava/lang/Object;[deprecated]

+###org/apache/kafka/streams/kstream/TransformerSupplier
@0.10.0.0
+#get()Lorg/apache/kafka/streams/kstream/Transformer;
@2.8.0
+#get()Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/UnlimitedWindows
@0.10.0.0
+#of(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;
+#startOn(J)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;
+#windowsFor(J)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.1.0
+#of()Lorg/apache/kafka/streams/kstream/UnlimitedWindows;
+#size()J
-#of(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;
@0.10.2.0
+#until(J)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;
+#maintainMs()J
+#until(J)Lorg/apache/kafka/streams/kstream/Windows;
@2.1.0
*#startOn(J)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;[deprecated]
+#startOn(Ljava/time/Instant;)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;
*#until(J)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;[deprecated]
*#maintainMs()J[deprecated]
+#gracePeriodMs()J
+#toString()Ljava/lang/String;
*#until(J)Lorg/apache/kafka/streams/kstream/Windows;[deprecated]
@3.0.0
-#startOn(J)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;[deprecated]
-#until(J)Lorg/apache/kafka/streams/kstream/UnlimitedWindows;[deprecated]
-#maintainMs()J[deprecated]
-#until(J)Lorg/apache/kafka/streams/kstream/Windows;[deprecated]

+###org/apache/kafka/streams/kstream/ValueJoiner
@0.10.0.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/ValueMapper
@0.10.0.0
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/ValueTransformer
@0.10.0.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
+#punctuate(J)Ljava/lang/Object;
+#close()V
@1.0.0
*#punctuate(J)Ljava/lang/Object;[deprecated]
@2.0.0
-#punctuate(J)Ljava/lang/Object;[deprecated]

+###org/apache/kafka/streams/kstream/ValueTransformerSupplier
@0.10.0.0
+#get()Lorg/apache/kafka/streams/kstream/ValueTransformer;

+###org/apache/kafka/streams/kstream/Window
@0.10.0.0
+#<init>(JJ)V
+#start()J
+#end()J
+#overlap(Lorg/apache/kafka/streams/kstream/Window;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.2.0
+#toString()Ljava/lang/String;
@2.1.0
+#startTime()Ljava/time/Instant;
+#endTime()Ljava/time/Instant;

+###org/apache/kafka/streams/kstream/Windowed
@0.10.0.0
+#<init>(Ljava/lang/Object;Lorg/apache/kafka/streams/kstream/Window;)V
+#key()Ljava/lang/Object;
+#window()Lorg/apache/kafka/streams/kstream/Window;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/kstream/Windows
@0.10.0.0
+#name()Ljava/lang/String;
+#until(J)Lorg/apache/kafka/streams/kstream/Windows;
+#maintainMs()J
+#windowsFor(J)Ljava/util/Map;
@0.10.1.0
+#size()J
-#name()Ljava/lang/String;
@2.1.0
*#until(J)Lorg/apache/kafka/streams/kstream/Windows;[deprecated]
*#maintainMs()J[deprecated]
+#gracePeriodMs()J
@3.0.0
-#until(J)Lorg/apache/kafka/streams/kstream/Windows;[deprecated]
-#maintainMs()J[deprecated]

+###org/apache/kafka/streams/processor/AbstractProcessor
@0.10.0.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#punctuate(J)V
+#close()V
@2.0.0
-#punctuate(J)V

+###org/apache/kafka/streams/processor/DefaultPartitionGrouper
@0.10.0.0
+#<init>()V
+#partitionGroups(Ljava/util/Map;Lorg/apache/kafka/common/Cluster;)Ljava/util/Map;
@3.0.0
-###org/apache/kafka/streams/processor/DefaultPartitionGrouper

+###org/apache/kafka/streams/processor/FailOnInvalidTimestamp
@0.10.2.0
+#<init>()V
+#onInvalidTimestamp(Lorg/apache/kafka/clients/consumer/ConsumerRecord;JJ)J
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;J)J

+###org/apache/kafka/streams/processor/internals/AbstractProcessorContext
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#applicationId()Ljava/lang/String;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#topic()Ljava/lang/String;
+#partition()I
+#offset()J
+#timestamp()J
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
+#setRecordContext(Lorg/apache/kafka/streams/processor/internals/RecordContext;)V
+#recordContext()Lorg/apache/kafka/streams/processor/internals/RecordContext;
+#setCurrentNode(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
+#currentNode()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
+#getCache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
+#initialized()V
@1.1.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#uninitialize()V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
@2.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#metrics()Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#headers()Lorg/apache/kafka/common/header/Headers;
+#setRecordContext(Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
+#recordContext()Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
-#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
-#forward(Ljava/lang/Object;Ljava/lang/Object;)V
-#setRecordContext(Lorg/apache/kafka/streams/processor/internals/RecordContext;)V
-#recordContext()Lorg/apache/kafka/streams/processor/internals/RecordContext;
@2.1.0
+#initialize()V
-#initialized()V
@2.6.0
+#setSystemTimeMs(J)V
+#currentSystemTimeMs()J
+#cache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
+#taskType()Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
-#getCache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
@2.7.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#recordMetadata()Ljava/util/Optional;
+#changelogFor(Ljava/lang/String;)Ljava/lang/String;
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
@3.2.0
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;Lorg/apache/kafka/streams/processor/CommitCallback;)V
@3.3.0
+#addProcessorMetadataKeyValue(Ljava/lang/String;J)V
+#processorMetadataForKey(Ljava/lang/String;)Ljava/lang/Long;
+#setProcessorMetadata(Lorg/apache/kafka/streams/processor/internals/ProcessorMetadata;)V
+#getProcessorMetadata()Lorg/apache/kafka/streams/processor/internals/ProcessorMetadata;

+###org/apache/kafka/streams/processor/internals/AbstractTask
@0.10.0.0
+#id()Lorg/apache/kafka/streams/processor/TaskId;
+#applicationId()Ljava/lang/String;
+#partitions()Ljava/util/Set;
+#topology()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#context()Lorg/apache/kafka/streams/processor/ProcessorContext;
+#commit()V
+#close()V
@0.10.1.0
+#cache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
+#commitOffsets()V
+#getStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#toString()Ljava/lang/String;
+#flushState()V
@0.10.2.0
+#initTopology()V
+#closeTopology()V
+#toString(Ljava/lang/String;)Ljava/lang/String;
@0.11.0.0
+#resume()V
+#suspend()V
+#close(Z)V
-#close()V
-#initTopology()V
-#closeTopology()V
-#commitOffsets()V
-#flushState()V
@0.11.0.1
+#close(ZZ)V
+#initialize()Z
-#close(Z)V
-#cache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
@0.11.0.3
+#initializeStateStores()Z
+#initializeTopology()V
-#initialize()Z
@1.0.0
+#hasStateStores()Z
+#changelogPartitions()Ljava/util/Collection;
-#resume()V
-#commit()V
-#suspend()V
-#close(ZZ)V
-#initializeStateStores()Z
-#initializeTopology()V
@2.0.0
+#isClosed()Z
@2.0.1
+#isEosEnabled()Z
@2.1.0
+#commitNeeded()Z
@2.6.0
+#inputPartitions()Ljava/util/Set;
+#markChangelogAsCorrupted(Ljava/util/Collection;)V
+#state()Lorg/apache/kafka/streams/processor/internals/Task$State;
+#revive()V
+#update(Ljava/util/Set;Ljava/util/Map;)V
-#applicationId()Ljava/lang/String;
-#partitions()Ljava/util/Set;
-#topology()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
-#context()Lorg/apache/kafka/streams/processor/ProcessorContext;
-#toString()Ljava/lang/String;
-#isEosEnabled()Z
-#toString(Ljava/lang/String;)Ljava/lang/String;
-#commitNeeded()Z
-#hasStateStores()Z
@2.8.0
+#updateInputPartitions(Ljava/util/Set;Ljava/util/Map;)V
+#maybeInitTaskTimeoutOrThrow(JLjava/lang/Exception;)V
+#clearTaskTimeout()V
-#isClosed()Z
-#update(Ljava/util/Set;Ljava/util/Map;)V
@3.3.0
+#maybeCheckpoint(Z)V
@3.4.0
+#changelogPartitions()Ljava/util/Set;
+#stateManager()Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
-#changelogPartitions()Ljava/util/Collection;

+###org/apache/kafka/streams/processor/internals/assignment/AssignmentInfo
@0.10.0.0
+#<init>(Ljava/util/List;Ljava/util/Map;)V
+#encode()Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/streams/processor/internals/assignment/AssignmentInfo;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@0.10.1.0
+#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(Ljava/util/List;Ljava/util/Map;)V
@0.10.2.2
+#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
@0.11.0.0
-#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
@0.11.0.3
+#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
@1.0.0
-#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
@1.0.2
+#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
@1.1.0
-#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
@1.1.1
+#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
@2.0.0
+#<init>()V
+#version()I
+#latestSupportedVersion()I
+#activeTasks()Ljava/util/List;
+#standbyTasks()Ljava/util/Map;
+#partitionsByHost()Ljava/util/Map;
@2.1.0
+#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;I)V
+#errCode()I
-#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
@2.2.2
+#<init>(II)V
+#<init>(IILjava/util/List;Ljava/util/Map;Ljava/util/Map;I)V
+#commonlySupportedVersion()I
-#<init>()V
-#latestSupportedVersion()I
@2.3.0
+#<init>()V
+#latestSupportedVersion()I
-#<init>(II)V
-#<init>(IILjava/util/List;Ljava/util/Map;Ljava/util/Map;I)V
-#commonlySupportedVersion()I
@2.3.1
+#<init>(II)V
+#<init>(IILjava/util/List;Ljava/util/Map;Ljava/util/Map;I)V
+#commonlySupportedVersion()I
-#<init>()V
-#latestSupportedVersion()I
@2.5.0
+#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;I)V
+#<init>(IILjava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;I)V
+#standbyPartitionByHost()Ljava/util/Map;
-#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(ILjava/util/List;Ljava/util/Map;Ljava/util/Map;I)V
-#<init>(IILjava/util/List;Ljava/util/Map;Ljava/util/Map;I)V
@2.6.0
+#setNextRebalanceTime(J)V
+#nextRebalanceMs()J

+###org/apache/kafka/streams/processor/internals/assignment/ClientState
@0.10.0.0
+#<init>()V
+#<init>(D)V
+#copy()Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
+#assign(Ljava/lang/Object;Z)V
@0.10.0.1
+#toString()Ljava/lang/String;
@0.11.0.0
+#assign(Lorg/apache/kafka/streams/processor/TaskId;Z)V
+#activeTasks()Ljava/util/Set;
+#standbyTasks()Ljava/util/Set;
+#assignedTaskCount()I
+#incrementCapacity()V
+#activeTaskCount()I
+#addPreviousActiveTasks(Ljava/util/Set;)V
+#addPreviousStandbyTasks(Ljava/util/Set;)V
-#<init>(D)V
-#assign(Ljava/lang/Object;Z)V
@2.0.0
+#prevActiveTasks()Ljava/util/Set;
+#prevStandbyTasks()Ljava/util/Set;
@2.2.2
+#addPreviousActiveTasks(Ljava/lang/String;Ljava/util/Set;)V
+#addPreviousStandbyTasks(Ljava/lang/String;Ljava/util/Set;)V
+#prevActiveTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
+#prevStandbyTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
-#addPreviousActiveTasks(Ljava/util/Set;)V
-#addPreviousStandbyTasks(Ljava/util/Set;)V
@2.3.0
+#addPreviousActiveTasks(Ljava/util/Set;)V
+#addPreviousStandbyTasks(Ljava/util/Set;)V
-#addPreviousActiveTasks(Ljava/lang/String;Ljava/util/Set;)V
-#addPreviousStandbyTasks(Ljava/lang/String;Ljava/util/Set;)V
-#prevActiveTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
-#prevStandbyTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
@2.3.1
+#addPreviousActiveTasks(Ljava/lang/String;Ljava/util/Set;)V
+#addPreviousStandbyTasks(Ljava/lang/String;Ljava/util/Set;)V
+#prevActiveTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
+#prevStandbyTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
-#addPreviousActiveTasks(Ljava/util/Set;)V
-#addPreviousStandbyTasks(Ljava/util/Set;)V
@2.4.0
+#ownedPartitions()Ljava/util/Map;
+#addPreviousActiveTasks(Ljava/util/Set;)V
+#addPreviousStandbyTasks(Ljava/util/Set;)V
+#addOwnedPartitions(Ljava/util/Collection;Ljava/lang/String;)V
+#removeFromAssignment(Lorg/apache/kafka/streams/processor/TaskId;)V
+#assignActiveTasks(Ljava/util/Collection;)V
-#addPreviousActiveTasks(Ljava/lang/String;Ljava/util/Set;)V
-#addPreviousStandbyTasks(Ljava/lang/String;Ljava/util/Set;)V
-#prevActiveTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
-#prevStandbyTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
@2.6.0
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;I)V
+#assignActive(Lorg/apache/kafka/streams/processor/TaskId;)V
+#unassignActive(Lorg/apache/kafka/streams/processor/TaskId;)V
+#assignStandby(Lorg/apache/kafka/streams/processor/TaskId;)V
+#previousOwnerForPartition(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/String;
+#addPreviousTasksAndOffsetSums(Ljava/lang/String;Ljava/util/Map;)V
+#initializePrevTasks(Ljava/util/Map;)V
+#computeTaskLags(Ljava/util/UUID;Ljava/util/Map;)V
+#lagFor(Lorg/apache/kafka/streams/processor/TaskId;)J
+#statefulActiveTasks()Ljava/util/Set;
+#statelessActiveTasks()Ljava/util/Set;
+#previousTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
-#assign(Lorg/apache/kafka/streams/processor/TaskId;Z)V
-#prevActiveTasks()Ljava/util/Set;
-#prevStandbyTasks()Ljava/util/Set;
-#ownedPartitions()Ljava/util/Map;
-#addPreviousActiveTasks(Ljava/util/Set;)V
-#addPreviousStandbyTasks(Ljava/util/Set;)V
-#removeFromAssignment(Lorg/apache/kafka/streams/processor/TaskId;)V
@2.7.0
+#assignActiveToConsumer(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;)V
+#assignStandbyToConsumer(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;)V
+#revokeActiveFromConsumer(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;)V
+#prevOwnedActiveTasksByConsumer()Ljava/util/Map;
+#prevOwnedStandbyByConsumer()Ljava/util/Map;
+#prevOwnedStatefulTasksByConsumer(Ljava/lang/String;)Ljava/util/Set;
+#assignedActiveTasksByConsumer()Ljava/util/Map;
+#revokingActiveTasksByConsumer()Ljava/util/Map;
+#assignedStandbyTasksByConsumer()Ljava/util/Map;
+#currentAssignment()Ljava/lang/String;
-#copy()Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
-#previousTasksForConsumer(Ljava/lang/String;)Ljava/util/Set;
@3.0.0
+#consumers()Ljava/lang/String;
@3.1.0
+#prevTasksByLag(Ljava/lang/String;)Ljava/util/SortedSet;
@3.2.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;I)V
+#clientTags()Ljava/util/Map;
+#initializePrevTasks(Ljava/util/Map;Z)V
-#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;I)V
-#initializePrevTasks(Ljava/util/Map;)V

+###org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor
@0.11.0.0
+#<init>(Ljava/util/Map;Ljava/util/Set;)V
+#assign(I)V
@2.6.0
+#<init>()V
+#assign(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs;)Z
-#<init>(Ljava/util/Map;Ljava/util/Set;)V
-#assign(I)V

+###org/apache/kafka/streams/processor/internals/assignment/SubscriptionInfo
@0.10.0.0
+#<init>(Ljava/util/UUID;Ljava/util/Set;Ljava/util/Set;)V
+#encode()Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/streams/processor/internals/assignment/SubscriptionInfo;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.10.1.0
+#<init>(Ljava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
-#<init>(Ljava/util/UUID;Ljava/util/Set;Ljava/util/Set;)V
@0.10.2.2
+#<init>(ILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@0.11.0.0
-#<init>(ILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@0.11.0.3
+#<init>(ILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@1.0.0
-#<init>(ILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@1.0.2
+#<init>(ILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@1.1.0
-#<init>(ILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@1.1.1
+#<init>(ILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@2.0.0
+#version()I
+#latestSupportedVersion()I
+#processId()Ljava/util/UUID;
+#prevTasks()Ljava/util/Set;
+#standbyTasks()Ljava/util/Set;
+#userEndPoint()Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.5.0
+#<init>(IILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
-#<init>(Ljava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
-#<init>(ILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@2.6.0
+#<init>(IILjava/util/UUID;Ljava/lang/String;Ljava/util/Map;)V
+#taskOffsetSums()Ljava/util/Map;
+#getActiveTasksFromTaskOffsetSumMap(Ljava/util/Map;)Ljava/util/Set;
+#getStandbyTasksFromTaskOffsetSumMap(Ljava/util/Map;)Ljava/util/Set;
-#<init>(IILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
@2.6.1
+#<init>(IILjava/util/UUID;Ljava/lang/String;Ljava/util/Map;B)V
-#<init>(IILjava/util/UUID;Ljava/lang/String;Ljava/util/Map;)V
@2.8.0
+#<init>(IILjava/util/UUID;Ljava/lang/String;Ljava/util/Map;BI)V
+#errorCode()I
-#<init>(IILjava/util/UUID;Ljava/lang/String;Ljava/util/Map;B)V
@3.2.0
+#<init>(IILjava/util/UUID;Ljava/lang/String;Ljava/util/Map;BILjava/util/Map;)V
+#clientTags()Ljava/util/Map;
-#<init>(IILjava/util/UUID;Ljava/lang/String;Ljava/util/Map;BI)V

+###org/apache/kafka/streams/processor/internals/assignment/TaskAssignor
@0.10.0.0
+#assign(Ljava/util/Map;Ljava/util/Set;I)Ljava/util/Map;
+#assignTasks()V
+#assignStandbyTasks(I)V
@0.10.1.0
+#assign(Ljava/util/Map;Ljava/util/Set;ILjava/lang/String;)Ljava/util/Map;
-#assign(Ljava/util/Map;Ljava/util/Set;I)Ljava/util/Map;
@0.10.2.0
+#assign(Ljava/util/Map;Ljava/util/Set;I)V
-#assign(Ljava/util/Map;Ljava/util/Set;ILjava/lang/String;)Ljava/util/Map;
-#assignTasks()V
-#assignStandbyTasks(I)V
@0.11.0.0
+#assign(I)V
-#assign(Ljava/util/Map;Ljava/util/Set;I)V
@2.6.0
+#assign(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs;)Z
-#assign(I)V

+###org/apache/kafka/streams/processor/internals/ChangelogReader
@0.11.0.0
+#validatePartitionExists(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;)V
+#register(Lorg/apache/kafka/streams/processor/internals/StateRestorer;)V
+#restore()V
+#restoredOffsets()Ljava/util/Map;
@0.11.0.1
+#restore()Ljava/util/Collection;
+#reset()V
-#restore()V
@0.11.0.2
-#validatePartitionExists(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;)V
@1.0.0
+#restore(Lorg/apache/kafka/streams/processor/internals/RestoringTasks;)Ljava/util/Collection;
-#restore()Ljava/util/Collection;
@2.4.0
+#remove(Ljava/util/List;)V
+#clear()V
+#isEmpty()Z
-#reset()V
@2.6.0
+#restore()V
+#enforceRestoreActive()V
+#transitToUpdateStandby()V
+#completedChangelogs()Ljava/util/Set;
-#register(Lorg/apache/kafka/streams/processor/internals/StateRestorer;)V
-#restore(Lorg/apache/kafka/streams/processor/internals/RestoringTasks;)Ljava/util/Collection;
-#restoredOffsets()Ljava/util/Map;
-#remove(Ljava/util/List;)V
@2.8.0
+#restore(Ljava/util/Map;)V
-#restore()V
@3.3.0
+#allChangelogsCompleted()Z

+###org/apache/kafka/streams/processor/internals/DefaultKafkaClientSupplier
@0.10.0.0
+#<init>()V
+#getProducer(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
+#getConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/Consumer;
+#getRestoreConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/Consumer;
@1.1.0
+#getAdminClient(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;
@2.0.0
+#getGlobalConsumer(Ljava/util/Map;)Lorg/apache/kafka/clients/consumer/Consumer;
@2.4.0
*#getAdminClient(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;[deprecated]
+#getAdmin(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/Admin;
@3.0.0
-#getAdminClient(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;[deprecated]

+###org/apache/kafka/streams/processor/internals/DefaultStreamPartitioner
@0.10.1.0
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/Cluster;Ljava/lang/String;)V
+#partition(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
@2.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/Cluster;)V
+#partition(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
-#<init>(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/Cluster;Ljava/lang/String;)V
-#partition(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
@3.3.0
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;)V
-#<init>(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/Cluster;)V
@3.4.0
*#partition(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;[deprecated]

+###org/apache/kafka/streams/processor/internals/GlobalProcessorContextImpl
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;I)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#commit()V
+#schedule(J)V
@1.0.0
+#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
@1.1.0
-#forward(Ljava/lang/Object;Ljava/lang/Object;)V
@2.0.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/To;)V
-#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
-#schedule(J)V
@2.1.0
*#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
+#schedule(Ljava/time/Duration;Lorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
+#streamTime()J
@2.2.0
-#streamTime()J
@2.3.0
*#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
*#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
@2.6.0
+#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJ)V
+#transitionToActive(Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#transitionToStandby(Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#registerCacheFlushListener(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;)V
@2.7.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/GlobalStateManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#forward(Lorg/apache/kafka/streams/processor/api/Record;)V
+#forward(Lorg/apache/kafka/streams/processor/api/Record;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
@3.0.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/GlobalStateManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;)V
+#currentSystemTimeMs()J
+#currentStreamTimeMs()J
-#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/GlobalStateManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
-#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
-#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
-#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
@3.2.0
+#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJLorg/apache/kafka/streams/query/Position;)V
-#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJ)V
@3.3.0
+#forward(Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;)V
+#forward(Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/internals/GlobalStateManager
@0.10.2.0
+#initialize(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Ljava/util/Set;
@1.1.0
+#setGlobalProcessorContext(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
+#initialize()Ljava/util/Set;
-#initialize(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Ljava/util/Set;

+###org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;)V
+#initialize(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Ljava/util/Set;
+#getGlobalStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#getStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#baseDir()Ljava/io/File;
+#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#flush(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
+#close(Ljava/util/Map;)V
+#checkpointedOffsets()Ljava/util/Map;
@0.10.2.2
+#checkpoint(Ljava/util/Map;)V
+#checkpointed()Ljava/util/Map;
-#checkpointedOffsets()Ljava/util/Map;
@0.11.0.0
+#flush()V
-#flush(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@1.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;)V
-#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
@1.1.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;Lorg/apache/kafka/streams/StreamsConfig;)V
+#setGlobalProcessorContext(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
+#initialize()Ljava/util/Set;
+#reinitializeStateStoresForPartitions(Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
+#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
-#initialize(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Ljava/util/Set;
@2.2.0
+#close(Z)V
-#close(Ljava/util/Map;)V
@2.2.1
+#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Lorg/apache/kafka/common/utils/FixedOrderMap;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.2.2
-#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Lorg/apache/kafka/common/utils/FixedOrderMap;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.3.0
+#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Lorg/apache/kafka/common/utils/FixedOrderMap;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.3.1
-#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Lorg/apache/kafka/common/utils/FixedOrderMap;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.6.0
+#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#close()V
+#taskType()Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
+#changelogOffsets()Ljava/util/Map;
-#reinitializeStateStoresForPartitions(Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
-#close(Z)V
-#checkpointed()Ljava/util/Map;
@2.7.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;Lorg/apache/kafka/streams/StreamsConfig;)V
+#updateChangelogOffsets(Ljava/util/Map;)V
+#checkpoint()V
+#changelogFor(Ljava/lang/String;)Ljava/lang/String;
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;Lorg/apache/kafka/streams/StreamsConfig;)V
-#checkpoint(Ljava/util/Map;)V
@3.2.0
+#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;Lorg/apache/kafka/streams/processor/CommitCallback;)V
-#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V

+###org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/streams/processor/internals/GlobalStateManager;)V
+#initialize()Ljava/util/Map;
+#update(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V
+#flushState()V
+#close()V
@1.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/streams/processor/internals/GlobalStateManager;Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/streams/processor/internals/GlobalStateManager;)V
@2.6.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/streams/processor/internals/GlobalStateManager;Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler;)V
+#close(Z)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/streams/processor/internals/GlobalStateManager;Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler;Lorg/apache/kafka/common/utils/LogContext;)V
-#close()V

+###org/apache/kafka/streams/processor/internals/GlobalStreamThread$State
@0.10.2.2
+#values()[Lorg/apache/kafka/streams/processor/internals/GlobalStreamThread$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/GlobalStreamThread$State;
+#isRunning()Z
+#isValidTransition(Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;)Z
@0.11.0.0
-###org/apache/kafka/streams/processor/internals/GlobalStreamThread$State

+###org/apache/kafka/streams/processor/internals/GlobalStreamThread
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;)V
+#run()V
+#start()V
+#close()V
+#stillRunning()Z
@0.10.2.2
+#setStateListener(Lorg/apache/kafka/streams/processor/internals/StreamThread$StateListener;)V
+#state()Lorg/apache/kafka/streams/processor/internals/GlobalStreamThread$State;
@0.11.0.0
-#setStateListener(Lorg/apache/kafka/streams/processor/internals/StreamThread$StateListener;)V
-#state()Lorg/apache/kafka/streams/processor/internals/GlobalStreamThread$State;
@0.11.0.1
+#setStateListener(Lorg/apache/kafka/streams/processor/internals/StreamThread$StateListener;)V
+#state()Lorg/apache/kafka/streams/processor/internals/GlobalStreamThread$State;
@1.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
+#shutdown()V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;)V
-#close()V
@1.1.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;JLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
@2.0.0
+#consumerMetrics()Ljava/util/Map;
@2.4.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;JLorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;JLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
@2.7.0
+#inErrorState()Z
+#stillInitializing()Z
@2.8.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;JLorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateRestoreListener;Ljava/util/function/Consumer;)V
+#setUncaughtExceptionHandler(Ljava/util/function/Consumer;)V
+#resize(J)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;JLorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V

+###org/apache/kafka/streams/processor/internals/InternalProcessorContext
@0.10.1.0
+#recordContext()Lorg/apache/kafka/streams/processor/internals/RecordContext;
+#setRecordContext(Lorg/apache/kafka/streams/processor/internals/RecordContext;)V
+#setCurrentNode(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
+#getCache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
@0.10.1.1
+#currentNode()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
@0.10.2.0
+#initialized()V
@1.1.0
+#uninitialize()V
@2.0.0
+#metrics()Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
+#recordContext()Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
+#setRecordContext(Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
-#recordContext()Lorg/apache/kafka/streams/processor/internals/RecordContext;
-#setRecordContext(Lorg/apache/kafka/streams/processor/internals/RecordContext;)V
@2.1.0
+#initialize()V
+#streamTime()J
-#initialized()V
@2.2.0
-#streamTime()J
@2.4.0
+#getStateStore(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/processor/StateStore;
@2.6.0
+#setSystemTimeMs(J)V
+#currentSystemTimeMs()J
+#cache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
+#taskType()Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
+#transitionToActive(Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#transitionToStandby(Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#registerCacheFlushListener(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;)V
+#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJ)V
-#getCache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
@2.7.0
+#changelogFor(Ljava/lang/String;)Ljava/lang/String;
@3.0.0
-#currentSystemTimeMs()J
@3.2.0
+#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJLorg/apache/kafka/streams/query/Position;)V
-#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJ)V
@3.3.0
+#addProcessorMetadataKeyValue(Ljava/lang/String;J)V
+#processorMetadataForKey(Ljava/lang/String;)Ljava/lang/Long;
+#setProcessorMetadata(Lorg/apache/kafka/streams/processor/internals/ProcessorMetadata;)V
+#getProcessorMetadata()Lorg/apache/kafka/streams/processor/internals/ProcessorMetadata;

+###org/apache/kafka/streams/processor/internals/InternalTopicConfig$CleanupPolicy
@0.10.1.0
+#values()[Lorg/apache/kafka/streams/processor/internals/InternalTopicConfig$CleanupPolicy;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/InternalTopicConfig$CleanupPolicy;
@1.1.0
-###org/apache/kafka/streams/processor/internals/InternalTopicConfig$CleanupPolicy

+###org/apache/kafka/streams/processor/internals/InternalTopicConfig
@0.10.1.0
+#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;)V
+#toProperties(J)Ljava/util/Properties;
+#name()Ljava/lang/String;
+#setRetentionMs(J)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0.0
+#toString()Ljava/lang/String;
@1.1.0
+#getProperties(Ljava/util/Map;J)Ljava/util/Map;
+#numberOfPartitions()I
-#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;)V
-#toProperties(J)Ljava/util/Properties;
-#setRetentionMs(J)V
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@2.4.0
+#numberOfPartitions()Ljava/util/Optional;
+#setNumberOfPartitions(I)V
-#numberOfPartitions()I
@2.6.0
+#hasEnforcedNumberOfPartitions()Z

+###org/apache/kafka/streams/processor/internals/InternalTopicManager
@0.10.0.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#makeReady(Ljava/lang/String;IZ)V
@0.10.1.0
+#<init>(Ljava/lang/String;IJ)V
+#makeReady(Lorg/apache/kafka/streams/processor/internals/InternalTopicConfig;I)V
-#<init>(Ljava/lang/String;I)V
-#makeReady(Ljava/lang/String;IZ)V
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient;IJ)V
+#makeReady(Ljava/util/Map;)V
+#getNumPartitions(Ljava/util/Set;)Ljava/util/Map;
+#close()V
-#<init>()V
-#<init>(Ljava/lang/String;IJ)V
-#makeReady(Lorg/apache/kafka/streams/processor/internals/InternalTopicConfig;I)V
@0.10.2.1
+#<init>(Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient;IJLorg/apache/kafka/common/utils/Time;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient;IJ)V
@1.1.0
+#<init>(Lorg/apache/kafka/clients/admin/AdminClient;Lorg/apache/kafka/streams/StreamsConfig;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient;IJLorg/apache/kafka/common/utils/Time;)V
-#getNumPartitions(Ljava/util/Set;)Ljava/util/Map;
-#close()V
@2.4.0
+#<init>(Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/streams/StreamsConfig;)V
-#<init>(Lorg/apache/kafka/clients/admin/AdminClient;Lorg/apache/kafka/streams/StreamsConfig;)V
@2.6.0
+#makeReady(Ljava/util/Map;)Ljava/util/Set;
-#makeReady(Ljava/util/Map;)V
@2.7.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/streams/StreamsConfig;)V
-#<init>(Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/streams/StreamsConfig;)V
@3.0.0
+#validate(Ljava/util/Map;)Lorg/apache/kafka/streams/processor/internals/InternalTopicManager$ValidationResult;
+#setup(Ljava/util/Map;)V

+###org/apache/kafka/streams/processor/internals/MinTimestampTracker
@0.10.0.0
+#<init>()V
+#addElement(Lorg/apache/kafka/streams/processor/internals/Stamped;)V
+#removeElement(Lorg/apache/kafka/streams/processor/internals/Stamped;)V
+#size()I
+#get()J
@0.11.0.2
+#clear()V
@1.0.0
-#clear()V
@1.0.1
+#clear()V
@2.1.0
-###org/apache/kafka/streams/processor/internals/MinTimestampTracker

+###org/apache/kafka/streams/processor/internals/PartitionGroup$RecordInfo
@0.10.0.0
+#<init>()V
+#node()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
+#partition()Lorg/apache/kafka/common/TopicPartition;
+#queue()Lorg/apache/kafka/streams/processor/internals/RecordQueue;
@0.11.0.0
-#queue()Lorg/apache/kafka/streams/processor/internals/RecordQueue;
@2.5.0
-###org/apache/kafka/streams/processor/internals/PartitionGroup$RecordInfo

+###org/apache/kafka/streams/processor/internals/PartitionGroup
@0.10.0.0
+#<init>(Ljava/util/Map;Lorg/apache/kafka/streams/processor/TimestampExtractor;)V
+#nextRecord(Lorg/apache/kafka/streams/processor/internals/PartitionGroup$RecordInfo;)Lorg/apache/kafka/streams/processor/internals/StampedRecord;
+#addRawRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)I
+#partitions()Ljava/util/Set;
+#timestamp()J
+#numBuffered(Lorg/apache/kafka/common/TopicPartition;)I
+#topQueueSize()I
+#numBuffered()I
+#close()V
@0.10.2.0
+#clear()V
@0.11.0.0
-#<init>(Ljava/util/Map;Lorg/apache/kafka/streams/processor/TimestampExtractor;)V
-#nextRecord(Lorg/apache/kafka/streams/processor/internals/PartitionGroup$RecordInfo;)Lorg/apache/kafka/streams/processor/internals/StampedRecord;
-#addRawRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)I
-#numBuffered(Lorg/apache/kafka/common/TopicPartition;)I
-#topQueueSize()I
-#numBuffered()I
@2.2.2
+#streamTime()J
-#timestamp()J
@2.3.0
+#timestamp()J
-#streamTime()J
@2.3.1
+#streamTime()J
-#timestamp()J
@2.5.0
-#partitions()Ljava/util/Set;
-#streamTime()J
-#close()V
-#clear()V
@3.0.0
+#readyToProcess(J)Z

+###org/apache/kafka/streams/processor/internals/ProcessorContextImpl
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/StreamsMetrics;)V
+#initialized()V
+#getStateMgr()Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#applicationId()Ljava/lang/String;
+#recordCollector()Lorg/apache/kafka/streams/processor/internals/RecordCollector;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#topic()Ljava/lang/String;
+#partition()I
+#offset()J
+#timestamp()J
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;I)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#commit()V
+#schedule(J)V
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#getCache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
+#setRecordContext(Lorg/apache/kafka/streams/processor/internals/RecordContext;)V
+#recordContext()Lorg/apache/kafka/streams/processor/internals/RecordContext;
+#setCurrentNode(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/StreamsMetrics;)V
@0.10.1.1
+#currentNode()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
@0.10.2.0
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
-#initialized()V
-#taskId()Lorg/apache/kafka/streams/processor/TaskId;
-#applicationId()Ljava/lang/String;
-#keySerde()Lorg/apache/kafka/common/serialization/Serde;
-#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
-#stateDir()Ljava/io/File;
-#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
-#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
-#getCache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
-#topic()Ljava/lang/String;
-#partition()I
-#offset()J
-#timestamp()J
-#appConfigs()Ljava/util/Map;
-#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
-#setRecordContext(Lorg/apache/kafka/streams/processor/internals/RecordContext;)V
-#recordContext()Lorg/apache/kafka/streams/processor/internals/RecordContext;
-#setCurrentNode(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
-#currentNode()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
@1.0.0
+#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
*#schedule(J)V[deprecated]
@1.1.0
-#forward(Ljava/lang/Object;Ljava/lang/Object;)V
@2.0.0
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/To;)V
-#schedule(J)V[deprecated]
@2.1.0
*#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
+#schedule(Ljava/time/Duration;Lorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
+#streamTime()J
@2.2.0
-#streamTime()J
@2.3.0
*#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
*#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
@2.6.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#transitionToActive(Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#transitionToStandby(Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#registerCacheFlushListener(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;)V
+#stateManager()Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJ)V
+#topic()Ljava/lang/String;
+#partition()I
+#offset()J
+#timestamp()J
+#currentNode()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
+#setRecordContext(Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
+#recordContext()Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
-#getStateMgr()Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
@2.7.0
+#forward(Lorg/apache/kafka/streams/processor/api/Record;)V
+#forward(Lorg/apache/kafka/streams/processor/api/Record;Ljava/lang/String;)V
+#stateManager()Lorg/apache/kafka/streams/processor/internals/StateManager;
-#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
@3.0.0
+#currentStreamTimeMs()J
-#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
-#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
-#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
@3.2.0
+#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJLorg/apache/kafka/streams/query/Position;)V
-#logChange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJ)V
@3.3.0
+#forward(Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;)V
+#forward(Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/internals/ProcessorNode$NodeMetrics
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;Lorg/apache/kafka/streams/StreamsMetrics;Ljava/lang/String;Ljava/lang/String;)V
+#removeAllSensors()V
@0.11.0.0
+#<init>(Lorg/apache/kafka/streams/StreamsMetrics;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;Lorg/apache/kafka/streams/StreamsMetrics;Ljava/lang/String;Ljava/lang/String;)V
@0.11.0.1
+#<init>(Lorg/apache/kafka/streams/StreamsMetrics;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorContext;)V
-#<init>(Lorg/apache/kafka/streams/StreamsMetrics;Ljava/lang/String;Ljava/lang/String;)V
@2.0.0
-###org/apache/kafka/streams/processor/internals/ProcessorNode$NodeMetrics

+###org/apache/kafka/streams/processor/internals/ProcessorNode
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/Processor;Ljava/util/Set;)V
+#name()Ljava/lang/String;
+#processor()Lorg/apache/kafka/streams/processor/Processor;
+#children()Ljava/util/List;
+#addChild(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
+#close()V
@0.10.1.0
+#toString()Ljava/lang/String;
@0.10.2.0
+#punctuate(J)V
+#toString(Ljava/lang/String;)Ljava/lang/String;
@1.0.0
+#punctuate(JLorg/apache/kafka/streams/processor/Punctuator;)V
-#punctuate(J)V
@2.0.0
+#init(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
@2.6.0
+#isTerminalNode()Z
@2.7.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/Processor;Ljava/util/Set;)V
+#processor()Lorg/apache/kafka/streams/processor/api/Processor;
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V
-#processor()Lorg/apache/kafka/streams/processor/Processor;
-#process(Ljava/lang/Object;Ljava/lang/Object;)V
@3.3.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/FixedKeyProcessor;Ljava/util/Set;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/Processor;Ljava/util/Set;)V
-#processor()Lorg/apache/kafka/streams/processor/api/Processor;

+###org/apache/kafka/streams/processor/internals/ProcessorRecordContext
@0.10.1.0
+#<init>(JJILjava/lang/String;)V
+#offset()J
+#timestamp()J
+#topic()Ljava/lang/String;
+#partition()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0
+#<init>(JJILjava/lang/String;Lorg/apache/kafka/common/header/Headers;)V
+#setTimestamp(J)V
+#headers()Lorg/apache/kafka/common/header/Headers;
@2.1.0
+#sizeBytes()J
@2.2.1
+#serialize()[B
+#deserialize(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
*#hashCode()I[deprecated]
+#toString()Ljava/lang/String;
-#<init>(JJILjava/lang/String;)V
@2.3.0
-#setTimestamp(J)V
@2.4.0
+#residentMemorySizeEstimate()J
-#sizeBytes()J

+###org/apache/kafka/streams/processor/internals/ProcessorStateManager
@0.10.0.0
+#<init>(Ljava/lang/String;ILjava/util/Collection;Ljava/io/File;Lorg/apache/kafka/clients/consumer/Consumer;Z)V
+#storeChangelogTopic(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#lockStateDirectory(Ljava/io/File;)Ljava/nio/channels/FileLock;
+#baseDir()Ljava/io/File;
+#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#checkpointedOffsets()Ljava/util/Map;
+#updateStandbyStates(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;)Ljava/util/List;
+#putOffsetLimit(Lorg/apache/kafka/common/TopicPartition;J)V
+#getStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#flush()V
+#close(Ljava/util/Map;)V
@0.10.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/Consumer;ZLorg/apache/kafka/streams/processor/internals/StateDirectory;Ljava/util/Map;Ljava/util/Map;)V
+#flush(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#<init>(Ljava/lang/String;ILjava/util/Collection;Ljava/io/File;Lorg/apache/kafka/clients/consumer/Consumer;Z)V
-#lockStateDirectory(Ljava/io/File;)Ljava/nio/channels/FileLock;
-#flush()V
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/Consumer;ZLorg/apache/kafka/streams/processor/internals/StateDirectory;Ljava/util/Map;)V
+#getGlobalStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/Consumer;ZLorg/apache/kafka/streams/processor/internals/StateDirectory;Ljava/util/Map;Ljava/util/Map;)V
@0.10.2.2
+#checkpointed()Ljava/util/Map;
+#checkpoint(Ljava/util/Map;)V
-#checkpointedOffsets()Ljava/util/Map;
@0.11.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;ZLorg/apache/kafka/streams/processor/internals/StateDirectory;Ljava/util/Map;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Z)V
+#flush()V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/Consumer;ZLorg/apache/kafka/streams/processor/internals/StateDirectory;Ljava/util/Map;)V
-#updateStandbyStates(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;)Ljava/util/List;
-#putOffsetLimit(Lorg/apache/kafka/common/TopicPartition;J)V
-#flush(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@1.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;ZLorg/apache/kafka/streams/processor/internals/StateDirectory;Ljava/util/Map;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;ZLorg/apache/kafka/common/utils/LogContext;)V
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;ZLorg/apache/kafka/streams/processor/internals/StateDirectory;Ljava/util/Map;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Z)V
-#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
@1.1.0
+#reinitializeStateStoresForPartitions(Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
+#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.2.0
+#close(Z)V
-#close(Ljava/util/Map;)V
@2.2.1
+#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Lorg/apache/kafka/common/utils/FixedOrderMap;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.2.2
-#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Lorg/apache/kafka/common/utils/FixedOrderMap;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.3.0
+#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Lorg/apache/kafka/common/utils/FixedOrderMap;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.3.1
-#reinitializeStateStoresForPartitions(Lorg/slf4j/Logger;Lorg/apache/kafka/common/utils/FixedOrderMap;Ljava/util/Map;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@2.6.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/Task$TaskType;ZLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;Ljava/util/Map;Ljava/util/Collection;)V
+#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#changelogOffsets()Ljava/util/Map;
+#taskType()Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
+#close()V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;ZLorg/apache/kafka/streams/processor/internals/StateDirectory;Ljava/util/Map;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;ZLorg/apache/kafka/common/utils/LogContext;)V
-#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
-#reinitializeStateStoresForPartitions(Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#checkpointed()Ljava/util/Map;
-#close(Z)V
@2.6.2
+#deleteCheckPointFileIfEOSEnabled()V
@2.7.0
+#flushCache()V
+#updateChangelogOffsets(Ljava/util/Map;)V
+#checkpoint()V
+#registeredChangelogPartitionFor(Ljava/lang/String;)Lorg/apache/kafka/common/TopicPartition;
+#changelogFor(Ljava/lang/String;)Ljava/lang/String;
-#checkpoint(Ljava/util/Map;)V
@3.1.0
+#storeChangelogTopic(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#storeChangelogTopic(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.2.0
+#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;Lorg/apache/kafka/streams/processor/CommitCallback;)V
-#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
@3.4.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/Task$TaskType;ZLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;Ljava/util/Map;Ljava/util/Collection;Z)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/Task$TaskType;ZLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;Ljava/util/Map;Ljava/util/Collection;)V

+###org/apache/kafka/streams/processor/internals/ProcessorTopology
@0.10.0.0
+#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V
+#sourceTopics()Ljava/util/Set;
+#source(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/SourceNode;
+#sources()Ljava/util/Set;
+#processors()Ljava/util/List;
+#stateStoreSuppliers()Ljava/util/List;
@0.10.1.0
+#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)V
+#sinkTopics()Ljava/util/Set;
+#sink(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/SinkNode;
+#sinks()Ljava/util/Set;
+#stateStores()Ljava/util/List;
+#sourceStoreToSourceTopic()Ljava/util/Map;
+#storeToProcessorNodeMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
-#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V
-#stateStoreSuppliers()Ljava/util/List;
@0.10.2.0
+#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V
+#storeToChangelogTopic()Ljava/util/Map;
+#globalStateStores()Ljava/util/List;
+#toString(Ljava/lang/String;)Ljava/lang/String;
-#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)V
-#sourceStoreToSourceTopic()Ljava/util/Map;
-#storeToProcessorNodeMap()Ljava/util/Map;
@1.0.1
+#processorConnectedStateStores(Ljava/lang/String;)Ljava/util/Set;
@1.1.0
+#with(Ljava/util/List;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Set;)V
-#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V
@2.2.0
+#hasPersistentLocalStore()Z
+#hasPersistentGlobalStore()Z
@2.2.1
-#with(Ljava/util/List;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
@2.6.0
+#terminalNodes()Ljava/util/Set;
+#updateSourceTopics(Ljava/util/Map;)V
-#sinks()Ljava/util/Set;
@2.6.1
+#hasStore(Ljava/lang/String;)Z
@3.1.0
-#hasStore(Ljava/lang/String;)Z

+###org/apache/kafka/streams/processor/internals/PunctuationQueue
@0.10.0.0
+#<init>()V
+#schedule(Lorg/apache/kafka/streams/processor/internals/PunctuationSchedule;)V
+#close()V
+#mayPunctuate(JLorg/apache/kafka/streams/processor/internals/Punctuator;)Z
@1.0.0
+#schedule(Lorg/apache/kafka/streams/processor/internals/PunctuationSchedule;)Lorg/apache/kafka/streams/processor/Cancellable;
-#schedule(Lorg/apache/kafka/streams/processor/internals/PunctuationSchedule;)V
-#mayPunctuate(JLorg/apache/kafka/streams/processor/internals/Punctuator;)Z

+###org/apache/kafka/streams/processor/internals/PunctuationSchedule
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;J)V
+#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;JJ)V
+#node()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
+#next(J)Lorg/apache/kafka/streams/processor/internals/PunctuationSchedule;
@1.0.0
+#punctuator()Lorg/apache/kafka/streams/processor/Punctuator;
+#cancellable()Lorg/apache/kafka/streams/processor/Cancellable;
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;J)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;JJ)V
@2.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/internals/Punctuator
@0.10.0.0
+#punctuate(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;J)V
@1.0.0
-###org/apache/kafka/streams/processor/internals/Punctuator

+###org/apache/kafka/streams/processor/internals/QuickUnion
@0.10.0.0
+#<init>()V
+#add(Ljava/lang/Object;)V
+#exists(Ljava/lang/Object;)Z
+#root(Ljava/lang/Object;)Ljava/lang/Object;
+#unite(Ljava/lang/Object;[Ljava/lang/Object;)V
@2.2.0
-#unite(Ljava/lang/Object;[Ljava/lang/Object;)V

+###org/apache/kafka/streams/processor/internals/RecordCollector$Supplier
@0.10.0.0
+#recordCollector()Lorg/apache/kafka/streams/processor/internals/RecordCollector;

+###org/apache/kafka/streams/processor/internals/RecordCollector
@0.10.0.0
+#<init>(Lorg/apache/kafka/clients/producer/Producer;)V
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
+#flush()V
+#close()V
@0.10.1.0
+#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/clients/producer/Producer;)V
@0.10.1.1
-#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;)V
@0.10.2.0
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
+#offsets()Ljava/util/Map;
-#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
-#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
@0.11.0.0
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
@2.0.0
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
@2.0.1
+#init(Lorg/apache/kafka/clients/producer/Producer;)V
@2.6.0
+#initialize()V
+#closeClean()V
+#closeDirty()V
-#init(Lorg/apache/kafka/clients/producer/Producer;)V
-#close()V
@3.3.0
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V

+###org/apache/kafka/streams/processor/internals/RecordCollectorImpl
@0.10.1.1
+#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;)V
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
+#flush()V
+#close()V
@0.10.2.0
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
+#offsets()Ljava/util/Map;
-#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
-#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
@0.11.0.0
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
@1.0.0
+#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;)V
@1.1.0
+#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;)V
-#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;)V
@2.0.0
+#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;Lorg/apache/kafka/common/metrics/Sensor;)V
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
-#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
@2.0.1
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;Lorg/apache/kafka/common/metrics/Sensor;)V
+#init(Lorg/apache/kafka/clients/producer/Producer;)V
-#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;Lorg/apache/kafka/common/metrics/Sensor;)V
@2.4.1
+#isRecoverable(Ljava/lang/RuntimeException;)Z
@2.6.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/StreamsProducer;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)V
+#initialize()V
+#closeClean()V
+#closeDirty()V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;Lorg/apache/kafka/common/metrics/Sensor;)V
-#init(Lorg/apache/kafka/clients/producer/Producer;)V
-#isRecoverable(Ljava/lang/RuntimeException;)Z
-#close()V
@3.3.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/StreamsProducer;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;)V
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
+#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/StreamsProducer;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
-#send(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V

+###org/apache/kafka/streams/processor/internals/RecordContext
@0.10.1.0
+#offset()J
+#timestamp()J
+#topic()Ljava/lang/String;
+#partition()I
@2.0.0
-###org/apache/kafka/streams/processor/internals/RecordContext

+###org/apache/kafka/streams/processor/internals/RecordQueue
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/streams/processor/internals/SourceNode;)V
+#source()Lorg/apache/kafka/streams/processor/internals/SourceNode;
+#partition()Lorg/apache/kafka/common/TopicPartition;
+#addRawRecords(Ljava/lang/Iterable;Lorg/apache/kafka/streams/processor/TimestampExtractor;)I
+#poll()Lorg/apache/kafka/streams/processor/internals/StampedRecord;
+#size()I
+#isEmpty()Z
+#timestamp()J
@0.10.2.0
+#addRawRecords(Ljava/lang/Iterable;)I
+#clear()V
-#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/streams/processor/internals/SourceNode;)V
-#addRawRecords(Ljava/lang/Iterable;Lorg/apache/kafka/streams/processor/TimestampExtractor;)I
@1.0.0
-#addRawRecords(Ljava/lang/Iterable;)I
@2.2.2
+#headRecordTimestamp()J
-#timestamp()J
@2.3.0
+#timestamp()J
-#headRecordTimestamp()J
@2.3.1
+#headRecordTimestamp()J
-#timestamp()J
@2.5.0
+#headRecordOffset()Ljava/lang/Long;
@3.3.0
+#poll(J)Lorg/apache/kafka/streams/processor/internals/StampedRecord;
+#close()V
-#poll()Lorg/apache/kafka/streams/processor/internals/StampedRecord;

+###org/apache/kafka/streams/processor/internals/SinkNode
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
+#addChild(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
+#close()V
+#valueSerializer()Lorg/apache/kafka/common/serialization/Serializer;
@0.10.1.0
+#toString()Ljava/lang/String;
@0.10.2.0
+#toString(Ljava/lang/String;)Ljava/lang/String;
-#close()V
-#valueSerializer()Lorg/apache/kafka/common/serialization/Serializer;
@2.0.0
+#init(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
@2.7.0
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V
-#process(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/kafka/streams/processor/internals/SourceNode
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#deserializeKey(Ljava/lang/String;[B)Ljava/lang/Object;
+#deserializeValue(Ljava/lang/String;[B)Ljava/lang/Object;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
+#close()V
+#valueDeserializer()Lorg/apache/kafka/common/serialization/Deserializer;
@0.10.1.0
+#<init>(Ljava/lang/String;[Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#toString()Ljava/lang/String;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#toString(Ljava/lang/String;)Ljava/lang/String;
-#<init>(Ljava/lang/String;[Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
-#deserializeKey(Ljava/lang/String;[B)Ljava/lang/Object;
-#deserializeValue(Ljava/lang/String;[B)Ljava/lang/Object;
-#close()V
-#valueDeserializer()Lorg/apache/kafka/common/serialization/Deserializer;
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#getTimestampExtractor()Lorg/apache/kafka/streams/processor/TimestampExtractor;
@2.0.0
+#init(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
@2.6.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
-#toString(Ljava/lang/String;)Ljava/lang/String;
@2.7.0
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V
-#process(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/kafka/streams/processor/internals/Stamped
@0.10.0.0
+#<init>(Ljava/lang/Object;J)V
+#compareTo(Ljava/lang/Object;)I
@2.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.2.0
-#<init>(Ljava/lang/Object;J)V

+###org/apache/kafka/streams/processor/internals/StampedRecord
@0.10.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/ConsumerRecord;J)V
+#topic()Ljava/lang/String;
+#partition()I
+#key()Ljava/lang/Object;
+#value()Ljava/lang/Object;
+#offset()J
+#toString()Ljava/lang/String;
@2.0.0
+#headers()Lorg/apache/kafka/common/header/Headers;

+###org/apache/kafka/streams/processor/internals/StandbyTask
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;)V
+#checkpointedOffsets()Ljava/util/Map;
+#changeLogPartitions()Ljava/util/Collection;
+#update(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;)Ljava/util/List;
+#commit()V
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;)V
+#close()V
+#commitOffsets()V
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;)V
@0.10.2.0
+#initTopology()V
+#closeTopology()V
@0.11.0.0
+#resume()V
+#suspend()V
+#close(Z)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;)V
-#checkpointedOffsets()Ljava/util/Map;
-#changeLogPartitions()Ljava/util/Collection;
-#close()V
-#initTopology()V
-#closeTopology()V
-#commitOffsets()V
-#toString()Ljava/lang/String;
@0.11.0.1
+#close(ZZ)V
+#initialize()Z
-#close(Z)V
@0.11.0.3
+#initializeStateStores()Z
+#initializeTopology()V
@1.0.0
+#closeSuspended(ZZLjava/lang/RuntimeException;)V
+#commitNeeded()Z
+#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)I
+#checkpointedOffsets()Ljava/util/Map;
+#maybePunctuateStreamTime()Z
+#maybePunctuateSystemTime()Z
+#process()Z
-#initializeStateStores()Z
-#initializeTopology()V
@1.0.1
+#initializeStateStores()Z
+#initializeTopology()V
-#initialize()Z
@1.1.0
-#commitNeeded()Z
-#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)I
-#maybePunctuateStreamTime()Z
-#maybePunctuateSystemTime()Z
-#process()Z
@2.0.0
-#checkpointedOffsets()Ljava/util/Map;
@2.4.0
+#initializeMetadata()V
-#suspend()V
-#closeSuspended(ZZLjava/lang/RuntimeException;)V
@2.5.0
+#changelogPositions()Ljava/util/Map;
@2.6.0
+#isActive()Z
+#initializeIfNeeded()V
+#completeRestoration()V
+#suspend()V
+#prepareCommit()Ljava/util/Map;
+#postCommit()V
+#closeClean()V
+#closeDirty()V
+#closeCleanAndRecycleState()V
+#commitNeeded()Z
+#changelogOffsets()Ljava/util/Map;
+#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)V
+#toString()Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;
-#initializeMetadata()V
-#initializeStateStores()Z
-#initializeTopology()V
-#commit()V
-#close(ZZ)V
-#update(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;)Ljava/util/List;
-#changelogPositions()Ljava/util/Map;
@2.7.0
+#postCommit(Z)V
+#maybeInitTaskTimeoutOrThrow(JLorg/apache/kafka/common/errors/TimeoutException;)V
+#clearTaskTimeout()V
-#postCommit()V
@2.8.0
+#completeRestoration(Ljava/util/function/Consumer;)V
-#completeRestoration()V
-#maybeInitTaskTimeoutOrThrow(JLorg/apache/kafka/common/errors/TimeoutException;)V
-#clearTaskTimeout()V
@3.0.0
+#committedOffsets()Ljava/util/Map;
+#highWaterMark()Ljava/util/Map;
+#timeCurrentIdlingStarted()Ljava/util/Optional;
@3.4.0
+#prepareRecycle()V
-#closeCleanAndRecycleState()V

+###org/apache/kafka/streams/processor/internals/StateDirectory
@0.10.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#directoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
+#lock(Lorg/apache/kafka/streams/processor/TaskId;I)Z
+#unlock(Lorg/apache/kafka/streams/processor/TaskId;)V
+#cleanRemovedTasks()V
+#listTaskDirectories()[Ljava/io/File;
@0.10.2.0
+#globalStateDir()Ljava/io/File;
+#lockGlobalState(I)Z
+#unlockGlobalState()V
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
+#cleanRemovedTasks(J)V
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
-#directoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
-#globalStateDir()Ljava/io/File;
-#lock(Lorg/apache/kafka/streams/processor/TaskId;I)Z
-#lockGlobalState(I)Z
-#unlockGlobalState()V
-#unlock(Lorg/apache/kafka/streams/processor/TaskId;)V
-#cleanRemovedTasks()V
-#listTaskDirectories()[Ljava/io/File;
@0.11.0.1
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
@0.11.0.3
+#directoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
@1.0.0
-#directoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
@1.0.2
+#directoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
@1.1.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/common/utils/Time;)V
+#clean()V
-#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
-#directoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
@1.1.1
+#directoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
@2.2.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/common/utils/Time;Z)V
-#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/common/utils/Time;)V
@2.6.2
+#initializeProcessId()Ljava/util/UUID;
+#close()V
@2.7.0
-#initializeProcessId()Ljava/util/UUID;
-#close()V
@2.7.1
+#initializeProcessId()Ljava/util/UUID;
+#close()V
@3.0.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/common/utils/Time;ZZ)V
+#getOrCreateDirectoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
-#directoryForTask(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
@3.1.0
+#clearLocalStateForNamedTopology(Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/common/utils/Time;Z)V

+###org/apache/kafka/streams/processor/internals/StateRestorer
@0.11.0.0
+#partition()Lorg/apache/kafka/common/TopicPartition;
@2.0.1
+#storeName()Ljava/lang/String;
@2.6.0
-###org/apache/kafka/streams/processor/internals/StateRestorer

+###org/apache/kafka/streams/processor/internals/StoreChangelogReader
@0.11.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/common/utils/Time;J)V
+#<init>(Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/common/utils/Time;J)V
+#validatePartitionExists(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;)V
+#register(Lorg/apache/kafka/streams/processor/internals/StateRestorer;)V
+#restore()V
+#restoredOffsets()Ljava/util/Map;
@0.11.0.1
+#restore()Ljava/util/Collection;
+#reset()V
-#restore()V
@0.11.0.2
+#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/consumer/Consumer;)V
+#<init>(Lorg/apache/kafka/clients/consumer/Consumer;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/common/utils/Time;J)V
-#<init>(Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/common/utils/Time;J)V
-#validatePartitionExists(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;)V
@1.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/StateRestoreListener;Lorg/apache/kafka/common/utils/LogContext;)V
+#restore(Lorg/apache/kafka/streams/processor/internals/RestoringTasks;)Ljava/util/Collection;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/consumer/Consumer;)V
-#<init>(Lorg/apache/kafka/clients/consumer/Consumer;)V
-#restore()Ljava/util/Collection;
@2.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/Consumer;Ljava/time/Duration;Lorg/apache/kafka/streams/processor/StateRestoreListener;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/StateRestoreListener;Lorg/apache/kafka/common/utils/LogContext;)V
@2.4.0
+#remove(Ljava/util/List;)V
+#clear()V
+#isEmpty()Z
+#toString()Ljava/lang/String;
-#reset()V
@2.6.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/StateRestoreListener;)V
+#enforceRestoreActive()V
+#transitToUpdateStandby()V
+#register(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;)V
+#completedChangelogs()Ljava/util/Set;
+#restore()V
+#unregister(Ljava/util/Collection;)V
-#<init>(Lorg/apache/kafka/clients/consumer/Consumer;Ljava/time/Duration;Lorg/apache/kafka/streams/processor/StateRestoreListener;Lorg/apache/kafka/common/utils/LogContext;)V
-#register(Lorg/apache/kafka/streams/processor/internals/StateRestorer;)V
-#restore(Lorg/apache/kafka/streams/processor/internals/RestoringTasks;)Ljava/util/Collection;
-#restoredOffsets()Ljava/util/Map;
-#remove(Ljava/util/List;)V
@2.8.0
+#restore(Ljava/util/Map;)V
-#restore()V
@3.3.0
+#allChangelogsCompleted()Z
@3.4.0
+#register(Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;)V

+###org/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates
@0.10.1.0
+#<init>()V
+#getUpdates()Ljava/util/Collection;
+#hasUpdates()Z
@0.10.1.1
+#toString()Ljava/lang/String;
@1.1.0
+#updateTopics(Ljava/util/Collection;)V
@2.0.0
-###org/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates

+###org/apache/kafka/streams/processor/internals/StreamPartitionAssignor
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#name()Ljava/lang/String;
+#subscription(Ljava/util/Set;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
+#assign(Lorg/apache/kafka/common/Cluster;Ljava/util/Map;)Ljava/util/Map;
+#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)V
+#tasksForState(Ljava/lang/String;)Ljava/util/Set;
+#tasksForPartition(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Set;
+#standbyTasks()Ljava/util/Map;
+#setInternalTopicManager(Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;)V
@0.10.1.0
+#getPartitionsByHostState()Ljava/util/Map;
+#clusterMetadata()Lorg/apache/kafka/common/Cluster;
@0.10.2.0
+#close()V
-#getPartitionsByHostState()Ljava/util/Map;
-#clusterMetadata()Lorg/apache/kafka/common/Cluster;
-#tasksForState(Ljava/lang/String;)Ljava/util/Set;
-#tasksForPartition(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Set;
-#standbyTasks()Ljava/util/Map;
-#setInternalTopicManager(Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;)V
@1.0.0
+#getPartitionsByHostState()Ljava/util/Map;
+#clusterMetadata()Lorg/apache/kafka/common/Cluster;
+#activeTasks()Ljava/util/Map;
+#standbyTasks()Ljava/util/Map;
@1.1.0
-#getPartitionsByHostState()Ljava/util/Map;
-#clusterMetadata()Lorg/apache/kafka/common/Cluster;
-#activeTasks()Ljava/util/Map;
-#standbyTasks()Ljava/util/Map;
-#close()V
@2.0.0
-###org/apache/kafka/streams/processor/internals/StreamPartitionAssignor

+###org/apache/kafka/streams/processor/internals/StreamsKafkaClient$Config
@0.10.2.0
+#fromStreamsConfig(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient$Config;
+#<init>(Ljava/util/Map;)V
@1.0.0
-#fromStreamsConfig(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient$Config;
-#<init>(Ljava/util/Map;)V
@1.1.0
-###org/apache/kafka/streams/processor/internals/StreamsKafkaClient$Config

+###org/apache/kafka/streams/processor/internals/StreamsKafkaClient
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;)V
+#<init>(Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient$Config;)V
+#close()V
+#createTopics(Ljava/util/Map;IJLorg/apache/kafka/common/requests/MetadataResponse;)V
+#fetchMetadata()Lorg/apache/kafka/common/requests/MetadataResponse;
+#checkBrokerCompatibility()V
@0.11.0.0
+#checkBrokerCompatibility(Z)V
-#checkBrokerCompatibility()V
@1.0.0
+#create(Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient$Config;)Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient;
+#create(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient;
-#<init>(Lorg/apache/kafka/streams/StreamsConfig;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/StreamsKafkaClient$Config;)V
@1.1.0
-###org/apache/kafka/streams/processor/internals/StreamsKafkaClient

+###org/apache/kafka/streams/processor/internals/StreamsMetadataState
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;)V
+#getAllMetadata()Ljava/util/Collection;
+#getAllMetadataForStore(Ljava/lang/String;)Ljava/util/Collection;
+#getMetadataWithKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/StreamsMetadata;
+#getMetadataWithKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/state/StreamsMetadata;
+#onChange(Ljava/util/Map;Lorg/apache/kafka/common/Cluster;)V
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/state/HostInfo;)V
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;)V
@1.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/state/HostInfo;)V
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/state/HostInfo;)V
-#onChange(Ljava/util/Map;Lorg/apache/kafka/common/Cluster;)V
@2.0.0
+#toString()Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;
@2.5.0
+#getLocalMetadata()Lorg/apache/kafka/streams/state/StreamsMetadata;
*#getMetadataWithKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/StreamsMetadata;[deprecated]
+#getKeyQueryMetadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/KeyQueryMetadata;
+#getKeyQueryMetadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/KeyQueryMetadata;
*#getMetadataWithKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/state/StreamsMetadata;[deprecated]
+#getStoreForChangelogTopic(Ljava/lang/String;)Ljava/lang/String;
@3.0.0
+#getLocalMetadata()Lorg/apache/kafka/streams/StreamsMetadata;
-#getLocalMetadata()Lorg/apache/kafka/streams/state/StreamsMetadata;
-#getMetadataWithKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/StreamsMetadata;[deprecated]
-#getMetadataWithKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/state/StreamsMetadata;[deprecated]
@3.1.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Lorg/apache/kafka/streams/state/HostInfo;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/state/HostInfo;)V
@3.2.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Lorg/apache/kafka/streams/state/HostInfo;Lorg/apache/kafka/common/utils/LogContext;)V
+#getAllMetadataForStore(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#getAllMetadataForTopology(Ljava/lang/String;)Ljava/util/Collection;
+#getKeyQueryMetadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;)Lorg/apache/kafka/streams/KeyQueryMetadata;
+#getKeyQueryMetadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/StreamPartitioner;Ljava/lang/String;)Lorg/apache/kafka/streams/KeyQueryMetadata;
-#<init>(Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Lorg/apache/kafka/streams/state/HostInfo;)V

+###org/apache/kafka/streams/processor/internals/StreamsMetricsImpl
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/util/Map;)V
+#registry()Lorg/apache/kafka/common/metrics/Metrics;
+#addSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;)Lorg/apache/kafka/common/metrics/Sensor;
+#addSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#metrics()Ljava/util/Map;
+#recordLatency(Lorg/apache/kafka/common/metrics/Sensor;JJ)V
+#recordThroughput(Lorg/apache/kafka/common/metrics/Sensor;J)V
+#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#measureLatencyNs(Lorg/apache/kafka/common/utils/Time;Ljava/lang/Runnable;Lorg/apache/kafka/common/metrics/Sensor;)V
+#removeSensor(Lorg/apache/kafka/common/metrics/Sensor;)V
@0.11.0.1
+#tagMap([Ljava/lang/String;)Ljava/util/Map;
+#maybeAddMetric(Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MeasurableStat;)V
@2.0.0
-###org/apache/kafka/streams/processor/internals/StreamsMetricsImpl

+###org/apache/kafka/streams/processor/internals/StreamTask$TaskMetrics
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/StreamsMetrics;)V
+#removeAllSensors()V
@0.11.0.0
-#<init>(Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/StreamsMetrics;)V
-#removeAllSensors()V
@2.5.0
-###org/apache/kafka/streams/processor/internals/StreamTask$TaskMetrics

+###org/apache/kafka/streams/processor/internals/StreamTask
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;)V
+#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)V
+#process()I
+#requiresPoll()Z
+#maybePunctuate()Z
+#punctuate(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;J)V
+#record()Lorg/apache/kafka/streams/processor/internals/StampedRecord;
+#node()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
+#commit()V
+#commitNeeded()Z
+#needCommit()V
+#schedule(J)V
+#close()V
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;I)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
+#commitOffsets()V
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;)V
-#record()Lorg/apache/kafka/streams/processor/internals/StampedRecord;
-#forward(Ljava/lang/Object;Ljava/lang/Object;)V
-#forward(Ljava/lang/Object;Ljava/lang/Object;I)V
-#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
@0.10.1.1
-#node()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/RecordCollector;)V
+#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)I
+#initTopology()V
+#closeTopology()V
+#flushState()V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
-#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)V
@0.11.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/producer/Producer;)V
+#resume()V
+#process()Z
+#suspend()V
+#close(Z)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/RecordCollector;)V
-#process()I
-#requiresPoll()Z
-#maybePunctuate()Z
-#commitOffsets()V
-#commitNeeded()Z
-#needCommit()V
-#initTopology()V
-#closeTopology()V
-#close()V
-#toString()Ljava/lang/String;
-#flushState()V
@0.11.0.1
+#close(ZZ)V
+#initialize()Z
-#close(Z)V
@0.11.0.3
+#initializeStateStores()Z
+#initializeTopology()V
-#initialize()Z
@1.0.0
+#initialize()Z
+#punctuate(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)V
+#closeSuspended(ZZLjava/lang/RuntimeException;)V
+#checkpointedOffsets()Ljava/util/Map;
+#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
+#maybePunctuateStreamTime()Z
+#maybePunctuateSystemTime()Z
+#update(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;)Ljava/util/List;
+#commitNeeded()Z
-#initializeStateStores()Z
-#initializeTopology()V
-#punctuate(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;J)V
-#schedule(J)V
@1.0.1
+#initializeStateStores()Z
+#initializeTopology()V
-#initialize()Z
@1.1.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/producer/Producer;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/producer/Producer;)V
-#checkpointedOffsets()Ljava/util/Map;
-#update(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;)Ljava/util/List;
-#commitNeeded()Z
@2.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/producer/Producer;)V
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/streams/processor/internals/RecordCollector;)V
+#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/StreamsMetrics;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/producer/Producer;)V
-#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)I
@2.0.1
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;)V
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;Lorg/apache/kafka/streams/processor/internals/RecordCollector;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/producer/Producer;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/streams/processor/internals/RecordCollector;)V
@2.1.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;Lorg/apache/kafka/common/metrics/Sensor;)V
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/common/metrics/Sensor;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;Lorg/apache/kafka/streams/processor/internals/RecordCollector;)V
@2.4.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;)V
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;Lorg/apache/kafka/streams/processor/internals/RecordCollector;)V
+#initializeMetadata()V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;Lorg/apache/kafka/common/metrics/Sensor;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Collection;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/common/metrics/Sensor;)V
-#closeSuspended(ZZLjava/lang/RuntimeException;)V
@2.4.1
+#isProcessable(J)Z
+#hasRecordsQueued()Z
@2.5.0
+#restoredOffsets()Ljava/util/Map;
@2.6.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
+#isActive()Z
+#initializeIfNeeded()V
+#completeRestoration()V
+#prepareCommit()Ljava/util/Map;
+#postCommit()V
+#closeClean()V
+#closeDirty()V
+#update(Ljava/util/Set;Ljava/util/Map;)V
+#closeCleanAndRecycleState()V
+#process(J)Z
+#recordProcessBatchTime(J)V
+#recordProcessTimeRatioAndBufferSize(JJ)V
+#purgeableOffsets()Ljava/util/Map;
+#commitRequested()Z
+#processorContext()Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
+#toString()Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;
+#commitNeeded()Z
+#changelogOffsets()Ljava/util/Map;
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier;Lorg/apache/kafka/streams/processor/internals/RecordCollector;)V
-#initializeMetadata()V
-#initializeStateStores()Z
-#initializeTopology()V
-#process()Z
-#commit()V
-#close(ZZ)V
-#restoredOffsets()Ljava/util/Map;
@2.7.0
+#postCommit(Z)V
+#maybeInitTaskTimeoutOrThrow(JLorg/apache/kafka/common/errors/TimeoutException;)V
+#clearTaskTimeout()V
-#postCommit()V
@2.8.0
+#addPartitionsForOffsetReset(Ljava/util/Set;)V
+#completeRestoration(Ljava/util/function/Consumer;)V
+#updateInputPartitions(Ljava/util/Set;Ljava/util/Map;)V
-#completeRestoration()V
-#update(Ljava/util/Set;Ljava/util/Map;)V
-#maybeInitTaskTimeoutOrThrow(JLorg/apache/kafka/common/errors/TimeoutException;)V
-#clearTaskTimeout()V
@3.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/common/utils/LogContext;)V
+#committedOffsets()Ljava/util/Map;
+#highWaterMark()Ljava/util/Map;
+#timeCurrentIdlingStarted()Ljava/util/Optional;
+#updateCommittedOffsets(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V
+#updateEndOffsets(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
@3.2.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/TopologyConfig$TaskConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;Lorg/apache/kafka/common/utils/LogContext;)V
@3.3.0
+#maybeCheckpoint(Z)V
@3.4.0
+#prepareRecycle()V
-#closeCleanAndRecycleState()V

+###org/apache/kafka/streams/processor/internals/StreamThread$State
@0.10.2.0
+#values()[Lorg/apache/kafka/streams/processor/internals/StreamThread$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/StreamThread$State;
+#isRunning()Z
+#isValidTransition(Lorg/apache/kafka/streams/processor/internals/StreamThread$State;)Z
@0.10.2.2
+#isValidTransition(Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;)Z
-#isValidTransition(Lorg/apache/kafka/streams/processor/internals/StreamThread$State;)Z
@0.11.0.0
+#isValidTransition(Lorg/apache/kafka/streams/processor/internals/StreamThread$State;)Z
-#isValidTransition(Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;)Z
@0.11.0.1
+#isValidTransition(Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;)Z
-#isValidTransition(Lorg/apache/kafka/streams/processor/internals/StreamThread$State;)Z
@2.5.0
+#isAlive()Z
-#isRunning()Z

+###org/apache/kafka/streams/processor/internals/StreamThread$StateListener
@0.10.2.0
+#onChange(Lorg/apache/kafka/streams/processor/internals/StreamThread;Lorg/apache/kafka/streams/processor/internals/StreamThread$State;Lorg/apache/kafka/streams/processor/internals/StreamThread$State;)V
@0.10.2.2
+#onChange(Ljava/lang/Thread;Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;)V
-#onChange(Lorg/apache/kafka/streams/processor/internals/StreamThread;Lorg/apache/kafka/streams/processor/internals/StreamThread$State;Lorg/apache/kafka/streams/processor/internals/StreamThread$State;)V
@0.11.0.0
+#onChange(Lorg/apache/kafka/streams/processor/internals/StreamThread;Lorg/apache/kafka/streams/processor/internals/StreamThread$State;Lorg/apache/kafka/streams/processor/internals/StreamThread$State;)V
-#onChange(Ljava/lang/Thread;Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;)V
@0.11.0.1
+#onChange(Ljava/lang/Thread;Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;)V
-#onChange(Lorg/apache/kafka/streams/processor/internals/StreamThread;Lorg/apache/kafka/streams/processor/internals/StreamThread$State;Lorg/apache/kafka/streams/processor/internals/StreamThread$State;)V

+###org/apache/kafka/streams/processor/internals/StreamThread
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/lang/String;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
+#partitionAssignor(Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor;)V
+#run()V
+#close()V
+#tasks()Ljava/util/Map;
+#prevTasks()Ljava/util/Set;
+#cachedTasks()Ljava/util/Set;
@0.10.1.0
+#isInitialized()Z
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/lang/String;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;)V
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/lang/String;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
@0.10.2.0
+#setStateListener(Lorg/apache/kafka/streams/processor/internals/StreamThread$StateListener;)V
+#state()Lorg/apache/kafka/streams/processor/internals/StreamThread$State;
+#threadClientId()Ljava/lang/String;
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/lang/String;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;J)V
+#stillRunning()Z
+#toString(Ljava/lang/String;)Ljava/lang/String;
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/lang/String;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;)V
@0.11.0.0
+#prevActiveTasks()Ljava/util/Set;
-#threadClientId()Ljava/lang/String;
-#partitionAssignor(Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor;)V
-#prevTasks()Ljava/util/Set;
@0.11.0.1
+#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/lang/String;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;)V
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/lang/String;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;J)V
@1.0.0
+#isRunningAndNotRebalancing()Z
+#isRunning()Z
+#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/StreamsConfig;Ljava/util/UUID;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/StreamThread$StreamsMetricsThreadImpl;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;)V
+#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
+#shutdown()V
+#builder()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
+#name()Ljava/lang/String;
+#processId()Ljava/util/UUID;
+#config()Lorg/apache/kafka/streams/StreamsConfig;
+#partitionGrouper()Lorg/apache/kafka/streams/processor/PartitionGrouper;
+#setThreadMetadataProvider(Lorg/apache/kafka/streams/processor/internals/ThreadMetadataProvider;)V
+#threadMetadata()Lorg/apache/kafka/streams/processor/ThreadMetadata;
-#<init>(Lorg/apache/kafka/streams/processor/TopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/lang/String;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;)V
-#close()V
-#isInitialized()Z
-#stillRunning()Z
@1.1.0
+#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/AdminClient;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/StreamThread$StreamsMetricsThreadImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/StreamsConfig;Ljava/util/UUID;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/StreamThread$StreamsMetricsThreadImpl;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/StateDirectory;)V
-#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
-#prevActiveTasks()Ljava/util/Set;
-#builder()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
-#name()Ljava/lang/String;
-#cachedTasks()Ljava/util/Set;
-#processId()Ljava/util/UUID;
-#config()Lorg/apache/kafka/streams/StreamsConfig;
-#partitionGrouper()Lorg/apache/kafka/streams/processor/PartitionGrouper;
-#setThreadMetadataProvider(Lorg/apache/kafka/streams/processor/internals/ThreadMetadataProvider;)V
@2.0.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/StreamThread$StreamsMetricsThreadImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicBoolean;)V
+#producerMetrics()Ljava/util/Map;
+#consumerMetrics()Ljava/util/Map;
-#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/StreamThread$StreamsMetricsThreadImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;)V
@2.1.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/StreamThread$StreamsMetricsThreadImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;)V
+#adminClientMetrics()Ljava/util/Map;
-#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/StreamThread$StreamsMetricsThreadImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicBoolean;)V
@2.2.0
+#getSharedAdminClientId(Ljava/lang/String;)Ljava/lang/String;
+#stateListener()Lorg/apache/kafka/streams/processor/internals/StreamThread$StateListener;
@2.3.0
+#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/AdminClient;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;I)Lorg/apache/kafka/streams/processor/internals/StreamThread;
-#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/AdminClient;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
@2.4.0
+#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/Admin;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;I)Lorg/apache/kafka/streams/processor/internals/StreamThread;
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;)V
-#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/AdminClient;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;I)Lorg/apache/kafka/streams/processor/internals/StreamThread;
-#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/StreamThread$StreamsMetricsThreadImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;)V
@2.5.0
+#activeTasks()Ljava/util/Map;
+#allStreamsTasks()Ljava/util/List;
+#allStandbyTasks()Ljava/util/List;
+#restoringTaskIds()Ljava/util/Set;
+#allTasks()Ljava/util/Map;
-#isRunningAndNotRebalancing()Z
-#tasks()Ljava/util/Map;
@2.6.0
+#processingMode(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
+#eosEnabled(Lorg/apache/kafka/streams/StreamsConfig;)Z
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicLong;)V
+#activeTaskMap()Ljava/util/Map;
+#activeTasks()Ljava/util/List;
-#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/producer/Producer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;)V
-#getSharedAdminClientId(Ljava/lang/String;)Ljava/lang/String;
-#activeTasks()Ljava/util/Map;
-#allStreamsTasks()Ljava/util/List;
-#allStandbyTasks()Ljava/util/List;
-#restoringTaskIds()Ljava/util/Set;
-#stateListener()Lorg/apache/kafka/streams/processor/internals/StreamThread$StateListener;
@2.8.0
+#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/Admin;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;ILjava/lang/Runnable;Ljava/util/function/Consumer;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
+#setStreamsUncaughtExceptionHandler(Ljava/util/function/Consumer;)V
+#maybeSendShutdown()V
+#waitOnThreadState(Lorg/apache/kafka/streams/processor/internals/StreamThread$State;J)Z
+#shutdownToError()V
+#sendShutdownRequest(Lorg/apache/kafka/streams/processor/internals/assignment/AssignorError;)V
+#resizeCache(J)V
+#getGroupInstanceID()Ljava/util/Optional;
+#requestLeaveGroupDuringShutdown()V
+#getStateLock()Ljava/lang/Object;
-#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/Admin;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;I)Lorg/apache/kafka/streams/processor/internals/StreamThread;
-#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicLong;)V
@3.0.0
+#eosEnabled(Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;)Z
+#threadMetadata()Lorg/apache/kafka/streams/ThreadMetadata;
-#threadMetadata()Lorg/apache/kafka/streams/processor/ThreadMetadata;
@3.1.0
+#create(Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/Admin;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;ILjava/lang/Runnable;Ljava/util/function/Consumer;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
-#create(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/Admin;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;ILjava/lang/Runnable;Ljava/util/function/Consumer;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
-#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
@3.2.0
+#create(Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/Admin;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;ILjava/lang/Runnable;Ljava/util/function/BiConsumer;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/Queue;Ljava/lang/Runnable;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)V
+#setStreamsUncaughtExceptionHandler(Ljava/util/function/BiConsumer;)V
-#create(Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/clients/admin/Admin;Ljava/util/UUID;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;JLorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/StateRestoreListener;ILjava/lang/Runnable;Ljava/util/function/Consumer;)Lorg/apache/kafka/streams/processor/internals/StreamThread;
-#processingMode(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
-#eosEnabled(Lorg/apache/kafka/streams/StreamsConfig;)Z
-#eosEnabled(Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;)Z
-#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/clients/admin/Admin;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Ljava/lang/String;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
-#setStreamsUncaughtExceptionHandler(Ljava/util/function/Consumer;)V
@3.4.0
+#isThreadAlive()Z

+###org/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator
@0.10.2.2
+#isValidTransition(Lorg/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator;)Z
@0.11.0.0
-###org/apache/kafka/streams/processor/internals/ThreadStateTransitionValidator

+###org/apache/kafka/streams/processor/internals/TimestampTracker
@0.10.0.0
+#addElement(Lorg/apache/kafka/streams/processor/internals/Stamped;)V
+#removeElement(Lorg/apache/kafka/streams/processor/internals/Stamped;)V
+#get()J
+#size()I
@0.11.0.2
+#clear()V
@1.0.0
-#clear()V
@1.0.1
+#clear()V
@2.1.0
-###org/apache/kafka/streams/processor/internals/TimestampTracker

+###org/apache/kafka/streams/processor/LogAndSkipOnInvalidTimestamp
@0.10.2.0
+#<init>()V
+#onInvalidTimestamp(Lorg/apache/kafka/clients/consumer/ConsumerRecord;JJ)J
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;J)J

+###org/apache/kafka/streams/processor/PartitionGrouper
@0.10.0.0
+#partitionGroups(Ljava/util/Map;Lorg/apache/kafka/common/Cluster;)Ljava/util/Map;
@3.0.0
-###org/apache/kafka/streams/processor/PartitionGrouper

+###org/apache/kafka/streams/processor/Processor
@0.10.0.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
+#punctuate(J)V
+#close()V
@1.0.0
*#punctuate(J)V[deprecated]
@2.0.0
-#punctuate(J)V[deprecated]

+###org/apache/kafka/streams/processor/ProcessorContext
@0.10.0.0
+#applicationId()Ljava/lang/String;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#schedule(J)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;I)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#commit()V
+#topic()Ljava/lang/String;
+#partition()I
+#offset()J
+#timestamp()J
@0.10.1.0
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
@1.0.0
+#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
*#schedule(J)V[deprecated]
@2.0.0
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/To;)V
*#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
*#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
+#headers()Lorg/apache/kafka/common/header/Headers;
-#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
-#schedule(J)V[deprecated]
@2.1.0
*#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
+#schedule(Ljava/time/Duration;Lorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
@3.0.0
+#currentSystemTimeMs()J
+#currentStreamTimeMs()J
-#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
-#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
-#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]

+###org/apache/kafka/streams/processor/ProcessorSupplier
@0.10.0.0
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.8.0
+#get()Ljava/lang/Object;

+###org/apache/kafka/streams/processor/StateRestoreCallback
@0.10.0.0
+#restore([B[B)V

+###org/apache/kafka/streams/processor/StateStore
@0.10.0.0
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#flush()V
+#close()V
+#persistent()Z
@0.10.1.0
+#isOpen()Z
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
@3.2.0
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/processor/StateStoreSupplier
@0.10.0.0
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@0.10.1.0
+#logConfig()Ljava/util/Map;
+#loggingEnabled()Z
@2.1.0
-###org/apache/kafka/streams/processor/StateStoreSupplier

+###org/apache/kafka/streams/processor/StreamPartitioner
@0.10.0.0
+#partition(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
@2.0.0
+#partition(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
-#partition(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
@3.4.0
*#partition(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;[deprecated]
+#partitions(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/util/Optional;

+###org/apache/kafka/streams/processor/TaskId
@0.10.0.0
+#<init>(II)V
+#toString()Ljava/lang/String;
+#parse(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TaskId;
+#writeTo(Ljava/io/DataOutputStream;)V
+#readFrom(Ljava/io/DataInputStream;)Lorg/apache/kafka/streams/processor/TaskId;
+#writeTo(Ljava/nio/ByteBuffer;)V
+#readFrom(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/streams/processor/TaskId;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/kafka/streams/processor/TaskId;)I
+#compareTo(Ljava/lang/Object;)I
@3.0.0
+#<init>(IILjava/lang/String;)V
+#subtopology()I
+#partition()I
+#topologyName()Ljava/lang/String;
+#writeTo(Ljava/io/DataOutputStream;I)V[deprecated]
+#readFrom(Ljava/io/DataInputStream;I)Lorg/apache/kafka/streams/processor/TaskId;[deprecated]
+#writeTo(Ljava/nio/ByteBuffer;I)V[deprecated]
+#readFrom(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/streams/processor/TaskId;[deprecated]
-#writeTo(Ljava/io/DataOutputStream;)V
-#readFrom(Ljava/io/DataInputStream;)Lorg/apache/kafka/streams/processor/TaskId;
-#writeTo(Ljava/nio/ByteBuffer;)V
-#readFrom(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/streams/processor/TaskId;

+###org/apache/kafka/streams/processor/TimestampExtractor
@0.10.0.0
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)J
@0.10.2.0
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;J)J
-#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)J

+###org/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset
@0.10.2.0
+#values()[Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;
@2.0.0
-###org/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset

+###org/apache/kafka/streams/processor/TopologyBuilder$TopicsInfo
@0.10.0.0
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.1.0
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;)V
+#toString()Ljava/lang/String;
-#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
@0.10.2.0
-#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;)V
@1.0.0
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;)V
@2.0.0
-###org/apache/kafka/streams/processor/TopologyBuilder$TopicsInfo

+###org/apache/kafka/streams/processor/TopologyBuilder
@0.10.0.0
+#<init>()V
+#addSource(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSink(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSink(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSink(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSink(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addProcessor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addStateStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;Z[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addStateStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#connectProcessorAndStateStores(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#connectProcessors([Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addInternalTopic(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#topicGroups(Ljava/lang/String;)Ljava/util/Map;
+#nodeGroups()Ljava/util/Map;
+#copartitionSources(Ljava/util/Collection;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#copartitionGroups()Ljava/util/Collection;
+#build(Ljava/lang/String;Ljava/lang/Integer;)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#sourceTopics(Ljava/lang/String;)Ljava/util/Set;
@0.10.1.0
+#setApplicationId(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#build(Ljava/lang/Integer;)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#topicGroups()Ljava/util/Map;
+#sourceTopics()Ljava/util/Set;
+#stateStoreNameToSourceTopics()Ljava/util/Map;
+#sourceTopicPattern()Ljava/util/regex/Pattern;
+#updateSubscriptions(Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates;)V
-#addStateStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;Z[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
-#topicGroups(Ljava/lang/String;)Ljava/util/Map;
-#build(Ljava/lang/String;Ljava/lang/Integer;)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
-#sourceTopics(Ljava/lang/String;)Ljava/util/Set;
@0.10.1.1
+#updateSubscriptions(Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates;Ljava/lang/String;)V
-#updateSubscriptions(Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates;)V
@0.10.2.0
+#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addGlobalStore(Lorg/apache/kafka/streams/processor/StateStore;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#buildGlobalStateTopology()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#globalStateStores()Ljava/util/Map;
+#earliestResetTopicsPattern()Ljava/util/regex/Pattern;
+#latestResetTopicsPattern()Ljava/util/regex/Pattern;
-#sourceTopics()Ljava/util/Set;
@0.11.0.0
+#addSource(Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addGlobalStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addGlobalStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
+#subscriptionUpdates()Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates;
-#addSource(Lorg/apache/kafka/streams/processor/TopologyBuilder$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
-#addGlobalStore(Lorg/apache/kafka/streams/processor/StateStore;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/processor/TopologyBuilder;
@2.0.0
-###org/apache/kafka/streams/processor/TopologyBuilder

+###org/apache/kafka/streams/processor/UsePreviousTimeOnInvalidTimestamp
@0.10.2.0
+#<init>()V
+#onInvalidTimestamp(Lorg/apache/kafka/clients/consumer/ConsumerRecord;JJ)J
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;J)J
@3.0.0
-###org/apache/kafka/streams/processor/UsePreviousTimeOnInvalidTimestamp

+###org/apache/kafka/streams/processor/WallclockTimestampExtractor
@0.10.0.0
+#<init>()V
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)J
@0.10.2.0
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;J)J
-#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)J

+###org/apache/kafka/streams/state/HostInfo
@0.10.1.0
+#<init>(Ljava/lang/String;I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#host()Ljava/lang/String;
+#port()I
+#toString()Ljava/lang/String;
@2.6.0
+#buildFromEndpoint(Ljava/lang/String;)Lorg/apache/kafka/streams/state/HostInfo;
+#unavailable()Lorg/apache/kafka/streams/state/HostInfo;

+###org/apache/kafka/streams/state/internals/CachedStateStore
@0.10.1.0
+#setFlushListener(Lorg/apache/kafka/streams/kstream/internals/CacheFlushListener;)V
@1.0.0
+#setFlushListener(Lorg/apache/kafka/streams/kstream/internals/CacheFlushListener;Z)V
-#setFlushListener(Lorg/apache/kafka/streams/kstream/internals/CacheFlushListener;)V
@2.2.0
+#setFlushListener(Lorg/apache/kafka/streams/state/internals/CacheFlushListener;Z)V
-#setFlushListener(Lorg/apache/kafka/streams/kstream/internals/CacheFlushListener;Z)V
@2.3.0
+#setFlushListener(Lorg/apache/kafka/streams/state/internals/CacheFlushListener;Z)Z
-#setFlushListener(Lorg/apache/kafka/streams/state/internals/CacheFlushListener;Z)V
@2.7.0
+#flushCache()V

+###org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStore
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/state/KeyValueStore;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#putIfAbsent(Lorg/apache/kafka/common/utils/Bytes;[B)[B
+#putAll(Ljava/util/List;)V
+#delete(Lorg/apache/kafka/common/utils/Bytes;)[B
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#approximateNumEntries()J
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@0.11.0.0
-#<init>(Lorg/apache/kafka/streams/state/KeyValueStore;)V
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#reverseRange(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.0
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/CompositeReadOnlyKeyValueStore
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Lorg/apache/kafka/streams/state/QueryableStoreType;Ljava/lang/String;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#approximateNumEntries()J
@2.7.0
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.1
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/CompositeReadOnlySessionStore
@0.10.2.0
+#<init>(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Lorg/apache/kafka/streams/state/QueryableStoreType;Ljava/lang/String;)V
+#fetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@0.11.0.0
+#fetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
+#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
+#backwardFetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStore
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Lorg/apache/kafka/streams/state/QueryableStoreType;Ljava/lang/String;)V
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
@0.11.0.0
+#fetch(Lorg/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStore$Fetcher;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@1.0.0
-#fetch(Lorg/apache/kafka/streams/state/internals/CompositeReadOnlyWindowStore$Fetcher;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@1.1.0
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.0.0
+#fetch(Ljava/lang/Object;J)Ljava/lang/Object;
@2.1.0
*#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;[deprecated]
+#fetch(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
*#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#fetchAll(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
+#backwardFetch(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.0.0
-#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;[deprecated]
-#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]

+###org/apache/kafka/streams/state/internals/GlobalStateStoreProvider
@0.10.2.0
+#<init>(Ljava/util/Map;)V
+#stores(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/util/List;

+###org/apache/kafka/streams/state/internals/InMemoryKeyValueLoggedStore
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/state/KeyValueStore;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#persistent()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/List;)V
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#close()V
+#flush()V
@0.10.1.0
+#isOpen()Z
+#approximateNumEntries()J
@0.11.0.0
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/state/KeyValueStore;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#name()Ljava/lang/String;
-#persistent()Z
-#isOpen()Z
-#close()V
-#flush()V
@2.1.0
+#<init>(Lorg/apache/kafka/streams/state/KeyValueStore;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@2.2.0
-###org/apache/kafka/streams/state/internals/InMemoryKeyValueLoggedStore

+###org/apache/kafka/streams/state/internals/InMemoryKeyValueStore
@0.10.2.2
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#enableLogging()Lorg/apache/kafka/streams/state/KeyValueStore;
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#persistent()Z
+#isOpen()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/List;)V
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#approximateNumEntries()J
+#flush()V
+#close()V
@2.2.0
-#enableLogging()Lorg/apache/kafka/streams/state/KeyValueStore;
@2.3.0
+#<init>(Ljava/lang/String;)V
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#putIfAbsent(Lorg/apache/kafka/common/utils/Bytes;[B)[B
+#delete(Lorg/apache/kafka/common/utils/Bytes;)[B
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#reverseRange(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.0
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#getPosition()Lorg/apache/kafka/streams/query/Position;
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;

+###org/apache/kafka/streams/state/internals/InMemoryKeyValueStoreSupplier
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@0.10.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;ZLjava/util/Map;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;ZLjava/util/Map;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
-#name()Ljava/lang/String;
@0.10.2.0
+#get()Lorg/apache/kafka/streams/state/KeyValueStore;
@0.11.0.0
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
+#name()Ljava/lang/String;
@2.0.0
-###org/apache/kafka/streams/state/internals/InMemoryKeyValueStoreSupplier

+###org/apache/kafka/streams/state/internals/InMemoryLRUCacheStoreSupplier
@0.10.0.0
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@0.10.1.0
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;ZLjava/util/Map;)V
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;ZLjava/util/Map;)V
-#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
-#name()Ljava/lang/String;
@0.10.2.0
+#get()Lorg/apache/kafka/streams/state/KeyValueStore;
@0.11.0.0
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
+#name()Ljava/lang/String;
-#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;ZLjava/util/Map;)V
@2.0.0
-###org/apache/kafka/streams/state/internals/InMemoryLRUCacheStoreSupplier

+###org/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener
@0.10.0.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;)V
@2.3.0
+#apply(Lorg/apache/kafka/common/utils/Bytes;[B)V
-#apply(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/kafka/streams/state/internals/MemoryLRUCache
@0.10.0.0
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#enableLogging(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/KeyValueStore;
+#whenEldestRemoved(Lorg/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener;)Lorg/apache/kafka/streams/state/internals/MemoryLRUCache;
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#persistent()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/List;)V
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#flush()V
+#close()V
@0.10.0.1
+#<init>(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#enableLogging()Lorg/apache/kafka/streams/state/KeyValueStore;
-#<init>()V
-#<init>(Ljava/lang/String;I)V
-#enableLogging(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/KeyValueStore;
@0.10.1.0
+#isOpen()Z
+#approximateNumEntries()J
+#size()I
@0.11.0.0
-#<init>(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#enableLogging()Lorg/apache/kafka/streams/state/KeyValueStore;
-#whenEldestRemoved(Lorg/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener;)Lorg/apache/kafka/streams/state/internals/MemoryLRUCache;
@2.3.0
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#putIfAbsent(Lorg/apache/kafka/common/utils/Bytes;[B)[B
+#delete(Lorg/apache/kafka/common/utils/Bytes;)[B
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#reverseRange(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.1
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/state/internals/MemoryNavigableLRUCache
@0.10.0.0
+#<init>(Ljava/lang/String;I)V
+#whenEldestRemoved(Lorg/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener;)Lorg/apache/kafka/streams/state/internals/MemoryNavigableLRUCache;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#whenEldestRemoved(Lorg/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener;)Lorg/apache/kafka/streams/state/internals/MemoryLRUCache;
@0.10.0.1
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;I)V
@1.1.0
-#whenEldestRemoved(Lorg/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener;)Lorg/apache/kafka/streams/state/internals/MemoryNavigableLRUCache;
-#whenEldestRemoved(Lorg/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener;)Lorg/apache/kafka/streams/state/internals/MemoryLRUCache;
@2.3.0
+#<init>(Ljava/lang/String;I)V
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#<init>(Ljava/lang/String;ILorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@2.7.0
+#reverseRange(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.1
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;

+###org/apache/kafka/streams/state/internals/MeteredKeyValueStore
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/state/KeyValueStore;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#persistent()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/List;)V
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#close()V
+#flush()V
@0.10.1.0
+#isOpen()Z
+#approximateNumEntries()J
@0.10.2.0
-#name()Ljava/lang/String;
-#persistent()Z
-#isOpen()Z
-#close()V
@2.1.0
+#close()V
-#<init>(Lorg/apache/kafka/streams/state/KeyValueStore;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
@2.3.0
+#setFlushListener(Lorg/apache/kafka/streams/state/internals/CacheFlushListener;Z)Z
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.0
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/state/internals/OffsetCheckpoint
@0.10.0.0
+#<init>(Ljava/io/File;)V
+#write(Ljava/util/Map;)V
+#read()Ljava/util/Map;
+#delete()V
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/state/internals/PeekingKeyValueIterator
@0.10.1.0
+#peekNextKey()Ljava/lang/Object;
@0.10.2.0
+#peekNext()Lorg/apache/kafka/streams/KeyValue;
-#peekNextKey()Ljava/lang/Object;

+###org/apache/kafka/streams/state/internals/QueryableStoreProvider
@0.10.1.0
+#<init>(Ljava/util/List;)V
+#getStore(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/lang/Object;
@0.10.2.0
+#<init>(Ljava/util/List;Lorg/apache/kafka/streams/state/internals/GlobalStateStoreProvider;)V
-#<init>(Ljava/util/List;)V
@2.5.0
+#getStore(Lorg/apache/kafka/streams/StoreQueryParameters;)Ljava/lang/Object;
-#getStore(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/lang/Object;
@2.8.1
+#<init>(Lorg/apache/kafka/streams/state/internals/GlobalStateStoreProvider;)V
+#addStoreProviderForThread(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/StreamThreadStateStoreProvider;)V
+#removeStoreProviderForThread(Ljava/lang/String;)V
-#<init>(Ljava/util/List;Lorg/apache/kafka/streams/state/internals/GlobalStateStoreProvider;)V

+###org/apache/kafka/streams/state/internals/RocksDBKeyValueStoreSupplier
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@0.10.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;ZLjava/util/Map;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;ZLjava/util/Map;Z)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
-#name()Ljava/lang/String;
@0.10.2.0
+#get()Lorg/apache/kafka/streams/state/KeyValueStore;
@0.11.0.0
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
+#name()Ljava/lang/String;
@2.0.0
-###org/apache/kafka/streams/state/internals/RocksDBKeyValueStoreSupplier

+###org/apache/kafka/streams/state/internals/RocksDBSessionStoreSupplier
@0.10.2.0
+#<init>(Ljava/lang/String;JLorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;ZLjava/util/Map;Z)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/SessionStore;
+#retentionPeriod()J
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@0.11.0.0
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
@2.0.0
-###org/apache/kafka/streams/state/internals/RocksDBSessionStoreSupplier

+###org/apache/kafka/streams/state/internals/RocksDBStore
@0.10.0.0
+#enableLogging()Lorg/apache/kafka/streams/state/KeyValueStore;
+#withCacheSize(I)Lorg/apache/kafka/streams/state/internals/RocksDBStore;
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#openDB(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#name()Ljava/lang/String;
+#persistent()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/List;)V
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#flush()V
+#flushInternal()V
+#close()V
@0.10.1.0
+#isOpen()Z
+#approximateNumEntries()J
-#withCacheSize(I)Lorg/apache/kafka/streams/state/internals/RocksDBStore;
-#flushInternal()V
@0.10.2.0
-#enableLogging()Lorg/apache/kafka/streams/state/KeyValueStore;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@1.1.0
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#putIfAbsent(Lorg/apache/kafka/common/utils/Bytes;[B)[B
+#delete(Lorg/apache/kafka/common/utils/Bytes;)[B
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#first()Lorg/apache/kafka/streams/KeyValue;
+#last()Lorg/apache/kafka/streams/KeyValue;
@2.0.0
-#first()Lorg/apache/kafka/streams/KeyValue;
-#last()Lorg/apache/kafka/streams/KeyValue;
@2.1.0
+#getOptions()Lorg/rocksdb/Options;
@2.2.0
-#openDB(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
@2.3.0
+#toggleDbForBulkLoading(Z)V
+#addToBatch(Lorg/apache/kafka/streams/KeyValue;Lorg/rocksdb/WriteBatch;)V
+#write(Lorg/rocksdb/WriteBatch;)V
@2.6.0
-#toggleDbForBulkLoading(Z)V
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#reverseRange(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.0
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/state/internals/RocksDBWindowStoreSupplier
@0.10.0.0
+#<init>(Ljava/lang/String;JIZLorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#<init>(Ljava/lang/String;JIZLorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@0.10.1.0
+#<init>(Ljava/lang/String;JIZLorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;JZLjava/util/Map;Z)V
+#<init>(Ljava/lang/String;JIZLorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;JZLjava/util/Map;Z)V
+#retentionPeriod()J
-#<init>(Ljava/lang/String;JIZLorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;JIZLorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
@0.10.2.0
+#get()Lorg/apache/kafka/streams/state/WindowStore;
@0.11.0.0
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
@2.0.0
-###org/apache/kafka/streams/state/internals/RocksDBWindowStoreSupplier

+###org/apache/kafka/streams/state/internals/SegmentedBytesStore$KeySchema
@0.10.2.0
+#upperRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#segmentTimestamp(Lorg/apache/kafka/common/utils/Bytes;)J
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJ)Ljava/util/List;
@0.10.2.1
+#init(Ljava/lang/String;)V
@0.11.0.0
+#upperRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
-#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
@2.1.1
-#init(Ljava/lang/String;)V
@2.7.0
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJZ)Ljava/util/List;
-#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJ)Ljava/util/List;
@3.0.0
+#toStoreBinaryKeyPrefix(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
@3.2.0
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJZ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
-#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;

+###org/apache/kafka/streams/state/internals/SegmentedBytesStore
@0.10.2.0
+#fetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/common/utils/Bytes;)V
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
@0.11.0.0
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@1.1.0
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.0.0
+#remove(Lorg/apache/kafka/common/utils/Bytes;J)V

+###org/apache/kafka/streams/state/internals/StateStoreProvider
@0.10.1.0
+#stores(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/util/List;

+###org/apache/kafka/streams/state/internals/StreamThreadStateStoreProvider
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/StreamThread;)V
+#stores(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/util/List;
@2.5.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/StreamThread;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#stores(Lorg/apache/kafka/streams/StoreQueryParameters;)Ljava/util/List;
-#<init>(Lorg/apache/kafka/streams/processor/internals/StreamThread;)V
-#stores(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/util/List;
@2.6.1
+#<init>(Lorg/apache/kafka/streams/processor/internals/StreamThread;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/StreamThread;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V

+###org/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener
@0.10.1.0
+#apply(Ljava/util/List;)V

+###org/apache/kafka/streams/state/internals/ThreadCache
@0.10.1.0
+#<init>(J)V
+#<init>(Ljava/lang/String;JLorg/apache/kafka/streams/state/internals/ThreadCacheMetrics;)V
+#puts()J
+#gets()J
+#evicts()J
+#flushes()J
+#addDirtyEntryFlushListener(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;)V
+#flush(Ljava/lang/String;)V
+#get(Ljava/lang/String;[B)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
+#put(Ljava/lang/String;[BLorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
+#putIfAbsent(Ljava/lang/String;[BLorg/apache/kafka/streams/state/internals/LRUCacheEntry;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
+#putAll(Ljava/lang/String;Ljava/util/List;)V
+#delete(Ljava/lang/String;[B)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
+#range(Ljava/lang/String;[B[B)Lorg/apache/kafka/streams/state/internals/ThreadCache$MemoryLRUCacheBytesIterator;
+#all(Ljava/lang/String;)Lorg/apache/kafka/streams/state/internals/ThreadCache$MemoryLRUCacheBytesIterator;
+#size()J
@0.10.2.0
+#<init>(Ljava/lang/String;JLorg/apache/kafka/streams/StreamsMetrics;)V
-#<init>(J)V
-#<init>(Ljava/lang/String;JLorg/apache/kafka/streams/state/internals/ThreadCacheMetrics;)V
@0.11.0.0
+#get(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
+#put(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
+#putIfAbsent(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
+#delete(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
+#range(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/internals/ThreadCache$MemoryLRUCacheBytesIterator;
-#get(Ljava/lang/String;[B)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
-#put(Ljava/lang/String;[BLorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
-#putIfAbsent(Ljava/lang/String;[BLorg/apache/kafka/streams/state/internals/LRUCacheEntry;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
-#delete(Ljava/lang/String;[B)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
-#range(Ljava/lang/String;[B[B)Lorg/apache/kafka/streams/state/internals/ThreadCache$MemoryLRUCacheBytesIterator;
@0.11.0.1
+#nameSpaceFromTaskIdAndStore(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#taskIDfromCacheName(Ljava/lang/String;)Ljava/lang/String;
+#underlyingStoreNamefromCacheName(Ljava/lang/String;)Ljava/lang/String;
@1.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;JLorg/apache/kafka/streams/StreamsMetrics;)V
-#<init>(Ljava/lang/String;JLorg/apache/kafka/streams/StreamsMetrics;)V
@2.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;JLorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;JLorg/apache/kafka/streams/StreamsMetrics;)V
@2.7.0
+#reverseRange(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/internals/ThreadCache$MemoryLRUCacheBytesIterator;
+#reverseAll(Ljava/lang/String;)Lorg/apache/kafka/streams/state/internals/ThreadCache$MemoryLRUCacheBytesIterator;
@2.8.0
+#resize(J)V
+#range(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;Z)Lorg/apache/kafka/streams/state/internals/ThreadCache$MemoryLRUCacheBytesIterator;

+###org/apache/kafka/streams/state/internals/WindowStoreSupplier
@0.10.2.0
+#retentionPeriod()J
@2.0.0
-###org/apache/kafka/streams/state/internals/WindowStoreSupplier

+###org/apache/kafka/streams/state/internals/WindowStoreUtils
@0.10.0.0
+#<init>()V
+#toBinaryKey(Ljava/lang/Object;JILorg/apache/kafka/streams/state/StateSerdes;)[B
+#keyFromBinaryKey([BLorg/apache/kafka/streams/state/StateSerdes;)Ljava/lang/Object;
+#timestampFromBinaryKey([B)J
@0.10.1.0
+#bytesKeyFromBinaryKey([B)Lorg/apache/kafka/common/utils/Bytes;
+#sequenceNumberFromBinaryKey([B)I
@0.11.0.0
-#toBinaryKey(Ljava/lang/Object;JILorg/apache/kafka/streams/state/StateSerdes;)[B
-#keyFromBinaryKey([BLorg/apache/kafka/streams/state/StateSerdes;)Ljava/lang/Object;
-#bytesKeyFromBinaryKey([B)Lorg/apache/kafka/common/utils/Bytes;
-#timestampFromBinaryKey([B)J
-#sequenceNumberFromBinaryKey([B)I
@1.0.0
+#timeWindowForSize(JJ)Lorg/apache/kafka/streams/kstream/internals/TimeWindow;
@2.0.0
-###org/apache/kafka/streams/state/internals/WindowStoreUtils

+###org/apache/kafka/streams/state/internals/WrappedStateStore$AbstractStateStore
@0.11.0.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#name()Ljava/lang/String;
+#persistent()Z
+#isOpen()Z
+#inner()Lorg/apache/kafka/streams/processor/StateStore;
+#flush()V
+#close()V
@1.0.0
+#wrappedStore()Lorg/apache/kafka/streams/processor/StateStore;
@2.2.0
-###org/apache/kafka/streams/state/internals/WrappedStateStore$AbstractStateStore

+###org/apache/kafka/streams/state/internals/WrappingStoreProvider
@0.10.1.0
+#<init>(Ljava/util/List;)V
+#stores(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Ljava/util/List;
@2.2.0
-#<init>(Ljava/util/List;)V
@2.5.0
+#setStoreQueryParameters(Lorg/apache/kafka/streams/StoreQueryParameters;)V

+###org/apache/kafka/streams/state/KeyValueIterator
@0.10.0.0
+#close()V
@0.10.2.0
+#peekNextKey()Ljava/lang/Object;

+###org/apache/kafka/streams/state/KeyValueStore
@0.10.0.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/List;)V
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
@0.10.1.0
-#get(Ljava/lang/Object;)Ljava/lang/Object;
-#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#all()Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/QueryableStoreType
@0.10.1.0
+#accepts(Lorg/apache/kafka/streams/processor/StateStore;)Z
+#create(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/kafka/streams/state/QueryableStoreTypes
@0.10.1.0
+#<init>()V
+#keyValueStore()Lorg/apache/kafka/streams/state/QueryableStoreType;
+#windowStore()Lorg/apache/kafka/streams/state/QueryableStoreType;
@0.10.2.0
+#sessionStore()Lorg/apache/kafka/streams/state/QueryableStoreType;
@2.3.0
+#timestampedKeyValueStore()Lorg/apache/kafka/streams/state/QueryableStoreType;
+#timestampedWindowStore()Lorg/apache/kafka/streams/state/QueryableStoreType;

+###org/apache/kafka/streams/state/ReadOnlyKeyValueStore
@0.10.1.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#approximateNumEntries()J
@2.7.0
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.0
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/ReadOnlySessionStore
@0.10.2.0
+#fetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@0.11.0.0
+#fetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
+#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
+#backwardFetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.0.0
+#findSessions(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchSession(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Ljava/lang/Object;

+###org/apache/kafka/streams/state/ReadOnlyWindowStore
@0.10.1.0
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
@0.11.0.0
+#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@1.1.0
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.0.0
+#fetch(Ljava/lang/Object;J)Ljava/lang/Object;
@2.1.0
*#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;[deprecated]
+#fetch(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/WindowStoreIterator;
*#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#fetch(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
*#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#fetchAll(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
+#backwardFetch(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.0.0
-#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;[deprecated]
-#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
-#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]

+###org/apache/kafka/streams/state/RocksDBConfigSetter
@0.10.1.0
+#setConfig(Ljava/lang/String;Lorg/rocksdb/Options;Ljava/util/Map;)V
@2.3.0
+#close(Ljava/lang/String;Lorg/rocksdb/Options;)V

+###org/apache/kafka/streams/state/SessionStore
@0.10.2.0
+#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/streams/kstream/Windowed;)V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;)V
@0.11.0.0
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.2.0
+#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
@2.7.0
-#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
@3.0.0
+#findSessions(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchSession(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Ljava/lang/Object;
@3.3.0
+#findSessions(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/StateSerdes
@0.10.0.0
+#withBuiltinTypes(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/kafka/streams/state/StateSerdes;
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#keyDeserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#keySerializer()Lorg/apache/kafka/common/serialization/Serializer;
+#valueDeserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#valueSerializer()Lorg/apache/kafka/common/serialization/Serializer;
+#stateName()Ljava/lang/String;
+#keyFrom([B)Ljava/lang/Object;
+#valueFrom([B)Ljava/lang/Object;
+#rawKey(Ljava/lang/Object;)[B
+#rawValue(Ljava/lang/Object;)[B
@0.10.2.1
+#topic()Ljava/lang/String;
-#stateName()Ljava/lang/String;

+###org/apache/kafka/streams/state/Stores$InMemoryKeyValueFactory
@0.10.0.0
+#maxEntries(I)Lorg/apache/kafka/streams/state/Stores$InMemoryKeyValueFactory;
+#build()Lorg/apache/kafka/streams/processor/StateStoreSupplier;
@0.10.1.0
+#enableLogging(Ljava/util/Map;)Lorg/apache/kafka/streams/state/Stores$InMemoryKeyValueFactory;
+#disableLogging()Lorg/apache/kafka/streams/state/Stores$InMemoryKeyValueFactory;
@2.0.0
-###org/apache/kafka/streams/state/Stores$InMemoryKeyValueFactory

+###org/apache/kafka/streams/state/Stores$KeyValueFactory
@0.10.0.0
+#inMemory()Lorg/apache/kafka/streams/state/Stores$InMemoryKeyValueFactory;
+#persistent()Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
@2.0.0
-###org/apache/kafka/streams/state/Stores$KeyValueFactory

+###org/apache/kafka/streams/state/Stores$PersistentKeyValueFactory
@0.10.0.0
+#windowed(JIZ)Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
+#build()Lorg/apache/kafka/streams/processor/StateStoreSupplier;
@0.10.1.0
+#windowed(JJIZ)Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
+#enableLogging(Ljava/util/Map;)Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
+#disableLogging()Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
+#enableCaching()Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
-#windowed(JIZ)Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
@0.10.2.0
+#sessionWindowed(J)Lorg/apache/kafka/streams/state/Stores$PersistentKeyValueFactory;
@2.0.0
-###org/apache/kafka/streams/state/Stores$PersistentKeyValueFactory

+###org/apache/kafka/streams/state/Stores$StoreFactory
@0.10.0.0
+#<init>()V
+#withStringKeys()Lorg/apache/kafka/streams/state/Stores$ValueFactory;
+#withIntegerKeys()Lorg/apache/kafka/streams/state/Stores$ValueFactory;
+#withLongKeys()Lorg/apache/kafka/streams/state/Stores$ValueFactory;
+#withDoubleKeys()Lorg/apache/kafka/streams/state/Stores$ValueFactory;
+#withByteBufferKeys()Lorg/apache/kafka/streams/state/Stores$ValueFactory;
+#withByteArrayKeys()Lorg/apache/kafka/streams/state/Stores$ValueFactory;
+#withKeys(Ljava/lang/Class;)Lorg/apache/kafka/streams/state/Stores$ValueFactory;
+#withKeys(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/Stores$ValueFactory;
@2.0.0
-###org/apache/kafka/streams/state/Stores$StoreFactory

+###org/apache/kafka/streams/state/Stores$ValueFactory
@0.10.0.0
+#<init>()V
+#withStringValues()Lorg/apache/kafka/streams/state/Stores$KeyValueFactory;
+#withIntegerValues()Lorg/apache/kafka/streams/state/Stores$KeyValueFactory;
+#withLongValues()Lorg/apache/kafka/streams/state/Stores$KeyValueFactory;
+#withDoubleValues()Lorg/apache/kafka/streams/state/Stores$KeyValueFactory;
+#withByteBufferValues()Lorg/apache/kafka/streams/state/Stores$KeyValueFactory;
+#withByteArrayValues()Lorg/apache/kafka/streams/state/Stores$KeyValueFactory;
+#withValues(Ljava/lang/Class;)Lorg/apache/kafka/streams/state/Stores$KeyValueFactory;
+#withValues(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/Stores$KeyValueFactory;
@2.0.0
-###org/apache/kafka/streams/state/Stores$ValueFactory

+###org/apache/kafka/streams/state/Stores
@0.10.0.0
+#<init>()V
+#create(Ljava/lang/String;)Lorg/apache/kafka/streams/state/Stores$StoreFactory;
@1.0.0
+#persistentKeyValueStore(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
+#inMemoryKeyValueStore(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
+#lruMap(Ljava/lang/String;I)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
+#persistentWindowStore(Ljava/lang/String;JIJZ)Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
+#persistentSessionStore(Ljava/lang/String;J)Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;
+#windowStoreBuilder(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#keyValueStoreBuilder(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#sessionStoreBuilder(Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
*#create(Ljava/lang/String;)Lorg/apache/kafka/streams/state/Stores$StoreFactory;[deprecated]
@2.0.0
-#create(Ljava/lang/String;)Lorg/apache/kafka/streams/state/Stores$StoreFactory;[deprecated]
@2.1.0
*#persistentWindowStore(Ljava/lang/String;JIJZ)Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;[deprecated]
+#persistentWindowStore(Ljava/lang/String;Ljava/time/Duration;Ljava/time/Duration;Z)Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
*#persistentSessionStore(Ljava/lang/String;J)Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;[deprecated]
+#persistentSessionStore(Ljava/lang/String;Ljava/time/Duration;)Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;
@2.3.0
+#persistentTimestampedKeyValueStore(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
+#persistentTimestampedWindowStore(Ljava/lang/String;Ljava/time/Duration;Ljava/time/Duration;Z)Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
+#inMemoryWindowStore(Ljava/lang/String;Ljava/time/Duration;Ljava/time/Duration;Z)Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
+#inMemorySessionStore(Ljava/lang/String;Ljava/time/Duration;)Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;
+#timestampedKeyValueStoreBuilder(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#timestampedWindowStoreBuilder(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
@3.0.0
-#persistentWindowStore(Ljava/lang/String;JIJZ)Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;[deprecated]
-#persistentSessionStore(Ljava/lang/String;J)Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;[deprecated]

+###org/apache/kafka/streams/state/StreamsMetadata
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/state/HostInfo;Ljava/util/Set;Ljava/util/Set;)V
+#hostInfo()Lorg/apache/kafka/streams/state/HostInfo;
+#stateStoreNames()Ljava/util/Set;
+#topicPartitions()Ljava/util/Set;
+#host()Ljava/lang/String;
+#port()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0
+#<init>(Lorg/apache/kafka/streams/state/HostInfo;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
+#standbyTopicPartitions()Ljava/util/Set;
+#standbyStateStoreNames()Ljava/util/Set;
-#<init>(Lorg/apache/kafka/streams/state/HostInfo;Ljava/util/Set;Ljava/util/Set;)V

+###org/apache/kafka/streams/state/WindowStore
@0.10.0.0
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;J)V
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
@0.10.1.0
-#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
@2.1.0
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#fetch(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.4.0
*#put(Ljava/lang/Object;Ljava/lang/Object;)V[deprecated]
@2.7.0
+#backwardFetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.0.0
-#put(Ljava/lang/Object;Ljava/lang/Object;)V[deprecated]

+###org/apache/kafka/streams/state/WindowStoreIterator
@0.10.0.0
+#close()V

+###org/apache/kafka/streams/StreamsConfig$InternalConfig
@0.10.0.0
+#<init>()V
@3.0.0
+#getBoolean(Ljava/util/Map;Ljava/lang/String;Z)Z
+#getLong(Ljava/util/Map;Ljava/lang/String;J)J
@3.2.0
+#getString(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/streams/StreamsConfig
@0.10.0.0
+#<init>(Ljava/util/Map;)V
+#getConsumerConfigs(Lorg/apache/kafka/streams/processor/internals/StreamThread;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#getRestoreConsumerConfigs(Ljava/lang/String;)Ljava/util/Map;
+#getProducerConfigs(Ljava/lang/String;)Ljava/util/Map;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#main([Ljava/lang/String;)V
@0.10.1.0
+#consumerPrefix(Ljava/lang/String;)Ljava/lang/String;
+#producerPrefix(Ljava/lang/String;)Ljava/lang/String;
@0.10.2.0
+#configDef()Lorg/apache/kafka/common/config/ConfigDef;
@0.11.0.0
*#keySerde()Lorg/apache/kafka/common/serialization/Serde;[deprecated]
+#defaultKeySerde()Lorg/apache/kafka/common/serialization/Serde;
*#valueSerde()Lorg/apache/kafka/common/serialization/Serde;[deprecated]
+#defaultValueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#defaultTimestampExtractor()Lorg/apache/kafka/streams/processor/TimestampExtractor;
@1.0.0
+#topicPrefix(Ljava/lang/String;)Ljava/lang/String;
+#defaultDeserializationExceptionHandler()Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler;
@1.1.0
+#adminClientPrefix(Ljava/lang/String;)Ljava/lang/String;
+#getConsumerConfigs(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#getAdminConfigs(Ljava/lang/String;)Ljava/util/Map;
+#defaultProductionExceptionHandler()Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;
-#getConsumerConfigs(Lorg/apache/kafka/streams/processor/internals/StreamThread;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
@2.0.0
+#mainConsumerPrefix(Ljava/lang/String;)Ljava/lang/String;
+#restoreConsumerPrefix(Ljava/lang/String;)Ljava/lang/String;
+#globalConsumerPrefix(Ljava/lang/String;)Ljava/lang/String;
*#getConsumerConfigs(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;[deprecated]
+#getMainConsumerConfigs(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#getGlobalConsumerConfigs(Ljava/lang/String;)Ljava/util/Map;
-#keySerde()Lorg/apache/kafka/common/serialization/Serde;[deprecated]
-#valueSerde()Lorg/apache/kafka/common/serialization/Serde;[deprecated]
@2.3.0
+#getMainConsumerConfigs(Ljava/lang/String;Ljava/lang/String;I)Ljava/util/Map;
-#getMainConsumerConfigs(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
@3.0.0
-#getConsumerConfigs(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;[deprecated]
@3.2.0
+#clientTagPrefix(Ljava/lang/String;)Ljava/lang/String;
+#getClientTags()Ljava/util/Map;
@3.4.0
+#verifyTopologyOptimizationConfigs(Ljava/lang/String;)Ljava/util/Set;

+###org/apache/kafka/streams/StreamsMetrics
@0.10.0.0
+#addLatencySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#recordLatency(Lorg/apache/kafka/common/metrics/Sensor;JJ)V
@0.10.2.0
+#metrics()Ljava/util/Map;
+#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#recordThroughput(Lorg/apache/kafka/common/metrics/Sensor;J)V
+#addSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;)Lorg/apache/kafka/common/metrics/Sensor;
+#addSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeSensor(Lorg/apache/kafka/common/metrics/Sensor;)V
-#addLatencySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
@2.5.0
+#addLatencyRateTotalSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#addRateTotalSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
*#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;[deprecated]
*#recordLatency(Lorg/apache/kafka/common/metrics/Sensor;JJ)V[deprecated]
*#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;[deprecated]
*#recordThroughput(Lorg/apache/kafka/common/metrics/Sensor;J)V[deprecated]
@3.0.0
-#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;[deprecated]
-#recordLatency(Lorg/apache/kafka/common/metrics/Sensor;JJ)V[deprecated]
-#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;[deprecated]
-#recordThroughput(Lorg/apache/kafka/common/metrics/Sensor;J)V[deprecated]

+###org/apache/kafka/streams/TopologyDescription$Subtopology
@1.0.0
+#id()I
+#nodes()Ljava/util/Set;

+###org/apache/kafka/streams/kstream/ValueTransformerWithKey
@1.1.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#transform(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#close()V

+###org/apache/kafka/streams/kstream/Materialized
@1.0.0
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Materialized;
+#as(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;)Lorg/apache/kafka/streams/kstream/Materialized;
+#as(Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;)Lorg/apache/kafka/streams/kstream/Materialized;
+#as(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;)Lorg/apache/kafka/streams/kstream/Materialized;
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Materialized;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Materialized;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Materialized;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/kstream/Materialized;
+#withLoggingDisabled()Lorg/apache/kafka/streams/kstream/Materialized;
+#withCachingEnabled()Lorg/apache/kafka/streams/kstream/Materialized;
+#withCachingDisabled()Lorg/apache/kafka/streams/kstream/Materialized;
@2.1.0
+#withRetention(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/Materialized;
@3.2.0
+#as(Lorg/apache/kafka/streams/kstream/Materialized$StoreType;)Lorg/apache/kafka/streams/kstream/Materialized;
+#withStoreType(Lorg/apache/kafka/streams/kstream/Materialized$StoreType;)Lorg/apache/kafka/streams/kstream/Materialized;

+###org/apache/kafka/streams/kstream/SessionWindowedDeserializer
@2.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;)V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Lorg/apache/kafka/streams/kstream/Windowed;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/SessionWindowedKStream
@1.0.0
+#count()Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.4.0
+#count(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@3.3.0
+#emitStrategy(Lorg/apache/kafka/streams/kstream/EmitStrategy;)Lorg/apache/kafka/streams/kstream/SessionWindowedKStream;

+###org/apache/kafka/streams/kstream/WindowedSerdes
@2.0.0
+#<init>()V
+#timeWindowedSerdeFrom(Ljava/lang/Class;)Lorg/apache/kafka/common/serialization/Serde;
+#sessionWindowedSerdeFrom(Ljava/lang/Class;)Lorg/apache/kafka/common/serialization/Serde;
@2.2.0
+#timeWindowedSerdeFrom(Ljava/lang/Class;J)Lorg/apache/kafka/common/serialization/Serde;
@2.8.0
*#timeWindowedSerdeFrom(Ljava/lang/Class;)Lorg/apache/kafka/common/serialization/Serde;[deprecated]

+###org/apache/kafka/streams/kstream/TimeWindowedDeserializer
@2.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;)V
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;J)V
+#getWindowSize()Ljava/lang/Long;
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Lorg/apache/kafka/streams/kstream/Windowed;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.2.0
+#setIsChangelogTopic(Z)V
@2.8.0
*#<init>(Lorg/apache/kafka/common/serialization/Deserializer;)V[deprecated]
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/Long;)V
-#<init>(Lorg/apache/kafka/common/serialization/Deserializer;J)V

+###org/apache/kafka/streams/kstream/Suppressed
@2.1.0
+#untilWindowCloses(Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;)Lorg/apache/kafka/streams/kstream/Suppressed;
+#untilTimeLimit(Ljava/time/Duration;Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;)Lorg/apache/kafka/streams/kstream/Suppressed;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Suppressed;
@2.3.0
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig
@2.1.0

+###org/apache/kafka/streams/kstream/Serialized
@1.0.0
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Serialized;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Serialized;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Serialized;
@3.0.0
-###org/apache/kafka/streams/kstream/Serialized

+###org/apache/kafka/streams/kstream/ValueMapperWithKey
@1.1.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig
@2.3.0

+###org/apache/kafka/streams/kstream/TimeWindowedSerializer
@2.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;)V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
+#close()V
+#serializeBaseKey(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B

+###org/apache/kafka/streams/kstream/Printed
@1.0.0
+#toFile(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Printed;
+#toSysOut()Lorg/apache/kafka/streams/kstream/Printed;
+#withLabel(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Printed;
+#withKeyValueMapper(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/Printed;
@2.3.0
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Printed;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/WindowedSerdes$TimeWindowedSerde
@2.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
@2.2.0
+#<init>(Lorg/apache/kafka/common/serialization/Serde;J)V
+#forChangelog(Z)Lorg/apache/kafka/streams/kstream/WindowedSerdes$TimeWindowedSerde;
@2.8.0
*#<init>(Lorg/apache/kafka/common/serialization/Serde;)V[deprecated]

+###org/apache/kafka/streams/kstream/WindowedSerdes$SessionWindowedSerde
@2.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V

+###org/apache/kafka/streams/kstream/StreamJoined
@2.4.0
+#with(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#withStoreName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#withOtherValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#withThisStoreSupplier(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#withOtherStoreSupplier(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#toString()Ljava/lang/String;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;
@2.8.0
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/kstream/StreamJoined;
+#withLoggingDisabled()Lorg/apache/kafka/streams/kstream/StreamJoined;

+###org/apache/kafka/streams/kstream/internals/metrics/Sensors
@2.1.0
+#lateRecordDropSensor(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#recordLatenessSensor(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/common/metrics/Sensor;
@2.2.0
+#suppressionEmitSensor(Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/common/metrics/Sensor;
@2.5.0
-###org/apache/kafka/streams/kstream/internals/metrics/Sensors

+###org/apache/kafka/streams/kstream/internals/MaterializedInternal
@1.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/Materialized;Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)V
+#storeName()Ljava/lang/String;
+#storeSupplier()Lorg/apache/kafka/streams/state/StoreSupplier;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
@2.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/Materialized;)V
+#generateStoreNameIfNeeded(Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/streams/kstream/Materialized;Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)V
-#logConfig()Ljava/util/Map;
@2.1.0
+#cachingEnabled()Z
+#isQueryable()Z
@2.2.0
+#<init>(Lorg/apache/kafka/streams/kstream/Materialized;Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)V
+#queryableStoreName()Ljava/lang/String;
-#generateStoreNameIfNeeded(Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)V
-#isQueryable()Z
@3.2.0
+#storeType()Lorg/apache/kafka/streams/kstream/Materialized$StoreType;

+###org/apache/kafka/streams/kstream/internals/KStreamFlatTransform
@2.2.0
+#<init>(Lorg/apache/kafka/streams/kstream/TransformerSupplier;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.6.0
+#stores()Ljava/util/Set;
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImpl
@1.0.0
+#count()Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.4.0
+#count(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@3.3.0
+#emitStrategy(Lorg/apache/kafka/streams/kstream/EmitStrategy;)Lorg/apache/kafka/streams/kstream/TimeWindowedKStream;

+###org/apache/kafka/streams/kstream/internals/JoinedInternal
@2.3.0
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#otherValueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#name()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/WindowingDefaults
@2.1.0
@3.0.0
-###org/apache/kafka/streams/kstream/internals/WindowingDefaults

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionJoinForeignProcessorSupplier
@2.4.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplier
@2.4.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/kstream/ValueJoiner;Z)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.5.1
+#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;Lorg/apache/kafka/common/serialization/Serializer;Ljava/util/function/Supplier;Lorg/apache/kafka/streams/kstream/ValueJoiner;Z)V
-#<init>(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/kstream/ValueJoiner;Z)V
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper
@2.4.0
+#<init>([JLjava/lang/Object;)V
+#<init>([JLjava/lang/Object;B)V
+#getOriginalValueHash()[J
+#getForeignValue()Ljava/lang/Object;
+#getVersion()B
+#toString()Ljava/lang/String;
@3.3.0
+#<init>([JLjava/lang/Object;Ljava/lang/Integer;)V
+#<init>([JLjava/lang/Object;BLjava/lang/Integer;)V
+#getPrimaryPartition()Ljava/lang/Integer;
-#<init>([JLjava/lang/Object;)V
-#<init>([JLjava/lang/Object;B)V
@3.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/CombinedKey
@2.4.0
+#getForeignKey()Ljava/lang/Object;
+#getPrimaryKey()Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.4.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
-#equals(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper
@2.4.0
+#<init>([JLorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;Ljava/lang/Object;)V
+#<init>([JLorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;Ljava/lang/Object;B)V
+#getInstruction()Lorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;
+#getHash()[J
+#getPrimaryKey()Ljava/lang/Object;
+#getVersion()B
+#toString()Ljava/lang/String;
@3.3.0
+#<init>([JLorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;Ljava/lang/Object;Ljava/lang/Integer;)V
+#<init>([JLorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;Ljava/lang/Object;BLjava/lang/Integer;)V
+#getPrimaryPartition()Ljava/lang/Integer;
-#<init>([JLorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;Ljava/lang/Object;)V
-#<init>([JLorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;Ljava/lang/Object;B)V
@3.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapperSerde
@2.4.0
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
@2.4.1
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
@2.5.1
+#<init>(Ljava/util/function/Supplier;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;)V
@2.6.1
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/ForeignJoinSubscriptionProcessorSupplier
@2.4.0
+#<init>(Lorg/apache/kafka/streams/state/StoreBuilder;Lorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/CombinedKeySchema;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/CombinedKeySchema
@2.4.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#fromBytes(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/CombinedKey;
@2.4.1
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@2.5.1
+#<init>(Ljava/util/function/Supplier;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/function/Supplier;Lorg/apache/kafka/common/serialization/Serde;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;)V
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/ForeignJoinSubscriptionSendProcessorSupplier
@2.4.0
+#<init>(Ljava/util/function/Function;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Z)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.4.1
+#<init>(Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serializer;Z)V
-#<init>(Ljava/util/function/Function;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Z)V
@2.5.1
+#<init>(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serializer;Z)V
-#<init>(Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serializer;Z)V
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction
@2.4.0
+#values()[Lorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;
+#getValue()B
+#fromValue(B)Lorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper$Instruction;

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapperSerde
@2.4.0
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;

+###org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionStoreReceiveProcessorSupplier
@2.4.0
+#<init>(Lorg/apache/kafka/streams/state/StoreBuilder;Lorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/CombinedKeySchema;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/ProducedInternal
@2.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/Produced;)V
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#streamPartitioner()Lorg/apache/kafka/streams/processor/StreamPartitioner;
@2.3.0
+#name()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImpl
@1.0.0
+#count()Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.4.0
+#count(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@3.3.0
+#emitStrategy(Lorg/apache/kafka/streams/kstream/EmitStrategy;)Lorg/apache/kafka/streams/kstream/SessionWindowedKStream;

+###org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode
@2.1.0
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#repartitionTopic()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#optimizableRepartitionNodeBuilder()Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/StreamTableJoinNode
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;[Ljava/lang/String;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder
@2.1.0
+#withProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
+#withSinkName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
+#withSourceName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
+#withRepartitionTopic(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
+#withNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode;
@2.4.0
+#withPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
@2.6.0
+#<init>()V
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode;
-#withProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
-#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
-#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
-#withSinkName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
-#withSourceName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
-#withRepartitionTopic(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
-#withNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
-#withPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;

+###org/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode
@2.1.0
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#groupedTableOperationNodeBuilder()Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder
@2.1.0
+#withJoinThisStoreNames([Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withJoinThisProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withJoinOtherStoreNames([Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withJoinOtherProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withJoinMergeProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withValueJoiner(Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withThisJoinSideNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withOtherJoinSideNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withMaterializedInternal(Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode;
@2.3.0
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withQueryableStoreName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
+#withStoreBuilder(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
-#withJoinMergeProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
-#withValueJoiner(Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
-#withMaterializedInternal(Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;

+###org/apache/kafka/streams/kstream/internals/graph/GlobalStoreNode
@2.1.0
+#<init>(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#toString()Ljava/lang/String;
@2.7.0
+#<init>(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;)V
-#<init>(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/StreamSinkNode
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/streams/kstream/internals/ProducedInternal;)V
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/StatefulProcessorNode
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;[Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/state/StoreBuilder;Z)V
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@2.3.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;[Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/state/StoreBuilder;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;[Ljava/lang/String;Z)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/state/StoreBuilder;Z)V
@2.4.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Ljava/util/Set;Ljava/util/Set;)V
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/KTableKTableForeignKeyJoinResolutionNode
@2.4.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;)V
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@2.6.0
-###org/apache/kafka/streams/kstream/internals/graph/KTableKTableForeignKeyJoinResolutionNode

+###org/apache/kafka/streams/kstream/internals/graph/TableSourceNode
@2.1.0
+#isGlobalKTable()Z
+#toString()Ljava/lang/String;
+#tableSourceNodeBuilder()Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@2.2.0
-#isGlobalKTable()Z
@2.3.0
+#reuseSourceTopicForChangeLog(Z)V
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters
@2.1.0
+#<init>(Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/lang/String;)V
+#processorSupplier()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
+#processorName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.7.0
+#<init>(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Ljava/lang/String;)V
+#processorSupplier()Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;
+#oldProcessorSupplier()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
-#processorSupplier()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
@3.3.0
+#<init>(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;Ljava/lang/String;)V
+#fixedKeyProcessorSupplier()Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;
+#addProcessorTo(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;[Ljava/lang/String;)V
-#oldProcessorSupplier()Lorg/apache/kafka/streams/processor/ProcessorSupplier;

+###org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
@2.1.0
+#<init>(Ljava/lang/String;Z)V
+#parentNodes()Ljava/util/Collection;
+#allParentsWrittenToTopology()Z
+#children()Ljava/util/Collection;
+#clearChildren()V
+#removeChild(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)Z
+#addChild(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
+#nodeName()Ljava/lang/String;
+#repartitionRequired()Z
+#isKeyChangingOperation()Z
+#isValueChangingOperation()Z
+#isMergeNode()Z
+#setMergeNode(Z)V
+#setValueChangingOperation(Z)V
+#keyChangingOperation(Z)V
+#setBuildPriority(I)V
+#buildPriority()Ljava/lang/Integer;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#hasWrittenToTopology()Z
+#setHasWrittenToTopology(Z)V
+#toString()Ljava/lang/String;
@2.3.0
+#<init>(Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Z)V
-#repartitionRequired()Z
@2.8.0
-###org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode

+###org/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode
@2.1.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/graph/StateStoreNode
@2.1.0
+#<init>(Lorg/apache/kafka/streams/state/StoreBuilder;)V
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#toString()Ljava/lang/String;
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder
@2.1.0
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
+#withSinkName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
+#withNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
+#withSourceName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
+#withRepartitionTopic(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
+#withProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode;
@2.6.0
+#<init>()V
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode;
-#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
-#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
-#withSinkName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
-#withNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
-#withSourceName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
-#withRepartitionTopic(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;
-#withProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/GroupedTableOperationRepartitionNode$GroupedTableOperationRepartitionNodeBuilder;

+###org/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder
@2.1.0
+#withValueJoiner(Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withJoinThisProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withJoinOtherProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withJoinMergeProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withThisWindowedStreamProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withOtherWindowedStreamProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withThisWindowStoreBuilder(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withOtherWindowStoreBuilder(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withJoined(Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode;
@3.0.0
+#withValueJoiner(Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withOuterJoinWindowStoreBuilder(Ljava/util/Optional;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
+#withSpuriousResultFixEnabled()Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
-#withValueJoiner(Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
@3.4.0
+#withSelfJoinProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;

+###org/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode
@2.1.0
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#streamStreamJoinNodeBuilder()Lorg/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode$StreamStreamJoinNodeBuilder;
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
@3.4.0
+#setSelfJoin()V
+#getSelfJoin()Z
+#getThisWindowedStreamProcessorParameters()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
+#getOtherWindowedStreamProcessorParameters()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;

+###org/apache/kafka/streams/kstream/internals/graph/ProcessorGraphNode
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)V
+#processorParameters()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@2.3.0
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Z)V
@2.4.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)V
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/TableProcessorNode
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;[Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@2.3.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/state/StoreBuilder;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/state/StoreBuilder;[Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;[Ljava/lang/String;)V
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode
@2.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#toString()Ljava/lang/String;
+#kTableKTableJoinNodeBuilder()Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder;
@2.3.0
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#joinThisStoreNames()[Ljava/lang/String;
+#joinOtherStoreNames()[Ljava/lang/String;
+#queryableStoreName()Ljava/lang/String;
+#joinMerger()Lorg/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger;
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder
@2.1.0
+#withSourceName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
+#withTopic(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
+#withStoreBuilder(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
+#withConsumedInternal(Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
+#withProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
+#withNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
+#isGlobalKTable(Z)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode;
@2.2.0
+#withMaterializedInternal(Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
-#withStoreBuilder(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;

+###org/apache/kafka/streams/kstream/internals/graph/StreamSourceNode
@2.1.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)V
+#<init>(Ljava/lang/String;Ljava/util/regex/Pattern;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)V
+#getTopicNames()Ljava/util/Collection;
+#topicPattern()Ljava/util/regex/Pattern;
+#consumedInternal()Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@2.5.0
+#topicNames()Ljava/util/Collection;
-#getTopicNames()Ljava/util/Collection;
@2.8.0
+#merge(Lorg/apache/kafka/streams/kstream/internals/graph/StreamSourceNode;)V
-#topicNames()Ljava/util/Collection;
-#topicPattern()Ljava/util/regex/Pattern;
-#consumedInternal()Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;
-#keySerde()Lorg/apache/kafka/common/serialization/Serde;
-#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtil
@2.1.0
+#findAndVerifyWindowGrace(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)J
@2.8.0
+#findAndVerifyWindowGrace(Lorg/apache/kafka/streams/kstream/internals/graph/GraphNode;)J
-#findAndVerifyWindowGrace(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)J

+###org/apache/kafka/streams/kstream/internals/KTableMaterializedValueGetterSupplier
@1.0.1
+#get()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
+#storeNames()[Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/WrappingNullableSerializer
@2.4.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;)V
@2.5.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;)V
@3.0.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V

+###org/apache/kafka/streams/kstream/internals/NamedInternal
@2.3.0
+#empty()Lorg/apache/kafka/streams/kstream/internals/NamedInternal;
+#with(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/NamedInternal;
+#name()Ljava/lang/String;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/NamedInternal;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Named;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/internals/StreamJoinedInternal
@2.4.0
+#<init>(Lorg/apache/kafka/streams/kstream/StreamJoined;)V
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#otherValueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#name()Ljava/lang/String;
+#storeName()Ljava/lang/String;
+#thisStoreSupplier()Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
+#otherStoreSupplier()Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
@2.8.0
+#loggingEnabled()Z

+###org/apache/kafka/streams/kstream/internals/GroupedInternal
@2.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/Grouped;)V
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#name()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/PrintedInternal
@1.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/Printed;)V
+#build(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/ProcessorSupplier;
@2.3.0
+#name()Ljava/lang/String;
@3.0.0
+#build(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;
-#build(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/ProcessorSupplier;

+###org/apache/kafka/streams/kstream/internals/TransformerSupplierAdapter
@2.2.0
+#<init>(Lorg/apache/kafka/streams/kstream/TransformerSupplier;)V
+#get()Lorg/apache/kafka/streams/kstream/Transformer;
@2.6.0
+#stores()Ljava/util/Set;
@2.8.0
+#get()Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/internals/FullChangeSerde
@2.1.0
+#castOrWrap(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/FullChangeSerde;
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
+#configure(Ljava/util/Map;Z)V
+#close()V
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
@2.2.1
-#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
@2.3.0
+#innerSerde()Lorg/apache/kafka/common/serialization/Serde;
+#extractOldValuePart(Ljava/nio/ByteBuffer;)[B
@2.4.0
+#wrap(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/FullChangeSerde;
+#serializeParts(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/Change;)Lorg/apache/kafka/streams/kstream/internals/Change;
+#deserializeParts(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/Change;)Lorg/apache/kafka/streams/kstream/internals/Change;
+#mergeChangeArraysIntoSingleLegacyFormattedArray(Lorg/apache/kafka/streams/kstream/internals/Change;)[B
+#decomposeLegacyFormattedArrayIntoChangeArrays([B)Lorg/apache/kafka/streams/kstream/internals/Change;
-#castOrWrap(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/FullChangeSerde;
-#configure(Ljava/util/Map;Z)V
-#close()V
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#extractOldValuePart(Ljava/nio/ByteBuffer;)[B
@2.5.1
-#mergeChangeArraysIntoSingleLegacyFormattedArray(Lorg/apache/kafka/streams/kstream/internals/Change;)[B

+###org/apache/kafka/streams/kstream/internals/TimestampedKeyValueStoreMaterializer
@2.3.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)V
+#materialize()Lorg/apache/kafka/streams/state/StoreBuilder;

+###org/apache/kafka/streams/kstream/internals/PrintForeachAction
@1.0.0
+#<init>(Ljava/io/PrintWriter;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Ljava/lang/String;)V
+#apply(Ljava/lang/Object;Ljava/lang/Object;)V
+#close()V
@2.0.0
-#<init>(Ljava/io/PrintWriter;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Ljava/lang/String;)V

+###org/apache/kafka/streams/kstream/internals/WrappingNullableDeserializer
@2.4.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Deserializer;)V
@2.5.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Deserializer;)V
@3.0.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V

+###org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorSupplier
@2.3.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/suppress/SuppressedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/KTableImpl;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#enableSendingOldValues()V
@2.7.0
+#enableSendingOldValues(Z)Z
-#enableSendingOldValues()V
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/suppress/EagerBufferConfigImpl
@2.1.0
+#<init>(JJ)V
+#withMaxRecords(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#withMaxBytes(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#maxRecords()J
+#maxBytes()J
+#bufferFullStrategy()Lorg/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#shutDownWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#withNoBound()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
@2.3.0
+#withMaxRecords(J)Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
+#withMaxBytes(J)Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
+#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
-#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
@2.6.0
+#withLoggingDisabled()Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
+#isLoggingEnabled()Z
+#getLogConfig()Ljava/util/Map;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#withLoggingDisabled()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
-#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
-#shutDownWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
-#withNoBound()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
@3.0.0
+#<init>(JJLjava/util/Map;)V
-#<init>(JJ)V

+###org/apache/kafka/streams/kstream/internals/suppress/StrictBufferConfigImpl
@2.1.0
+#<init>(JJLorg/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy;)V
+#<init>()V
+#withMaxRecords(J)Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#withMaxBytes(J)Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#maxRecords()J
+#maxBytes()J
+#bufferFullStrategy()Lorg/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#shutDownWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#withNoBound()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#withMaxBytes(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#withMaxRecords(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
@2.3.0
+#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
-#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
@2.6.0
+#<init>(JJLorg/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy;Ljava/util/Map;)V
+#withLoggingDisabled()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#isLoggingEnabled()Z
+#getLogConfig()Ljava/util/Map;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#withLoggingDisabled()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
-#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
-#shutDownWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
-#withNoBound()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
@3.0.0
-#<init>(JJLorg/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy;)V

+###org/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$RecordTimeDefintion
@2.1.0
+#instance()Lorg/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$RecordTimeDefintion;
+#time(Lorg/apache/kafka/streams/processor/ProcessorContext;Ljava/lang/Object;)J
+#type()Lorg/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$TimeDefinitionType;
@2.7.0
-###org/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$RecordTimeDefintion

+###org/apache/kafka/streams/kstream/internals/suppress/FinalResultsSuppressionBuilder
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;)V
+#buildFinalResultsSuppression(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/internals/suppress/SuppressedInternal;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Suppressed;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.2.0
+#name()Ljava/lang/String;
@2.3.0
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$WindowEndTimeDefinition
@2.1.0
+#instance()Lorg/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$WindowEndTimeDefinition;
+#time(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/kstream/Windowed;)J
+#type()Lorg/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$TimeDefinitionType;
+#time(Lorg/apache/kafka/streams/processor/ProcessorContext;Ljava/lang/Object;)J

+###org/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy
@2.1.0
+#values()[Lorg/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy;

+###org/apache/kafka/streams/kstream/internals/suppress/NamedSuppressed
@2.2.0
+#name()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/suppress/SuppressedInternal
@2.1.0
+#<init>(Ljava/lang/String;Ljava/time/Duration;Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;Lorg/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$TimeDefinition;Z)V
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Suppressed;
+#name()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.3.0
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;
@2.6.0
+#bufferConfig()Lorg/apache/kafka/streams/kstream/internals/suppress/BufferConfigInternal;

+###org/apache/kafka/streams/kstream/internals/InternalNameProvider
@1.0.0
+#newProcessorName(Ljava/lang/String;)Ljava/lang/String;
+#newStoreName(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/ConsumedInternal
@1.0.0
+#<init>(Lorg/apache/kafka/streams/Consumed;)V
+#<init>(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/streams/Topology$AutoOffsetReset;)V
+#<init>()V
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#timestampExtractor()Lorg/apache/kafka/streams/processor/TimestampExtractor;
+#offsetResetPolicy()Lorg/apache/kafka/streams/Topology$AutoOffsetReset;
@2.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/Consumed;)V
+#keyDeserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#valueDeserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#<init>(Lorg/apache/kafka/streams/Consumed;)V
@2.3.0
+#name()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/KStreamFlatTransformValues
@2.3.0
+#<init>(Lorg/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
@2.6.0
+#stores()Ljava/util/Set;
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KStreamFlatTransformValues$KStreamFlatTransformValuesProcessor
@2.3.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
+#close()V
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
-#process(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger
@2.3.0
+#getQueryableName()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#enableSendingOldValues()V
+#of(Lorg/apache/kafka/streams/kstream/internals/KTableProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/KTableProcessorSupplier;)Lorg/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger;
+#of(Lorg/apache/kafka/streams/kstream/internals/KTableProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/KTableProcessorSupplier;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger;
@2.7.0
+#enableSendingOldValues(Z)Z
-#enableSendingOldValues()V
@2.8.0
+#get()Ljava/lang/Object;
@3.2.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/KStreamFlatTransform$KStreamFlatTransformProcessor
@2.2.0
+#<init>(Lorg/apache/kafka/streams/kstream/Transformer;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
+#close()V
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
-#process(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder
@1.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#stream(Ljava/util/Collection;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Ljava/util/regex/Pattern;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)Lorg/apache/kafka/streams/kstream/KStream;
+#table(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)Lorg/apache/kafka/streams/kstream/KTable;
+#globalTable(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#newProcessorName(Ljava/lang/String;)Ljava/lang/String;
+#newStoreName(Ljava/lang/String;)Ljava/lang/String;
+#addStateStore(Lorg/apache/kafka/streams/state/StoreBuilder;)V
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
@1.1.0
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
@2.0.0
-#table(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Lorg/apache/kafka/streams/processor/StateStoreSupplier;)Lorg/apache/kafka/streams/kstream/KTable;
@2.1.0
+#buildAndOptimizeTopology()V
+#buildAndOptimizeTopology(Ljava/util/Properties;)V
+#root()Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
@2.7.0
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;)V
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;)V
-#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
-#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
@2.8.0
+#root()Lorg/apache/kafka/streams/kstream/internals/graph/GraphNode;
-#root()Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
@3.0.0
-#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;)V
@3.2.0
+#buildAndOptimizeTopology(Z)V
-#buildAndOptimizeTopology(Ljava/util/Properties;)V
@3.4.0
+#buildAndOptimizeTopology(Ljava/util/Properties;)V
-#buildAndOptimizeTopology(Z)V

+###org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregate
@2.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#windows()Lorg/apache/kafka/streams/kstream/SessionWindows;
+#enableSendingOldValues()V
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;
@3.3.0
+#<init>(Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/EmitStrategy;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;)V
-#<init>(Lorg/apache/kafka/streams/kstream/SessionWindows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Merger;)V

+###org/apache/kafka/streams/kstream/internals/SerializedInternal
@2.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/Serialized;)V
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
@3.0.0
-###org/apache/kafka/streams/kstream/internals/SerializedInternal

+###org/apache/kafka/streams/kstream/internals/KTableKTableAbstractJoinValueGetterSupplier
@1.0.1
+#storeNames()[Ljava/lang/String;

+###org/apache/kafka/streams/kstream/Produced
@1.0.0
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Produced;
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/Produced;
+#keySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Produced;
+#valueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Produced;
+#streamPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/Produced;
+#withStreamPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/Produced;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Produced;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Produced;
@2.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Produced;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Produced;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/SessionWindowedSerializer
@2.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;)V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
+#close()V
+#serializeBaseKey(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windowed;)[B
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B

+###org/apache/kafka/streams/kstream/Consumed
@2.0.0
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/streams/Topology$AutoOffsetReset;)Lorg/apache/kafka/streams/kstream/Consumed;
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Consumed;
+#with(Lorg/apache/kafka/streams/processor/TimestampExtractor;)Lorg/apache/kafka/streams/kstream/Consumed;
+#with(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;)Lorg/apache/kafka/streams/kstream/Consumed;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Consumed;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Consumed;
+#withTimestampExtractor(Lorg/apache/kafka/streams/processor/TimestampExtractor;)Lorg/apache/kafka/streams/kstream/Consumed;
+#withOffsetResetPolicy(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;)Lorg/apache/kafka/streams/kstream/Consumed;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Consumed;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Consumed;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/TimeWindowedKStream
@1.0.0
+#count()Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@2.4.0
+#count(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@3.3.0
+#emitStrategy(Lorg/apache/kafka/streams/kstream/EmitStrategy;)Lorg/apache/kafka/streams/kstream/TimeWindowedKStream;

+###org/apache/kafka/streams/kstream/ValueTransformerWithKeySupplier
@1.1.0
+#get()Lorg/apache/kafka/streams/kstream/ValueTransformerWithKey;
@2.8.0
+#get()Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/Grouped
@2.1.0
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Grouped;
+#keySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Grouped;
+#valueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Grouped;
+#with(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Grouped;
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Grouped;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Grouped;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Grouped;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Grouped;
@2.3.0
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/Suppressed$BufferConfig
@2.1.0
+#maxRecords(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#withMaxRecords(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#maxBytes(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#withMaxBytes(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#unbounded()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#withNoBound()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#shutDownWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
@2.3.0
+#maxRecords(J)Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
+#maxBytes(J)Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
+#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
-#maxRecords(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
-#maxBytes(J)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
-#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
@2.6.0
+#withLoggingDisabled()Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/kstream/Suppressed$BufferConfig;

+###org/apache/kafka/streams/kstream/Named
@2.3.0
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Named;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Named;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/Joined
@1.0.0
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Joined;
+#keySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Joined;
+#valueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Joined;
+#otherValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Joined;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Joined;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Joined;
+#withOtherValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Joined;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#otherValueSerde()Lorg/apache/kafka/common/serialization/Serde;
@2.1.0
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Joined;
+#named(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Joined;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Joined;
+#name()Ljava/lang/String;
@2.3.0
*#named(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Joined;[deprecated]
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Joined;
*#name()Ljava/lang/String;[deprecated]
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;
@3.0.0
-#named(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Joined;[deprecated]
-#name()Ljava/lang/String;[deprecated]

+###org/apache/kafka/streams/TopologyDescription
@1.0.0
+#subtopologies()Ljava/util/Set;
+#globalStores()Ljava/util/Set;

+###org/apache/kafka/streams/TopologyDescription$Sink
@1.0.0
+#topic()Ljava/lang/String;
@2.1.0
+#topicNameExtractor()Lorg/apache/kafka/streams/processor/TopicNameExtractor;

+###org/apache/kafka/streams/Topology$AutoOffsetReset
@1.0.0
+#values()[Lorg/apache/kafka/streams/Topology$AutoOffsetReset;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/Topology$AutoOffsetReset;

+###org/apache/kafka/streams/TopologyDescription$Source
@1.0.0
+#topics()Ljava/lang/String;
@2.1.0
*#topics()Ljava/lang/String;[deprecated]
+#topicSet()Ljava/util/Set;
+#topicPattern()Ljava/util/regex/Pattern;
@3.0.0
-#topics()Ljava/lang/String;[deprecated]

+###org/apache/kafka/streams/processor/RecordContext
@2.0.0
+#offset()J
+#timestamp()J
+#topic()Ljava/lang/String;
+#partition()I
+#headers()Lorg/apache/kafka/common/header/Headers;

+###org/apache/kafka/streams/processor/Punctuator
@1.0.0
+#punctuate(J)V

+###org/apache/kafka/streams/processor/BatchingStateRestoreCallback
@1.0.0
+#restoreAll(Ljava/util/Collection;)V
@2.6.0
+#restore([B[B)V

+###org/apache/kafka/streams/processor/TaskMetadata
@1.0.0
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#taskId()Ljava/lang/String;
+#topicPartitions()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0
+#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Optional;)V
+#committedOffsets()Ljava/util/Map;
+#endOffsets()Ljava/util/Map;
+#timeCurrentIdlingStarted()Ljava/util/Optional;
-#<init>(Ljava/lang/String;Ljava/util/Set;)V

+###org/apache/kafka/streams/processor/AbstractNotifyingRestoreCallback
@1.0.0
+#<init>()V
+#onRestoreStart(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;JJ)V
+#onBatchRestored(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;JJ)V
+#onRestoreEnd(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;J)V
@2.6.0
-###org/apache/kafka/streams/processor/AbstractNotifyingRestoreCallback

+###org/apache/kafka/streams/processor/To
@2.0.0
+#child(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/To;
+#all()Lorg/apache/kafka/streams/processor/To;
+#withTimestamp(J)Lorg/apache/kafka/streams/processor/To;
@2.3.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/processor/Cancellable
@1.0.0
+#cancel()V

+###org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl$Version
@2.4.0
+#values()[Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl$Version;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl$Version;

+###org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics
@2.4.0
+#createTaskSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#closeTaskSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#commitSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#pollSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#processSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#punctuateSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#skipRecordSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#commitOverTasksSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@2.6.0
+#processLatencySensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#pollRecordsSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#processRecordsSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#processRateSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#processRatioSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#punctuateRatioSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#pollRatioSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#commitRatioSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#processSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@3.1.0
+#addThreadStartTimeMetric(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;J)V
+#addThreadBlockedTimeMetric(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/StreamThreadTotalBlockedTime;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)V
@3.4.0
-#skipRecordSensor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;

+###org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl
@2.0.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;)V
+#threadLevelSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllThreadLevelSensors()V
+#taskLevelSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllTaskLevelSensors(Ljava/lang/String;)V
+#cacheLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllCacheLevelSensors(Ljava/lang/String;Ljava/lang/String;)V
+#skippedRecordsSensor()Lorg/apache/kafka/common/metrics/Sensor;
+#addSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;)Lorg/apache/kafka/common/metrics/Sensor;
+#addSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#metrics()Ljava/util/Map;
+#recordLatency(Lorg/apache/kafka/common/metrics/Sensor;JJ)V
+#recordThroughput(Lorg/apache/kafka/common/metrics/Sensor;J)V
+#tagMap([Ljava/lang/String;)Ljava/util/Map;
+#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeSensor(Lorg/apache/kafka/common/metrics/Sensor;)V
@2.1.0
+#nodeLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllNodeLevelSensors(Ljava/lang/String;Ljava/lang/String;)V
+#storeLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllStoreLevelSensors(Ljava/lang/String;Ljava/lang/String;)V
+#addAvgMaxLatency(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
+#addInvocationRateAndCount(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
-#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
-#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
@2.4.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;)V
+#version()Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl$Version;
+#setRocksDBMetricsRecordingTrigger(Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecordingTrigger;)V
+#rocksDBMetricsRecordingTrigger()Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecordingTrigger;
+#addClientLevelImmutableMetric(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Ljava/lang/Object;)V
+#addClientLevelMutableMetric(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Lorg/apache/kafka/common/metrics/Gauge;)V
+#threadLevelSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#clientLevelTagMap()Ljava/util/Map;
+#threadLevelTagMap(Ljava/lang/String;)Ljava/util/Map;
+#threadLevelTagMap(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
+#removeAllClientLevelMetrics()V
+#removeAllThreadLevelSensors(Ljava/lang/String;)V
+#taskLevelTagMap(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#storeLevelTagMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#taskLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllTaskLevelSensors(Ljava/lang/String;Ljava/lang/String;)V
+#nodeLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllNodeLevelSensors(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#cacheLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#cacheLevelTagMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#removeAllCacheLevelSensors(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#storeLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllStoreLevelSensors(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#tagMap(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
+#addAvgAndMaxToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
+#addAvgAndMaxLatencyToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
+#addAvgAndMinAndMaxToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addInvocationRateAndCountToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addInvocationRateAndCountToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
+#addRateOfSumAndSumMetricsToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addRateOfSumMetricToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
+#addSumMetricToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
+#addSumMetricToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;ZLjava/lang/String;)V
+#addValueMetricToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
+#addAvgAndSumMetricsToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;)V
-#threadLevelSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
-#removeAllThreadLevelSensors()V
-#taskLevelSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
-#removeAllTaskLevelSensors(Ljava/lang/String;)V
-#nodeLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
-#removeAllNodeLevelSensors(Ljava/lang/String;Ljava/lang/String;)V
-#cacheLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
-#removeAllCacheLevelSensors(Ljava/lang/String;Ljava/lang/String;)V
-#storeLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
-#removeAllStoreLevelSensors(Ljava/lang/String;Ljava/lang/String;)V
-#skippedRecordsSensor()Lorg/apache/kafka/common/metrics/Sensor;
-#tagMap([Ljava/lang/String;)Ljava/util/Map;
-#addAvgMaxLatency(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
-#addInvocationRateAndCount(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
@2.5.0
+#nodeLevelTagMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#bufferLevelTagMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
*#recordLatency(Lorg/apache/kafka/common/metrics/Sensor;JJ)V[deprecated]
*#recordThroughput(Lorg/apache/kafka/common/metrics/Sensor;J)V[deprecated]
+#addLatencyRateTotalSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#addRateTotalSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
*#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;[deprecated]
*#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;[deprecated]
+#addAvgAndMaxToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addInvocationRateToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
+#maybeMeasureLatency(Ljava/lang/Runnable;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/metrics/Sensor;)V
+#maybeMeasureLatency(Ljava/util/function/Supplier;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/metrics/Sensor;)Ljava/lang/Object;
-#threadLevelTagMap(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
-#tagMap(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
-#addAvgAndMaxToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
@2.6.0
+#addMinAndMaxToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@2.7.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
+#storeLevelTagMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#storeLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#addStoreLevelMutableMetric(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Lorg/apache/kafka/common/metrics/Gauge;)V
+#removeAllStoreLevelSensorsAndMetrics(Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;)V
-#setRocksDBMetricsRecordingTrigger(Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecordingTrigger;)V
-#storeLevelTagMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
-#storeLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
-#removeAllStoreLevelSensors(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@2.8.0
+#clientLevelSensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllClientLevelSensorsAndMetrics()V
-#removeAllClientLevelMetrics()V
@3.0.0
-#bufferLevelTagMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
-#recordLatency(Lorg/apache/kafka/common/metrics/Sensor;JJ)V[deprecated]
-#recordThroughput(Lorg/apache/kafka/common/metrics/Sensor;J)V[deprecated]
-#addLatencyAndThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;[deprecated]
-#addThroughputSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;[deprecated]
@3.1.0
+#addThreadLevelImmutableMetric(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#addThreadLevelMutableMetric(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Gauge;)V
+#removeAllThreadLevelMetrics(Ljava/lang/String;)V
@3.3.0
+#topicLevelTagMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#topicLevelSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeAllTopicLevelSensors(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addTotalCountAndSumMetricsToSensor(Lorg/apache/kafka/common/metrics/Sensor;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Source
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#topics()Ljava/lang/String;
+#addPredecessor(Lorg/apache/kafka/streams/TopologyDescription$Node;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.1.0
+#<init>(Ljava/lang/String;Ljava/util/Set;Ljava/util/regex/Pattern;)V
*#topics()Ljava/lang/String;[deprecated]
+#topicSet()Ljava/util/Set;
+#topicPattern()Ljava/util/regex/Pattern;
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
@3.0.0
-#topics()Ljava/lang/String;[deprecated]

+###org/apache/kafka/streams/processor/internals/UnwindowedChangelogTopicConfig
@1.1.0
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getProperties(Ljava/util/Map;J)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.2.0
-#<init>(Ljava/lang/String;Ljava/util/Map;)V

+###org/apache/kafka/streams/processor/internals/ToInternal
@2.0.0
+#<init>()V
+#update(Lorg/apache/kafka/streams/processor/To;)V
+#hasTimestamp()Z
+#timestamp()J
+#child()Ljava/lang/String;
@2.7.0
+#<init>(Lorg/apache/kafka/streams/processor/To;)V

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$GlobalStore
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#source()Lorg/apache/kafka/streams/TopologyDescription$Source;
+#processor()Lorg/apache/kafka/streams/TopologyDescription$Processor;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#id()I
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/internals/CompositeRestoreListener
@1.0.0
+#onRestoreStart(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;JJ)V
+#onBatchRestored(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;JJ)V
+#onRestoreEnd(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;J)V
+#restoreAll(Ljava/util/Collection;)V
+#restore([B[B)V
@2.1.0
+#restoreBatch(Ljava/util/Collection;)V
@2.6.0
-###org/apache/kafka/streams/processor/internals/CompositeRestoreListener

+###org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor
@2.0.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#name()Ljava/lang/String;
+#subscription(Ljava/util/Set;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
+#assign(Lorg/apache/kafka/common/Cluster;Ljava/util/Map;)Ljava/util/Map;
+#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)V
@2.4.0
+#supportedProtocols()Ljava/util/List;
+#subscriptionUserData(Ljava/util/Set;)Ljava/nio/ByteBuffer;
+#assign(Lorg/apache/kafka/common/Cluster;Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupSubscription;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupAssignment;
+#onAssignment(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
+#processVersionTwoAssignment(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/assignment/AssignmentInfo;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
-#subscription(Ljava/util/Set;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
-#assign(Lorg/apache/kafka/common/Cluster;Ljava/util/Map;)Ljava/util/Map;
-#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)V
@2.6.0
-#processVersionTwoAssignment(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/assignment/AssignmentInfo;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V

+###org/apache/kafka/streams/processor/internals/ForwardingDisabledProcessorContext
@2.0.0
+#<init>(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#applicationId()Ljava/lang/String;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/To;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;I)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#commit()V
+#topic()Ljava/lang/String;
+#partition()I
+#offset()J
+#headers()Lorg/apache/kafka/common/header/Headers;
+#timestamp()J
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
@2.1.0
*#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
+#schedule(Ljava/time/Duration;Lorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
@2.3.0
*#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
*#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
@3.0.0
+#currentSystemTimeMs()J
+#currentStreamTimeMs()J
-#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
-#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
-#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]

+###org/apache/kafka/streams/processor/internals/WindowedChangelogTopicConfig
@1.1.0
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getProperties(Ljava/util/Map;J)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.2.0
-#<init>(Ljava/lang/String;Ljava/util/Map;)V

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$StateStoreFactory
@1.0.2
+#users()Ljava/util/Set;
+#loggingEnabled()Z
+#build()Lorg/apache/kafka/streams/processor/StateStore;
+#name()Ljava/lang/String;
+#isWindowStore()Z
+#logConfig()Ljava/util/Map;
+#retentionPeriod()J
@1.1.0
-###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$StateStoreFactory

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$AbstractNode
@1.0.0
+#name()Ljava/lang/String;
+#predecessors()Ljava/util/Set;
+#successors()Ljava/util/Set;
+#addPredecessor(Lorg/apache/kafka/streams/TopologyDescription$Node;)V
+#addSuccessor(Lorg/apache/kafka/streams/TopologyDescription$Node;)V

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$TopicsInfo
@1.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.6.0
+#nonSourceChangelogTopics()Ljava/util/Set;
+#sourceTopicChangelogs()Ljava/util/Set;

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$TopologyDescription
@1.0.0
+#<init>()V
+#addSubtopology(Lorg/apache/kafka/streams/TopologyDescription$Subtopology;)V
+#addGlobalStore(Lorg/apache/kafka/streams/TopologyDescription$GlobalStore;)V
+#subtopologies()Ljava/util/Set;
+#globalStores()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.1.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$SubscriptionUpdates
@1.1.0
+#<init>()V
+#getUpdates()Ljava/util/Collection;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$SubscriptionUpdates

+###org/apache/kafka/streams/processor/internals/assignment/AssignorError
@2.4.0
+#values()[Lorg/apache/kafka/streams/processor/internals/assignment/AssignorError;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/assignment/AssignorError;
+#code()I

+###org/apache/kafka/streams/processor/internals/assignment/CopartitionedTopicsEnforcer
@2.4.0
+#<init>(Ljava/lang/String;)V
+#enforce(Ljava/util/Set;Ljava/util/Map;Lorg/apache/kafka/common/Cluster;)V

+###org/apache/kafka/streams/processor/internals/assignment/StreamsAssignmentProtocolVersions
@2.4.0

+###org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration
@2.4.0
+#<init>(Ljava/util/Map;)V
+#getAssignmentErrorCode(Ljava/util/Map;)Ljava/util/concurrent/atomic/AtomicInteger;
+#getTaskManager()Lorg/apache/kafka/streams/processor/internals/TaskManager;
+#rebalanceProtocol()Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$RebalanceProtocol;
+#logPrefix()Ljava/lang/String;
+#configuredMetadataVersion(I)I
+#getNumStandbyReplicas()I
+#getPartitionGrouper()Lorg/apache/kafka/streams/processor/PartitionGrouper;
+#getUserEndPoint()Ljava/lang/String;
+#getInternalTopicManager()Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;
+#getCopartitionedTopicsEnforcer()Lorg/apache/kafka/streams/processor/internals/assignment/CopartitionedTopicsEnforcer;
@2.6.0
+#assignmentErrorCode()Ljava/util/concurrent/atomic/AtomicInteger;
+#nextScheduledRebalanceMs()Ljava/util/concurrent/atomic/AtomicLong;
+#time()Lorg/apache/kafka/common/utils/Time;
+#taskManager()Lorg/apache/kafka/streams/processor/internals/TaskManager;
+#streamsMetadataState()Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;
+#partitionGrouper()Lorg/apache/kafka/streams/processor/PartitionGrouper;
+#userEndPoint()Ljava/lang/String;
+#adminClient()Lorg/apache/kafka/clients/admin/Admin;
+#internalTopicManager()Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;
+#copartitionedTopicsEnforcer()Lorg/apache/kafka/streams/processor/internals/assignment/CopartitionedTopicsEnforcer;
+#assignmentConfigs()Lorg/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs;
+#taskAssignor()Lorg/apache/kafka/streams/processor/internals/assignment/TaskAssignor;
+#assignmentListener()Lorg/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentListener;
-#getAssignmentErrorCode(Ljava/util/Map;)Ljava/util/concurrent/atomic/AtomicInteger;
-#getTaskManager()Lorg/apache/kafka/streams/processor/internals/TaskManager;
-#getNumStandbyReplicas()I
-#getPartitionGrouper()Lorg/apache/kafka/streams/processor/PartitionGrouper;
-#getUserEndPoint()Ljava/lang/String;
-#getInternalTopicManager()Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;
-#getCopartitionedTopicsEnforcer()Lorg/apache/kafka/streams/processor/internals/assignment/CopartitionedTopicsEnforcer;
@2.8.0
+#referenceContainer()Lorg/apache/kafka/streams/processor/internals/assignment/ReferenceContainer;
-#assignmentErrorCode()Ljava/util/concurrent/atomic/AtomicInteger;
-#nextScheduledRebalanceMs()Ljava/util/concurrent/atomic/AtomicLong;
-#time()Lorg/apache/kafka/common/utils/Time;
-#taskManager()Lorg/apache/kafka/streams/processor/internals/TaskManager;
-#streamsMetadataState()Lorg/apache/kafka/streams/processor/internals/StreamsMetadataState;
-#adminClient()Lorg/apache/kafka/clients/admin/Admin;
@3.0.0
-#partitionGrouper()Lorg/apache/kafka/streams/processor/PartitionGrouper;

+###org/apache/kafka/streams/processor/internals/RecoverableClientException
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.6.0
-###org/apache/kafka/streams/processor/internals/RecoverableClientException

+###org/apache/kafka/streams/processor/internals/StreamsRebalanceListener
@2.4.0
+#onPartitionsAssigned(Ljava/util/Collection;)V
+#onPartitionsRevoked(Ljava/util/Collection;)V
+#onPartitionsLost(Ljava/util/Collection;)V

+###org/apache/kafka/streams/processor/internals/RecordBatchingStateRestoreCallback
@2.1.0
+#restoreBatch(Ljava/util/Collection;)V
+#restoreAll(Ljava/util/Collection;)V
+#restore([B[B)V
@2.6.0
-#restore([B[B)V

+###org/apache/kafka/streams/processor/internals/ProcessorNodePunctuator
@1.0.0
+#punctuate(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)V

+###org/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier
@2.0.1
+#get()Lorg/apache/kafka/clients/producer/Producer;
@2.6.0
-###org/apache/kafka/streams/processor/internals/StreamTask$ProducerSupplier

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Subtopology
@1.0.0
+#<init>(ILjava/util/Set;)V
+#id()I
+#nodes()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0
-###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Subtopology

+###org/apache/kafka/streams/processor/internals/TaskManager
@2.0.0
+#prevActiveTaskIds()Ljava/util/Set;
+#cachedTasksIds()Ljava/util/Set;
+#processId()Ljava/util/UUID;
+#setClusterMetadata(Lorg/apache/kafka/common/Cluster;)V
+#setPartitionsByHostState(Ljava/util/Map;)V
+#setAssignmentMetadata(Ljava/util/Map;Ljava/util/Map;)V
+#updateSubscriptionsFromAssignment(Ljava/util/List;)V
+#updateSubscriptionsFromMetadata(Ljava/util/Set;)V
+#toString()Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;
@2.4.0
+#adminClient()Lorg/apache/kafka/clients/admin/Admin;
+#previousRunningTaskIds()Ljava/util/Set;
+#activeTaskIds()Ljava/util/Set;
+#setRebalanceInProgress(Z)V
+#setPartitionsToTaskId(Ljava/util/Map;)V
-#prevActiveTaskIds()Ljava/util/Set;
@2.5.0
+#setHostPartitionMappings(Ljava/util/Map;Ljava/util/Map;)V
-#setPartitionsByHostState(Ljava/util/Map;)V
@2.6.0
+#handleAssignment(Ljava/util/Map;Ljava/util/Map;)V
+#getTaskOffsetSums()Ljava/util/Map;
+#executeAndMaybeSwallow(ZLjava/lang/Runnable;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
+#executeAndMaybeSwallow(ZLjava/lang/Runnable;Ljava/lang/String;Lorg/slf4j/Logger;)V
+#setPartitionResetter(Ljava/util/function/Consumer;)V
-#adminClient()Lorg/apache/kafka/clients/admin/Admin;
-#cachedTasksIds()Ljava/util/Set;
-#previousRunningTaskIds()Ljava/util/Set;
-#activeTaskIds()Ljava/util/Set;
-#setRebalanceInProgress(Z)V
-#setClusterMetadata(Lorg/apache/kafka/common/Cluster;)V
-#setHostPartitionMappings(Ljava/util/Map;Ljava/util/Map;)V
-#setPartitionsToTaskId(Ljava/util/Map;)V
-#setAssignmentMetadata(Ljava/util/Map;Ljava/util/Map;)V
-#updateSubscriptionsFromAssignment(Ljava/util/List;)V
-#updateSubscriptionsFromMetadata(Ljava/util/Set;)V
@2.8.0
-#setPartitionResetter(Ljava/util/function/Consumer;)V
@3.0.0
+#updateTaskEndMetadata(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Long;)V
@3.1.0
+#totalProducerBlockedTime()D
+#topologyMetadata()Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;
@3.4.0
+#checkStateUpdater(JLjava/util/function/Consumer;)Z
+#handleExceptionsFromStateUpdater()V

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Sink
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#topic()Ljava/lang/String;
+#addSuccessor(Lorg/apache/kafka/streams/TopologyDescription$Node;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;)V
@2.1.0
+#topicNameExtractor()Lorg/apache/kafka/streams/processor/TopicNameExtractor;

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Processor
@1.0.0
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#stores()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/internals/StateRestoreCallbackAdapter
@2.1.0
+#adapt(Lorg/apache/kafka/streams/processor/StateRestoreCallback;)Lorg/apache/kafka/streams/processor/internals/RecordBatchingStateRestoreCallback;

+###org/apache/kafka/streams/processor/internals/Task
@1.0.0
+#resume()V
+#commit()V
+#suspend()V
+#close(ZZ)V
+#id()Lorg/apache/kafka/streams/processor/TaskId;
+#applicationId()Ljava/lang/String;
+#partitions()Ljava/util/Set;
+#topology()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#context()Lorg/apache/kafka/streams/processor/ProcessorContext;
+#getStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#closeSuspended(ZZLjava/lang/RuntimeException;)V
+#checkpointedOffsets()Ljava/util/Map;
+#process()Z
+#commitNeeded()Z
+#maybePunctuateStreamTime()Z
+#maybePunctuateSystemTime()Z
+#update(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;)Ljava/util/List;
+#toString(Ljava/lang/String;)Ljava/lang/String;
+#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)I
+#hasStateStores()Z
+#initialize()Z
+#changelogPartitions()Ljava/util/Collection;
@1.0.1
+#initializeStateStores()Z
+#initializeTopology()V
-#initialize()Z
@1.1.0
-#checkpointedOffsets()Ljava/util/Map;
-#process()Z
-#commitNeeded()Z
-#maybePunctuateStreamTime()Z
-#maybePunctuateSystemTime()Z
-#update(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;)Ljava/util/List;
-#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)I
@2.1.0
+#commitNeeded()Z
@2.4.0
+#initializeMetadata()V
-#suspend()V
-#closeSuspended(ZZLjava/lang/RuntimeException;)V
@2.6.0
+#state()Lorg/apache/kafka/streams/processor/internals/Task$State;
+#needsInitializationOrRestoration()Z
+#isActive()Z
+#isClosed()Z
+#initializeIfNeeded()V
+#completeRestoration()V
+#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)V
+#prepareCommit()Ljava/util/Map;
+#postCommit()V
+#suspend()V
+#closeClean()V
+#closeDirty()V
+#update(Ljava/util/Set;Ljava/util/Map;)V
+#closeCleanAndRecycleState()V
+#revive()V
+#inputPartitions()Ljava/util/Set;
+#changelogOffsets()Ljava/util/Map;
+#markChangelogAsCorrupted(Ljava/util/Collection;)V
+#purgeableOffsets()Ljava/util/Map;
+#recordProcessBatchTime(J)V
+#recordProcessTimeRatioAndBufferSize(JJ)V
+#process(J)Z
+#commitRequested()Z
+#maybePunctuateStreamTime()Z
+#maybePunctuateSystemTime()Z
-#initializeMetadata()V
-#initializeStateStores()Z
-#initializeTopology()V
-#commit()V
-#close(ZZ)V
-#applicationId()Ljava/lang/String;
-#topology()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
-#context()Lorg/apache/kafka/streams/processor/ProcessorContext;
-#partitions()Ljava/util/Set;
-#hasStateStores()Z
-#toString(Ljava/lang/String;)Ljava/lang/String;
@2.7.0
+#postCommit(Z)V
+#maybeInitTaskTimeoutOrThrow(JLorg/apache/kafka/common/errors/TimeoutException;)V
+#clearTaskTimeout()V
-#postCommit()V
@2.8.0
+#addPartitionsForOffsetReset(Ljava/util/Set;)V
+#completeRestoration(Ljava/util/function/Consumer;)V
+#updateInputPartitions(Ljava/util/Set;Ljava/util/Map;)V
+#maybeInitTaskTimeoutOrThrow(JLjava/lang/Exception;)V
-#isClosed()Z
-#completeRestoration()V
-#update(Ljava/util/Set;Ljava/util/Map;)V
-#maybeInitTaskTimeoutOrThrow(JLorg/apache/kafka/common/errors/TimeoutException;)V
@3.0.0
+#committedOffsets()Ljava/util/Map;
+#highWaterMark()Ljava/util/Map;
+#timeCurrentIdlingStarted()Ljava/util/Optional;
@3.3.0
+#maybeCheckpoint(Z)V
@3.4.0
+#prepareRecycle()V
+#changelogPartitions()Ljava/util/Set;
+#stateManager()Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
-#closeCleanAndRecycleState()V
-#changelogPartitions()Ljava/util/Collection;

+###org/apache/kafka/streams/processor/internals/RepartitionTopicConfig
@1.1.0
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getProperties(Ljava/util/Map;J)Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.2.0
-#<init>(Ljava/lang/String;Ljava/util/Map;)V

+###org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
@2.0.0
+#<init>(Ljava/lang/String;)V
+#extract(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/RecordContext;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder
@1.0.0
+#<init>()V
+#setApplicationId(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)V
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/util/regex/Pattern;)V
+#addSink(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)V
+#addProcessor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
+#addStateStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;[Ljava/lang/String;)V
+#addStateStore(Lorg/apache/kafka/streams/state/StoreBuilder;[Ljava/lang/String;)V
+#addGlobalStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
+#connectProcessorAndStateStores(Ljava/lang/String;[Ljava/lang/String;)V
+#connectSourceStoreAndTopic(Ljava/lang/String;Ljava/lang/String;)V
+#connectProcessors([Ljava/lang/String;)V
+#addInternalTopic(Ljava/lang/String;)V
+#copartitionSources(Ljava/util/Collection;)V
+#nodeGroups()Ljava/util/Map;
+#build(Ljava/lang/Integer;)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#buildGlobalStateTopology()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#globalStateStores()Ljava/util/Map;
+#topicGroups()Ljava/util/Map;
+#earliestResetTopicsPattern()Ljava/util/regex/Pattern;
+#latestResetTopicsPattern()Ljava/util/regex/Pattern;
+#stateStoreNameToSourceTopics()Ljava/util/Map;
+#copartitionGroups()Ljava/util/Collection;
+#subscriptionUpdates()Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates;
+#sourceTopicPattern()Ljava/util/regex/Pattern;
+#updateSubscriptions(Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates;Ljava/lang/String;)V
+#describe()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$TopologyDescription;
@1.0.1
+#build()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
@1.0.2
+#getStateStores()Ljava/util/Map;
@1.1.0
+#allStateStoreName()Ljava/util/Set;
+#subscriptionUpdates()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$SubscriptionUpdates;
+#updateSubscribedTopics(Ljava/util/Set;Ljava/lang/String;)V
-#subscriptionUpdates()Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates;
-#updateSubscriptions(Lorg/apache/kafka/streams/processor/internals/StreamPartitionAssignor$SubscriptionUpdates;Ljava/lang/String;)V
-#getStateStores()Ljava/util/Map;
@1.1.1
+#getStateStores()Ljava/util/Map;
@2.0.0
+#addSink(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)V
+#addStateStore(Lorg/apache/kafka/streams/state/StoreBuilder;Z[Ljava/lang/String;)V
+#markSourceStoreAndTopic(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;)V
+#adjust(Lorg/apache/kafka/streams/StreamsConfig;)V
+#getSourceTopicNames()Ljava/util/Set;
-#addStateStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;[Ljava/lang/String;)V
-#addGlobalStore(Lorg/apache/kafka/streams/processor/StateStoreSupplier;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
-#connectProcessors([Ljava/lang/String;)V
@2.1.0
+#rewriteTopology(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
-#connectSourceStoreAndTopic(Ljava/lang/String;Ljava/lang/String;)V
-#adjust(Lorg/apache/kafka/streams/StreamsConfig;)V
@2.2.0
-#subscriptionUpdates()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$SubscriptionUpdates;
-#sourceTopicPattern()Ljava/util/regex/Pattern;
-#updateSubscribedTopics(Ljava/util/Set;Ljava/lang/String;)V
@2.3.0
+#connectSourceStoreAndTopic(Ljava/lang/String;Ljava/lang/String;)V
-#markSourceStoreAndTopic(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;)V
@2.4.0
+#sourceTopicNames()Ljava/util/Set;
+#stateStores()Ljava/util/Map;
-#getSourceTopicNames()Ljava/util/Set;
-#getStateStores()Ljava/util/Map;
@2.5.0
+#getChangelogTopicToStore()Ljava/util/Map;
+#sourceTopicsForStore(Ljava/lang/String;)Ljava/util/Collection;
@2.5.1
+#decoratePseudoTopic(Ljava/lang/String;)Ljava/lang/String;
+#hasNoNonGlobalTopology()Z
@2.6.0
+#addInternalTopic(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/InternalTopicProperties;)V
+#validateCopartition()V
+#buildTopology()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#buildSubtopology(I)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#nodeToSourceTopics()Ljava/util/Map;
-#addInternalTopic(Ljava/lang/String;)V
-#build()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
-#build(Ljava/lang/Integer;)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
@2.6.1
+#maybeUpdateCopartitionSourceGroups(Ljava/lang/String;Ljava/lang/String;)V
@2.7.0
+#addProcessor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)V
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;)V
-#addProcessor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
-#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
@3.0.0
+#<init>(Ljava/lang/String;)V
+#setStreamsConfig(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
+#getStreamsConfig()Lorg/apache/kafka/streams/StreamsConfig;
+#fullSourceTopicNames()Ljava/util/List;
+#hasNamedTopologies()Z
@3.1.0
+#setNamedTopology(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;)V
+#topologyName()Ljava/lang/String;
+#namedTopology()Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;
+#getStoreForChangelogTopic(Ljava/lang/String;)Ljava/lang/String;
+#allStateStoreNames()Ljava/util/Set;
+#hasStore(Ljava/lang/String;)Z
+#hasPersistentStores()Z
+#hasOffsetResetOverrides()Z
+#offsetResetStrategy(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;
+#hasNoLocalTopology()Z
+#hasGlobalStores()Z
+#allSourcePatternStrings()Ljava/util/List;
+#hasNamedTopology()Z
-#<init>(Ljava/lang/String;)V
-#getChangelogTopicToStore()Ljava/util/Map;
-#allStateStoreName()Ljava/util/Set;
-#earliestResetTopicsPattern()Ljava/util/regex/Pattern;
-#latestResetTopicsPattern()Ljava/util/regex/Pattern;
-#hasNoNonGlobalTopology()Z
-#hasNamedTopologies()Z
@3.2.0
+#<init>(Lorg/apache/kafka/streams/TopologyConfig;)V
+#setStreamsConfig(Lorg/apache/kafka/streams/StreamsConfig;)V
+#topologyConfigs()Lorg/apache/kafka/streams/TopologyConfig;
+#subtopologyToTopicsInfo()Ljava/util/Map;
+#stateStoreNameToFullSourceTopicNames()Ljava/util/Map;
+#containsTopic(Ljava/lang/String;)Z
-#setStreamsConfig(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
-#getStreamsConfig()Lorg/apache/kafka/streams/StreamsConfig;
-#topicGroups()Ljava/util/Map;
-#stateStoreNameToSourceTopics()Ljava/util/Map;
-#sourceTopicNames()Ljava/util/Set;
@3.3.0
+#addProcessor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;[Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/internals/RestoringTasks
@1.0.0
+#restoringTaskFor(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/streams/processor/internals/Task;
@1.1.0
+#restoringTaskFor(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/streams/processor/internals/StreamTask;
-#restoringTaskFor(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/streams/processor/internals/Task;

+###org/apache/kafka/streams/processor/ThreadMetadata
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V
+#threadState()Ljava/lang/String;
+#threadName()Ljava/lang/String;
+#activeTasks()Ljava/util/Set;
+#standbyTasks()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V
+#consumerClientId()Ljava/lang/String;
+#restoreConsumerClientId()Ljava/lang/String;
+#producerClientIds()Ljava/util/Set;
+#adminClientId()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V

+###org/apache/kafka/streams/processor/StateRestoreListener
@1.0.0
+#onRestoreStart(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;JJ)V
+#onBatchRestored(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;JJ)V
+#onRestoreEnd(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;J)V

+###org/apache/kafka/streams/processor/AbstractNotifyingBatchingRestoreCallback
@1.0.0
+#<init>()V
+#restore([B[B)V
+#onRestoreStart(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;JJ)V
+#onBatchRestored(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;JJ)V
+#onRestoreEnd(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;J)V
@2.6.0
-###org/apache/kafka/streams/processor/AbstractNotifyingBatchingRestoreCallback

+###org/apache/kafka/streams/processor/PunctuationType
@1.0.0
+#values()[Lorg/apache/kafka/streams/processor/PunctuationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/PunctuationType;

+###org/apache/kafka/streams/processor/TopicNameExtractor
@2.0.0
+#extract(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/RecordContext;)Ljava/lang/String;

+###org/apache/kafka/streams/state/QueryableStoreTypes$SessionStoreType
@2.3.0
+#create(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Ljava/lang/String;)Lorg/apache/kafka/streams/state/ReadOnlySessionStore;
+#accepts(Lorg/apache/kafka/streams/processor/StateStore;)Z
+#create(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/kafka/streams/state/KeyValueBytesStoreSupplier
@1.0.0

+###org/apache/kafka/streams/state/WindowBytesStoreSupplier
@1.0.0
+#segments()I
+#windowSize()J
+#retainDuplicates()Z
+#retentionPeriod()J
@2.1.0
*#segments()I[deprecated]
+#segmentIntervalMs()J
@3.0.0
-#segments()I[deprecated]

+###org/apache/kafka/streams/state/QueryableStoreTypes$KeyValueStoreType
@2.3.0
+#create(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Ljava/lang/String;)Lorg/apache/kafka/streams/state/ReadOnlyKeyValueStore;
+#accepts(Lorg/apache/kafka/streams/processor/StateStore;)Z
+#create(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/kafka/streams/state/TimestampedKeyValueStore
@2.3.0

+###org/apache/kafka/streams/state/StoreSupplier
@1.0.0
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
+#metricsScope()Ljava/lang/String;

+###org/apache/kafka/streams/state/internals/CachingKeyValueStore
@2.3.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#setFlushListener(Lorg/apache/kafka/streams/state/internals/CacheFlushListener;Z)Z
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#putIfAbsent(Lorg/apache/kafka/common/utils/Bytes;[B)[B
+#putAll(Ljava/util/List;)V
+#delete(Lorg/apache/kafka/common/utils/Bytes;)[B
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#approximateNumEntries()J
+#flush()V
+#close()V
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#reverseRange(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#flushCache()V
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.0
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#getPosition()Lorg/apache/kafka/streams/query/Position;
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;

+###org/apache/kafka/streams/state/internals/Murmur3$IncrementalHash32
@2.4.0
+#<init>()V
+#start(I)V
+#add([BII)V
+#end()I

+###org/apache/kafka/streams/state/internals/RocksDBWindowStore
@0.10.0.0
+#<init>(Ljava/lang/String;JIZLorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#enableLogging()Lorg/apache/kafka/streams/state/internals/RocksDBWindowStore;
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#persistent()Z
+#flush()V
+#close()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;J)V
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#segmentName(J)Ljava/lang/String;
+#segmentIdFromSegmentName(Ljava/lang/String;)J
+#segmentIds()Ljava/util/Set;
@0.10.1.0
+#isOpen()Z
@0.10.2.0
-###org/apache/kafka/streams/state/internals/RocksDBWindowStore

+###org/apache/kafka/streams/state/internals/KeyValueIteratorFacade
@2.3.0
+#<init>(Lorg/apache/kafka/streams/state/KeyValueIterator;)V
+#hasNext()Z
+#peekNextKey()Ljava/lang/Object;
+#next()Lorg/apache/kafka/streams/KeyValue;
+#close()V
+#next()Ljava/lang/Object;

+###org/apache/kafka/streams/state/internals/ReadOnlyWindowStoreFacade
@2.3.0
+#fetch(Ljava/lang/Object;J)Ljava/lang/Object;
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#fetch(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
+#backwardFetch(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.0.0
-#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
-#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/metrics/NamedCacheMetrics
@2.4.0
+#hitRatioSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;

+###org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#storeName()Ljava/lang/String;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#addStatistics(Ljava/lang/String;Lorg/rocksdb/Statistics;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/TaskId;)V
+#removeStatistics(Ljava/lang/String;)V
+#record()V
@2.4.1
+#init(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/TaskId;)V
+#addStatistics(Ljava/lang/String;Lorg/rocksdb/Statistics;)V
-#addStatistics(Ljava/lang/String;Lorg/rocksdb/Statistics;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/TaskId;)V
@2.6.0
+#record(J)V
-#record()V
@2.7.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#addValueProviders(Ljava/lang/String;Lorg/rocksdb/RocksDB;Lorg/rocksdb/Cache;Lorg/rocksdb/Statistics;)V
+#removeValueProviders(Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#addStatistics(Ljava/lang/String;Lorg/rocksdb/Statistics;)V
-#removeStatistics(Ljava/lang/String;)V

+###org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#threadId()Ljava/lang/String;
+#taskName()Ljava/lang/String;
+#metricsScope()Ljava/lang/String;
+#storeName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.7.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#threadId()Ljava/lang/String;

+###org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics
@2.4.0
+#bytesWrittenToDatabaseSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#bytesReadFromDatabaseSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#memtableBytesFlushedSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#memtableHitRatioSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#memtableAvgFlushTimeSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#memtableMinFlushTimeSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#memtableMaxFlushTimeSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#writeStallDurationSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#blockCacheDataHitRatioSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#blockCacheIndexHitRatioSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#blockCacheFilterHitRatioSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#bytesReadDuringCompactionSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#bytesWrittenDuringCompactionSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#compactionTimeAvgSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#compactionTimeMinSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#compactionTimeMaxSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#numberOfOpenFilesSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#numberOfFileErrorsSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;)Lorg/apache/kafka/common/metrics/Sensor;
@2.7.0
+#addNumEntriesActiveMemTableMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addNumEntriesImmMemTablesMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addNumDeletesImmMemTablesMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addNumDeletesActiveMemTableMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addNumImmutableMemTableMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addCurSizeActiveMemTable(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addCurSizeAllMemTables(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addSizeAllMemTables(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addMemTableFlushPending(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addNumRunningFlushesMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addCompactionPendingMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addNumRunningCompactionsMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addEstimatePendingCompactionBytesMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addTotalSstFilesSizeMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addLiveSstFilesSizeMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addNumLiveVersionMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addBlockCacheCapacityMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addBlockCacheUsageMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addBlockCachePinnedUsageMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addEstimateNumKeysMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addEstimateTableReadersMemMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V
+#addBackgroundErrorsMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetrics$RocksDBMetricContext;Lorg/apache/kafka/common/metrics/Gauge;)V

+###org/apache/kafka/streams/state/internals/metrics/Sensors
@2.1.0
+#createTaskAndStoreLatencyAndThroughputSensors(Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Lorg/apache/kafka/common/metrics/Sensor;
@2.2.0
+#createBufferSizeSensor(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/common/metrics/Sensor;
+#createBufferCountSensor(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/common/metrics/Sensor;
@2.4.0
+#createTaskAndStoreLatencyAndThroughputSensors(Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Lorg/apache/kafka/common/metrics/Sensor;
-#createTaskAndStoreLatencyAndThroughputSensors(Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Lorg/apache/kafka/common/metrics/Sensor;
@2.5.0
-###org/apache/kafka/streams/state/internals/metrics/Sensors

+###org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecordingTrigger
@2.4.0
+#<init>()V
+#addMetricsRecorder(Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder;)V
+#removeMetricsRecorder(Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder;)V
+#run()V
@2.6.0
+#<init>(Lorg/apache/kafka/common/utils/Time;)V
-#<init>()V

+###org/apache/kafka/streams/state/internals/RocksDbSessionBytesStoreSupplier
@1.0.0
+#<init>(Ljava/lang/String;J)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/SessionStore;
+#metricsScope()Ljava/lang/String;
+#segmentIntervalMs()J
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@2.1.0
+#retentionPeriod()J

+###org/apache/kafka/streams/state/internals/KeyValueStoreBuilder
@1.0.0
+#<init>(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#build()Lorg/apache/kafka/streams/state/KeyValueStore;
+#name()Ljava/lang/String;
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
+#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#build()Lorg/apache/kafka/streams/processor/StateStore;
@2.0.0
-#name()Ljava/lang/String;
-#loggingEnabled()Z
-#logConfig()Ljava/util/Map;
-#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
-#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
-#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;

+###org/apache/kafka/streams/state/internals/ContextualRecord
@2.1.0
+#<init>([BLorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
+#recordContext()Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
+#value()[B
+#sizeBytes()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.2.0
-#sizeBytes()J
@2.2.1
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/state/internals/ValueAndTimestampSerde
@2.3.0
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
+#configure(Ljava/util/Map;Z)V
+#close()V
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
@2.6.1
-#configure(Ljava/util/Map;Z)V
-#close()V
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;

+###org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStore
@2.3.0
+#fetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/common/utils/Bytes;)V
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#flush()V
+#close()V
+#persistent()Z
+#isOpen()Z
@2.7.0
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
@3.0.0
+#remove(Lorg/apache/kafka/common/utils/Bytes;J)V
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/state/internals/AbstractStoreBuilder
@2.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#logConfig()Ljava/util/Map;
+#loggingEnabled()Z
+#name()Ljava/lang/String;
@2.1.0
+#withCachingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;

+###org/apache/kafka/streams/state/internals/MeteredWindowStore
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/state/WindowStore;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#persistent()Z
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;J)V
+#close()V
+#flush()V
@0.10.1.0
+#isOpen()Z
@0.10.2.0
-###org/apache/kafka/streams/state/internals/MeteredWindowStore

+###org/apache/kafka/streams/state/internals/CacheFlushListener
@2.2.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;J)V
@3.0.0
+#apply(Lorg/apache/kafka/streams/processor/api/Record;)V
@3.2.0
-#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;J)V

+###org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBuffer
@2.1.0
+#evictWhile(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)V
+#put(JLorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/ContextualRecord;)V
+#numRecords()I
+#bufferSize()J
+#minTimestamp()J
@2.2.1
+#setSerdesIfNull(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#put(JLjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
-#put(JLorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/ContextualRecord;)V
@2.3.0
+#priorValueForBuffered(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/internals/Maybe;
+#put(JLjava/lang/Object;Lorg/apache/kafka/streams/kstream/internals/Change;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
-#put(JLjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
@3.0.0
+#setSerdesIfNull(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#setSerdesIfNull(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@3.1.0
+#put(JLorg/apache/kafka/streams/processor/api/Record;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
-#put(JLjava/lang/Object;Lorg/apache/kafka/streams/kstream/internals/Change;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V

+###org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore
@2.3.0
@2.6.0
+#getWithBinary(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore$RawAndDeserializedValue;
+#putIfDifferentValues(Ljava/lang/Object;Lorg/apache/kafka/streams/state/ValueAndTimestamp;[B)Z

+###org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter
@2.4.0
+#setIncreaseParallelism(I)Lorg/rocksdb/Options;
+#setCreateIfMissing(Z)Lorg/rocksdb/Options;
+#setCreateMissingColumnFamilies(Z)Lorg/rocksdb/Options;
+#setEnv(Lorg/rocksdb/Env;)Lorg/rocksdb/Options;
+#getEnv()Lorg/rocksdb/Env;
+#prepareForBulkLoad()Lorg/rocksdb/Options;
+#createIfMissing()Z
+#createMissingColumnFamilies()Z
+#optimizeForSmallDb()Lorg/rocksdb/Options;
+#optimizeForPointLookup(J)Lorg/rocksdb/Options;
+#optimizeLevelStyleCompaction()Lorg/rocksdb/Options;
+#optimizeLevelStyleCompaction(J)Lorg/rocksdb/Options;
+#optimizeUniversalStyleCompaction()Lorg/rocksdb/Options;
+#optimizeUniversalStyleCompaction(J)Lorg/rocksdb/Options;
+#setComparator(Lorg/rocksdb/BuiltinComparator;)Lorg/rocksdb/Options;
+#setComparator(Lorg/rocksdb/AbstractComparator;)Lorg/rocksdb/Options;
+#setMergeOperatorName(Ljava/lang/String;)Lorg/rocksdb/Options;
+#setMergeOperator(Lorg/rocksdb/MergeOperator;)Lorg/rocksdb/Options;
+#setWriteBufferSize(J)Lorg/rocksdb/Options;
+#writeBufferSize()J
+#setMaxWriteBufferNumber(I)Lorg/rocksdb/Options;
+#maxWriteBufferNumber()I
+#errorIfExists()Z
+#setErrorIfExists(Z)Lorg/rocksdb/Options;
+#paranoidChecks()Z
+#setParanoidChecks(Z)Lorg/rocksdb/Options;
+#maxOpenFiles()I
+#setMaxFileOpeningThreads(I)Lorg/rocksdb/Options;
+#maxFileOpeningThreads()I
+#setMaxTotalWalSize(J)Lorg/rocksdb/Options;
+#maxTotalWalSize()J
+#setMaxOpenFiles(I)Lorg/rocksdb/Options;
+#useFsync()Z
+#setUseFsync(Z)Lorg/rocksdb/Options;
+#setDbPaths(Ljava/util/Collection;)Lorg/rocksdb/Options;
+#dbPaths()Ljava/util/List;
+#dbLogDir()Ljava/lang/String;
+#setDbLogDir(Ljava/lang/String;)Lorg/rocksdb/Options;
+#walDir()Ljava/lang/String;
+#setWalDir(Ljava/lang/String;)Lorg/rocksdb/Options;
+#deleteObsoleteFilesPeriodMicros()J
+#setDeleteObsoleteFilesPeriodMicros(J)Lorg/rocksdb/Options;
+#maxBackgroundCompactions()I
+#setStatistics(Lorg/rocksdb/Statistics;)Lorg/rocksdb/Options;
+#statistics()Lorg/rocksdb/Statistics;
+#setBaseBackgroundCompactions(I)V
+#baseBackgroundCompactions()I
+#setMaxBackgroundCompactions(I)Lorg/rocksdb/Options;
+#setMaxSubcompactions(I)V
+#maxSubcompactions()I
+#maxBackgroundFlushes()I
+#setMaxBackgroundFlushes(I)Lorg/rocksdb/Options;
+#maxBackgroundJobs()I
+#setMaxBackgroundJobs(I)Lorg/rocksdb/Options;
+#maxLogFileSize()J
+#setMaxLogFileSize(J)Lorg/rocksdb/Options;
+#logFileTimeToRoll()J
+#setLogFileTimeToRoll(J)Lorg/rocksdb/Options;
+#keepLogFileNum()J
+#setKeepLogFileNum(J)Lorg/rocksdb/Options;
+#setRecycleLogFileNum(J)Lorg/rocksdb/Options;
+#recycleLogFileNum()J
+#maxManifestFileSize()J
+#setMaxManifestFileSize(J)Lorg/rocksdb/Options;
+#setMaxTableFilesSizeFIFO(J)Lorg/rocksdb/Options;
+#maxTableFilesSizeFIFO()J
+#tableCacheNumshardbits()I
+#setTableCacheNumshardbits(I)Lorg/rocksdb/Options;
+#walTtlSeconds()J
+#setWalTtlSeconds(J)Lorg/rocksdb/Options;
+#walSizeLimitMB()J
+#setWalSizeLimitMB(J)Lorg/rocksdb/Options;
+#manifestPreallocationSize()J
+#setManifestPreallocationSize(J)Lorg/rocksdb/Options;
+#setUseDirectReads(Z)Lorg/rocksdb/Options;
+#useDirectReads()Z
+#setUseDirectIoForFlushAndCompaction(Z)Lorg/rocksdb/Options;
+#useDirectIoForFlushAndCompaction()Z
+#setAllowFAllocate(Z)Lorg/rocksdb/Options;
+#allowFAllocate()Z
+#allowMmapReads()Z
+#setAllowMmapReads(Z)Lorg/rocksdb/Options;
+#allowMmapWrites()Z
+#setAllowMmapWrites(Z)Lorg/rocksdb/Options;
+#isFdCloseOnExec()Z
+#setIsFdCloseOnExec(Z)Lorg/rocksdb/Options;
+#statsDumpPeriodSec()I
+#setStatsDumpPeriodSec(I)Lorg/rocksdb/Options;
+#adviseRandomOnOpen()Z
+#setAdviseRandomOnOpen(Z)Lorg/rocksdb/Options;
+#setDbWriteBufferSize(J)Lorg/rocksdb/Options;
+#dbWriteBufferSize()J
+#setAccessHintOnCompactionStart(Lorg/rocksdb/AccessHint;)Lorg/rocksdb/Options;
+#accessHintOnCompactionStart()Lorg/rocksdb/AccessHint;
+#setNewTableReaderForCompactionInputs(Z)Lorg/rocksdb/Options;
+#newTableReaderForCompactionInputs()Z
+#setCompactionReadaheadSize(J)Lorg/rocksdb/Options;
+#compactionReadaheadSize()J
+#setRandomAccessMaxBufferSize(J)Lorg/rocksdb/Options;
+#randomAccessMaxBufferSize()J
+#setWritableFileMaxBufferSize(J)Lorg/rocksdb/Options;
+#writableFileMaxBufferSize()J
+#useAdaptiveMutex()Z
+#setUseAdaptiveMutex(Z)Lorg/rocksdb/Options;
+#bytesPerSync()J
+#setBytesPerSync(J)Lorg/rocksdb/Options;
+#setWalBytesPerSync(J)Lorg/rocksdb/Options;
+#walBytesPerSync()J
+#setEnableThreadTracking(Z)Lorg/rocksdb/Options;
+#enableThreadTracking()Z
+#setDelayedWriteRate(J)Lorg/rocksdb/Options;
+#delayedWriteRate()J
+#setAllowConcurrentMemtableWrite(Z)Lorg/rocksdb/Options;
+#allowConcurrentMemtableWrite()Z
+#setEnableWriteThreadAdaptiveYield(Z)Lorg/rocksdb/Options;
+#enableWriteThreadAdaptiveYield()Z
+#setWriteThreadMaxYieldUsec(J)Lorg/rocksdb/Options;
+#writeThreadMaxYieldUsec()J
+#setWriteThreadSlowYieldUsec(J)Lorg/rocksdb/Options;
+#writeThreadSlowYieldUsec()J
+#setSkipStatsUpdateOnDbOpen(Z)Lorg/rocksdb/Options;
+#skipStatsUpdateOnDbOpen()Z
+#setWalRecoveryMode(Lorg/rocksdb/WALRecoveryMode;)Lorg/rocksdb/Options;
+#walRecoveryMode()Lorg/rocksdb/WALRecoveryMode;
+#setAllow2pc(Z)Lorg/rocksdb/Options;
+#allow2pc()Z
+#setRowCache(Lorg/rocksdb/Cache;)Lorg/rocksdb/Options;
+#rowCache()Lorg/rocksdb/Cache;
+#setFailIfOptionsFileError(Z)Lorg/rocksdb/Options;
+#failIfOptionsFileError()Z
+#setDumpMallocStats(Z)Lorg/rocksdb/Options;
+#dumpMallocStats()Z
+#setAvoidFlushDuringRecovery(Z)Lorg/rocksdb/Options;
+#avoidFlushDuringRecovery()Z
+#setAvoidFlushDuringShutdown(Z)Lorg/rocksdb/Options;
+#avoidFlushDuringShutdown()Z
+#memTableConfig()Lorg/rocksdb/MemTableConfig;
+#setMemTableConfig(Lorg/rocksdb/MemTableConfig;)Lorg/rocksdb/Options;
+#setRateLimiter(Lorg/rocksdb/RateLimiter;)Lorg/rocksdb/Options;
+#setSstFileManager(Lorg/rocksdb/SstFileManager;)Lorg/rocksdb/Options;
+#setLogger(Lorg/rocksdb/Logger;)Lorg/rocksdb/Options;
+#setInfoLogLevel(Lorg/rocksdb/InfoLogLevel;)Lorg/rocksdb/Options;
+#infoLogLevel()Lorg/rocksdb/InfoLogLevel;
+#memTableFactoryName()Ljava/lang/String;
+#tableFormatConfig()Lorg/rocksdb/TableFormatConfig;
+#setTableFormatConfig(Lorg/rocksdb/TableFormatConfig;)Lorg/rocksdb/Options;
+#tableFactoryName()Ljava/lang/String;
+#useFixedLengthPrefixExtractor(I)Lorg/rocksdb/Options;
+#useCappedPrefixExtractor(I)Lorg/rocksdb/Options;
+#compressionType()Lorg/rocksdb/CompressionType;
+#setCompressionPerLevel(Ljava/util/List;)Lorg/rocksdb/Options;
+#compressionPerLevel()Ljava/util/List;
+#setCompressionType(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/Options;
+#setBottommostCompressionType(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/Options;
+#bottommostCompressionType()Lorg/rocksdb/CompressionType;
+#setCompressionOptions(Lorg/rocksdb/CompressionOptions;)Lorg/rocksdb/Options;
+#compressionOptions()Lorg/rocksdb/CompressionOptions;
+#compactionStyle()Lorg/rocksdb/CompactionStyle;
+#setCompactionStyle(Lorg/rocksdb/CompactionStyle;)Lorg/rocksdb/Options;
+#numLevels()I
+#setNumLevels(I)Lorg/rocksdb/Options;
+#levelZeroFileNumCompactionTrigger()I
+#setLevelZeroFileNumCompactionTrigger(I)Lorg/rocksdb/Options;
+#levelZeroSlowdownWritesTrigger()I
+#setLevelZeroSlowdownWritesTrigger(I)Lorg/rocksdb/Options;
+#levelZeroStopWritesTrigger()I
+#setLevelZeroStopWritesTrigger(I)Lorg/rocksdb/Options;
+#targetFileSizeBase()J
+#setTargetFileSizeBase(J)Lorg/rocksdb/Options;
+#targetFileSizeMultiplier()I
+#setTargetFileSizeMultiplier(I)Lorg/rocksdb/Options;
+#setMaxBytesForLevelBase(J)Lorg/rocksdb/Options;
+#maxBytesForLevelBase()J
+#setLevelCompactionDynamicLevelBytes(Z)Lorg/rocksdb/Options;
+#levelCompactionDynamicLevelBytes()Z
+#maxBytesForLevelMultiplier()D
+#setMaxBytesForLevelMultiplier(D)Lorg/rocksdb/Options;
+#maxCompactionBytes()J
+#setMaxCompactionBytes(J)Lorg/rocksdb/Options;
+#arenaBlockSize()J
+#setArenaBlockSize(J)Lorg/rocksdb/Options;
+#disableAutoCompactions()Z
+#setDisableAutoCompactions(Z)Lorg/rocksdb/Options;
+#maxSequentialSkipInIterations()J
+#setMaxSequentialSkipInIterations(J)Lorg/rocksdb/Options;
+#inplaceUpdateSupport()Z
+#setInplaceUpdateSupport(Z)Lorg/rocksdb/Options;
+#inplaceUpdateNumLocks()J
+#setInplaceUpdateNumLocks(J)Lorg/rocksdb/Options;
+#memtablePrefixBloomSizeRatio()D
+#setMemtablePrefixBloomSizeRatio(D)Lorg/rocksdb/Options;
+#bloomLocality()I
+#setBloomLocality(I)Lorg/rocksdb/Options;
+#maxSuccessiveMerges()J
+#setMaxSuccessiveMerges(J)Lorg/rocksdb/Options;
+#minWriteBufferNumberToMerge()I
+#setMinWriteBufferNumberToMerge(I)Lorg/rocksdb/Options;
+#setOptimizeFiltersForHits(Z)Lorg/rocksdb/Options;
+#optimizeFiltersForHits()Z
+#setMemtableHugePageSize(J)Lorg/rocksdb/Options;
+#memtableHugePageSize()J
+#setSoftPendingCompactionBytesLimit(J)Lorg/rocksdb/Options;
+#softPendingCompactionBytesLimit()J
+#setHardPendingCompactionBytesLimit(J)Lorg/rocksdb/Options;
+#hardPendingCompactionBytesLimit()J
+#setLevel0FileNumCompactionTrigger(I)Lorg/rocksdb/Options;
+#level0FileNumCompactionTrigger()I
+#setLevel0SlowdownWritesTrigger(I)Lorg/rocksdb/Options;
+#level0SlowdownWritesTrigger()I
+#setLevel0StopWritesTrigger(I)Lorg/rocksdb/Options;
+#level0StopWritesTrigger()I
+#setMaxBytesForLevelMultiplierAdditional([I)Lorg/rocksdb/Options;
+#maxBytesForLevelMultiplierAdditional()[I
+#setParanoidFileChecks(Z)Lorg/rocksdb/Options;
+#paranoidFileChecks()Z
+#setMaxWriteBufferNumberToMaintain(I)Lorg/rocksdb/Options;
+#maxWriteBufferNumberToMaintain()I
+#setCompactionPriority(Lorg/rocksdb/CompactionPriority;)Lorg/rocksdb/Options;
+#compactionPriority()Lorg/rocksdb/CompactionPriority;
+#setReportBgIoStats(Z)Lorg/rocksdb/Options;
+#reportBgIoStats()Z
+#setCompactionOptionsUniversal(Lorg/rocksdb/CompactionOptionsUniversal;)Lorg/rocksdb/Options;
+#compactionOptionsUniversal()Lorg/rocksdb/CompactionOptionsUniversal;
+#setCompactionOptionsFIFO(Lorg/rocksdb/CompactionOptionsFIFO;)Lorg/rocksdb/Options;
+#compactionOptionsFIFO()Lorg/rocksdb/CompactionOptionsFIFO;
+#logWarning(Lorg/slf4j/Logger;)V
+#setForceConsistencyChecks(Z)Lorg/rocksdb/Options;
+#forceConsistencyChecks()Z
+#setWriteBufferManager(Lorg/rocksdb/WriteBufferManager;)Lorg/rocksdb/Options;
+#writeBufferManager()Lorg/rocksdb/WriteBufferManager;
+#setCompactionFilter(Lorg/rocksdb/AbstractCompactionFilter;)Lorg/rocksdb/Options;
+#setCompactionFilterFactory(Lorg/rocksdb/AbstractCompactionFilterFactory;)Lorg/rocksdb/Options;
+#close()V
+#setAvoidFlushDuringShutdown(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAvoidFlushDuringRecovery(Z)Lorg/rocksdb/DBOptionsInterface;
+#setDumpMallocStats(Z)Lorg/rocksdb/DBOptionsInterface;
+#setFailIfOptionsFileError(Z)Lorg/rocksdb/DBOptionsInterface;
+#setRowCache(Lorg/rocksdb/Cache;)Lorg/rocksdb/DBOptionsInterface;
+#setAllow2pc(Z)Lorg/rocksdb/DBOptionsInterface;
+#setWalRecoveryMode(Lorg/rocksdb/WALRecoveryMode;)Lorg/rocksdb/DBOptionsInterface;
+#setSkipStatsUpdateOnDbOpen(Z)Lorg/rocksdb/DBOptionsInterface;
+#setWriteThreadSlowYieldUsec(J)Lorg/rocksdb/DBOptionsInterface;
+#setWriteThreadMaxYieldUsec(J)Lorg/rocksdb/DBOptionsInterface;
+#setEnableWriteThreadAdaptiveYield(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAllowConcurrentMemtableWrite(Z)Lorg/rocksdb/DBOptionsInterface;
+#setDelayedWriteRate(J)Lorg/rocksdb/DBOptionsInterface;
+#setEnableThreadTracking(Z)Lorg/rocksdb/DBOptionsInterface;
+#setWalBytesPerSync(J)Lorg/rocksdb/DBOptionsInterface;
+#setBytesPerSync(J)Lorg/rocksdb/DBOptionsInterface;
+#setUseAdaptiveMutex(Z)Lorg/rocksdb/DBOptionsInterface;
+#setWritableFileMaxBufferSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setRandomAccessMaxBufferSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setCompactionReadaheadSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setNewTableReaderForCompactionInputs(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAccessHintOnCompactionStart(Lorg/rocksdb/AccessHint;)Lorg/rocksdb/DBOptionsInterface;
+#setWriteBufferManager(Lorg/rocksdb/WriteBufferManager;)Lorg/rocksdb/DBOptionsInterface;
+#setDbWriteBufferSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setAdviseRandomOnOpen(Z)Lorg/rocksdb/DBOptionsInterface;
+#setStatsDumpPeriodSec(I)Lorg/rocksdb/DBOptionsInterface;
+#setIsFdCloseOnExec(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAllowMmapWrites(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAllowMmapReads(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAllowFAllocate(Z)Lorg/rocksdb/DBOptionsInterface;
+#setUseDirectIoForFlushAndCompaction(Z)Lorg/rocksdb/DBOptionsInterface;
+#setUseDirectReads(Z)Lorg/rocksdb/DBOptionsInterface;
+#setManifestPreallocationSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setWalSizeLimitMB(J)Lorg/rocksdb/DBOptionsInterface;
+#setWalTtlSeconds(J)Lorg/rocksdb/DBOptionsInterface;
+#setTableCacheNumshardbits(I)Lorg/rocksdb/DBOptionsInterface;
+#setMaxManifestFileSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setRecycleLogFileNum(J)Lorg/rocksdb/DBOptionsInterface;
+#setKeepLogFileNum(J)Lorg/rocksdb/DBOptionsInterface;
+#setLogFileTimeToRoll(J)Lorg/rocksdb/DBOptionsInterface;
+#setMaxLogFileSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setMaxBackgroundJobs(I)Lorg/rocksdb/DBOptionsInterface;
+#setMaxBackgroundFlushes(I)Lorg/rocksdb/DBOptionsInterface;
+#setMaxBackgroundCompactions(I)Lorg/rocksdb/DBOptionsInterface;
+#setDeleteObsoleteFilesPeriodMicros(J)Lorg/rocksdb/DBOptionsInterface;
+#setWalDir(Ljava/lang/String;)Lorg/rocksdb/DBOptionsInterface;
+#setDbLogDir(Ljava/lang/String;)Lorg/rocksdb/DBOptionsInterface;
+#setDbPaths(Ljava/util/Collection;)Lorg/rocksdb/DBOptionsInterface;
+#setUseFsync(Z)Lorg/rocksdb/DBOptionsInterface;
+#setStatistics(Lorg/rocksdb/Statistics;)Lorg/rocksdb/DBOptionsInterface;
+#setMaxTotalWalSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setMaxFileOpeningThreads(I)Lorg/rocksdb/DBOptionsInterface;
+#setMaxOpenFiles(I)Lorg/rocksdb/DBOptionsInterface;
+#setInfoLogLevel(Lorg/rocksdb/InfoLogLevel;)Lorg/rocksdb/DBOptionsInterface;
+#setLogger(Lorg/rocksdb/Logger;)Lorg/rocksdb/DBOptionsInterface;
+#setSstFileManager(Lorg/rocksdb/SstFileManager;)Lorg/rocksdb/DBOptionsInterface;
+#setRateLimiter(Lorg/rocksdb/RateLimiter;)Lorg/rocksdb/DBOptionsInterface;
+#setParanoidChecks(Z)Lorg/rocksdb/DBOptionsInterface;
+#setErrorIfExists(Z)Lorg/rocksdb/DBOptionsInterface;
+#setCreateMissingColumnFamilies(Z)Lorg/rocksdb/DBOptionsInterface;
+#setCreateIfMissing(Z)Lorg/rocksdb/DBOptionsInterface;
+#setIncreaseParallelism(I)Lorg/rocksdb/DBOptionsInterface;
+#setEnv(Lorg/rocksdb/Env;)Lorg/rocksdb/DBOptionsInterface;
+#optimizeForSmallDb()Lorg/rocksdb/DBOptionsInterface;
+#setCompressionOptions(Lorg/rocksdb/CompressionOptions;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setBottommostCompressionType(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setTableFormatConfig(Lorg/rocksdb/TableFormatConfig;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setMemTableConfig(Lorg/rocksdb/MemTableConfig;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setMaxTableFilesSizeFIFO(J)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setMaxBytesForLevelMultiplier(D)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setLevelZeroStopWritesTrigger(I)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setLevelZeroSlowdownWritesTrigger(I)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setLevelZeroFileNumCompactionTrigger(I)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#useCappedPrefixExtractor(I)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#useFixedLengthPrefixExtractor(I)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setMergeOperator(Lorg/rocksdb/MergeOperator;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setMergeOperatorName(Ljava/lang/String;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setComparator(Lorg/rocksdb/AbstractComparator;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setComparator(Lorg/rocksdb/BuiltinComparator;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#optimizeUniversalStyleCompaction(J)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#optimizeUniversalStyleCompaction()Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#optimizeLevelStyleCompaction(J)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#optimizeLevelStyleCompaction()Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#optimizeForPointLookup(J)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#optimizeForSmallDb()Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setForceConsistencyChecks(Z)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setOptimizeFiltersForHits(Z)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setCompactionOptionsFIFO(Lorg/rocksdb/CompactionOptionsFIFO;)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setCompactionOptionsUniversal(Lorg/rocksdb/CompactionOptionsUniversal;)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setCompactionPriority(Lorg/rocksdb/CompactionPriority;)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setCompactionStyle(Lorg/rocksdb/CompactionStyle;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setMaxCompactionBytes(J)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setLevelCompactionDynamicLevelBytes(Z)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setNumLevels(I)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setCompressionPerLevel(Ljava/util/List;)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setBloomLocality(I)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setInplaceUpdateSupport(Z)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setMaxWriteBufferNumberToMaintain(I)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setMinWriteBufferNumberToMerge(I)Lorg/rocksdb/AdvancedColumnFamilyOptionsInterface;
+#setCompressionType(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/MutableColumnFamilyOptionsInterface;
+#setMaxBytesForLevelBase(J)Lorg/rocksdb/MutableColumnFamilyOptionsInterface;
+#setMaxCompactionBytes(J)Lorg/rocksdb/MutableColumnFamilyOptionsInterface;
+#setLevel0FileNumCompactionTrigger(I)Lorg/rocksdb/MutableColumnFamilyOptionsInterface;
+#setDisableAutoCompactions(Z)Lorg/rocksdb/MutableColumnFamilyOptionsInterface;
+#setWriteBufferSize(J)Lorg/rocksdb/MutableColumnFamilyOptionsInterface;
+#setReportBgIoStats(Z)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setParanoidFileChecks(Z)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMaxSuccessiveMerges(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMaxSequentialSkipInIterations(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setHardPendingCompactionBytesLimit(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setSoftPendingCompactionBytesLimit(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMaxBytesForLevelMultiplierAdditional([I)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMaxBytesForLevelMultiplier(D)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setTargetFileSizeMultiplier(I)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setTargetFileSizeBase(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setLevel0StopWritesTrigger(I)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setLevel0SlowdownWritesTrigger(I)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setArenaBlockSize(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMemtableHugePageSize(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMemtablePrefixBloomSizeRatio(D)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setInplaceUpdateNumLocks(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMaxWriteBufferNumber(I)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
@3.0.0
*#maxBackgroundCompactions()I[deprecated]
*#setBaseBackgroundCompactions(I)V[deprecated]
*#setMaxBackgroundCompactions(I)Lorg/rocksdb/Options;[deprecated]
+#setMaxSubcompactions(I)Lorg/rocksdb/Options;
*#maxBackgroundFlushes()I[deprecated]
*#setMaxBackgroundFlushes(I)Lorg/rocksdb/Options;[deprecated]
+#setMaxWriteBatchGroupSizeBytes(J)Lorg/rocksdb/Options;
+#maxWriteBatchGroupSizeBytes()J
+#oldDefaults(II)Lorg/rocksdb/Options;
+#optimizeForSmallDb(Lorg/rocksdb/Cache;)Lorg/rocksdb/Options;
+#compactionFilter()Lorg/rocksdb/AbstractCompactionFilter;
+#compactionFilterFactory()Lorg/rocksdb/AbstractCompactionFilterFactory;
+#setStatsPersistPeriodSec(I)Lorg/rocksdb/Options;
+#statsPersistPeriodSec()I
+#setStatsHistoryBufferSize(J)Lorg/rocksdb/Options;
+#statsHistoryBufferSize()J
+#setStrictBytesPerSync(Z)Lorg/rocksdb/Options;
+#strictBytesPerSync()Z
+#setListeners(Ljava/util/List;)Lorg/rocksdb/Options;
+#listeners()Ljava/util/List;
+#setEnablePipelinedWrite(Z)Lorg/rocksdb/Options;
+#enablePipelinedWrite()Z
+#setUnorderedWrite(Z)Lorg/rocksdb/Options;
+#unorderedWrite()Z
+#setSkipCheckingSstFileSizesOnDbOpen(Z)Lorg/rocksdb/Options;
+#skipCheckingSstFileSizesOnDbOpen()Z
+#setWalFilter(Lorg/rocksdb/AbstractWalFilter;)Lorg/rocksdb/Options;
+#walFilter()Lorg/rocksdb/WalFilter;
+#setAllowIngestBehind(Z)Lorg/rocksdb/Options;
+#allowIngestBehind()Z
+#setPreserveDeletes(Z)Lorg/rocksdb/Options;
+#preserveDeletes()Z
+#setTwoWriteQueues(Z)Lorg/rocksdb/Options;
+#twoWriteQueues()Z
+#setManualWalFlush(Z)Lorg/rocksdb/Options;
+#manualWalFlush()Z
+#setCfPaths(Ljava/util/Collection;)Lorg/rocksdb/Options;
+#cfPaths()Ljava/util/List;
+#setBottommostCompressionOptions(Lorg/rocksdb/CompressionOptions;)Lorg/rocksdb/Options;
+#bottommostCompressionOptions()Lorg/rocksdb/CompressionOptions;
+#setTtl(J)Lorg/rocksdb/Options;
+#ttl()J
+#setAtomicFlush(Z)Lorg/rocksdb/Options;
+#atomicFlush()Z
+#setAvoidUnnecessaryBlockingIO(Z)Lorg/rocksdb/Options;
+#avoidUnnecessaryBlockingIO()Z
+#setPersistStatsToDisk(Z)Lorg/rocksdb/Options;
+#persistStatsToDisk()Z
+#setWriteDbidToManifest(Z)Lorg/rocksdb/Options;
+#writeDbidToManifest()Z
+#setLogReadaheadSize(J)Lorg/rocksdb/Options;
+#logReadaheadSize()J
+#setBestEffortsRecovery(Z)Lorg/rocksdb/Options;
+#bestEffortsRecovery()Z
+#setMaxBgErrorResumeCount(I)Lorg/rocksdb/Options;
+#maxBgerrorResumeCount()I
+#setBgerrorResumeRetryInterval(J)Lorg/rocksdb/Options;
+#bgerrorResumeRetryInterval()J
+#setSstPartitionerFactory(Lorg/rocksdb/SstPartitionerFactory;)Lorg/rocksdb/Options;
+#sstPartitionerFactory()Lorg/rocksdb/SstPartitionerFactory;
+#setCompactionThreadLimiter(Lorg/rocksdb/ConcurrentTaskLimiter;)Lorg/rocksdb/Options;
+#compactionThreadLimiter()Lorg/rocksdb/ConcurrentTaskLimiter;
+#setBgerrorResumeRetryInterval(J)Lorg/rocksdb/DBOptionsInterface;
+#setMaxBgErrorResumeCount(I)Lorg/rocksdb/DBOptionsInterface;
+#setBestEffortsRecovery(Z)Lorg/rocksdb/DBOptionsInterface;
+#setLogReadaheadSize(J)Lorg/rocksdb/DBOptionsInterface;
+#setWriteDbidToManifest(Z)Lorg/rocksdb/DBOptionsInterface;
+#setPersistStatsToDisk(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAvoidUnnecessaryBlockingIO(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAtomicFlush(Z)Lorg/rocksdb/DBOptionsInterface;
+#setManualWalFlush(Z)Lorg/rocksdb/DBOptionsInterface;
+#setTwoWriteQueues(Z)Lorg/rocksdb/DBOptionsInterface;
+#setPreserveDeletes(Z)Lorg/rocksdb/DBOptionsInterface;
+#setAllowIngestBehind(Z)Lorg/rocksdb/DBOptionsInterface;
+#setWalFilter(Lorg/rocksdb/AbstractWalFilter;)Lorg/rocksdb/DBOptionsInterface;
+#setSkipCheckingSstFileSizesOnDbOpen(Z)Lorg/rocksdb/DBOptionsInterface;
+#setUnorderedWrite(Z)Lorg/rocksdb/DBOptionsInterface;
+#setEnablePipelinedWrite(Z)Lorg/rocksdb/DBOptionsInterface;
+#setListeners(Ljava/util/List;)Lorg/rocksdb/DBOptionsInterface;
+#setMaxWriteBatchGroupSizeBytes(J)Lorg/rocksdb/DBOptionsInterface;
*#setMaxBackgroundFlushes(I)Lorg/rocksdb/DBOptionsInterface;[deprecated]
+#setMaxSubcompactions(I)Lorg/rocksdb/DBOptionsInterface;
+#setCompactionReadaheadSize(J)Lorg/rocksdb/MutableDBOptionsInterface;
+#setStrictBytesPerSync(Z)Lorg/rocksdb/MutableDBOptionsInterface;
+#setWalBytesPerSync(J)Lorg/rocksdb/MutableDBOptionsInterface;
+#setBytesPerSync(J)Lorg/rocksdb/MutableDBOptionsInterface;
+#setMaxOpenFiles(I)Lorg/rocksdb/MutableDBOptionsInterface;
+#setStatsHistoryBufferSize(J)Lorg/rocksdb/MutableDBOptionsInterface;
+#setStatsPersistPeriodSec(I)Lorg/rocksdb/MutableDBOptionsInterface;
+#setStatsDumpPeriodSec(I)Lorg/rocksdb/MutableDBOptionsInterface;
+#setDeleteObsoleteFilesPeriodMicros(J)Lorg/rocksdb/MutableDBOptionsInterface;
+#setMaxTotalWalSize(J)Lorg/rocksdb/MutableDBOptionsInterface;
+#setDelayedWriteRate(J)Lorg/rocksdb/MutableDBOptionsInterface;
+#setWritableFileMaxBufferSize(J)Lorg/rocksdb/MutableDBOptionsInterface;
+#setAvoidFlushDuringShutdown(Z)Lorg/rocksdb/MutableDBOptionsInterface;
+#setMaxBackgroundCompactions(I)Lorg/rocksdb/MutableDBOptionsInterface;[deprecated]
+#setMaxBackgroundJobs(I)Lorg/rocksdb/MutableDBOptionsInterface;
+#setCompactionThreadLimiter(Lorg/rocksdb/ConcurrentTaskLimiter;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setSstPartitionerFactory(Lorg/rocksdb/SstPartitionerFactory;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setBottommostCompressionOptions(Lorg/rocksdb/CompressionOptions;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setCfPaths(Ljava/util/Collection;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setCompactionFilterFactory(Lorg/rocksdb/AbstractCompactionFilterFactory;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setCompactionFilter(Lorg/rocksdb/AbstractCompactionFilter;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#optimizeForSmallDb(Lorg/rocksdb/Cache;)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#oldDefaults(II)Lorg/rocksdb/ColumnFamilyOptionsInterface;
+#setTtl(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
-#setMaxSubcompactions(I)V
-#logWarning(Lorg/slf4j/Logger;)V
-#setAvoidFlushDuringShutdown(Z)Lorg/rocksdb/DBOptionsInterface;
-#setDelayedWriteRate(J)Lorg/rocksdb/DBOptionsInterface;
-#setWalBytesPerSync(J)Lorg/rocksdb/DBOptionsInterface;
-#setBytesPerSync(J)Lorg/rocksdb/DBOptionsInterface;
-#setWritableFileMaxBufferSize(J)Lorg/rocksdb/DBOptionsInterface;
-#setCompactionReadaheadSize(J)Lorg/rocksdb/DBOptionsInterface;
-#setStatsDumpPeriodSec(I)Lorg/rocksdb/DBOptionsInterface;
-#setMaxBackgroundJobs(I)Lorg/rocksdb/DBOptionsInterface;
-#setMaxBackgroundCompactions(I)Lorg/rocksdb/DBOptionsInterface;
-#setMaxTotalWalSize(J)Lorg/rocksdb/DBOptionsInterface;
-#setMaxOpenFiles(I)Lorg/rocksdb/DBOptionsInterface;
@3.2.0
+#setPeriodicCompactionSeconds(J)Lorg/rocksdb/Options;
+#periodicCompactionSeconds()J
+#setEnableBlobFiles(Z)Lorg/rocksdb/Options;
+#enableBlobFiles()Z
+#setMinBlobSize(J)Lorg/rocksdb/Options;
+#minBlobSize()J
+#setBlobFileSize(J)Lorg/rocksdb/Options;
+#blobFileSize()J
+#setBlobCompressionType(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/Options;
+#blobCompressionType()Lorg/rocksdb/CompressionType;
+#setEnableBlobGarbageCollection(Z)Lorg/rocksdb/Options;
+#enableBlobGarbageCollection()Z
+#setBlobGarbageCollectionAgeCutoff(D)Lorg/rocksdb/Options;
+#blobGarbageCollectionAgeCutoff()D
+#setBlobGarbageCollectionForceThreshold(D)Lorg/rocksdb/Options;
+#blobGarbageCollectionForceThreshold()D
+#setBlobGarbageCollectionForceThreshold(D)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setBlobGarbageCollectionAgeCutoff(D)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setEnableBlobGarbageCollection(Z)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setBlobCompressionType(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setBlobFileSize(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMinBlobSize(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setEnableBlobFiles(Z)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setPeriodicCompactionSeconds(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
@3.3.2
*#baseBackgroundCompactions()I[deprecated]
*#setNewTableReaderForCompactionInputs(Z)Lorg/rocksdb/Options;[deprecated]
*#newTableReaderForCompactionInputs()Z[deprecated]
*#setPreserveDeletes(Z)Lorg/rocksdb/Options;[deprecated]
*#preserveDeletes()Z[deprecated]
+#setBlobCompactionReadaheadSize(J)Lorg/rocksdb/Options;
+#blobCompactionReadaheadSize()J
+#setMemtableWholeKeyFiltering(Z)Lorg/rocksdb/Options;
+#memtableWholeKeyFiltering()Z
+#setBlobCompactionReadaheadSize(J)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
+#setMemtableWholeKeyFiltering(Z)Lorg/rocksdb/AdvancedMutableColumnFamilyOptionsInterface;
-#setPreserveDeletes(Z)Lorg/rocksdb/DBOptionsInterface;
-#setNewTableReaderForCompactionInputs(Z)Lorg/rocksdb/DBOptionsInterface;

+###org/apache/kafka/streams/state/internals/WrappedStateStore
@1.0.0
+#inner()Lorg/apache/kafka/streams/processor/StateStore;
+#wrappedStore()Lorg/apache/kafka/streams/processor/StateStore;
@2.2.0
+#isTimestamped(Lorg/apache/kafka/streams/processor/StateStore;)Z
+#<init>(Lorg/apache/kafka/streams/processor/StateStore;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#name()Ljava/lang/String;
+#persistent()Z
+#isOpen()Z
+#flush()V
+#close()V
+#wrapped()Lorg/apache/kafka/streams/processor/StateStore;
-#inner()Lorg/apache/kafka/streams/processor/StateStore;
-#wrappedStore()Lorg/apache/kafka/streams/processor/StateStore;
@2.3.0
+#setFlushListener(Lorg/apache/kafka/streams/state/internals/CacheFlushListener;Z)Z
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#flushCache()V
@3.2.0
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/state/internals/ChangeLoggingTimestampedKeyValueBytesStore
@2.3.0

+###org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer$Builder
@2.1.0
+#<init>(Ljava/lang/String;)V
+#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#withCachingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#build()Lorg/apache/kafka/streams/processor/StateStore;
+#logConfig()Ljava/util/Map;
+#loggingEnabled()Z
+#name()Ljava/lang/String;
@2.2.1
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#build()Lorg/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer;
-#<init>(Ljava/lang/String;)V

+###org/apache/kafka/streams/state/internals/SessionKeySchema
@2.0.0
+#<init>()V
+#init(Ljava/lang/String;)V
+#upperRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#upperRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#segmentTimestamp(Lorg/apache/kafka/common/utils/Bytes;)J
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJ)Ljava/util/List;
+#extractKeyBytes([B)[B
+#extractEndTimestamp([B)J
+#extractStartTimestamp([B)J
+#extractWindow([B)Lorg/apache/kafka/streams/kstream/Window;
+#from([BLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#from(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/kstream/Windowed;
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;)[B
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;)[B
@2.1.1
-#init(Ljava/lang/String;)V
@2.2.0
+#from(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;)Lorg/apache/kafka/common/utils/Bytes;
+#toBinary(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/common/utils/Bytes;
-#extractKeyBytes([B)[B
-#extractEndTimestamp([B)J
-#extractStartTimestamp([B)J
-#extractWindow([B)Lorg/apache/kafka/streams/kstream/Window;
-#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;)[B
@2.7.0
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJZ)Ljava/util/List;
-#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJ)Ljava/util/List;
@3.2.0
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJZ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
-#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
@3.3.0
+#keyByteLength(Lorg/apache/kafka/common/utils/Bytes;)I
+#upperRangeFixedWindow(Ljava/lang/Object;J)Lorg/apache/kafka/streams/kstream/Windowed;
+#lowerRangeFixedWindow(Ljava/lang/Object;J)Lorg/apache/kafka/streams/kstream/Windowed;
+#writeBinary(Ljava/nio/ByteBuffer;Lorg/apache/kafka/streams/kstream/Windowed;)V
+#writeBinary(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/utils/Bytes;JJ)V

+###org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilder
@2.3.0
+#<init>(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#build()Lorg/apache/kafka/streams/state/TimestampedWindowStore;
+#retentionPeriod()J
+#build()Lorg/apache/kafka/streams/processor/StateStore;

+###org/apache/kafka/streams/state/internals/RocksDBTimestampedSegmentedBytesStore
@2.3.0

+###org/apache/kafka/streams/state/internals/RecordConverters
@2.2.0
+#rawValueToTimestampedValue()Lorg/apache/kafka/streams/state/internals/RecordConverter;
+#identity()Lorg/apache/kafka/streams/state/internals/RecordConverter;

+###org/apache/kafka/streams/state/internals/BufferKey
@2.3.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/kafka/streams/state/internals/BufferKey;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBuffer$Eviction
@2.2.1
+#key()Ljava/lang/Object;
+#value()Ljava/lang/Object;
+#recordContext()Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0
+#value()Lorg/apache/kafka/streams/kstream/internals/Change;
-#value()Ljava/lang/Object;
@3.1.0
+#record()Lorg/apache/kafka/streams/processor/api/Record;

+###org/apache/kafka/streams/state/internals/SessionStoreBuilder
@1.0.0
+#<init>(Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#build()Lorg/apache/kafka/streams/state/SessionStore;
+#name()Ljava/lang/String;
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
+#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#build()Lorg/apache/kafka/streams/processor/StateStore;
@2.0.0
-#name()Ljava/lang/String;
-#loggingEnabled()Z
-#logConfig()Ljava/util/Map;
-#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
-#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
-#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;
@2.1.0
+#retentionPeriod()J

+###org/apache/kafka/streams/state/internals/KeyValueToTimestampedKeyValueByteStoreAdapter
@2.3.0
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#putIfAbsent(Lorg/apache/kafka/common/utils/Bytes;[B)[B
+#putAll(Ljava/util/List;)V
+#delete(Lorg/apache/kafka/common/utils/Bytes;)[B
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#flush()V
+#close()V
+#persistent()Z
+#isOpen()Z
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#approximateNumEntries()J
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#reverseRange(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.1
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/state/internals/Segment
@2.2.0
+#destroy()V
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.3.0
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
-#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
-#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.0.0
+#deleteRange(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)V

+###org/apache/kafka/streams/state/internals/RocksDBTimestampedStore
@2.2.0

+###org/apache/kafka/streams/state/internals/RocksDBSegmentedBytesStore
@2.2.0
+#fetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/common/utils/Bytes;)V
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#flush()V
+#close()V
+#persistent()Z
+#isOpen()Z
@2.3.0
-#fetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
-#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
-#remove(Lorg/apache/kafka/common/utils/Bytes;)V
-#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
-#get(Lorg/apache/kafka/common/utils/Bytes;)[B
-#name()Ljava/lang/String;
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
-#flush()V
-#close()V
-#persistent()Z
-#isOpen()Z

+###org/apache/kafka/streams/state/internals/TimestampedKeyValueStoreBuilder
@2.3.0
+#<init>(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#build()Lorg/apache/kafka/streams/state/TimestampedKeyValueStore;
+#build()Lorg/apache/kafka/streams/processor/StateStore;

+###org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer
@2.1.0
+#name()Ljava/lang/String;
+#persistent()Z
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#isOpen()Z
+#close()V
+#flush()V
+#evictWhile(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)V
+#put(JLorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/ContextualRecord;)V
+#numRecords()I
+#bufferSize()J
+#minTimestamp()J
@2.2.1
+#setSerdesIfNull(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#put(JLjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
+#toString()Ljava/lang/String;
-#put(JLorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/ContextualRecord;)V
@2.3.0
+#priorValueForBuffered(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/internals/Maybe;
+#put(JLjava/lang/Object;Lorg/apache/kafka/streams/kstream/internals/Change;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
-#put(JLjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
@3.0.0
+#setSerdesIfNull(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#setSerdesIfNull(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@3.1.0
+#put(JLorg/apache/kafka/streams/processor/api/Record;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
-#put(JLjava/lang/Object;Lorg/apache/kafka/streams/kstream/internals/Change;Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
@3.2.0
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/state/internals/Maybe
@2.3.0
+#defined(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/internals/Maybe;
+#undefined()Lorg/apache/kafka/streams/state/internals/Maybe;
+#getNullableValue()Ljava/lang/Object;
+#isDefined()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/state/internals/InMemorySessionBytesStoreSupplier
@2.3.0
+#<init>(Ljava/lang/String;J)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/SessionStore;
+#metricsScope()Ljava/lang/String;
+#segmentIntervalMs()J
+#retentionPeriod()J
+#get()Lorg/apache/kafka/streams/processor/StateStore;

+###org/apache/kafka/streams/state/internals/RocksDbWindowBytesStoreSupplier
@1.0.0
+#<init>(Ljava/lang/String;JIJZ)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/WindowStore;
+#metricsScope()Ljava/lang/String;
+#segments()I
+#windowSize()J
+#retainDuplicates()Z
+#retentionPeriod()J
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@2.1.0
+#<init>(Ljava/lang/String;JJJZ)V
*#segments()I[deprecated]
+#segmentIntervalMs()J
-#<init>(Ljava/lang/String;JIJZ)V
@2.3.0
+#<init>(Ljava/lang/String;JJJZZ)V
-#<init>(Ljava/lang/String;JJJZ)V
@2.7.0
+#toString()Ljava/lang/String;
@3.0.0
+#<init>(Ljava/lang/String;JJJZLorg/apache/kafka/streams/state/internals/RocksDbWindowBytesStoreSupplier$WindowStoreTypes;)V
-#segments()I[deprecated]

+###org/apache/kafka/streams/state/internals/ValueAndTimestampSerializer
@2.3.0
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/state/ValueAndTimestamp;)[B
+#serialize(Ljava/lang/String;Ljava/lang/Object;J)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.6.0
+#compareValuesAndCheckForIncreasingTimestamp([B[B)Z
@2.6.1
+#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
@2.7.0
+#valuesAreSameAndTimeIsIncreasing([B[B)Z
-#compareValuesAndCheckForIncreasingTimestamp([B[B)Z
@3.0.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V

+###org/apache/kafka/streams/state/internals/DelegatingPeekingKeyValueIterator
@0.10.2.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/state/KeyValueIterator;)V
+#peekNextKey()Ljava/lang/Object;
+#close()V
+#hasNext()Z
+#next()Lorg/apache/kafka/streams/KeyValue;
+#remove()V
+#peekNext()Lorg/apache/kafka/streams/KeyValue;
+#next()Ljava/lang/Object;
@0.11.0.0
-###org/apache/kafka/streams/state/internals/DelegatingPeekingKeyValueIterator

+###org/apache/kafka/streams/state/internals/InMemoryWindowStore
@2.3.0
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#put(Lorg/apache/kafka/common/utils/Bytes;[BJ)V
+#fetch(Lorg/apache/kafka/common/utils/Bytes;J)[B
+#fetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;[deprecated]
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#persistent()Z
+#isOpen()Z
+#flush()V
+#close()V
+#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;[deprecated]
+#put(Ljava/lang/Object;Ljava/lang/Object;J)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#fetch(Ljava/lang/Object;J)Ljava/lang/Object;
@2.4.0
*#put(Lorg/apache/kafka/common/utils/Bytes;[B)V[deprecated]
*#put(Ljava/lang/Object;Ljava/lang/Object;)V[deprecated]
@2.7.0
+#<init>(Ljava/lang/String;JJZLjava/lang/String;)V
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
@3.0.0
-#put(Lorg/apache/kafka/common/utils/Bytes;[B)V[deprecated]
-#put(Ljava/lang/Object;Ljava/lang/Object;)V[deprecated]
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#getPosition()Lorg/apache/kafka/streams/query/Position;
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;

+###org/apache/kafka/streams/state/internals/ReadOnlyKeyValueStoreFacade
@2.3.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#approximateNumEntries()J
@2.7.0
+#reverseRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#reverseAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.8.1
+#prefixScan(Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/MeteredSessionStore
@1.0.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/streams/kstream/Windowed;)V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;)V
+#fetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#flush()V
@2.1.0
+#close()V
@2.2.0
+#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
@2.3.0
+#setFlushListener(Lorg/apache/kafka/streams/state/internals/CacheFlushListener;Z)Z
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#backwardFetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;
@3.3.0
+#findSessions(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/InMemoryWindowBytesStoreSupplier
@2.3.0
+#<init>(Ljava/lang/String;JJZ)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/WindowStore;
+#metricsScope()Ljava/lang/String;
+#segments()I[deprecated]
+#retentionPeriod()J
+#windowSize()J
+#segmentIntervalMs()J
+#retainDuplicates()Z
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@2.4.0
+#toString()Ljava/lang/String;
@3.0.0
-#segments()I[deprecated]

+###org/apache/kafka/streams/state/internals/RocksDBSessionStore
@1.0.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/streams/kstream/Windowed;)V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;)V
@2.2.0
+#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
@2.3.0
+#findSessions(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchSession(Lorg/apache/kafka/common/utils/Bytes;JJ)[B
+#fetch(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#put(Lorg/apache/kafka/streams/kstream/Windowed;[B)V
-#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
@2.7.0
+#backwardFindSessions(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;

+###org/apache/kafka/streams/state/internals/RecordConverter
@2.2.0
+#convert(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)Lorg/apache/kafka/clients/consumer/ConsumerRecord;

+###org/apache/kafka/streams/state/internals/BufferValue
@2.3.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/state/internals/InMemorySessionStore
@2.3.0
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;[B)V
+#remove(Lorg/apache/kafka/streams/kstream/Windowed;)V
+#fetchSession(Lorg/apache/kafka/common/utils/Bytes;JJ)[B
+#findSessions(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#findSessions(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#fetch(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#persistent()Z
+#isOpen()Z
+#flush()V
+#close()V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;)V
+#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;[deprecated]
+#fetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
@2.7.0
*#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#backwardFindSessions(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.2.0
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#getPosition()Lorg/apache/kafka/streams/query/Position;
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;
@3.3.0
+#findSessions(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/RocksDbKeyValueBytesStoreSupplier
@1.0.0
+#<init>(Ljava/lang/String;)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/KeyValueStore;
+#metricsScope()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@2.2.0
+#<init>(Ljava/lang/String;Z)V
-#<init>(Ljava/lang/String;)V

+###org/apache/kafka/streams/state/internals/BulkLoadingStore
@2.3.0
+#toggleDbForBulkLoading(Z)V
+#addToBatch(Lorg/apache/kafka/streams/KeyValue;Lorg/rocksdb/WriteBatch;)V
+#write(Lorg/rocksdb/WriteBatch;)V
@2.6.0
-###org/apache/kafka/streams/state/internals/BulkLoadingStore

+###org/apache/kafka/streams/state/internals/WindowKeySchema
@2.0.0
+#<init>()V
+#init(Ljava/lang/String;)V
+#upperRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#upperRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#segmentTimestamp(Lorg/apache/kafka/common/utils/Bytes;)J
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJ)Ljava/util/List;
+#timeWindowForSize(JJ)Lorg/apache/kafka/streams/kstream/internals/TimeWindow;
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;)[B
+#from([BJLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#toStoreKeyBinary(Lorg/apache/kafka/common/utils/Bytes;JI)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Ljava/lang/Object;JILorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Lorg/apache/kafka/streams/kstream/Windowed;I)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Lorg/apache/kafka/streams/kstream/Windowed;ILorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/common/utils/Bytes;
+#extractStoreKeyBytes([B)[B
+#extractStoreKey([BLorg/apache/kafka/streams/state/StateSerdes;)Ljava/lang/Object;
+#extractStoreTimestamp([B)J
+#extractStoreSequence([B)I
+#fromStoreKey([BJLorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/streams/kstream/Windowed;
+#fromStoreKey([BJ)Lorg/apache/kafka/streams/kstream/Windowed;
+#extractStoreWindow([BJ)Lorg/apache/kafka/streams/kstream/Window;
@2.1.1
-#init(Ljava/lang/String;)V
@2.2.0
+#fromStoreKey([BJLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#fromStoreKey(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#fromStoreBytesKey([BJ)Lorg/apache/kafka/streams/kstream/Windowed;
-#timeWindowForSize(JJ)Lorg/apache/kafka/streams/kstream/internals/TimeWindow;
-#extractStoreKeyBytes([B)[B
-#extractStoreKey([BLorg/apache/kafka/streams/state/StateSerdes;)Ljava/lang/Object;
-#extractStoreTimestamp([B)J
-#extractStoreSequence([B)I
-#fromStoreKey([BJLorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/streams/kstream/Windowed;
-#fromStoreKey([BJ)Lorg/apache/kafka/streams/kstream/Windowed;
-#extractStoreWindow([BJ)Lorg/apache/kafka/streams/kstream/Window;
@2.7.0
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJZ)Ljava/util/List;
-#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJ)Ljava/util/List;
@3.2.0
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJZ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
-#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;

+###org/apache/kafka/streams/state/internals/Murmur3
@2.4.0
+#<init>()V
+#hash32(JJ)I
+#hash32(J)I
+#hash32(JI)I
+#hash32(JJI)I
+#hash32([B)I
+#hash32([BI)I
+#hash32([BII)I
+#hash32([BIII)I
+#hash64([B)J
+#hash64(J)J
+#hash64(I)J
+#hash64(S)J
+#hash64([BII)J
+#hash64([BIII)J
+#hash128([B)[J
+#hash128([BIII)[J

+###org/apache/kafka/streams/state/internals/WindowStoreBuilder
@1.0.0
+#<init>(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#build()Lorg/apache/kafka/streams/state/WindowStore;
+#retentionPeriod()J
+#name()Ljava/lang/String;
+#loggingEnabled()Z
+#logConfig()Ljava/util/Map;
+#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#build()Lorg/apache/kafka/streams/processor/StateStore;
@2.0.0
-#name()Ljava/lang/String;
-#loggingEnabled()Z
-#logConfig()Ljava/util/Map;
-#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
-#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
-#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;

+###org/apache/kafka/streams/state/QueryableStoreTypes$WindowStoreType
@2.3.0
+#create(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Ljava/lang/String;)Lorg/apache/kafka/streams/state/ReadOnlyWindowStore;
+#accepts(Lorg/apache/kafka/streams/processor/StateStore;)Z
+#create(Lorg/apache/kafka/streams/state/internals/StateStoreProvider;Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/kafka/streams/state/StoreBuilder
@1.0.0
+#withCachingEnabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingEnabled(Ljava/util/Map;)Lorg/apache/kafka/streams/state/StoreBuilder;
+#withLoggingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;
+#build()Lorg/apache/kafka/streams/processor/StateStore;
+#logConfig()Ljava/util/Map;
+#loggingEnabled()Z
+#name()Ljava/lang/String;
@2.1.0
+#withCachingDisabled()Lorg/apache/kafka/streams/state/StoreBuilder;

+###org/apache/kafka/streams/state/ValueAndTimestamp
@2.3.0
+#make(Ljava/lang/Object;J)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
+#getValueOrNull(Lorg/apache/kafka/streams/state/ValueAndTimestamp;)Ljava/lang/Object;
+#value()Ljava/lang/Object;
+#timestamp()J
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/state/TimestampedBytesStore
@2.3.0
+#convertToTimestampedFormat([B)[B

+###org/apache/kafka/streams/state/SessionBytesStoreSupplier
@1.0.0
+#segmentIntervalMs()J
@2.1.0
+#retentionPeriod()J

+###org/apache/kafka/streams/state/TimestampedWindowStore
@2.3.0

+###org/apache/kafka/streams/TopologyDescription$GlobalStore
@1.0.0
+#source()Lorg/apache/kafka/streams/TopologyDescription$Source;
+#processor()Lorg/apache/kafka/streams/TopologyDescription$Processor;
@1.1.0
+#id()I

+###org/apache/kafka/streams/internals/metrics/ClientMetrics
@2.4.0
+#version()Ljava/lang/String;
+#commitId()Ljava/lang/String;
+#addVersionMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)V
+#addCommitIdMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)V
+#addApplicationIdMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Ljava/lang/String;)V
+#addTopologyDescriptionMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Ljava/lang/String;)V
+#addStateMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/metrics/Gauge;)V
@2.6.0
+#addNumAliveStreamThreadMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/metrics/Gauge;)V
@2.8.0
+#failedStreamThreadSensor(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@3.1.0
+#addTopologyDescriptionMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/common/metrics/Gauge;)V
-#addTopologyDescriptionMetric(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Ljava/lang/String;)V

+###org/apache/kafka/streams/internals/QuietStreamsConfig
@2.4.0
+#<init>(Ljava/util/Map;)V
@2.7.0
-###org/apache/kafka/streams/internals/QuietStreamsConfig

+###org/apache/kafka/streams/internals/ApiUtils
@2.1.0
+#validateMillisecondDuration(Ljava/time/Duration;Ljava/lang/String;)J
+#validateMillisecondInstant(Ljava/time/Instant;Ljava/lang/String;)J
@2.2.0
+#prepareMillisCheckFailMsgPrefix(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
@2.8.0
+#checkSupplier(Ljava/util/function/Supplier;)V
+#checkSupplier(Lorg/apache/kafka/streams/kstream/ValueTransformerSupplier;)V

+###org/apache/kafka/streams/Topology
@1.0.0
+#<init>()V
+#addSource(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSource(Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Lorg/apache/kafka/streams/processor/TimestampExtractor;Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/Topology;
+#addSource(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSource(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSource(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/Topology;
+#addSink(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSink(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSink(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSink(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addProcessor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addStateStore(Lorg/apache/kafka/streams/state/StoreBuilder;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/Topology;
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/Topology;
+#connectProcessorAndStateStores(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#describe()Lorg/apache/kafka/streams/TopologyDescription;
@2.0.0
+#addSink(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSink(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSink(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
+#addSink(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
@2.7.0
*#addProcessor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;[deprecated]
+#addProcessor(Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/Topology;
*#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/Topology;[deprecated]
*#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/Topology;[deprecated]
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;)Lorg/apache/kafka/streams/Topology;
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;)Lorg/apache/kafka/streams/Topology;
@3.2.0
+#<init>(Lorg/apache/kafka/streams/TopologyConfig;)V

+###org/apache/kafka/streams/errors/ProductionExceptionHandler
@1.1.0
+#handle(Lorg/apache/kafka/clients/producer/ProducerRecord;Ljava/lang/Exception;)Lorg/apache/kafka/streams/errors/ProductionExceptionHandler$ProductionExceptionHandlerResponse;

+###org/apache/kafka/streams/errors/TopologyException
@1.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/TaskMigratedException
@1.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/Task;)V
+#<init>(Lorg/apache/kafka/streams/processor/internals/Task;Lorg/apache/kafka/common/TopicPartition;JJ)V
+#<init>(Lorg/apache/kafka/streams/processor/internals/Task;Ljava/lang/Throwable;)V
@1.1.1
+#migratedTask()Lorg/apache/kafka/streams/processor/internals/Task;
@2.0.0
+#<init>()V
@2.6.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>()V
-#<init>(Lorg/apache/kafka/streams/processor/internals/Task;Lorg/apache/kafka/common/TopicPartition;JJ)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/Task;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/Task;Ljava/lang/Throwable;)V
-#migratedTask()Lorg/apache/kafka/streams/processor/internals/Task;

+###org/apache/kafka/streams/errors/ProductionExceptionHandler$ProductionExceptionHandlerResponse
@1.1.0
+#values()[Lorg/apache/kafka/streams/errors/ProductionExceptionHandler$ProductionExceptionHandlerResponse;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/errors/ProductionExceptionHandler$ProductionExceptionHandlerResponse;

+###org/apache/kafka/streams/errors/LogAndContinueExceptionHandler
@1.0.0
+#<init>()V
+#handle(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/clients/consumer/ConsumerRecord;Ljava/lang/Exception;)Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler$DeserializationHandlerResponse;
+#configure(Ljava/util/Map;)V

+###org/apache/kafka/streams/errors/DeserializationExceptionHandler$DeserializationHandlerResponse
@1.0.0
+#values()[Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler$DeserializationHandlerResponse;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler$DeserializationHandlerResponse;

+###org/apache/kafka/streams/errors/LogAndFailExceptionHandler
@1.0.0
+#<init>()V
+#handle(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/clients/consumer/ConsumerRecord;Ljava/lang/Exception;)Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler$DeserializationHandlerResponse;
+#configure(Ljava/util/Map;)V

+###org/apache/kafka/streams/errors/DeserializationExceptionHandler
@1.0.0
+#handle(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/clients/consumer/ConsumerRecord;Ljava/lang/Exception;)Lorg/apache/kafka/streams/errors/DeserializationExceptionHandler$DeserializationHandlerResponse;

+###org/apache/kafka/streams/errors/DefaultProductionExceptionHandler
@1.1.0
+#<init>()V
+#handle(Lorg/apache/kafka/clients/producer/ProducerRecord;Ljava/lang/Exception;)Lorg/apache/kafka/streams/errors/ProductionExceptionHandler$ProductionExceptionHandlerResponse;
+#configure(Ljava/util/Map;)V

+###org/apache/kafka/streams/TopologyDescription$Node
@1.0.0
+#name()Ljava/lang/String;
+#predecessors()Ljava/util/Set;
+#successors()Ljava/util/Set;

+###org/apache/kafka/streams/StreamsBuilder
@1.0.0
+#<init>()V
+#stream(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Ljava/util/Collection;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Ljava/util/Collection;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Ljava/util/regex/Pattern;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Ljava/util/regex/Pattern;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
+#table(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#globalTable(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#globalTable(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#globalTable(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#globalTable(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#addStateStore(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/StreamsBuilder;
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;
+#build()Lorg/apache/kafka/streams/Topology;
@1.1.0
*#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;[deprecated]
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;
@2.0.0
+#stream(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Ljava/util/Collection;Lorg/apache/kafka/streams/kstream/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
+#stream(Ljava/util/regex/Pattern;Lorg/apache/kafka/streams/kstream/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
+#table(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#table(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;)Lorg/apache/kafka/streams/kstream/KTable;
+#globalTable(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#globalTable(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;[deprecated]
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;
-#stream(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
-#stream(Ljava/util/Collection;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
-#stream(Ljava/util/regex/Pattern;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
-#table(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
-#table(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/KTable;
-#globalTable(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
-#globalTable(Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/GlobalKTable;
-#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;[deprecated]
-#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/Consumed;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;
@2.1.0
+#build(Ljava/util/Properties;)Lorg/apache/kafka/streams/Topology;
@2.7.0
*#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;[deprecated]
+#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;
@3.0.0
-#addGlobalStore(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)Lorg/apache/kafka/streams/StreamsBuilder;[deprecated]
@3.2.0
+#<init>(Lorg/apache/kafka/streams/TopologyConfig;)V

+###org/apache/kafka/streams/TopologyDescription$Processor
@1.0.0
+#stores()Ljava/util/Set;

+###org/apache/kafka/streams/kstream/CogroupedKStream
@2.5.0
+#cogroup(Lorg/apache/kafka/streams/kstream/KGroupedStream;Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/CogroupedKStream;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#windowedBy(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream;
+#windowedBy(Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/SessionWindowedCogroupedKStream;
@2.7.0
+#windowedBy(Lorg/apache/kafka/streams/kstream/SlidingWindows;)Lorg/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream;

+###org/apache/kafka/streams/kstream/Repartitioned
@2.6.0
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#streamPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#numberOfPartitions(I)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#withNumberOfPartitions(I)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#withStreamPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/Repartitioned;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/SessionWindowedCogroupedKStream
@2.5.0
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Merger;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/kstream/SlidingWindows
@2.7.0
+#withTimeDifferenceAndGrace(Ljava/time/Duration;Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SlidingWindows;
+#timeDifferenceMs()J
+#gracePeriodMs()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0
+#ofTimeDifferenceWithNoGrace(Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SlidingWindows;
+#ofTimeDifferenceAndGrace(Ljava/time/Duration;Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SlidingWindows;
*#withTimeDifferenceAndGrace(Ljava/time/Duration;Ljava/time/Duration;)Lorg/apache/kafka/streams/kstream/SlidingWindows;[deprecated]

+###org/apache/kafka/streams/kstream/ValueJoinerWithKey
@3.0.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/kstream/ForeachProcessor
@3.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/ForeachAction;)V
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V

+###org/apache/kafka/streams/kstream/internals/JoinWindowsInternal
@3.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/JoinWindows;)V
+#spuriousResultFixEnabled()Z

+###org/apache/kafka/streams/kstream/internals/WrappingNullableUtils
@2.6.1
+#<init>()V
+#prepareKeyDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Lorg/apache/kafka/common/serialization/Deserializer;
+#prepareValueDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Lorg/apache/kafka/common/serialization/Deserializer;
+#prepareKeySerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/common/serialization/Serializer;
+#prepareValueSerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/common/serialization/Serializer;
+#prepareKeySerde(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/common/serialization/Serde;
+#prepareValueSerde(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/common/serialization/Serde;
+#initNullableSerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#initNullableDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
@3.0.0
+#prepareKeyDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/streams/processor/api/ProcessorContext;Ljava/lang/String;)Lorg/apache/kafka/common/serialization/Deserializer;
+#prepareValueDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/streams/processor/api/ProcessorContext;Ljava/lang/String;)Lorg/apache/kafka/common/serialization/Deserializer;
+#prepareKeySerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/api/ProcessorContext;Ljava/lang/String;)Lorg/apache/kafka/common/serialization/Serializer;
+#prepareValueSerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/api/ProcessorContext;Ljava/lang/String;)Lorg/apache/kafka/common/serialization/Serializer;
+#prepareKeySerde(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)Lorg/apache/kafka/common/serialization/Serde;
+#prepareValueSerde(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)Lorg/apache/kafka/common/serialization/Serde;
+#initNullableSerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
+#initNullableDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#prepareKeyDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Lorg/apache/kafka/common/serialization/Deserializer;
-#prepareValueDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Lorg/apache/kafka/common/serialization/Deserializer;
-#prepareKeySerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/common/serialization/Serializer;
-#prepareValueSerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/common/serialization/Serializer;
-#prepareKeySerde(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/common/serialization/Serde;
-#prepareValueSerde(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/common/serialization/Serde;
-#initNullableSerializer(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
-#initNullableDeserializer(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V

+###org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregate
@2.7.0
+#<init>(Lorg/apache/kafka/streams/kstream/SlidingWindows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#windows()Lorg/apache/kafka/streams/kstream/SlidingWindows;
+#enableSendingOldValues()V
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
@2.8.0
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;
@3.3.0
+#<init>(Lorg/apache/kafka/streams/kstream/SlidingWindows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/EmitStrategy;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V
-#<init>(Lorg/apache/kafka/streams/kstream/SlidingWindows;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)V

+###org/apache/kafka/streams/kstream/internals/graph/UnoptimizableRepartitionNode
@2.6.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#toString()Ljava/lang/String;
+#unoptimizableRepartitionNodeBuilder()Lorg/apache/kafka/streams/kstream/internals/graph/UnoptimizableRepartitionNode$UnoptimizableRepartitionNodeBuilder;
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder
@2.6.0
+#<init>()V
+#withProcessorParameters(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#withSinkName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#withSourceName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#withRepartitionTopic(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#withStreamPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#withNodeName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#withInternalTopicProperties(Lorg/apache/kafka/streams/processor/internals/InternalTopicProperties;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode;

+###org/apache/kafka/streams/kstream/internals/graph/UnoptimizableRepartitionNode$UnoptimizableRepartitionNodeBuilder
@2.6.0
+#<init>()V
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/UnoptimizableRepartitionNode;
+#build()Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode;

+###org/apache/kafka/streams/kstream/internals/graph/StreamToTableNode
@2.5.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)V
+#toString()Ljava/lang/String;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/graph/SourceGraphNode
@2.8.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)V
+#<init>(Ljava/lang/String;Ljava/util/regex/Pattern;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)V
+#topicNames()Ljava/util/Set;
+#topicPattern()Ljava/util/regex/Pattern;
+#consumedInternal()Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
@2.8.1
+#topicNames()Ljava/util/Optional;
+#topicPattern()Ljava/util/Optional;
-#topicNames()Ljava/util/Set;
-#topicPattern()Ljava/util/regex/Pattern;

+###org/apache/kafka/streams/kstream/internals/graph/GraphNode
@2.8.0
+#<init>(Ljava/lang/String;)V
+#parentNodes()Ljava/util/Collection;
+#allParentsWrittenToTopology()Z
+#children()Ljava/util/Collection;
+#clearChildren()V
+#removeChild(Lorg/apache/kafka/streams/kstream/internals/graph/GraphNode;)Z
+#addChild(Lorg/apache/kafka/streams/kstream/internals/graph/GraphNode;)V
+#nodeName()Ljava/lang/String;
+#isKeyChangingOperation()Z
+#isValueChangingOperation()Z
+#isMergeNode()Z
+#setMergeNode(Z)V
+#setValueChangingOperation(Z)V
+#keyChangingOperation(Z)V
+#setBuildPriority(I)V
+#buildPriority()Ljava/lang/Integer;
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#hasWrittenToTopology()Z
+#setHasWrittenToTopology(Z)V
+#toString()Ljava/lang/String;
@3.0.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
@3.1.0
+#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#writeToTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/util/Properties;)V

+###org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImpl
@2.5.0
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Merger;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Merger;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/kstream/internals/BranchedKStreamImpl
@2.8.0
+#branch(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/BranchedKStream;
+#branch(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Branched;)Lorg/apache/kafka/streams/kstream/BranchedKStream;
+#defaultBranch()Ljava/util/Map;
+#defaultBranch(Lorg/apache/kafka/streams/kstream/Branched;)Ljava/util/Map;
+#noDefaultBranch()Ljava/util/Map;

+###org/apache/kafka/streams/kstream/internals/RepartitionedInternal
@2.6.0
+#<init>(Lorg/apache/kafka/streams/kstream/Repartitioned;)V
+#name()Ljava/lang/String;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#streamPartitioner()Lorg/apache/kafka/streams/processor/StreamPartitioner;
+#numberOfPartitions()Ljava/lang/Integer;

+###org/apache/kafka/streams/kstream/internals/SlidingWindowedCogroupedKStreamImpl
@2.7.0
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/kstream/internals/suppress/BufferConfigInternal
@2.6.0
+#<init>()V
+#maxRecords()J
+#maxBytes()J
+#bufferFullStrategy()Lorg/apache/kafka/streams/kstream/internals/suppress/BufferFullStrategy;
+#withNoBound()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#shutDownWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$StrictBufferConfig;
+#emitEarlyWhenFull()Lorg/apache/kafka/streams/kstream/Suppressed$EagerBufferConfig;
+#isLoggingEnabled()Z
+#getLogConfig()Ljava/util/Map;

+###org/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$RecordTimeDefinition
@2.7.0
+#instance()Lorg/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$RecordTimeDefinition;
+#time(Lorg/apache/kafka/streams/processor/ProcessorContext;Ljava/lang/Object;)J
+#type()Lorg/apache/kafka/streams/kstream/internals/suppress/TimeDefinitions$TimeDefinitionType;

+###org/apache/kafka/streams/kstream/internals/CogroupedKStreamImpl
@2.5.0
+#cogroup(Lorg/apache/kafka/streams/kstream/KGroupedStream;Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/CogroupedKStream;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;)Lorg/apache/kafka/streams/kstream/KTable;
+#windowedBy(Lorg/apache/kafka/streams/kstream/Windows;)Lorg/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream;
+#windowedBy(Lorg/apache/kafka/streams/kstream/SessionWindows;)Lorg/apache/kafka/streams/kstream/SessionWindowedCogroupedKStream;
@2.7.0
+#windowedBy(Lorg/apache/kafka/streams/kstream/SlidingWindows;)Lorg/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream;

+###org/apache/kafka/streams/kstream/internals/SlidingWindowedKStreamImpl
@2.7.0
+#count()Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
@3.3.0
+#emitStrategy(Lorg/apache/kafka/streams/kstream/EmitStrategy;)Lorg/apache/kafka/streams/kstream/TimeWindowedKStream;

+###org/apache/kafka/streams/kstream/internals/KTablePassThrough
@2.8.0
+#get()Lorg/apache/kafka/streams/processor/Processor;
+#enableSendingOldValues(Z)Z
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#get()Ljava/lang/Object;
@3.1.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
-#get()Lorg/apache/kafka/streams/processor/Processor;

+###org/apache/kafka/streams/kstream/internals/WrappingNullableSerde
@2.6.1
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#configure(Ljava/util/Map;Z)V
+#close()V
+#setIfUnset(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
@3.0.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
-#setIfUnset(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V

+###org/apache/kafka/streams/kstream/internals/KTableNewProcessorSupplier
@3.0.0
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#enableSendingOldValues(Z)Z
@3.2.0
-###org/apache/kafka/streams/kstream/internals/KTableNewProcessorSupplier

+###org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImpl
@2.5.0
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/kstream/Branched
@2.8.0
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Branched;
+#withFunction(Ljava/util/function/Function;)Lorg/apache/kafka/streams/kstream/Branched;
+#withConsumer(Ljava/util/function/Consumer;)Lorg/apache/kafka/streams/kstream/Branched;
+#withFunction(Ljava/util/function/Function;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Branched;
+#withConsumer(Ljava/util/function/Consumer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Branched;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Branched;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/BranchedKStream
@2.8.0
+#branch(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/BranchedKStream;
+#branch(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Branched;)Lorg/apache/kafka/streams/kstream/BranchedKStream;
+#defaultBranch()Ljava/util/Map;
+#defaultBranch(Lorg/apache/kafka/streams/kstream/Branched;)Ljava/util/Map;
+#noDefaultBranch()Ljava/util/Map;

+###org/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream
@2.5.0
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;

+###org/apache/kafka/streams/LagInfo
@2.5.0
+#currentOffsetPosition()J
+#endOffsetPosition()J
+#offsetLag()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/processor/ConnectedStoreProvider
@2.6.0
+#stores()Ljava/util/Set;

+###org/apache/kafka/streams/processor/internals/metrics/TaskMetrics
@2.5.0
+#processLatencySensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#punctuateSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#commitSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#enforcedProcessingSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#recordLatenessSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#droppedRecordsSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#droppedRecordsSensorOrSkippedRecordsSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#droppedRecordsSensorOrExpiredWindowRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#droppedRecordsSensorOrLateRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@2.6.0
+#activeProcessRatioSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#activeBufferedRecordsSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#e2ELatencySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@2.7.0
-#e2ELatencySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@3.0.0
-#droppedRecordsSensorOrSkippedRecordsSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#droppedRecordsSensorOrExpiredWindowRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#droppedRecordsSensorOrLateRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@3.4.0
+#totalCacheSizeBytesSensor(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;

+###org/apache/kafka/streams/processor/internals/metrics/ProcessorNodeMetrics
@2.5.0
+#suppressionEmitSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#processSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#processAtSourceSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#punctuateSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#createSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#destroySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#forwardSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#lateRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#processorAtSourceSensorOrForwardSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@2.6.0
+#skippedIdempotentUpdatesSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@2.7.0
+#e2ELatencySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@3.0.0
-#processSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#punctuateSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#createSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#destroySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#lateRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#processorAtSourceSensorOrForwardSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@3.3.0
+#emitFinalLatencySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#emittedRecordsSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;

+###org/apache/kafka/streams/processor/internals/ClientUtils$QuietConsumerConfig
@2.7.0
+#<init>(Ljava/util/Map;)V

+###org/apache/kafka/streams/processor/internals/ChangelogRegister
@2.6.0
+#register(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;)V
+#unregister(Ljava/util/Collection;)V
@3.4.0
+#register(Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;)V

+###org/apache/kafka/streams/processor/internals/StateDirectory$TaskDirectory
@3.0.0
+#file()Ljava/io/File;
+#namedTopology()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/internals/StateManager
@2.7.0
+#baseDir()Ljava/io/File;
+#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#getStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#flush()V
+#updateChangelogOffsets(Ljava/util/Map;)V
+#checkpoint()V
+#changelogOffsets()Ljava/util/Map;
+#close()V
+#taskType()Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
+#changelogFor(Ljava/lang/String;)Ljava/lang/String;
+#getGlobalStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
@3.2.0
+#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;Lorg/apache/kafka/streams/processor/CommitCallback;)V
-#registerStore(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V

+###org/apache/kafka/streams/processor/internals/TopologyMetadata$Subtopology
@3.0.0
+#<init>(ILjava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
@2.6.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/processor/internals/InternalTopicProperties
@2.6.0
+#<init>(Ljava/lang/Integer;)V
+#getNumberOfPartitions()Ljava/util/Optional;
+#empty()Lorg/apache/kafka/streams/processor/internals/InternalTopicProperties;
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode
@2.6.0
+#values()[Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
@3.2.0
-###org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode

+###org/apache/kafka/streams/processor/internals/ClientUtils
@2.6.0
+#<init>()V
+#getSharedAdminClientId(Ljava/lang/String;)Ljava/lang/String;
+#getConsumerClientId(Ljava/lang/String;)Ljava/lang/String;
+#getRestoreConsumerClientId(Ljava/lang/String;)Ljava/lang/String;
+#getThreadProducerClientId(Ljava/lang/String;)Ljava/lang/String;
+#getTaskProducerClientId(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TaskId;)Ljava/lang/String;
+#consumerMetrics(Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/clients/consumer/Consumer;)Ljava/util/Map;
+#adminClientMetrics(Lorg/apache/kafka/clients/admin/Admin;)Ljava/util/Map;
+#producerMetrics(Ljava/util/Collection;)Ljava/util/Map;
+#fetchCommittedOffsets(Ljava/util/Set;Lorg/apache/kafka/clients/consumer/Consumer;)Ljava/util/Map;
+#fetchEndOffsetsFuture(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/Admin;)Lorg/apache/kafka/common/KafkaFuture;
+#getEndOffsets(Lorg/apache/kafka/common/KafkaFuture;)Ljava/util/Map;
+#fetchEndOffsets(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/Admin;)Ljava/util/Map;
@3.2.0
+#extractThreadId(Ljava/lang/String;)Ljava/lang/String;
@3.3.0
+#producerRecordSizeInBytes(Lorg/apache/kafka/clients/producer/ProducerRecord;)J
+#consumerRecordSizeInBytes(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)J

+###org/apache/kafka/streams/processor/internals/RepartitionTopics
@2.8.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;Lorg/apache/kafka/streams/processor/internals/assignment/CopartitionedTopicsEnforcer;Lorg/apache/kafka/common/Cluster;Ljava/lang/String;)V
+#setup()V
+#topicPartitionsInfo()Ljava/util/Map;
@3.1.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;Lorg/apache/kafka/streams/processor/internals/assignment/CopartitionedTopicsEnforcer;Lorg/apache/kafka/common/Cluster;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;Lorg/apache/kafka/streams/processor/internals/assignment/CopartitionedTopicsEnforcer;Lorg/apache/kafka/common/Cluster;Ljava/lang/String;)V
@3.2.0
+#topologiesWithMissingInputTopics()Ljava/util/Set;
+#missingSourceTopicExceptions()Ljava/util/Queue;

+###org/apache/kafka/streams/processor/internals/Task$State
@2.6.0
+#values()[Lorg/apache/kafka/streams/processor/internals/Task$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/Task$State;
+#isValidTransition(Lorg/apache/kafka/streams/processor/internals/Task$State;)Z

+###org/apache/kafka/streams/processor/internals/ProcessorAdapter
@2.7.0
+#adapt(Lorg/apache/kafka/streams/processor/Processor;)Lorg/apache/kafka/streams/processor/api/Processor;
+#adaptRaw(Lorg/apache/kafka/streams/processor/Processor;)Lorg/apache/kafka/streams/processor/api/Processor;
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V
+#close()V

+###org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor
@2.6.0
+#<init>()V
+#assign(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs;)Z

+###org/apache/kafka/streams/processor/internals/assignment/ConsumerProtocolUtils
@3.0.0
+#<init>()V
+#writeTaskIdTo(Lorg/apache/kafka/streams/processor/TaskId;Ljava/io/DataOutputStream;I)V
+#readTaskIdFrom(Ljava/io/DataInputStream;I)Lorg/apache/kafka/streams/processor/TaskId;
+#writeTaskIdTo(Lorg/apache/kafka/streams/processor/TaskId;Ljava/nio/ByteBuffer;I)V
+#readTaskIdFrom(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/streams/processor/TaskId;

+###org/apache/kafka/streams/processor/internals/assignment/FallbackPriorTaskAssignor
@2.6.0
+#<init>()V
+#assign(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs;)Z

+###org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs
@2.6.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer
@2.8.0
+#<init>()V

+###org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentListener
@2.6.0
+#onAssignmentComplete(Z)V

+###org/apache/kafka/streams/processor/internals/SerdeGetter
@3.0.0
+#<init>(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#<init>(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V
+#<init>(Lorg/apache/kafka/streams/processor/StateStoreContext;)V
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;

+###org/apache/kafka/streams/processor/internals/PartitionGrouper
@3.0.0
+#<init>()V
+#partitionGroups(Ljava/util/Map;Lorg/apache/kafka/common/Cluster;)Ljava/util/Map;

+###org/apache/kafka/streams/processor/internals/TopologyMetadata
@3.0.0
+#<init>()V
@3.1.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Lorg/apache/kafka/streams/StreamsConfig;)V
+#<init>(Ljava/util/concurrent/ConcurrentNavigableMap;Lorg/apache/kafka/streams/StreamsConfig;)V
+#topologyVersion()J
+#wakeupThreads()V
+#maybeWaitForNonEmptyTopology(Ljava/util/function/Supplier;)V
+#registerAndBuildNewTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#unregisterTopology(Ljava/lang/String;)V
+#buildAndRewriteTopology()V
+#getNumStreamThreads(Lorg/apache/kafka/streams/StreamsConfig;)I
+#hasNamedTopologies()Z
+#hasGlobalTopology()Z
+#hasNoLocalTopology()Z
+#hasPersistentStores()Z
+#hasStore(Ljava/lang/String;)Z
+#hasOffsetResetOverrides()Z
+#offsetResetStrategy(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;
+#usesPatternSubscription()Z
+#isEmpty()Z
+#topologyDescriptionString()Ljava/lang/String;
+#buildSubtopology(Lorg/apache/kafka/streams/processor/TaskId;)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#globalTaskTopology()Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
+#globalStateStores()Ljava/util/Map;
+#stateStoreNameToSourceTopics()Ljava/util/Map;
+#getStoreForChangelogTopic(Ljava/lang/String;)Ljava/lang/String;
+#sourceTopicsForStore(Ljava/lang/String;)Ljava/util/Collection;
+#topicGroups()Ljava/util/Map;
+#nodeToSourceTopics(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/util/Map;
+#copartitionGroups()Ljava/util/Collection;
+#lookupBuilderForNamedTopology(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
-#<init>()V
@3.2.0
+#setLog(Lorg/apache/kafka/common/utils/LogContext;)V
+#processingMode()Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;
+#sourceTopicsForTopology(Ljava/lang/String;)Ljava/util/Collection;
+#needsUpdate(Ljava/lang/String;)Z
+#registerThread(Ljava/lang/String;)V
+#unregisterThread(Ljava/lang/String;)V
+#taskExecutionMetadata()Lorg/apache/kafka/streams/processor/internals/TaskExecutionMetadata;
+#executeTopologyUpdatesAndBumpThreadVersion(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
+#maybeNotifyTopologyVersionListeners()V
+#registerAndBuildNewTopology(Lorg/apache/kafka/common/internals/KafkaFutureImpl;Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
+#unregisterTopology(Lorg/apache/kafka/common/internals/KafkaFutureImpl;Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;
+#getTaskConfigFor(Lorg/apache/kafka/streams/processor/TaskId;)Lorg/apache/kafka/streams/TopologyConfig$TaskConfig;
+#namedTopologiesView()Ljava/util/Set;
+#fullSourceTopicNamesForTopology(Ljava/lang/String;)Ljava/util/Collection;
+#allFullSourceTopicNames()Ljava/util/Collection;
+#stateStoreNameToSourceTopicsForTopology(Ljava/lang/String;)Ljava/util/Map;
+#sourceTopicsForStore(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#getTopologyNameOrElseUnnamed(Ljava/lang/String;)Ljava/lang/String;
+#subtopologyTopicsInfoMapExcluding(Ljava/util/Set;)Ljava/util/Map;
+#topologyToSubtopologyTopicsInfoMap()Ljava/util/Map;
+#getAllNamedTopologies()Ljava/util/Collection;
-#registerAndBuildNewTopology(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
-#unregisterTopology(Ljava/lang/String;)V
-#sourceTopicsForStore(Ljava/lang/String;)Ljava/util/Collection;
-#topicGroups()Ljava/util/Map;
@3.3.0
+#pauseTopology(Ljava/lang/String;)V
+#isPaused(Ljava/lang/String;)Z
+#resumeTopology(Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/internals/namedtopology/NamedTopology
@3.0.0
+#<init>()V
+#name()Ljava/lang/String;
+#sourceTopics()Ljava/util/List;
@3.2.0
-#<init>()V

+###org/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyStreamsBuilder
@3.0.0
+#<init>(Ljava/lang/String;)V
+#buildNamedTopology(Ljava/util/Properties;)Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;
+#getNewTopology()Lorg/apache/kafka/streams/Topology;
@3.2.0
-###org/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyStreamsBuilder

+###org/apache/kafka/streams/processor/internals/namedtopology/KafkaStreamsNamedTopologyWrapper
@3.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;Ljava/util/Properties;Lorg/apache/kafka/streams/KafkaClientSupplier;)V
+#getTopologyByName(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;
+#addNamedTopology(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;)V
+#removeNamedTopology(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;)V
@3.1.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;Ljava/util/Properties;)V
+#<init>(Ljava/util/Properties;)V
+#<init>(Ljava/util/Properties;Lorg/apache/kafka/streams/KafkaClientSupplier;)V
+#<init>(Ljava/util/Collection;Ljava/util/Properties;)V
+#<init>(Ljava/util/Collection;Ljava/util/Properties;Lorg/apache/kafka/streams/KafkaClientSupplier;)V
+#getTopologyByName(Ljava/lang/String;)Ljava/util/Optional;
+#removeNamedTopology(Ljava/lang/String;)V
+#cleanUpNamedTopology(Ljava/lang/String;)V
+#getFullTopologyDescription()Ljava/lang/String;
-#getTopologyByName(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;
-#removeNamedTopology(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;)V
@3.2.0
+#start(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;)V
+#start(Ljava/util/Collection;)V
+#newNamedTopologyBuilder(Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyBuilder;
+#newNamedTopologyBuilder(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyBuilder;
+#getAllTopologies()Ljava/util/Collection;
+#addNamedTopology(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;)Lorg/apache/kafka/streams/processor/internals/namedtopology/AddNamedTopologyResult;
+#removeNamedTopology(Ljava/lang/String;Z)Lorg/apache/kafka/streams/processor/internals/namedtopology/RemoveNamedTopologyResult;
+#removeNamedTopology(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/namedtopology/RemoveNamedTopologyResult;
+#store(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyStoreQueryParameters;)Ljava/lang/Object;
+#streamsMetadataForStore(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#allStreamsClientsMetadataForTopology(Ljava/lang/String;)Ljava/util/Collection;
+#queryMetadataForKey(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;)Lorg/apache/kafka/streams/KeyQueryMetadata;
+#allLocalStorePartitionLagsForTopology(Ljava/lang/String;)Ljava/util/Map;
-#<init>(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;Ljava/util/Properties;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;Ljava/util/Properties;Lorg/apache/kafka/streams/KafkaClientSupplier;)V
-#<init>(Ljava/util/Collection;Ljava/util/Properties;)V
-#<init>(Ljava/util/Collection;Ljava/util/Properties;Lorg/apache/kafka/streams/KafkaClientSupplier;)V
-#addNamedTopology(Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;)V
-#removeNamedTopology(Ljava/lang/String;)V
@3.3.0
+#pauseNamedTopology(Ljava/lang/String;)V
+#isNamedTopologyPaused(Ljava/lang/String;)Z
+#resumeNamedTopology(Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/internals/TaskMetadataImpl
@3.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Optional;)V
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#topicPartitions()Ljava/util/Set;
+#committedOffsets()Ljava/util/Map;
+#endOffsets()Ljava/util/Map;
+#timeCurrentIdlingStarted()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/processor/internals/ClientUtils$QuietStreamsConfig
@2.7.0
+#<init>(Ljava/util/Map;)V

+###org/apache/kafka/streams/processor/internals/StreamsProducer
@2.6.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Ljava/lang/String;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Lorg/apache/kafka/common/utils/LogContext;)V
+#resetProducer()V
@3.1.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Ljava/lang/String;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/common/utils/Time;)V
+#totalBlockedTime()D
-#<init>(Lorg/apache/kafka/streams/StreamsConfig;Ljava/lang/String;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Lorg/apache/kafka/common/utils/LogContext;)V

+###org/apache/kafka/streams/processor/internals/Task$TaskType
@2.6.0
+#values()[Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/Task$TaskType;

+###org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$SubtopologyDescription
@3.0.0
+#<init>(ILjava/util/Set;)V
+#id()I
+#nodes()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/internals/ChangelogTopics
@3.0.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/InternalTopicManager;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)V
+#setup()V
+#preExistingNonSourceTopicBasedPartitions()Ljava/util/Set;
+#preExistingPartitionsFor(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/util/Set;
+#preExistingSourceTopicBasedPartitions()Ljava/util/Set;
+#statefulTaskIds()Ljava/util/Set;

+###org/apache/kafka/streams/processor/internals/ThreadMetadataImpl
@3.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V
+#threadState()Ljava/lang/String;
+#threadName()Ljava/lang/String;
+#activeTasks()Ljava/util/Set;
+#standbyTasks()Ljava/util/Set;
+#consumerClientId()Ljava/lang/String;
+#restoreConsumerClientId()Ljava/lang/String;
+#producerClientIds()Ljava/util/Set;
+#adminClientId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/processor/internals/StoreToProcessorContextAdapter
@2.7.0
+#adapt(Lorg/apache/kafka/streams/processor/StateStoreContext;)Lorg/apache/kafka/streams/processor/ProcessorContext;
+#applicationId()Ljava/lang/String;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
+#schedule(Ljava/time/Duration;Lorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/streams/processor/To;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
+#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
+#commit()V
+#topic()Ljava/lang/String;
+#partition()I
+#offset()J
+#headers()Lorg/apache/kafka/common/header/Headers;
+#timestamp()J
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
@3.0.0
+#currentSystemTimeMs()J
+#currentStreamTimeMs()J
-#schedule(JLorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;[deprecated]
-#forward(Ljava/lang/Object;Ljava/lang/Object;I)V[deprecated]
-#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V[deprecated]

+###org/apache/kafka/streams/processor/internals/ProcessorContextUtils
@2.6.1
+#getKeySerializer(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/common/serialization/Serializer;
+#getValueSerializer(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/common/serialization/Serializer;
+#getKeyDeserializer(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/common/serialization/Deserializer;
+#getValueDeserializer(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/common/serialization/Deserializer;
@2.7.0
+#getCurrentSystemTime(Lorg/apache/kafka/streams/processor/ProcessorContext;)J
+#getMetricsImpl(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
+#getMetricsImpl(Lorg/apache/kafka/streams/processor/StateStoreContext;)Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
+#changelogFor(Lorg/apache/kafka/streams/processor/ProcessorContext;Ljava/lang/String;)Ljava/lang/String;
+#changelogFor(Lorg/apache/kafka/streams/processor/StateStoreContext;Ljava/lang/String;)Ljava/lang/String;
+#asInternalProcessorContext(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
+#asInternalProcessorContext(Lorg/apache/kafka/streams/processor/StateStoreContext;)Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
@3.0.0
+#currentSystemTime(Lorg/apache/kafka/streams/processor/ProcessorContext;)J
-#getCurrentSystemTime(Lorg/apache/kafka/streams/processor/ProcessorContext;)J
-#getKeySerializer(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/common/serialization/Serializer;
-#getValueSerializer(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/common/serialization/Serializer;
-#getKeyDeserializer(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/common/serialization/Deserializer;
-#getValueDeserializer(Lorg/apache/kafka/streams/processor/ProcessorContext;)Lorg/apache/kafka/common/serialization/Deserializer;
@3.3.0
+#changelogFor(Lorg/apache/kafka/streams/processor/ProcessorContext;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/String;
+#changelogFor(Lorg/apache/kafka/streams/processor/StateStoreContext;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/String;
+#getPrefix(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
-#changelogFor(Lorg/apache/kafka/streams/processor/ProcessorContext;Ljava/lang/String;)Ljava/lang/String;
-#changelogFor(Lorg/apache/kafka/streams/processor/StateStoreContext;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/streams/processor/UsePartitionTimeOnInvalidTimestamp
@2.5.0
+#<init>()V
+#onInvalidTimestamp(Lorg/apache/kafka/clients/consumer/ConsumerRecord;JJ)J
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;J)J

+###org/apache/kafka/streams/processor/api/ContextualProcessor
@3.0.0
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V

+###org/apache/kafka/streams/processor/api/ProcessorContext
@2.7.0
+#applicationId()Ljava/lang/String;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#recordMetadata()Ljava/util/Optional;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#schedule(Ljava/time/Duration;Lorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
+#forward(Lorg/apache/kafka/streams/processor/api/Record;)V
+#forward(Lorg/apache/kafka/streams/processor/api/Record;Ljava/lang/String;)V
+#commit()V
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
@3.2.0
+#currentSystemTimeMs()J
+#currentStreamTimeMs()J
@3.3.0
-#applicationId()Ljava/lang/String;
-#taskId()Lorg/apache/kafka/streams/processor/TaskId;
-#recordMetadata()Ljava/util/Optional;
-#keySerde()Lorg/apache/kafka/common/serialization/Serde;
-#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
-#stateDir()Ljava/io/File;
-#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
-#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
-#schedule(Ljava/time/Duration;Lorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
-#commit()V
-#appConfigs()Ljava/util/Map;
-#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
-#currentSystemTimeMs()J
-#currentStreamTimeMs()J

+###org/apache/kafka/streams/processor/api/RecordMetadata
@2.7.0
+#topic()Ljava/lang/String;
+#partition()I
+#offset()J

+###org/apache/kafka/streams/processor/api/Processor
@2.7.0
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V
+#process(Lorg/apache/kafka/streams/processor/api/Record;)V
+#close()V

+###org/apache/kafka/streams/processor/api/ProcessorSupplier
@2.7.0
+#get()Lorg/apache/kafka/streams/processor/api/Processor;
@2.8.0
+#get()Ljava/lang/Object;

+###org/apache/kafka/streams/processor/api/Record
@2.7.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;JLorg/apache/kafka/common/header/Headers;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;J)V
+#key()Ljava/lang/Object;
+#value()Ljava/lang/Object;
+#timestamp()J
+#headers()Lorg/apache/kafka/common/header/Headers;
+#withKey(Ljava/lang/Object;)Lorg/apache/kafka/streams/processor/api/Record;
+#withValue(Ljava/lang/Object;)Lorg/apache/kafka/streams/processor/api/Record;
+#withTimestamp(J)Lorg/apache/kafka/streams/processor/api/Record;
+#withHeaders(Lorg/apache/kafka/common/header/Headers;)Lorg/apache/kafka/streams/processor/api/Record;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/StateStoreContext
@2.7.0
+#applicationId()Ljava/lang/String;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
@3.2.0
+#recordMetadata()Ljava/util/Optional;
+#register(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;Lorg/apache/kafka/streams/processor/CommitCallback;)V

+###org/apache/kafka/streams/TaskMetadata
@3.0.0
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#topicPartitions()Ljava/util/Set;
+#committedOffsets()Ljava/util/Map;
+#endOffsets()Ljava/util/Map;
+#timeCurrentIdlingStarted()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/state/internals/metrics/StateStoreMetrics
@2.5.0
+#putSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#putIfAbsentSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#putAllSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#getSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#fetchSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#allSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#rangeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#flushSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#deleteSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#restoreSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#expiredWindowRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#suppressionBufferCountSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#suppressionBufferSizeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@2.7.0
+#expiredWindowRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#e2ELatencySensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#expiredWindowRecordDropSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@2.8.0
+#prefixScanSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
@3.0.0
+#putSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#putIfAbsentSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#putAllSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#getSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#fetchSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#allSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#rangeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#flushSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#deleteSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#restoreSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#suppressionBufferCountSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#suppressionBufferSizeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#putSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#putIfAbsentSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#putAllSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#getSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#fetchSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#allSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#rangeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#flushSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#deleteSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#removeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#restoreSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#suppressionBufferCountSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
-#suppressionBufferSizeSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;

+###org/apache/kafka/streams/state/internals/BatchWritingStore
@2.6.0
+#addToBatch(Lorg/apache/kafka/streams/KeyValue;Lorg/rocksdb/WriteBatch;)V
+#write(Lorg/rocksdb/WriteBatch;)V

+###org/apache/kafka/streams/state/internals/RocksDBTimeOrderedWindowStore
@3.0.0
+#put(Lorg/apache/kafka/common/utils/Bytes;[BJ)V
+#fetch(Lorg/apache/kafka/common/utils/Bytes;J)[B
+#fetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#fetch(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
+#put(Ljava/lang/Object;Ljava/lang/Object;J)V
+#fetch(Ljava/lang/Object;J)Ljava/lang/Object;
@3.1.0
-###org/apache/kafka/streams/state/internals/RocksDBTimeOrderedWindowStore

+###org/apache/kafka/streams/state/internals/KeyAndJoinSideSerializer
@3.0.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/KeyAndJoinSide;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@3.1.0
-###org/apache/kafka/streams/state/internals/KeyAndJoinSideSerializer

+###org/apache/kafka/streams/state/internals/KeyAndJoinSide
@3.0.0
+#make(ZLjava/lang/Object;)Lorg/apache/kafka/streams/state/internals/KeyAndJoinSide;
+#isLeftSide()Z
+#getKey()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.1.0
-###org/apache/kafka/streams/state/internals/KeyAndJoinSide

+###org/apache/kafka/streams/state/internals/TimeOrderedKeySchema
@3.0.0
+#<init>()V
+#upperRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreBinaryKeyPrefix(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#upperRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#segmentTimestamp(Lorg/apache/kafka/common/utils/Bytes;)J
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJZ)Ljava/util/List;
+#toStoreKeyBinaryPrefix(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Lorg/apache/kafka/common/utils/Bytes;JI)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Lorg/apache/kafka/streams/kstream/Windowed;I)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Lorg/apache/kafka/streams/kstream/Windowed;ILorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/common/utils/Bytes;
@3.1.0
-###org/apache/kafka/streams/state/internals/TimeOrderedKeySchema

+###org/apache/kafka/streams/state/internals/BlockBasedTableConfigWithAccessibleCache
@2.7.0
+#<init>()V
+#setBlockCache(Lorg/rocksdb/Cache;)Lorg/rocksdb/BlockBasedTableConfig;
+#blockCache()Lorg/rocksdb/Cache;

+###org/apache/kafka/streams/state/internals/StreamsMetadataImpl
@3.0.0
+#<init>(Lorg/apache/kafka/streams/state/HostInfo;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
+#hostInfo()Lorg/apache/kafka/streams/state/HostInfo;
+#stateStoreNames()Ljava/util/Set;
+#topicPartitions()Ljava/util/Set;
+#standbyTopicPartitions()Ljava/util/Set;
+#standbyStateStoreNames()Ljava/util/Set;
+#host()Ljava/lang/String;
+#port()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.2.0
+#<init>(Lorg/apache/kafka/streams/state/HostInfo;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#topologyName()Ljava/lang/String;

+###org/apache/kafka/streams/state/internals/RocksDbWindowBytesStoreSupplier$WindowStoreTypes
@3.0.0
+#values()[Lorg/apache/kafka/streams/state/internals/RocksDbWindowBytesStoreSupplier$WindowStoreTypes;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/state/internals/RocksDbWindowBytesStoreSupplier$WindowStoreTypes;

+###org/apache/kafka/streams/state/internals/LeftOrRightValueSerde
@3.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V

+###org/apache/kafka/streams/state/internals/KeyAndJoinSideDeserializer
@3.0.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Lorg/apache/kafka/streams/state/internals/KeyAndJoinSide;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@3.1.0
-###org/apache/kafka/streams/state/internals/KeyAndJoinSideDeserializer

+###org/apache/kafka/streams/state/internals/TimeOrderedWindowStoreBuilder
@3.0.0
+#<init>(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#build()Lorg/apache/kafka/streams/state/WindowStore;
+#build()Lorg/apache/kafka/streams/processor/StateStore;
@3.1.0
-###org/apache/kafka/streams/state/internals/TimeOrderedWindowStoreBuilder

+###org/apache/kafka/streams/state/internals/KeyAndJoinSideSerde
@3.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V
@3.1.0
-###org/apache/kafka/streams/state/internals/KeyAndJoinSideSerde

+###org/apache/kafka/streams/state/internals/LeftOrRightValueDeserializer
@3.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Lorg/apache/kafka/streams/state/internals/LeftOrRightValue;
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;

+###org/apache/kafka/streams/state/internals/LeftOrRightValue
@3.0.0
+#makeLeftValue(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/internals/LeftOrRightValue;
+#makeRightValue(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/internals/LeftOrRightValue;
+#make(ZLjava/lang/Object;)Lorg/apache/kafka/streams/state/internals/LeftOrRightValue;
+#getLeftValue()Ljava/lang/Object;
+#getRightValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/state/internals/LeftOrRightValueSerializer
@3.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/LeftOrRightValue;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B

+###org/apache/kafka/streams/StreamsMetadata
@3.0.0
+#hostInfo()Lorg/apache/kafka/streams/state/HostInfo;
+#stateStoreNames()Ljava/util/Set;
+#topicPartitions()Ljava/util/Set;
+#standbyTopicPartitions()Ljava/util/Set;
+#standbyStateStoreNames()Ljava/util/Set;
+#host()Ljava/lang/String;
+#port()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/internals/generated/SubscriptionInfoData
@2.5.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#version()I
+#latestSupportedVersion()I
+#processId()Ljava/util/UUID;
+#prevTasks()Ljava/util/List;
+#standbyTasks()Ljava/util/List;
+#userEndPoint()[B
+#unknownTaggedFields()Ljava/util/List;
+#setVersion(I)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
+#setLatestSupportedVersion(I)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
+#setProcessId(Ljava/util/UUID;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
+#setPrevTasks(Ljava/util/List;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
+#setStandbyTasks(Ljava/util/List;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
+#setUserEndPoint([B)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
+#taskOffsetSums()Ljava/util/List;
+#setTaskOffsetSums(Ljava/util/List;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
+#uniqueField()B
+#setUniqueField(B)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#processId()Lorg/apache/kafka/common/Uuid;
+#errorCode()I
+#setProcessId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
+#setErrorCode(I)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#processId()Ljava/util/UUID;
-#setProcessId(Ljava/util/UUID;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;
@3.2.0
+#clientTags()Ljava/util/List;
+#setClientTags(Ljava/util/List;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData;

+###org/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskOffsetSum
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskOffsetSum;
+#toString()Ljava/lang/String;
+#topicGroupId()I
+#partitionToOffsetSum()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicGroupId(I)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskOffsetSum;
+#setPartitionToOffsetSum(Ljava/util/List;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskOffsetSum;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#partition()I
+#offsetSum()J
+#namedTopology()Ljava/lang/String;
+#setPartition(I)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskOffsetSum;
+#setOffsetSum(J)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskOffsetSum;
+#setNamedTopology(Ljava/lang/String;)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskOffsetSum;

+###org/apache/kafka/streams/internals/generated/SubscriptionInfoData$PartitionToOffsetSum
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$PartitionToOffsetSum;
+#toString()Ljava/lang/String;
+#partition()I
+#offsetSum()J
+#unknownTaggedFields()Ljava/util/List;
+#setPartition(I)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$PartitionToOffsetSum;
+#setOffsetSum(J)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$PartitionToOffsetSum;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskId
@2.5.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicGroupId()I
+#partition()I
+#unknownTaggedFields()Ljava/util/List;
+#setTopicGroupId(I)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskId;
+#setPartition(I)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskId;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$TaskId;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/streams/ThreadMetadata
@3.0.0
+#threadState()Ljava/lang/String;
+#threadName()Ljava/lang/String;
+#activeTasks()Ljava/util/Set;
+#standbyTasks()Ljava/util/Set;
+#consumerClientId()Ljava/lang/String;
+#restoreConsumerClientId()Ljava/lang/String;
+#producerClientIds()Ljava/util/Set;
+#adminClientId()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/KeyQueryMetadata
@2.5.0
+#<init>(Lorg/apache/kafka/streams/state/HostInfo;Ljava/util/Set;I)V
+#getActiveHost()Lorg/apache/kafka/streams/state/HostInfo;
+#getStandbyHosts()Ljava/util/Set;
+#getPartition()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I
@2.7.0
*#getActiveHost()Lorg/apache/kafka/streams/state/HostInfo;[deprecated]
*#getStandbyHosts()Ljava/util/Set;[deprecated]
*#getPartition()I[deprecated]
+#activeHost()Lorg/apache/kafka/streams/state/HostInfo;
+#standbyHosts()Ljava/util/Set;
+#partition()I

+###org/apache/kafka/streams/StoreQueryParameters
@2.5.0
+#fromNameAndType(Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Lorg/apache/kafka/streams/StoreQueryParameters;
+#withPartition(Ljava/lang/Integer;)Lorg/apache/kafka/streams/StoreQueryParameters;
+#enableStaleStores()Lorg/apache/kafka/streams/StoreQueryParameters;
+#storeName()Ljava/lang/String;
+#queryableStoreType()Lorg/apache/kafka/streams/state/QueryableStoreType;
+#partition()Ljava/lang/Integer;
+#staleStoresEnabled()Z
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I

+###org/apache/kafka/streams/errors/UnknownStateStoreException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/StreamsUncaughtExceptionHandler
@2.8.0
+#handle(Ljava/lang/Throwable;)Lorg/apache/kafka/streams/errors/StreamsUncaughtExceptionHandler$StreamThreadExceptionResponse;

+###org/apache/kafka/streams/errors/MissingSourceTopicException
@2.7.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/streams/errors/StateStoreNotAvailableException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/TaskCorruptedException
@2.6.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/InvalidOffsetException;)V
+#corruptedTaskWithChangelogs()Ljava/util/Map;
@2.8.0
+#<init>(Ljava/util/Set;)V
+#<init>(Ljava/util/Set;Lorg/apache/kafka/clients/consumer/InvalidOffsetException;)V
+#corruptedTasks()Ljava/util/Set;
-#<init>(Ljava/util/Map;)V
-#<init>(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/InvalidOffsetException;)V
-#corruptedTaskWithChangelogs()Ljava/util/Map;

+###org/apache/kafka/streams/errors/StreamsUncaughtExceptionHandler$StreamThreadExceptionResponse
@2.8.0
+#values()[Lorg/apache/kafka/streams/errors/StreamsUncaughtExceptionHandler$StreamThreadExceptionResponse;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/errors/StreamsUncaughtExceptionHandler$StreamThreadExceptionResponse;

+###org/apache/kafka/streams/errors/StreamsRebalancingException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/StateStoreMigratedException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/StreamsNotStartedException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/InvalidStateStorePartitionException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/kstream/internals/KStreamPassThrough$KStreamPassThroughProcessor
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/KStreamPassThrough;)V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
@0.11.0.0
-###org/apache/kafka/streams/kstream/internals/KStreamPassThrough$KStreamPassThroughProcessor

+###org/apache/kafka/streams/kstream/internals/KTableStoreSupplier
@0.10.0.0
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@0.10.1.0
-###org/apache/kafka/streams/kstream/internals/KTableStoreSupplier

+###org/apache/kafka/streams/processor/ConsumerRecordTimestampExtractor
@0.10.0.0
+#<init>()V
+#extract(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)J
@0.10.2.0
-###org/apache/kafka/streams/processor/ConsumerRecordTimestampExtractor

+###org/apache/kafka/streams/processor/internals/StandbyContextImpl
@0.10.0.0
+#<init>(Lorg/apache/kafka/streams/processor/TaskId;Ljava/lang/String;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/StreamsMetrics;)V
+#initialized()V
+#getStateMgr()Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#applicationId()Ljava/lang/String;
+#recordCollector()Lorg/apache/kafka/streams/processor/internals/RecordCollector;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#register(Lorg/apache/kafka/streams/processor/StateStore;ZLorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#topic()Ljava/lang/String;
+#partition()I
+#offset()J
+#timestamp()J
+#forward(Ljava/lang/Object;Ljava/lang/Object;)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;I)V
+#forward(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#commit()V
+#schedule(J)V
@0.10.1.0
+#getCache()Lorg/apache/kafka/streams/state/internals/ThreadCache;
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
+#recordContext()Lorg/apache/kafka/streams/processor/internals/RecordContext;
+#setRecordContext(Lorg/apache/kafka/streams/processor/internals/RecordContext;)V
+#setCurrentNode(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
@0.10.1.1
+#currentNode()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
@0.10.2.0
-###org/apache/kafka/streams/processor/internals/StandbyContextImpl

+###org/apache/kafka/streams/state/internals/StoreChangeLogger$ValueGetter
@0.10.0.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@0.10.1.1
-###org/apache/kafka/streams/state/internals/StoreChangeLogger$ValueGetter

+###org/apache/kafka/streams/state/internals/StoreChangeLogger
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/state/StateSerdes;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/state/StateSerdes;II)V
+#init()V
+#add(Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;)V
+#maybeLogChange(Lorg/apache/kafka/streams/state/internals/StoreChangeLogger$ValueGetter;)V
+#logChange(Lorg/apache/kafka/streams/state/internals/StoreChangeLogger$ValueGetter;)V
+#clear()V
+#numDirty()I
+#numRemoved()I
@0.10.1.1
-###org/apache/kafka/streams/state/internals/StoreChangeLogger

+###org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore$RawAndDeserializedValue
@2.6.0
+#<init>([BLorg/apache/kafka/streams/state/ValueAndTimestamp;)V
@3.0.0
-###org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore$RawAndDeserializedValue

+###org/apache/kafka/streams/kstream/internals/KTableRepartitionMapSupplier
@3.2.0
+#view()Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
+#enableSendingOldValues(Z)Z

+###org/apache/kafka/streams/kstream/internals/TableJoinedInternal
@3.1.0
+#partitioner()Lorg/apache/kafka/streams/processor/StreamPartitioner;
+#otherPartitioner()Lorg/apache/kafka/streams/processor/StreamPartitioner;
+#name()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/TableJoined
@3.1.0
+#with(Lorg/apache/kafka/streams/processor/StreamPartitioner;Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/TableJoined;
+#as(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/TableJoined;
+#withPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/TableJoined;
+#withOtherPartitioner(Lorg/apache/kafka/streams/processor/StreamPartitioner;)Lorg/apache/kafka/streams/kstream/TableJoined;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/TableJoined;
+#withName(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/NamedOperation;

+###org/apache/kafka/streams/kstream/Materialized$StoreType
@3.2.0
+#values()[Lorg/apache/kafka/streams/kstream/Materialized$StoreType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Materialized$StoreType;

+###org/apache/kafka/streams/processor/internals/TopologyMetadata$TopologyVersion
@3.1.0
+#<init>()V

+###org/apache/kafka/streams/processor/internals/TopologyMetadata$TopologyVersionListener
@3.2.0
+#<init>(JLorg/apache/kafka/common/internals/KafkaFutureImpl;)V

+###org/apache/kafka/streams/processor/internals/TaskExecutor
@3.2.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/Tasks;Lorg/apache/kafka/streams/processor/internals/TaskExecutionMetadata;Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;ZLorg/apache/kafka/common/utils/LogContext;)V
@3.4.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/TasksRegistry;Lorg/apache/kafka/streams/processor/internals/TaskManager;Lorg/apache/kafka/streams/processor/internals/TaskExecutionMetadata;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/streams/processor/internals/Tasks;Lorg/apache/kafka/streams/processor/internals/TaskExecutionMetadata;Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;ZLorg/apache/kafka/common/utils/LogContext;)V

+###org/apache/kafka/streams/processor/internals/StateUpdater
@3.2.0
+#add(Lorg/apache/kafka/streams/processor/internals/Task;)V
+#remove(Lorg/apache/kafka/streams/processor/internals/Task;)V
+#getRestoredActiveTasks(Ljava/time/Duration;)Ljava/util/Set;
+#getExceptions()Ljava/util/List;
+#getAllTasks()Ljava/util/Set;
+#shutdown(Ljava/time/Duration;)V
@3.3.0
+#start()V
+#remove(Lorg/apache/kafka/streams/processor/TaskId;)V
+#drainRestoredActiveTasks(Ljava/time/Duration;)Ljava/util/Set;
+#drainRemovedTasks()Ljava/util/Set;
+#drainExceptionsAndFailedTasks()Ljava/util/List;
+#getTasks()Ljava/util/Set;
+#getActiveTasks()Ljava/util/Set;
+#getStandbyTasks()Ljava/util/Set;
-#remove(Lorg/apache/kafka/streams/processor/internals/Task;)V
-#getRestoredActiveTasks(Ljava/time/Duration;)Ljava/util/Set;
-#getExceptions()Ljava/util/List;
-#getAllTasks()Ljava/util/Set;
@3.4.0
+#hasRemovedTasks()Z
+#hasExceptionsAndFailedTasks()Z
+#getUpdatingTasks()Ljava/util/Set;
+#restoresActiveTasks()Z
-#getActiveTasks()Ljava/util/Set;

+###org/apache/kafka/streams/processor/internals/namedtopology/RemoveNamedTopologyResult
@3.2.0
+#<init>(Lorg/apache/kafka/common/internals/KafkaFutureImpl;)V
+#<init>(Lorg/apache/kafka/common/internals/KafkaFutureImpl;Ljava/lang/String;Ljava/lang/Runnable;)V
+#removeTopologyFuture()Lorg/apache/kafka/common/KafkaFuture;
+#resetOffsetsFuture()Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyStoreQueryParameters
@3.2.0
+#fromNamedTopologyAndStoreNameAndType(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/state/QueryableStoreType;)Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyStoreQueryParameters;
+#withPartition(Ljava/lang/Integer;)Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyStoreQueryParameters;
+#enableStaleStores()Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyStoreQueryParameters;
+#topologyName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#enableStaleStores()Lorg/apache/kafka/streams/StoreQueryParameters;
+#withPartition(Ljava/lang/Integer;)Lorg/apache/kafka/streams/StoreQueryParameters;

+###org/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyBuilder
@3.2.0
+#build()Lorg/apache/kafka/streams/processor/internals/namedtopology/NamedTopology;
+#build()Lorg/apache/kafka/streams/Topology;

+###org/apache/kafka/streams/processor/internals/namedtopology/AddNamedTopologyResult
@3.2.0
+#<init>(Lorg/apache/kafka/common/KafkaFuture;)V
+#all()Lorg/apache/kafka/common/KafkaFuture;
+#exceptionNow()Lorg/apache/kafka/streams/errors/StreamsException;

+###org/apache/kafka/streams/processor/internals/CorruptedRecord
@3.2.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/internals/StreamThreadTotalBlockedTime
@3.1.0
+#compute()D

+###org/apache/kafka/streams/processor/internals/TaskExecutionMetadata
@3.2.0
+#<init>(Ljava/util/Set;)V
+#canProcessTask(Lorg/apache/kafka/streams/processor/internals/Task;J)Z
+#registerTaskError(Lorg/apache/kafka/streams/processor/internals/Task;Ljava/lang/Throwable;J)V
@3.3.0
+#<init>(Ljava/util/Set;Ljava/util/Set;)V
-#<init>(Ljava/util/Set;)V
@3.4.0
+#<init>(Ljava/util/Set;Ljava/util/Set;Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;)V
+#hasNamedTopologies()Z
+#processingMode()Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;
+#canPunctuateTask(Lorg/apache/kafka/streams/processor/internals/Task;)Z
-#<init>(Ljava/util/Set;Ljava/util/Set;)V

+###org/apache/kafka/streams/processor/internals/ChangelogRecordDeserializationHelper
@3.2.0
+#<init>()V
+#applyChecksAndUpdatePosition(Lorg/apache/kafka/clients/consumer/ConsumerRecord;ZLorg/apache/kafka/streams/query/Position;)V

+###org/apache/kafka/streams/processor/CommitCallback
@3.2.0
+#onCommit()V

+###org/apache/kafka/streams/TopologyConfig
@3.2.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/StreamsConfig;Ljava/util/Properties;)V
+#parseStoreType()Lorg/apache/kafka/streams/kstream/Materialized$StoreType;
+#isNamedTopology()Z
+#getTaskConfig()Lorg/apache/kafka/streams/TopologyConfig$TaskConfig;

+###org/apache/kafka/streams/state/internals/PrefixedWindowKeySchemas
@3.2.0
+#<init>()V
@3.3.0
+#isTimeFirstSchemaKey([B)Z

+###org/apache/kafka/streams/state/internals/TimestampedKeyAndJoinSideSerde
@3.1.0
+#<init>(Lorg/apache/kafka/common/serialization/Serde;)V

+###org/apache/kafka/streams/state/internals/StoreQueryUtils$QueryHandler
@3.2.0
+#apply(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;Lorg/apache/kafka/streams/processor/StateStore;)Lorg/apache/kafka/streams/query/QueryResult;

+###org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier$WindowStoreTypes
@3.2.0
+#values()[Lorg/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier$WindowStoreTypes;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier$WindowStoreTypes;

+###org/apache/kafka/streams/state/internals/PrefixedWindowKeySchemas$TimeFirstWindowKeySchema
@3.2.0
+#<init>()V
+#upperRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#upperRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#segmentTimestamp(Lorg/apache/kafka/common/utils/Bytes;)J
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJZ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJZ)Ljava/util/List;
+#toStoreKeyBinary(Lorg/apache/kafka/streams/kstream/Windowed;I)Lorg/apache/kafka/common/utils/Bytes;
+#fromStoreKey([BJLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#toStoreKeyBinary(Lorg/apache/kafka/streams/kstream/Windowed;ILorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Lorg/apache/kafka/common/utils/Bytes;JI)Lorg/apache/kafka/common/utils/Bytes;
+#fromStoreBytesKey([BJ)Lorg/apache/kafka/streams/kstream/Windowed;
+#fromNonPrefixWindowKey([B)[B
@3.3.0
+#toStoreKeyBinary(Ljava/lang/Object;JILorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/common/utils/Bytes;

+###org/apache/kafka/streams/state/internals/RocksDBTimeOrderedSegmentedBytesStore
@3.2.0
+#put(Lorg/apache/kafka/common/utils/Bytes;JI[B)V
+#fetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/common/utils/Bytes;J)V
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
@3.3.0
-###org/apache/kafka/streams/state/internals/RocksDBTimeOrderedSegmentedBytesStore

+###org/apache/kafka/streams/state/internals/PositionSerde
@3.2.0
+#<init>()V
+#deserialize(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/streams/query/Position;
+#serialize(Lorg/apache/kafka/streams/query/Position;)Ljava/nio/ByteBuffer;

+###org/apache/kafka/streams/state/internals/AbstractDualSchemaRocksDBSegmentedBytesStore
@3.2.0
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardAll()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/common/utils/Bytes;)V
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#name()Ljava/lang/String;
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#flush()V
+#close()V
+#persistent()Z
+#isOpen()Z
+#getPosition()Lorg/apache/kafka/streams/query/Position;
+#hasIndex()Z

+###org/apache/kafka/streams/state/internals/PrefixedWindowKeySchemas$KeyFirstWindowKeySchema
@3.2.0
+#<init>()V
+#upperRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#upperRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#segmentTimestamp(Lorg/apache/kafka/common/utils/Bytes;)J
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJZ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJZ)Ljava/util/List;
+#toStoreKeyBinary(Lorg/apache/kafka/streams/kstream/Windowed;I)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Lorg/apache/kafka/streams/kstream/Windowed;ILorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary(Lorg/apache/kafka/common/utils/Bytes;JI)Lorg/apache/kafka/common/utils/Bytes;
+#toStoreKeyBinary([BJI)Lorg/apache/kafka/common/utils/Bytes;
+#fromStoreBytesKey([BJ)Lorg/apache/kafka/streams/kstream/Windowed;
+#fromStoreKey([BJLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#fromNonPrefixWindowKey([B)[B
@3.3.0
+#toStoreKeyBinary(Ljava/lang/Object;JILorg/apache/kafka/streams/state/StateSerdes;)Lorg/apache/kafka/common/utils/Bytes;

+###org/apache/kafka/streams/state/internals/StoreQueryUtils
@3.2.0
+#handleBasicQueries(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/query/Position;Lorg/apache/kafka/streams/processor/StateStoreContext;)Lorg/apache/kafka/streams/query/QueryResult;
+#updatePosition(Lorg/apache/kafka/streams/query/Position;Lorg/apache/kafka/streams/processor/StateStoreContext;)V
+#isPermitted(Lorg/apache/kafka/streams/query/Position;Lorg/apache/kafka/streams/query/PositionBound;I)Z
+#getDeserializeValue(Lorg/apache/kafka/streams/state/StateSerdes;Lorg/apache/kafka/streams/processor/StateStore;)Ljava/util/function/Function;
+#checkpointPosition(Lorg/apache/kafka/streams/state/internals/OffsetCheckpoint;Lorg/apache/kafka/streams/query/Position;)V
+#readPositionFromCheckpoint(Lorg/apache/kafka/streams/state/internals/OffsetCheckpoint;)Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/state/internals/ListValueStore
@3.1.0
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#putIfAbsent(Lorg/apache/kafka/common/utils/Bytes;[B)[B
+#putAll(Ljava/util/List;)V
+#delete(Lorg/apache/kafka/common/utils/Bytes;)[B
+#get(Lorg/apache/kafka/common/utils/Bytes;)[B
+#range(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#approximateNumEntries()J
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/streams/state/internals/TimestampedKeyAndJoinSideDeserializer
@3.1.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Lorg/apache/kafka/streams/state/internals/TimestampedKeyAndJoinSide;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;

+###org/apache/kafka/streams/state/internals/ChangeLoggingListValueBytesStore
@3.1.0
+#put(Lorg/apache/kafka/common/utils/Bytes;[B)V
+#putIfAbsent(Lorg/apache/kafka/common/utils/Bytes;[B)[B
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/kafka/streams/state/internals/ListValueStoreBuilder
@3.1.0
+#<init>(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
+#build()Lorg/apache/kafka/streams/state/KeyValueStore;
+#build()Lorg/apache/kafka/streams/processor/StateStore;

+###org/apache/kafka/streams/state/internals/TimestampedKeyAndJoinSide
@3.1.0
+#make(ZLjava/lang/Object;J)Lorg/apache/kafka/streams/state/internals/TimestampedKeyAndJoinSide;
+#isLeftSide()Z
+#getKey()Ljava/lang/Object;
+#getTimestamp()J
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier
@3.2.0
+#<init>(Ljava/lang/String;JJJZZ)V
+#<init>(Ljava/lang/String;JJJZLorg/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier$WindowStoreTypes;)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/WindowStore;
+#metricsScope()Ljava/lang/String;
+#segmentIntervalMs()J
+#windowSize()J
+#retainDuplicates()Z
+#retentionPeriod()J
+#toString()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;
@3.3.0
+#create(Ljava/lang/String;Ljava/time/Duration;Ljava/time/Duration;ZZ)Lorg/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier;

+###org/apache/kafka/streams/state/internals/InMemoryKeyValueBytesStoreSupplier
@3.2.0
+#<init>(Ljava/lang/String;)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/KeyValueStore;
+#metricsScope()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/processor/StateStore;

+###org/apache/kafka/streams/state/internals/CachingKeyValueStore$CacheQueryHandler
@3.2.0
+#apply(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/Position;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;Lorg/apache/kafka/streams/processor/StateStore;)Lorg/apache/kafka/streams/query/QueryResult;

+###org/apache/kafka/streams/state/internals/TimestampedKeyAndJoinSideSerializer
@3.1.0
+#setIfUnset(Lorg/apache/kafka/streams/processor/internals/SerdeGetter;)V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/TimestampedKeyAndJoinSide;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B

+###org/apache/kafka/streams/internals/generated/SubscriptionInfoData$ClientTag
@3.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$ClientTag;
+#toString()Ljava/lang/String;
+#key()[B
+#value()[B
+#unknownTaggedFields()Ljava/util/List;
+#setKey([B)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$ClientTag;
+#setValue([B)Lorg/apache/kafka/streams/internals/generated/SubscriptionInfoData$ClientTag;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/streams/internals/StreamsConfigUtils
@3.2.0
+#<init>()V
+#processingMode(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;
+#processingModeString(Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;)Ljava/lang/String;
+#eosEnabled(Lorg/apache/kafka/streams/StreamsConfig;)Z
+#eosEnabled(Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;)Z
@3.4.0
+#getTotalCacheSize(Lorg/apache/kafka/streams/StreamsConfig;)J

+###org/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode
@3.2.0
+#values()[Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/internals/StreamsConfigUtils$ProcessingMode;

+###org/apache/kafka/streams/TopologyConfig$TaskConfig
@3.2.0

+###org/apache/kafka/streams/errors/StreamsStoppedException
@3.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/streams/errors/UnknownTopologyException
@3.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V

+###org/apache/kafka/streams/query/PositionBound
@3.2.0
+#unbounded()Lorg/apache/kafka/streams/query/PositionBound;
+#at(Lorg/apache/kafka/streams/query/Position;)Lorg/apache/kafka/streams/query/PositionBound;
+#isUnbounded()Z
+#position()Lorg/apache/kafka/streams/query/Position;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/query/Query
@3.2.0

+###org/apache/kafka/streams/query/WindowKeyQuery
@3.2.0
+#withKeyAndWindowStartRange(Ljava/lang/Object;Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/query/WindowKeyQuery;
+#getKey()Ljava/lang/Object;
+#getTimeFrom()Ljava/util/Optional;
+#getTimeTo()Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/query/QueryResult
@3.2.0
+#forResult(Ljava/lang/Object;)Lorg/apache/kafka/streams/query/QueryResult;
+#forFailure(Lorg/apache/kafka/streams/query/FailureReason;Ljava/lang/String;)Lorg/apache/kafka/streams/query/QueryResult;
+#forUnknownQueryType(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/processor/StateStore;)Lorg/apache/kafka/streams/query/QueryResult;
+#notUpToBound(Lorg/apache/kafka/streams/query/Position;Lorg/apache/kafka/streams/query/PositionBound;Ljava/lang/Integer;)Lorg/apache/kafka/streams/query/QueryResult;
+#addExecutionInfo(Ljava/lang/String;)V
+#setPosition(Lorg/apache/kafka/streams/query/Position;)V
+#isSuccess()Z
+#isFailure()Z
+#getExecutionInfo()Ljava/util/List;
+#getPosition()Lorg/apache/kafka/streams/query/Position;
+#getFailureReason()Lorg/apache/kafka/streams/query/FailureReason;
+#getFailureMessage()Ljava/lang/String;
+#getResult()Ljava/lang/Object;

+###org/apache/kafka/streams/query/StateQueryRequest$InStore
@3.2.0
+#withQuery(Lorg/apache/kafka/streams/query/Query;)Lorg/apache/kafka/streams/query/StateQueryRequest;

+###org/apache/kafka/streams/query/WindowRangeQuery
@3.2.0
+#withKey(Ljava/lang/Object;)Lorg/apache/kafka/streams/query/WindowRangeQuery;
+#withWindowStartRange(Ljava/time/Instant;Ljava/time/Instant;)Lorg/apache/kafka/streams/query/WindowRangeQuery;
+#getKey()Ljava/util/Optional;
+#getTimeFrom()Ljava/util/Optional;
+#getTimeTo()Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/query/RangeQuery
@3.2.0
+#withRange(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/query/RangeQuery;
+#withUpperBound(Ljava/lang/Object;)Lorg/apache/kafka/streams/query/RangeQuery;
+#withLowerBound(Ljava/lang/Object;)Lorg/apache/kafka/streams/query/RangeQuery;
+#withNoBounds()Lorg/apache/kafka/streams/query/RangeQuery;
+#getLowerBound()Ljava/util/Optional;
+#getUpperBound()Ljava/util/Optional;

+###org/apache/kafka/streams/query/QueryConfig
@3.2.0
+#<init>(Z)V
+#isCollectExecutionInfo()Z

+###org/apache/kafka/streams/query/FailureReason
@3.2.0
+#values()[Lorg/apache/kafka/streams/query/FailureReason;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/query/FailureReason;

+###org/apache/kafka/streams/query/internals/AbstractQueryResult
@3.2.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/kafka/streams/query/Position;)V
+#addExecutionInfo(Ljava/lang/String;)V
+#setPosition(Lorg/apache/kafka/streams/query/Position;)V
+#getExecutionInfo()Ljava/util/List;
+#getPosition()Lorg/apache/kafka/streams/query/Position;

+###org/apache/kafka/streams/query/internals/SucceededQueryResult
@3.2.0
+#<init>(Ljava/lang/Object;)V
+#isSuccess()Z
+#isFailure()Z
+#getFailureReason()Lorg/apache/kafka/streams/query/FailureReason;
+#getFailureMessage()Ljava/lang/String;
+#getResult()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/query/internals/InternalQueryResultUtil
@3.2.0
+#<init>()V
+#copyAndSubstituteDeserializedResult(Lorg/apache/kafka/streams/query/QueryResult;Ljava/lang/Object;)Lorg/apache/kafka/streams/query/QueryResult;

+###org/apache/kafka/streams/query/internals/FailedQueryResult
@3.2.0
+#<init>(Lorg/apache/kafka/streams/query/FailureReason;Ljava/lang/String;)V
+#isSuccess()Z
+#isFailure()Z
+#getFailureReason()Lorg/apache/kafka/streams/query/FailureReason;
+#getFailureMessage()Ljava/lang/String;
+#getResult()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/query/StateQueryRequest
@3.2.0
+#inStore(Ljava/lang/String;)Lorg/apache/kafka/streams/query/StateQueryRequest$InStore;
+#withPositionBound(Lorg/apache/kafka/streams/query/PositionBound;)Lorg/apache/kafka/streams/query/StateQueryRequest;
+#withAllPartitions()Lorg/apache/kafka/streams/query/StateQueryRequest;
+#withPartitions(Ljava/util/Set;)Lorg/apache/kafka/streams/query/StateQueryRequest;
+#enableExecutionInfo()Lorg/apache/kafka/streams/query/StateQueryRequest;
+#requireActive()Lorg/apache/kafka/streams/query/StateQueryRequest;
+#getStoreName()Ljava/lang/String;
+#getPositionBound()Lorg/apache/kafka/streams/query/PositionBound;
+#getQuery()Lorg/apache/kafka/streams/query/Query;
+#isAllPartitions()Z
+#getPartitions()Ljava/util/Set;
+#executionInfoEnabled()Z
+#isRequireActive()Z

+###org/apache/kafka/streams/query/Position
@3.2.0
+#emptyPosition()Lorg/apache/kafka/streams/query/Position;
+#fromMap(Ljava/util/Map;)Lorg/apache/kafka/streams/query/Position;
+#withComponent(Ljava/lang/String;IJ)Lorg/apache/kafka/streams/query/Position;
+#copy()Lorg/apache/kafka/streams/query/Position;
+#merge(Lorg/apache/kafka/streams/query/Position;)Lorg/apache/kafka/streams/query/Position;
+#getTopics()Ljava/util/Set;
+#getPartitionPositions(Ljava/lang/String;)Ljava/util/Map;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isEmpty()Z

+###org/apache/kafka/streams/query/StateQueryResult
@3.2.0
+#<init>()V
+#setGlobalResult(Lorg/apache/kafka/streams/query/QueryResult;)V
+#addResult(ILorg/apache/kafka/streams/query/QueryResult;)V
+#getPartitionResults()Ljava/util/Map;
+#getOnlyPartitionResult()Lorg/apache/kafka/streams/query/QueryResult;
+#getGlobalResult()Lorg/apache/kafka/streams/query/QueryResult;
+#getPosition()Lorg/apache/kafka/streams/query/Position;
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/query/KeyQuery
@3.2.0
+#withKey(Ljava/lang/Object;)Lorg/apache/kafka/streams/query/KeyQuery;
+#skipCache()Lorg/apache/kafka/streams/query/KeyQuery;
+#getKey()Ljava/lang/Object;
+#isSkipCache()Z

+###org/apache/kafka/streams/processor/internals/ClientUtils$QuietAdminClientConfig
@2.6.0
@2.7.0
-###org/apache/kafka/streams/processor/internals/ClientUtils$QuietAdminClientConfig

+###org/apache/kafka/streams/KafkaStreams$CloseOptions
@3.3.0
+#<init>()V
+#timeout(Ljava/time/Duration;)Lorg/apache/kafka/streams/KafkaStreams$CloseOptions;
+#leaveGroup(Z)Lorg/apache/kafka/streams/KafkaStreams$CloseOptions;

+###org/apache/kafka/streams/kstream/internals/emitstrategy/WindowCloseStrategy
@3.3.0
+#<init>()V
+#type()Lorg/apache/kafka/streams/kstream/EmitStrategy$StrategyType;

+###org/apache/kafka/streams/kstream/internals/emitstrategy/WindowUpdateStrategy
@3.3.0
+#<init>()V
+#type()Lorg/apache/kafka/streams/kstream/EmitStrategy$StrategyType;

+###org/apache/kafka/streams/kstream/internals/AbstractKStreamTimeWindowAggregateProcessor
@3.3.0
+#init(Lorg/apache/kafka/streams/processor/api/ProcessorContext;)V

+###org/apache/kafka/streams/kstream/EmitStrategy
@3.3.0
+#type()Lorg/apache/kafka/streams/kstream/EmitStrategy$StrategyType;
+#onWindowClose()Lorg/apache/kafka/streams/kstream/EmitStrategy;
+#onWindowUpdate()Lorg/apache/kafka/streams/kstream/EmitStrategy;

+###org/apache/kafka/streams/kstream/EmitStrategy$StrategyType
@3.3.0
+#values()[Lorg/apache/kafka/streams/kstream/EmitStrategy$StrategyType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/EmitStrategy$StrategyType;
+#forType(Lorg/apache/kafka/streams/kstream/EmitStrategy$StrategyType;)Lorg/apache/kafka/streams/kstream/EmitStrategy;

+###org/apache/kafka/streams/processor/internals/metrics/TopicMetrics
@3.3.0
+#<init>()V
+#consumedSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
+#producedSensor(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;

+###org/apache/kafka/streams/processor/internals/TopicPartitionMetadata
@3.3.0
+#<init>(JLorg/apache/kafka/streams/processor/internals/ProcessorMetadata;)V
+#partitionTime()J
+#processorMetadata()Lorg/apache/kafka/streams/processor/internals/ProcessorMetadata;
+#encode()Ljava/lang/String;
+#decode(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/TopicPartitionMetadata;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/kafka/streams/processor/internals/StateUpdater$ExceptionAndTasks
@3.3.0
+#<init>(Ljava/util/Set;Ljava/lang/RuntimeException;)V
+#getTasks()Ljava/util/Set;
+#exception()Ljava/lang/RuntimeException;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/internals/ProcessorMetadata
@3.3.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#deserialize([B)Lorg/apache/kafka/streams/processor/internals/ProcessorMetadata;
+#serialize()[B
+#put(Ljava/lang/String;J)V
+#get(Ljava/lang/String;)Ljava/lang/Long;
+#update(Lorg/apache/kafka/streams/processor/internals/ProcessorMetadata;)V
+#setNeedsCommit(Z)V
+#needsCommit()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/kafka/streams/processor/internals/TaskAndAction
@3.3.0
+#createAddTask(Lorg/apache/kafka/streams/processor/internals/Task;)Lorg/apache/kafka/streams/processor/internals/TaskAndAction;
+#createRemoveTask(Lorg/apache/kafka/streams/processor/TaskId;)Lorg/apache/kafka/streams/processor/internals/TaskAndAction;
+#getTask()Lorg/apache/kafka/streams/processor/internals/Task;
+#getTaskId()Lorg/apache/kafka/streams/processor/TaskId;
+#getAction()Lorg/apache/kafka/streams/processor/internals/TaskAndAction$Action;

+###org/apache/kafka/streams/processor/internals/DefaultStateUpdater
@3.3.0
+#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/common/utils/Time;)V
+#start()V
+#shutdown(Ljava/time/Duration;)V
+#add(Lorg/apache/kafka/streams/processor/internals/Task;)V
+#remove(Lorg/apache/kafka/streams/processor/TaskId;)V
+#drainRestoredActiveTasks(Ljava/time/Duration;)Ljava/util/Set;
+#drainRemovedTasks()Ljava/util/Set;
+#drainExceptionsAndFailedTasks()Ljava/util/List;
+#getUpdatingStandbyTasks()Ljava/util/Set;
+#getUpdatingTasks()Ljava/util/Set;
+#getRestoredActiveTasks()Ljava/util/Set;
+#getExceptionsAndFailedTasks()Ljava/util/List;
+#getRemovedTasks()Ljava/util/Set;
+#getTasks()Ljava/util/Set;
+#getActiveTasks()Ljava/util/Set;
+#getStandbyTasks()Ljava/util/Set;
@3.4.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/streams/processor/internals/TopologyMetadata;Lorg/apache/kafka/common/utils/Time;)V
+#hasRemovedTasks()Z
+#hasExceptionsAndFailedTasks()Z
+#getPausedTasks()Ljava/util/Set;
+#restoresActiveTasks()Z
-#<init>(Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/ChangelogReader;Lorg/apache/kafka/common/utils/Time;)V

+###org/apache/kafka/streams/processor/api/FixedKeyRecord
@3.3.0
+#key()Ljava/lang/Object;
+#value()Ljava/lang/Object;
+#timestamp()J
+#headers()Lorg/apache/kafka/common/header/Headers;
+#withValue(Ljava/lang/Object;)Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;
+#withTimestamp(J)Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;
+#withHeaders(Lorg/apache/kafka/common/header/Headers;)Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier
@3.3.0
+#get()Lorg/apache/kafka/streams/processor/api/FixedKeyProcessor;
+#get()Ljava/lang/Object;

+###org/apache/kafka/streams/processor/api/InternalFixedKeyRecordFactory
@3.3.0
+#create(Lorg/apache/kafka/streams/processor/api/Record;)Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;

+###org/apache/kafka/streams/processor/api/ProcessingContext
@3.3.0
+#applicationId()Ljava/lang/String;
+#taskId()Lorg/apache/kafka/streams/processor/TaskId;
+#recordMetadata()Ljava/util/Optional;
+#keySerde()Lorg/apache/kafka/common/serialization/Serde;
+#valueSerde()Lorg/apache/kafka/common/serialization/Serde;
+#stateDir()Ljava/io/File;
+#metrics()Lorg/apache/kafka/streams/StreamsMetrics;
+#getStateStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#schedule(Ljava/time/Duration;Lorg/apache/kafka/streams/processor/PunctuationType;Lorg/apache/kafka/streams/processor/Punctuator;)Lorg/apache/kafka/streams/processor/Cancellable;
+#commit()V
+#appConfigs()Ljava/util/Map;
+#appConfigsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
+#currentSystemTimeMs()J
+#currentStreamTimeMs()J

+###org/apache/kafka/streams/processor/api/FixedKeyProcessorContext
@3.3.0
+#forward(Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;)V
+#forward(Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;Ljava/lang/String;)V

+###org/apache/kafka/streams/processor/api/ContextualFixedKeyProcessor
@3.3.0
+#init(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorContext;)V

+###org/apache/kafka/streams/processor/api/FixedKeyProcessor
@3.3.0
+#init(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorContext;)V
+#process(Lorg/apache/kafka/streams/processor/api/FixedKeyRecord;)V
+#close()V

+###org/apache/kafka/streams/state/internals/RocksDBTimeOrderedSessionSegmentedBytesStore
@3.3.0
+#fetchSession(Lorg/apache/kafka/common/utils/Bytes;JJ)[B
+#fetchSessions(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/streams/kstream/Windowed;)V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;[B)V

+###org/apache/kafka/streams/state/internals/RocksDBTimeOrderedWindowSegmentedBytesStore
@3.3.0
+#put(Lorg/apache/kafka/common/utils/Bytes;JI[B)V

+###org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas
@3.3.0
+#<init>()V

+###org/apache/kafka/streams/state/internals/RocksDBTimeOrderedSessionStore
@3.3.0
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#query(Lorg/apache/kafka/streams/query/Query;Lorg/apache/kafka/streams/query/PositionBound;Lorg/apache/kafka/streams/query/QueryConfig;)Lorg/apache/kafka/streams/query/QueryResult;
+#findSessions(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchSession(Lorg/apache/kafka/common/utils/Bytes;JJ)[B
+#fetch(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/streams/kstream/Windowed;)V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;[B)V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;)V
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/RocksDbTimeOrderedSessionBytesStoreSupplier
@3.3.0
+#<init>(Ljava/lang/String;JZ)V
+#name()Ljava/lang/String;
+#get()Lorg/apache/kafka/streams/state/SessionStore;
+#metricsScope()Ljava/lang/String;
+#segmentIntervalMs()J
+#retentionPeriod()J
+#get()Lorg/apache/kafka/streams/processor/StateStore;

+###org/apache/kafka/streams/state/internals/AbstractRocksDBTimeOrderedSegmentedBytesStore
@3.3.0
+#fetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/common/utils/Bytes;J)V
+#fetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetchAll(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas$KeyFirstSessionKeySchema
@3.3.0
+#<init>()V
+#upperRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#upperRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#segmentTimestamp(Lorg/apache/kafka/common/utils/Bytes;)J
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJZ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJZ)Ljava/util/List;
+#from(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/kstream/Windowed;
+#from([BLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;)Lorg/apache/kafka/common/utils/Bytes;
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;)[B
+#toBinary(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/common/utils/Bytes;
+#prefixNonPrefixSessionKey([B)[B

+###org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas$TimeFirstSessionKeySchema
@3.3.0
+#<init>()V
+#upperRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRange(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#upperRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#lowerRangeFixedSize(Lorg/apache/kafka/common/utils/Bytes;J)Lorg/apache/kafka/common/utils/Bytes;
+#segmentTimestamp(Lorg/apache/kafka/common/utils/Bytes;)J
+#hasNextCondition(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJZ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
+#segmentsToSearch(Lorg/apache/kafka/streams/state/internals/Segments;JJZ)Ljava/util/List;
+#from(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/kstream/Windowed;
+#from([BLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;Lorg/apache/kafka/common/serialization/Serializer;Ljava/lang/String;)[B
+#toBinary(Lorg/apache/kafka/streams/kstream/Windowed;)Lorg/apache/kafka/common/utils/Bytes;
+#writeBinary(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/utils/Bytes;JJ)V
+#toBinary(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/common/utils/Bytes;
+#extractWindowBytesFromNonPrefixSessionKey([B)[B

+###org/apache/kafka/streams/state/internals/ChangeLoggingSessionBytesStore
@3.3.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V[deprecated]
+#init(Lorg/apache/kafka/streams/processor/StateStoreContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#findSessions(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#remove(Lorg/apache/kafka/streams/kstream/Windowed;)V
+#put(Lorg/apache/kafka/streams/kstream/Windowed;[B)V
+#fetchSession(Lorg/apache/kafka/common/utils/Bytes;JJ)[B
+#findSessions(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#put(Lorg/apache/kafka/streams/kstream/Windowed;Ljava/lang/Object;)V
+#backwardFetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetch(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#fetchSession(Ljava/lang/Object;JJ)Ljava/lang/Object;
+#backwardFindSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#backwardFindSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#findSessions(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;

+###org/apache/kafka/streams/kstream/internals/KGroupedStreamImpl
@0.10.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/KStreamBuilder;Ljava/lang/String;Ljava/util/Set;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Z)V
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#reduce(Lorg/apache/kafka/streams/kstream/Reducer;Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#aggregate(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Aggregator;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
+#count(Lorg/apache/kafka/streams/kstream/Windows;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KTable;
@0.10.2.0
-###org/apache/kafka/streams/kstream/internals/KGroupedStreamImpl

+###org/apache/kafka/streams/state/internals/AbstractStoreSupplier
@0.10.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;ZLjava/util/Map;)V
+#name()Ljava/lang/String;
+#logConfig()Ljava/util/Map;
+#loggingEnabled()Z
@0.11.0.0
-###org/apache/kafka/streams/state/internals/AbstractStoreSupplier

+###org/apache/kafka/streams/state/internals/PeekingWindowIterator
@0.10.1.0
+#peekNext()Lorg/apache/kafka/streams/KeyValue;
@0.10.2.0
-###org/apache/kafka/streams/state/internals/PeekingWindowIterator

+###org/apache/kafka/streams/state/internals/ThreadCache$DirtyEntry
@0.10.1.0
+#<init>(Lorg/apache/kafka/common/utils/Bytes;[BLorg/apache/kafka/streams/processor/internals/RecordContext;)V
+#key()Lorg/apache/kafka/common/utils/Bytes;
+#newValue()[B
+#recordContext()Lorg/apache/kafka/streams/processor/internals/RecordContext;
@0.11.0.0
-###org/apache/kafka/streams/state/internals/ThreadCache$DirtyEntry

+###org/apache/kafka/streams/state/internals/ThreadCache$NullThreadCacheMetrics
@0.10.1.0
+#<init>()V
+#addCacheSensor(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#recordCacheSensor(Lorg/apache/kafka/common/metrics/Sensor;D)V
@0.10.2.0
-###org/apache/kafka/streams/state/internals/ThreadCache$NullThreadCacheMetrics

+###org/apache/kafka/streams/state/internals/ThreadCacheMetrics
@0.10.1.0
+#addCacheSensor(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#recordCacheSensor(Lorg/apache/kafka/common/metrics/Sensor;D)V
@0.10.2.0
-###org/apache/kafka/streams/state/internals/ThreadCacheMetrics

+###org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor$Error
@2.1.0
+#values()[Lorg/apache/kafka/streams/processor/internals/StreamsPartitionAssignor$Error;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/internals/StreamsPartitionAssignor$Error;
+#code()I
+#fromCode(I)Lorg/apache/kafka/streams/processor/internals/StreamsPartitionAssignor$Error;
@2.4.0
-###org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor$Error

+###org/apache/kafka/streams/processor/internals/TimestampSupplier
@2.1.0
+#get()J
@2.2.0
-###org/apache/kafka/streams/processor/internals/TimestampSupplier

+###org/apache/kafka/streams/processor/internals/metrics/CumulativeCount
@2.1.0
+#<init>()V
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V
+#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@2.4.0
-###org/apache/kafka/streams/processor/internals/metrics/CumulativeCount

+###org/apache/kafka/streams/kstream/internals/KeyValueStoreMaterializer
@1.0.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)V
+#materialize()Lorg/apache/kafka/streams/state/StoreBuilder;
@2.3.0
-###org/apache/kafka/streams/kstream/internals/KeyValueStoreMaterializer

+###org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessor
@2.1.0
+#<init>(Lorg/apache/kafka/streams/kstream/internals/suppress/SuppressedInternal;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/internals/FullChangeSerde;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
+#process(Ljava/lang/Object;Lorg/apache/kafka/streams/kstream/internals/Change;)V
+#close()V
+#process(Ljava/lang/Object;Ljava/lang/Object;)V
@2.2.1
+#<init>(Lorg/apache/kafka/streams/kstream/internals/suppress/SuppressedInternal;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/streams/kstream/internals/suppress/SuppressedInternal;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/kstream/internals/FullChangeSerde;)V
@2.3.0
-###org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessor

+###org/apache/kafka/streams/state/internals/WrappedStateStore$AbstractWrappedStateStore
@0.10.2.0
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#name()Ljava/lang/String;
+#persistent()Z
+#isOpen()Z
+#inner()Lorg/apache/kafka/streams/processor/StateStore;
+#flush()V
+#close()V
@0.11.0.0
-###org/apache/kafka/streams/state/internals/WrappedStateStore$AbstractWrappedStateStore

+###org/apache/kafka/streams/processor/internals/WrappedBatchingStateRestoreCallback
@1.0.0
+#<init>(Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
+#restoreAll(Ljava/util/Collection;)V
+#restore([B[B)V
@2.1.0
-###org/apache/kafka/streams/processor/internals/WrappedBatchingStateRestoreCallback

+###org/apache/kafka/streams/state/internals/MeteredKeyValueBytesStore
@1.0.0
+#<init>(Lorg/apache/kafka/streams/state/KeyValueStore;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
+#init(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
+#approximateNumEntries()J
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/List;)V
+#delete(Ljava/lang/Object;)Ljava/lang/Object;
+#range(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
+#all()Lorg/apache/kafka/streams/state/KeyValueIterator;
+#flush()V
@2.1.0
-###org/apache/kafka/streams/state/internals/MeteredKeyValueBytesStore

+###org/apache/kafka/streams/Consumed
@1.0.0
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/streams/Topology$AutoOffsetReset;)Lorg/apache/kafka/streams/Consumed;
+#with(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/Consumed;
+#with(Lorg/apache/kafka/streams/processor/TimestampExtractor;)Lorg/apache/kafka/streams/Consumed;
+#with(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;)Lorg/apache/kafka/streams/Consumed;
+#withKeySerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/Consumed;
+#withValueSerde(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/Consumed;
+#withTimestampExtractor(Lorg/apache/kafka/streams/processor/TimestampExtractor;)Lorg/apache/kafka/streams/Consumed;
+#withOffsetResetPolicy(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;)Lorg/apache/kafka/streams/Consumed;
@2.0.0
-###org/apache/kafka/streams/Consumed

+###org/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKey
@1.1.0
+#punctuate(J)Ljava/lang/Object;
@2.0.0
-###org/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKey

+###org/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKeySupplier
@1.1.0
+#get()Lorg/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKey;
@2.0.0
-###org/apache/kafka/streams/kstream/internals/InternalValueTransformerWithKeySupplier

+###org/apache/kafka/streams/processor/internals/ThreadMetadataProvider
@1.0.0
+#standbyTasks()Ljava/util/Map;
+#activeTasks()Ljava/util/Map;
+#getPartitionsByHostState()Ljava/util/Map;
+#clusterMetadata()Lorg/apache/kafka/common/Cluster;
+#close()V
@1.1.0
-###org/apache/kafka/streams/processor/internals/ThreadMetadataProvider

+###org/apache/kafka/streams/state/internals/TimestampedBytesStore
@2.2.0
+#convertToTimestampedFormat([B)[B
@2.3.0
-###org/apache/kafka/streams/state/internals/TimestampedBytesStore

+###org/apache/kafka/streams/kstream/internals/graph/WindowedStreamProcessorNode
@3.4.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/streams/kstream/internals/StreamStreamJoinUtil
@3.4.0
+#skipRecord(Lorg/apache/kafka/streams/processor/api/Record;Lorg/slf4j/Logger;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/streams/processor/api/ProcessorContext;)Z

+###org/apache/kafka/streams/processor/internals/tasks/TaskExecutor
@3.4.0
+#name()Ljava/lang/String;
+#start()V
+#shutdown(Ljava/time/Duration;)V
+#currentTask()Lorg/apache/kafka/streams/processor/internals/ReadOnlyTask;
+#unassign()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManager
@3.4.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/TasksRegistry;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/tasks/TaskExecutorCreator;)V
+#assignNextTask(Lorg/apache/kafka/streams/processor/internals/tasks/TaskExecutor;)Lorg/apache/kafka/streams/processor/internals/StreamTask;
+#unassignTask(Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/processor/internals/tasks/TaskExecutor;)V
+#lockTasks(Ljava/util/Set;)Lorg/apache/kafka/common/KafkaFuture;
+#lockAllTasks()Lorg/apache/kafka/common/KafkaFuture;
+#unlockTasks(Ljava/util/Set;)V
+#unlockAllTasks()V
+#add(Ljava/util/Set;)V
+#remove(Lorg/apache/kafka/streams/processor/TaskId;)V
+#getTasks()Ljava/util/Set;

+###org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutor
@3.4.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/tasks/TaskManager;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
+#name()Ljava/lang/String;
+#start()V
+#shutdown(Ljava/time/Duration;)V
+#currentTask()Lorg/apache/kafka/streams/processor/internals/ReadOnlyTask;
+#unassign()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/streams/processor/internals/tasks/TaskManager
@3.4.0
+#assignNextTask(Lorg/apache/kafka/streams/processor/internals/tasks/TaskExecutor;)Lorg/apache/kafka/streams/processor/internals/StreamTask;
+#unassignTask(Lorg/apache/kafka/streams/processor/internals/StreamTask;Lorg/apache/kafka/streams/processor/internals/tasks/TaskExecutor;)V
+#lockTasks(Ljava/util/Set;)Lorg/apache/kafka/common/KafkaFuture;
+#lockAllTasks()Lorg/apache/kafka/common/KafkaFuture;
+#unlockTasks(Ljava/util/Set;)V
+#unlockAllTasks()V
+#add(Ljava/util/Set;)V
+#remove(Lorg/apache/kafka/streams/processor/TaskId;)V
+#getTasks()Ljava/util/Set;

+###org/apache/kafka/streams/processor/internals/tasks/TaskExecutorCreator
@3.4.0
+#create(Lorg/apache/kafka/streams/processor/internals/tasks/TaskManager;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/streams/processor/internals/tasks/TaskExecutor;

+###org/apache/kafka/streams/processor/internals/ReadOnlyTask
@3.4.0
+#<init>(Lorg/apache/kafka/streams/processor/internals/Task;)V
+#id()Lorg/apache/kafka/streams/processor/TaskId;
+#isActive()Z
+#inputPartitions()Ljava/util/Set;
+#changelogPartitions()Ljava/util/Set;
+#state()Lorg/apache/kafka/streams/processor/internals/Task$State;
+#commitRequested()Z
+#needsInitializationOrRestoration()Z
+#initializeIfNeeded()V
+#addPartitionsForOffsetReset(Ljava/util/Set;)V
+#completeRestoration(Ljava/util/function/Consumer;)V
+#suspend()V
+#resume()V
+#closeDirty()V
+#closeClean()V
+#updateInputPartitions(Ljava/util/Set;Ljava/util/Map;)V
+#maybeCheckpoint(Z)V
+#markChangelogAsCorrupted(Ljava/util/Collection;)V
+#revive()V
+#prepareRecycle()V
+#addRecords(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Iterable;)V
+#process(J)Z
+#recordProcessBatchTime(J)V
+#recordProcessTimeRatioAndBufferSize(JJ)V
+#maybePunctuateStreamTime()Z
+#maybePunctuateSystemTime()Z
+#prepareCommit()Ljava/util/Map;
+#postCommit(Z)V
+#purgeableOffsets()Ljava/util/Map;
+#maybeInitTaskTimeoutOrThrow(JLjava/lang/Exception;)V
+#clearTaskTimeout()V
+#commitNeeded()Z
+#getStore(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
+#changelogOffsets()Ljava/util/Map;
+#committedOffsets()Ljava/util/Map;
+#highWaterMark()Ljava/util/Map;
+#timeCurrentIdlingStarted()Ljava/util/Optional;
+#stateManager()Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;

+###org/apache/kafka/streams/processor/internals/PendingUpdateAction
@3.4.0
+#createUpdateInputPartition(Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/PendingUpdateAction;
+#createRecycleTask(Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/PendingUpdateAction;
+#createSuspend()Lorg/apache/kafka/streams/processor/internals/PendingUpdateAction;
+#createCloseDirty()Lorg/apache/kafka/streams/processor/internals/PendingUpdateAction;
+#createCloseClean()Lorg/apache/kafka/streams/processor/internals/PendingUpdateAction;
+#getInputPartitions()Ljava/util/Set;
+#getAction()Lorg/apache/kafka/streams/processor/internals/PendingUpdateAction$Action;

+###org/apache/kafka/streams/processor/internals/TasksRegistry
@3.4.0
+#drainPendingActiveTasksForTopologies(Ljava/util/Set;)Ljava/util/Map;
+#drainPendingStandbyTasksForTopologies(Ljava/util/Set;)Ljava/util/Map;
+#addPendingActiveTasksToCreate(Ljava/util/Map;)V
+#addPendingStandbyTasksToCreate(Ljava/util/Map;)V
+#clearPendingTasksToCreate()V
+#removePendingTaskToRecycle(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/util/Set;
+#addPendingTaskToRecycle(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)V
+#removePendingTaskToUpdateInputPartitions(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/util/Set;
+#addPendingTaskToUpdateInputPartitions(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)V
+#removePendingTaskToCloseDirty(Lorg/apache/kafka/streams/processor/TaskId;)Z
+#addPendingTaskToCloseDirty(Lorg/apache/kafka/streams/processor/TaskId;)V
+#removePendingTaskToCloseClean(Lorg/apache/kafka/streams/processor/TaskId;)Z
+#addPendingTaskToCloseClean(Lorg/apache/kafka/streams/processor/TaskId;)V
+#drainPendingTaskToInit()Ljava/util/Set;
+#addPendingTaskToInit(Ljava/util/Collection;)V
+#removePendingActiveTaskToSuspend(Lorg/apache/kafka/streams/processor/TaskId;)Z
+#addPendingActiveTaskToSuspend(Lorg/apache/kafka/streams/processor/TaskId;)V
+#addActiveTasks(Ljava/util/Collection;)V
+#addStandbyTasks(Ljava/util/Collection;)V
+#addTask(Lorg/apache/kafka/streams/processor/internals/Task;)V
+#removeTask(Lorg/apache/kafka/streams/processor/internals/Task;)V
+#replaceActiveWithStandby(Lorg/apache/kafka/streams/processor/internals/StandbyTask;)V
+#replaceStandbyWithActive(Lorg/apache/kafka/streams/processor/internals/StreamTask;)V
+#updateActiveTaskInputPartitions(Lorg/apache/kafka/streams/processor/internals/Task;Ljava/util/Set;)Z
+#clear()V
+#activeTasksForInputPartition(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/streams/processor/internals/Task;
+#task(Lorg/apache/kafka/streams/processor/TaskId;)Lorg/apache/kafka/streams/processor/internals/Task;
+#tasks(Ljava/util/Collection;)Ljava/util/Collection;
+#activeTasks()Ljava/util/Collection;
+#allTasks()Ljava/util/Set;
+#allTasksPerId()Ljava/util/Map;
+#allTaskIds()Ljava/util/Set;
+#contains(Lorg/apache/kafka/streams/processor/TaskId;)Z
