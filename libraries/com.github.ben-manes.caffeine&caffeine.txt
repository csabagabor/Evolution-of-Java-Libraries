
+###com/github/benmanes/caffeine/base/UnsafeAccess
@1.0.0
+#objectFieldOffset(Ljava/lang/Class;Ljava/lang/String;)J
@3.0.0
-###com/github/benmanes/caffeine/base/UnsafeAccess

+###com/github/benmanes/caffeine/cache/AsyncLoadingCache
@1.0.0
+#getIfPresent(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
+#get(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
+#get(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#getAll(Ljava/lang/Iterable;)Ljava/util/concurrent/CompletableFuture;
+#put(Ljava/lang/Object;Ljava/util/concurrent/CompletableFuture;)V
+#synchronous()Lcom/github/benmanes/caffeine/cache/LoadingCache;
@2.7.0
+#asMap()Ljava/util/concurrent/ConcurrentMap;
+#synchronous()Lcom/github/benmanes/caffeine/cache/Cache;
-#getIfPresent(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
-#get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
-#get(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
-#put(Ljava/lang/Object;Ljava/util/concurrent/CompletableFuture;)V
@3.0.0
-#asMap()Ljava/util/concurrent/ConcurrentMap;

+###com/github/benmanes/caffeine/cache/Cache
@1.0.0
+#getIfPresent(Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
+#getAllPresent(Ljava/lang/Iterable;)Ljava/util/Map;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#invalidate(Ljava/lang/Object;)V
+#invalidateAll(Ljava/lang/Iterable;)V
+#invalidateAll()V
+#estimatedSize()J
+#stats()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
+#asMap()Ljava/util/concurrent/ConcurrentMap;
+#cleanUp()V
+#policy()Lcom/github/benmanes/caffeine/cache/Policy;
@2.8.0
+#getAll(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/util/Map;

+###com/github/benmanes/caffeine/cache/CacheLoader
@1.0.0
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#asyncLoad(Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#asyncLoadAll(Ljava/lang/Iterable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#reload(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@2.2.0
+#asyncReload(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
@3.0.0
+#loadAll(Ljava/util/Set;)Ljava/util/Map;
+#asyncLoadAll(Ljava/util/Set;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#bulk(Ljava/util/function/Function;)Lcom/github/benmanes/caffeine/cache/CacheLoader;
-#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
-#asyncLoadAll(Ljava/lang/Iterable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;

+###com/github/benmanes/caffeine/cache/CacheWriter
@1.3.0
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
+#disabledWriter()Lcom/github/benmanes/caffeine/cache/CacheWriter;
@3.0.0
-###com/github/benmanes/caffeine/cache/CacheWriter

+###com/github/benmanes/caffeine/cache/Caffeine
@1.0.0
+#newBuilder()Lcom/github/benmanes/caffeine/cache/Caffeine;
+#initialCapacity(I)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#executor(Ljava/util/concurrent/Executor;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#maximumSize(J)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#maximumWeight(J)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#weigher(Lcom/github/benmanes/caffeine/cache/Weigher;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#weakKeys()Lcom/github/benmanes/caffeine/cache/Caffeine;
+#weakValues()Lcom/github/benmanes/caffeine/cache/Caffeine;
+#softValues()Lcom/github/benmanes/caffeine/cache/Caffeine;
+#expireAfterWrite(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#expireAfterAccess(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#refreshAfterWrite(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#ticker(Lcom/github/benmanes/caffeine/cache/Ticker;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#removalListener(Lcom/github/benmanes/caffeine/cache/RemovalListener;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#recordStats()Lcom/github/benmanes/caffeine/cache/Caffeine;
+#name(Ljava/util/function/Supplier;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#build()Lcom/github/benmanes/caffeine/cache/Cache;
+#build(Lcom/github/benmanes/caffeine/cache/CacheLoader;)Lcom/github/benmanes/caffeine/cache/LoadingCache;
+#buildAsync(Lcom/github/benmanes/caffeine/cache/CacheLoader;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
+#toString()Ljava/lang/String;
@1.3.0
+#writer(Lcom/github/benmanes/caffeine/cache/CacheWriter;)Lcom/github/benmanes/caffeine/cache/Caffeine;
@2.0.0
+#recordStats(Ljava/util/function/Supplier;)Lcom/github/benmanes/caffeine/cache/Caffeine;
-#name(Ljava/util/function/Supplier;)Lcom/github/benmanes/caffeine/cache/Caffeine;
@2.1.0
+#from(Lcom/github/benmanes/caffeine/cache/CaffeineSpec;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#from(Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/Caffeine;
@2.2.0
+#buildAsync(Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
@2.5.0
+#expireAfter(Lcom/github/benmanes/caffeine/cache/Expiry;)Lcom/github/benmanes/caffeine/cache/Caffeine;
@2.6.2
+#expireAfterWrite(Ljava/time/Duration;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#expireAfterAccess(Ljava/time/Duration;)Lcom/github/benmanes/caffeine/cache/Caffeine;
+#refreshAfterWrite(Ljava/time/Duration;)Lcom/github/benmanes/caffeine/cache/Caffeine;
@2.7.0
+#buildAsync()Lcom/github/benmanes/caffeine/cache/AsyncCache;
@2.8.0
+#scheduler(Lcom/github/benmanes/caffeine/cache/Scheduler;)Lcom/github/benmanes/caffeine/cache/Caffeine;
@2.9.0
+#evictionListener(Lcom/github/benmanes/caffeine/cache/RemovalListener;)Lcom/github/benmanes/caffeine/cache/Caffeine;
*#writer(Lcom/github/benmanes/caffeine/cache/CacheWriter;)Lcom/github/benmanes/caffeine/cache/Caffeine;[deprecated]
@3.0.0
-#writer(Lcom/github/benmanes/caffeine/cache/CacheWriter;)Lcom/github/benmanes/caffeine/cache/Caffeine;[deprecated]

+###com/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator
@2.0.0
+#peek()Ljava/lang/Object;
+#concat(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;
+#comparing(Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;Ljava/util/Comparator;)Lcom/github/benmanes/caffeine/cache/LinkedDeque$PeekingIterator;

+###com/github/benmanes/caffeine/cache/LoadingCache
@1.0.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#refresh(Ljava/lang/Object;)V
@3.0.0
+#refresh(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#refreshAll(Ljava/lang/Iterable;)Ljava/util/concurrent/CompletableFuture;
-#refresh(Ljava/lang/Object;)V

+###com/github/benmanes/caffeine/cache/Policy$Eviction
@1.0.0
+#isWeighted()Z
+#weightedSize()Ljava/util/OptionalLong;
+#getMaximum()J
+#setMaximum(J)V
+#coldest(I)Ljava/util/Map;
+#hottest(I)Ljava/util/Map;
@2.3.4
+#weightOf(Ljava/lang/Object;)Ljava/util/OptionalInt;
@3.0.4
+#coldestWeighted(J)Ljava/util/Map;
+#hottestWeighted(J)Ljava/util/Map;
@3.0.6
+#coldest(Ljava/util/function/Function;)Ljava/lang/Object;
+#hottest(Ljava/util/function/Function;)Ljava/lang/Object;

+###com/github/benmanes/caffeine/cache/Policy$Expiration
@1.0.0
+#ageOf(Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;)Ljava/util/OptionalLong;
+#getExpiresAfter(Ljava/util/concurrent/TimeUnit;)J
+#setExpiresAfter(JLjava/util/concurrent/TimeUnit;)V
+#oldest(I)Ljava/util/Map;
+#youngest(I)Ljava/util/Map;
@2.6.2
+#ageOf(Ljava/lang/Object;)Ljava/util/Optional;
+#getExpiresAfter()Ljava/time/Duration;
+#setExpiresAfter(Ljava/time/Duration;)V
@3.0.0
-###com/github/benmanes/caffeine/cache/Policy$Expiration

+###com/github/benmanes/caffeine/cache/Policy
@1.0.0
+#eviction()Ljava/util/Optional;
+#expireAfterAccess()Ljava/util/Optional;
+#expireAfterWrite()Ljava/util/Optional;
+#refreshAfterWrite()Ljava/util/Optional;
@2.0.0
+#isRecordingStats()Z
@2.5.0
+#expireVariably()Ljava/util/Optional;
@2.8.3
+#getIfPresentQuietly(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0
+#refreshes()Ljava/util/Map;
@3.0.6
+#getEntryIfPresentQuietly(Ljava/lang/Object;)Lcom/github/benmanes/caffeine/cache/Policy$CacheEntry;

+###com/github/benmanes/caffeine/cache/RemovalCause
@1.0.0
+#values()[Lcom/github/benmanes/caffeine/cache/RemovalCause;
+#valueOf(Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/RemovalCause;
@1.3.0
+#wasEvicted()Z

+###com/github/benmanes/caffeine/cache/RemovalListener
@1.0.0
+#onRemoval(Lcom/github/benmanes/caffeine/cache/RemovalNotification;)V
@2.0.0
+#onRemoval(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
-#onRemoval(Lcom/github/benmanes/caffeine/cache/RemovalNotification;)V

+###com/github/benmanes/caffeine/cache/stats/CacheStats
@1.0.0
+#<init>(JJJJJJ)V
+#requestCount()J
+#hitCount()J
+#hitRate()D
+#missCount()J
+#missRate()D
+#loadCount()J
+#loadSuccessCount()J
+#loadFailureCount()J
+#loadFailureRate()D
+#totalLoadTime()J
+#averageLoadPenalty()D
+#evictionCount()J
+#minus(Lcom/github/benmanes/caffeine/cache/stats/CacheStats;)Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
+#plus(Lcom/github/benmanes/caffeine/cache/stats/CacheStats;)Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.3.0
*#<init>(JJJJJJ)V[deprecated]
+#<init>(JJJJJJJ)V
+#empty()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
+#evictionWeight()J
@2.9.0
*#<init>(JJJJJJJ)V[deprecated]
+#of(JJJJJJJ)Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
@3.0.0
-#<init>(JJJJJJ)V[deprecated]
-#<init>(JJJJJJJ)V[deprecated]

+###com/github/benmanes/caffeine/cache/stats/ConcurrentStatsCounter
@1.0.0
+#<init>()V
+#recordHits(I)V
+#recordMisses(I)V
+#recordLoadSuccess(J)V
+#recordLoadFailure(J)V
+#recordEviction()V
+#snapshot()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
+#incrementBy(Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;)V
+#toString()Ljava/lang/String;
@2.3.0
+#recordEviction(I)V
@2.8.0
*#recordEviction()V[deprecated]
*#recordEviction(I)V[deprecated]
+#recordEviction(ILcom/github/benmanes/caffeine/cache/RemovalCause;)V
@3.0.0
-#recordEviction()V[deprecated]
-#recordEviction(I)V[deprecated]

+###com/github/benmanes/caffeine/cache/stats/StatsCounter
@1.0.0
+#recordHits(I)V
+#recordMisses(I)V
+#recordLoadSuccess(J)V
+#recordLoadFailure(J)V
+#recordEviction()V
+#snapshot()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
@2.0.0
+#disabledStatsCounter()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
+#guardedStatsCounter(Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;)Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
@2.3.0
*#recordEviction()V[deprecated]
+#recordEviction(I)V
@2.8.0
*#recordEviction(I)V[deprecated]
+#recordEviction(ILcom/github/benmanes/caffeine/cache/RemovalCause;)V
@3.0.0
-#recordEviction()V[deprecated]
-#recordEviction(I)V[deprecated]

+###com/github/benmanes/caffeine/cache/Ticker
@1.0.0
+#read()J
+#systemTicker()Lcom/github/benmanes/caffeine/cache/Ticker;
+#disabledTicker()Lcom/github/benmanes/caffeine/cache/Ticker;

+###com/github/benmanes/caffeine/cache/Weigher
@1.0.0
+#weigh(Ljava/lang/Object;Ljava/lang/Object;)I
+#singleton()Lcom/github/benmanes/caffeine/cache/Weigher;
+#bounded(Lcom/github/benmanes/caffeine/cache/Weigher;)Lcom/github/benmanes/caffeine/cache/Weigher;
@2.0.0
+#singletonWeigher()Lcom/github/benmanes/caffeine/cache/Weigher;
+#boundedWeigher(Lcom/github/benmanes/caffeine/cache/Weigher;)Lcom/github/benmanes/caffeine/cache/Weigher;
-#singleton()Lcom/github/benmanes/caffeine/cache/Weigher;
-#bounded(Lcom/github/benmanes/caffeine/cache/Weigher;)Lcom/github/benmanes/caffeine/cache/Weigher;

+###com/github/benmanes/caffeine/ConcurrentLinkedStack
@1.1.0
+#optimistic()Lcom/github/benmanes/caffeine/ConcurrentLinkedStack;
+#linearizable()Lcom/github/benmanes/caffeine/ConcurrentLinkedStack;
+#isEmpty()Z
+#size()I
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#peek()Ljava/lang/Object;
+#pop()Ljava/lang/Object;
+#push(Ljava/lang/Object;)V
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#remove(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#asLifoQueue()Ljava/util/Queue;
@2.1.0
-###com/github/benmanes/caffeine/ConcurrentLinkedStack

+###com/github/benmanes/caffeine/SingleConsumerQueue
@1.0.0
+#<init>(Ljava/util/Collection;)V
+#<init>()V
+#isEmpty()Z
+#size()I
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#peek()Ljava/lang/Object;
+#element()Ljava/lang/Object;
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#remove()Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#toString()Ljava/lang/String;
@1.1.0
+#optimistic()Lcom/github/benmanes/caffeine/SingleConsumerQueue;
+#linearizable()Lcom/github/benmanes/caffeine/SingleConsumerQueue;
-#<init>(Ljava/util/Collection;)V
-#<init>()V
-#containsAll(Ljava/util/Collection;)Z
-#element()Ljava/lang/Object;
-#remove()Ljava/lang/Object;
-#remove(Ljava/lang/Object;)Z
-#removeAll(Ljava/util/Collection;)Z
-#retainAll(Ljava/util/Collection;)Z
-#toArray()[Ljava/lang/Object;
-#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
-#toString()Ljava/lang/String;
@1.2.0
-#clear()V
@3.0.0
-###com/github/benmanes/caffeine/SingleConsumerQueue

+###com/github/benmanes/caffeine/cache/AsyncCache
@2.7.0
+#getIfPresent(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
+#get(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
+#put(Ljava/lang/Object;Ljava/util/concurrent/CompletableFuture;)V
+#asMap()Ljava/util/concurrent/ConcurrentMap;
+#synchronous()Lcom/github/benmanes/caffeine/cache/Cache;
@2.8.0
+#getAll(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
+#getAll(Ljava/lang/Iterable;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;

+###com/github/benmanes/caffeine/cache/AsyncCacheLoader
@2.2.0
+#asyncLoad(Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#asyncLoadAll(Ljava/lang/Iterable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#asyncReload(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
@3.0.0
+#asyncLoadAll(Ljava/util/Set;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#bulk(Ljava/util/function/Function;)Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
+#bulk(Ljava/util/function/BiFunction;)Lcom/github/benmanes/caffeine/cache/AsyncCacheLoader;
-#asyncLoadAll(Ljava/lang/Iterable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;

+###com/github/benmanes/caffeine/cache/CaffeineSpec
@2.1.0
+#parse(Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/CaffeineSpec;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toParsableString()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###com/github/benmanes/caffeine/cache/Expiry
@2.5.0
+#expireAfterCreate(Ljava/lang/Object;Ljava/lang/Object;J)J
+#expireAfterUpdate(Ljava/lang/Object;Ljava/lang/Object;JJ)J
+#expireAfterRead(Ljava/lang/Object;Ljava/lang/Object;JJ)J

+###com/github/benmanes/caffeine/cache/LocalAsyncCache$AbstractCacheView
@2.7.0
+#<init>()V
+#getIfPresent(Ljava/lang/Object;)Ljava/lang/Object;
+#getAllPresent(Ljava/lang/Iterable;)Ljava/util/Map;
+#get(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putAll(Ljava/util/Map;)V
+#invalidate(Ljava/lang/Object;)V
+#invalidateAll(Ljava/lang/Iterable;)V
+#invalidateAll()V
+#estimatedSize()J
+#stats()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
+#cleanUp()V
+#policy()Lcom/github/benmanes/caffeine/cache/Policy;
+#asMap()Ljava/util/concurrent/ConcurrentMap;
@2.8.0
+#getAll(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/util/Map;

+###com/github/benmanes/caffeine/cache/LocalAsyncCache$AsMapView
@2.7.0
+#isEmpty()Z
+#size()I
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
@3.0.6
+#putAll(Ljava/util/Map;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###com/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncAsMapView
@2.7.0
+#isEmpty()Z
+#size()I
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#putIfAbsent(Ljava/lang/Object;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
+#put(Ljava/lang/Object;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
+#putAll(Ljava/util/Map;)V
+#replace(Ljava/lang/Object;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
+#replace(Ljava/lang/Object;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)Z
+#remove(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
+#computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
+#merge(Ljava/lang/Object;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@3.1.2
+#forEach(Ljava/util/function/BiConsumer;)V

+###com/github/benmanes/caffeine/cache/LocalAsyncCache$AsyncBulkCompleter
@2.8.0
+#accept(Ljava/util/Map;Ljava/lang/Throwable;)V
+#accept(Ljava/lang/Object;Ljava/lang/Object;)V

+###com/github/benmanes/caffeine/cache/LocalAsyncCache$CacheView
@2.7.0

+###com/github/benmanes/caffeine/cache/Policy$VarExpiration
@2.5.0
+#getExpiresAfter(Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;)Ljava/util/OptionalLong;
+#setExpiresAfter(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
+#oldest(I)Ljava/util/Map;
+#youngest(I)Ljava/util/Map;
@2.6.0
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
@2.6.2
+#getExpiresAfter(Ljava/lang/Object;)Ljava/util/Optional;
+#setExpiresAfter(Ljava/lang/Object;Ljava/time/Duration;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)V
@3.0.0
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Object;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Z
-#put(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
-#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)V
@3.0.6
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/time/Duration;)Ljava/lang/Object;
+#oldest(Ljava/util/function/Function;)Ljava/lang/Object;
+#youngest(Ljava/util/function/Function;)Ljava/lang/Object;

+###com/github/benmanes/caffeine/cache/Scheduler
@2.8.0
+#schedule(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
+#disabledScheduler()Lcom/github/benmanes/caffeine/cache/Scheduler;
+#systemScheduler()Lcom/github/benmanes/caffeine/cache/Scheduler;
+#forScheduledExecutorService(Ljava/util/concurrent/ScheduledExecutorService;)Lcom/github/benmanes/caffeine/cache/Scheduler;
+#guardedScheduler(Lcom/github/benmanes/caffeine/cache/Scheduler;)Lcom/github/benmanes/caffeine/cache/Scheduler;

+###com/github/benmanes/caffeine/cache/Policy$CacheEntry
@3.0.6
+#weight()I
+#expiresAt()J
+#expiresAfter()Ljava/time/Duration;
+#refreshableAt()J
+#refreshableAfter()Ljava/time/Duration;
+#snapshotAt()J

+###com/github/benmanes/caffeine/cache/Policy$FixedExpiration
@3.0.0
+#ageOf(Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;)Ljava/util/OptionalLong;
+#ageOf(Ljava/lang/Object;)Ljava/util/Optional;
+#getExpiresAfter(Ljava/util/concurrent/TimeUnit;)J
+#getExpiresAfter()Ljava/time/Duration;
+#setExpiresAfter(JLjava/util/concurrent/TimeUnit;)V
+#setExpiresAfter(Ljava/time/Duration;)V
+#oldest(I)Ljava/util/Map;
+#youngest(I)Ljava/util/Map;
@3.0.6
+#oldest(Ljava/util/function/Function;)Ljava/lang/Object;
+#youngest(Ljava/util/function/Function;)Ljava/lang/Object;

+###com/github/benmanes/caffeine/cache/Policy$FixedRefresh
@3.0.0
+#ageOf(Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;)Ljava/util/OptionalLong;
+#ageOf(Ljava/lang/Object;)Ljava/util/Optional;
+#getRefreshesAfter(Ljava/util/concurrent/TimeUnit;)J
+#getRefreshesAfter()Ljava/time/Duration;
+#setRefreshesAfter(JLjava/util/concurrent/TimeUnit;)V
+#setRefreshesAfter(Ljava/time/Duration;)V

+###com/github/benmanes/caffeine/cache/RemovalNotification
@1.0.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
+#getCause()Lcom/github/benmanes/caffeine/cache/RemovalCause;
+#wasEvicted()Z
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.0.0
-###com/github/benmanes/caffeine/cache/RemovalNotification

+###com/github/benmanes/caffeine/cache/stats/DisabledStatsCounter
@1.0.0
+#values()[Lcom/github/benmanes/caffeine/cache/stats/DisabledStatsCounter;
+#valueOf(Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/stats/DisabledStatsCounter;
+#get()Lcom/github/benmanes/caffeine/cache/stats/StatsCounter;
+#recordHits(I)V
+#recordMisses(I)V
+#recordLoadSuccess(J)V
+#recordLoadFailure(J)V
+#recordEviction()V
+#snapshot()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
+#toString()Ljava/lang/String;
@2.0.0
-###com/github/benmanes/caffeine/cache/stats/DisabledStatsCounter

+###com/github/benmanes/caffeine/locks/NonReentrantLock
@1.0.0
+#<init>()V
+#lock()V
+#lockInterruptibly()V
+#tryLock()Z
+#tryLock(JLjava/util/concurrent/TimeUnit;)Z
+#unlock()V
+#newCondition()Ljava/util/concurrent/locks/Condition;
+#isHeldByCurrentThread()Z
+#isLocked()Z
+#hasQueuedThreads()Z
+#hasQueuedThread(Ljava/lang/Thread;)Z
+#getQueueLength()I
+#hasWaiters(Ljava/util/concurrent/locks/Condition;)Z
+#getWaitQueueLength(Ljava/util/concurrent/locks/Condition;)I
+#toString()Ljava/lang/String;
@2.0.0
-###com/github/benmanes/caffeine/locks/NonReentrantLock

+###com/github/benmanes/caffeine/cache/Interner
@3.1.0
+#intern(Ljava/lang/Object;)Ljava/lang/Object;
+#newStrongInterner()Lcom/github/benmanes/caffeine/cache/Interner;
+#newWeakInterner()Lcom/github/benmanes/caffeine/cache/Interner;

+###com/github/benmanes/caffeine/cache/NodeFactory$DeadStrongKey
@3.1.1
+#<init>()V

+###com/github/benmanes/caffeine/cache/NodeFactory$DeadWeakKey
@3.1.1
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getKeyReference()Ljava/lang/Object;

+###com/github/benmanes/caffeine/cache/NodeFactory$RetiredStrongKey
@3.1.1
+#<init>()V

+###com/github/benmanes/caffeine/cache/NodeFactory$RetiredWeakKey
@3.1.1
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getKeyReference()Ljava/lang/Object;

+###com/github/benmanes/caffeine/cache/tracing/TraceEvent$Action
@1.0.0
+#values()[Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent$Action;
+#valueOf(Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent$Action;
@1.3.0
-###com/github/benmanes/caffeine/cache/tracing/TraceEvent$Action

+###com/github/benmanes/caffeine/cache/tracing/TraceEvent
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/String;JLcom/github/benmanes/caffeine/cache/tracing/TraceEvent$Action;IIJ)V
+#name()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#id()J
+#setId(J)V
+#action()Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent$Action;
+#setAction(Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent$Action;)V
+#keyHash()I
+#setKeyHash(I)V
+#weight()I
+#setWeight(I)V
+#timestamp()J
+#setTimestamp(J)V
+#copyFrom(Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;)V
+#fromTextRecord([Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;
+#appendTextRecord(Ljava/lang/Appendable;)V
+#fromBinaryRecord(Ljava/io/DataInputStream;)Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;
+#appendBinaryRecord(Ljava/io/DataOutputStream;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.2.0
*#fromTextRecord([Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;[deprecated]
*#appendTextRecord(Ljava/lang/Appendable;)V[deprecated]
*#fromBinaryRecord(Ljava/io/DataInputStream;)Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;[deprecated]
*#appendBinaryRecord(Ljava/io/DataOutputStream;)V[deprecated]
@1.3.0
-###com/github/benmanes/caffeine/cache/tracing/TraceEvent

+###com/github/benmanes/caffeine/cache/tracing/Tracer
@1.0.0
+#register(Ljava/lang/String;)J
+#recordRead(JLjava/lang/Object;)V
+#recordWrite(JLjava/lang/Object;I)V
+#recordDelete(JLjava/lang/Object;)V
+#isEnabled()Z
+#disabled()Lcom/github/benmanes/caffeine/cache/tracing/Tracer;
+#getDefault()Lcom/github/benmanes/caffeine/cache/tracing/Tracer;
@1.3.0
-###com/github/benmanes/caffeine/cache/tracing/Tracer

+###com/github/benmanes/caffeine/cache/tracing/TracerIdGenerator
@1.0.0
+#<init>()V
+#nextId()J
@1.3.0
-###com/github/benmanes/caffeine/cache/tracing/TracerIdGenerator

+###com/github/benmanes/caffeine/cache/tracing/TraceEventFormats
@1.2.0
+#readTextRecord([Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;
+#writeTextRecord(Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;Ljava/lang/Appendable;)V
+#readBinaryRecord(Ljava/io/DataInputStream;)Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;
+#writeBinaryRecord(Lcom/github/benmanes/caffeine/cache/tracing/TraceEvent;Ljava/io/DataOutputStream;)V
@1.3.0
-###com/github/benmanes/caffeine/cache/tracing/TraceEventFormats

+###com/github/benmanes/caffeine/EliminationStack
@1.0.0
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#isEmpty()Z
+#size()I
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#peek()Ljava/lang/Object;
+#pop()Ljava/lang/Object;
+#push(Ljava/lang/Object;)V
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#asLifoQueue()Ljava/util/Queue;
@1.1.0
-###com/github/benmanes/caffeine/EliminationStack
