
+###org/springframework/data/mongodb/CannotGetMongoDbConnectionException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[C)V
+#getUsername()Ljava/lang/String;
+#getPassword()[C
+#getDatabase()Ljava/lang/String;
@1.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;)V
+#getCredentials()Lorg/springframework/data/authentication/UserCredentials;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[C)V
-#getUsername()Ljava/lang/String;
-#getPassword()[C
@2.2.0.RELEASE
-###org/springframework/data/mongodb/CannotGetMongoDbConnectionException

+###org/springframework/data/mongodb/MongoDbFactory
@1.0.0.RELEASE
+#getDb()Lcom/mongodb/DB;
+#getDb(Ljava/lang/String;)Lcom/mongodb/DB;
@1.4.0.RELEASE
+#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
@2.0.0.RELEASE
+#getDb()Lcom/mongodb/client/MongoDatabase;
+#getDb(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;
+#getLegacyDb()Lcom/mongodb/DB;
-#getDb()Lcom/mongodb/DB;
-#getDb(Ljava/lang/String;)Lcom/mongodb/DB;
@2.1.0.RELEASE
*#getLegacyDb()Lcom/mongodb/DB;[deprecated]
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;
+#getSession(Lcom/mongodb/ClientSessionOptions;)Lcom/mongodb/client/ClientSession;
+#withSession(Lcom/mongodb/ClientSessionOptions;)Lorg/springframework/data/mongodb/MongoDbFactory;
+#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/MongoDbFactory;
@2.1.3.RELEASE
+#isTransactionActive()Z
@3.0.0.RELEASE
*#getDb()Lcom/mongodb/client/MongoDatabase;[deprecated]
*#getDb(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;[deprecated]
-#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
-#getLegacyDb()Lcom/mongodb/DB;[deprecated]
-#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;
-#getSession(Lcom/mongodb/ClientSessionOptions;)Lcom/mongodb/client/ClientSession;
-#withSession(Lcom/mongodb/ClientSessionOptions;)Lorg/springframework/data/mongodb/MongoDbFactory;
-#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/MongoDbFactory;
-#isTransactionActive()Z
@4.0.0
-###org/springframework/data/mongodb/MongoDbFactory

+###org/springframework/data/mongodb/repository/cdi/MongoRepositoryBean
@1.1.0.RELEASE
+#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;)V
+#getScope()Ljava/lang/Class;
@1.3.0.RELEASE
-#getScope()Ljava/lang/Class;
@1.6.0.RELEASE
+#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;)V
-#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;)V
@2.0.0.RELEASE
+#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;Ljava/util/Optional;)V
-#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;)V
@4.0.0
+#<init>(Ljakarta/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljakarta/enterprise/inject/spi/BeanManager;Ljava/util/Optional;)V
-#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;Ljava/util/Optional;)V

+###org/springframework/data/mongodb/repository/cdi/MongoRepositoryExtension
@1.1.0.RELEASE
+#<init>()V

+###org/springframework/data/mongodb/repository/Query
@1.0.0.RELEASE
+#value()Ljava/lang/String;
+#fields()Ljava/lang/String;
@1.3.0.RELEASE
+#count()Z
@1.5.0.RELEASE
+#delete()Z
@1.10.0.RELEASE
+#exists()Z
@2.1.0.RELEASE
+#sort()Ljava/lang/String;
@2.2.0.RELEASE
+#collation()Ljava/lang/String;

+###org/springframework/data/mongodb/repository/MongoRepository
@1.0.0.RELEASE
+#save(Ljava/lang/Iterable;)Ljava/util/List;
+#findAll()Ljava/util/List;
+#findAll(Lorg/springframework/data/domain/Sort;)Ljava/util/List;
@1.6.2.RELEASE
+#insert(Ljava/lang/Object;)Ljava/lang/Object;
+#insert(Ljava/lang/Iterable;)Ljava/util/List;
@1.9.0.RELEASE
+#findAll(Lorg/springframework/data/domain/Example;)Ljava/util/List;
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Sort;)Ljava/util/List;
@2.0.0.RELEASE
+#saveAll(Ljava/lang/Iterable;)Ljava/util/List;
+#findAll(Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
+#findAll()Ljava/lang/Iterable;
+#saveAll(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
+#findAll(Lorg/springframework/data/domain/Example;)Ljava/lang/Iterable;
-#save(Ljava/lang/Iterable;)Ljava/util/List;
@4.0.0
-#saveAll(Ljava/lang/Iterable;)Ljava/util/List;
-#findAll()Ljava/util/List;
-#findAll(Lorg/springframework/data/domain/Sort;)Ljava/util/List;
-#findAll(Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
-#findAll()Ljava/lang/Iterable;
-#saveAll(Ljava/lang/Iterable;)Ljava/lang/Iterable;

+###org/springframework/data/mongodb/repository/support/SimpleMongoRepository
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#save(Ljava/lang/Object;)Ljava/lang/Object;
+#save(Ljava/lang/Iterable;)Ljava/util/List;
+#findOne(Ljava/io/Serializable;)Ljava/lang/Object;
+#exists(Ljava/io/Serializable;)Z
+#count()J
+#delete(Ljava/io/Serializable;)V
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/lang/Iterable;)V
+#deleteAll()V
+#findAll()Ljava/util/List;
+#findAll(Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
+#findAll(Lorg/springframework/data/domain/Sort;)Ljava/util/List;
+#findAll(Ljava/lang/Iterable;)Ljava/util/List;
+#findAll(Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
+#findAll()Ljava/lang/Iterable;
+#save(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.0.1.RELEASE
-#findAll(Ljava/lang/Iterable;)Ljava/util/List;
@1.1.0.RELEASE
+#findAll(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.6.2.RELEASE
+#insert(Ljava/lang/Object;)Ljava/lang/Object;
+#insert(Ljava/lang/Iterable;)Ljava/util/List;
@1.9.0.RELEASE
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Sort;)Ljava/util/List;
+#findAll(Lorg/springframework/data/domain/Example;)Ljava/util/List;
+#findOne(Lorg/springframework/data/domain/Example;)Ljava/lang/Object;
+#count(Lorg/springframework/data/domain/Example;)J
+#exists(Lorg/springframework/data/domain/Example;)Z
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
+#findAll(Lorg/springframework/data/domain/Example;)Ljava/lang/Iterable;
@2.0.0.RELEASE
+#saveAll(Ljava/lang/Iterable;)Ljava/util/List;
+#findById(Ljava/lang/Object;)Ljava/util/Optional;
+#existsById(Ljava/lang/Object;)Z
+#deleteById(Ljava/lang/Object;)V
+#deleteAll(Ljava/lang/Iterable;)V
+#findAllById(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#findOne(Lorg/springframework/data/domain/Example;)Ljava/util/Optional;
+#saveAll(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#save(Ljava/lang/Iterable;)Ljava/util/List;
-#findOne(Ljava/io/Serializable;)Ljava/lang/Object;
-#exists(Ljava/io/Serializable;)Z
-#delete(Ljava/io/Serializable;)V
-#delete(Ljava/lang/Iterable;)V
-#findAll(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#findOne(Lorg/springframework/data/domain/Example;)Ljava/lang/Object;
-#save(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@3.2.0
+#deleteAllById(Ljava/lang/Iterable;)V
@3.3.0
+#findBy(Lorg/springframework/data/domain/Example;Ljava/util/function/Function;)Ljava/lang/Object;
@4.0.0
+#findAllById(Ljava/lang/Iterable;)Ljava/util/List;

+###org/springframework/data/mongodb/repository/support/MappingMongoEntityInformation
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)V
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/lang/String;)V
+#getId(Ljava/lang/Object;)Ljava/io/Serializable;
+#getIdType()Ljava/lang/Class;
+#getCollectionName()Ljava/lang/String;
+#getIdAttribute()Ljava/lang/String;
@1.7.0.RELEASE
-#getId(Ljava/lang/Object;)Ljava/io/Serializable;
-#getIdType()Ljava/lang/Class;
@1.8.2.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/lang/Class;)V
+#getIdType()Ljava/lang/Class;
@2.2.0.RELEASE
+#isVersioned()Z
+#getVersion(Ljava/lang/Object;)Ljava/lang/Object;
+#getCollation()Lorg/springframework/data/mongodb/core/query/Collation;

+###org/springframework/data/mongodb/repository/support/QueryDslMongoRepository
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/querydsl/EntityPathResolver;)V
+#findOne(Lcom/mysema/query/types/Predicate;)Ljava/lang/Object;
+#findAll(Lcom/mysema/query/types/Predicate;)Ljava/util/List;
+#findAll(Lcom/mysema/query/types/Predicate;[Lcom/mysema/query/types/OrderSpecifier;)Ljava/util/List;
+#findAll(Lcom/mysema/query/types/Predicate;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
+#count(Lcom/mysema/query/types/Predicate;)J
+#findAll(Lcom/mysema/query/types/Predicate;[Lcom/mysema/query/types/OrderSpecifier;)Ljava/lang/Iterable;
+#findAll(Lcom/mysema/query/types/Predicate;)Ljava/lang/Iterable;
@1.6.2.RELEASE
+#findAll(Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
+#findAll(Lorg/springframework/data/domain/Sort;)Ljava/util/List;
+#findAll(Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
@1.7.0.RELEASE
+#findAll(Lcom/mysema/query/types/Predicate;Lorg/springframework/data/domain/Sort;)Ljava/util/List;
+#findAll([Lcom/mysema/query/types/OrderSpecifier;)Ljava/lang/Iterable;
+#exists(Lcom/mysema/query/types/Predicate;)Z
+#findAll(Lcom/mysema/query/types/Predicate;Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
@1.9.0.RELEASE
+#findOne(Lcom/querydsl/core/types/Predicate;)Ljava/lang/Object;
+#findAll(Lcom/querydsl/core/types/Predicate;)Ljava/util/List;
+#findAll(Lcom/querydsl/core/types/Predicate;[Lcom/querydsl/core/types/OrderSpecifier;)Ljava/util/List;
+#findAll(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Sort;)Ljava/util/List;
+#findAll([Lcom/querydsl/core/types/OrderSpecifier;)Ljava/lang/Iterable;
+#findAll(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
+#count(Lcom/querydsl/core/types/Predicate;)J
+#exists(Lcom/querydsl/core/types/Predicate;)Z
+#findAll(Lcom/querydsl/core/types/Predicate;[Lcom/querydsl/core/types/OrderSpecifier;)Ljava/lang/Iterable;
+#findAll(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
+#findAll(Lcom/querydsl/core/types/Predicate;)Ljava/lang/Iterable;
-#findOne(Lcom/mysema/query/types/Predicate;)Ljava/lang/Object;
-#findAll(Lcom/mysema/query/types/Predicate;)Ljava/util/List;
-#findAll(Lcom/mysema/query/types/Predicate;[Lcom/mysema/query/types/OrderSpecifier;)Ljava/util/List;
-#findAll(Lcom/mysema/query/types/Predicate;Lorg/springframework/data/domain/Sort;)Ljava/util/List;
-#findAll([Lcom/mysema/query/types/OrderSpecifier;)Ljava/lang/Iterable;
-#findAll(Lcom/mysema/query/types/Predicate;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
-#count(Lcom/mysema/query/types/Predicate;)J
-#exists(Lcom/mysema/query/types/Predicate;)Z
-#findAll(Lcom/mysema/query/types/Predicate;[Lcom/mysema/query/types/OrderSpecifier;)Ljava/lang/Iterable;
-#findAll(Lcom/mysema/query/types/Predicate;Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
-#findAll(Lcom/mysema/query/types/Predicate;)Ljava/lang/Iterable;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/support/QueryDslMongoRepository

+###org/springframework/data/mongodb/repository/support/MongoRepositoryFactory
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#getEntityInformation(Ljava/lang/Class;)Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;
+#getEntityInformation(Ljava/lang/Class;)Lorg/springframework/data/repository/core/EntityInformation;

+###org/springframework/data/mongodb/repository/support/MongoRepositoryFactoryBean
@1.0.0.RELEASE
+#<init>()V
+#setTemplate(Lorg/springframework/data/mongodb/core/MongoTemplate;)V
+#setCreateIndexesForQueryMethods(Z)V
+#afterPropertiesSet()V
@1.0.1.RELEASE
+#setMongoOperations(Lorg/springframework/data/mongodb/core/MongoOperations;)V
-#setTemplate(Lorg/springframework/data/mongodb/core/MongoTemplate;)V
@1.10.0.RELEASE
+#<init>(Ljava/lang/Class;)V
-#<init>()V
@3.2.5
+#setMappingContext(Lorg/springframework/data/mapping/context/MappingContext;)V

+###org/springframework/data/mongodb/repository/support/MongoAnnotationProcessor
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/data/mongodb/repository/support/QuerydslRepositorySupport
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;)V

+###org/springframework/data/mongodb/repository/query/PartTreeMongoQuery
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#getTree()Lorg/springframework/data/repository/query/parser/PartTree;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V

+###org/springframework/data/mongodb/repository/query/MongoQueryMethod
@1.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/mongodb/repository/query/EntityInformationCreator;)V
+#hasAnnotatedQuery()Z
+#getEntityInformation()Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;
+#getParameters()Lorg/springframework/data/mongodb/repository/query/MongoParameters;
+#isGeoNearQuery()Z
+#getParameters()Lorg/springframework/data/repository/query/Parameters;
+#getEntityInformation()Lorg/springframework/data/repository/core/EntityMetadata;
@1.1.2.RELEASE
+#<init>(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/mapping/context/MappingContext;)V
+#getEntityInformation()Lorg/springframework/data/mongodb/repository/query/MongoEntityMetadata;
-#<init>(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/mongodb/repository/query/EntityInformationCreator;)V
-#getEntityInformation()Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;
@1.6.0.RELEASE
+#hasQueryMetaAttributes()Z
+#getQueryMetaAttributes()Lorg/springframework/data/mongodb/core/query/Meta;
@1.9.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/projection/ProjectionFactory;Lorg/springframework/data/mapping/context/MappingContext;)V
-#<init>(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/mapping/context/MappingContext;)V
@2.1.0.RELEASE
+#hasAnnotatedSort()Z
+#getAnnotatedSort()Ljava/lang/String;
@2.2.0.RELEASE
+#hasAnnotatedCollation()Z
+#getAnnotatedCollation()Ljava/lang/String;
+#hasAnnotatedAggregation()Z
+#getAnnotatedAggregation()[Ljava/lang/String;
@3.4.0
+#isModifyingQuery()Z
+#hasAnnotatedUpdate()Z
+#getUpdateSource()Lorg/springframework/data/mongodb/repository/Update;
+#verify()V

+###org/springframework/data/mongodb/repository/query/MongoEntityMetadata
@1.1.2.RELEASE
+#getCollectionName()Ljava/lang/String;
@2.0.4.RELEASE
+#getCollectionEntity()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;

+###org/springframework/data/mongodb/repository/query/AbstractMongoQuery
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#getQueryMethod()Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;
+#execute([Ljava/lang/Object;)Ljava/lang/Object;
+#getQueryMethod()Lorg/springframework/data/repository/query/QueryMethod;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V

+###org/springframework/data/mongodb/repository/query/MongoParametersParameterAccessor
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;[Ljava/lang/Object;)V
+#getMaxDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
+#getGeoNearLocation()Lorg/springframework/data/mongodb/core/geo/Point;
@1.5.0.RELEASE
+#getMaxDistance()Lorg/springframework/data/geo/Distance;
+#getGeoNearLocation()Lorg/springframework/data/geo/Point;
-#getMaxDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
-#getGeoNearLocation()Lorg/springframework/data/mongodb/core/geo/Point;
@1.6.0.RELEASE
+#getFullText()Lorg/springframework/data/mongodb/core/query/TextCriteria;
@1.7.0.RELEASE
+#getDistanceRange()Lorg/springframework/data/domain/Range;
-#getMaxDistance()Lorg/springframework/data/geo/Distance;
@1.8.0.RELEASE
+#getValues()[Ljava/lang/Object;
@2.2.0.RELEASE
+#getCollation()Lorg/springframework/data/mongodb/core/query/Collation;
@3.4.0
+#getUpdate()Lorg/springframework/data/mongodb/core/query/UpdateDefinition;

+###org/springframework/data/mongodb/repository/query/QueryUtils
@1.0.0.RELEASE
+#applyPagination(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/mongodb/core/query/Query;
+#applySorting(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/query/Query;
+#toOrder(Lorg/springframework/data/domain/Sort$Order;)Lorg/springframework/data/mongodb/core/query/Order;
@1.1.0.RELEASE
*#applyPagination(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
*#applySorting(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
@1.3.0.RELEASE
*#toOrder(Lorg/springframework/data/domain/Sort$Order;)Lorg/springframework/data/mongodb/core/query/Order;[deprecated]
-#applyPagination(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
-#applySorting(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/query/QueryUtils

+###org/springframework/data/mongodb/repository/query/MongoParameters
@1.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;Z)V
+#getDistanceIndex()I
+#getNearIndex()I
@1.6.0.RELEASE
+#getFullTextParameterIndex()I
+#hasFullTextParameter()Z
@1.7.0.RELEASE
+#getDistanceRangeIndex()I
*#getDistanceIndex()I[deprecated]
+#getMaxDistanceIndex()I
+#getRangeIndex()I
@2.0.0.RELEASE
-#getDistanceIndex()I[deprecated]
@2.2.0.RELEASE
+#getCollationParameterIndex()I
@3.4.0
+#getUpdateIndex()I

+###org/springframework/data/mongodb/repository/query/StringBasedMongoQuery
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;)V
@1.8.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;)V
-#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
-#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V

+###org/springframework/data/mongodb/repository/query/MongoParameterAccessor
@1.0.0.RELEASE
+#getMaxDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
+#getGeoNearLocation()Lorg/springframework/data/mongodb/core/geo/Point;
@1.5.0.RELEASE
+#getMaxDistance()Lorg/springframework/data/geo/Distance;
+#getGeoNearLocation()Lorg/springframework/data/geo/Point;
-#getMaxDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
-#getGeoNearLocation()Lorg/springframework/data/mongodb/core/geo/Point;
@1.6.0.RELEASE
+#getFullText()Lorg/springframework/data/mongodb/core/query/TextCriteria;
@1.7.0.RELEASE
+#getDistanceRange()Lorg/springframework/data/domain/Range;
-#getMaxDistance()Lorg/springframework/data/geo/Distance;
@1.8.0.RELEASE
+#getValues()[Ljava/lang/Object;
@2.2.0.RELEASE
+#getCollation()Lorg/springframework/data/mongodb/core/query/Collation;
@3.4.0
+#getUpdate()Lorg/springframework/data/mongodb/core/query/UpdateDefinition;

+###org/springframework/data/mongodb/repository/query/ConvertingParameterAccessor$PotentiallyConvertingIterator
@1.0.0.RELEASE
+#nextConverted()Ljava/lang/Object;
@1.1.0.RELEASE
+#nextConverted(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/Object;
-#nextConverted()Ljava/lang/Object;

+###org/springframework/data/mongodb/repository/query/MongoEntityInformation
@1.0.0.RELEASE
+#getCollectionName()Ljava/lang/String;
+#getIdAttribute()Ljava/lang/String;
@2.2.0.RELEASE
+#isVersioned()Z
+#getVersion(Ljava/lang/Object;)Ljava/lang/Object;
+#hasCollation()Z
+#getCollation()Lorg/springframework/data/mongodb/core/query/Collation;

+###org/springframework/data/mongodb/repository/query/ConvertingParameterAccessor
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/convert/MongoWriter;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;)V
+#iterator()Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor$PotentiallyConvertingIterator;
+#getPageable()Lorg/springframework/data/domain/Pageable;
+#getSort()Lorg/springframework/data/domain/Sort;
+#getBindableValue(I)Ljava/lang/Object;
+#getMaxDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
+#getGeoNearLocation()Lorg/springframework/data/mongodb/core/geo/Point;
+#iterator()Ljava/util/Iterator;
@1.1.0.RELEASE
+#hasBindableNullValue()Z
@1.5.0.RELEASE
+#getMaxDistance()Lorg/springframework/data/geo/Distance;
+#getGeoNearLocation()Lorg/springframework/data/geo/Point;
-#getMaxDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
-#getGeoNearLocation()Lorg/springframework/data/mongodb/core/geo/Point;
@1.6.0.RELEASE
+#getFullText()Lorg/springframework/data/mongodb/core/query/TextCriteria;
@1.7.0.RELEASE
+#getDistanceRange()Lorg/springframework/data/domain/Range;
-#getMaxDistance()Lorg/springframework/data/geo/Distance;
@1.8.0.RELEASE
+#getValues()[Ljava/lang/Object;
@1.9.0.RELEASE
+#getDynamicProjection()Ljava/lang/Class;
@2.0.0.RELEASE
+#getDynamicProjection()Ljava/util/Optional;
-#getDynamicProjection()Ljava/lang/Class;
@2.2.0.RELEASE
+#findDynamicProjection()Ljava/lang/Class;
+#getCollation()Lorg/springframework/data/mongodb/core/query/Collation;
@3.4.0
+#getUpdate()Lorg/springframework/data/mongodb/core/query/UpdateDefinition;
@4.0.0
-#getDynamicProjection()Ljava/util/Optional;

+###org/springframework/data/mongodb/repository/config/EnableMongoRepositories
@1.1.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;
+#includeFilters()[Lorg/springframework/context/annotation/ComponentScan$Filter;
+#excludeFilters()[Lorg/springframework/context/annotation/ComponentScan$Filter;
+#repositoryImplementationPostfix()Ljava/lang/String;
+#namedQueriesLocation()Ljava/lang/String;
+#queryLookupStrategy()Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
+#repositoryFactoryBeanClass()Ljava/lang/Class;
+#mongoTemplateRef()Ljava/lang/String;
+#createIndexesForQueryMethods()Z
@1.4.0.RELEASE
+#considerNestedRepositories()Z
@1.8.0.RELEASE
+#repositoryBaseClass()Ljava/lang/Class;

+###org/springframework/data/mongodb/repository/config/MongoRepositoryConfigNamespaceHandler
@1.5.0.RELEASE
+#<init>()V
+#init()V

+###org/springframework/data/mongodb/repository/config/MongoRepositoryConfigurationExtension
@1.1.0.RELEASE
+#<init>()V
+#getRepositoryFactoryClassName()Ljava/lang/String;
+#postProcess(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/data/repository/config/XmlRepositoryConfigurationSource;)V
+#postProcess(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/data/repository/config/AnnotationRepositoryConfigurationSource;)V
@1.5.0.RELEASE
+#postProcess(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)V
+#registerBeansForRoot(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)V
@1.6.0.RELEASE
+#getModuleName()Ljava/lang/String;
@1.9.4.RELEASE
-#postProcess(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)V
-#registerBeansForRoot(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)V
@2.0.0.RELEASE
+#getRepositoryFactoryBeanClassName()Ljava/lang/String;
+#registerBeansForRoot(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)V
-#getRepositoryFactoryClassName()Ljava/lang/String;
@2.2.0.RELEASE
-#registerBeansForRoot(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)V
@4.0.0
+#getModulePrefix()Ljava/lang/String;
+#getModuleIdentifier()Ljava/lang/String;
+#getIdentifyingAnnotations()Ljava/util/Collection;
+#getRepositoryAotProcessor()Ljava/lang/Class;

+###org/springframework/data/mongodb/repository/Near
@1.0.0.RELEASE

+###org/springframework/data/mongodb/util/DBObjectUtils
@1.4.0.RELEASE
+#<init>()V
+#dbList([Ljava/lang/Object;)Lcom/mongodb/BasicDBList;

+###org/springframework/data/mongodb/gridfs/GridFsResource
@1.1.0.RELEASE
+#<init>(Lcom/mongodb/gridfs/GridFSDBFile;)V
+#contentLength()J
+#getFilename()Ljava/lang/String;
+#lastModified()J
+#getId()Ljava/lang/Object;
+#getContentType()Ljava/lang/String;
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/client/gridfs/model/GridFSFile;)V
+#<init>(Lcom/mongodb/client/gridfs/model/GridFSFile;Ljava/io/InputStream;)V
-#<init>(Lcom/mongodb/gridfs/GridFSDBFile;)V
@2.1.0.RELEASE
+#absent(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/GridFsResource;
+#getInputStream()Ljava/io/InputStream;
+#exists()Z
+#getDescription()Ljava/lang/String;
@2.2.0.RELEASE
+#getGridFSFile()Lcom/mongodb/client/gridfs/model/GridFSFile;
@3.0.0.RELEASE
+#getFileId()Ljava/lang/Object;
+#getContent()Ljava/io/InputStream;
+#getOptions()Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#getContent()Ljava/lang/Object;

+###org/springframework/data/mongodb/gridfs/GridFsCriteria
@1.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#whereMetaData()Lorg/springframework/data/mongodb/gridfs/GridFsCriteria;
+#whereMetaData(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/GridFsCriteria;
+#whereFilename()Lorg/springframework/data/mongodb/gridfs/GridFsCriteria;
+#whereContentType()Lorg/springframework/data/mongodb/gridfs/GridFsCriteria;

+###org/springframework/data/mongodb/gridfs/GridFsTemplate
@1.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;Ljava/lang/String;)V
+#store(Ljava/io/InputStream;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Ljava/lang/String;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
+#find(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/util/List;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;)Lcom/mongodb/gridfs/GridFSDBFile;
+#delete(Lorg/springframework/data/mongodb/core/query/Query;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#getResource(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/GridFsResource;
+#getResources(Ljava/lang/String;)[Lorg/springframework/data/mongodb/gridfs/GridFsResource;
+#getResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;
+#getResource(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
@1.2.0.RELEASE
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
@1.5.0.RELEASE
+#store(Ljava/io/InputStream;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
@2.0.0.RELEASE
+#store(Ljava/io/InputStream;Ljava/lang/String;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/Object;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Lorg/bson/Document;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Lorg/bson/Document;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lorg/bson/types/ObjectId;
+#find(Lorg/springframework/data/mongodb/core/query/Query;)Lcom/mongodb/client/gridfs/GridFSFindIterable;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;)Lcom/mongodb/client/gridfs/model/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
-#find(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/util/List;
-#findOne(Lorg/springframework/data/mongodb/core/query/Query;)Lcom/mongodb/gridfs/GridFSDBFile;
@2.1.0.RELEASE
+#getResource(Lcom/mongodb/client/gridfs/model/GridFSFile;)Lorg/springframework/data/mongodb/gridfs/GridFsResource;
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;Ljava/lang/String;)V
+#store(Lorg/springframework/data/mongodb/gridfs/GridFsObject;)Ljava/lang/Object;
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;Ljava/lang/String;)V
-#store(Ljava/io/InputStream;Ljava/lang/String;)Lorg/bson/types/ObjectId;
-#store(Ljava/io/InputStream;Ljava/lang/Object;)Lorg/bson/types/ObjectId;
-#store(Ljava/io/InputStream;Lorg/bson/Document;)Lorg/bson/types/ObjectId;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/bson/types/ObjectId;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/types/ObjectId;
-#store(Ljava/io/InputStream;Ljava/lang/String;Lorg/bson/Document;)Lorg/bson/types/ObjectId;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lorg/bson/types/ObjectId;

+###org/springframework/data/mongodb/gridfs/GridFsOperations
@1.1.0.RELEASE
+#store(Ljava/io/InputStream;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Ljava/lang/String;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
+#find(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/util/List;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;)Lcom/mongodb/gridfs/GridFSDBFile;
+#delete(Lorg/springframework/data/mongodb/core/query/Query;)V
+#getResource(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/GridFsResource;
+#getResources(Ljava/lang/String;)[Lorg/springframework/data/mongodb/gridfs/GridFsResource;
@1.2.0.RELEASE
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
@1.5.0.RELEASE
+#store(Ljava/io/InputStream;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
+#store(Ljava/io/InputStream;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
@2.0.0.RELEASE
+#store(Ljava/io/InputStream;Ljava/lang/String;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/Object;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Lorg/bson/Document;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Lorg/bson/Document;)Lorg/bson/types/ObjectId;
+#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lorg/bson/types/ObjectId;
+#find(Lorg/springframework/data/mongodb/core/query/Query;)Lcom/mongodb/client/gridfs/GridFSFindIterable;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;)Lcom/mongodb/client/gridfs/model/GridFSFile;
+#getResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;
+#getResource(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
-#store(Ljava/io/InputStream;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
-#store(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/String;Lcom/mongodb/DBObject;)Lcom/mongodb/gridfs/GridFSFile;
-#find(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/util/List;
-#findOne(Lorg/springframework/data/mongodb/core/query/Query;)Lcom/mongodb/gridfs/GridFSDBFile;
@2.1.0.RELEASE
+#getResource(Lcom/mongodb/client/gridfs/model/GridFSFile;)Lorg/springframework/data/mongodb/gridfs/GridFsResource;
@3.0.0.RELEASE
+#store(Lorg/springframework/data/mongodb/gridfs/GridFsObject;)Ljava/lang/Object;

+###org/springframework/data/mongodb/InvalidMongoDbApiUsageException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/mongodb/UncategorizedMongoDbException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/mongodb/config/MongoAuditingBeanDefinitionParser
@1.2.0.RELEASE
+#<init>()V

+###org/springframework/data/mongodb/config/MongoJmxParser
@1.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/data/mongodb/config/EnableMongoAuditing
@1.4.0.RELEASE
+#auditorAwareRef()Ljava/lang/String;
+#setDates()Z
+#modifyOnCreate()Z
+#dateTimeProviderRef()Ljava/lang/String;

+###org/springframework/data/mongodb/config/BeanNames
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/data/mongodb/config/AbstractMongoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#getDatabaseName()Ljava/lang/String;
+#mongo()Lcom/mongodb/Mongo;
+#mongoTemplate()Lorg/springframework/data/mongodb/core/MongoTemplate;
+#mongoDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
+#getMappingBasePackage()Ljava/lang/String;
+#getUserCredentials()Lorg/springframework/data/authentication/UserCredentials;
+#mongoMappingContext()Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
+#mappingMongoConverter()Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
@1.1.0.RELEASE
+#mongoDbFactory()Lorg/springframework/data/mongodb/core/SimpleMongoDbFactory;
+#customConversions()Lorg/springframework/data/mongodb/core/convert/CustomConversions;
-#getDatabaseName()Ljava/lang/String;
-#mongoDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
-#getMappingBasePackage()Ljava/lang/String;
-#getUserCredentials()Lorg/springframework/data/authentication/UserCredentials;
@1.2.0.RELEASE
+#isNewStrategyFactory()Lorg/springframework/data/support/IsNewStrategyFactory;
@1.4.0.RELEASE
+#mongoDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
-#mongoDbFactory()Lorg/springframework/data/mongodb/core/SimpleMongoDbFactory;
@2.0.0.RELEASE
+#mongoClient()Lcom/mongodb/MongoClient;
-#mongo()Lcom/mongodb/Mongo;
-#mongoMappingContext()Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
-#isNewStrategyFactory()Lorg/springframework/data/support/IsNewStrategyFactory;
-#customConversions()Lorg/springframework/data/mongodb/core/convert/CustomConversions;
@3.0.0.RELEASE
-###org/springframework/data/mongodb/config/AbstractMongoConfiguration

+###org/springframework/data/mongodb/config/WriteConcernPropertyEditor
@1.0.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/data/mongodb/config/MongoNamespaceHandler
@1.0.0.RELEASE
+#<init>()V
+#init()V

+###org/springframework/data/mongodb/config/MongoDbFactoryParser
@1.0.0.RELEASE
+#<init>()V

+###org/springframework/data/mongodb/config/MappingMongoConverterParser
@1.0.0.RELEASE
+#<init>()V
+#getInititalEntityClasses(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)Ljava/util/Set;
+#parseConverter(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/BeanMetadataElement;
@1.1.2.RELEASE
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;
@1.2.0.RELEASE
+#createIsNewStrategyFactoryBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/w3c/dom/Element;)Ljava/lang/String;
-#getInititalEntityClasses(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)Ljava/util/Set;
@1.5.0.RELEASE
+#potentiallyCreateMappingContext(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/String;)Ljava/lang/String;
@2.2.0.RELEASE
-#createIsNewStrategyFactoryBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/w3c/dom/Element;)Ljava/lang/String;
@3.0.0.RELEASE
+#potentiallyCreateMappingContext(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/String;Z)Ljava/lang/String;

+###org/springframework/data/mongodb/config/MongoParser
@1.0.0.RELEASE
+#<init>()V
@1.1.0.RELEASE
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/config/MongoParser

+###org/springframework/data/mongodb/config/StringToWriteConcernConverter
@1.0.2.RELEASE
+#<init>()V
+#convert(Ljava/lang/String;)Lcom/mongodb/WriteConcern;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/mongodb/config/ServerAddressPropertyEditor
@1.0.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/data/mongodb/monitor/OperationCounters
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#getInsertCount()I
+#getQueryCount()I
+#getUpdateCount()I
+#getDeleteCount()I
+#getGetMoreCount()I
+#getCommandCount()I
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
-#<init>(Lcom/mongodb/Mongo;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;)V[deprecated]
+#<init>(Lcom/mongodb/client/MongoClient;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V[deprecated]

+###org/springframework/data/mongodb/monitor/ServerInfo
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#getHostName()Ljava/lang/String;
+#getUptimeEstimate()D
+#getVersion()Ljava/lang/String;
+#getLocalTime()Ljava/lang/String;
+#getUptime()D
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
-#<init>(Lcom/mongodb/Mongo;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V

+###org/springframework/data/mongodb/monitor/AbstractMonitor
@1.0.0.RELEASE
+#<init>()V
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#getServerStatus()Lcom/mongodb/CommandResult;
+#getDb(Ljava/lang/String;)Lcom/mongodb/DB;
@2.0.0.RELEASE
+#getServerStatus()Lorg/bson/Document;
+#getDb(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;
-#<init>()V
-#setUsername(Ljava/lang/String;)V
-#setPassword(Ljava/lang/String;)V
-#getServerStatus()Lcom/mongodb/CommandResult;
-#getDb(Ljava/lang/String;)Lcom/mongodb/DB;

+###org/springframework/data/mongodb/monitor/ConnectionMetrics
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#getCurrent()I
+#getAvailable()I
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
-#<init>(Lcom/mongodb/Mongo;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;)V[deprecated]
+#<init>(Lcom/mongodb/client/MongoClient;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V[deprecated]

+###org/springframework/data/mongodb/monitor/BtreeIndexCounters
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#getAccesses()I
+#getHits()I
+#getMisses()I
+#getResets()I
+#getMissRatio()I
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
-#<init>(Lcom/mongodb/Mongo;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;)V[deprecated]
+#<init>(Lcom/mongodb/client/MongoClient;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V[deprecated]

+###org/springframework/data/mongodb/monitor/BackgroundFlushingMetrics
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#getFlushes()I
+#getTotalMs()I
+#getAverageMs()D
+#getLastMs()I
+#getLastFinished()Ljava/util/Date;
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
-#<init>(Lcom/mongodb/Mongo;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;)V[deprecated]
+#<init>(Lcom/mongodb/client/MongoClient;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V[deprecated]

+###org/springframework/data/mongodb/monitor/MemoryMetrics
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#getBits()I
+#getResidentSpace()I
+#getVirtualAddressSpace()I
+#getMemoryInfoSupported()Z
+#getMemoryMappedSpace()I
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
-#<init>(Lcom/mongodb/Mongo;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;)V[deprecated]
+#<init>(Lcom/mongodb/client/MongoClient;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V[deprecated]

+###org/springframework/data/mongodb/monitor/AssertMetrics
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#getRegular()I
+#getWarning()I
+#getMsg()I
+#getUser()I
+#getRollovers()I
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
-#<init>(Lcom/mongodb/Mongo;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;)V[deprecated]
+#<init>(Lcom/mongodb/client/MongoClient;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V[deprecated]

+###org/springframework/data/mongodb/monitor/GlobalLockMetrics
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#getTotalTime()D
+#getLockTime()D
+#getLockTimeRatio()D
+#getCurrentQueueTotal()I
+#getCurrentQueueReaders()I
+#getCurrentQueueWriters()I
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
-#<init>(Lcom/mongodb/Mongo;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;)V[deprecated]
+#<init>(Lcom/mongodb/client/MongoClient;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V[deprecated]

+###org/springframework/data/mongodb/core/MongoAdminOperations
@1.0.0.RELEASE
+#dropDatabase(Ljava/lang/String;)V
+#createDatabase(Ljava/lang/String;)V
+#getDatabaseStats(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/data/mongodb/core/geo/Sphere
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Distance;)V
+#<init>(Lorg/springframework/data/geo/Point;D)V
+#<init>(Lorg/springframework/data/geo/Circle;)V
+#<init>(Lorg/springframework/data/mongodb/core/geo/Circle;)V[deprecated]
+#getCenter()Lorg/springframework/data/mongodb/core/geo/Point;
+#getRadius()Lorg/springframework/data/geo/Distance;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#asList()Ljava/util/List;
+#getCommand()Ljava/lang/String;
@1.6.0.RELEASE
+#getCenter()Lorg/springframework/data/geo/Point;
-#<init>(Lorg/springframework/data/mongodb/core/geo/Circle;)V[deprecated]
-#getCenter()Lorg/springframework/data/mongodb/core/geo/Point;

+###org/springframework/data/mongodb/core/geo/Metric
@1.0.0.RELEASE
+#getMultiplier()D
@1.5.0.RELEASE
-#getMultiplier()D
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/Metric

+###org/springframework/data/mongodb/core/geo/Shape
@1.0.0.RELEASE
+#asList()Ljava/util/List;
+#getCommand()Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/Shape

+###org/springframework/data/mongodb/core/geo/Circle
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/geo/Point;D)V
+#<init>(DDD)V
+#getCenter()Lorg/springframework/data/mongodb/core/geo/Point;
+#getRadius()D
+#asList()Ljava/util/List;
+#getCommand()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/geo/Point;D)V
+#getCenter()Lorg/springframework/data/geo/Point;
-#<init>(Lorg/springframework/data/mongodb/core/geo/Point;D)V
-#getCenter()Lorg/springframework/data/mongodb/core/geo/Point;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/Circle

+###org/springframework/data/mongodb/core/geo/GeoResult
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/geo/Distance;)V
+#getContent()Ljava/lang/Object;
+#getDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.5.0.RELEASE
-#getContent()Ljava/lang/Object;
-#getDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/GeoResult

+###org/springframework/data/mongodb/core/geo/GeoResults
@1.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>(Ljava/util/List;Lorg/springframework/data/mongodb/core/geo/Metric;)V
+#<init>(Ljava/util/List;Lorg/springframework/data/mongodb/core/geo/Distance;)V
+#getAverageDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
+#iterator()Ljava/util/Iterator;
+#getContent()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.5.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/data/geo/Metric;)V
+#<init>(Ljava/util/List;Lorg/springframework/data/geo/Distance;)V
-#<init>(Ljava/util/List;Lorg/springframework/data/mongodb/core/geo/Metric;)V
-#<init>(Ljava/util/List;Lorg/springframework/data/mongodb/core/geo/Distance;)V
-#getAverageDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
-#iterator()Ljava/util/Iterator;
-#getContent()Ljava/util/List;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/GeoResults

+###org/springframework/data/mongodb/core/geo/Metrics
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/geo/Metrics;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/geo/Metrics;
+#getMultiplier()D
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/Metrics

+###org/springframework/data/mongodb/core/geo/CustomMetric
@1.2.0.RELEASE
+#<init>(D)V
+#getMultiplier()D
@1.5.0.RELEASE
-#getMultiplier()D
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/CustomMetric

+###org/springframework/data/mongodb/core/geo/GeoPage
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/geo/GeoResults;)V
+#<init>(Lorg/springframework/data/mongodb/core/geo/GeoResults;Lorg/springframework/data/domain/Pageable;J)V
+#getAverageDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
@1.5.0.RELEASE
-#getAverageDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/GeoPage

+###org/springframework/data/mongodb/core/geo/Box
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/geo/Point;Lorg/springframework/data/mongodb/core/geo/Point;)V
+#<init>([D[D)V
+#getLowerLeft()Lorg/springframework/data/mongodb/core/geo/Point;
+#getUpperRight()Lorg/springframework/data/mongodb/core/geo/Point;
+#asList()Ljava/util/List;
+#getCommand()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;)V
-#<init>(Lorg/springframework/data/mongodb/core/geo/Point;Lorg/springframework/data/mongodb/core/geo/Point;)V
-#toString()Ljava/lang/String;
-#hashCode()I
-#equals(Ljava/lang/Object;)Z
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/Box

+###org/springframework/data/mongodb/core/geo/Polygon
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/geo/Point;Lorg/springframework/data/mongodb/core/geo/Point;Lorg/springframework/data/mongodb/core/geo/Point;[Lorg/springframework/data/mongodb/core/geo/Point;)V
+#asList()Ljava/util/List;
+#getCommand()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;[Lorg/springframework/data/geo/Point;)V
+#<init>(Ljava/util/List;)V
+#asList(Lorg/springframework/data/geo/Polygon;)Ljava/util/List;
-#<init>(Lorg/springframework/data/mongodb/core/geo/Point;Lorg/springframework/data/mongodb/core/geo/Point;Lorg/springframework/data/mongodb/core/geo/Point;[Lorg/springframework/data/mongodb/core/geo/Point;)V
-#iterator()Ljava/util/Iterator;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/Polygon

+###org/springframework/data/mongodb/core/geo/Distance
@1.0.0.RELEASE
+#<init>(D)V
+#<init>(DLorg/springframework/data/mongodb/core/geo/Metric;)V
+#getValue()D
+#getNormalizedValue()D
+#getMetric()Lorg/springframework/data/mongodb/core/geo/Metric;
+#add(Lorg/springframework/data/mongodb/core/geo/Distance;)Lorg/springframework/data/mongodb/core/geo/Distance;
+#add(Lorg/springframework/data/mongodb/core/geo/Distance;Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/geo/Distance;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.5.0.RELEASE
+#<init>(DLorg/springframework/data/geo/Metric;)V
-#<init>(DLorg/springframework/data/mongodb/core/geo/Metric;)V
-#getValue()D
-#getNormalizedValue()D
-#getMetric()Lorg/springframework/data/mongodb/core/geo/Metric;
-#add(Lorg/springframework/data/mongodb/core/geo/Distance;)Lorg/springframework/data/mongodb/core/geo/Distance;
-#add(Lorg/springframework/data/mongodb/core/geo/Distance;Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/geo/Distance;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/Distance

+###org/springframework/data/mongodb/core/geo/Point
@1.0.0.RELEASE
+#<init>(DD)V
+#<init>(Lorg/springframework/data/mongodb/core/geo/Point;)V
+#getX()D
+#getY()D
+#asArray()[D
+#asList()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/geo/Point;)V
+#asList(Lorg/springframework/data/geo/Point;)Ljava/util/List;
-#<init>(Lorg/springframework/data/mongodb/core/geo/Point;)V
-#getX()D
-#getY()D
-#hashCode()I
-#equals(Ljava/lang/Object;)Z
-#toString()Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/geo/Point

+###org/springframework/data/mongodb/core/DocumentCallbackHandler
@1.0.0.RELEASE
+#processDocument(Lcom/mongodb/DBObject;)V
@2.0.0.RELEASE
+#processDocument(Lorg/bson/Document;)V
-#processDocument(Lcom/mongodb/DBObject;)V

+###org/springframework/data/mongodb/core/IndexOperations
@1.0.0.RELEASE
+#ensureIndex(Lorg/springframework/data/mongodb/core/index/IndexDefinition;)V
+#dropIndex(Ljava/lang/String;)V
+#dropAllIndexes()V
+#resetIndexCache()V
+#getIndexInfo()Ljava/util/List;
@1.7.0.RELEASE
*#resetIndexCache()V[deprecated]
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/IndexOperations

+###org/springframework/data/mongodb/core/MongoAdmin
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;)V
+#dropDatabase(Ljava/lang/String;)V
+#createDatabase(Ljava/lang/String;)V
+#getDatabaseStats(Ljava/lang/String;)Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
@1.4.0.RELEASE
+#setAuthenticationDatabaseName(Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;)V
+#getServerStatus()Ljava/lang/String;
-#<init>(Lcom/mongodb/Mongo;)V
-#setUsername(Ljava/lang/String;)V
-#setPassword(Ljava/lang/String;)V
-#setAuthenticationDatabaseName(Ljava/lang/String;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;)V[deprecated]
+#<init>(Lcom/mongodb/client/MongoClient;)V
@3.0.0.RELEASE
-#<init>(Lcom/mongodb/MongoClient;)V[deprecated]

+###org/springframework/data/mongodb/core/DefaultIndexOperations
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;)V
+#ensureIndex(Lorg/springframework/data/mongodb/core/index/IndexDefinition;)V
+#dropIndex(Ljava/lang/String;)V
+#dropAllIndexes()V
+#resetIndexCache()V
+#getIndexInfo()Ljava/util/List;
@1.7.0.RELEASE
*#resetIndexCache()V[deprecated]
@1.9.6.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Ljava/lang/Class;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;)V
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;Ljava/lang/Class;)V
+#ensureIndex(Lorg/springframework/data/mongodb/core/index/IndexDefinition;)Ljava/lang/String;
+#execute(Lorg/springframework/data/mongodb/core/CollectionCallback;)Ljava/lang/Object;
-#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;)V
-#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Ljava/lang/Class;)V
-#ensureIndex(Lorg/springframework/data/mongodb/core/index/IndexDefinition;)V
-#resetIndexCache()V[deprecated]
@2.1.0.RELEASE
*#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;)V[deprecated]
*#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;Ljava/lang/Class;)V[deprecated]
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Ljava/lang/Class;)V
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;)V[deprecated]
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;Ljava/lang/Class;)V[deprecated]
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;)V[deprecated]
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;Ljava/lang/Class;)V[deprecated]

+###org/springframework/data/mongodb/core/MongoOptionsFactoryBean
@1.0.0.RELEASE
+#<init>()V
+#setConnectionsPerHost(I)V
+#setThreadsAllowedToBlockForConnectionMultiplier(I)V
+#setMaxWaitTime(I)V
+#setConnectTimeout(I)V
+#setSocketTimeout(I)V
+#setSocketKeepAlive(Z)V
+#setWriteNumber(I)V
+#setWriteTimeout(I)V
+#setWriteFsync(Z)V
+#setAutoConnectRetry(Z)V
+#setMaxAutoConnectRetryTime(J)V
+#setSlaveOk(Z)V
+#afterPropertiesSet()V
+#getObject()Lcom/mongodb/MongoOptions;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@1.4.0.RELEASE
+#setSsl(Z)V
+#setSslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)V
@1.7.0.RELEASE
*#setAutoConnectRetry(Z)V[deprecated]
*#setMaxAutoConnectRetryTime(J)V[deprecated]
*#setSlaveOk(Z)V[deprecated]
-#afterPropertiesSet()V
-#getObject()Lcom/mongodb/MongoOptions;
-#isSingleton()Z
-#getObject()Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/MongoOptionsFactoryBean

+###org/springframework/data/mongodb/core/convert/QueryMapper$MetadataBackedField
@1.3.4.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/context/MappingContext;)V
+#with(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/QueryMapper$MetadataBackedField;
+#isIdField()Z
+#getProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#getPropertyEntity()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;
+#isAssociation()Z
+#getMappedKey()Ljava/lang/String;
+#with(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/QueryMapper$Field;
@1.4.0.RELEASE
+#getAssociation()Lorg/springframework/data/mapping/Association;
@1.4.2.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)V
@1.6.3.RELEASE
+#getTypeHint()Lorg/springframework/data/util/TypeInformation;
@1.7.0.RELEASE
-#getTypeHint()Lorg/springframework/data/util/TypeInformation;
@1.7.1.RELEASE
+#getTypeHint()Lorg/springframework/data/util/TypeInformation;
@3.2.0
+#getEntity()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;
@3.4.3
+#getFieldType()Ljava/lang/Class;

+###org/springframework/data/mongodb/core/convert/MappingMongoConverter
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mapping/context/MappingContext;)V
+#setTypeMapper(Lorg/springframework/data/mongodb/core/convert/MongoTypeMapper;)V
+#getMappingContext()Lorg/springframework/data/mapping/context/MappingContext;
+#setUseFieldAccessOnly(Z)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#read(Ljava/lang/Class;Lcom/mongodb/DBObject;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
+#convertToMongoType(Ljava/lang/Object;)Ljava/lang/Object;
+#maybeConvertList(Ljava/lang/Iterable;)Lcom/mongodb/BasicDBList;
+#read(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
@1.0.1.RELEASE
+#setMapKeyDotReplacement(Ljava/lang/String;)V
@1.1.0.RELEASE
+#toDBRef(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lcom/mongodb/DBRef;
@1.1.2.RELEASE
+#convertToMongoType(Ljava/lang/Object;Lorg/springframework/data/util/TypeInformation;)Ljava/lang/Object;
-#convertToMongoType(Ljava/lang/Object;)Ljava/lang/Object;
@1.3.0.RELEASE
+#getTypeMapper()Lorg/springframework/data/mongodb/core/convert/MongoTypeMapper;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/convert/DbRefResolver;Lorg/springframework/data/mapping/context/MappingContext;)V
*#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mapping/context/MappingContext;)V[deprecated]
+#maybeConvertList(Ljava/lang/Iterable;Lorg/springframework/data/util/TypeInformation;)Lcom/mongodb/BasicDBList;
-#maybeConvertList(Ljava/lang/Iterable;)Lcom/mongodb/BasicDBList;
@1.5.0.RELEASE
-#setUseFieldAccessOnly(Z)V
@1.6.0.RELEASE
+#getValueInternal(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBObject;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;Lorg/springframework/data/mongodb/core/convert/ObjectPath;)Ljava/lang/Object;
@2.0.0.RELEASE
+#read(Ljava/lang/Class;Lorg/bson/conversions/Bson;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Lorg/bson/conversions/Bson;)V
+#getValueInternal(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/bson/conversions/Bson;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;Lorg/springframework/data/mongodb/core/convert/ObjectPath;)Ljava/lang/Object;
+#maybeConvertList(Ljava/lang/Iterable;Lorg/springframework/data/util/TypeInformation;)Ljava/util/List;
-#read(Ljava/lang/Class;Lcom/mongodb/DBObject;)Ljava/lang/Object;
-#write(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
-#getValueInternal(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBObject;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;Lorg/springframework/data/mongodb/core/convert/ObjectPath;)Ljava/lang/Object;
-#maybeConvertList(Ljava/lang/Iterable;Lorg/springframework/data/util/TypeInformation;)Lcom/mongodb/BasicDBList;
@2.1.6.RELEASE
+#with(Lorg/springframework/data/mongodb/MongoDbFactory;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
@2.2.0.RELEASE
+#setCodecRegistryProvider(Lorg/springframework/data/mongodb/CodecRegistryProvider;)V
+#getWriteTarget(Ljava/lang/Class;)Ljava/lang/Class;
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lorg/springframework/data/mapping/context/MappingContext;)V[deprecated]
+#setEntityCallbacks(Lorg/springframework/data/mapping/callback/EntityCallbacks;)V
+#with(Lorg/springframework/data/mongodb/MongoDatabaseFactory;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mapping/context/MappingContext;)V[deprecated]
-#getValueInternal(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/bson/conversions/Bson;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;Lorg/springframework/data/mongodb/core/convert/ObjectPath;)Ljava/lang/Object;
-#with(Lorg/springframework/data/mongodb/MongoDbFactory;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
@3.2.0
+#convertToMongoType(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Ljava/lang/Object;
@3.3.0
+#toDocumentPointer(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lorg/springframework/data/mongodb/core/mapping/DocumentPointer;
@3.4.0
+#getProjectionFactory()Lorg/springframework/data/projection/ProjectionFactory;
+#getCustomConversions()Lorg/springframework/data/convert/CustomConversions;
+#project(Lorg/springframework/data/projection/EntityProjection;Lorg/bson/conversions/Bson;)Ljava/lang/Object;
@4.0.0
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;

+###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToPolygonConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToPolygonConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToPolygonConverter;
+#convert(Lcom/mongodb/DBObject;)Lorg/springframework/data/geo/Polygon;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToPolygonConverter

+###org/springframework/data/mongodb/core/convert/MongoTypeMapper
@1.0.0.RELEASE
+#isTypeKey(Ljava/lang/String;)Z
@1.3.0.RELEASE
+#writeTypeRestrictions(Lcom/mongodb/DBObject;Ljava/util/Set;)V
@2.0.0.RELEASE
+#writeTypeRestrictions(Lorg/bson/Document;Ljava/util/Set;)V
-#writeTypeRestrictions(Lcom/mongodb/DBObject;Ljava/util/Set;)V
@2.2.0.RELEASE
+#getWriteTargetTypeFor(Ljava/lang/Class;)Ljava/lang/Class;

+###org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter;
+#convert(Lorg/bson/types/ObjectId;)Ljava/math/BigInteger;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToBigIntegerConverter

+###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToPointConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToPointConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToPointConverter;
+#convert(Lcom/mongodb/DBObject;)Lorg/springframework/data/geo/Point;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToPointConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter
@1.0.2.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter;
+#convert(Ljava/lang/String;)Ljava/net/URL;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$StringToURLConverter

+###org/springframework/data/mongodb/core/convert/DbRefResolver
@1.4.0.RELEASE
+#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;)Ljava/lang/Object;
+#createDbRef(Lorg/springframework/data/mongodb/core/mapping/DBRef;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/lang/Object;)Lcom/mongodb/DBRef;
@1.4.2.RELEASE
+#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBRef;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;)Ljava/lang/Object;
-#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;)Ljava/lang/Object;
@1.6.0.RELEASE
+#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBRef;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;Lorg/springframework/data/mongodb/core/convert/DbRefProxyHandler;)Ljava/lang/Object;
-#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBRef;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;)Ljava/lang/Object;
@1.7.0.RELEASE
+#fetch(Lcom/mongodb/DBRef;)Lcom/mongodb/DBObject;
@1.10.0.RELEASE
+#bulkFetch(Ljava/util/List;)Ljava/util/List;
@2.0.0.RELEASE
+#fetch(Lcom/mongodb/DBRef;)Lorg/bson/Document;
-#fetch(Lcom/mongodb/DBRef;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/convert/MongoWriter
@1.0.0.RELEASE
+#convertToMongoType(Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0.RELEASE
+#toDBRef(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lcom/mongodb/DBRef;
@1.1.2.RELEASE
+#convertToMongoType(Ljava/lang/Object;Lorg/springframework/data/util/TypeInformation;)Ljava/lang/Object;
@3.2.0
+#convertToMongoType(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Ljava/lang/Object;
@3.3.0
+#toDocumentPointer(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lorg/springframework/data/mongodb/core/mapping/DocumentPointer;

+###org/springframework/data/mongodb/core/convert/GeoConverters$CircleToDbObjectConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$CircleToDbObjectConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$CircleToDbObjectConverter;
+#convert(Lorg/springframework/data/geo/Circle;)Lcom/mongodb/DBObject;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$CircleToDbObjectConverter

+###org/springframework/data/mongodb/core/convert/GeoConverters$BoxToDbObjectConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$BoxToDbObjectConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$BoxToDbObjectConverter;
+#convert(Lorg/springframework/data/geo/Box;)Lcom/mongodb/DBObject;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$BoxToDbObjectConverter

+###org/springframework/data/mongodb/core/convert/QueryMapper$Field
@1.3.4.RELEASE
+#<init>(Ljava/lang/String;)V
+#with(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/QueryMapper$Field;
+#isIdField()Z
+#getProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#getPropertyEntity()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;
+#isAssociation()Z
+#getMappedKey()Ljava/lang/String;
@1.4.0.RELEASE
+#containsAssociation()Z
+#getAssociation()Lorg/springframework/data/mapping/Association;
@1.6.3.RELEASE
+#getTypeHint()Lorg/springframework/data/util/TypeInformation;
@1.7.0.RELEASE
-#getTypeHint()Lorg/springframework/data/util/TypeInformation;
@1.7.1.RELEASE
+#getTypeHint()Lorg/springframework/data/util/TypeInformation;
@2.1.4.RELEASE
+#isMap()Z
@3.4.3
+#getFieldType()Ljava/lang/Class;

+###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToLegacyCircleConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToLegacyCircleConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToLegacyCircleConverter;
+#convert(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/geo/Circle;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToLegacyCircleConverter

+###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToCircleConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToCircleConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToCircleConverter;
+#convert(Lcom/mongodb/DBObject;)Lorg/springframework/data/geo/Circle;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToCircleConverter

+###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToSphereConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToSphereConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToSphereConverter;
+#convert(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/geo/Sphere;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToSphereConverter

+###org/springframework/data/mongodb/core/convert/DefaultMongoTypeMapper$DBObjectTypeAliasAccessor
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#readAliasFrom(Lcom/mongodb/DBObject;)Ljava/lang/Object;
+#writeTypeTo(Lcom/mongodb/DBObject;Ljava/lang/Object;)V
+#writeTypeTo(Ljava/lang/Object;Ljava/lang/Object;)V
+#readAliasFrom(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/convert/DefaultMongoTypeMapper$DBObjectTypeAliasAccessor

+###org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter;
+#convert(Lorg/bson/types/ObjectId;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$ObjectIdToStringConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter;
+#convert(Ljava/math/BigInteger;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToStringConverter

+###org/springframework/data/mongodb/core/convert/QueryMapper
@1.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#getMappedObject(Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;
+#getMappedKeyword(Lorg/springframework/data/mongodb/core/convert/QueryMapper$Keyword;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lcom/mongodb/DBObject;
+#convertId(Ljava/lang/Object;)Ljava/lang/Object;
@1.2.2.RELEASE
-#getMappedKeyword(Lorg/springframework/data/mongodb/core/convert/QueryMapper$Keyword;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lcom/mongodb/DBObject;
@1.6.0.RELEASE
+#getMappedSort(Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;
+#getMappedFields(Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#getMappedObject(Lorg/bson/conversions/Bson;Ljava/util/Optional;)Lorg/bson/Document;
+#getMappedObject(Lorg/bson/conversions/Bson;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lorg/bson/Document;
+#getMappedSort(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lorg/bson/Document;
+#getMappedFields(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lorg/bson/Document;
+#getMappingContext()Lorg/springframework/data/mapping/context/MappingContext;
-#getMappedObject(Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;
-#getMappedSort(Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;
-#getMappedFields(Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#convertId(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@3.4.0
+#addMetaAttributes(Lorg/bson/Document;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lorg/bson/Document;
@4.0.0
+#getConverter()Lorg/springframework/data/mongodb/core/convert/MongoConverter;

+###org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter;
+#convert(Ljava/math/BigDecimal;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$BigDecimalToStringConverter

+###org/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDbObjectConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDbObjectConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDbObjectConverter;
+#convert(Lorg/springframework/data/mongodb/core/query/GeoCommand;)Lcom/mongodb/DBObject;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$GeoCommandToDbObjectConverter

+###org/springframework/data/mongodb/core/convert/LazyLoadingProxy
@1.4.2.RELEASE
+#initialize()Ljava/lang/Object;
+#toDBRef()Lcom/mongodb/DBRef;
@1.6.0.RELEASE
+#getTarget()Ljava/lang/Object;
-#initialize()Ljava/lang/Object;
@3.3.0
+#getSource()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter;
+#convert(Ljava/math/BigInteger;)Lorg/bson/types/ObjectId;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$BigIntegerToObjectIdConverter

+###org/springframework/data/mongodb/core/convert/AbstractMongoConverter
@1.0.0.RELEASE
+#<init>(Lorg/springframework/core/convert/support/GenericConversionService;)V
+#setCustomConversions(Lorg/springframework/data/mongodb/core/convert/CustomConversions;)V
+#getConversionService()Lorg/springframework/core/convert/ConversionService;
+#afterPropertiesSet()V
@1.1.0.RELEASE
+#setInstantiators(Lorg/springframework/data/convert/EntityInstantiators;)V
@1.1.2.RELEASE
+#convertToMongoType(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
+#setCustomConversions(Lorg/springframework/data/convert/CustomConversions;)V
-#setCustomConversions(Lorg/springframework/data/mongodb/core/convert/CustomConversions;)V
-#convertToMongoType(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.RELEASE
+#setInstantiators(Lorg/springframework/data/mapping/model/EntityInstantiators;)V
-#setInstantiators(Lorg/springframework/data/convert/EntityInstantiators;)V

+###org/springframework/data/mongodb/core/convert/DbRefResolverCallback
@1.4.0.RELEASE
+#resolve(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToBoxConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToBoxConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToBoxConverter;
+#convert(Lcom/mongodb/DBObject;)Lorg/springframework/data/geo/Box;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$DbObjectToBoxConverter

+###org/springframework/data/mongodb/core/convert/UpdateMapper
@1.3.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
@1.10.0.RELEASE
+#getSortObject(Lorg/springframework/data/domain/Sort;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#getMappedObject(Lorg/bson/conversions/Bson;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lorg/bson/Document;
+#isUpdateObject(Lorg/bson/Document;)Z
-#getSortObject(Lorg/springframework/data/domain/Sort;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter
@1.0.2.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter;
+#convert(Ljava/net/URL;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$URLToStringConverter

+###org/springframework/data/mongodb/core/convert/DefaultMongoTypeMapper
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mapping/context/MappingContext;)V
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#isTypeKey(Ljava/lang/String;)Z
@1.3.0.RELEASE
+#writeTypeRestrictions(Lcom/mongodb/DBObject;Ljava/util/Set;)V
@2.0.0.RELEASE
+#writeTypeRestrictions(Lorg/bson/Document;Ljava/util/Set;)V
-#writeTypeRestrictions(Lcom/mongodb/DBObject;Ljava/util/Set;)V
@2.2.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mapping/context/MappingContext;Ljava/util/function/UnaryOperator;)V
+#getWriteTargetTypeFor(Ljava/lang/Class;)Ljava/lang/Class;

+###org/springframework/data/mongodb/core/convert/MongoConverters$DBObjectToStringConverter
@1.3.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$DBObjectToStringConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$DBObjectToStringConverter;
+#convert(Lcom/mongodb/DBObject;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$DBObjectToStringConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter;
+#convert(Ljava/lang/String;)Lorg/bson/types/ObjectId;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$StringToObjectIdConverter

+###org/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDbObjectConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDbObjectConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDbObjectConverter;
+#convert(Lorg/springframework/data/geo/Polygon;)Lcom/mongodb/DBObject;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$PolygonToDbObjectConverter

+###org/springframework/data/mongodb/core/convert/DefaultDbRefResolver
@1.4.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;)V
+#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;)Ljava/lang/Object;
+#createDbRef(Lorg/springframework/data/mongodb/core/mapping/DBRef;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/lang/Object;)Lcom/mongodb/DBRef;
@1.4.2.RELEASE
+#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBRef;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;)Ljava/lang/Object;
-#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;)Ljava/lang/Object;
@1.6.0.RELEASE
+#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBRef;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;Lorg/springframework/data/mongodb/core/convert/DbRefProxyHandler;)Ljava/lang/Object;
-#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBRef;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;)Ljava/lang/Object;
@1.7.0.RELEASE
+#fetch(Lcom/mongodb/DBRef;)Lcom/mongodb/DBObject;
@1.10.0.RELEASE
+#bulkFetch(Ljava/util/List;)Ljava/util/List;
@2.0.0.RELEASE
+#fetch(Lcom/mongodb/DBRef;)Lorg/bson/Document;
-#fetch(Lcom/mongodb/DBRef;)Lcom/mongodb/DBObject;
@2.1.0.RELEASE
-#createDbRef(Lorg/springframework/data/mongodb/core/mapping/DBRef;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/lang/Object;)Lcom/mongodb/DBRef;
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;)V
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;)V

+###org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter;
+#convert(Ljava/lang/String;)Ljava/math/BigDecimal;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigDecimalConverter

+###org/springframework/data/mongodb/core/convert/MongoConverter
@1.0.0.RELEASE
@1.3.0.RELEASE
+#getTypeMapper()Lorg/springframework/data/mongodb/core/convert/MongoTypeMapper;
@2.1.0.RELEASE
+#mapValueToTargetType(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/convert/DbRefResolver;)Ljava/lang/Object;
@2.2.0.RELEASE
+#convertId(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@3.4.0
+#getProjectionFactory()Lorg/springframework/data/projection/ProjectionFactory;
+#getCustomConversions()Lorg/springframework/data/convert/CustomConversions;
+#project(Lorg/springframework/data/projection/EntityProjection;Lorg/bson/conversions/Bson;)Ljava/lang/Object;
@4.0.0
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;

+###org/springframework/data/mongodb/core/convert/GeoConverters$PointToDbObjectConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$PointToDbObjectConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$PointToDbObjectConverter;
+#convert(Lorg/springframework/data/geo/Point;)Lcom/mongodb/DBObject;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$PointToDbObjectConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter;
+#convert(Ljava/lang/String;)Ljava/math/BigInteger;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$StringToBigIntegerConverter

+###org/springframework/data/mongodb/core/convert/GeoConverters$SphereToDbObjectConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$SphereToDbObjectConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$SphereToDbObjectConverter;
+#convert(Lorg/springframework/data/mongodb/core/geo/Sphere;)Lcom/mongodb/DBObject;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.7.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$SphereToDbObjectConverter

+###org/springframework/data/mongodb/core/convert/GeoConverters$LegacyCircleToDbObjectConverter
@1.5.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/GeoConverters$LegacyCircleToDbObjectConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/GeoConverters$LegacyCircleToDbObjectConverter;
+#convert(Lorg/springframework/data/mongodb/core/geo/Circle;)Lcom/mongodb/DBObject;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/convert/GeoConverters$LegacyCircleToDbObjectConverter

+###org/springframework/data/mongodb/core/convert/CustomConversions
@1.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#getSimpleTypeHolder()Lorg/springframework/data/mapping/model/SimpleTypeHolder;
+#isSimpleType(Ljava/lang/Class;)Z
+#registerConvertersIn(Lorg/springframework/core/convert/support/GenericConversionService;)V
+#getCustomWriteTarget(Ljava/lang/Class;)Ljava/lang/Class;
+#getCustomWriteTarget(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#hasCustomWriteTarget(Ljava/lang/Class;)Z
+#hasCustomWriteTarget(Ljava/lang/Class;Ljava/lang/Class;)Z
+#hasCustomReadTarget(Ljava/lang/Class;Ljava/lang/Class;)Z
@2.0.0.RELEASE
-#getSimpleTypeHolder()Lorg/springframework/data/mapping/model/SimpleTypeHolder;
-#isSimpleType(Ljava/lang/Class;)Z
-#registerConvertersIn(Lorg/springframework/core/convert/support/GenericConversionService;)V
-#getCustomWriteTarget(Ljava/lang/Class;)Ljava/lang/Class;
-#getCustomWriteTarget(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
-#hasCustomWriteTarget(Ljava/lang/Class;)Z
-#hasCustomWriteTarget(Ljava/lang/Class;Ljava/lang/Class;)Z
-#hasCustomReadTarget(Ljava/lang/Class;Ljava/lang/Class;)Z
@4.0.0
-###org/springframework/data/mongodb/core/convert/CustomConversions

+###org/springframework/data/mongodb/core/CollectionOptions
@1.0.0.RELEASE
+#<init>(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;)V
+#getMaxDocuments()Ljava/lang/Integer;
+#setMaxDocuments(Ljava/lang/Integer;)V
+#getSize()Ljava/lang/Integer;
+#setSize(Ljava/lang/Integer;)V
+#getCapped()Ljava/lang/Boolean;
+#setCapped(Ljava/lang/Boolean;)V
@2.0.0.RELEASE
+#<init>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Boolean;)V[deprecated]
+#just(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#empty()Lorg/springframework/data/mongodb/core/CollectionOptions;
+#capped()Lorg/springframework/data/mongodb/core/CollectionOptions;
+#maxDocuments(J)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#size(J)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#getMaxDocuments()Ljava/util/Optional;
+#getSize()Ljava/util/Optional;
+#getCapped()Ljava/util/Optional;
+#getCollation()Ljava/util/Optional;
-#<init>(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;)V
-#getMaxDocuments()Ljava/lang/Integer;
-#setMaxDocuments(Ljava/lang/Integer;)V
-#getSize()Ljava/lang/Integer;
-#setSize(Ljava/lang/Integer;)V
-#getCapped()Ljava/lang/Boolean;
-#setCapped(Ljava/lang/Boolean;)V
@2.1.0.RELEASE
+#schema(Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#validator(Lorg/springframework/data/mongodb/core/validation/Validator;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#disableValidation()Lorg/springframework/data/mongodb/core/CollectionOptions;
+#strictValidation()Lorg/springframework/data/mongodb/core/CollectionOptions;
+#moderateValidation()Lorg/springframework/data/mongodb/core/CollectionOptions;
+#warnOnValidationError()Lorg/springframework/data/mongodb/core/CollectionOptions;
+#failOnValidationError()Lorg/springframework/data/mongodb/core/CollectionOptions;
+#schemaValidationLevel(Lcom/mongodb/client/model/ValidationLevel;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#schemaValidationAction(Lcom/mongodb/client/model/ValidationAction;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#validation(Lorg/springframework/data/mongodb/core/CollectionOptions$ValidationOptions;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#getValidationOptions()Ljava/util/Optional;
@3.3.0
+#timeSeries(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#timeSeries(Lorg/springframework/data/mongodb/core/CollectionOptions$TimeSeriesOptions;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#getTimeSeriesOptions()Ljava/util/Optional;
@3.4.6
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.0.0
+#emitChangedRevisions()Lorg/springframework/data/mongodb/core/CollectionOptions;
+#changeStream(Lorg/springframework/data/mongodb/core/CollectionOptions$CollectionChangeStreamOptions;)Lorg/springframework/data/mongodb/core/CollectionOptions;
+#getChangeStreamOptions()Ljava/util/Optional;
-#<init>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Boolean;)V[deprecated]

+###org/springframework/data/mongodb/core/SimpleMongoDbFactory
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;)V
+#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;)V
+#<init>(Lcom/mongodb/MongoURI;)V
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#getWriteConcern()Lcom/mongodb/WriteConcern;
+#getDb()Lcom/mongodb/DB;
+#getDb(Ljava/lang/String;)Lcom/mongodb/DB;
+#destroy()V
+#parseChars([C)Ljava/lang/String;
@1.0.2.RELEASE
-#getWriteConcern()Lcom/mongodb/WriteConcern;
-#parseChars([C)Ljava/lang/String;
@1.4.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;Ljava/lang/String;)V
+#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
@1.7.0.RELEASE
*#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;)V[deprecated]
*#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;)V[deprecated]
*#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;Ljava/lang/String;)V[deprecated]
*#<init>(Lcom/mongodb/MongoURI;)V[deprecated]
+#<init>(Lcom/mongodb/MongoClientURI;)V
+#<init>(Lcom/mongodb/MongoClient;Ljava/lang/String;)V
@2.0.0.RELEASE
+#getDb()Lcom/mongodb/client/MongoDatabase;
+#getDb(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;
+#getLegacyDb()Lcom/mongodb/DB;
-#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;)V[deprecated]
-#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;)V[deprecated]
-#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;Ljava/lang/String;)V[deprecated]
-#<init>(Lcom/mongodb/MongoURI;)V[deprecated]
-#getDb()Lcom/mongodb/DB;
-#getDb(Ljava/lang/String;)Lcom/mongodb/DB;
@2.1.0.RELEASE
+#getSession(Lcom/mongodb/ClientSessionOptions;)Lcom/mongodb/client/ClientSession;
-#setWriteConcern(Lcom/mongodb/WriteConcern;)V
-#getDb()Lcom/mongodb/client/MongoDatabase;
-#getDb(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;
-#destroy()V
-#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
@3.0.0.RELEASE
-###org/springframework/data/mongodb/core/SimpleMongoDbFactory

+###org/springframework/data/mongodb/core/aggregation/AggregationOperationContext
@1.3.0.RELEASE
+#getMappedObject(Lcom/mongodb/DBObject;)Lcom/mongodb/DBObject;
+#getReference(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
+#getReference(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
@2.0.0.RELEASE
+#getMappedObject(Lorg/bson/Document;)Lorg/bson/Document;
-#getMappedObject(Lcom/mongodb/DBObject;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#getMappedObject(Lorg/bson/Document;Ljava/lang/Class;)Lorg/bson/Document;
+#getFields(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
@3.0.0.RELEASE
+#continueOnMissingFieldReference()Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;
@4.0.0
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;

+###org/springframework/data/mongodb/core/aggregation/GroupOperation
@1.3.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Fields;)V
+#count()Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#sum(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#addToSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#addToSet(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#last(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#first(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#avg(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#push(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#push(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#min(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#max(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.7.0.RELEASE
+#last(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#first(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#avg(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#min(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#max(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
@1.10.0.RELEASE
+#stdDevSamp(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#stdDevSamp(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#stdDevPop(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
+#stdDevPop(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
@1.10.8.RELEASE
+#sum(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#inheritsFields()Z
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;
@3.2.0
+#accumulate(Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder;
@4.0.0
+#and(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation;

+###org/springframework/data/mongodb/core/aggregation/FieldsExposingAggregationOperation
@1.3.2.RELEASE
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
-#inheritsFields()Z
@2.0.7.RELEASE
+#inheritsFields()Z

+###org/springframework/data/mongodb/core/aggregation/TypeBasedAggregationOperationContext
@1.3.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/mongodb/core/convert/QueryMapper;)V
+#getMappedObject(Lcom/mongodb/DBObject;)Lcom/mongodb/DBObject;
+#getReference(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
+#getReference(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
@2.0.0.RELEASE
+#getMappedObject(Lorg/bson/Document;)Lorg/bson/Document;
-#getMappedObject(Lcom/mongodb/DBObject;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#getMappedObject(Lorg/bson/Document;Ljava/lang/Class;)Lorg/bson/Document;
+#getFields(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
@3.0.0.RELEASE
+#continueOnMissingFieldReference()Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;
@3.1.0
+#continueOnMissingFieldReference(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;
@3.2.0
+#getType()Ljava/lang/Class;
@4.0.0
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;

+###org/springframework/data/mongodb/core/aggregation/ExposedFields
@1.3.0.RELEASE
+#from([Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$ExposedField;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#synthetic(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#nonSynthetic(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#and(Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$ExposedField;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#getField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$ExposedField;
+#exposesSingleFieldOnly()Z
+#iterator()Ljava/util/Iterator;
@1.3.2.RELEASE
-#exposesSingleFieldOnly()Z
@2.0.0.RELEASE
+#empty()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;

+###org/springframework/data/mongodb/core/aggregation/Field
@1.3.0.RELEASE
+#getName()Ljava/lang/String;
+#getTarget()Ljava/lang/String;
@1.3.3.RELEASE
+#isAliased()Z
@2.1.11.RELEASE
+#isInternal()Z

+###org/springframework/data/mongodb/core/aggregation/SkipOperation
@1.3.0.RELEASE
+#<init>(J)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/UnwindOperation
@1.3.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Field;)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Field;Z)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Field;Lorg/springframework/data/mongodb/core/aggregation/Field;Z)V
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#newUnwind()Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$PathBuilder;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#inheritsFields()Z
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/Fields
@1.3.0.RELEASE
+#from([Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
+#fields([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
+#field(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Field;
+#field(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Field;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
+#and(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
+#and(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
+#and(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
+#getField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Field;
+#iterator()Ljava/util/Iterator;
@1.10.0.RELEASE
+#asList()Ljava/util/List;
@3.3.7
+#size()I
@3.4.0
-#size()I
@3.4.3
+#size()I

+###org/springframework/data/mongodb/core/aggregation/ProjectionOperation
@1.3.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Fields;)V
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#andExclude([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#andInclude([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#andInclude(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.3.2.RELEASE
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
@1.4.0.RELEASE
+#andExpression(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ExpressionProjectionOperationBuilder;
@1.7.0.RELEASE
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#inheritsFields()Z
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.7.RELEASE
+#inheritsFields()Z
@2.2.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#asArray(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#andArrayOf([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ArrayProjectionOperationBuilder;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder$OperationProjection;)V
+#previousOperation()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#nested(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#plus(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#minus(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#multiply(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#divide(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#mod(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#project(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
@1.3.2.RELEASE
+#plus(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#minus(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#multiply(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#divide(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#mod(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
@1.6.0.RELEASE
+#extractMinute()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractHour()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractSecond()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractMillisecond()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractYear()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractMonth()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractWeek()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractDayOfYear()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractDayOfMonth()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#extractDayOfWeek()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
@1.7.0.RELEASE
+#size()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
@1.10.0.RELEASE
+#applyCondition(Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#applyCondition(Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#minus(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#multiply(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#divide(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#mod(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#cmp(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#eq(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#gt(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#gte(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#lt(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#lte(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#ne(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#slice(I)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#slice(II)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#filter(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#equalsArrays([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#intersectsArrays([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#unionArrays([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#differenceToArray(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#subsetOfArray(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#anyElementInArrayTrue()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#allElementsInArrayTrue()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#absoluteValue()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#ceil()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#exp()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#floor()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#ln()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#log(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#log(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#log(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#log10()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#pow(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#pow(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#pow(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#sqrt()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#trunc()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#concat([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#substring(I)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#substring(II)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#toLower()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#toUpper()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#strCaseCmp(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#strCaseCmpValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#strCaseCmp(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#arrayElementAt(I)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#concatArrays([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#isArray()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#asLiteral()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#dateAsFormattedString(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#let(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
+#let(Ljava/util/Collection;Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
@1.10.15.RELEASE
+#dateAsFormattedString()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#dateAsFormattedString()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.10.RELEASE
+#dateAsFormattedString()Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;

+###org/springframework/data/mongodb/core/aggregation/Aggregation
@1.3.0.RELEASE
+#newAggregation([Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lorg/springframework/data/mongodb/core/aggregation/Aggregation;
+#newAggregation(Ljava/lang/Class;[Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;
+#previousOperation()Ljava/lang/String;
+#project([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#project(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#unwind(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation;
+#group([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation;
+#group(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation;
+#sort(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/aggregation/SortOperation;
+#sort(Lorg/springframework/data/domain/Sort$Direction;[Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SortOperation;
+#skip(I)Lorg/springframework/data/mongodb/core/aggregation/SkipOperation;
+#limit(J)Lorg/springframework/data/mongodb/core/aggregation/LimitOperation;
+#match(Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/aggregation/MatchOperation;
+#fields([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
+#bind(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
+#toDbObject(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toString()Ljava/lang/String;
@1.3.3.RELEASE
+#newAggregation(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/Aggregation;
+#newAggregation(Ljava/lang/Class;Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;
@1.6.0.RELEASE
+#withOptions(Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;)Lorg/springframework/data/mongodb/core/aggregation/Aggregation;
+#newAggregationOptions()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
@1.6.2.RELEASE
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GeoNearOperation;
@1.9.0.RELEASE
+#lookup(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation;
+#lookup(Lorg/springframework/data/mongodb/core/aggregation/Field;Lorg/springframework/data/mongodb/core/aggregation/Field;Lorg/springframework/data/mongodb/core/aggregation/Field;Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation;
@1.9.5.RELEASE
+#skip(J)Lorg/springframework/data/mongodb/core/aggregation/SkipOperation;
@1.10.0.RELEASE
+#replaceRoot(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation;
+#replaceRoot(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation;
+#replaceRoot()Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootOperationBuilder;
+#unwind(Ljava/lang/String;Z)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation;
+#unwind(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation;
+#unwind(Ljava/lang/String;Ljava/lang/String;Z)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation;
+#graphLookup(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$StartWithBuilder;
+#match(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/aggregation/MatchOperation;
+#out(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/OutOperation;
+#bucket(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperation;
+#bucket(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperation;
+#bucketAuto(Ljava/lang/String;I)Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation;
+#bucketAuto(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;I)Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation;
+#facet()Lorg/springframework/data/mongodb/core/aggregation/FacetOperation;
+#facet([Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lorg/springframework/data/mongodb/core/aggregation/FacetOperation$FacetOperationBuilder;
+#count()Lorg/springframework/data/mongodb/core/aggregation/CountOperation$CountOperationBuilder;
@1.10.10.RELEASE
+#getOptions()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;
@2.0.0.RELEASE
+#sample(J)Lorg/springframework/data/mongodb/core/aggregation/SampleOperation;
+#toDocument(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#getOptions()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;
@2.0.3.RELEASE
+#getOptions()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;
@2.1.0.RELEASE
+#sortByCount(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SortByCountOperation;
+#sortByCount(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SortByCountOperation;
+#toPipeline(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/util/List;
@2.2.0.RELEASE
+#project(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
@2.2.8.RELEASE
*#skip(I)Lorg/springframework/data/mongodb/core/aggregation/SkipOperation;[deprecated]
@3.0.0.RELEASE
+#newUpdate([Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#addFields()Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder;
+#merge()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#redact(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/RedactOperation;
@3.0.2.RELEASE
+#getPipeline()Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;
@3.3.0
+#match(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/MatchOperation;
@4.0.0
+#stage(Lorg/bson/conversions/Bson;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;
+#stage(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;
-#skip(I)Lorg/springframework/data/mongodb/core/aggregation/SkipOperation;[deprecated]

+###org/springframework/data/mongodb/core/aggregation/TypedAggregation
@1.3.0.RELEASE
+#<init>(Ljava/lang/Class;[Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)V
+#getInputType()Ljava/lang/Class;
@1.6.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/util/List;)V
+#<init>(Ljava/lang/Class;Ljava/util/List;Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;)V
+#withOptions(Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;)Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;
+#withOptions(Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;)Lorg/springframework/data/mongodb/core/aggregation/Aggregation;

+###org/springframework/data/mongodb/core/aggregation/AggregationResults
@1.3.0.RELEASE
+#<init>(Ljava/util/List;Lcom/mongodb/DBObject;)V
+#getMappedResults()Ljava/util/List;
+#getUniqueMappedResult()Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#getServerUsed()Ljava/lang/String;
@1.6.0.RELEASE
+#getRawResults()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/bson/Document;)V
+#getRawResults()Lorg/bson/Document;
-#<init>(Ljava/util/List;Lcom/mongodb/DBObject;)V
-#getRawResults()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/AggregationOperation
@1.3.0.RELEASE
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
*#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;[deprecated]
+#toPipelineStages(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/util/List;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/AggregationExpressionTransformer$AggregationExpressionTransformationContext
@1.4.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)V
+#getAggregationContext()Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;
+#getFieldReference()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lorg/bson/Document;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)V
-#<init>(Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)V

+###org/springframework/data/mongodb/core/aggregation/GroupOperation$GroupOperationBuilder
@1.3.0.RELEASE
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GroupOperation;

+###org/springframework/data/mongodb/core/aggregation/SortOperation
@1.3.0.RELEASE
+#<init>(Lorg/springframework/data/domain/Sort;)V
+#and(Lorg/springframework/data/domain/Sort$Direction;[Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SortOperation;
+#and(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/aggregation/SortOperation;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ProjectionOperation$ExpressionProjectionOperationBuilder
@1.4.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;[Ljava/lang/Object;)V
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.6.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;[Ljava/lang/Object;)V
+#project(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder;
-#<init>(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;[Ljava/lang/Object;)V
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/MatchOperation
@1.3.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/query/Criteria;)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.5.2.RELEASE
*#<init>(Lorg/springframework/data/mongodb/core/query/Criteria;)V[deprecated]
+#<init>(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)V
@1.6.0.RELEASE
-#<init>(Lorg/springframework/data/mongodb/core/query/Criteria;)V[deprecated]
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;
@3.3.0
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V

+###org/springframework/data/mongodb/core/aggregation/GeoNearOperation
@1.3.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/query/NearQuery;)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.6.2.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/String;)V
-#<init>(Lorg/springframework/data/mongodb/core/query/NearQuery;)V
@1.10.15.RELEASE
+#useIndex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GeoNearOperation;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#useIndex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GeoNearOperation;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.10.RELEASE
+#useIndex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GeoNearOperation;
@2.2.0.RELEASE
+#toPipelineStages(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/util/List;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/mapreduce/MapReduceCounts
@1.0.0.RELEASE
+#<init>(III)V
+#getInputCount()I
+#getEmitCount()I
+#getOutputCount()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.2.0.RELEASE
+#<init>(JJJ)V
+#getInputCount()J
+#getEmitCount()J
+#getOutputCount()J
-#<init>(III)V
-#getInputCount()I
-#getEmitCount()I
-#getOutputCount()I

+###org/springframework/data/mongodb/core/mapreduce/MapReduceTiming
@1.0.0.RELEASE
+#<init>(JJJ)V
+#getMapTime()J
+#getEmitLoopTime()J
+#getTotalTime()J
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/mongodb/core/mapreduce/MapReduceResults
@1.0.0.RELEASE
+#<init>(Ljava/util/List;Lcom/mongodb/DBObject;)V
+#iterator()Ljava/util/Iterator;
+#getTiming()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceTiming;
+#getCounts()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceCounts;
+#getOutputCollection()Ljava/lang/String;
+#getRawResults()Lcom/mongodb/DBObject;
@1.7.0.RELEASE
*#<init>(Ljava/util/List;Lcom/mongodb/DBObject;)V[deprecated]
+#<init>(Ljava/util/List;Lcom/mongodb/MapReduceOutput;)V
@2.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/bson/Document;)V[deprecated]
+#getRawResults()Lorg/bson/Document;
-#<init>(Ljava/util/List;Lcom/mongodb/DBObject;)V[deprecated]
-#getRawResults()Lcom/mongodb/DBObject;
@3.0.0.RELEASE
-#<init>(Ljava/util/List;Lcom/mongodb/MapReduceOutput;)V

+###org/springframework/data/mongodb/core/mapreduce/MapReduceOptions
@1.0.0.RELEASE
+#<init>()V
+#options()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#limit(I)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#outputCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#outputDatabase(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#outputTypeInline()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#outputTypeMerge()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#outputTypeReduce()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#outputTypeReplace()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#outputSharded(Z)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#finalizeFunction(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#scopeVariables(Ljava/util/Map;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#javaScriptMode(Z)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#verbose(Z)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#extraOption(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#getExtraOptions()Ljava/util/Map;
+#getFinalizeFunction()Ljava/lang/String;
+#getJavaScriptMode()Ljava/lang/Boolean;
+#getOutputCollection()Ljava/lang/String;
+#getOutputDatabase()Ljava/lang/String;
+#getOutputSharded()Ljava/lang/Boolean;
+#getOutputType()Lcom/mongodb/MapReduceCommand$OutputType;
+#getScopeVariables()Ljava/util/Map;
+#getOptionsObject()Lcom/mongodb/DBObject;
@1.7.0.RELEASE
*#extraOption(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
*#getExtraOptions()Ljava/util/Map;[deprecated]
@1.8.2.RELEASE
+#getLimit()Ljava/lang/Integer;
@2.0.0.RELEASE
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
+#getFinalizeFunction()Ljava/util/Optional;
+#getOutputDatabase()Ljava/util/Optional;
+#getOutputSharded()Ljava/util/Optional;
+#getCollation()Ljava/util/Optional;
+#getOptionsObject()Lorg/bson/Document;
-#getFinalizeFunction()Ljava/lang/String;
-#getOutputDatabase()Ljava/lang/String;
-#getOutputSharded()Ljava/lang/Boolean;
-#getOptionsObject()Lcom/mongodb/DBObject;
@2.0.10.RELEASE
+#getMapReduceAction()Lcom/mongodb/client/model/MapReduceAction;
+#usesInlineOutput()Z
@3.0.0.RELEASE
*#outputTypeInline()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
+#actionInline()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
*#outputTypeMerge()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
+#actionMerge()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
*#outputTypeReduce()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
+#actionReduce()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
*#outputTypeReplace()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
+#actionReplace()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;
-#getOutputType()Lcom/mongodb/MapReduceCommand$OutputType;
@4.0.0
-#outputTypeInline()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
-#outputTypeMerge()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
-#outputTypeReduce()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
-#outputTypeReplace()Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
-#extraOption(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;[deprecated]
-#getExtraOptions()Ljava/util/Map;[deprecated]

+###org/springframework/data/mongodb/core/mapreduce/GroupByResults
@1.0.0.RELEASE
+#<init>(Ljava/util/List;Lcom/mongodb/DBObject;)V
+#getCount()D
+#getKeys()I
+#getServerUsed()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;
+#getRawResults()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/bson/Document;)V
+#getRawResults()Lorg/bson/Document;
-#<init>(Ljava/util/List;Lcom/mongodb/DBObject;)V
-#getRawResults()Lcom/mongodb/DBObject;
@4.0.0
-###org/springframework/data/mongodb/core/mapreduce/GroupByResults

+###org/springframework/data/mongodb/core/mapreduce/GroupBy
@1.0.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#keyFunction(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
+#key([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
+#initialDocument(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
+#initialDocument(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
+#reduceFunction(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
+#finalizeFunction(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
+#getGroupByObject()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#initialDocument(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
+#getGroupByObject()Lorg/bson/Document;
-#initialDocument(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;
-#getGroupByObject()Lcom/mongodb/DBObject;
@4.0.0
-###org/springframework/data/mongodb/core/mapreduce/GroupBy

+###org/springframework/data/mongodb/core/MongoOperations
@1.0.0.RELEASE
+#getCollectionName(Ljava/lang/Class;)Ljava/lang/String;
+#executeCommand(Ljava/lang/String;)Lcom/mongodb/CommandResult;
+#executeCommand(Lcom/mongodb/DBObject;)Lcom/mongodb/CommandResult;
+#executeCommand(Lcom/mongodb/DBObject;I)Lcom/mongodb/CommandResult;
+#executeQuery(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Lorg/springframework/data/mongodb/core/DocumentCallbackHandler;)V
+#execute(Lorg/springframework/data/mongodb/core/DbCallback;)Ljava/lang/Object;
+#execute(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionCallback;)Ljava/lang/Object;
+#execute(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionCallback;)Ljava/lang/Object;
+#executeInSession(Lorg/springframework/data/mongodb/core/DbCallback;)Ljava/lang/Object;
+#createCollection(Ljava/lang/Class;)Lcom/mongodb/DBCollection;
+#createCollection(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/DBCollection;
+#createCollection(Ljava/lang/String;)Lcom/mongodb/DBCollection;
+#createCollection(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/DBCollection;
+#getCollectionNames()Ljava/util/Set;
+#getCollection(Ljava/lang/String;)Lcom/mongodb/DBCollection;
+#collectionExists(Ljava/lang/Class;)Z
+#collectionExists(Ljava/lang/String;)Z
+#dropCollection(Ljava/lang/Class;)V
+#dropCollection(Ljava/lang/String;)V
+#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/IndexOperations;
+#indexOps(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/IndexOperations;
+#findAll(Ljava/lang/Class;)Ljava/util/List;
+#findAll(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/List;
+#group(Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
+#group(Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
+#mapReduce(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/geo/GeoResults;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/geo/GeoResults;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/lang/Object;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#find(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/util/List;
+#find(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/List;
+#findById(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#findById(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#findAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)J
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)J
+#insert(Ljava/lang/Object;)V
+#insert(Ljava/lang/Object;Ljava/lang/String;)V
+#insert(Ljava/util/Collection;Ljava/lang/Class;)V
+#insert(Ljava/util/Collection;Ljava/lang/String;)V
+#insertAll(Ljava/util/Collection;)V
+#save(Ljava/lang/Object;)V
+#save(Ljava/lang/Object;Ljava/lang/String;)V
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/String;)V
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)V
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)V
+#getConverter()Lorg/springframework/data/mongodb/core/convert/MongoConverter;
@1.3.0.RELEASE
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Z
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Z
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Z
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)V
@1.5.0.RELEASE
+#remove(Ljava/lang/Object;)Lcom/mongodb/WriteResult;
+#remove(Ljava/lang/Object;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Ljava/util/List;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/util/List;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/List;
-#remove(Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;Ljava/lang/String;)V
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)V
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)V
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)V
@1.6.0.RELEASE
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lorg/springframework/data/geo/GeoResults;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/geo/GeoResults;
-#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/geo/GeoResults;
-#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/geo/GeoResults;
@1.6.2.RELEASE
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)J
@1.7.0.RELEASE
*#executeCommand(Lcom/mongodb/DBObject;I)Lcom/mongodb/CommandResult;[deprecated]
+#executeCommand(Lcom/mongodb/DBObject;Lcom/mongodb/ReadPreference;)Lcom/mongodb/CommandResult;
*#executeInSession(Lorg/springframework/data/mongodb/core/DbCallback;)Ljava/lang/Object;[deprecated]
+#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#scriptOps()Lorg/springframework/data/mongodb/core/ScriptOperations;
@1.9.0.RELEASE
+#bulkOps(Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#bulkOps(Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#bulkOps(Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/BulkOperations;
@1.10.0.RELEASE
+#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
@2.0.0.RELEASE
+#executeCommand(Ljava/lang/String;)Lorg/bson/Document;
+#executeCommand(Lorg/bson/Document;)Lorg/bson/Document;
+#executeCommand(Lorg/bson/Document;Lcom/mongodb/ReadPreference;)Lorg/bson/Document;
+#createCollection(Ljava/lang/Class;)Lcom/mongodb/client/MongoCollection;
+#createCollection(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/client/MongoCollection;
+#createCollection(Ljava/lang/String;)Lcom/mongodb/client/MongoCollection;
+#createCollection(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/client/MongoCollection;
+#getCollection(Ljava/lang/String;)Lcom/mongodb/client/MongoCollection;
+#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
+#indexOps(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#remove(Ljava/lang/Object;)Lcom/mongodb/client/result/DeleteResult;
+#remove(Ljava/lang/Object;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lcom/mongodb/client/result/DeleteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
-#executeCommand(Ljava/lang/String;)Lcom/mongodb/CommandResult;
-#executeCommand(Lcom/mongodb/DBObject;)Lcom/mongodb/CommandResult;
-#executeCommand(Lcom/mongodb/DBObject;I)Lcom/mongodb/CommandResult;[deprecated]
-#executeCommand(Lcom/mongodb/DBObject;Lcom/mongodb/ReadPreference;)Lcom/mongodb/CommandResult;
-#executeInSession(Lorg/springframework/data/mongodb/core/DbCallback;)Ljava/lang/Object;[deprecated]
-#createCollection(Ljava/lang/Class;)Lcom/mongodb/DBCollection;
-#createCollection(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/DBCollection;
-#createCollection(Ljava/lang/String;)Lcom/mongodb/DBCollection;
-#createCollection(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/DBCollection;
-#getCollection(Ljava/lang/String;)Lcom/mongodb/DBCollection;
-#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/IndexOperations;
-#indexOps(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/IndexOperations;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#remove(Ljava/lang/Object;)Lcom/mongodb/WriteResult;
-#remove(Ljava/lang/Object;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lcom/mongodb/WriteResult;
@2.1.0.RELEASE
+#withSession(Lcom/mongodb/ClientSessionOptions;)Lorg/springframework/data/mongodb/core/SessionScoped;
+#withSession(Ljava/util/function/Supplier;)Lorg/springframework/data/mongodb/core/SessionScoped;
+#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/core/MongoOperations;
+#findDistinct(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Ljava/lang/Object;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;)Ljava/lang/Object;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/String;)Ljava/lang/Object;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#insert(Ljava/lang/Object;)Ljava/lang/Object;
+#insert(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#insert(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;
+#insert(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
+#insertAll(Ljava/util/Collection;)Ljava/util/Collection;
+#save(Ljava/lang/Object;)Ljava/lang/Object;
+#save(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
-#insert(Ljava/lang/Object;)V
-#insert(Ljava/lang/Object;Ljava/lang/String;)V
-#insert(Ljava/util/Collection;Ljava/lang/Class;)V
-#insert(Ljava/util/Collection;Ljava/lang/String;)V
-#insertAll(Ljava/util/Collection;)V
-#save(Ljava/lang/Object;)V
-#save(Ljava/lang/Object;Ljava/lang/String;)V
@2.2.0.RELEASE
*#scriptOps()Lorg/springframework/data/mongodb/core/ScriptOperations;[deprecated]
*#group(Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;[deprecated]
*#group(Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;[deprecated]
*#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lorg/springframework/data/geo/GeoResults;[deprecated]
*#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/geo/GeoResults;[deprecated]
@3.0.0.RELEASE
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Ljava/lang/Object;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Ljava/lang/Object;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
@3.1.0
+#estimatedCount(Ljava/lang/Class;)J
+#estimatedCount(Ljava/lang/String;)J
@3.4.0
*#mapReduce(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;[deprecated]
*#mapReduce(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;[deprecated]
*#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;[deprecated]
*#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;[deprecated]
+#exactCount(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)J
+#exactCount(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)J
+#exactCount(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)J
@4.0.0
+#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/util/stream/Stream;
+#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/stream/Stream;
+#createView(Ljava/lang/String;Ljava/lang/Class;[Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lcom/mongodb/client/MongoCollection;
+#createView(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;)Lcom/mongodb/client/MongoCollection;
+#createView(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Lorg/springframework/data/mongodb/core/ViewOptions;)Lcom/mongodb/client/MongoCollection;
+#createView(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Lorg/springframework/data/mongodb/core/ViewOptions;)Lcom/mongodb/client/MongoCollection;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/stream/Stream;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Ljava/util/stream/Stream;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/stream/Stream;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/stream/Stream;
-#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
-#group(Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;[deprecated]
-#group(Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;[deprecated]
-#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;

+###org/springframework/data/mongodb/core/MongoActionOperation
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/MongoActionOperation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/MongoActionOperation;

+###org/springframework/data/mongodb/core/MongoExceptionTranslator
@1.0.0.RELEASE
+#<init>()V
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;

+###org/springframework/data/mongodb/core/MongoDbUtils
@1.0.0.RELEASE
+#getDB(Lcom/mongodb/Mongo;Ljava/lang/String;)Lcom/mongodb/DB;
+#getDB(Lcom/mongodb/Mongo;Ljava/lang/String;Ljava/lang/String;[C)Lcom/mongodb/DB;
+#doGetDB(Lcom/mongodb/Mongo;Ljava/lang/String;Ljava/lang/String;[CZ)Lcom/mongodb/DB;
+#isDBTransactional(Lcom/mongodb/DB;Lcom/mongodb/Mongo;)Z
+#closeDB(Lcom/mongodb/DB;)V
@1.1.0.RELEASE
+#getDB(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;)Lcom/mongodb/DB;
-#getDB(Lcom/mongodb/Mongo;Ljava/lang/String;Ljava/lang/String;[C)Lcom/mongodb/DB;
-#doGetDB(Lcom/mongodb/Mongo;Ljava/lang/String;Ljava/lang/String;[CZ)Lcom/mongodb/DB;
@1.4.0.RELEASE
+#getDB(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;Ljava/lang/String;)Lcom/mongodb/DB;
@1.7.0.RELEASE
*#getDB(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;)Lcom/mongodb/DB;[deprecated]
*#getDB(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;Ljava/lang/String;)Lcom/mongodb/DB;[deprecated]
*#closeDB(Lcom/mongodb/DB;)V[deprecated]
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/MongoDbUtils

+###org/springframework/data/mongodb/core/index/GeoSpatialIndexed
@1.0.0.RELEASE
+#name()Ljava/lang/String;
+#collection()Ljava/lang/String;
+#min()I
+#max()I
+#bits()I
@1.4.0.RELEASE
+#type()Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;
+#bucketSize()D
+#additionalField()Ljava/lang/String;
@1.5.0.RELEASE
+#useGeneratedName()Z
@1.6.0.RELEASE
*#collection()Ljava/lang/String;[deprecated]
@2.0.0.RELEASE
-#collection()Ljava/lang/String;[deprecated]
@4.0.0
*#bucketSize()D[deprecated]

+###org/springframework/data/mongodb/core/index/Index$Duplicates
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/index/Index$Duplicates;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/Index$Duplicates;
@4.0.0
-###org/springframework/data/mongodb/core/index/Index$Duplicates

+###org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$IndexDefinitionHolder
@1.5.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/index/IndexDefinition;Ljava/lang/String;)V
+#getCollection()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#getIndexDefinition()Lorg/springframework/data/mongodb/core/index/IndexDefinition;
+#getIndexKeys()Lcom/mongodb/DBObject;
+#getIndexOptions()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#getIndexKeys()Lorg/bson/Document;
+#getIndexOptions()Lorg/bson/Document;
-#getIndexKeys()Lcom/mongodb/DBObject;
-#getIndexOptions()Lcom/mongodb/DBObject;
@3.3.0
+#toString()Ljava/lang/String;

+###org/springframework/data/mongodb/core/index/IndexPredicate
@1.0.0.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getDirection()Lorg/springframework/data/mongodb/core/index/IndexDirection;
+#setDirection(Lorg/springframework/data/mongodb/core/index/IndexDirection;)V
+#isUnique()Z
+#setUnique(Z)V

+###org/springframework/data/mongodb/core/index/IndexDefinition
@1.0.0.RELEASE
+#getIndexKeys()Lcom/mongodb/DBObject;
+#getIndexOptions()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#getIndexKeys()Lorg/bson/Document;
+#getIndexOptions()Lorg/bson/Document;
-#getIndexKeys()Lcom/mongodb/DBObject;
-#getIndexOptions()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/index/GeospatialIndex
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#named(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
+#withMin(I)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
+#withMax(I)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
+#withBits(I)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
+#getIndexKeys()Lcom/mongodb/DBObject;
+#getIndexOptions()Lcom/mongodb/DBObject;
+#toString()Ljava/lang/String;
@1.4.0.RELEASE
+#typed(Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
+#withBucketSize(D)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
+#withAdditionalField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
@1.9.6.RELEASE
+#partial(Lorg/springframework/data/mongodb/core/index/IndexFilter;)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
@2.0.0.RELEASE
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;
+#getIndexKeys()Lorg/bson/Document;
+#getIndexOptions()Lorg/bson/Document;
-#getIndexKeys()Lcom/mongodb/DBObject;
-#getIndexOptions()Lcom/mongodb/DBObject;
@4.0.0
*#withBucketSize(D)Lorg/springframework/data/mongodb/core/index/GeospatialIndex;[deprecated]

+###org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;)V
+#resolveIndexForClass(Ljava/lang/Class;)Ljava/util/List;
+#resolveIndexForEntity(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Ljava/util/List;
+#resolveIndexForClass(Ljava/lang/Class;)Ljava/lang/Iterable;
@1.7.1.RELEASE
+#resolveIndexFor(Lorg/springframework/data/util/TypeInformation;)Ljava/lang/Iterable;
-#resolveIndexForClass(Ljava/lang/Class;)Ljava/util/List;
-#resolveIndexForClass(Ljava/lang/Class;)Ljava/lang/Iterable;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mapping/context/MappingContext;)V
+#setEvaluationContextProvider(Lorg/springframework/data/spel/EvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;)V

+###org/springframework/data/mongodb/core/index/IndexField
@1.0.2.RELEASE
+#create(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)Lorg/springframework/data/mongodb/core/index/IndexField;
+#geo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/IndexField;
+#getKey()Ljava/lang/String;
+#getOrder()Lorg/springframework/data/mongodb/core/query/Order;
+#isGeo()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.3.0.RELEASE
*#create(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)Lorg/springframework/data/mongodb/core/index/IndexField;[deprecated]
+#create(Ljava/lang/String;Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/mongodb/core/index/IndexField;
*#getOrder()Lorg/springframework/data/mongodb/core/query/Order;[deprecated]
+#getDirection()Lorg/springframework/data/domain/Sort$Direction;
@1.6.0.RELEASE
+#text(Ljava/lang/String;Ljava/lang/Float;)Lorg/springframework/data/mongodb/core/index/IndexField;
+#isText()Z
@2.0.0.RELEASE
-#create(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)Lorg/springframework/data/mongodb/core/index/IndexField;[deprecated]
-#getOrder()Lorg/springframework/data/mongodb/core/query/Order;[deprecated]
@2.2.0.RELEASE
+#isHashed()Z
@3.3.0
+#isWildcard()Z

+###org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$CyclicPropertyReferenceException
@1.5.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;

+###org/springframework/data/mongodb/core/index/CompoundIndex
@1.0.0.RELEASE
+#def()Ljava/lang/String;
+#direction()Lorg/springframework/data/mongodb/core/index/IndexDirection;
+#unique()Z
+#sparse()Z
+#dropDups()Z
+#name()Ljava/lang/String;
+#collection()Ljava/lang/String;
@1.0.3.RELEASE
*#direction()Lorg/springframework/data/mongodb/core/index/IndexDirection;[deprecated]
@1.3.0.RELEASE
+#background()Z
+#expireAfterSeconds()I
@1.5.0.RELEASE
+#useGeneratedName()Z
@1.5.1.RELEASE
*#expireAfterSeconds()I[deprecated]
@1.6.0.RELEASE
*#collection()Ljava/lang/String;[deprecated]
-#expireAfterSeconds()I[deprecated]
@2.0.0.RELEASE
-#collection()Ljava/lang/String;[deprecated]
@2.1.0.RELEASE
*#dropDups()Z[deprecated]
@3.1.0
+#partialFilter()Ljava/lang/String;
@4.0.0
+#collation()Ljava/lang/String;
-#direction()Lorg/springframework/data/mongodb/core/index/IndexDirection;[deprecated]
-#dropDups()Z[deprecated]

+###org/springframework/data/mongodb/core/index/GeoSpatialIndexType
@1.4.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/GeoSpatialIndexType;

+###org/springframework/data/mongodb/core/index/Index
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)V
+#on(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)Lorg/springframework/data/mongodb/core/index/Index;
+#named(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/Index;
+#unique()Lorg/springframework/data/mongodb/core/index/Index;
+#sparse()Lorg/springframework/data/mongodb/core/index/Index;
+#unique(Lorg/springframework/data/mongodb/core/index/Index$Duplicates;)Lorg/springframework/data/mongodb/core/index/Index;
+#getIndexKeys()Lcom/mongodb/DBObject;
+#getIndexOptions()Lcom/mongodb/DBObject;
+#toString()Ljava/lang/String;
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/domain/Sort$Direction;)V
*#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)V[deprecated]
*#on(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)Lorg/springframework/data/mongodb/core/index/Index;[deprecated]
+#on(Ljava/lang/String;Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/mongodb/core/index/Index;
@1.5.0.RELEASE
+#background()Lorg/springframework/data/mongodb/core/index/Index;
+#expire(J)Lorg/springframework/data/mongodb/core/index/Index;
+#expire(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/mongodb/core/index/Index;
@1.9.6.RELEASE
+#partial(Lorg/springframework/data/mongodb/core/index/IndexFilter;)Lorg/springframework/data/mongodb/core/index/Index;
@2.0.0.RELEASE
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/index/Index;
+#getIndexKeys()Lorg/bson/Document;
+#getIndexOptions()Lorg/bson/Document;
-#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)V[deprecated]
-#on(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)Lorg/springframework/data/mongodb/core/index/Index;[deprecated]
-#unique(Lorg/springframework/data/mongodb/core/index/Index$Duplicates;)Lorg/springframework/data/mongodb/core/index/Index;
-#getIndexKeys()Lcom/mongodb/DBObject;
-#getIndexOptions()Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#expire(Ljava/time/Duration;)Lorg/springframework/data/mongodb/core/index/Index;

+###org/springframework/data/mongodb/core/index/IndexInfo
@1.0.0.RELEASE
+#<init>(Ljava/util/Map;Ljava/lang/String;ZZZ)V
+#getFieldSpec()Ljava/util/Map;
+#getName()Ljava/lang/String;
+#isUnique()Z
+#isDropDuplicates()Z
+#isSparse()Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.0.2.RELEASE
+#<init>(Ljava/util/Map;Ljava/util/List;Ljava/lang/String;ZZZ)V
*#getFieldSpec()Ljava/util/Map;[deprecated]
+#getIndexFields()Ljava/util/List;
-#<init>(Ljava/util/Map;Ljava/lang/String;ZZZ)V
@1.1.0.RELEASE
+#<init>(Ljava/util/List;Ljava/lang/String;ZZZ)V
+#isIndexForFields(Ljava/util/Collection;)Z
-#<init>(Ljava/util/Map;Ljava/util/List;Ljava/lang/String;ZZZ)V
-#getFieldSpec()Ljava/util/Map;[deprecated]
@1.6.0.RELEASE
*#<init>(Ljava/util/List;Ljava/lang/String;ZZZ)V[deprecated]
+#<init>(Ljava/util/List;Ljava/lang/String;ZZZLjava/lang/String;)V
+#getLanguage()Ljava/lang/String;
@1.9.6.RELEASE
+#indexInfoOf(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/index/IndexInfo;
+#getPartialFilterExpression()Ljava/lang/String;
@2.0.0.RELEASE
+#<init>(Ljava/util/List;Ljava/lang/String;ZZLjava/lang/String;)V
+#indexInfoOf(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/index/IndexInfo;
+#getCollation()Ljava/util/Optional;
-#<init>(Ljava/util/List;Ljava/lang/String;ZZZ)V[deprecated]
-#<init>(Ljava/util/List;Ljava/lang/String;ZZZLjava/lang/String;)V
-#indexInfoOf(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/index/IndexInfo;
-#isDropDuplicates()Z
@2.2.0.RELEASE
+#getExpireAfter()Ljava/util/Optional;
+#isHashed()Z
@3.3.0
+#getWildcardProjection()Ljava/util/Optional;
+#isWildcard()Z

+###org/springframework/data/mongodb/core/index/CompoundIndexes
@1.0.0.RELEASE
+#value()[Lorg/springframework/data/mongodb/core/index/CompoundIndex;

+###org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexCreator
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/MongoDbFactory;)V
+#onApplicationEvent(Lorg/springframework/data/mapping/event/MappingContextEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.1.0.RELEASE
+#onApplicationEvent(Lorg/springframework/data/mapping/context/MappingContextEvent;)V
+#isIndexCreatorFor(Lorg/springframework/data/mapping/context/MappingContext;)Z
-#onApplicationEvent(Lorg/springframework/data/mapping/event/MappingContextEvent;)V
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/index/IndexResolver;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/core/index/IndexOperationsProvider;)V
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/core/index/IndexOperationsProvider;Lorg/springframework/data/mongodb/core/index/IndexResolver;)V
-#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/MongoDbFactory;)V
-#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/index/IndexResolver;)V

+###org/springframework/data/mongodb/core/index/CompoundIndexDefinition
@1.5.0.RELEASE
+#<init>(Lcom/mongodb/DBObject;)V
+#getIndexKeys()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#<init>(Lorg/bson/Document;)V
+#getIndexKeys()Lorg/bson/Document;
-#<init>(Lcom/mongodb/DBObject;)V
-#getIndexKeys()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/index/MongoMappingEventPublisher
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/index/MongoPersistentEntityIndexCreator;)V
+#publishEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.5.6.RELEASE
+#publishEvent(Ljava/lang/Object;)V
@1.6.0.RELEASE
-#publishEvent(Ljava/lang/Object;)V
@1.6.3.RELEASE
+#publishEvent(Ljava/lang/Object;)V
@1.7.0.RELEASE
-#publishEvent(Ljava/lang/Object;)V
@1.7.1.RELEASE
+#publishEvent(Ljava/lang/Object;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationListener;)V

+###org/springframework/data/mongodb/core/index/Indexed
@1.0.0.RELEASE
+#unique()Z
+#direction()Lorg/springframework/data/mongodb/core/index/IndexDirection;
+#sparse()Z
+#dropDups()Z
+#name()Ljava/lang/String;
+#collection()Ljava/lang/String;
@1.3.0.RELEASE
+#background()Z
+#expireAfterSeconds()I
@1.5.0.RELEASE
+#useGeneratedName()Z
@1.6.0.RELEASE
*#collection()Ljava/lang/String;[deprecated]
@2.0.0.RELEASE
-#collection()Ljava/lang/String;[deprecated]
@2.1.0.RELEASE
*#dropDups()Z[deprecated]
@2.2.0.RELEASE
+#expireAfter()Ljava/lang/String;
@3.1.0
+#partialFilter()Ljava/lang/String;
@4.0.0
+#collation()Ljava/lang/String;
-#dropDups()Z[deprecated]

+###org/springframework/data/mongodb/core/index/IndexDirection
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/index/IndexDirection;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/IndexDirection;

+###org/springframework/data/mongodb/core/mapping/MongoPersistentProperty
@1.0.0.RELEASE
+#getFieldName()Ljava/lang/String;
+#getFieldOrder()I
+#isDbReference()Z
+#getDBRef()Lorg/springframework/data/mongodb/core/mapping/DBRef;
@1.1.0.RELEASE
+#isVersionProperty()Z
@1.1.1.RELEASE
+#usePropertyAccess()Z
@1.2.0.RELEASE
-#isVersionProperty()Z
@1.3.0.RELEASE
+#isExplicitIdProperty()Z
@1.6.0.RELEASE
+#isLanguageProperty()Z
+#isTextScoreProperty()Z
@1.6.1.RELEASE
+#isExplicitLanguageProperty()Z
@2.2.0.RELEASE
+#getFieldType()Ljava/lang/Class;
+#hasExplicitWriteTarget()Z
@3.2.0
+#isUnwrapped()Z
@3.3.0
+#writeNullValues()Z
+#isDocumentReference()Z
+#getDocumentReference()Lorg/springframework/data/mongodb/core/mapping/DocumentReference;
+#getEncryptionKeyIds()Ljava/util/Collection;
@3.4.0
+#hasExplicitFieldName()Z

+###org/springframework/data/mongodb/core/mapping/BasicMongoPersistentProperty
@1.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
+#isAssociation()Z
+#isIdProperty()Z
+#getFieldName()Ljava/lang/String;
+#getFieldOrder()I
+#isDbReference()Z
+#getDBRef()Lorg/springframework/data/mongodb/core/mapping/DBRef;
@1.1.0.RELEASE
+#isVersionProperty()Z
@1.1.1.RELEASE
+#usePropertyAccess()Z
@1.2.0.RELEASE
-#isVersionProperty()Z
@1.3.0.RELEASE
+#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mongodb/core/mapping/FieldNamingStrategy;)V
+#isExplicitIdProperty()Z
-#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
@1.5.0.RELEASE
-#isAssociation()Z
-#usePropertyAccess()Z
@1.6.0.RELEASE
+#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mapping/model/FieldNamingStrategy;)V
+#isLanguageProperty()Z
+#isTextScoreProperty()Z
-#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mongodb/core/mapping/FieldNamingStrategy;)V
@1.6.1.RELEASE
+#isExplicitLanguageProperty()Z
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mapping/model/FieldNamingStrategy;)V
-#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mapping/model/FieldNamingStrategy;)V
@2.2.0.RELEASE
+#getFieldType()Ljava/lang/Class;
@3.3.0
+#writeNullValues()Z
+#isDocumentReference()Z
+#getDocumentReference()Lorg/springframework/data/mongodb/core/mapping/DocumentReference;
+#getEvaluationContext(Ljava/lang/Object;)Lorg/springframework/expression/EvaluationContext;
+#getEncryptionKeyIds()Ljava/util/Collection;
@3.4.0
+#hasExplicitFieldName()Z

+###org/springframework/data/mongodb/core/mapping/Field
@1.0.0.RELEASE
+#value()Ljava/lang/String;
+#order()I
@2.2.0.RELEASE
+#name()Ljava/lang/String;
+#targetType()Lorg/springframework/data/mongodb/core/mapping/FieldType;
@3.3.0
+#write()Lorg/springframework/data/mongodb/core/mapping/Field$Write;

+###org/springframework/data/mongodb/core/mapping/CachingMongoPersistentProperty
@1.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
+#isIdProperty()Z
+#getFieldName()Ljava/lang/String;
@1.1.0.RELEASE
+#isAssociation()Z
@1.3.0.RELEASE
+#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mongodb/core/mapping/FieldNamingStrategy;)V
-#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
@1.5.5.RELEASE
+#usePropertyAccess()Z
+#isTransient()Z
@1.6.0.RELEASE
+#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mapping/model/FieldNamingStrategy;)V
-#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mongodb/core/mapping/FieldNamingStrategy;)V
-#usePropertyAccess()Z
-#isTransient()Z
@1.6.2.RELEASE
+#usePropertyAccess()Z
+#isTransient()Z
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mapping/model/FieldNamingStrategy;)V
-#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;Lorg/springframework/data/mapping/model/FieldNamingStrategy;)V
@2.0.10.RELEASE
+#isDbReference()Z
+#getDBRef()Lorg/springframework/data/mongodb/core/mapping/DBRef;
@2.2.0.RELEASE
+#getFieldType()Ljava/lang/Class;
@3.3.0
+#writeNullValues()Z

+###org/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/util/TypeInformation;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getCollection()Ljava/lang/String;
@1.1.0.RELEASE
+#addPersistentProperty(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)V
+#getVersionProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#hasVersionProperty()Z
+#addPersistentProperty(Lorg/springframework/data/mapping/PersistentProperty;)V
@1.2.0.RELEASE
-#addPersistentProperty(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)V
-#getVersionProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
-#hasVersionProperty()Z
-#addPersistentProperty(Lorg/springframework/data/mapping/PersistentProperty;)V
@1.3.0.RELEASE
+#verify()V
@1.6.0.RELEASE
+#getLanguage()Ljava/lang/String;
+#getTextScoreProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#hasTextScoreProperty()Z
@2.1.0.RELEASE
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@2.2.0.RELEASE
+#getCollation()Lorg/springframework/data/mongodb/core/query/Collation;
+#getEvaluationContext(Ljava/lang/Object;)Lorg/springframework/expression/EvaluationContext;
@3.0.0.RELEASE
+#getShardKey()Lorg/springframework/data/mongodb/core/mapping/ShardKey;
@3.3.0
+#getEvaluationContext(Ljava/lang/Object;Lorg/springframework/data/spel/ExpressionDependencies;)Lorg/springframework/expression/EvaluationContext;
+#getEncryptionKeyIds()Ljava/util/Collection;

+###org/springframework/data/mongodb/core/mapping/SnakeCaseFieldNamingStrategy
@1.5.0.RELEASE
+#<init>()V
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/mapping/SnakeCaseFieldNamingStrategy

+###org/springframework/data/mongodb/core/mapping/CamelCaseSplittingFieldNamingStrategy
@1.5.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getFieldName(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/mapping/CamelCaseSplittingFieldNamingStrategy

+###org/springframework/data/mongodb/core/mapping/DBRef
@1.0.0.RELEASE
+#collection()Ljava/lang/String;
+#id()Ljava/lang/String;
+#db()Ljava/lang/String;
@1.1.0.RELEASE
-#collection()Ljava/lang/String;
-#id()Ljava/lang/String;
@1.4.0.RELEASE
+#lazy()Z

+###org/springframework/data/mongodb/core/mapping/Version
@1.1.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/mapping/Version

+###org/springframework/data/mongodb/core/mapping/CamelCaseAbbreviatingFieldNamingStrategy
@1.3.0.RELEASE
+#<init>()V
+#getFieldName(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/String;
@1.5.0.RELEASE
-#getFieldName(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/mapping/CamelCaseAbbreviatingFieldNamingStrategy

+###org/springframework/data/mongodb/core/mapping/PropertyNameFieldNamingStrategy
@1.3.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/mapping/PropertyNameFieldNamingStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/PropertyNameFieldNamingStrategy;
+#getFieldName(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/mapping/PropertyNameFieldNamingStrategy

+###org/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty$PropertyToFieldNameConverter;
+#convert(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/mapping/event/AfterConvertEvent
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Object;)V
@1.8.0.RELEASE
*#<init>(Lcom/mongodb/DBObject;Ljava/lang/Object;)V[deprecated]
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Object;Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Lorg/bson/Document;Ljava/lang/Object;Ljava/lang/String;)V
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Object;)V[deprecated]
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Object;Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/mapping/event/AfterSaveEvent
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
@1.8.0.RELEASE
*#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
+#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
-#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
-#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/mapping/event/AuditingEventListener
@1.2.0.RELEASE
+#<init>(Lorg/springframework/data/auditing/IsNewAwareAuditingHandler;)V
+#onApplicationEvent(Lorg/springframework/data/mongodb/core/mapping/event/BeforeConvertEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.5.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectFactory;)V
-#<init>(Lorg/springframework/data/auditing/IsNewAwareAuditingHandler;)V
@1.10.0.RELEASE
+#getOrder()I
@4.0.0
-###org/springframework/data/mongodb/core/mapping/event/AuditingEventListener

+###org/springframework/data/mongodb/core/mapping/event/ValidatingMongoEventListener
@1.1.0.RELEASE
+#<init>(Ljavax/validation/Validator;)V
+#onBeforeSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
@1.10.0.RELEASE
+#onBeforeSave(Lorg/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent;)V
-#onBeforeSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
@4.0.0
+#<init>(Ljakarta/validation/Validator;)V
-#<init>(Ljavax/validation/Validator;)V

+###org/springframework/data/mongodb/core/mapping/event/AfterLoadEvent
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V
+#getType()Ljava/lang/Class;
@1.8.0.RELEASE
*#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V[deprecated]
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Lorg/bson/Document;Ljava/lang/Class;Ljava/lang/String;)V
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V[deprecated]
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/mapping/event/LoggingEventListener
@1.0.0.RELEASE
+#<init>()V
+#onBeforeConvert(Ljava/lang/Object;)V
+#onBeforeSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
+#onAfterSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
+#onAfterLoad(Lcom/mongodb/DBObject;)V
+#onAfterConvert(Lcom/mongodb/DBObject;Ljava/lang/Object;)V
@1.3.0.RELEASE
+#onAfterDelete(Lcom/mongodb/DBObject;)V
+#onBeforeDelete(Lcom/mongodb/DBObject;)V
@1.10.0.RELEASE
+#onBeforeConvert(Lorg/springframework/data/mongodb/core/mapping/event/BeforeConvertEvent;)V
+#onBeforeSave(Lorg/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent;)V
+#onAfterSave(Lorg/springframework/data/mongodb/core/mapping/event/AfterSaveEvent;)V
+#onAfterLoad(Lorg/springframework/data/mongodb/core/mapping/event/AfterLoadEvent;)V
+#onAfterConvert(Lorg/springframework/data/mongodb/core/mapping/event/AfterConvertEvent;)V
+#onAfterDelete(Lorg/springframework/data/mongodb/core/mapping/event/AfterDeleteEvent;)V
+#onBeforeDelete(Lorg/springframework/data/mongodb/core/mapping/event/BeforeDeleteEvent;)V
-#onBeforeConvert(Ljava/lang/Object;)V
-#onBeforeSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
-#onAfterSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
-#onAfterLoad(Lcom/mongodb/DBObject;)V
-#onAfterConvert(Lcom/mongodb/DBObject;Ljava/lang/Object;)V
-#onAfterDelete(Lcom/mongodb/DBObject;)V
-#onBeforeDelete(Lcom/mongodb/DBObject;)V

+###org/springframework/data/mongodb/core/mapping/event/AfterDeleteEvent
@1.3.0.RELEASE
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V
@1.8.0.RELEASE
*#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V[deprecated]
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Lorg/bson/Document;Ljava/lang/Class;Ljava/lang/String;)V
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V[deprecated]
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/mapping/event/BeforeDeleteEvent
@1.3.0.RELEASE
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V
@1.8.0.RELEASE
*#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V[deprecated]
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Lorg/bson/Document;Ljava/lang/Class;Ljava/lang/String;)V
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V[deprecated]
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/mapping/event/AbstractDeleteEvent
@1.3.0.RELEASE
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V
+#getType()Ljava/lang/Class;
@1.8.0.RELEASE
*#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V[deprecated]
+#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Lorg/bson/Document;Ljava/lang/Class;Ljava/lang/String;)V
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;)V[deprecated]
-#<init>(Lcom/mongodb/DBObject;Ljava/lang/Class;Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/mapping/event/MongoMappingEvent
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
+#getDBObject()Lcom/mongodb/DBObject;
+#getSource()Ljava/lang/Object;
@1.8.0.RELEASE
*#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
+#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;Ljava/lang/String;)V
+#getCollectionName()Ljava/lang/String;
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
+#getDocument()Lorg/bson/Document;
-#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
-#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;Ljava/lang/String;)V
-#getDBObject()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/mapping/event/AbstractMongoEventListener
@1.0.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/data/mongodb/core/mapping/event/MongoMappingEvent;)V
+#onBeforeConvert(Ljava/lang/Object;)V
+#onBeforeSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
+#onAfterSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
+#onAfterLoad(Lcom/mongodb/DBObject;)V
+#onAfterConvert(Lcom/mongodb/DBObject;Ljava/lang/Object;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.3.0.RELEASE
+#onAfterDelete(Lcom/mongodb/DBObject;)V
+#onBeforeDelete(Lcom/mongodb/DBObject;)V
@1.8.0.RELEASE
*#onBeforeConvert(Ljava/lang/Object;)V[deprecated]
+#onBeforeConvert(Lorg/springframework/data/mongodb/core/mapping/event/BeforeConvertEvent;)V
*#onBeforeSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
+#onBeforeSave(Lorg/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent;)V
*#onAfterSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
+#onAfterSave(Lorg/springframework/data/mongodb/core/mapping/event/AfterSaveEvent;)V
*#onAfterLoad(Lcom/mongodb/DBObject;)V[deprecated]
+#onAfterLoad(Lorg/springframework/data/mongodb/core/mapping/event/AfterLoadEvent;)V
*#onAfterConvert(Lcom/mongodb/DBObject;Ljava/lang/Object;)V[deprecated]
+#onAfterConvert(Lorg/springframework/data/mongodb/core/mapping/event/AfterConvertEvent;)V
*#onAfterDelete(Lcom/mongodb/DBObject;)V[deprecated]
+#onAfterDelete(Lorg/springframework/data/mongodb/core/mapping/event/AfterDeleteEvent;)V
*#onBeforeDelete(Lcom/mongodb/DBObject;)V[deprecated]
+#onBeforeDelete(Lorg/springframework/data/mongodb/core/mapping/event/BeforeDeleteEvent;)V
@1.10.0.RELEASE
-#onBeforeConvert(Ljava/lang/Object;)V[deprecated]
-#onBeforeSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
-#onAfterSave(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
-#onAfterLoad(Lcom/mongodb/DBObject;)V[deprecated]
-#onAfterConvert(Lcom/mongodb/DBObject;Ljava/lang/Object;)V[deprecated]
-#onAfterDelete(Lcom/mongodb/DBObject;)V[deprecated]
-#onBeforeDelete(Lcom/mongodb/DBObject;)V[deprecated]

+###org/springframework/data/mongodb/core/mapping/event/BeforeSaveEvent
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V
@1.8.0.RELEASE
*#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
+#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)V
-#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;)V[deprecated]
-#<init>(Ljava/lang/Object;Lcom/mongodb/DBObject;Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/mapping/event/BeforeConvertEvent
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
@1.8.0.RELEASE
*#<init>(Ljava/lang/Object;)V[deprecated]
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
@2.0.0.RELEASE
-#<init>(Ljava/lang/Object;)V[deprecated]

+###org/springframework/data/mongodb/core/mapping/MongoPersistentEntity
@1.0.0.RELEASE
+#getCollection()Ljava/lang/String;
@1.1.0.RELEASE
+#getVersionProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#hasVersionProperty()Z
@1.2.0.RELEASE
-#getVersionProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
-#hasVersionProperty()Z
@1.6.0.RELEASE
+#getLanguage()Ljava/lang/String;
+#getTextScoreProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#hasTextScoreProperty()Z
@2.2.0.RELEASE
+#getCollation()Lorg/springframework/data/mongodb/core/query/Collation;
+#hasCollation()Z
@3.0.0.RELEASE
+#getShardKey()Lorg/springframework/data/mongodb/core/mapping/ShardKey;
+#isSharded()Z
@3.2.0
+#isUnwrapped()Z
@3.3.0
+#getEncryptionKeyIds()Ljava/util/Collection;

+###org/springframework/data/mongodb/core/mapping/FieldNamingStrategy
@1.3.0.RELEASE
+#getFieldName(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/String;
@1.6.0.RELEASE
-###org/springframework/data/mongodb/core/mapping/FieldNamingStrategy

+###org/springframework/data/mongodb/core/mapping/MongoMappingContext
@1.0.0.RELEASE
+#<init>()V
+#createPersistentProperty(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#createPersistentProperty(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mapping/model/MutablePersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/mapping/PersistentProperty;
@1.3.0.RELEASE
+#setFieldNamingStrategy(Lorg/springframework/data/mongodb/core/mapping/FieldNamingStrategy;)V
@1.6.0.RELEASE
+#setFieldNamingStrategy(Lorg/springframework/data/mapping/model/FieldNamingStrategy;)V
-#setFieldNamingStrategy(Lorg/springframework/data/mongodb/core/mapping/FieldNamingStrategy;)V
@2.0.0.RELEASE
+#createPersistentProperty(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#createPersistentProperty(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mapping/model/MutablePersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/mapping/PersistentProperty;
-#createPersistentProperty(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
-#createPersistentProperty(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mapping/model/MutablePersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/mapping/PersistentProperty;
@2.2.0.RELEASE
+#isAutoIndexCreation()Z
+#setAutoIndexCreation(Z)V
@3.2.0
+#createPersistentProperty(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#getPersistentEntity(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;
+#getPersistentEntity(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
+#getPersistentEntity(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/PersistentEntity;
-#createPersistentProperty(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;

+###org/springframework/data/mongodb/core/mapping/Document
@1.0.0.RELEASE
+#collection()Ljava/lang/String;
@1.6.0.RELEASE
+#language()Ljava/lang/String;
@2.1.0.RELEASE
+#value()Ljava/lang/String;
@2.2.0.RELEASE
+#collation()Ljava/lang/String;

+###org/springframework/data/mongodb/core/mapping/MongoSimpleTypes
@1.0.0.RELEASE

+###org/springframework/data/mongodb/core/CollectionCallback
@1.0.0.RELEASE
+#doInCollection(Lcom/mongodb/DBCollection;)Ljava/lang/Object;
@2.0.0.RELEASE
+#doInCollection(Lcom/mongodb/client/MongoCollection;)Ljava/lang/Object;
-#doInCollection(Lcom/mongodb/DBCollection;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/MongoAction
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/WriteConcern;Lorg/springframework/data/mongodb/core/MongoActionOperation;Ljava/lang/String;Ljava/lang/Class;Lcom/mongodb/DBObject;Lcom/mongodb/DBObject;)V
+#getCollectionName()Ljava/lang/String;
+#getDefaultWriteConcern()Lcom/mongodb/WriteConcern;
+#getEntityClass()Ljava/lang/Class;
+#getMongoActionOperation()Lorg/springframework/data/mongodb/core/MongoActionOperation;
+#getQuery()Lcom/mongodb/DBObject;
+#getDocument()Lcom/mongodb/DBObject;
@1.1.2.RELEASE
*#getEntityClass()Ljava/lang/Class;[deprecated]
+#getEntityType()Ljava/lang/Class;
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/WriteConcern;Lorg/springframework/data/mongodb/core/MongoActionOperation;Ljava/lang/String;Ljava/lang/Class;Lorg/bson/Document;Lorg/bson/Document;)V
+#getQuery()Lorg/bson/Document;
+#getDocument()Lorg/bson/Document;
-#<init>(Lcom/mongodb/WriteConcern;Lorg/springframework/data/mongodb/core/MongoActionOperation;Ljava/lang/String;Ljava/lang/Class;Lcom/mongodb/DBObject;Lcom/mongodb/DBObject;)V
-#getEntityClass()Ljava/lang/Class;[deprecated]
-#getQuery()Lcom/mongodb/DBObject;
-#getDocument()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/WriteConcernResolver
@1.0.0.RELEASE
+#resolve(Lorg/springframework/data/mongodb/core/MongoAction;)Lcom/mongodb/WriteConcern;

+###org/springframework/data/mongodb/core/WriteResultChecking
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/WriteResultChecking;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/WriteResultChecking;

+###org/springframework/data/mongodb/core/spel/LiteralNode
@1.4.0.RELEASE
+#isUnaryMinus(Lorg/springframework/data/mongodb/core/spel/ExpressionNode;)Z
+#isLiteral()Z

+###org/springframework/data/mongodb/core/spel/ExpressionNode
@1.4.0.RELEASE
+#from(Lorg/springframework/expression/spel/SpelNode;Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/data/mongodb/core/spel/ExpressionNode;
+#getName()Ljava/lang/String;
+#isOfType(Ljava/lang/Class;)Z
+#isMathematicalOperation()Z
+#isLiteral()Z
+#getValue()Ljava/lang/Object;
+#hasChildren()Z
+#getChild(I)Lorg/springframework/data/mongodb/core/spel/ExpressionNode;
+#hasfirstChildNotOfType(Ljava/lang/Class;)Z
+#iterator()Ljava/util/Iterator;
@1.10.0.RELEASE
+#isLogicalOperator()Z

+###org/springframework/data/mongodb/core/spel/MethodReferenceNode
@1.4.0.RELEASE
+#getMethodName()Ljava/lang/String;
@1.10.0.RELEASE
*#getMethodName()Ljava/lang/String;[deprecated]
+#getMethodReference()Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference;
@4.0.0
-#getMethodName()Ljava/lang/String;[deprecated]

+###org/springframework/data/mongodb/core/spel/ExpressionTransformer
@1.4.0.RELEASE
+#transform(Lorg/springframework/data/mongodb/core/spel/ExpressionTransformationContextSupport;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/spel/ExpressionTransformationContextSupport
@1.4.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lcom/mongodb/DBObject;)V
+#getCurrentNode()Lorg/springframework/data/mongodb/core/spel/ExpressionNode;
+#getParentNode()Lorg/springframework/data/mongodb/core/spel/ExpressionNode;
+#getPreviousOperationObject()Lcom/mongodb/DBObject;
+#hasPreviousOperation()Z
+#parentIsSameOperation()Z
+#addToPreviousOperation(Ljava/lang/Object;)Lcom/mongodb/DBObject;
+#addToPreviousOrReturn(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lorg/bson/Document;)V
+#getPreviousOperationObject()Lorg/bson/Document;
+#addToPreviousOperation(Ljava/lang/Object;)Lorg/bson/Document;
-#<init>(Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lorg/springframework/data/mongodb/core/spel/ExpressionNode;Lcom/mongodb/DBObject;)V
-#getPreviousOperationObject()Lcom/mongodb/DBObject;
-#addToPreviousOperation(Ljava/lang/Object;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/spel/OperatorNode
@1.4.0.RELEASE
+#isMathematicalOperation()Z
+#isUnaryOperator()Z
+#getMongoOperator()Ljava/lang/String;
+#isUnaryMinus()Z
+#getLeft()Lorg/springframework/data/mongodb/core/spel/ExpressionNode;
+#getRight()Lorg/springframework/data/mongodb/core/spel/ExpressionNode;
@1.10.0.RELEASE
+#isLogicalOperator()Z

+###org/springframework/data/mongodb/core/FindAndModifyOptions
@1.0.0.RELEASE
+#<init>()V
+#options()Lorg/springframework/data/mongodb/core/FindAndModifyOptions;
+#returnNew(Z)Lorg/springframework/data/mongodb/core/FindAndModifyOptions;
+#upsert(Z)Lorg/springframework/data/mongodb/core/FindAndModifyOptions;
+#remove(Z)Lorg/springframework/data/mongodb/core/FindAndModifyOptions;
+#isReturnNew()Z
+#isUpsert()Z
+#isRemove()Z
@2.0.0.RELEASE
+#of(Lorg/springframework/data/mongodb/core/FindAndModifyOptions;)Lorg/springframework/data/mongodb/core/FindAndModifyOptions;
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/FindAndModifyOptions;
+#getCollation()Ljava/util/Optional;
@2.2.0.RELEASE
+#none()Lorg/springframework/data/mongodb/core/FindAndModifyOptions;

+###org/springframework/data/mongodb/core/query/CriteriaDefinition
@1.0.0.RELEASE
+#getCriteriaObject()Lcom/mongodb/DBObject;
@1.6.0.RELEASE
+#getKey()Ljava/lang/String;
@2.0.0.RELEASE
+#getCriteriaObject()Lorg/bson/Document;
-#getCriteriaObject()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/query/Update$AddToSetBuilder
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)V
+#each([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#value(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;

+###org/springframework/data/mongodb/core/query/Field
@1.0.0.RELEASE
+#<init>()V
+#include(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Field;
+#exclude(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Field;
+#slice(Ljava/lang/String;I)Lorg/springframework/data/mongodb/core/query/Field;
+#slice(Ljava/lang/String;II)Lorg/springframework/data/mongodb/core/query/Field;
+#getFieldsObject()Lcom/mongodb/DBObject;
@1.2.2.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.3.0.RELEASE
+#elemMatch(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Field;
+#position(Ljava/lang/String;I)Lorg/springframework/data/mongodb/core/query/Field;
@2.0.0.RELEASE
+#getFieldsObject()Lorg/bson/Document;
-#getFieldsObject()Lcom/mongodb/DBObject;
@3.1.0
+#include([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Field;
+#exclude([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Field;
@3.2.0
+#project(Lorg/springframework/data/mongodb/MongoExpression;)Lorg/springframework/data/mongodb/core/query/Field$FieldProjectionExpression;
+#projectAs(Lorg/springframework/data/mongodb/MongoExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Field;

+###org/springframework/data/mongodb/core/query/Criteria
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#where(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#is(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#ne(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#lt(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#lte(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#gt(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#gte(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#in([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#in(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#nin([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#nin(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#mod(Ljava/lang/Number;Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#all([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#all(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#size(I)Lorg/springframework/data/mongodb/core/query/Criteria;
+#exists(Z)Lorg/springframework/data/mongodb/core/query/Criteria;
+#type(I)Lorg/springframework/data/mongodb/core/query/Criteria;
+#not()Lorg/springframework/data/mongodb/core/query/Criteria;
+#regex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#regex(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#withinSphere(Lorg/springframework/data/mongodb/core/geo/Circle;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#within(Lorg/springframework/data/mongodb/core/geo/Shape;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#near(Lorg/springframework/data/mongodb/core/geo/Point;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#nearSphere(Lorg/springframework/data/mongodb/core/geo/Point;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#maxDistance(D)Lorg/springframework/data/mongodb/core/query/Criteria;
+#elemMatch(Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#orOperator([Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#norOperator([Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#andOperator([Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#getKey()Ljava/lang/String;
+#getCriteriaObject()Lcom/mongodb/DBObject;
@1.0.2.RELEASE
+#regex(Ljava/util/regex/Pattern;)Lorg/springframework/data/mongodb/core/query/Criteria;
@1.0.3.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.5.0.RELEASE
+#withinSphere(Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/mongodb/core/query/Criteria;
*#withinSphere(Lorg/springframework/data/mongodb/core/geo/Circle;)Lorg/springframework/data/mongodb/core/query/Criteria;[deprecated]
+#within(Lorg/springframework/data/geo/Shape;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#near(Lorg/springframework/data/geo/Point;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#nearSphere(Lorg/springframework/data/geo/Point;)Lorg/springframework/data/mongodb/core/query/Criteria;
-#within(Lorg/springframework/data/mongodb/core/geo/Shape;)Lorg/springframework/data/mongodb/core/query/Criteria;
-#near(Lorg/springframework/data/mongodb/core/geo/Point;)Lorg/springframework/data/mongodb/core/query/Criteria;
-#nearSphere(Lorg/springframework/data/mongodb/core/geo/Point;)Lorg/springframework/data/mongodb/core/query/Criteria;
@1.6.0.RELEASE
-#withinSphere(Lorg/springframework/data/mongodb/core/geo/Circle;)Lorg/springframework/data/mongodb/core/query/Criteria;[deprecated]
@1.7.0.RELEASE
+#minDistance(D)Lorg/springframework/data/mongodb/core/query/Criteria;
@1.8.0.RELEASE
+#intersects(Lorg/springframework/data/mongodb/core/geo/GeoJson;)Lorg/springframework/data/mongodb/core/query/Criteria;
@1.9.0.RELEASE
+#byExample(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#byExample(Lorg/springframework/data/domain/Example;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#alike(Lorg/springframework/data/domain/Example;)Lorg/springframework/data/mongodb/core/query/Criteria;
@2.0.0.RELEASE
+#regex(Lorg/bson/BsonRegularExpression;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#getCriteriaObject()Lorg/bson/Document;
-#getCriteriaObject()Lcom/mongodb/DBObject;
@2.1.0.RELEASE
+#matchingDocumentStructure(Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#type([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#andDocumentStructureMatches(Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#bits()Lorg/springframework/data/mongodb/core/query/Criteria$BitwiseCriteriaOperators;
@3.2.0
+#type(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#orOperator(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#norOperator(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#andOperator(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
@3.3.0
+#isNull()Lorg/springframework/data/mongodb/core/query/Criteria;
+#isNullValue()Lorg/springframework/data/mongodb/core/query/Criteria;
+#sampleRate(D)Lorg/springframework/data/mongodb/core/query/Criteria;

+###org/springframework/data/mongodb/core/query/BasicUpdate
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lcom/mongodb/DBObject;)V
+#set(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#unset(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
+#inc(Ljava/lang/String;Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/query/Update;
+#push(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#pushAll(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#addToSet(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#pop(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Update$Position;)Lorg/springframework/data/mongodb/core/query/Update;
+#pull(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#pullAll(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#rename(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
+#getUpdateObject()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#<init>(Lorg/bson/Document;)V
+#getUpdateObject()Lorg/bson/Document;
-#<init>(Lcom/mongodb/DBObject;)V
-#getUpdateObject()Lcom/mongodb/DBObject;
@3.1.0
*#pushAll(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;[deprecated]
@4.0.0
-#pushAll(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;[deprecated]

+###org/springframework/data/mongodb/core/query/GeoCommand
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/geo/Shape;)V
+#getShape()Lorg/springframework/data/geo/Shape;
+#getCommand()Ljava/lang/String;
@1.7.0.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/mongodb/core/query/Update$Position
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/query/Update$Position;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update$Position;

+###org/springframework/data/mongodb/core/query/Update
@1.0.0.RELEASE
+#<init>()V
+#update(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#set(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#unset(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
+#inc(Ljava/lang/String;Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/query/Update;
+#push(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#pushAll(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#addToSet(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#pop(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Update$Position;)Lorg/springframework/data/mongodb/core/query/Update;
+#pull(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#pullAll(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#rename(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
+#getUpdateObject()Lcom/mongodb/DBObject;
@1.1.0.RELEASE
+#fromDBObject(Lcom/mongodb/DBObject;[Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
@1.4.0.RELEASE
+#setOnInsert(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#push(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update$PushOperatorBuilder;
+#modifies(Ljava/lang/String;)Z
@1.5.0.RELEASE
+#addToSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update$AddToSetBuilder;
@1.5.1.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.6.0.RELEASE
+#currentDate(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
+#currentTimestamp(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
@1.7.0.RELEASE
+#multiply(Ljava/lang/String;Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/query/Update;
+#bitwise(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder;
@1.10.0.RELEASE
+#max(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#min(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
@2.0.0.RELEASE
+#fromDocument(Lorg/bson/Document;[Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
+#isolated()Lorg/springframework/data/mongodb/core/query/Update;
+#isIsolated()Ljava/lang/Boolean;
+#getUpdateObject()Lorg/bson/Document;
-#fromDBObject(Lcom/mongodb/DBObject;[Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Update;
-#getUpdateObject()Lcom/mongodb/DBObject;
@2.1.0.RELEASE
*#pushAll(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;[deprecated]
@2.1.4.RELEASE
+#inc(Ljava/lang/String;)V
@2.2.0.RELEASE
+#filterArray(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/query/Update;
+#filterArray(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#getArrayFilters()Ljava/util/List;
@3.2.5
+#hasArrayFilters()Z
@4.0.0
-#pushAll(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;[deprecated]

+###org/springframework/data/mongodb/core/query/Update$Modifier
@1.4.0.RELEASE
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
@2.0.0.RELEASE
+#toJsonString()Ljava/lang/String;

+###org/springframework/data/mongodb/core/query/BasicQuery
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lcom/mongodb/DBObject;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lcom/mongodb/DBObject;Lcom/mongodb/DBObject;)V
+#addCriteria(Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Query;
+#getQueryObject()Lcom/mongodb/DBObject;
+#getFieldsObject()Lcom/mongodb/DBObject;
+#getSortObject()Lcom/mongodb/DBObject;
+#setSortObject(Lcom/mongodb/DBObject;)V
@1.6.0.RELEASE
+#addCriteria(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/query/Query;
-#addCriteria(Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Query;
@1.6.2.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0.RELEASE
+#<init>(Lorg/bson/Document;)V
+#<init>(Lorg/bson/Document;Lorg/bson/Document;)V
+#getQueryObject()Lorg/bson/Document;
+#getFieldsObject()Lorg/bson/Document;
+#getSortObject()Lorg/bson/Document;
+#setSortObject(Lorg/bson/Document;)V
-#<init>(Lcom/mongodb/DBObject;)V
-#<init>(Lcom/mongodb/DBObject;Lcom/mongodb/DBObject;)V
-#getQueryObject()Lcom/mongodb/DBObject;
-#getFieldsObject()Lcom/mongodb/DBObject;
-#getSortObject()Lcom/mongodb/DBObject;
-#setSortObject(Lcom/mongodb/DBObject;)V
@2.1.11.RELEASE
+#isSorted()Z
@3.3.0
+#setFieldsObject(Lorg/bson/Document;)V

+###org/springframework/data/mongodb/core/query/Query
@1.0.0.RELEASE
+#query(Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Query;
+#<init>()V
+#<init>(Lorg/springframework/data/mongodb/core/query/Criteria;)V
+#addCriteria(Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Query;
+#fields()Lorg/springframework/data/mongodb/core/query/Field;
+#skip(I)Lorg/springframework/data/mongodb/core/query/Query;
+#limit(I)Lorg/springframework/data/mongodb/core/query/Query;
+#withHint(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Query;
+#sort()Lorg/springframework/data/mongodb/core/query/Sort;
+#getQueryObject()Lcom/mongodb/DBObject;
+#getFieldsObject()Lcom/mongodb/DBObject;
+#getSortObject()Lcom/mongodb/DBObject;
+#getSkip()I
+#getLimit()I
+#getHint()Ljava/lang/String;
@1.0.2.RELEASE
+#toString()Ljava/lang/String;
@1.0.3.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0.RELEASE
*#sort()Lorg/springframework/data/mongodb/core/query/Sort;[deprecated]
+#with(Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/mongodb/core/query/Query;
+#with(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/query/Query;
@1.3.0.RELEASE
+#getRestrictedTypes()Ljava/util/Set;
+#restrict(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/query/Query;
+#isRestrictedTypeKey(Ljava/lang/String;)Z[deprecated]
-#sort()Lorg/springframework/data/mongodb/core/query/Sort;[deprecated]
@1.6.0.RELEASE
+#query(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/query/Query;
+#<init>(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)V
+#addCriteria(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/query/Query;
+#maxTimeMsec(J)Lorg/springframework/data/mongodb/core/query/Query;
+#maxTime(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/mongodb/core/query/Query;
+#maxScan(J)Lorg/springframework/data/mongodb/core/query/Query;
+#comment(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Query;
+#useSnapshot()Lorg/springframework/data/mongodb/core/query/Query;
+#getMeta()Lorg/springframework/data/mongodb/core/query/Meta;
+#setMeta(Lorg/springframework/data/mongodb/core/query/Meta;)V
-#query(Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Query;
-#<init>(Lorg/springframework/data/mongodb/core/query/Criteria;)V
-#addCriteria(Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Query;
@1.10.0.RELEASE
+#noCursorTimeout()Lorg/springframework/data/mongodb/core/query/Query;
+#exhaust()Lorg/springframework/data/mongodb/core/query/Query;
+#slaveOk()Lorg/springframework/data/mongodb/core/query/Query;
+#partialResults()Lorg/springframework/data/mongodb/core/query/Query;
@2.0.0.RELEASE
+#skip(J)Lorg/springframework/data/mongodb/core/query/Query;
+#getQueryObject()Lorg/bson/Document;
+#getFieldsObject()Lorg/bson/Document;
+#getSortObject()Lorg/bson/Document;
+#getSkip()J
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/query/Query;
+#getCollation()Ljava/util/Optional;
-#skip(I)Lorg/springframework/data/mongodb/core/query/Query;
-#getQueryObject()Lcom/mongodb/DBObject;
-#getFieldsObject()Lcom/mongodb/DBObject;
-#getSortObject()Lcom/mongodb/DBObject;
-#getSkip()I
@2.1.0.RELEASE
*#maxTime(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
+#maxTime(Ljava/time/Duration;)Lorg/springframework/data/mongodb/core/query/Query;
*#maxScan(J)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
*#useSnapshot()Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
+#cursorBatchSize(I)Lorg/springframework/data/mongodb/core/query/Query;
@2.1.11.RELEASE
+#isSorted()Z
@2.1.19.RELEASE
*#slaveOk()Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
+#allowSecondaryReads()Lorg/springframework/data/mongodb/core/query/Query;
@2.2.0.RELEASE
*#withHint(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
+#withHint(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Query;
*#getHint()Ljava/lang/String;[deprecated]
+#of(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/query/Query;
-#allowSecondaryReads()Lorg/springframework/data/mongodb/core/query/Query;
@2.2.9.RELEASE
*#slaveOk()Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
+#allowSecondaryReads()Lorg/springframework/data/mongodb/core/query/Query;
@3.0.0.RELEASE
-#maxScan(J)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
-#useSnapshot()Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
-#allowSecondaryReads()Lorg/springframework/data/mongodb/core/query/Query;
@3.0.2.RELEASE
*#slaveOk()Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
+#allowSecondaryReads()Lorg/springframework/data/mongodb/core/query/Query;
@3.2.0
+#allowDiskUse(Z)Lorg/springframework/data/mongodb/core/query/Query;
@4.0.0
-#maxTime(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/mongodb/core/query/Query;[deprecated]
-#slaveOk()Lorg/springframework/data/mongodb/core/query/Query;[deprecated]

+###org/springframework/data/mongodb/core/query/Order
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/query/Order;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Order;
@1.3.0.RELEASE
+#toDirection()Lorg/springframework/data/domain/Sort$Direction;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/query/Order

+###org/springframework/data/mongodb/core/query/SerializationUtils
@1.1.0.RELEASE
+#serializeToJsonSafely(Ljava/lang/Object;)Ljava/lang/String;
@1.9.0.RELEASE
+#flattenMap(Lcom/mongodb/DBObject;)Ljava/util/Map;
@2.0.0.RELEASE
+#flattenMap(Lorg/bson/Document;)Ljava/util/Map;
-#flattenMap(Lcom/mongodb/DBObject;)Ljava/util/Map;
@2.2.0.RELEASE
+#serializeValue(Ljava/lang/Object;)Ljava/lang/String;

+###org/springframework/data/mongodb/core/query/Update$Modifiers
@1.4.0.RELEASE
+#<init>()V
+#getModifiers()Ljava/util/Collection;
+#addModifier(Lorg/springframework/data/mongodb/core/query/Update$Modifier;)V
@1.5.1.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0.RELEASE
+#isEmpty()Z
+#toString()Ljava/lang/String;

+###org/springframework/data/mongodb/core/query/NearQuery
@1.0.0.RELEASE
+#near(DD)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#near(DDLorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#near(Lorg/springframework/data/mongodb/core/geo/Point;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#near(Lorg/springframework/data/mongodb/core/geo/Point;Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#getMetric()Lorg/springframework/data/mongodb/core/geo/Metric;
+#num(I)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#maxDistance(D)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#maxDistance(DLorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#maxDistance(Lorg/springframework/data/mongodb/core/geo/Distance;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#distanceMultiplier(D)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#distanceMultiplier(Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#spherical(Z)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#inKilometers()Lorg/springframework/data/mongodb/core/query/NearQuery;
+#inMiles()Lorg/springframework/data/mongodb/core/query/NearQuery;
+#query(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#toDBObject()Lcom/mongodb/DBObject;
@1.2.0.RELEASE
+#getMaxDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
*#distanceMultiplier(Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;[deprecated]
+#isSpherical()Z
+#in(Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
@1.2.4.RELEASE
+#skip(I)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#with(Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#getSkip()Ljava/lang/Integer;
@1.5.0.RELEASE
+#near(DDLorg/springframework/data/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#near(Lorg/springframework/data/geo/Point;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#near(Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#getMetric()Lorg/springframework/data/geo/Metric;
+#maxDistance(DLorg/springframework/data/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#maxDistance(Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#getMaxDistance()Lorg/springframework/data/geo/Distance;
+#distanceMultiplier(Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;[deprecated]
+#in(Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
-#near(DDLorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
-#near(Lorg/springframework/data/mongodb/core/geo/Point;)Lorg/springframework/data/mongodb/core/query/NearQuery;
-#near(Lorg/springframework/data/mongodb/core/geo/Point;Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
-#getMetric()Lorg/springframework/data/mongodb/core/geo/Metric;
-#maxDistance(DLorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
-#maxDistance(Lorg/springframework/data/mongodb/core/geo/Distance;)Lorg/springframework/data/mongodb/core/query/NearQuery;
-#getMaxDistance()Lorg/springframework/data/mongodb/core/geo/Distance;
-#distanceMultiplier(Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;[deprecated]
-#in(Lorg/springframework/data/mongodb/core/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
@1.7.0.RELEASE
+#minDistance(D)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#minDistance(DLorg/springframework/data/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#minDistance(Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#getMinDistance()Lorg/springframework/data/geo/Distance;
@2.0.0.RELEASE
+#num(J)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#skip(J)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#getSkip()Ljava/lang/Long;
+#toDocument()Lorg/bson/Document;
-#num(I)Lorg/springframework/data/mongodb/core/query/NearQuery;
-#skip(I)Lorg/springframework/data/mongodb/core/query/NearQuery;
-#distanceMultiplier(Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/mongodb/core/query/NearQuery;[deprecated]
-#getSkip()Ljava/lang/Integer;
-#toDBObject()Lcom/mongodb/DBObject;
@2.2.0.RELEASE
*#num(J)Lorg/springframework/data/mongodb/core/query/NearQuery;[deprecated]
+#limit(J)Lorg/springframework/data/mongodb/core/query/NearQuery;
+#getCollation()Lorg/springframework/data/mongodb/core/query/Collation;
@4.0.0
-#num(J)Lorg/springframework/data/mongodb/core/query/NearQuery;[deprecated]

+###org/springframework/data/mongodb/core/query/Update$PushOperatorBuilder
@1.4.0.RELEASE
+#each([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
+#value(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Update;
@1.5.1.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.7.0.RELEASE
+#atPosition(I)Lorg/springframework/data/mongodb/core/query/Update$PushOperatorBuilder;
+#atPosition(Lorg/springframework/data/mongodb/core/query/Update$Position;)Lorg/springframework/data/mongodb/core/query/Update$PushOperatorBuilder;
@1.10.0.RELEASE
+#slice(I)Lorg/springframework/data/mongodb/core/query/Update$PushOperatorBuilder;
+#sort(Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/mongodb/core/query/Update$PushOperatorBuilder;
+#sort(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/query/Update$PushOperatorBuilder;

+###org/springframework/data/mongodb/core/MongoTemplate
@1.0.0.RELEASE
+#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;)V
+#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;)V
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;)V
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#setWriteResultChecking(Lorg/springframework/data/mongodb/core/WriteResultChecking;)V
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#setWriteConcernResolver(Lorg/springframework/data/mongodb/core/WriteConcernResolver;)V
+#setReadPreference(Lcom/mongodb/ReadPreference;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getConverter()Lorg/springframework/data/mongodb/core/convert/MongoConverter;
+#getCollectionName(Ljava/lang/Class;)Ljava/lang/String;
+#executeCommand(Ljava/lang/String;)Lcom/mongodb/CommandResult;
+#executeCommand(Lcom/mongodb/DBObject;)Lcom/mongodb/CommandResult;
+#executeCommand(Lcom/mongodb/DBObject;I)Lcom/mongodb/CommandResult;
+#executeQuery(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Lorg/springframework/data/mongodb/core/DocumentCallbackHandler;)V
+#execute(Lorg/springframework/data/mongodb/core/DbCallback;)Ljava/lang/Object;
+#execute(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionCallback;)Ljava/lang/Object;
+#execute(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionCallback;)Ljava/lang/Object;
+#executeInSession(Lorg/springframework/data/mongodb/core/DbCallback;)Ljava/lang/Object;
+#createCollection(Ljava/lang/Class;)Lcom/mongodb/DBCollection;
+#createCollection(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/DBCollection;
+#createCollection(Ljava/lang/String;)Lcom/mongodb/DBCollection;
+#createCollection(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/DBCollection;
+#getCollection(Ljava/lang/String;)Lcom/mongodb/DBCollection;
+#collectionExists(Ljava/lang/Class;)Z
+#collectionExists(Ljava/lang/String;)Z
+#dropCollection(Ljava/lang/Class;)V
+#dropCollection(Ljava/lang/String;)V
+#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/IndexOperations;
+#indexOps(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/IndexOperations;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/lang/Object;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#find(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/util/List;
+#find(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/List;
+#findById(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#findById(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/geo/GeoResults;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/geo/GeoResults;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#findAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)J
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)J
+#insert(Ljava/lang/Object;)V
+#insert(Ljava/lang/Object;Ljava/lang/String;)V
+#insert(Ljava/util/Collection;Ljava/lang/Class;)V
+#insert(Ljava/util/Collection;Ljava/lang/String;)V
+#insertAll(Ljava/util/Collection;)V
+#save(Ljava/lang/Object;)V
+#save(Ljava/lang/Object;Ljava/lang/String;)V
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/String;)V
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)V
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)V
+#findAll(Ljava/lang/Class;)Ljava/util/List;
+#findAll(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/List;
+#mapReduce(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#group(Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
+#group(Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
+#getCollectionNames()Ljava/util/Set;
+#getDb()Lcom/mongodb/DB;
@1.3.0.RELEASE
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Z
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Z
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Z
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)V
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
@1.5.0.RELEASE
+#remove(Ljava/lang/Object;)Lcom/mongodb/WriteResult;
+#remove(Ljava/lang/Object;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Ljava/util/List;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/util/List;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/List;
-#remove(Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;Ljava/lang/String;)V
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)V
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)V
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)V
@1.6.0.RELEASE
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lorg/springframework/data/geo/GeoResults;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/geo/GeoResults;
-#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/geo/GeoResults;
-#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/geo/GeoResults;
@1.6.2.RELEASE
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)J
@1.7.0.RELEASE
+#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
*#executeCommand(Lcom/mongodb/DBObject;I)Lcom/mongodb/CommandResult;[deprecated]
+#executeCommand(Lcom/mongodb/DBObject;Lcom/mongodb/ReadPreference;)Lcom/mongodb/CommandResult;
*#executeInSession(Lorg/springframework/data/mongodb/core/DbCallback;)Ljava/lang/Object;[deprecated]
+#scriptOps()Lorg/springframework/data/mongodb/core/ScriptOperations;
@1.9.0.RELEASE
+#bulkOps(Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#bulkOps(Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#bulkOps(Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/BulkOperations;
@1.10.0.RELEASE
+#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/MongoClient;Ljava/lang/String;)V
+#executeCommand(Ljava/lang/String;)Lorg/bson/Document;
+#executeCommand(Lorg/bson/Document;)Lorg/bson/Document;
+#executeCommand(Lorg/bson/Document;Lcom/mongodb/ReadPreference;)Lorg/bson/Document;
+#createCollection(Ljava/lang/Class;)Lcom/mongodb/client/MongoCollection;
+#createCollection(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/client/MongoCollection;
+#createCollection(Ljava/lang/String;)Lcom/mongodb/client/MongoCollection;
+#createCollection(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/client/MongoCollection;
+#getCollection(Ljava/lang/String;)Lcom/mongodb/client/MongoCollection;
+#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
+#indexOps(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/geo/GeoResults;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#remove(Ljava/lang/Object;)Lcom/mongodb/client/result/DeleteResult;
+#remove(Ljava/lang/Object;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lcom/mongodb/client/result/DeleteResult;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
+#query(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$ExecutableFind;
+#update(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$ExecutableUpdate;
+#remove(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation$ExecutableRemove;
+#aggregateAndReturn(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation$ExecutableAggregation;
+#insert(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableInsertOperation$ExecutableInsert;
+#getDb()Lcom/mongodb/client/MongoDatabase;
+#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
+#getMongoDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
-#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;)V
-#<init>(Lcom/mongodb/Mongo;Ljava/lang/String;Lorg/springframework/data/authentication/UserCredentials;)V
-#executeCommand(Ljava/lang/String;)Lcom/mongodb/CommandResult;
-#executeCommand(Lcom/mongodb/DBObject;)Lcom/mongodb/CommandResult;
-#executeCommand(Lcom/mongodb/DBObject;I)Lcom/mongodb/CommandResult;[deprecated]
-#executeCommand(Lcom/mongodb/DBObject;Lcom/mongodb/ReadPreference;)Lcom/mongodb/CommandResult;
-#executeInSession(Lorg/springframework/data/mongodb/core/DbCallback;)Ljava/lang/Object;[deprecated]
-#createCollection(Ljava/lang/Class;)Lcom/mongodb/DBCollection;
-#createCollection(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/DBCollection;
-#createCollection(Ljava/lang/String;)Lcom/mongodb/DBCollection;
-#createCollection(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/DBCollection;
-#getCollection(Ljava/lang/String;)Lcom/mongodb/DBCollection;
-#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/IndexOperations;
-#indexOps(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/IndexOperations;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#remove(Ljava/lang/Object;)Lcom/mongodb/WriteResult;
-#remove(Ljava/lang/Object;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lcom/mongodb/WriteResult;
-#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/WriteResult;
-#getDb()Lcom/mongodb/DB;
@2.1.0.RELEASE
+#<init>(Lcom/mongodb/client/MongoClient;Ljava/lang/String;)V
+#withSession(Lcom/mongodb/ClientSessionOptions;)Lorg/springframework/data/mongodb/core/SessionScoped;
+#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/core/MongoTemplate;
+#setSessionSynchronization(Lorg/springframework/data/mongodb/SessionSynchronization;)V
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#insert(Ljava/lang/Object;)Ljava/lang/Object;
+#insert(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#insert(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;
+#insert(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;
+#insertAll(Ljava/util/Collection;)Ljava/util/Collection;
+#save(Ljava/lang/Object;)Ljava/lang/Object;
+#save(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Ljava/util/List;
+#mapReduce(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$ExecutableMapReduce;
+#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/core/MongoOperations;
+#mapReduce(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithMapFunction;
-#insert(Ljava/lang/Object;)V
-#insert(Ljava/lang/Object;Ljava/lang/String;)V
-#insert(Ljava/util/Collection;Ljava/lang/Class;)V
-#insert(Ljava/util/Collection;Ljava/lang/String;)V
-#insertAll(Ljava/util/Collection;)V
-#save(Ljava/lang/Object;)V
-#save(Ljava/lang/Object;Ljava/lang/String;)V
@2.2.0.RELEASE
*#<init>(Lcom/mongodb/MongoClient;Ljava/lang/String;)V[deprecated]
+#setEntityCallbacks(Lorg/springframework/data/mapping/callback/EntityCallbacks;)V
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;)V
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Ljava/lang/Object;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#getMongoDbFactory()Lorg/springframework/data/mongodb/MongoDatabaseFactory;
-#<init>(Lcom/mongodb/MongoClient;Ljava/lang/String;)V[deprecated]
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;)V
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Ljava/lang/Object;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Ljava/lang/Object;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#getMongoDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
@3.1.0
+#estimatedCount(Ljava/lang/String;)J
@3.1.4
*#getMongoDbFactory()Lorg/springframework/data/mongodb/MongoDatabaseFactory;[deprecated]
+#getMongoDatabaseFactory()Lorg/springframework/data/mongodb/MongoDatabaseFactory;
@3.2.0
+#indexOps(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
@3.4.0
+#useEstimatedCount(Z)V
+#exactCount(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)J
*#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;Ljava/lang/Class;)Ljava/util/List;[deprecated]
@4.0.0
+#setEntityLifecycleEventsEnabled(Z)V
+#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Ljava/util/stream/Stream;
+#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/stream/Stream;
+#createView(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Lorg/springframework/data/mongodb/core/ViewOptions;)Lcom/mongodb/client/MongoCollection;
+#createView(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Lorg/springframework/data/mongodb/core/ViewOptions;)Lcom/mongodb/client/MongoCollection;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/stream/Stream;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Ljava/util/stream/Stream;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/stream/Stream;
+#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/stream/Stream;
-#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#stream(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
-#group(Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
-#group(Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
-#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#aggregateStream(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/util/CloseableIterator;
-#getMongoDbFactory()Lorg/springframework/data/mongodb/MongoDatabaseFactory;[deprecated]

+###org/springframework/data/mongodb/core/MongoDataIntegrityViolationException
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Lcom/mongodb/WriteResult;Lorg/springframework/data/mongodb/core/MongoActionOperation;)V
+#getWriteResult()Lcom/mongodb/WriteResult;
+#getActionOperation()Lorg/springframework/data/mongodb/core/MongoActionOperation;
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Lcom/mongodb/WriteConcernResult;Lorg/springframework/data/mongodb/core/MongoActionOperation;)V
+#getWriteResult()Lcom/mongodb/WriteConcernResult;
-#<init>(Ljava/lang/String;Lcom/mongodb/WriteResult;Lorg/springframework/data/mongodb/core/MongoActionOperation;)V
-#getWriteResult()Lcom/mongodb/WriteResult;

+###org/springframework/data/mongodb/core/MongoFactoryBean
@1.0.0.RELEASE
+#<init>()V
+#setMongoOptions(Lcom/mongodb/MongoOptions;)V
+#setReplicaSetSeeds([Lcom/mongodb/ServerAddress;)V
+#setReplicaPair([Lcom/mongodb/ServerAddress;)V
+#setHost(Ljava/lang/String;)V
+#setPort(I)V
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#setExceptionTranslator(Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#getObject()Lcom/mongodb/Mongo;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#getObject()Ljava/lang/Object;
@1.0.2.RELEASE
+#afterPropertiesSet()V
+#destroy()V
@1.2.2.RELEASE
*#setReplicaPair([Lcom/mongodb/ServerAddress;)V[deprecated]
@1.7.0.RELEASE
-#getObject()Lcom/mongodb/Mongo;
-#isSingleton()Z
-#afterPropertiesSet()V
-#destroy()V
-#getObject()Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/MongoFactoryBean

+###org/springframework/data/mongodb/core/DbCallback
@1.0.0.RELEASE
+#doInDB(Lcom/mongodb/DB;)Ljava/lang/Object;
@2.0.0.RELEASE
+#doInDB(Lcom/mongodb/client/MongoDatabase;)Ljava/lang/Object;
-#doInDB(Lcom/mongodb/DB;)Ljava/lang/Object;

+###org/springframework/data/mongodb/LazyLoadingException
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/mongodb/MongoCollectionUtils
@1.0.0.RELEASE
+#getPreferredCollectionName(Ljava/lang/Class;)Ljava/lang/String;

+###org/springframework/data/mongodb/config/GeoJsonConfiguration
@2.0.0.RELEASE
+#<init>()V
+#geoJsonModule()Lorg/springframework/data/mongodb/core/geo/GeoJsonModule;

+###org/springframework/data/mongodb/config/EnableReactiveMongoAuditing
@3.1.0
+#auditorAwareRef()Ljava/lang/String;
+#setDates()Z
+#modifyOnCreate()Z
+#dateTimeProviderRef()Ljava/lang/String;

+###org/springframework/data/mongodb/config/ConnectionStringPropertyEditor
@3.0.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/data/mongodb/config/UUidRepresentationPropertyEditor
@3.0.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/data/mongodb/config/MongoClientParser
@1.7.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/data/mongodb/config/AbstractMongoClientConfiguration
@2.1.0.RELEASE
+#<init>()V
+#mongoClient()Lcom/mongodb/client/MongoClient;
+#mongoTemplate()Lorg/springframework/data/mongodb/core/MongoTemplate;
+#mongoDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
+#mappingMongoConverter()Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
@3.0.0.RELEASE
+#mongoTemplate(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;)Lorg/springframework/data/mongodb/core/MongoTemplate;
+#mongoDbFactory()Lorg/springframework/data/mongodb/MongoDatabaseFactory;
+#mappingMongoConverter(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
-#mongoTemplate()Lorg/springframework/data/mongodb/core/MongoTemplate;
-#mongoDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
-#mappingMongoConverter()Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;

+###org/springframework/data/mongodb/config/MongoConfigurationSupport
@2.0.0.RELEASE
+#<init>()V
+#mongoMappingContext()Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
+#isNewStrategyFactory()Lorg/springframework/data/support/IsNewStrategyFactory;
+#customConversions()Lorg/springframework/data/convert/CustomConversions;
@2.2.0.RELEASE
-#isNewStrategyFactory()Lorg/springframework/data/support/IsNewStrategyFactory;
@3.0.0.RELEASE
+#mongoMappingContext(Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
+#customConversions()Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;
-#mongoMappingContext()Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
-#customConversions()Lorg/springframework/data/convert/CustomConversions;
@4.0.0
+#mongoMappingContext(Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;Lorg/springframework/data/mongodb/MongoManagedTypes;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;
+#mongoManagedTypes()Lorg/springframework/data/mongodb/MongoManagedTypes;
-#mongoMappingContext(Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;)Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;

+###org/springframework/data/mongodb/config/ReadConcernPropertyEditor
@3.0.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/data/mongodb/config/PersistentEntitiesFactoryBean
@3.2.5
+#<init>(Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;)V
+#getObject()Lorg/springframework/data/mapping/context/PersistentEntities;
+#getObjectType()Ljava/lang/Class;
+#getObject()Ljava/lang/Object;

+###org/springframework/data/mongodb/config/MongoCredentialPropertyEditor
@1.7.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/data/mongodb/config/AbstractReactiveMongoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#reactiveMongoClient()Lcom/mongodb/reactivestreams/client/MongoClient;
+#reactiveMongoTemplate()Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;
+#reactiveMongoDbFactory()Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
+#mappingMongoConverter()Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
@3.0.0.RELEASE
+#reactiveMongoTemplate(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;)Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;
+#mappingMongoConverter(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;
-#reactiveMongoTemplate()Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;
-#mappingMongoConverter()Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter;

+###org/springframework/data/mongodb/config/ReadPreferencePropertyEditor
@1.7.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/data/mongodb/MongoDatabaseUtils
@2.1.0.RELEASE
+#<init>()V
+#getDatabase(Lorg/springframework/data/mongodb/MongoDbFactory;)Lcom/mongodb/client/MongoDatabase;
+#getDatabase(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lcom/mongodb/client/MongoDatabase;
+#getDatabase(Ljava/lang/String;Lorg/springframework/data/mongodb/MongoDbFactory;)Lcom/mongodb/client/MongoDatabase;
+#getDatabase(Ljava/lang/String;Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lcom/mongodb/client/MongoDatabase;
@2.1.3.RELEASE
+#isTransactionActive(Lorg/springframework/data/mongodb/MongoDbFactory;)Z
@3.0.0.RELEASE
+#getDatabase(Lorg/springframework/data/mongodb/MongoDatabaseFactory;)Lcom/mongodb/client/MongoDatabase;
+#getDatabase(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lcom/mongodb/client/MongoDatabase;
+#getDatabase(Ljava/lang/String;Lorg/springframework/data/mongodb/MongoDatabaseFactory;)Lcom/mongodb/client/MongoDatabase;
+#getDatabase(Ljava/lang/String;Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lcom/mongodb/client/MongoDatabase;
+#isTransactionActive(Lorg/springframework/data/mongodb/MongoDatabaseFactory;)Z
-#getDatabase(Lorg/springframework/data/mongodb/MongoDbFactory;)Lcom/mongodb/client/MongoDatabase;
-#getDatabase(Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lcom/mongodb/client/MongoDatabase;
-#getDatabase(Ljava/lang/String;Lorg/springframework/data/mongodb/MongoDbFactory;)Lcom/mongodb/client/MongoDatabase;
-#getDatabase(Ljava/lang/String;Lorg/springframework/data/mongodb/MongoDbFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lcom/mongodb/client/MongoDatabase;
-#isTransactionActive(Lorg/springframework/data/mongodb/MongoDbFactory;)Z

+###org/springframework/data/mongodb/SessionSynchronization
@2.1.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/SessionSynchronization;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/SessionSynchronization;

+###org/springframework/data/mongodb/gridfs/GridFsObject
@3.0.0.RELEASE
+#getFileId()Ljava/lang/Object;
+#getFilename()Ljava/lang/String;
+#getContent()Ljava/lang/Object;
+#getOptions()Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;

+###org/springframework/data/mongodb/gridfs/GridFsUpload
@3.0.0.RELEASE
+#getFileId()Ljava/lang/Object;
+#getFilename()Ljava/lang/String;
+#getContent()Ljava/io/InputStream;
+#getOptions()Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#fromStream(Ljava/io/InputStream;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#getContent()Ljava/lang/Object;

+###org/springframework/data/mongodb/gridfs/ReactiveGridFsResource
@2.2.0.RELEASE
+#<init>(Lcom/mongodb/client/gridfs/model/GridFSFile;Lorg/reactivestreams/Publisher;)V
+#absent(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsResource;
+#getInputStream()Ljava/io/InputStream;
+#contentLength()J
+#getFilename()Ljava/lang/String;
+#exists()Z
+#lastModified()J
+#getDescription()Ljava/lang/String;
+#getId()Ljava/lang/Object;
+#getGridFSFile()Lcom/mongodb/client/gridfs/model/GridFSFile;
+#getDownloadStream()Lreactor/core/publisher/Flux;
@2.2.1.RELEASE
+#getDownloadStream(I)Lreactor/core/publisher/Flux;
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Lcom/mongodb/reactivestreams/client/gridfs/GridFSDownloadPublisher;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;Lcom/mongodb/reactivestreams/client/gridfs/GridFSDownloadPublisher;)V
+#getFileId()Ljava/lang/Object;
+#getGridFSFile()Lreactor/core/publisher/Mono;
+#getInputStream()Lreactor/core/publisher/Mono;
+#getContent()Lreactor/core/publisher/Flux;
+#getOptions()Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#getContent()Ljava/lang/Object;
-#<init>(Lcom/mongodb/client/gridfs/model/GridFSFile;Lorg/reactivestreams/Publisher;)V
-#getInputStream()Ljava/io/InputStream;
-#contentLength()J
-#lastModified()J
-#getDescription()Ljava/lang/String;
-#getId()Ljava/lang/Object;
-#getGridFSFile()Lcom/mongodb/client/gridfs/model/GridFSFile;

+###org/springframework/data/mongodb/gridfs/ReactiveGridFsUpload
@3.0.0.RELEASE
+#getFileId()Ljava/lang/Object;
+#getFilename()Ljava/lang/String;
+#getContent()Lorg/reactivestreams/Publisher;
+#getOptions()Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#fromPublisher(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#getContent()Ljava/lang/Object;

+###org/springframework/data/mongodb/gridfs/ReactiveGridFsOperations
@2.2.0.RELEASE
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Lorg/bson/Document;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;
+#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;
+#find(Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Flux;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Mono;
+#findFirst(Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Mono;
+#delete(Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Mono;
+#getResource(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#getResource(Lcom/mongodb/client/gridfs/model/GridFSFile;)Lreactor/core/publisher/Mono;
+#getResources(Ljava/lang/String;)Lreactor/core/publisher/Flux;
@2.2.6.RELEASE
*#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]
*#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;[deprecated]
@3.0.0.RELEASE
+#store(Lorg/springframework/data/mongodb/gridfs/GridFsObject;)Lreactor/core/publisher/Mono;
-#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]
-#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;[deprecated]

+###org/springframework/data/mongodb/gridfs/GridFsObject$Options
@3.0.0.RELEASE
+#none()Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#typed(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#from(Lcom/mongodb/client/gridfs/model/GridFSFile;)Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#contentType(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#metadata(Lorg/bson/Document;)Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#chunkSize(I)Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;
+#getMetadata()Lorg/bson/Document;
+#getChunkSize()I

+###org/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#<init>(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;Ljava/lang/String;)V
+#<init>(Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;Ljava/lang/String;)V
+#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;
+#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;
+#find(Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Flux;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Mono;
+#findFirst(Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Mono;
+#delete(Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Mono;
+#getResource(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#getResource(Lcom/mongodb/client/gridfs/model/GridFSFile;)Lreactor/core/publisher/Mono;
+#getResources(Ljava/lang/String;)Lreactor/core/publisher/Flux;
@3.0.0.RELEASE
+#store(Lorg/springframework/data/mongodb/gridfs/GridFsObject;)Lreactor/core/publisher/Mono;
+#createMono(Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate$ReactiveBucketCallback;)Lreactor/core/publisher/Mono;
+#createFlux(Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate$ReactiveBucketCallback;)Lreactor/core/publisher/Flux;
-#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
-#store(Lcom/mongodb/reactivestreams/client/gridfs/AsyncInputStream;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;
-#store(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/lang/String;Lorg/bson/Document;)Lreactor/core/publisher/Mono;

+###org/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder
@3.0.0.RELEASE
+#content(Ljava/io/InputStream;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#content(Ljava/util/function/Supplier;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#id(Ljava/lang/Object;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#filename(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#options(Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#metadata(Lorg/bson/Document;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#chunkSize(I)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#gridFsFile(Lcom/mongodb/client/gridfs/model/GridFSFile;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#contentType(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/GridFsUpload$GridFsUploadBuilder;
+#build()Lorg/springframework/data/mongodb/gridfs/GridFsUpload;

+###org/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder
@3.0.0.RELEASE
+#content(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#id(Ljava/lang/Object;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#filename(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#options(Lorg/springframework/data/mongodb/gridfs/GridFsObject$Options;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#metadata(Lorg/bson/Document;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#chunkSize(I)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#gridFsFile(Lcom/mongodb/client/gridfs/model/GridFSFile;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#contentType(Ljava/lang/String;)Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload$ReactiveGridFsUploadBuilder;
+#build()Lorg/springframework/data/mongodb/gridfs/ReactiveGridFsUpload;

+###org/springframework/data/mongodb/ReactiveMongoDatabaseUtils
@2.2.0.RELEASE
+#<init>()V
+#isTransactionActive(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;)Lreactor/core/publisher/Mono;
+#getDatabase(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;)Lreactor/core/publisher/Mono;
+#getDatabase(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lreactor/core/publisher/Mono;
+#getDatabase(Ljava/lang/String;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;)Lreactor/core/publisher/Mono;
+#getDatabase(Ljava/lang/String;Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/SessionSynchronization;)Lreactor/core/publisher/Mono;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithOptions
@2.1.0.RELEASE
+#with(Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$ExecutableMapReduce;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$ReactiveUpdate
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation
@2.0.0.RELEASE
+#update(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$ExecutableUpdate;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithCollection
@2.1.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithProjection;

+###org/springframework/data/mongodb/core/ReactiveMongoOperations
@2.0.0.RELEASE
+#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;
+#indexOps(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;
+#executeCommand(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#executeCommand(Lorg/bson/Document;)Lreactor/core/publisher/Mono;
+#executeCommand(Lorg/bson/Document;Lcom/mongodb/ReadPreference;)Lreactor/core/publisher/Mono;
+#execute(Lorg/springframework/data/mongodb/core/ReactiveDatabaseCallback;)Lreactor/core/publisher/Flux;
+#execute(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Flux;
+#execute(Ljava/lang/String;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Flux;
+#createCollection(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#createCollection(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lreactor/core/publisher/Mono;
+#createCollection(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#createCollection(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lreactor/core/publisher/Mono;
+#getCollectionNames()Lreactor/core/publisher/Flux;
+#getCollection(Ljava/lang/String;)Lcom/mongodb/reactivestreams/client/MongoCollection;
+#collectionExists(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#collectionExists(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#dropCollection(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#dropCollection(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAll(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findAll(Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#find(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#find(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findById(Ljava/lang/Object;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findById(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#insert(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#insert(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#insert(Ljava/util/Collection;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#insert(Ljava/util/Collection;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#insertAll(Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#insert(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#insertAll(Lreactor/core/publisher/Mono;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#insertAll(Lreactor/core/publisher/Mono;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#insertAll(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Flux;
+#save(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#save(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#save(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#save(Lreactor/core/publisher/Mono;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#remove(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#remove(Lreactor/core/publisher/Mono;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#tail(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#tail(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#getConverter()Lorg/springframework/data/mongodb/core/convert/MongoConverter;
@2.1.0.RELEASE
+#withSession(Ljava/util/function/Supplier;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#withSession(Lcom/mongodb/ClientSessionOptions;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#withSession(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#withSession(Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;
+#inTransaction()Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#inTransaction(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#findDistinct(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;)Lreactor/core/publisher/Mono;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#changeStream(Lorg/springframework/data/mongodb/core/ChangeStreamOptions;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#changeStream(Ljava/lang/String;Lorg/springframework/data/mongodb/core/ChangeStreamOptions;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#changeStream(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/ChangeStreamOptions;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lreactor/core/publisher/Flux;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lreactor/core/publisher/Flux;
+#getCollectionName(Ljava/lang/Class;)Ljava/lang/String;
@2.2.0.RELEASE
*#inTransaction()Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;[deprecated]
*#inTransaction(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;[deprecated]
*#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lreactor/core/publisher/Flux;[deprecated]
*#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;[deprecated]
@3.0.0.RELEASE
+#getCollection(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#getCollection(Ljava/lang/String;)Lcom/mongodb/reactivestreams/client/MongoCollection;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@3.1.0
+#estimatedCount(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#estimatedCount(Ljava/lang/String;)Lreactor/core/publisher/Mono;
@3.4.0
+#exactCount(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#exactCount(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#exactCount(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
*#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lreactor/core/publisher/Flux;[deprecated]
*#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lreactor/core/publisher/Flux;[deprecated]
@4.0.0
+#createView(Ljava/lang/String;Ljava/lang/Class;[Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lreactor/core/publisher/Mono;
+#createView(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;)Lreactor/core/publisher/Mono;
+#createView(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Lorg/springframework/data/mongodb/core/ViewOptions;)Lreactor/core/publisher/Mono;
+#createView(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Lorg/springframework/data/mongodb/core/ViewOptions;)Lreactor/core/publisher/Mono;
-#inTransaction()Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;[deprecated]
-#inTransaction(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;[deprecated]

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithProjection
@2.1.0.RELEASE
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithQuery;

+###org/springframework/data/mongodb/core/ExecutableInsertOperation$InsertWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableInsertOperation$InsertWithBulkMode;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$UpdateWithUpdate
@2.0.0.RELEASE
+#apply(Lorg/springframework/data/mongodb/core/query/Update;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingUpdate;
@2.1.0.RELEASE
+#replaceWith(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$FindAndReplaceWithProjection;
@3.0.0.RELEASE
+#apply(Lorg/springframework/data/mongodb/core/query/UpdateDefinition;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingUpdate;
-#apply(Lorg/springframework/data/mongodb/core/query/Update;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingUpdate;

+###org/springframework/data/mongodb/core/FluentMongoOperations
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveRemoveOperation
@2.0.0.RELEASE
+#remove(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$ReactiveRemove;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperationExtensionsKt
@2.1.0.RELEASE
+#mapReduce(Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithMapFunction;
+#asType(Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithQuery;
@2.2.0.RELEASE
+#mapReduce(Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithMapFunction;
+#asType(Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithProjection;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithQuery;
@4.0.0
-#mapReduce(Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithMapFunction;
-#asType(Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithQuery;

+###org/springframework/data/mongodb/core/SimpleMongoClientDatabaseFactory
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lcom/mongodb/ConnectionString;)V
+#<init>(Lcom/mongodb/client/MongoClient;Ljava/lang/String;)V
+#getSession(Lcom/mongodb/ClientSessionOptions;)Lcom/mongodb/client/ClientSession;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$FindWithQuery
@2.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingFind;
+#near(Lorg/springframework/data/mongodb/core/query/NearQuery;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingFindNear;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingFind;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$ReactiveFind
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveMongoClientSettingsFactoryBean
@2.0.0.RELEASE
+#<init>()V
+#setReadPreference(Lcom/mongodb/ReadPreference;)V
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#setReadConcern(Lcom/mongodb/ReadConcern;)V
+#setCredentialList(Ljava/util/List;)V
+#addMongoCredential(Lcom/mongodb/MongoCredential;)V
+#setStreamFactoryFactory(Lcom/mongodb/connection/StreamFactoryFactory;)V
+#setCodecRegistry(Lorg/bson/codecs/configuration/CodecRegistry;)V
+#setClusterSettings(Lcom/mongodb/connection/ClusterSettings;)V
+#setSocketSettings(Lcom/mongodb/connection/SocketSettings;)V
+#setHeartbeatSocketSettings(Lcom/mongodb/connection/SocketSettings;)V
+#setConnectionPoolSettings(Lcom/mongodb/connection/ConnectionPoolSettings;)V
+#setServerSettings(Lcom/mongodb/connection/ServerSettings;)V
+#setSslSettings(Lcom/mongodb/connection/SslSettings;)V
+#getObjectType()Ljava/lang/Class;
@3.0.0.RELEASE
-#setReadPreference(Lcom/mongodb/ReadPreference;)V
-#setWriteConcern(Lcom/mongodb/WriteConcern;)V
-#setReadConcern(Lcom/mongodb/ReadConcern;)V
-#setCredentialList(Ljava/util/List;)V
-#addMongoCredential(Lcom/mongodb/MongoCredential;)V
-#setStreamFactoryFactory(Lcom/mongodb/connection/StreamFactoryFactory;)V
-#setCodecRegistry(Lorg/bson/codecs/configuration/CodecRegistry;)V
-#setClusterSettings(Lcom/mongodb/connection/ClusterSettings;)V
-#setSocketSettings(Lcom/mongodb/connection/SocketSettings;)V
-#setHeartbeatSocketSettings(Lcom/mongodb/connection/SocketSettings;)V
-#setConnectionPoolSettings(Lcom/mongodb/connection/ConnectionPoolSettings;)V
-#setServerSettings(Lcom/mongodb/connection/ServerSettings;)V
-#setSslSettings(Lcom/mongodb/connection/SslSettings;)V
-#getObjectType()Ljava/lang/Class;
@4.0.0
-###org/springframework/data/mongodb/core/ReactiveMongoClientSettingsFactoryBean

+###org/springframework/data/mongodb/core/ExecutableInsertOperationExtensionsKt
@2.0.0.RELEASE
+#insert(Lorg/springframework/data/mongodb/core/ExecutableInsertOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableInsertOperation$ExecutableInsert;
@2.2.0.RELEASE
+#insert(Lorg/springframework/data/mongodb/core/ExecutableInsertOperation;)Lorg/springframework/data/mongodb/core/ExecutableInsertOperation$ExecutableInsert;
@4.0.0
-#insert(Lorg/springframework/data/mongodb/core/ExecutableInsertOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableInsertOperation$ExecutableInsert;

+###org/springframework/data/mongodb/core/BulkOperations
@1.9.0.RELEASE
+#insert(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#insert(Ljava/util/List;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#updateOne(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#updateOne(Ljava/util/List;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#updateMulti(Ljava/util/List;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#upsert(Ljava/util/List;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#remove(Ljava/util/List;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#execute()Lcom/mongodb/BulkWriteResult;
@2.0.0.RELEASE
+#execute()Lcom/mongodb/bulk/BulkWriteResult;
-#execute()Lcom/mongodb/BulkWriteResult;
@2.2.0.RELEASE
+#replaceOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#replaceOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;)Lorg/springframework/data/mongodb/core/BulkOperations;

+###org/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithCollection
@2.2.0.RELEASE
+#watchCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithFilterAndProjection;
+#watchCollection(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithFilterAndProjection;

+###org/springframework/data/mongodb/core/ReactiveCollectionCallback
@2.0.0.RELEASE
+#doInCollection(Lcom/mongodb/reactivestreams/client/MongoCollection;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/core/EncryptionAlgorithms
@3.3.0
+#<init>()V

+###org/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder
@2.1.0.RELEASE
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#filter(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#filter([Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#resumeToken(Lorg/bson/BsonValue;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#returnFullDocumentOnUpdate()Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#fullDocumentLookup(Lcom/mongodb/client/model/changestream/FullDocument;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#resumeAt(Ljava/time/Instant;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#build()Lorg/springframework/data/mongodb/core/ChangeStreamOptions;
@2.2.0.RELEASE
+#resumeAt(Lorg/bson/BsonTimestamp;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#resumeAfter(Lorg/bson/BsonValue;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#startAfter(Lorg/bson/BsonValue;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
@4.0.0
+#fullDocumentBeforeChangeLookup(Lcom/mongodb/client/model/changestream/FullDocumentBeforeChange;)Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#returnFullDocumentBeforeChange()Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;

+###org/springframework/data/mongodb/core/index/IndexOperationsAdapter
@2.0.0.RELEASE
+#blocking(Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;)Lorg/springframework/data/mongodb/core/index/IndexOperationsAdapter;

+###org/springframework/data/mongodb/core/index/HashedIndex
@2.2.0.RELEASE
+#hashed(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/HashedIndex;
+#getIndexKeys()Lorg/bson/Document;
+#getIndexOptions()Lorg/bson/Document;

+###org/springframework/data/mongodb/core/index/IndexOperationsProvider
@2.0.0.RELEASE
+#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
@3.2.0
+#indexOps(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/index/IndexOperations;

+###org/springframework/data/mongodb/core/index/TextIndexed
@1.6.0.RELEASE
+#weight()F

+###org/springframework/data/mongodb/core/index/WildcardIndexed
@3.3.0
+#name()Ljava/lang/String;
+#useGeneratedName()Z
+#partialFilter()Ljava/lang/String;
+#wildcardProjection()Ljava/lang/String;
+#collation()Ljava/lang/String;

+###org/springframework/data/mongodb/core/index/ReactiveIndexOperations
@2.0.0.RELEASE
+#ensureIndex(Lorg/springframework/data/mongodb/core/index/IndexDefinition;)Lreactor/core/publisher/Mono;
+#dropIndex(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#dropAllIndexes()Lreactor/core/publisher/Mono;
+#getIndexInfo()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/index/IndexFilter
@1.9.6.RELEASE
+#getFilterObject()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#getFilterObject()Lorg/bson/Document;
-#getFilterObject()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder
@1.6.0.RELEASE
+#<init>()V
+#named(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
+#onAllFields()Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
+#onFields([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
+#onField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
+#onField(Ljava/lang/String;Ljava/lang/Float;)Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
+#withDefaultLanguage(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
+#withLanguageOverride(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
+#build()Lorg/springframework/data/mongodb/core/index/TextIndexDefinition;
@1.9.6.RELEASE
+#partial(Lorg/springframework/data/mongodb/core/index/IndexFilter;)Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
@2.2.0.RELEASE
+#withSimpleCollation()Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;

+###org/springframework/data/mongodb/core/index/PartialIndexFilter
@1.9.6.RELEASE
+#of(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/index/PartialIndexFilter;
+#of(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/index/PartialIndexFilter;
+#getFilterObject()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#of(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/index/PartialIndexFilter;
+#getFilterObject()Lorg/bson/Document;
-#of(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/index/PartialIndexFilter;
-#getFilterObject()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/index/IndexOperations
@2.0.0.RELEASE
+#ensureIndex(Lorg/springframework/data/mongodb/core/index/IndexDefinition;)Ljava/lang/String;
+#dropIndex(Ljava/lang/String;)V
+#dropAllIndexes()V
+#getIndexInfo()Ljava/util/List;

+###org/springframework/data/mongodb/core/index/ReactiveIndexOperationsProvider
@2.1.0.RELEASE
+#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;

+###org/springframework/data/mongodb/core/index/HashIndexed
@2.2.0.RELEASE

+###org/springframework/data/mongodb/core/index/TextIndexDefinition
@1.6.0.RELEASE
+#forAllFields()Lorg/springframework/data/mongodb/core/index/TextIndexDefinition;
+#builder()Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexDefinitionBuilder;
+#addFieldSpec(Lorg/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexedFieldSpec;)V
+#addFieldSpecs(Ljava/util/Collection;)V
+#hasFieldSpec()Z
+#getIndexKeys()Lcom/mongodb/DBObject;
+#getIndexOptions()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#getIndexKeys()Lorg/bson/Document;
+#getIndexOptions()Lorg/bson/Document;
-#getIndexKeys()Lcom/mongodb/DBObject;
-#getIndexOptions()Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/index/IndexResolver
@2.2.0.RELEASE
+#create(Lorg/springframework/data/mapping/context/MappingContext;)Lorg/springframework/data/mongodb/core/index/IndexResolver;
+#resolveIndexFor(Lorg/springframework/data/util/TypeInformation;)Ljava/lang/Iterable;
+#resolveIndexFor(Ljava/lang/Class;)Ljava/lang/Iterable;

+###org/springframework/data/mongodb/core/index/ReactiveMongoPersistentEntityIndexCreator
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperationsProvider;)V
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoMappingContext;Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperationsProvider;Lorg/springframework/data/mongodb/core/index/IndexResolver;)V
+#isIndexCreatorFor(Lorg/springframework/data/mapping/context/MappingContext;)Z
+#checkForIndexes(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lreactor/core/publisher/Mono;

+###org/springframework/data/mongodb/core/index/TextIndexDefinition$TextIndexedFieldSpec
@1.6.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Float;)V
+#getFieldname()Ljava/lang/String;
+#getWeight()Ljava/lang/Float;
+#isWeighted()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/mongodb/core/index/WildcardIndex
@3.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#includeId()Lorg/springframework/data/mongodb/core/index/WildcardIndex;
+#named(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/WildcardIndex;
+#unique()Lorg/springframework/data/mongodb/core/index/Index;
+#expire(J)Lorg/springframework/data/mongodb/core/index/Index;
+#expire(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/mongodb/core/index/Index;
+#expire(Ljava/time/Duration;)Lorg/springframework/data/mongodb/core/index/Index;
+#wildcardProjectionInclude([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/WildcardIndex;
+#wildcardProjectionExclude([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/WildcardIndex;
+#wildcardProjection(Ljava/util/Map;)Lorg/springframework/data/mongodb/core/index/WildcardIndex;
+#getIndexKeys()Lorg/bson/Document;
+#getIndexOptions()Lorg/bson/Document;
+#named(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/Index;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithProjection
@2.1.0.RELEASE
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingUpdate
@2.0.0.RELEASE
+#all()Lreactor/core/publisher/Mono;
+#first()Lreactor/core/publisher/Mono;
+#upsert()Lreactor/core/publisher/Mono;

+###org/springframework/data/mongodb/core/ReactiveAggregationOperation
@2.0.0.RELEASE
+#aggregateAndReturn(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation$ReactiveAggregation;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct
@2.1.0.RELEASE
+#all()Ljava/util/List;

+###org/springframework/data/mongodb/core/ReactiveAggregationOperation$AggregationOperationWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation$AggregationOperationWithAggregation;

+###org/springframework/data/mongodb/core/ReactiveFluentMongoOperations
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveSessionCallback
@2.1.0.RELEASE
+#doInSession(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/core/ReactiveMongoContext
@2.1.0.RELEASE
+#<init>()V
+#getSession()Lreactor/core/publisher/Mono;
+#setSession(Lreactor/util/context/Context;Lorg/reactivestreams/Publisher;)Lreactor/util/context/Context;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingFindNear
@2.0.0.RELEASE
+#all()Lorg/springframework/data/geo/GeoResults;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$FindAndModifyWithOptions
@2.0.0.RELEASE
+#withOptions(Lorg/springframework/data/mongodb/core/FindAndModifyOptions;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingFindAndModify;

+###org/springframework/data/mongodb/core/ExecutableRemoveOperation$ExecutableRemove
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/timeseries/Granularity
@3.3.0
+#values()[Lorg/springframework/data/mongodb/core/timeseries/Granularity;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/timeseries/Granularity;

+###org/springframework/data/mongodb/core/timeseries/GranularityDefinition
@3.3.0
+#name()Ljava/lang/String;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$TerminatingFindAndModify
@2.0.0.RELEASE
+#findAndModify()Ljava/util/Optional;
+#findAndModifyValue()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation
@2.1.0.RELEASE
+#mapReduce(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithMapFunction;

+###org/springframework/data/mongodb/core/ExecutableInsertOperation$TerminatingBulkInsert
@2.0.0.RELEASE
+#bulk(Ljava/util/Collection;)Lcom/mongodb/bulk/BulkWriteResult;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation$ExecutableMapReduce
@2.1.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveInsertOperation
@2.0.0.RELEASE
+#insert(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveInsertOperation$ReactiveInsert;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperationExtensionsKt
@2.0.0.RELEASE
+#update(Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$ExecutableUpdate;
@2.2.0.RELEASE
+#update(Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$ExecutableUpdate;
@4.0.0
-#update(Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$ExecutableUpdate;

+###org/springframework/data/mongodb/core/ReactiveInsertOperation$ReactiveInsert
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveFindOperation$FindWithProjection
@2.0.0.RELEASE
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindWithQuery;

+###org/springframework/data/mongodb/core/ReactiveInsertOperation$TerminatingInsert
@2.0.0.RELEASE
+#one(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#all(Ljava/util/Collection;)Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/ExecutableFindOperationExtensionsKt
@2.0.0.RELEASE
+#query(Lorg/springframework/data/mongodb/core/ExecutableFindOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$ExecutableFind;
+#asType(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithQuery;
@2.1.0.RELEASE
+#asType(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;
@2.2.0.RELEASE
+#query(Lorg/springframework/data/mongodb/core/ExecutableFindOperation;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$ExecutableFind;
+#asType(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithProjection;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithQuery;
+#asType(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithProjection;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithProjection;
@2.2.2.RELEASE
+#asType(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithProjection;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;
-#asType(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithProjection;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithProjection;
@3.0.0.RELEASE
+#distinct(Lorg/springframework/data/mongodb/core/ExecutableFindOperation;Lkotlin/reflect/KProperty1;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;
+#distinct(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindDistinct;Lkotlin/reflect/KProperty;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;
@4.0.0
-#query(Lorg/springframework/data/mongodb/core/ExecutableFindOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$ExecutableFind;
-#asType(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithQuery;
-#asType(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;

+###org/springframework/data/mongodb/core/MongoClientSettingsFactoryBean
@3.0.0.RELEASE
+#<init>()V
+#setSocketConnectTimeoutMS(I)V
+#setSocketReadTimeoutMS(I)V
+#setSocketReceiveBufferSize(I)V
+#setSocketSendBufferSize(I)V
+#setServerHeartbeatFrequencyMS(J)V
+#setServerMinHeartbeatFrequencyMS(J)V
+#setClusterSrvHost(Ljava/lang/String;)V
+#setClusterHosts([Lcom/mongodb/ServerAddress;)V
+#setClusterConnectionMode(Lcom/mongodb/connection/ClusterConnectionMode;)V
+#setCusterRequiredClusterType(Lcom/mongodb/connection/ClusterType;)V
+#setClusterRequiredReplicaSetName(Ljava/lang/String;)V
+#setClusterLocalThresholdMS(J)V
+#setClusterServerSelectionTimeoutMS(J)V
+#setPoolMaxSize(I)V
+#setPoolMinSize(I)V
+#setPoolMaxWaitTimeMS(J)V
+#setPoolMaxConnectionLifeTimeMS(J)V
+#setPoolMaxConnectionIdleTimeMS(J)V
+#setPoolMaintenanceInitialDelayMS(J)V
+#setPoolMaintenanceFrequencyMS(J)V
+#setSslEnabled(Ljava/lang/Boolean;)V
+#setSslInvalidHostNameAllowed(Ljava/lang/Boolean;)V
+#setSslProvider(Ljava/lang/String;)V
+#setApplicationName(Ljava/lang/String;)V
+#setRetryReads(Ljava/lang/Boolean;)V
+#setReadConcern(Lcom/mongodb/ReadConcern;)V
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#setRetryWrites(Ljava/lang/Boolean;)V
+#setReadPreference(Lcom/mongodb/ReadPreference;)V
+#setStreamFactoryFactory(Lcom/mongodb/connection/StreamFactoryFactory;)V
+#setCodecRegistry(Lorg/bson/codecs/configuration/CodecRegistry;)V
+#setuUidRepresentation(Lorg/bson/UuidRepresentation;)V
+#setAutoEncryptionSettings(Lcom/mongodb/AutoEncryptionSettings;)V
+#getObjectType()Ljava/lang/Class;
@3.3.0
+#setServerApi(Lcom/mongodb/ServerApi;)V

+###org/springframework/data/mongodb/core/ExecutableAggregationOperation$ExecutableAggregation
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ReadPreferenceAware
@2.2.0.RELEASE
+#hasReadPreference()Z
+#getReadPreference()Lcom/mongodb/ReadPreference;

+###org/springframework/data/mongodb/core/ExecutableAggregationOperationExtensionsKt
@2.0.0.RELEASE
+#aggregateAndReturn(Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation$ExecutableAggregation;
@2.2.0.RELEASE
+#aggregateAndReturn(Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation;)Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation$ExecutableAggregation;
@4.0.0
-#aggregateAndReturn(Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation$ExecutableAggregation;

+###org/springframework/data/mongodb/core/ExecutableAggregationOperation$TerminatingAggregation
@2.0.0.RELEASE
+#all()Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#stream()Lorg/springframework/data/util/CloseableIterator;
@4.0.0
+#stream()Ljava/util/stream/Stream;
-#stream()Lorg/springframework/data/util/CloseableIterator;

+###org/springframework/data/mongodb/core/MappedDocument
@2.1.0.RELEASE
+#getIdOnlyProjection()Lorg/bson/Document;
+#getIdIn(Ljava/util/Collection;)Lorg/bson/Document;
+#toIds(Ljava/util/Collection;)Ljava/util/List;
+#hasId()Z
+#hasNonNullId()Z
+#getId()Ljava/lang/Object;
+#getId(Ljava/lang/Class;)Ljava/lang/Object;
+#isIdPresent(Ljava/lang/Class;)Z
+#getIdFilter()Lorg/bson/conversions/Bson;
+#updateWithoutId()Lorg/springframework/data/mongodb/core/query/Update;
+#of(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/MappedDocument;
+#getDocument()Lorg/bson/Document;
@2.1.4.RELEASE
+#updateWithoutId()Lorg/springframework/data/mongodb/core/query/UpdateDefinition;
-#updateWithoutId()Lorg/springframework/data/mongodb/core/query/Update;
@3.0.0.RELEASE
+#get(Ljava/lang/String;)Ljava/lang/Object;
@3.4.3
+#updateId(Ljava/lang/Object;)V

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$TerminatingUpdate
@2.0.0.RELEASE
+#all()Lcom/mongodb/client/result/UpdateResult;
+#first()Lcom/mongodb/client/result/UpdateResult;
+#upsert()Lcom/mongodb/client/result/UpdateResult;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$FindAndModifyWithOptions
@2.0.0.RELEASE
+#withOptions(Lorg/springframework/data/mongodb/core/FindAndModifyOptions;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$TerminatingFindAndModify;

+###org/springframework/data/mongodb/core/MongoDatabaseFactorySupport
@3.0.0.RELEASE
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#getMongoDatabase()Lcom/mongodb/client/MongoDatabase;
+#getMongoDatabase(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;
+#destroy()V
+#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
+#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/MongoDatabaseFactory;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithProjection
@2.1.0.RELEASE
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;

+###org/springframework/data/mongodb/core/ReactiveAggregationOperation$TerminatingAggregationOperation
@2.0.0.RELEASE
+#all()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/ExecutableAggregationOperation
@2.0.0.RELEASE
+#aggregateAndReturn(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation$ExecutableAggregation;

+###org/springframework/data/mongodb/core/ReactiveRemoveOperation$TerminatingRemove
@2.0.0.RELEASE
+#all()Lreactor/core/publisher/Mono;
+#findAndRemove()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithReduceFunction
@2.1.0.RELEASE
+#reduce(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$ExecutableMapReduce;

+###org/springframework/data/mongodb/core/ReactiveRemoveOperation$RemoveWithQuery
@2.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$TerminatingRemove;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$TerminatingRemove;

+###org/springframework/data/mongodb/core/messaging/MessageListenerContainer
@2.1.0.RELEASE
+#create(Lorg/springframework/data/mongodb/core/MongoTemplate;)Lorg/springframework/data/mongodb/core/messaging/MessageListenerContainer;
+#register(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;)Lorg/springframework/data/mongodb/core/messaging/Subscription;
+#register(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/messaging/Subscription;
+#register(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Class;Lorg/springframework/util/ErrorHandler;)Lorg/springframework/data/mongodb/core/messaging/Subscription;
+#remove(Lorg/springframework/data/mongodb/core/messaging/Subscription;)V
+#lookup(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;)Ljava/util/Optional;

+###org/springframework/data/mongodb/core/messaging/Task$State
@2.1.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/messaging/Task$State;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/Task$State;

+###org/springframework/data/mongodb/core/messaging/Message
@2.1.0.RELEASE
+#getRaw()Ljava/lang/Object;
+#getBody()Ljava/lang/Object;
+#getProperties()Lorg/springframework/data/mongodb/core/messaging/Message$MessageProperties;
@4.0.0
+#getBodyBeforeChange()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/messaging/ChangeStreamRequest
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/messaging/MessageListener;Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;)V
+#getMessageListener()Lorg/springframework/data/mongodb/core/messaging/MessageListener;
+#getRequestOptions()Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestOptions;
+#builder()Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#builder(Lorg/springframework/data/mongodb/core/messaging/MessageListener;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#getRequestOptions()Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;

+###org/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestOptions
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/ChangeStreamOptions;)V
+#of(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestOptions;
+#getChangeStreamOptions()Lorg/springframework/data/mongodb/core/ChangeStreamOptions;
+#getCollectionName()Ljava/lang/String;
+#getDatabaseName()Ljava/lang/String;
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;Lorg/springframework/data/mongodb/core/ChangeStreamOptions;)V
+#maxAwaitTime()Ljava/time/Duration;

+###org/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions
@2.1.0.RELEASE
+#getDatabaseName()Ljava/lang/String;
+#getCollectionName()Ljava/lang/String;
+#none()Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;
+#justDatabase(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;
+#justCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;
+#of(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;
@3.0.0.RELEASE
+#maxAwaitTime()Ljava/time/Duration;

+###org/springframework/data/mongodb/core/messaging/MessageListener
@2.1.0.RELEASE
+#onMessage(Lorg/springframework/data/mongodb/core/messaging/Message;)V

+###org/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestOptions$TailableCursorRequestOptionsBuilder
@2.1.0.RELEASE
+#collection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestOptions$TailableCursorRequestOptionsBuilder;
+#filter(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestOptions$TailableCursorRequestOptionsBuilder;
+#build()Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestOptions;

+###org/springframework/data/mongodb/core/messaging/SubscriptionRequest
@2.1.0.RELEASE
+#getMessageListener()Lorg/springframework/data/mongodb/core/messaging/MessageListener;
+#getRequestOptions()Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;

+###org/springframework/data/mongodb/core/messaging/Cancelable
@2.1.0.RELEASE
+#cancel()V

+###org/springframework/data/mongodb/core/messaging/TailableCursorRequest
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/messaging/MessageListener;Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;)V
+#getMessageListener()Lorg/springframework/data/mongodb/core/messaging/MessageListener;
+#getRequestOptions()Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestOptions;
+#builder()Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestBuilder;
+#builder(Lorg/springframework/data/mongodb/core/messaging/MessageListener;)Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestBuilder;
+#getRequestOptions()Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;

+###org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/MongoTemplate;)V
+#<init>(Lorg/springframework/data/mongodb/core/MongoTemplate;Ljava/util/concurrent/Executor;)V
+#<init>(Lorg/springframework/data/mongodb/core/MongoTemplate;Ljava/util/concurrent/Executor;Lorg/springframework/util/ErrorHandler;)V
+#isAutoStartup()Z
+#stop(Ljava/lang/Runnable;)V
+#start()V
+#stop()V
+#isRunning()Z
+#getPhase()I
+#register(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/messaging/Subscription;
+#register(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Ljava/lang/Class;Lorg/springframework/util/ErrorHandler;)Lorg/springframework/data/mongodb/core/messaging/Subscription;
+#lookup(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;)Ljava/util/Optional;
+#register(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest;Lorg/springframework/data/mongodb/core/messaging/Task;)Lorg/springframework/data/mongodb/core/messaging/Subscription;
+#remove(Lorg/springframework/data/mongodb/core/messaging/Subscription;)V

+###org/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder
@2.1.0.RELEASE
+#database(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#collection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#publishTo(Lorg/springframework/data/mongodb/core/messaging/MessageListener;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#filter(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#filter([Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#resumeToken(Lorg/bson/BsonValue;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#resumeAt(Ljava/time/Instant;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#fullDocumentLookup(Lcom/mongodb/client/model/changestream/FullDocument;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#build()Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest;
@2.2.0.RELEASE
+#resumeAfter(Lorg/bson/BsonValue;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
+#startAfter(Lorg/bson/BsonValue;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
@3.0.0.RELEASE
+#maxAwaitTime(Ljava/time/Duration;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;
@4.0.0
+#fullDocumentBeforeChangeLookup(Lcom/mongodb/client/model/changestream/FullDocumentBeforeChange;)Lorg/springframework/data/mongodb/core/messaging/ChangeStreamRequest$ChangeStreamRequestBuilder;

+###org/springframework/data/mongodb/core/messaging/Subscription
@2.1.0.RELEASE
+#isActive()Z
+#await(Ljava/time/Duration;)Z

+###org/springframework/data/mongodb/core/messaging/Message$MessageProperties$MessagePropertiesBuilder
@2.1.0.RELEASE
+#<init>()V
+#databaseName(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/Message$MessageProperties$MessagePropertiesBuilder;
+#collectionName(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/Message$MessageProperties$MessagePropertiesBuilder;
+#build()Lorg/springframework/data/mongodb/core/messaging/Message$MessageProperties;

+###org/springframework/data/mongodb/core/messaging/Task
@2.1.0.RELEASE
+#isActive()Z
+#getState()Lorg/springframework/data/mongodb/core/messaging/Task$State;
+#awaitStart(Ljava/time/Duration;)Z

+###org/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestOptions
@2.1.0.RELEASE
+#of(Lorg/springframework/data/mongodb/core/messaging/SubscriptionRequest$RequestOptions;)Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestOptions;
+#builder()Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestOptions$TailableCursorRequestOptionsBuilder;
+#getCollectionName()Ljava/lang/String;
+#getQuery()Ljava/util/Optional;

+###org/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestBuilder
@2.1.0.RELEASE
+#collection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestBuilder;
+#publishTo(Lorg/springframework/data/mongodb/core/messaging/MessageListener;)Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestBuilder;
+#filter(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest$TailableCursorRequestBuilder;
+#build()Lorg/springframework/data/mongodb/core/messaging/TailableCursorRequest;

+###org/springframework/data/mongodb/core/messaging/Message$MessageProperties
@2.1.0.RELEASE
+#<init>()V
+#getDatabaseName()Ljava/lang/String;
+#getCollectionName()Ljava/lang/String;
+#empty()Lorg/springframework/data/mongodb/core/messaging/Message$MessageProperties;
+#builder()Lorg/springframework/data/mongodb/core/messaging/Message$MessageProperties$MessagePropertiesBuilder;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/core/MongoServerApiFactoryBean
@3.3.0
+#<init>()V
+#setVersion(Ljava/lang/String;)V
+#setDeprecationErrors(Ljava/lang/Boolean;)V
+#setStrict(Ljava/lang/Boolean;)V
+#getObject()Lcom/mongodb/ServerApi;
+#getObjectType()Ljava/lang/Class;
+#getObject()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/ReactiveMongoOperationsExtensionsKt
@2.0.0.RELEASE
+#indexOps(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;
+#createCollection(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lreactor/core/publisher/Mono;
+#createCollection$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;Lorg/springframework/data/mongodb/core/CollectionOptions;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#collectionExists(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Mono;
+#dropCollection(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#exists$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#count$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#insert(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/util/Collection;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
+#insertAll(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lreactor/core/publisher/Mono;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
+#upsert(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#remove(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
@2.2.0.RELEASE
+#indexOps(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;
+#execute(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Flux;
+#createCollection(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lreactor/core/publisher/Mono;
+#createCollection$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/CollectionOptions;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#collectionExists(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)Lreactor/core/publisher/Mono;
+#dropCollection(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)Lreactor/core/publisher/Mono;
+#findAll(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findAll$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Flux;
+#findOne(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findOne$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#exists$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#find(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#find$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Flux;
+#findById(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findById$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#findDistinct(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/lang/String;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
+#findDistinct(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
+#findDistinct(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
+#findDistinct(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findDistinct$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Flux;
+#geoNear(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#geoNear$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Flux;
+#findAndModify(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndModify$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#findAndRemove(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndRemove$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#count$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#insert(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#upsert(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#remove(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;)Lreactor/core/publisher/Flux;
+#tail(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#tail$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Flux;
@3.1.4
+#aggregate(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;)Lreactor/core/publisher/Flux;
@4.0.0
+#findAndModify(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndModify$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#indexOps(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;
-#createCollection(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lreactor/core/publisher/Mono;
-#createCollection$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;Lorg/springframework/data/mongodb/core/CollectionOptions;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#collectionExists(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Mono;
-#dropCollection(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Mono;
-#exists(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#exists$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#findDistinct(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/lang/String;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
-#findDistinct(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
-#findDistinct(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
-#findAndModify(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#findAndModify$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#count(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#count$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#insert(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/util/Collection;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
-#insertAll(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lreactor/core/publisher/Mono;Lkotlin/reflect/KClass;)Lreactor/core/publisher/Flux;
-#upsert(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#upsert$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#upsert(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#upsert$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#updateFirst(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateFirst$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#updateFirst(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateFirst$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#updateMulti(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateMulti$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#updateMulti(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateMulti$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;
-#remove(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#remove$default(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/data/mongodb/core/ReactiveSessionScoped
@2.1.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/ReactiveSessionCallback;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/mongodb/core/ReactiveSessionCallback;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/ExecutableRemoveOperation$RemoveWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation$RemoveWithQuery;

+###org/springframework/data/mongodb/core/ReactiveInsertOperationExtensionsKt
@2.0.0.RELEASE
+#insert(Lorg/springframework/data/mongodb/core/ReactiveInsertOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveInsertOperation$ReactiveInsert;
@2.2.0.RELEASE
+#insert(Lorg/springframework/data/mongodb/core/ReactiveInsertOperation;)Lorg/springframework/data/mongodb/core/ReactiveInsertOperation$ReactiveInsert;
+#oneAndAwait(Lorg/springframework/data/mongodb/core/ReactiveInsertOperation$TerminatingInsert;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#flow(Lorg/springframework/data/mongodb/core/ReactiveInsertOperation$TerminatingInsert;Ljava/util/Collection;)Lkotlinx/coroutines/flow/Flow;
@4.0.0
-#insert(Lorg/springframework/data/mongodb/core/ReactiveInsertOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveInsertOperation$ReactiveInsert;

+###org/springframework/data/mongodb/core/ReactiveChangeStreamOperationExtensionsKt
@2.2.0.RELEASE
+#changeStream(Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ReactiveChangeStream;
+#asType(Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithFilterAndProjection;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithFilterAndProjection;
+#flow(Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$TerminatingChangeStream;)Lkotlinx/coroutines/flow/Flow;

+###org/springframework/data/mongodb/core/MongoJsonSchemaCreator$JsonSchemaPropertyContext
@3.3.0
+#getPath()Ljava/lang/String;
+#getProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#resolveEntity(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$DistinctWithQuery
@2.1.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$FindWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithProjection;

+###org/springframework/data/mongodb/core/ReactiveInsertOperation$InsertWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveInsertOperation$TerminatingInsert;

+###org/springframework/data/mongodb/core/ReactiveChangeStreamOperation$TerminatingChangeStream
@2.2.0.RELEASE
+#listen()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/ChangeStreamOptions
@2.1.0.RELEASE
+#getFilter()Ljava/util/Optional;
+#getResumeToken()Ljava/util/Optional;
+#getFullDocumentLookup()Ljava/util/Optional;
+#getCollation()Ljava/util/Optional;
+#getResumeTimestamp()Ljava/util/Optional;
+#empty()Lorg/springframework/data/mongodb/core/ChangeStreamOptions;
+#builder()Lorg/springframework/data/mongodb/core/ChangeStreamOptions$ChangeStreamOptionsBuilder;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.2.0.RELEASE
+#getResumeBsonTimestamp()Ljava/util/Optional;
+#isStartAfter()Z
+#isResumeAfter()Z
@4.0.0
+#getFullDocumentBeforeChangeLookup()Ljava/util/Optional;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation$TerminatingMapReduce
@2.1.0.RELEASE
+#all()Ljava/util/List;

+###org/springframework/data/mongodb/core/ExecutableInsertOperation$TerminatingInsert
@2.0.0.RELEASE
+#one(Ljava/lang/Object;)V
+#all(Ljava/util/Collection;)V
@2.1.0.RELEASE
+#one(Ljava/lang/Object;)Ljava/lang/Object;
+#all(Ljava/util/Collection;)Ljava/util/Collection;
-#one(Ljava/lang/Object;)V
-#all(Ljava/util/Collection;)V

+###org/springframework/data/mongodb/core/ReactiveRemoveOperation$ReactiveRemove
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveAggregationOperation$ReactiveAggregation
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$UpdateWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$UpdateWithQuery;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation
@2.1.0.RELEASE
+#mapReduce(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithMapFunction;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithQuery
@2.1.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$TerminatingMapReduce;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$TerminatingMapReduce;

+###org/springframework/data/mongodb/core/ExecutableRemoveOperation$RemoveWithQuery
@2.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation$TerminatingRemove;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation$TerminatingRemove;

+###org/springframework/data/mongodb/core/MongoDbFactorySupport
@2.1.0.RELEASE
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#getDb()Lcom/mongodb/client/MongoDatabase;
+#getDb(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;
+#destroy()V
+#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
+#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/MongoDbFactory;
@3.0.0.RELEASE
-#setWriteConcern(Lcom/mongodb/WriteConcern;)V
-#getDb()Lcom/mongodb/client/MongoDatabase;
-#getDb(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;
-#destroy()V
-#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
-#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/MongoDbFactory;
@4.0.0
-###org/springframework/data/mongodb/core/MongoDbFactorySupport

+###org/springframework/data/mongodb/core/BulkOperations$BulkMode
@1.9.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$FindAndReplaceWithProjection
@2.1.0.RELEASE
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$FindAndReplaceWithOptions;

+###org/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ReactiveChangeStream
@2.2.0.RELEASE

+###org/springframework/data/mongodb/core/CollectionOptions$ValidationOptions
@2.1.0.RELEASE
+#none()Lorg/springframework/data/mongodb/core/CollectionOptions$ValidationOptions;
+#validator(Lorg/springframework/data/mongodb/core/validation/Validator;)Lorg/springframework/data/mongodb/core/CollectionOptions$ValidationOptions;
+#validationLevel(Lcom/mongodb/client/model/ValidationLevel;)Lorg/springframework/data/mongodb/core/CollectionOptions$ValidationOptions;
+#validationAction(Lcom/mongodb/client/model/ValidationAction;)Lorg/springframework/data/mongodb/core/CollectionOptions$ValidationOptions;
+#getValidator()Ljava/util/Optional;
+#getValidationLevel()Ljava/util/Optional;
+#getValidationAction()Ljava/util/Optional;
+#<init>(Lorg/springframework/data/mongodb/core/validation/Validator;Lcom/mongodb/client/model/ValidationLevel;Lcom/mongodb/client/model/ValidationAction;)V
@3.4.6
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/core/ReactiveRemoveOperation$RemoveWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$RemoveWithQuery;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithQuery
@2.1.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$TerminatingMapReduce;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$TerminatingMapReduce;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$FindWithProjection
@2.0.0.RELEASE
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithQuery;

+###org/springframework/data/mongodb/core/validation/Validator
@2.1.0.RELEASE
+#toDocument()Lorg/bson/Document;
+#document(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/validation/Validator;
+#schema(Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;)Lorg/springframework/data/mongodb/core/validation/Validator;
+#criteria(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/validation/Validator;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$FindAndReplaceWithOptions
@2.1.0.RELEASE
+#withOptions(Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$FindAndReplaceWithProjection;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$FindWithQuery
@2.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;
+#near(Lorg/springframework/data/mongodb/core/query/NearQuery;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFindNear;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;

+###org/springframework/data/mongodb/core/ReactiveFindOperationExtensionsKt
@2.0.0.RELEASE
+#query(Lorg/springframework/data/mongodb/core/ReactiveFindOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$ReactiveFind;
+#asType(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindWithQuery;
@2.1.0.RELEASE
+#asType(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;
@2.2.0.RELEASE
+#query(Lorg/springframework/data/mongodb/core/ReactiveFindOperation;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$ReactiveFind;
+#asType(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindWithProjection;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindWithQuery;
+#asType(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithProjection;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithProjection;
+#awaitOne(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitOneOrNull(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitFirst(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitFirstOrNull(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitCount(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitExists(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#flow(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;)Lkotlinx/coroutines/flow/Flow;
+#tailAsFlow(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind;)Lkotlinx/coroutines/flow/Flow;
+#flow(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFindNear;)Lkotlinx/coroutines/flow/Flow;
+#flow(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;)Lkotlinx/coroutines/flow/Flow;
@2.2.2.RELEASE
+#asType(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithProjection;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;
-#asType(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithProjection;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithProjection;
@3.0.0.RELEASE
+#distinct(Lorg/springframework/data/mongodb/core/ReactiveFindOperation;Lkotlin/reflect/KProperty1;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;
+#distinct(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindDistinct;Lkotlin/reflect/KProperty;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;
@4.0.0
-#query(Lorg/springframework/data/mongodb/core/ReactiveFindOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$ReactiveFind;
-#asType(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindWithQuery;
-#asType(Lorg/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$UpdateWithUpdate
@2.0.0.RELEASE
+#apply(Lorg/springframework/data/mongodb/core/query/Update;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$TerminatingUpdate;
@2.1.0.RELEASE
+#replaceWith(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$FindAndReplaceWithProjection;
@3.0.0.RELEASE
+#apply(Lorg/springframework/data/mongodb/core/query/UpdateDefinition;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$TerminatingUpdate;
-#apply(Lorg/springframework/data/mongodb/core/query/Update;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$TerminatingUpdate;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithCollection
@2.1.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithProjection;

+###org/springframework/data/mongodb/core/ExecutableAggregationOperation$AggregationWithAggregation
@2.0.0.RELEASE
+#by(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation$TerminatingAggregation;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$DistinctWithQuery
@2.1.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;

+###org/springframework/data/mongodb/core/FindAndReplaceOptions
@2.1.0.RELEASE
+#<init>()V
+#options()Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;
+#empty()Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;
+#returnNew()Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;
+#upsert()Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;
+#isReturnNew()Z
+#isUpsert()Z
@2.2.0.RELEASE
+#none()Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;

+###org/springframework/data/mongodb/core/SimpleMongoClientDbFactory
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lcom/mongodb/ConnectionString;)V
+#<init>(Lcom/mongodb/client/MongoClient;Ljava/lang/String;)V
+#getLegacyDb()Lcom/mongodb/DB;
+#getSession(Lcom/mongodb/ClientSessionOptions;)Lcom/mongodb/client/ClientSession;
@3.0.0.RELEASE
-#getLegacyDb()Lcom/mongodb/DB;
-#getSession(Lcom/mongodb/ClientSessionOptions;)Lcom/mongodb/client/ClientSession;
@4.0.0
-###org/springframework/data/mongodb/core/SimpleMongoClientDbFactory

+###org/springframework/data/mongodb/core/SessionScoped
@2.1.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/SessionCallback;)Ljava/lang/Object;
+#execute(Lorg/springframework/data/mongodb/core/SessionCallback;Ljava/util/function/Consumer;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/ExecutableFindOperation
@2.0.0.RELEASE
+#query(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$ExecutableFind;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$ExecutableUpdate
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveMongoTemplate
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/reactivestreams/client/MongoClient;Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;)V
+#<init>(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#setWriteResultChecking(Lorg/springframework/data/mongodb/core/WriteResultChecking;)V
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#setWriteConcernResolver(Lorg/springframework/data/mongodb/core/WriteConcernResolver;)V
+#setReadPreference(Lcom/mongodb/ReadPreference;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getConverter()Lorg/springframework/data/mongodb/core/convert/MongoConverter;
+#indexOps(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;
+#indexOps(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/index/ReactiveIndexOperations;
+#getCollectionName(Ljava/lang/Class;)Ljava/lang/String;
+#executeCommand(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#executeCommand(Lorg/bson/Document;)Lreactor/core/publisher/Mono;
+#executeCommand(Lorg/bson/Document;Lcom/mongodb/ReadPreference;)Lreactor/core/publisher/Mono;
+#execute(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/mongodb/core/ReactiveDatabaseCallback;)Lreactor/core/publisher/Flux;
+#execute(Ljava/lang/String;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Flux;
+#createFlux(Lorg/springframework/data/mongodb/core/ReactiveDatabaseCallback;)Lreactor/core/publisher/Flux;
+#createMono(Lorg/springframework/data/mongodb/core/ReactiveDatabaseCallback;)Lreactor/core/publisher/Mono;
+#createFlux(Ljava/lang/String;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Flux;
+#createMono(Ljava/lang/String;Lorg/springframework/data/mongodb/core/ReactiveCollectionCallback;)Lreactor/core/publisher/Mono;
+#createCollection(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#createCollection(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lreactor/core/publisher/Mono;
+#createCollection(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#createCollection(Ljava/lang/String;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lreactor/core/publisher/Mono;
+#getCollection(Ljava/lang/String;)Lcom/mongodb/reactivestreams/client/MongoCollection;
+#collectionExists(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#collectionExists(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#dropCollection(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#dropCollection(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#getCollectionNames()Lreactor/core/publisher/Flux;
+#getMongoDatabase()Lcom/mongodb/reactivestreams/client/MongoDatabase;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findOne(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#find(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#find(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findById(Ljava/lang/Object;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findById(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/TypedAggregation;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#aggregate(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#geoNear(Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#insert(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#insertAll(Lreactor/core/publisher/Mono;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#insertAll(Lreactor/core/publisher/Mono;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#insert(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#insert(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#insert(Ljava/util/Collection;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#insert(Ljava/util/Collection;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#insertAll(Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#insertAll(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Flux;
+#save(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#save(Lreactor/core/publisher/Mono;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#save(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#save(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#remove(Lreactor/core/publisher/Mono;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#remove(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#remove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAll(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findAll(Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#tail(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#tail(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#query(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$ReactiveFind;
+#update(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$ReactiveUpdate;
+#remove(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$ReactiveRemove;
+#insert(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveInsertOperation$ReactiveInsert;
+#aggregateAndReturn(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation$ReactiveAggregation;
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lorg/springframework/data/mongodb/core/convert/MongoConverter;Ljava/util/function/Consumer;)V
+#withSession(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#inTransaction()Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#inTransaction(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#withSession(Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;
+#withSession(Lcom/mongodb/ClientSessionOptions;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findDistinct(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#findAndReplace(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#changeStream(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/ChangeStreamOptions;Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lreactor/core/publisher/Flux;
+#mapReduce(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lreactor/core/publisher/Flux;
+#mapReduce(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$ReactiveMapReduce;
+#mapReduce(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithMapFunction;
@2.2.0.RELEASE
+#setEntityCallbacks(Lorg/springframework/data/mapping/callback/ReactiveEntityCallbacks;)V
+#setSessionSynchronization(Lorg/springframework/data/mongodb/SessionSynchronization;)V
+#changeStream(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ReactiveChangeStream;
@3.0.0.RELEASE
+#getCollection(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#getMongoDatabase()Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#getCollection(Ljava/lang/String;)Lcom/mongodb/reactivestreams/client/MongoCollection;
-#getMongoDatabase()Lcom/mongodb/reactivestreams/client/MongoDatabase;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#findAndModify(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#upsert(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateFirst(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#updateMulti(Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@3.1.0
+#estimatedCount(Ljava/lang/String;)Lreactor/core/publisher/Mono;
@3.1.4
+#getMongoDatabaseFactory()Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
@3.4.0
+#useEstimatedCount(Z)V
+#exactCount(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@4.0.0
+#setEntityLifecycleEventsEnabled(Z)V
+#createView(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Lorg/springframework/data/mongodb/core/ViewOptions;)Lreactor/core/publisher/Mono;
+#createView(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Lorg/springframework/data/mongodb/core/ViewOptions;)Lreactor/core/publisher/Mono;
-#inTransaction()Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;
-#inTransaction(Lorg/reactivestreams/Publisher;)Lorg/springframework/data/mongodb/core/ReactiveSessionScoped;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$FindDistinct
@2.1.0.RELEASE
+#distinct(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingDistinct;

+###org/springframework/data/mongodb/core/DefaultReactiveIndexOperations
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;)V
+#<init>(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/lang/String;Lorg/springframework/data/mongodb/core/convert/QueryMapper;Ljava/lang/Class;)V
+#ensureIndex(Lorg/springframework/data/mongodb/core/index/IndexDefinition;)Lreactor/core/publisher/Mono;
+#dropIndex(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#dropAllIndexes()Lreactor/core/publisher/Mono;
+#getIndexInfo()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFind
@2.0.0.RELEASE
+#one()Lreactor/core/publisher/Mono;
+#first()Lreactor/core/publisher/Mono;
+#all()Lreactor/core/publisher/Flux;
+#count()Lreactor/core/publisher/Mono;
+#exists()Lreactor/core/publisher/Mono;
@2.1.0.RELEASE
+#tail()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/CursorPreparer
@2.1.11.RELEASE
+#prepare(Lcom/mongodb/client/FindIterable;)Lcom/mongodb/client/FindIterable;
@2.2.0.RELEASE
+#initiateFind(Lcom/mongodb/client/MongoCollection;Ljava/util/function/Function;)Lcom/mongodb/client/FindIterable;
+#getReadPreference()Lcom/mongodb/ReadPreference;

+###org/springframework/data/mongodb/core/mapping/DocumentPointer
@3.3.0
+#getPointer()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/mapping/Field$Write
@3.3.0
+#values()[Lorg/springframework/data/mongodb/core/mapping/Field$Write;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/Field$Write;

+###org/springframework/data/mongodb/core/mapping/ShardingStrategy
@3.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/mapping/ShardingStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/ShardingStrategy;

+###org/springframework/data/mongodb/core/mapping/Unwrapped$Empty
@3.2.0
+#prefix()Ljava/lang/String;
+#value()Ljava/lang/String;

+###org/springframework/data/mongodb/core/mapping/TextScore
@1.6.0.RELEASE

+###org/springframework/data/mongodb/core/mapping/ShardKey
@3.0.0.RELEASE
+#size()I
+#getPropertyNames()Ljava/util/Collection;
+#isImmutable()Z
+#isSharded()Z
+#getDocument()Lorg/bson/Document;
+#none()Lorg/springframework/data/mongodb/core/mapping/ShardKey;
+#range([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/ShardKey;
+#hash([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/ShardKey;
+#immutable(Lorg/springframework/data/mongodb/core/mapping/ShardKey;)Lorg/springframework/data/mongodb/core/mapping/ShardKey;

+###org/springframework/data/mongodb/core/mapping/Language
@1.6.0.RELEASE

+###org/springframework/data/mongodb/core/mapping/event/ReactiveAfterSaveCallback
@3.0.0.RELEASE
+#onAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/core/mapping/event/BeforeSaveCallback
@2.2.0.RELEASE
+#onBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/mapping/event/AfterConvertCallback
@3.0.0.RELEASE
+#onAfterConvert(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/mapping/event/ReactiveAfterConvertCallback
@3.0.0.RELEASE
+#onAfterConvert(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/core/mapping/event/AuditingEntityCallback
@2.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectFactory;)V
+#onBeforeConvert(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#getOrder()I

+###org/springframework/data/mongodb/core/mapping/event/ReactiveBeforeSaveCallback
@2.2.0.RELEASE
+#onBeforeSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/core/mapping/event/BeforeConvertCallback
@2.2.0.RELEASE
+#onBeforeConvert(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/mapping/event/ReactiveAuditingEntityCallback
@2.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectFactory;)V
+#onBeforeConvert(Ljava/lang/Object;Ljava/lang/String;)Lorg/reactivestreams/Publisher;
+#getOrder()I

+###org/springframework/data/mongodb/core/mapping/event/ReactiveBeforeConvertCallback
@2.2.0.RELEASE
+#onBeforeConvert(Ljava/lang/Object;Ljava/lang/String;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/core/mapping/event/AfterSaveCallback
@3.0.0.RELEASE
+#onAfterSave(Ljava/lang/Object;Lorg/bson/Document;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty
@3.2.0
+#values()[Lorg/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty;

+###org/springframework/data/mongodb/core/mapping/FieldType
@2.2.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/mapping/FieldType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/FieldType;
+#getBsonType()I
+#getJavaClass()Ljava/lang/Class;

+###org/springframework/data/mongodb/core/mapping/Encrypted
@3.3.0
+#keyId()[Ljava/lang/String;
+#algorithm()Ljava/lang/String;

+###org/springframework/data/mongodb/core/mapping/DocumentReference
@3.3.0
+#db()Ljava/lang/String;
+#collection()Ljava/lang/String;
+#lookup()Ljava/lang/String;
+#sort()Ljava/lang/String;
+#lazy()Z

+###org/springframework/data/mongodb/core/mapping/Sharded
@3.0.0.RELEASE
+#value()[Ljava/lang/String;
+#shardKey()[Ljava/lang/String;
+#shardingStrategy()Lorg/springframework/data/mongodb/core/mapping/ShardingStrategy;
+#immutableKey()Z

+###org/springframework/data/mongodb/core/mapping/Unwrapped$Nullable
@3.2.0
+#prefix()Ljava/lang/String;
+#value()Ljava/lang/String;

+###org/springframework/data/mongodb/core/mapping/MongoId
@2.2.0.RELEASE
+#value()Lorg/springframework/data/mongodb/core/mapping/FieldType;
+#targetType()Lorg/springframework/data/mongodb/core/mapping/FieldType;

+###org/springframework/data/mongodb/core/mapping/Unwrapped
@3.2.0
+#onEmpty()Lorg/springframework/data/mongodb/core/mapping/Unwrapped$OnEmpty;
+#prefix()Ljava/lang/String;

+###org/springframework/data/mongodb/core/mapping/TimeSeries
@3.3.0
+#collection()Ljava/lang/String;
+#timeField()Ljava/lang/String;
+#metaField()Ljava/lang/String;
+#granularity()Lorg/springframework/data/mongodb/core/timeseries/Granularity;
+#collation()Ljava/lang/String;

+###org/springframework/data/mongodb/core/ReactiveMongoClientFactoryBean
@2.0.0.RELEASE
+#<init>()V
+#setHost(Ljava/lang/String;)V
+#setPort(I)V
+#setConnectionString(Ljava/lang/String;)V
+#setMongoClientSettings(Lcom/mongodb/async/client/MongoClientSettings;)V
+#setExceptionTranslator(Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#getObjectType()Ljava/lang/Class;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@3.0.0.RELEASE
+#setMongoClientSettings(Lcom/mongodb/MongoClientSettings;)V
-#setMongoClientSettings(Lcom/mongodb/async/client/MongoClientSettings;)V

+###org/springframework/data/mongodb/core/ReactiveAggregationOperationExtensionsKt
@2.0.0.RELEASE
+#aggregateAndReturn(Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation$ReactiveAggregation;
@2.2.0.RELEASE
+#aggregateAndReturn(Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation;)Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation$ReactiveAggregation;
+#flow(Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation$TerminatingAggregationOperation;)Lkotlinx/coroutines/flow/Flow;
@4.0.0
-#aggregateAndReturn(Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation$ReactiveAggregation;

+###org/springframework/data/mongodb/core/ReactiveDatabaseCallback
@2.0.0.RELEASE
+#doInDB(Lcom/mongodb/reactivestreams/client/MongoDatabase;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/core/FindPublisherPreparer
@2.1.11.RELEASE
+#prepare(Lcom/mongodb/reactivestreams/client/FindPublisher;)Lcom/mongodb/reactivestreams/client/FindPublisher;
@2.2.0.RELEASE
+#initiateFind(Lcom/mongodb/reactivestreams/client/MongoCollection;Ljava/util/function/Function;)Lcom/mongodb/reactivestreams/client/FindPublisher;
+#getReadPreference()Lcom/mongodb/ReadPreference;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation
@2.0.0.RELEASE
+#update(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$ReactiveUpdate;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithReduceFunction
@2.1.0.RELEASE
+#reduce(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$ReactiveMapReduce;

+###org/springframework/data/mongodb/core/MongoClientFactoryBean
@1.7.0.RELEASE
+#<init>()V
+#setMongoClientOptions(Lcom/mongodb/MongoClientOptions;)V
+#setCredentials([Lcom/mongodb/MongoCredential;)V
+#setReplicaSetSeeds([Lcom/mongodb/ServerAddress;)V
+#setHost(Ljava/lang/String;)V
+#setPort(I)V
+#setExceptionTranslator(Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#getObjectType()Ljava/lang/Class;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@3.0.0.RELEASE
+#setMongoClientSettings(Lcom/mongodb/MongoClientSettings;)V
+#setCredential([Lcom/mongodb/MongoCredential;)V
+#setConnectionString(Lcom/mongodb/ConnectionString;)V
+#setReplicaSet(Ljava/lang/String;)V
-#setMongoClientOptions(Lcom/mongodb/MongoClientOptions;)V
-#setCredentials([Lcom/mongodb/MongoCredential;)V
-#setReplicaSetSeeds([Lcom/mongodb/ServerAddress;)V

+###org/springframework/data/mongodb/core/SimpleReactiveMongoDatabaseFactory
@2.0.0.RELEASE
+#<init>(Lcom/mongodb/ConnectionString;)V
+#<init>(Lcom/mongodb/reactivestreams/client/MongoClient;Ljava/lang/String;)V
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#getMongoDatabase()Lcom/mongodb/reactivestreams/client/MongoDatabase;
+#getMongoDatabase(Ljava/lang/String;)Lcom/mongodb/reactivestreams/client/MongoDatabase;
+#destroy()V
+#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
@2.1.0.RELEASE
+#getSession(Lcom/mongodb/ClientSessionOptions;)Lreactor/core/publisher/Mono;
+#withSession(Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
@3.0.0.RELEASE
+#getMongoDatabase()Lreactor/core/publisher/Mono;
+#getMongoDatabase(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;
-#getMongoDatabase()Lcom/mongodb/reactivestreams/client/MongoDatabase;
-#getMongoDatabase(Ljava/lang/String;)Lcom/mongodb/reactivestreams/client/MongoDatabase;

+###org/springframework/data/mongodb/core/ExecutableRemoveOperationExtensionsKt
@2.0.0.RELEASE
+#remove(Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation$ExecutableRemove;
@2.2.0.RELEASE
+#remove(Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation;)Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation$ExecutableRemove;
@4.0.0
-#remove(Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation$ExecutableRemove;

+###org/springframework/data/mongodb/core/ChangeStreamEvent
@2.1.0.RELEASE
+#<init>(Lcom/mongodb/client/model/changestream/ChangeStreamDocument;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#getRaw()Lcom/mongodb/client/model/changestream/ChangeStreamDocument;
+#getTimestamp()Ljava/time/Instant;
+#getResumeToken()Lorg/bson/BsonValue;
+#getOperationType()Lcom/mongodb/client/model/changestream/OperationType;
+#getDatabaseName()Ljava/lang/String;
+#getCollectionName()Ljava/lang/String;
+#getBody()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.2.0.RELEASE
+#getBsonTimestamp()Lorg/bson/BsonTimestamp;
@4.0.0
+#getBodyBeforeChange()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$FindAndReplaceWithProjection
@2.1.0.RELEASE
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$FindAndReplaceWithOptions;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$FindWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$FindWithProjection;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$UpdateWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$UpdateWithQuery;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$ExecutableFind
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/MongoEncryptionSettingsFactoryBean
@2.2.0.RELEASE
+#<init>()V
+#setBypassAutoEncryption(Z)V
+#setExtraOptions(Ljava/util/Map;)V
+#setKeyVaultNamespace(Ljava/lang/String;)V
+#setKeyVaultClientSettings(Lcom/mongodb/MongoClientSettings;)V
+#setKmsProviders(Ljava/util/Map;)V
+#setSchemaMap(Ljava/util/Map;)V
+#getObject()Lcom/mongodb/AutoEncryptionSettings;
+#getObjectType()Ljava/lang/Class;
+#getObject()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$UpdateWithQuery
@2.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$UpdateWithUpdate;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$UpdateWithUpdate;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct
@2.1.0.RELEASE
+#all()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/ExecutableInsertOperation$InsertWithBulkMode
@2.0.0.RELEASE
+#withBulkMode(Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;)Lorg/springframework/data/mongodb/core/ExecutableInsertOperation$TerminatingBulkInsert;

+###org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType
@1.10.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;

+###org/springframework/data/mongodb/core/spel/NotOperatorNode
@1.10.0.RELEASE
+#getMongoOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference
@1.10.0.RELEASE
+#getMongoOperator()Ljava/lang/String;
+#getArgumentType()Lorg/springframework/data/mongodb/core/spel/MethodReferenceNode$AggregationMethodReference$ArgumentType;
+#getArgumentMap()[Ljava/lang/String;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithOptions
@2.1.0.RELEASE
+#with(Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$ReactiveMapReduce;

+###org/springframework/data/mongodb/core/ReactiveAggregationOperation$AggregationOperationWithAggregation
@2.0.0.RELEASE
+#by(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/mongodb/core/ReactiveAggregationOperation$TerminatingAggregationOperation;

+###org/springframework/data/mongodb/core/convert/ReferenceResolver$ReferenceCollection
@3.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#fromDBRef(Lcom/mongodb/DBRef;)Lorg/springframework/data/mongodb/core/convert/ReferenceResolver$ReferenceCollection;
+#getCollection()Ljava/lang/String;
+#getDatabase()Ljava/lang/String;

+###org/springframework/data/mongodb/core/convert/MongoExampleMapper
@1.9.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#getMappedExample(Lorg/springframework/data/domain/Example;)Lcom/mongodb/DBObject;
+#getMappedExample(Lorg/springframework/data/domain/Example;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#getMappedExample(Lorg/springframework/data/domain/Example;)Lorg/bson/Document;
+#getMappedExample(Lorg/springframework/data/domain/Example;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lorg/bson/Document;
-#getMappedExample(Lorg/springframework/data/domain/Example;)Lcom/mongodb/DBObject;
-#getMappedExample(Lorg/springframework/data/domain/Example;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/convert/ReferenceResolver$MongoEntityReader
@3.3.0
+#read(Ljava/lang/Object;Lorg/springframework/data/util/TypeInformation;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/ReferenceLoader$DocumentReferenceQuery
@3.3.0
+#getQuery()Lorg/bson/conversions/Bson;
+#getSort()Lorg/bson/conversions/Bson;
+#apply(Lcom/mongodb/client/MongoCollection;)Ljava/lang/Iterable;
+#restoreOrder(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#forSingleDocument(Lorg/bson/conversions/Bson;)Lorg/springframework/data/mongodb/core/convert/ReferenceLoader$DocumentReferenceQuery;
+#forManyDocuments(Lorg/bson/conversions/Bson;)Lorg/springframework/data/mongodb/core/convert/ReferenceLoader$DocumentReferenceQuery;

+###org/springframework/data/mongodb/core/convert/ReferenceLoader
@3.3.0
+#fetchOne(Lorg/springframework/data/mongodb/core/convert/ReferenceLoader$DocumentReferenceQuery;Lorg/springframework/data/mongodb/core/convert/ReferenceResolver$ReferenceCollection;)Lorg/bson/Document;
+#fetchMany(Lorg/springframework/data/mongodb/core/convert/ReferenceLoader$DocumentReferenceQuery;Lorg/springframework/data/mongodb/core/convert/ReferenceResolver$ReferenceCollection;)Ljava/lang/Iterable;

+###org/springframework/data/mongodb/core/convert/DocumentReferenceSource
@3.3.0
+#getSelf()Ljava/lang/Object;
+#getTargetSource()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/MappingMongoConverter$ConversionContext
@3.2.0
+#convert(Ljava/lang/Object;Lorg/springframework/data/util/TypeInformation;)Ljava/lang/Object;
+#withPath(Lorg/springframework/data/mongodb/core/convert/ObjectPath;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$ConversionContext;
+#getPath()Lorg/springframework/data/mongodb/core/convert/ObjectPath;
@3.4.0
+#forProperty(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$ConversionContext;
@3.4.3
-###org/springframework/data/mongodb/core/convert/MappingMongoConverter$ConversionContext

+###org/springframework/data/mongodb/core/convert/DbRefProxyHandler
@1.6.0.RELEASE
+#populateId(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBRef;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/JsonSchemaMapper
@2.1.0.RELEASE
+#mapSchema(Lorg/bson/Document;Ljava/lang/Class;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/convert/LazyLoadingProxyFactory$LazyLoadingInterceptor
@3.3.0
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;Ljava/lang/Object;Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
+#intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/springframework/cglib/proxy/MethodProxy;)Ljava/lang/Object;
@4.0.0
+#none()Lorg/springframework/data/mongodb/core/convert/LazyLoadingProxyFactory$LazyLoadingInterceptor;

+###org/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter
@3.0.0.RELEASE
+#<init>()V
+#from(Ljava/util/List;)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
+#useNativeDriverJavaTimeCodecs(Z)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
+#useNativeDriverJavaTimeCodecs()Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
+#useSpringDataJavaTimeCodecs()Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
+#registerConverter(Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
+#registerConverterFactory(Lorg/springframework/core/convert/converter/ConverterFactory;)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
+#registerConverters(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
@3.4.0
+#configurePropertyConversions(Ljava/util/function/Consumer;)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
+#registerPropertyValueConverterFactory(Lorg/springframework/data/convert/PropertyValueConverterFactory;)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;
+#setPropertyValueConversions(Lorg/springframework/data/convert/PropertyValueConversions;)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions$MongoConverterConfigurationAdapter;

+###org/springframework/data/mongodb/core/convert/ReferenceResolver
@3.3.0
+#resolveReference(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/convert/ReferenceLookupDelegate;Lorg/springframework/data/mongodb/core/convert/ReferenceResolver$MongoEntityReader;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/QueryMapper$AssociationConverter
@1.6.1.RELEASE
+#<init>(Lorg/springframework/data/mapping/Association;)V
+#convert(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.2.7.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mapping/Association;)V
-#<init>(Lorg/springframework/data/mapping/Association;)V

+###org/springframework/data/mongodb/core/convert/NoOpDbRefResolver
@2.1.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/NoOpDbRefResolver;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/NoOpDbRefResolver;
+#resolveDbRef(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lcom/mongodb/DBRef;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;Lorg/springframework/data/mongodb/core/convert/DbRefProxyHandler;)Ljava/lang/Object;
+#fetch(Lcom/mongodb/DBRef;)Lorg/bson/Document;
+#bulkFetch(Ljava/util/List;)Ljava/util/List;
@3.3.0
+#resolveReference(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/convert/ReferenceLookupDelegate;Lorg/springframework/data/mongodb/core/convert/ReferenceResolver$MongoEntityReader;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/DefaultMongoTypeMapper$DocumentTypeAliasAccessor
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#readAliasFrom(Lorg/bson/conversions/Bson;)Lorg/springframework/data/mapping/Alias;
+#writeTypeTo(Lorg/bson/conversions/Bson;Ljava/lang/Object;)V
+#writeTypeTo(Ljava/lang/Object;Ljava/lang/Object;)V
+#readAliasFrom(Ljava/lang/Object;)Lorg/springframework/data/mapping/Alias;

+###org/springframework/data/mongodb/core/convert/ReferenceLookupDelegate
@3.3.0
+#<init>(Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/mapping/model/SpELContext;)V
+#readReference(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/convert/ReferenceLookupDelegate$LookupFunction;Lorg/springframework/data/mongodb/core/convert/ReferenceResolver$MongoEntityReader;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/UpdateMapper$MetadataBackedUpdateField$UpdateAssociationConverter
@1.6.1.RELEASE
+#<init>(Lorg/springframework/data/mapping/Association;Ljava/lang/String;)V
+#convert(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.2.6.RELEASE
+#<init>(Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/mapping/Association;Ljava/lang/String;)V
-#<init>(Lorg/springframework/data/mapping/Association;Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/convert/MongoJsonSchemaMapper
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#mapSchema(Lorg/bson/Document;Ljava/lang/Class;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/convert/DefaultReferenceResolver
@3.3.0
+#<init>(Lorg/springframework/data/mongodb/core/convert/ReferenceLoader;Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#resolveReference(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/convert/ReferenceLookupDelegate;Lorg/springframework/data/mongodb/core/convert/ReferenceResolver$MongoEntityReader;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/convert/MongoCustomConversions
@2.0.0.RELEASE
+#<init>(Ljava/util/List;)V
@3.0.0.RELEASE
+#create(Ljava/util/function/Consumer;)Lorg/springframework/data/mongodb/core/convert/MongoCustomConversions;

+###org/springframework/data/mongodb/core/convert/MongoDatabaseFactoryReferenceLoader
@3.3.0
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;)V
+#fetchMany(Lorg/springframework/data/mongodb/core/convert/ReferenceLoader$DocumentReferenceQuery;Lorg/springframework/data/mongodb/core/convert/ReferenceResolver$ReferenceCollection;)Ljava/lang/Iterable;

+###org/springframework/data/mongodb/core/ReactiveFindOperation
@2.0.0.RELEASE
+#query(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$ReactiveFind;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingFindNear
@2.0.0.RELEASE
+#all()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#valueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#multiplyBy(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#multiplyBy(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#multiplyBy(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DocumentOperators$Shift
@3.3.0
+#shift(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$Shift;
+#shift(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$Shift;
+#by(I)Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$Shift;
+#defaultTo(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$Shift;
+#defaultToValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$Shift;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$DegreesToRadians
@3.3.0
+#degreesToRadiansOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$DegreesToRadians;
+#degreesToRadiansOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$DegreesToRadians;
+#degreesToRadians(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$DegreesToRadians;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators$Function
@3.1.0
+#function(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function;
+#args([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function;
+#args(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function;
+#lang(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ReplaceWithOperation
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$Replacement;)V
+#replaceWithValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceWithOperation;
+#replaceWithValueOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceWithOperation;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$Week
@1.10.0.RELEASE
+#weekOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
+#weekOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#week(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#week(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#week(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorFinalizeBuilder
@3.1.0
+#finalize(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator;
+#build()Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$StringOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#concatValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#concatValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#concat(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#substring(I)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Substr;
+#substring(II)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Substr;
+#toLower()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ToLower;
+#toUpper()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ToUpper;
+#strCaseCmp(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#strCaseCmpValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#strCaseCmpValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#indexOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes;
+#indexOf(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes;
+#indexOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes;
+#indexOfCP(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP;
+#indexOfCP(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP;
+#indexOfCP(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP;
+#split(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Split;
+#split(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Split;
+#split(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Split;
+#length()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrLenBytes;
+#lengthCP()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrLenCP;
+#substringCP(I)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$SubstrCP;
+#substringCP(II)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$SubstrCP;
@1.10.15.RELEASE
+#trim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#trim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#trim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#ltrim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#ltrim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#ltrim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#rtrim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#rtrim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#rtrim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
@2.0.0.RELEASE
-#trim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
-#trim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
-#trim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
-#ltrim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
-#ltrim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
-#ltrim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
-#rtrim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
-#rtrim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
-#rtrim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
@2.0.10.RELEASE
+#trim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#trim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#trim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#ltrim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#ltrim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#ltrim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#rtrim()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#rtrim(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#rtrim(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
@3.3.0
+#regexFind(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#regexFind(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#regexFind(Ljava/util/regex/Pattern;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#regexFind(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#regexFindAll(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#regexFindAll(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#regexFindAll(Ljava/util/regex/Pattern;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#regexFindAll(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#regexMatch(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#regexMatch(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#regexMatch(Ljava/util/regex/Pattern;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#regexMatch(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
@3.4.0
+#replaceOne(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#replaceOne(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#replaceAll(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#replaceAll(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;

+###org/springframework/data/mongodb/core/aggregation/SetOperators$SetIntersection
@1.10.0.RELEASE
+#arrayAsSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIntersection;
+#arrayAsSet(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIntersection;
+#intersects([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIntersection;
+#intersects([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIntersection;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch
@1.10.0.RELEASE
+#switchCases([Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch$CaseOperator;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch;
+#switchCases(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch;
+#defaultTo(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round
@3.0.0.RELEASE
+#roundValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round;
+#roundValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round;
+#round(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round;
+#place(I)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round;
+#placeOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round;
+#placeOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/GraphLookupOperation$ConnectFromBuilder
@1.10.0.RELEASE
+#connectFrom(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$ConnectToBuilder;

+###org/springframework/data/mongodb/core/aggregation/DocumentOperators
@3.3.0
+#<init>()V
+#rank()Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$Rank;
+#denseRank()Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$DenseRank;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$DocumentOperatorsFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$DocumentOperatorsFactory;
+#documentNumber()Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$DocumentNumber;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip$ZipBuilder
@1.10.0.RELEASE
+#zip([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip;

+###org/springframework/data/mongodb/core/aggregation/MergeOperation$UniqueMergeId
@3.0.0.RELEASE
+#ofIdFields([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$UniqueMergeId;
+#id()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$UniqueMergeId;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#elementAt(I)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;
+#elementAt(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;
+#elementAt(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;
+#concat(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ConcatArrays;
+#concat(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ConcatArrays;
+#filter()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$AsBuilder;
+#isArray()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IsArray;
+#length()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Size;
+#slice()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice;
+#indexOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IndexOfArray;
+#reverse()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ReverseArray;
+#reduce(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayOperatorFactory$ReduceInitialValueBuilder;
+#reduce([Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$PropertyExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayOperatorFactory$ReduceInitialValueBuilder;
+#zipWith([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip;
+#containsValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$In;
@2.1.0.RELEASE
+#toObject()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayToObject;
@2.2.0.RELEASE
+#<init>(Ljava/util/Collection;)V
@3.4.0
+#first()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$First;
+#last()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Last;
@4.0.0
+#sort(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$SortArray;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators
@1.10.0.RELEASE
+#<init>()V
+#when(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$ConditionalOperatorFactory;
+#when(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$ConditionalOperatorFactory;
+#when(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$ConditionalOperatorFactory;
+#ifNull(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder;
+#ifNull(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder;
+#switchCases([Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch$CaseOperator;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch;
+#switchCases(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch;

+###org/springframework/data/mongodb/core/aggregation/DocumentOperators$Rank
@3.3.0
+#<init>()V
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/UnionWithOperation
@3.1.0
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;Ljava/lang/Class;)V
+#unionWith(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnionWithOperation;
+#pipeline(Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;)Lorg/springframework/data/mongodb/core/aggregation/UnionWithOperation;
+#pipeline(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/UnionWithOperation;
+#pipeline([Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lorg/springframework/data/mongodb/core/aggregation/UnionWithOperation;
+#mapFieldsTo(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/UnionWithOperation;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder
@1.10.0.RELEASE
+#then(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$OtherwiseBuilder;
+#thenValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$OtherwiseBuilder;
+#thenValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$OtherwiseBuilder;

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min
@1.10.0.RELEASE
+#minOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min;
+#minOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min;
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@4.0.0
+#limit(I)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder$WindowChoice
@3.3.0
+#within(Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$Window;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder$As;

+###org/springframework/data/mongodb/core/aggregation/LookupOperation$LocalFieldBuilder
@1.9.0.RELEASE
+#localField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation$ForeignFieldBuilder;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnit
@3.3.0
+#name()Ljava/lang/String;
+#from(Ljava/util/concurrent/TimeUnit;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnit;
+#from(Ljava/time/temporal/ChronoUnit;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnit;

+###org/springframework/data/mongodb/core/aggregation/AggregationSpELExpression
@1.10.0.RELEASE
+#expressionOf(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AggregationSpELExpression;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice$SliceElementsBuilder
@1.10.0.RELEASE
+#itemCount(I)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice;

+###org/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsDontMatch
@3.0.0.RELEASE
+#whenNotMatchedOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsDontMatch;
+#insertNewDocument()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsDontMatch;
+#discardDocument()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsDontMatch;
+#failWhenNotMatch()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsDontMatch;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$InitialValueBuilder
@1.10.0.RELEASE
+#withInitialValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$ReduceBuilder;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear
@1.10.0.RELEASE
+#isoWeekYearOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
+#isoWeekYearOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#isoWeekYear(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#isoWeekYear(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#isoWeekYear(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SetOperators$AnyElementTrue
@1.10.0.RELEASE
+#arrayAsSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$AnyElementTrue;
+#arrayAsSet(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$AnyElementTrue;
+#anyElementTrue()Lorg/springframework/data/mongodb/core/aggregation/SetOperators$AnyElementTrue;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$Trim
@1.10.15.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#chars(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#charsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#charsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Trim;
+#left()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#right()Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/StringOperators$Trim

+###org/springframework/data/mongodb/core/aggregation/EvaluationOperators
@3.3.0
+#<init>()V
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootDocumentOperation
@2.1.20.RELEASE
+#<init>()V
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootDocumentOperationBuilder;
+#andValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootDocumentOperationBuilder;
+#andValuesOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootDocumentOperation;
@2.2.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootDocumentOperation

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToLong
@1.10.15.RELEASE
+#toLong(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToLong;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToLong

+###org/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder
@3.0.0.RELEASE
+#addFieldWithValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder;
+#addFieldWithValueOf(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder;
+#addField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder$ValueAppender;
+#build()Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$Window
@3.3.0
+#getLower()Ljava/lang/Object;
+#getUpper()Ljava/lang/Object;
+#toDocument()Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/LookupOperation$FromBuilder
@1.9.0.RELEASE
+#from(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation$LocalFieldBuilder;

+###org/springframework/data/mongodb/core/aggregation/SetOperation
@3.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#builder()Lorg/springframework/data/mongodb/core/aggregation/SetOperation$FieldAppender;
+#set(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperation$FieldAppender$ValueAppender;
+#set(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/SetOperation;
+#and()Lorg/springframework/data/mongodb/core/aggregation/SetOperation$FieldAppender;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToInt
@1.10.15.RELEASE
+#toInt(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToInt;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToInt

+###org/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes$SubstringBuilder
@1.10.0.RELEASE
+#indexOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes;
+#indexOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes;
+#indexOf(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes;

+###org/springframework/data/mongodb/core/aggregation/RedactOperation
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#builder()Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/SetOperators$SetIsSubset
@1.10.0.RELEASE
+#arrayAsSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIsSubset;
+#arrayAsSet(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIsSubset;
+#isSubsetOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIsSubset;
+#isSubsetOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIsSubset;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvg
@3.3.0
+#expMovingAvgOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvg;
+#expMovingAvgOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvg;
+#n(I)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvg;
+#alpha(D)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvg;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators
@1.10.15.RELEASE
+#<init>()V
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ConvertOperatorFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ConvertOperatorFactory;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop
@3.3.0
+#covariancePopOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop;
+#covariancePopOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop;
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SetOperators$SetOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#isEqualTo([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetEquals;
+#isEqualTo([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetEquals;
+#intersects([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIntersection;
+#intersects([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIntersection;
+#union([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetUnion;
+#union([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetUnion;
+#differenceTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetDifference;
+#differenceTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetDifference;
+#isSubsetOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIsSubset;
+#isSubsetOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetIsSubset;
+#anyElementTrue()Lorg/springframework/data/mongodb/core/aggregation/SetOperators$AnyElementTrue;
+#allElementsTrue()Lorg/springframework/data/mongodb/core/aggregation/SetOperators$AllElementsTrue;

+###org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand
@2.2.7.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression$Expand;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$ReverseArray
@1.10.0.RELEASE
+#reverseArrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ReverseArray;
+#reverseArrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ReverseArray;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#reverseArrayOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ReverseArray;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateFromPartsOperatorFactory
@1.10.11.RELEASE
+#isoWeekYear(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoWeekYearOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoWeekYearOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#year(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#yearOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#yearOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromPartsOperatorFactory;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$DateFromPartsOperatorFactory

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh
@3.3.0
+#coshOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh;
+#coshOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh;
+#coshOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh;
+#coshOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh;
+#cosh(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh;
+#cosh(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SetOperators$SetDifference
@1.10.0.RELEASE
+#arrayAsSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetDifference;
+#arrayAsSet(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetDifference;
+#differenceTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetDifference;
+#differenceTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetDifference;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#valueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#divideBy(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#divideBy(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#divideBy(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch$CaseOperator$ThenBuilder
@1.10.0.RELEASE
+#then(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch$CaseOperator;

+###org/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder
@3.0.0.RELEASE
+#when(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#when(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#when(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#thenDescend()Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#thenKeep()Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#thenPrune()Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#then(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#otherwiseDescend()Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#otherwiseKeep()Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#otherwisePrune()Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#otherwise(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/RedactOperation$RedactOperationBuilder;
+#build()Lorg/springframework/data/mongodb/core/aggregation/RedactOperation;

+###org/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootOperationBuilder
@1.10.0.RELEASE
+#<init>()V
+#withValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation;
+#withValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation;
+#withDocument()Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootDocumentOperation;
+#withDocument(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation;
@2.0.0.RELEASE
+#withDocument(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation;
-#withDocument(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#stringValue(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#strcasecmp(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#strcasecmpValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#strcasecmpValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrCaseCmp;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Avg
@1.10.0.RELEASE
+#avgOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Avg;
+#avgOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Avg;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Avg;
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Avg;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/GraphLookupOperation$GraphLookupOperationBuilder
@1.10.1.RELEASE
+#maxDepth(J)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$GraphLookupOperationBuilder;
+#depthField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$GraphLookupOperationBuilder;
+#restrict(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$GraphLookupOperationBuilder;
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$Substr
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Substr;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Substr;
+#substring(I)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Substr;
+#substring(II)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Substr;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/BucketOperation$BucketOperationOutputBuilder
@1.10.0.RELEASE

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt;
+#greaterThan(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt;
+#greaterThan(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt;
+#greaterThanValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit
@3.3.0
+#values()[Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder$As
@3.3.0
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;

+###org/springframework/data/mongodb/core/aggregation/VariableOperators$Let$LetBuilder
@1.10.0.RELEASE
+#andApply(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind
@3.3.0
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#options(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#optionsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#optionsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#regex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#pattern(Ljava/util/regex/Pattern;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#regexOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#regexOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFind;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToBool
@1.10.15.RELEASE
+#toBoolean(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToBool;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToBool

+###org/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder
@3.0.0.RELEASE
+#<init>()V
+#intoCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#inDatabase(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#into(Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationTarget;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#target(Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationTarget;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#on([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#id(Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$UniqueMergeId;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#let(Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#exposeVariablesOf(Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#whenMatched(Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#whenDocumentsMatch(Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#whenDocumentsMatchApply(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#whenNotMatched(Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsDontMatch;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#whenDocumentsDontMatch(Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsDontMatch;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#build()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#valueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#subtract(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#subtract(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#subtract(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Sum
@1.10.0.RELEASE
+#sumOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Sum;
+#sumOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Sum;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Sum;
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Sum;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#and(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Sum;

+###org/springframework/data/mongodb/core/aggregation/FacetOperation
@1.10.0.RELEASE
+#<init>()V
+#and([Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lorg/springframework/data/mongodb/core/aggregation/FacetOperation$FacetOperationBuilder;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#inheritsFields()Z
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayOperatorFactory$ReduceInitialValueBuilder
@1.10.0.RELEASE
+#startingWith(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt
@1.10.0.RELEASE
+#arrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;
+#arrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;
+#elementAt(I)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;
+#elementAt(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;
+#elementAt(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#arrayOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayElemAt;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ConvertOperatorFactory
@1.10.15.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#convertTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#convertTo(I)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#convertToTypeOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#convertToTypeOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#convertToBoolean()Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToBool;
+#convertToDate()Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDate;
+#convertToDecimal()Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDecimal;
+#convertToDouble()Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDouble;
+#convertToInt()Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToInt;
+#convertToLong()Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToLong;
+#convertToObjectId()Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToObjectId;
+#convertToString()Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToString;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ConvertOperatorFactory

+###org/springframework/data/mongodb/core/aggregation/ObjectOperators$ObjectToArray
@2.1.0.RELEASE
+#valueOfToArray(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$ObjectToArray;
+#valueOfToArray(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$ObjectToArray;
+#toArray(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$ObjectToArray;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$ToUpper
@1.10.0.RELEASE
+#upperValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ToUpper;
+#upperValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ToUpper;
+#upper(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ToUpper;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators$ComparisonOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#compareTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp;
+#compareTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp;
+#compareToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp;
+#equalTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq;
+#equalTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq;
+#equalToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq;
+#greaterThan(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt;
+#greaterThan(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt;
+#greaterThanValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gt;
+#greaterThanEqualTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte;
+#greaterThanEqualTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte;
+#greaterThanEqualToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte;
+#lessThan(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt;
+#lessThan(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt;
+#lessThanValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt;
+#lessThanEqualTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte;
+#lessThanEqualTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte;
+#lessThanEqualToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte;
+#notEqualTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne;
+#notEqualTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne;
+#notEqualToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd
@3.3.0
+#addValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#addValueOf(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#addValue(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#toDateOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#toDateOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#toDate(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;

+###org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Output
@1.10.0.RELEASE

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Integral
@3.3.0
+#integralOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Integral;
+#integralOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Integral;
+#unit(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Integral;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin
@3.3.0
+#sinOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin;
+#sinOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin;
+#sinOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin;
+#sinOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin;
+#sin(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin;
+#sin(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$ToLower
@1.10.0.RELEASE
+#lowerValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ToLower;
+#lowerValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ToLower;
+#lower(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ToLower;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice
@1.10.0.RELEASE
+#sliceArrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice;
+#sliceArrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice;
+#itemCount(I)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice;
+#offset(I)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice$SliceElementsBuilder;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#sliceArrayOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Slice;

+###org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$ExpressionBucketOperationBuilderSupport
@1.10.0.RELEASE

+###org/springframework/data/mongodb/core/aggregation/MergeOperation
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationTarget;Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$UniqueMergeId;Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let;Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsDontMatch;)V
+#mergeInto(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation;
+#builder()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationBuilder;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#inheritsFields()Z
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator$RangeOperatorBuilder
@1.10.0.RELEASE
+#to(J)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator;
+#to(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator;
+#to(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$Windows
@3.3.0
+#documents(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindow;
+#range(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnit;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindow;
+#range()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#documents()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;

+###org/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootDocumentOperationBuilder
@1.10.0.RELEASE
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootDocumentOperation;

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt;
+#lessThan(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt;
+#lessThan(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt;
+#lessThanValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lt;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/BucketOperation$ExpressionBucketOperationBuilder
@1.10.0.RELEASE

+###org/springframework/data/mongodb/core/aggregation/DateOperators$Timezone
@1.10.11.RELEASE
+#none()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;
+#valueOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;
+#ofField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;
+#ofExpression(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$Timezone

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$IfNullBuilder
@1.10.0.RELEASE
+#ifNull(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder;
+#ifNull(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder;

+###org/springframework/data/mongodb/core/aggregation/LimitOperation
@1.5.4.RELEASE
+#<init>(J)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping
@3.2.0
+#values()[Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#valueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#add(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#add(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#add(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Rand
@3.3.0
+#<init>()V
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SortByCountOperation
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Field;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/LookupOperation
@1.9.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Field;Lorg/springframework/data/mongodb/core/aggregation/Field;Lorg/springframework/data/mongodb/core/aggregation/Field;Lorg/springframework/data/mongodb/core/aggregation/Field;)V
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#newLookup()Lorg/springframework/data/mongodb/core/aggregation/LookupOperation$FromBuilder;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#inheritsFields()Z
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$IndexOfArray
@1.10.0.RELEASE
+#arrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IndexOfArray$IndexOfArrayBuilder;
+#arrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IndexOfArray$IndexOfArrayBuilder;
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IndexOfArray;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#arrayOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IndexOfArray$IndexOfArrayBuilder;

+###org/springframework/data/mongodb/core/aggregation/BucketOperationSupport
@1.10.0.RELEASE
+#andOutputExpression(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$ExpressionBucketOperationBuilderSupport;
+#andOutput(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#andOutput(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#andOutputCount()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#inheritsFields()Z

+###org/springframework/data/mongodb/core/aggregation/StringOperators$StrLenBytes
@1.10.0.RELEASE
+#stringLengthOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrLenBytes;
+#stringLengthOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrLenBytes;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts
@1.10.11.RELEASE
+#dateToParts(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts;
+#datePartsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts;
+#datePartsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts;
+#iso8601()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts

+###org/springframework/data/mongodb/core/aggregation/StringOperators$Split
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Split;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Split;
+#split(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Split;
+#split(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Split;
+#split(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Split;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ReplaceRootOperation
@1.10.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Field;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$Replacement;)V
+#builder()Lorg/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$ReplaceRootOperationBuilder;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#inheritsFields()Z
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/SetOperation$FieldAppender
@3.0.0.RELEASE
+#set(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperation$FieldAppender$ValueAppender;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ln
@1.10.0.RELEASE
+#lnValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ln;
+#lnValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ln;
+#lnValueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ln;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions;
+#of([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;
@4.0.0
-###org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max
@1.10.0.RELEASE
+#maxOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max;
+#maxOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max;
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@4.0.0
+#limit(I)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowOutput
@3.3.0
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$ComputedField;)V
+#append(Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$ComputedField;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowOutput;
+#append(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowOutput$ComputedFieldAppender;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter
@1.10.0.RELEASE
+#filter(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$AsBuilder;
+#filter(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$AsBuilder;
+#filter(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$AsBuilder;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$LTrim
@1.10.15.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#chars(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#charsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#charsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$LTrim;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/StringOperators$LTrim

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos
@3.3.0
+#cosOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos;
+#cosOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos;
+#cosOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos;
+#cosOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos;
+#cos(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos;
+#cos(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/PrefixingDelegatingAggregationOperationContext
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;Ljava/lang/String;Ljava/util/Collection;)V
+#getMappedObject(Lorg/bson/Document;)Lorg/bson/Document;
+#getReference(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
+#getReference(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
@2.2.0.RELEASE
+#getMappedObject(Lorg/bson/Document;Ljava/lang/Class;)Lorg/bson/Document;
+#getFields(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/Fields;
@4.0.0
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$AsBuilder
@1.10.0.RELEASE
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$ConditionBuilder;

+###org/springframework/data/mongodb/core/aggregation/SetOperators$SetUnion
@1.10.0.RELEASE
+#arrayAsSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetUnion;
+#arrayAsSet(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetUnion;
+#union([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetUnion;
+#union([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetUnion;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$In
@1.10.0.RELEASE
+#arrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$In$InBuilder;
+#arrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$In$InBuilder;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#arrayOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$In$InBuilder;

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte;
+#greaterThanEqualTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte;
+#greaterThanEqualTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte;
+#greaterThanEqualToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Gte;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/BooleanOperators$Or
@1.10.0.RELEASE
+#or([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Or;
+#orExpression(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Or;
+#orField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Or;
+#orValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Or;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToString
@1.10.15.RELEASE
+#toString(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToString;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToString

+###org/springframework/data/mongodb/core/aggregation/LiteralOperators$LiteralOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#asLiteral()Lorg/springframework/data/mongodb/core/aggregation/LiteralOperators$Literal;

+###org/springframework/data/mongodb/core/aggregation/VariableOperators
@1.10.0.RELEASE
+#<init>()V
+#mapItemsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Map$AsBuilder;
+#mapItemsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Map$AsBuilder;
+#define([Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$ExpressionVariable;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$LetBuilder;
+#define(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$LetBuilder;

+###org/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects
@2.1.0.RELEASE
+#merge([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#mergeValuesOf([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#mergeValuesOf([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#mergeWithValuesOf([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#mergeWithValuesOf([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#mergeWith([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/VariableOperators$Map$FunctionBuilder
@1.10.0.RELEASE
+#andApply(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Map;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Floor
@1.10.0.RELEASE
+#floorValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Floor;
+#floorValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Floor;
+#floorValueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Floor;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateToString
@1.10.0.RELEASE
+#dateOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString$FormatBuilder;
+#dateOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString$FormatBuilder;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#dateToString(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString$FormatBuilder;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.15.RELEASE
+#onNullReturn(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
+#onNullReturnValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
+#onNullReturnValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#dateToString(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString$FormatBuilder;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
-#onNullReturn(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
-#onNullReturnValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
-#onNullReturnValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#dateToString(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString$FormatBuilder;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
@2.0.10.RELEASE
+#onNullReturn(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
+#onNullReturnValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
+#onNullReturnValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff
@3.3.0
+#diffValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#diffValueOf(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#diffValue(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#toDateOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#toDateOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#toDate(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#startOfWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes$SubstringBuilder;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes$SubstringBuilder;
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfBytes;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindow
@3.3.0
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#getUpper()Ljava/lang/Object;
+#getLower()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASinh
@3.3.0
+#asinhOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASinh;
+#asinhOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASinh;
+#asinhOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASinh;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq;
+#equalTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq;
+#equalTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq;
+#equalToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Eq;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/SetOperators
@1.10.0.RELEASE
+#<init>()V
+#arrayAsSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetOperatorFactory;
+#arrayAsSet(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorInitArgsBuilder
@3.1.0
+#initArgs([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorAccumulateBuilder;
+#initArgs(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorAccumulateBuilder;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder
@3.3.0
+#<init>()V
+#partitionByField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;
+#partitionByExpression(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;
+#sortBy([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;
+#sortBy(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;
+#sortBy(Lorg/springframework/data/mongodb/core/aggregation/SortOperation;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;
+#output(Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowOutput;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;
+#output(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder$WindowChoice;
+#partitionBy(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;
+#build()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit
@3.3.0
+#name()Ljava/lang/String;
+#from(Ljava/util/concurrent/TimeUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;
+#from(Ljava/time/temporal/ChronoUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;

+###org/springframework/data/mongodb/core/aggregation/AggregationExpression
@1.8.5.RELEASE
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.9.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/AggregationExpression

+###org/springframework/data/mongodb/core/aggregation/VariableOperators$Map
@1.10.0.RELEASE
+#itemsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Map$AsBuilder;
+#itemsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Map$AsBuilder;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#valueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#pow(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#pow(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#pow(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder
@1.10.0.RELEASE
+#then(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull;
+#thenValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull;
+#thenValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$OtherwiseBuilder
@1.10.0.RELEASE
+#otherwise(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond;
+#otherwiseValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond;
+#otherwiseValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond;

+###org/springframework/data/mongodb/core/aggregation/UnwindOperation$PathBuilder
@1.10.0.RELEASE
+#path(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$IndexBuilder;

+###org/springframework/data/mongodb/core/aggregation/GraphLookupOperation$StartWithBuilder
@1.10.0.RELEASE
+#startWith([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$ConnectFromBuilder;
+#startWith([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$ConnectFromBuilder;
+#startWith([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$ConnectFromBuilder;

+###org/springframework/data/mongodb/core/aggregation/GraphLookupOperation
@1.10.0.RELEASE
+#builder()Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$FromBuilder;
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#inheritsFields()Z
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$StrLenCP
@1.10.0.RELEASE
+#stringLengthOfCP(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrLenCP;
+#stringLengthOfCP(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StrLenCP;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/CountOperation
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
@1.10.12.RELEASE
+#inheritsFields()Z
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#inheritsFields()Z
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$Outputs
@1.10.0.RELEASE
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$ComputedField
@3.3.0
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$Window;)V
+#getName()Ljava/lang/String;
+#getTarget()Ljava/lang/String;
+#isAliased()Z
+#getWindowOperator()Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;
+#getWindow()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$Window;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$Hour
@1.10.0.RELEASE
+#hourOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
+#hourOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#hour(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#hour(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#hour(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDate
@1.10.15.RELEASE
+#toDate(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDate;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDate

+###org/springframework/data/mongodb/core/aggregation/LookupOperation$AsBuilder
@1.9.0.RELEASE
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#valueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#mod(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#mod(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#mod(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Size
@1.10.0.RELEASE
+#lengthOfArray(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Size;
+#lengthOfArray(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Size;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#lengthOfArray(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Size;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators
@1.10.0.RELEASE
+#<init>()V
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ArithmeticOperatorFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ArithmeticOperatorFactory;
@3.3.0
+#rand()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Rand;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$PropertyExpression
@1.10.0.RELEASE
+#property(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$PropertyExpression$AsBuilder;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits
@3.3.0
+#values()[Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnits;

+###org/springframework/data/mongodb/core/aggregation/BucketOperation
@1.10.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Field;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#withDefaultBucket(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperation;
+#withBoundaries([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperation;
+#andOutputExpression(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperation$ExpressionBucketOperationBuilder;
+#andOutput(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperation$BucketOperationOutputBuilder;
+#andOutput(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperation$BucketOperationOutputBuilder;
+#andOutput(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#andOutput(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#andOutputExpression(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$ExpressionBucketOperationBuilderSupport;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder
@1.6.0.RELEASE
+#<init>()V
+#allowDiskUse(Z)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
+#explain(Z)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
+#cursor(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
+#build()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;
@2.0.0.RELEASE
+#cursor(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
+#cursorBatchSize(I)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
-#cursor(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
@2.2.0.RELEASE
+#comment(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
@3.0.0.RELEASE
+#maxTime(Ljava/time/Duration;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
@3.0.2.RELEASE
+#skipOutput()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
@3.1.0
+#hint(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
@3.2.0
+#strictMapping()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
+#relaxedMapping()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
+#noMapping()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;

+###org/springframework/data/mongodb/core/aggregation/BooleanOperators$BooleanOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$And;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$And;
+#or(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Or;
+#or(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Or;
+#not()Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Not;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce
@1.10.0.RELEASE
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#arrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$InitialValueBuilder;
+#arrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$InitialValueBuilder;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Exp
@1.10.0.RELEASE
+#expValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Exp;
+#expValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Exp;
+#expValueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Exp;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/VariableOperators$Let
@1.10.0.RELEASE
+#define(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$LetBuilder;
+#define([Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$ExpressionVariable;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$LetBuilder;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression
@1.10.11.RELEASE
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression

+###org/springframework/data/mongodb/core/aggregation/BucketAutoOperation
@1.10.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/Field;I)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;I)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#withBuckets(I)Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation;
+#withGranularity(Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularity;)Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation;
+#andOutputExpression(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$ExpressionBucketAutoOperationBuilder;
+#andOutput(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$BucketAutoOperationOutputBuilder;
+#andOutput(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$BucketAutoOperationOutputBuilder;
+#andOutput(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#andOutput(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#andOutputExpression(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$ExpressionBucketOperationBuilderSupport;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/UnwindOperation$EmptyArraysBuilder
@1.10.0.RELEASE
+#preserveNullAndEmptyArrays()Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation;
+#skipNullAndEmptyArrays()Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan
@3.3.0
+#tanOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan;
+#tanOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan;
+#tanOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan;
+#tanOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan;
+#tan(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan;
+#tan(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorMergeBuilder
@3.1.0
+#merge(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorFinalizeBuilder;

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorInitBuilder
@3.1.0
+#init(Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorAccumulateBuilder;
+#init(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorInitArgsBuilder;
+#lang(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorInitBuilder;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#valueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#log(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#log(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#log(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators
@1.10.0.RELEASE
+#<init>()V
+#dateOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
+#dateOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
@1.10.11.RELEASE
+#dateValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
+#dateFromParts()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromPartsOperatorFactory;
+#dateFromString(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
@2.0.0.RELEASE
-#dateValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
-#dateFromParts()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromPartsOperatorFactory;
-#dateFromString(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
@2.0.6.RELEASE
+#dateValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
+#dateFromParts()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromPartsOperatorFactory;
+#dateFromString(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
@3.3.0
+#zonedDateOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
+#zonedDateOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/AggregationPipeline
@3.0.2.RELEASE
+#<init>()V
+#<init>(Ljava/util/List;)V
+#add(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;
+#getOperations()Ljava/util/List;
+#isOutOrMerge()Z
@3.1.0
+#containsUnionWith()Z
+#isEmpty()Z
@4.0.0
+#of([Lorg/springframework/data/mongodb/core/aggregation/AggregationOperation;)Lorg/springframework/data/mongodb/core/aggregation/AggregationPipeline;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateToString$FormatBuilder
@1.10.0.RELEASE
+#toString(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
@1.10.15.RELEASE
+#defaultFormat()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
@2.0.0.RELEASE
-#defaultFormat()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
@2.0.10.RELEASE
+#defaultFormat()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;

+###org/springframework/data/mongodb/core/aggregation/GraphLookupOperation$FromBuilder
@1.10.0.RELEASE
+#from(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$StartWithBuilder;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts$DateFromPartsWithYear
@1.10.11.RELEASE
+#<init>()V
+#year(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#yearOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#yearOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts$DateFromPartsWithYear

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators
@3.1.0
+#<init>()V
+#function(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function;
+#accumulatorBuilder()Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorInitBuilder;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator
@1.10.0.RELEASE
+#rangeStartingAt(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator$RangeOperatorBuilder;
+#rangeStartingAt(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator$RangeOperatorBuilder;
+#rangeStartingAt(J)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator$RangeOperatorBuilder;
+#withStepSize(J)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$RangeOperator;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts
@1.10.11.RELEASE
+#dateFromParts()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts$IsoDateFromPartsWithYear;
+#isoWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoWeekOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoWeekOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoDayOfWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoDayOfWeekOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoDayOfWeekOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#hour(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#minute(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#second(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#milliseconds(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#milliseconds(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#second(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#minute(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#hour(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$OrBuilder
@3.3.0
+#orIfNull(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder;
+#orIfNull(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder;

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte;
+#lessThanEqualTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte;
+#lessThanEqualTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte;
+#lessThanEqualToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Lte;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/AggregationUpdate
@3.0.0.RELEASE
+#update()Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#from(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#set(Lorg/springframework/data/mongodb/core/aggregation/SetOperation;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#unset(Lorg/springframework/data/mongodb/core/aggregation/UnsetOperation;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#replaceWith(Lorg/springframework/data/mongodb/core/aggregation/ReplaceWithOperation;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#replaceWith(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#set(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate$SetValueAppender;
+#unset([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#isolated()Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#isIsolated()Ljava/lang/Boolean;
+#getUpdateObject()Lorg/bson/Document;
+#modifies(Ljava/lang/String;)Z
+#inc(Ljava/lang/String;)V
+#getArrayFilters()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne;
+#notEqualTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne;
+#notEqualTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne;
+#notEqualToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Ne;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond
@1.10.0.RELEASE
+#millisecondOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
+#millisecondOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#millisecond(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#millisecond(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#millisecond(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationTarget
@3.0.0.RELEASE
+#collection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationTarget;
+#inDatabase(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$MergeOperationTarget;

+###org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OperationOutput
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#withAlias(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OperationOutput;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Derivative
@3.3.0
+#derivativeOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Derivative;
+#derivativeOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Derivative;
+#derivativeOfValue(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Derivative;
+#unit(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Derivative;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$Month
@1.10.0.RELEASE
+#monthOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
+#monthOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#month(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#month(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#month(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh
@3.3.0
+#tanhOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh;
+#tanhOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh;
+#tanhOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh;
+#tanhOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh;
+#tanh(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh;
+#tanh(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/UnwindOperation$UnwindOperationBuilder
@1.10.0.RELEASE
+#newBuilder()Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$PathBuilder;
+#preserveNullAndEmptyArrays()Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation;
+#skipNullAndEmptyArrays()Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation;
+#arrayIndex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$EmptyArraysBuilder;
+#noArrayIndex()Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$EmptyArraysBuilder;
+#path(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$UnwindOperationBuilder;
+#path(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$IndexBuilder;

+###org/springframework/data/mongodb/core/aggregation/FacetOperation$FacetOperationBuilder
@1.10.0.RELEASE
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/FacetOperation;

+###org/springframework/data/mongodb/core/aggregation/StringOperators
@1.10.0.RELEASE
+#<init>()V
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StringOperatorFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$StringOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Trunc
@1.10.0.RELEASE
+#truncValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Trunc;
+#truncValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Trunc;
+#truncValueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Trunc;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$BucketAutoOperationOutputBuilder
@1.10.0.RELEASE

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$IndexOfArray$IndexOfArrayBuilder
@1.10.0.RELEASE
+#indexOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IndexOfArray;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation
@3.3.0
+#builder()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$SetWindowFieldsOperationBuilder;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/DataTypeOperators$Type
@1.10.0.RELEASE
+#typeOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DataTypeOperators$Type;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll
@3.3.0
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#options(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#optionsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#optionsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#pattern(Ljava/util/regex/Pattern;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#regex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#regexOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#regexOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexFindAll;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$IsArray
@1.10.0.RELEASE
+#isArray(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IsArray;
+#isArray(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$IsArray;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/AggregationOptions
@1.6.0.RELEASE
+#<init>(ZZLcom/mongodb/DBObject;)V
+#isAllowDiskUse()Z
+#isExplain()Z
+#getCursor()Lcom/mongodb/DBObject;
+#toDbObject()Lcom/mongodb/DBObject;
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
+#<init>(ZZLorg/bson/Document;)V
+#<init>(ZZLorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation;)V
+#<init>(ZZI)V
+#fromDocument(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions;
+#builder()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$Builder;
+#getCursorBatchSize()Ljava/lang/Integer;
+#getCursor()Ljava/util/Optional;
+#getCollation()Ljava/util/Optional;
+#toDocument()Lorg/bson/Document;
-#<init>(ZZLcom/mongodb/DBObject;)V
-#getCursor()Lcom/mongodb/DBObject;
-#toDbObject()Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#<init>(ZZLorg/bson/Document;Lorg/springframework/data/mongodb/core/query/Collation;Ljava/lang/String;)V
+#getComment()Ljava/util/Optional;
@3.0.0.RELEASE
+#getMaxTime()Ljava/time/Duration;
+#hasExecutionTimeLimit()Z
@3.0.2.RELEASE
+#isSkipResults()Z
@3.1.0
+#getHint()Ljava/util/Optional;
@3.2.0
+#getDomainTypeMapping()Lorg/springframework/data/mongodb/core/aggregation/AggregationOptions$DomainTypeMapping;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATanh
@3.3.0
+#atanhOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATanh;
+#atanhOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATanh;
+#atanhOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATanh;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ObjectOperators
@2.1.0.RELEASE
+#<init>()V
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$ObjectOperatorFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$ObjectOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayToObject
@2.1.0.RELEASE
+#arrayToObject(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayToObject;
+#arrayValueOfToObject(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayToObject;
+#arrayValueOfToObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayToObject;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/VariableOperators$Map$AsBuilder
@1.10.0.RELEASE
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Map$FunctionBuilder;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindow
@3.3.0
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#getUpper()Ljava/lang/Object;
+#getLower()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek
@1.10.0.RELEASE
+#isoDayOfWeek(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
+#isoDayOfWeek(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#isoDayWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#isoDayWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#isoDayWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable
@1.10.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$Variable;
+#referringTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/Field;

+###org/springframework/data/mongodb/core/aggregation/BooleanOperators$And
@1.10.0.RELEASE
+#and([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$And;
+#andExpression(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$And;
+#andField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$And;
+#andValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$And;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2
@3.3.0
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2;
+#atan2of(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2;
+#atan2of(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2;
+#atan2of(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond
@1.10.0.RELEASE
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#newBuilder()Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$WhenBuilder;
+#when(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
+#when(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
+#when(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
+#when(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#when(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#when(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;

+###org/springframework/data/mongodb/core/aggregation/OutOperation$OutMode
@2.2.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;
+#getMongoMode()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder$ValueAppender
@3.0.0.RELEASE
+#withValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder;
+#withValueOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder;
+#withValueOfExpression(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$WhenBuilder
@1.10.0.RELEASE
+#when(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
+#when(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
+#when(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
+#when(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
@2.0.0.RELEASE
+#when(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;
-#when(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$ThenBuilder;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch
@3.3.0
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#options(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#optionsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#optionsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#pattern(Ljava/util/regex/Pattern;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#regex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#regexOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#regexOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RegexMatch;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp
@3.3.0
+#covarianceSampOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp;
+#covarianceSampOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp;
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ProjectionOperation$ArrayProjectionOperationBuilder
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;)V
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ArrayProjectionOperationBuilder;
+#and(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ArrayProjectionOperationBuilder;
+#and(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation$ArrayProjectionOperationBuilder;
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ProjectionOperation;

+###org/springframework/data/mongodb/core/aggregation/AggregationUpdate$SetValueAppender
@3.0.0.RELEASE
+#toValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;
+#toValueOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AggregationUpdate;

+###org/springframework/data/mongodb/core/aggregation/LookupOperation$LookupOperationBuilder
@1.9.0.RELEASE
+#newBuilder()Lorg/springframework/data/mongodb/core/aggregation/LookupOperation$FromBuilder;
+#from(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation$LocalFieldBuilder;
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation;
+#foreignField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation$AsBuilder;
+#localField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation$ForeignFieldBuilder;
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/data/mongodb/core/aggregation/DateOperators$Second
@1.10.0.RELEASE
+#secondOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
+#secondOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#second(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#second(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#second(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/VariableOperators$Let$ExpressionVariable
@1.10.0.RELEASE
+#newVariable(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$ExpressionVariable;
+#forExpression(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$ExpressionVariable;
+#forExpression(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$ExpressionVariable;
@2.0.0.RELEASE
+#forExpression(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$ExpressionVariable;
-#forExpression(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/VariableOperators$Let$ExpressionVariable;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP$SubstringBuilder
@1.10.0.RELEASE
+#indexOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP;
+#indexOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP;
+#indexOf(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP;

+###org/springframework/data/mongodb/core/aggregation/DocumentOperators$DocumentOperatorsFactory
@3.3.0
+#<init>(Ljava/lang/Object;)V
+#shift(I)Lorg/springframework/data/mongodb/core/aggregation/DocumentOperators$Shift;

+###org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities
@1.10.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularities;
+#getMongoRepresentation()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ReplaceRootOperation$Replacement
@1.10.0.RELEASE
+#toDocumentExpression(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh
@3.3.0
+#sinhOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh;
+#sinhOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh;
+#sinhOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh;
+#sinhOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh;
+#sinh(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh;
+#sinh(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ArithmeticOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#abs()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Abs;
+#add(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#add(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#add(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Add;
+#ceil()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ceil;
+#divideBy(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#divideBy(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#divideBy(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Divide;
+#exp()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Exp;
+#floor()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Floor;
+#ln()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ln;
+#log(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#log(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#log(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log;
+#log10()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log10;
+#mod(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#mod(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#mod(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Mod;
+#multiplyBy(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#multiplyBy(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#multiplyBy(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Multiply;
+#pow(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#pow(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#pow(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Pow;
+#sqrt()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sqrt;
+#subtract(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#subtract(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#subtract(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Subtract;
+#trunc()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Trunc;
+#sum()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Sum;
+#avg()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Avg;
+#max()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max;
+#min()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min;
+#stdDevPop()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevPop;
+#stdDevSamp()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevSamp;
@3.0.0.RELEASE
+#round()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round;
+#roundToPlace(I)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Round;
@3.3.0
+#derivative()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Derivative;
+#derivative(Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Derivative;
+#derivative(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Derivative;
+#integral()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Integral;
+#integral(Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Integral;
+#integral(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Integral;
+#covariancePop(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop;
+#covariancePop(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop;
+#covarianceSamp(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp;
+#covarianceSamp(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp;
+#sin()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin;
+#sin(Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sin;
+#sinh()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh;
+#sinh(Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sinh;
+#asin()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASin;
+#asinh()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASinh;
+#cos()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos;
+#cos(Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cos;
+#cosh()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh;
+#cosh(Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Cosh;
+#tan()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan;
+#atan()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan;
+#atan2(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2;
+#atan2(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2;
+#atan2(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan2;
+#atanh()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATanh;
+#tan(Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tan;
+#tanh()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh;
+#tanh(Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$AngularUnit;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Tanh;
@3.4.0
+#acos()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACos;
+#acosh()Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACosh;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString
@1.10.11.RELEASE
+#fromString(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
+#fromStringOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
+#fromStringOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@1.10.15.RELEASE
+#withFormat(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString

+###org/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP$SubstringBuilder;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP$SubstringBuilder;
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$IndexOfCP;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull
@1.10.0.RELEASE
+#ifNull(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder;
+#ifNull(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$IfNull$ThenBuilder;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DocumentOperators$DenseRank
@3.3.0
+#<init>()V
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek
@1.10.0.RELEASE
+#dayOfWeek(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
+#dayOfWeek(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#dayOfWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#dayOfWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#dayOfWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/LookupOperation$ForeignFieldBuilder
@1.9.0.RELEASE
+#foreignField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/LookupOperation$AsBuilder;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$In$InBuilder
@1.10.0.RELEASE
+#containsValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$In;

+###org/springframework/data/mongodb/core/aggregation/OutOperation
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDBObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#in(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/OutOperation;
+#uniqueKey(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/OutOperation;
+#uniqueKeyOf(Ljava/lang/Iterable;)Lorg/springframework/data/mongodb/core/aggregation/OutOperation;
+#mode(Lorg/springframework/data/mongodb/core/aggregation/OutOperation$OutMode;)Lorg/springframework/data/mongodb/core/aggregation/OutOperation;
+#replaceCollection()Lorg/springframework/data/mongodb/core/aggregation/OutOperation;
+#replaceDocuments()Lorg/springframework/data/mongodb/core/aggregation/OutOperation;
+#insertDocuments()Lorg/springframework/data/mongodb/core/aggregation/OutOperation;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvgBuilder
@3.3.0
+#historicalDocuments(I)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvg;
+#alpha(D)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvg;

+###org/springframework/data/mongodb/core/aggregation/LiteralOperators$Literal
@1.10.0.RELEASE
+#asLiteral(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/LiteralOperators$Literal;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/SetOperators$SetEquals
@1.10.0.RELEASE
+#arrayAsSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetEquals;
+#arrayAsSet(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetEquals;
+#isEqualTo([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetEquals;
+#isEqualTo([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetEquals;
+#isEqualTo([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$SetEquals;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/SetOperators$AllElementsTrue
@1.10.0.RELEASE
+#arrayAsSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$AllElementsTrue;
+#arrayAsSet(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SetOperators$AllElementsTrue;
+#allElementsTrue()Lorg/springframework/data/mongodb/core/aggregation/SetOperators$AllElementsTrue;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorAccumulateBuilder
@3.1.0
+#accumulate(Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Function;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorMergeBuilder;
+#accumulate(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorAccumulateArgsBuilder;

+###org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$ExpressionBucketAutoOperationBuilder
@1.10.0.RELEASE

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevPop
@1.10.0.RELEASE
+#stdDevPopOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevPop;
+#stdDevPopOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevPop;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevPop;
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevPop;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts
@1.10.11.RELEASE
+#dateFromParts()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts$DateFromPartsWithYear;
+#month(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#monthOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#monthOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#day(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#dayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#dayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#hour(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#minute(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#second(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#milliseconds(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts;
+#milliseconds(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#second(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#minute(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#hour(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$DateFromParts

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators
@1.10.0.RELEASE
+#<init>()V
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$ComparisonOperatorFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$ComparisonOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/FieldsExposingAggregationOperation$InheritsFieldsAggregationOperation
@1.9.0.RELEASE
@2.0.7.RELEASE
+#inheritsFields()Z

+###org/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch
@3.0.0.RELEASE
+#whenMatchedOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;
+#replaceDocument()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;
+#keepExistingDocument()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;
+#mergeDocuments()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;
+#failOnMatch()Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;
+#updateWith(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;
+#updateWith(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/MergeOperation$WhenDocumentsMatch;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert
@1.10.15.RELEASE
+#convertValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#convertValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#convertValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#to(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#to(I)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#toTypeOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#toTypeOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#onErrorReturn(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#onErrorReturnValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#onErrorReturnValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#onNullReturn(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#onNullReturnValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#onNullReturnValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$Convert

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$ConcatArrays
@1.10.0.RELEASE
+#arrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ConcatArrays;
+#arrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ConcatArrays;
+#concat(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ConcatArrays;
+#concat(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ConcatArrays;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#arrayOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ConcatArrays;

+###org/springframework/data/mongodb/core/aggregation/SetOperation$FieldAppender$ValueAppender
@3.0.0.RELEASE
+#toValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/SetOperation;
+#toValueOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/SetOperation;
+#withValueOfExpression(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/SetOperation;

+###org/springframework/data/mongodb/core/aggregation/AddFieldsOperation
@3.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#builder()Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder;
+#addField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder$ValueAppender;
+#addField(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation;
+#and()Lorg/springframework/data/mongodb/core/aggregation/AddFieldsOperation$AddFieldsOperationBuilder;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/UnwindOperation$IndexBuilder
@1.10.0.RELEASE
+#arrayIndex(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$EmptyArraysBuilder;
+#noArrayIndex()Lorg/springframework/data/mongodb/core/aggregation/UnwindOperation$EmptyArraysBuilder;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToObjectId
@1.10.15.RELEASE
+#toObjectId(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToObjectId;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToObjectId

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch$CaseOperator
@1.10.0.RELEASE
+#when(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Switch$CaseOperator$ThenBuilder;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts$IsoDateFromPartsWithYear
@1.10.11.RELEASE
+#<init>()V
+#isoWeekYear(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoWeekYearOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
+#isoWeekYearOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$IsoDateFromParts$IsoDateFromPartsWithYear

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$ConditionBuilder
@1.10.0.RELEASE
+#by(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter;
+#by(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter;
+#by(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter;
@2.0.0.RELEASE
+#by(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter;
-#by(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#dayOfYear()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
+#dayOfMonth()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
+#dayOfWeek()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfWeek;
+#year()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
+#month()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Month;
+#week()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Week;
+#hour()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Hour;
+#minute()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
+#second()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Second;
+#millisecond()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Millisecond;
+#toString(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
+#isoDayOfWeek()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoDayOfWeek;
+#isoWeek()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
+#isoWeekYear()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeekYear;
@1.10.11.RELEASE
+#<init>(Ljava/lang/Object;)V
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
+#toParts()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts;
+#fromString()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
@1.10.15.RELEASE
+#toStringWithDefaultFormat()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
@2.0.0.RELEASE
-#<init>(Ljava/lang/Object;)V
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
-#toStringWithDefaultFormat()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
-#toParts()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts;
-#fromString()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
@2.0.6.RELEASE
+#<init>(Ljava/lang/Object;)V
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateOperatorFactory;
+#toParts()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToParts;
+#fromString()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateFromString;
@2.0.10.RELEASE
+#toStringWithDefaultFormat()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateToString;
@3.3.0
+#addValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#addValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#addValueOf(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#addValueOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#add(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#add(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateAdd;
+#diffValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#diffValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#diffValueOf(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#diffValueOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#diff(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
+#diff(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateDiff;
@4.0.0
+#subtractValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#subtractValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#subtractValueOf(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#subtractValueOf(Ljava/lang/String;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#subtract(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#subtract(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#truncate(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#truncate(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TemporalUnit;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#tsIncrement()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TsIncrement;
+#tsSecond()Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TsSecond;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ceil
@1.10.0.RELEASE
+#ceilValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ceil;
+#ceilValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ceil;
+#ceilValueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Ceil;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/BooleanOperators
@1.10.0.RELEASE
+#<init>()V
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$BooleanOperatorFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$BooleanOperatorFactory;
+#not(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Not;
+#not(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Not;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$Minute
@1.10.0.RELEASE
+#minuteOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
+#minuteOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#minute(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#minute(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#minute(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Minute;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip
@1.10.0.RELEASE
+#arrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip$ZipBuilder;
+#arrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip$ZipBuilder;
+#useLongestLength()Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip;
+#defaultTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip;
+#defaultTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip;
+#defaultTo([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.2.0.RELEASE
+#arrayOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Zip$ZipBuilder;

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$AccumulatorOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#sum()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Sum;
+#avg()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Avg;
+#max()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max;
+#min()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min;
+#stdDevPop()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevPop;
+#stdDevSamp()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevSamp;
@3.3.0
+#covariancePop(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop;
+#covariancePop(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovariancePop;
+#covarianceSamp(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp;
+#covarianceSamp(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$CovarianceSamp;
+#expMovingAvg()Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$ExpMovingAvgBuilder;
@4.0.0
+#max(I)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Max;
+#min(I)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$Min;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDouble
@1.10.15.RELEASE
+#toDouble(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDouble;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDouble

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateParts
@1.10.11.RELEASE
+#hour(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#hourOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#hourOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#minute(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#minuteOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#minuteOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#second(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#secondOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#secondOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#milliseconds(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#millisecondsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
+#millisecondsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateParts;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/DateOperators$DateParts

+###org/springframework/data/mongodb/core/aggregation/ConditionalOperators$ConditionalOperatorFactory
@1.10.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#<init>(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)V
+#then(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$OtherwiseBuilder;
+#thenValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$OtherwiseBuilder;
+#thenValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond$OtherwiseBuilder;

+###org/springframework/data/mongodb/core/aggregation/BucketAutoOperation$Granularity
@1.10.0.RELEASE
+#getMongoRepresentation()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory$Expr
@3.3.0
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory$Expr;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory$Expr;
+#toCriteriaDefinition(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
@4.0.0
-###org/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory$Expr

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators
@1.10.0.RELEASE
+#<init>()V
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$AccumulatorOperatorFactory;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$AccumulatorOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sqrt
@1.10.0.RELEASE
+#sqrtOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sqrt;
+#sqrtOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sqrt;
+#sqrtOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Sqrt;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/SampleOperation
@2.0.0.RELEASE
+#<init>(J)V
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$ReduceBuilder
@1.10.0.RELEASE
+#reduce(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce;
+#reduce([Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$PropertyExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder
@3.3.0
+#<init>()V
+#from(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#to(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#from(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#to(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#fromCurrent()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#fromUnbounded()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#toCurrent()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#toUnbounded()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#unit(Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$WindowUnit;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindowBuilder;
+#build()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$RangeWindow;

+###org/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory
@3.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)V
+#expr()Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory$Expr;
@4.0.0
+#expr()Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$Expr;
+#locf()Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$LastObservationCarriedForward;
-#expr()Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$EvaluationOperatorFactory$Expr;

+###org/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevSamp
@1.10.0.RELEASE
+#stdDevSampOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevSamp;
+#stdDevSampOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevSamp;
+#and(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevSamp;
+#and(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/AccumulatorOperators$StdDevSamp;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DocumentOperators$DocumentNumber
@3.3.0
+#<init>()V
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$SubstrCP
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$SubstrCP;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$SubstrCP;
+#substringCP(I)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$SubstrCP;
+#substringCP(II)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$SubstrCP;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth
@1.10.0.RELEASE
+#dayOfMonth(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
+#dayOfMonth(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#dayOfMonth(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#dayOfMonth(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#dayOfMonth(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfMonth;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log10
@1.10.0.RELEASE
+#log10ValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log10;
+#log10ValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log10;
+#log10ValueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Log10;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/GraphLookupOperation$ConnectToBuilder
@1.10.0.RELEASE
+#connectTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/GraphLookupOperation$GraphLookupOperationBuilder;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan
@3.3.0
+#atanOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan;
+#atanOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan;
+#atanOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ATan;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASin
@3.3.0
+#asinOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASin;
+#asinOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASin;
+#asinOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ASin;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/RelaxedTypeBasedAggregationOperationContext
@3.0.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/mongodb/core/convert/QueryMapper;)V

+###org/springframework/data/mongodb/core/aggregation/DateOperators$Year
@1.10.0.RELEASE
+#yearOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
+#yearOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#year(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#year(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#year(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Year;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$PropertyExpression$AsBuilder
@1.10.0.RELEASE
+#definedAs(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Reduce$PropertyExpression;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$InputBuilder
@1.10.0.RELEASE
+#filter(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$AsBuilder;
+#filter(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Filter$AsBuilder;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek
@1.10.0.RELEASE
+#isoWeekOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
+#isoWeekOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#isoWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#isoWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#isoWeek(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$IsoWeek;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/UnsetOperation
@3.0.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#unset([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnsetOperation;
+#and([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/UnsetOperation;
+#and([Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/UnsetOperation;
+#getFields()Lorg/springframework/data/mongodb/core/aggregation/ExposedFields;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
@3.0.2.RELEASE
+#getOperator()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Abs
@1.10.0.RELEASE
+#absoluteValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Abs;
+#absoluteValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Abs;
+#absoluteValueOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$Abs;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder
@1.10.0.RELEASE
+#count()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#sum()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#sum(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#last()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#first()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#avg()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#min()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#max()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#push()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#addToSet()Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#apply(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OutputBuilder;
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BucketOperationSupport;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$RTrim
@1.10.15.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#chars(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#charsOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#charsOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$RTrim;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/StringOperators$RTrim

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators
@1.10.0.RELEASE
+#<init>()V
+#arrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayOperatorFactory;
+#arrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayOperatorFactory;
@2.2.0.RELEASE
+#arrayOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$ArrayOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/DataTypeOperators
@1.10.0.RELEASE
+#<init>()V
+#typeOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DataTypeOperators$Type;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$Concat
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#stringValue(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#concatValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#concatValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#concat(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$Concat;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear
@1.10.0.RELEASE
+#dayOfYear(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
+#dayOfYear(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@1.10.11.RELEASE
+#dayOfYear(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#dayOfYear(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
-#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
@2.0.6.RELEASE
+#dayOfYear(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DayOfYear;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;
-#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder
@3.3.0
+#<init>()V
+#from(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;
+#fromCurrent()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;
+#fromUnbounded()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;
+#to(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;
+#from(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;
+#to(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;
+#toCurrent()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;
+#toUnbounded()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindowBuilder;
+#build()Lorg/springframework/data/mongodb/core/aggregation/SetWindowFieldsOperation$DocumentWindow;

+###org/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp
@1.10.0.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp;
+#compareTo(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp;
+#compareTo(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp;
+#compareToValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ComparisonOperators$Cmp;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorAccumulateArgsBuilder
@3.1.0
+#accumulateArgs([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorMergeBuilder;
+#accumulateArgs(Ljava/util/List;)Lorg/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator$AccumulatorMergeBuilder;

+###org/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference
@2.1.0.RELEASE
+#getRaw()Ljava/lang/String;
+#getReferenceValue()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/aggregation/CountOperation$CountOperationBuilder
@1.10.0.RELEASE
+#<init>()V
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/CountOperation;

+###org/springframework/data/mongodb/core/aggregation/ObjectOperators$ObjectOperatorFactory
@2.1.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#merge()Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#mergeWith([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#mergeWithValuesOf([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#mergeWithValuesOf([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$MergeObjects;
+#toArray()Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$ObjectToArray;
@4.0.0
+#getField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$GetField;
+#setField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField;
+#removeField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;

+###org/springframework/data/mongodb/core/aggregation/LiteralOperators
@1.10.0.RELEASE
+#<init>()V
+#valueOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/LiteralOperators$LiteralOperatorFactory;

+###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDecimal
@1.10.15.RELEASE
+#toDecimal(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDecimal;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ConvertOperators$ToDecimal

+###org/springframework/data/mongodb/core/aggregation/ScriptOperators$Accumulator
@3.1.0
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/BooleanOperators$Not
@1.10.0.RELEASE
+#not(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Not;
+#not(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/BooleanOperators$Not;
+#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
+#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
-#toDbObject(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;
-#toDbObject(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lcom/mongodb/DBObject;

+###org/springframework/data/mongodb/core/ExecutableInsertOperation
@2.0.0.RELEASE
+#insert(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableInsertOperation$ExecutableInsert;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithProjection
@2.1.0.RELEASE
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithQuery;

+###org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject
@2.1.0.RELEASE
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty
@2.1.0.RELEASE
+#minLength(I)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#maxLength(I)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#matching(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#possibleValues([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#allOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#anyOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#oneOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject
@2.1.0.RELEASE
+#newInstance()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#getTypes()Ljava/util/Set;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#toDocument()Lorg/bson/Document;

+###org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject
@2.1.0.RELEASE
+#of([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#getTypes()Ljava/util/Set;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#toDocument()Lorg/bson/Document;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;

+###org/springframework/data/mongodb/core/schema/MongoJsonSchema
@2.1.0.RELEASE
+#toDocument()Lorg/bson/Document;
+#of(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
+#of(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
+#builder()Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
@3.3.0
+#schemaDocument()Lorg/bson/Document;
@3.4.0
+#merge([Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
+#merge(Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction;[Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
+#mergeWith([Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
+#mergeWith(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
+#mergeWith(Ljava/util/Collection;Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)V
+#encrypted(Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty;
+#aead_aes_256_cbc_hmac_sha_512_random()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty;
+#aead_aes_256_cbc_hmac_sha_512_deterministic()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty;
+#algorithm(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty;
+#keyId(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty;
+#keys([Ljava/util/UUID;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty;
+#toDocument()Lorg/bson/Document;
+#getIdentifier()Ljava/lang/String;
+#getTypes()Ljava/util/Set;
@3.3.0
+#keys([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/JsonSchemaObject$Type
@2.1.0.RELEASE
+#objectIdType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#regexType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#doubleType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#binaryType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#dateType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#javascriptType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#intType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#longType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#bigDecimalType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#timestampType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#objectType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#arrayType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#numberType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#booleanType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#stringType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#nullType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#bsonTypeOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#jsonTypeOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#jsonTypes()Ljava/util/Set;
+#bsonTypes()Ljava/util/Set;
+#representation()Ljava/lang/String;
+#value()Ljava/lang/Object;
@2.2.0.RELEASE
+#of(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;
+#toBsonType()Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;)V
+#uniqueItems(Z)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#range(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#minItems(I)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#maxItems(I)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#items([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#items(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#additionalItems(Z)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#possibleValues([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#allOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#anyOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#oneOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NullJsonSchemaProperty
@2.1.0.RELEASE
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NullJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NullJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/JsonSchemaProperty
@2.1.0.RELEASE
+#getIdentifier()Ljava/lang/String;
+#untyped(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#string(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$StringJsonSchemaProperty;
+#object(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#number(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#int32(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#int64(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#float64(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#decimal128(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#array(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ArrayJsonSchemaProperty;
+#bool(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$BooleanJsonSchemaProperty;
+#nil(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NullJsonSchemaProperty;
+#date(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$DateJsonSchemaProperty;
+#timestamp(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$TimestampJsonSchemaProperty;
+#named(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty$JsonSchemaPropertyBuilder;
@2.2.0.RELEASE
+#isRequired()Z
+#encrypted(Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$EncryptedJsonSchemaProperty;
+#objectId(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;
+#required(Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;
@3.4.0
+#merged(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject
@2.1.0.RELEASE
+#<init>()V
+#propertiesCount(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#minProperties(I)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#maxProperties(I)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#required([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#additionalProperties(Z)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#additionalProperties(Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#properties([Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#patternProperties([Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#property(Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#toDocument()Lorg/bson/Document;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
@3.3.0
+#getProperties()Ljava/util/List;

+###org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject
@2.1.0.RELEASE
+#length(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#minLength(I)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#maxLength(I)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#matching(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#toDocument()Lorg/bson/Document;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;

+###org/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder
@2.1.0.RELEASE
+#minProperties(I)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#maxProperties(I)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#required([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#additionalProperties(Z)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#additionalProperties(Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#properties([Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#patternProperties([Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#property(Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#possibleValues(Ljava/util/Set;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#allOf(Ljava/util/Set;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#anyOf(Ljava/util/Set;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#oneOf(Ljava/util/Set;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$MongoJsonSchemaBuilder;
+#build()Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
@3.3.0
+#encryptionMetadata(Lorg/bson/Document;)V

+###org/springframework/data/mongodb/core/schema/JsonSchemaObject$Type$JsonType
@2.1.0.RELEASE
+#representation()Ljava/lang/String;
+#value()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#value()Ljava/lang/Object;
@2.2.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/core/schema/JsonSchemaObject
@2.1.0.RELEASE
+#getTypes()Ljava/util/Set;
+#toDocument()Lorg/bson/Document;
+#object()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;
+#string()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$StringJsonSchemaObject;
+#number()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#array()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#bool()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$BooleanJsonSchemaObject;
+#nil()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NullJsonSchemaObject;
+#date()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$DateJsonSchemaObject;
+#timestamp()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$TimestampJsonSchemaObject;
+#of(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#untyped()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#of(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty
@2.1.0.RELEASE
+#propertiesCount(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#minProperties(I)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#maxProperties(I)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#required([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#additionalProperties(Z)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#additionalProperties(Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#properties([Lorg/springframework/data/mongodb/core/schema/JsonSchemaProperty;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#possibleValues([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#allOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#anyOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#oneOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$ObjectJsonSchemaProperty;
@3.3.0
+#getProperties()Ljava/util/List;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$BooleanJsonSchemaProperty
@2.1.0.RELEASE
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$BooleanJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$BooleanJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty
@2.1.0.RELEASE
+#getIdentifier()Ljava/lang/String;
+#toDocument()Lorg/bson/Document;
+#getTypes()Ljava/util/Set;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty
@2.1.0.RELEASE
+#possibleValues([Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#allOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#anyOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#oneOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$UntypedJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$DateJsonSchemaProperty
@2.1.0.RELEASE
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$DateJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$DateJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/JsonSchemaProperty$JsonSchemaPropertyBuilder
@2.1.0.RELEASE
+#ofType(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty;
+#with(Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty;
+#withoutType()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty;
@2.2.0.RELEASE
+#ofType(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/JsonSchemaObject$Type$BsonType
@2.1.0.RELEASE
+#representation()Ljava/lang/String;
+#value()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#value()Ljava/lang/Object;
@2.2.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.1.0
-#<init>(Ljava/lang/String;)V

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$TimestampJsonSchemaProperty
@2.1.0.RELEASE
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$TimestampJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$TimestampJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$RequiredJsonSchemaProperty
@2.2.0.RELEASE
+#getIdentifier()Ljava/lang/String;
+#getTypes()Ljava/util/Set;
+#toDocument()Lorg/bson/Document;
+#isRequired()Z

+###org/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;)V
+#multipleOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#gt(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#gte(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#lt(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#lte(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#possibleValues([Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#allOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#anyOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#oneOf([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/IdentifiableJsonSchemaProperty$NumericJsonSchemaProperty;

+###org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject
@2.1.0.RELEASE
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#gt(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#gte(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#lt(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#toDocument()Lorg/bson/Document;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
@3.2.10
+#multipleOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#lte(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
@3.3.0
-#multipleOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
-#lte(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
@3.3.3
+#multipleOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;
+#lte(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$NumericJsonSchemaObject;

+###org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject
@2.1.0.RELEASE
+#uniqueItems(Z)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#range(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#minItems(I)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#maxItems(I)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#items(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#additionalItems(Z)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject;
+#toDocument()Lorg/bson/Document;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/TypedJsonSchemaObject;
+#notMatch(Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#oneOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#anyOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#allOf(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#possibleValues(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#generatedDescription()Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;
+#description(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject;

+###org/springframework/data/mongodb/core/CollectionOptions$TimeSeriesOptions
@3.3.0
+#timeSeries(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/CollectionOptions$TimeSeriesOptions;
+#metaField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/CollectionOptions$TimeSeriesOptions;
+#granularity(Lorg/springframework/data/mongodb/core/timeseries/GranularityDefinition;)Lorg/springframework/data/mongodb/core/CollectionOptions$TimeSeriesOptions;
+#getTimeField()Ljava/lang/String;
+#getMetaField()Ljava/lang/String;
+#getGranularity()Lorg/springframework/data/mongodb/core/timeseries/GranularityDefinition;
@3.4.6
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$UpdateWithQuery
@2.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$UpdateWithUpdate;
@3.0.0.RELEASE
+#matching(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$UpdateWithUpdate;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperationExtensionsKt
@2.1.0.RELEASE
+#mapReduce(Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithMapFunction;
+#asType(Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithQuery;
@2.2.0.RELEASE
+#mapReduce(Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithMapFunction;
+#asType(Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithProjection;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithQuery;
+#flow(Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$TerminatingMapReduce;)Lkotlinx/coroutines/flow/Flow;
@4.0.0
-#mapReduce(Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithMapFunction;
-#asType(Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithProjection;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithQuery;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingFindAndReplace
@2.1.0.RELEASE
+#findAndReplace()Lreactor/core/publisher/Mono;

+###org/springframework/data/mongodb/core/ReactiveRemoveOperationExtensionsKt
@2.0.0.RELEASE
+#remove(Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$ReactiveRemove;
@2.2.0.RELEASE
+#remove(Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation;)Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$ReactiveRemove;
+#allAndAwait(Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$TerminatingRemove;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#findAndRemoveAsFlow(Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$TerminatingRemove;)Lkotlinx/coroutines/flow/Flow;
@4.0.0
-#remove(Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveRemoveOperation$ReactiveRemove;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperationExtensionsKt
@2.0.0.RELEASE
+#update(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$ReactiveUpdate;
@2.2.0.RELEASE
+#update(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$ReactiveUpdate;
+#findModifyAndAwait(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingFindAndModify;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#findModifyAndAwaitOrNull(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingFindAndModify;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#findReplaceAndAwait(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingFindAndReplace;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#findReplaceAndAwaitOrNull(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingFindAndReplace;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#allAndAwait(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingUpdate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#firstAndAwait(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingUpdate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#upsertAndAwait(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingUpdate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#asType(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$FindAndReplaceWithProjection;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$FindAndReplaceWithOptions;
@4.0.0
-#update(Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/ReactiveUpdateOperation$ReactiveUpdate;

+###org/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithMapFunction
@2.1.0.RELEASE
+#map(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableMapReduceOperation$MapReduceWithReduceFunction;

+###org/springframework/data/mongodb/core/ExecutableAggregationOperation$AggregationWithCollection
@2.0.0.RELEASE
+#inCollection(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ExecutableAggregationOperation$AggregationWithAggregation;

+###org/springframework/data/mongodb/core/ExecutableInsertOperation$ExecutableInsert
@2.0.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ResumingChangeStream
@2.2.0.RELEASE
+#resumeAt(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$TerminatingChangeStream;
+#resumeAfter(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$TerminatingChangeStream;
+#startAfter(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$TerminatingChangeStream;

+###org/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithOptions
@2.2.0.RELEASE
+#withOptions(Ljava/util/function/Consumer;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ReactiveChangeStream;

+###org/springframework/data/mongodb/core/ScriptOperations
@1.7.0.RELEASE
+#register(Lorg/springframework/data/mongodb/core/script/ExecutableMongoScript;)Lorg/springframework/data/mongodb/core/script/NamedMongoScript;
+#register(Lorg/springframework/data/mongodb/core/script/NamedMongoScript;)Lorg/springframework/data/mongodb/core/script/NamedMongoScript;
+#execute(Lorg/springframework/data/mongodb/core/script/ExecutableMongoScript;[Ljava/lang/Object;)Ljava/lang/Object;
+#call(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#exists(Ljava/lang/String;)Z
+#getScriptNames()Ljava/util/Set;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithMapFunction
@2.1.0.RELEASE
+#map(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveMapReduceOperation$MapReduceWithReduceFunction;

+###org/springframework/data/mongodb/core/ReactiveChangeStreamOperation
@2.2.0.RELEASE
+#changeStream(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ReactiveChangeStream;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$FindAndReplaceWithOptions
@2.1.0.RELEASE
+#withOptions(Lorg/springframework/data/mongodb/core/FindAndReplaceOptions;)Lorg/springframework/data/mongodb/core/ExecutableUpdateOperation$FindAndReplaceWithProjection;

+###org/springframework/data/mongodb/core/MongoJsonSchemaCreator
@2.2.0.RELEASE
+#createSchemaFor(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
+#create(Lorg/springframework/data/mongodb/core/convert/MongoConverter;)Lorg/springframework/data/mongodb/core/MongoJsonSchemaCreator;
@3.3.0
+#filter(Ljava/util/function/Predicate;)Lorg/springframework/data/mongodb/core/MongoJsonSchemaCreator;
+#encryptedOnly()Ljava/util/function/Predicate;
+#create(Lorg/springframework/data/mapping/context/MappingContext;)Lorg/springframework/data/mongodb/core/MongoJsonSchemaCreator;
+#create()Lorg/springframework/data/mongodb/core/MongoJsonSchemaCreator;
@3.4.0
+#mergedSchemaFor([Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema;
+#property(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/MongoJsonSchemaCreator$PropertySpecifier;

+###org/springframework/data/mongodb/core/ExecutableFindOperation$TerminatingFind
@2.0.0.RELEASE
+#one()Ljava/util/Optional;
+#oneValue()Ljava/lang/Object;
+#first()Ljava/util/Optional;
+#firstValue()Ljava/lang/Object;
+#all()Ljava/util/List;
+#stream()Ljava/util/stream/Stream;
+#count()J
+#exists()Z

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation$TerminatingMapReduce
@2.1.0.RELEASE
+#all()Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/core/MongoOperationsExtensionsKt
@2.0.0.RELEASE
+#getCollectionName(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;)Ljava/lang/String;
+#createCollection(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/client/MongoCollection;
+#createCollection$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;Lorg/springframework/data/mongodb/core/CollectionOptions;ILjava/lang/Object;)Lcom/mongodb/client/MongoCollection;
+#collectionExists(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;)Z
+#dropCollection(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;)V
+#indexOps(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
+#bulkOps(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Lkotlin/reflect/KClass;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#bulkOps$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#exists(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Z
+#exists$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Z
+#count(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)J
+#count$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)J
+#insert(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/util/Collection;Lkotlin/reflect/KClass;)V
+#upsert(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#upsert$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
+#remove(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
+#remove$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/DeleteResult;
@2.2.0.RELEASE
+#getCollectionName(Lorg/springframework/data/mongodb/core/MongoOperations;)Ljava/lang/String;
+#execute(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/CollectionCallback;)Ljava/lang/Object;
+#stream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/util/CloseableIterator;
+#stream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
+#stream$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/data/util/CloseableIterator;
+#createCollection(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/client/MongoCollection;
+#createCollection$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/CollectionOptions;ILjava/lang/Object;)Lcom/mongodb/client/MongoCollection;
+#collectionExists(Lorg/springframework/data/mongodb/core/MongoOperations;)Z
+#dropCollection(Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#indexOps(Lorg/springframework/data/mongodb/core/MongoOperations;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
+#bulkOps(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#bulkOps$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/data/mongodb/core/BulkOperations;
+#findAll(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;)Ljava/util/List;
+#findAll$default(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/List;
+#group(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
+#group(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
+#aggregate(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregate(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregateStream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Lkotlin/reflect/KClass;)Lorg/springframework/data/util/CloseableIterator;
+#aggregateStream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
+#mapReduce(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce$default(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;ILjava/lang/Object;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#mapReduce$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/MapReduceOptions;ILjava/lang/Object;)Lorg/springframework/data/mongodb/core/mapreduce/MapReduceResults;
+#geoNear(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/String;)Lorg/springframework/data/geo/GeoResults;
+#geoNear$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/NearQuery;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/data/geo/GeoResults;
+#findOne(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Ljava/lang/Object;
+#findOne$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+#exists(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Z
+#exists$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Z
+#find(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Ljava/util/List;
+#find$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/List;
+#findById(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#findById$default(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+#findDistinct(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
+#findDistinct(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
+#findDistinct(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
+#findDistinct(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
+#findDistinct$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/List;
+#findAndModify(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;)Ljava/lang/Object;
+#findAndModify$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+#findAndRemove(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Ljava/lang/Object;
+#findAndRemove$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+#count(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)J
+#count$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)J
+#insert(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/util/Collection;)Ljava/util/Collection;
+#upsert(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#upsert$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
+#remove(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
+#remove$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/DeleteResult;
+#findAllAndRemove(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;)Ljava/util/List;
@3.2.0
+#aggregate(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
+#aggregateStream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/util/CloseableIterator;
@4.0.0
+#stream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;)Ljava/util/stream/Stream;
+#stream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Ljava/util/stream/Stream;
+#stream$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/stream/Stream;
+#aggregateStream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Ljava/util/stream/Stream;
+#aggregateStream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;)Ljava/util/stream/Stream;
+#findAndModify(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;)Ljava/lang/Object;
+#findAndModify$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+#upsert(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#upsert$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateFirst$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
+#updateMulti$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
-#getCollectionName(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;)Ljava/lang/String;
-#stream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;)Lorg/springframework/data/util/CloseableIterator;
-#stream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
-#stream$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/data/util/CloseableIterator;
-#createCollection(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;Lorg/springframework/data/mongodb/core/CollectionOptions;)Lcom/mongodb/client/MongoCollection;
-#createCollection$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;Lorg/springframework/data/mongodb/core/CollectionOptions;ILjava/lang/Object;)Lcom/mongodb/client/MongoCollection;
-#collectionExists(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;)Z
-#dropCollection(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;)V
-#indexOps(Lorg/springframework/data/mongodb/core/MongoOperations;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/index/IndexOperations;
-#bulkOps(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Lkotlin/reflect/KClass;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/BulkOperations;
-#bulkOps$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/BulkOperations$BulkMode;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/data/mongodb/core/BulkOperations;
-#group(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
-#group(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/lang/String;Lorg/springframework/data/mongodb/core/mapreduce/GroupBy;)Lorg/springframework/data/mongodb/core/mapreduce/GroupByResults;
-#aggregate(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Lkotlin/reflect/KClass;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;
-#aggregateStream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Lkotlin/reflect/KClass;)Lorg/springframework/data/util/CloseableIterator;
-#aggregateStream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/util/CloseableIterator;
-#aggregateStream(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
-#exists(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Z
-#exists$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Z
-#findDistinct(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
-#findDistinct(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
-#findDistinct(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/String;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
-#findAndModify(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;)Ljava/lang/Object;
-#findAndModify$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
-#count(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)J
-#count$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)J
-#insert(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/util/Collection;Lkotlin/reflect/KClass;)V
-#upsert(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#upsert$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
-#upsert(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#upsert$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateFirst$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;)Lcom/mongodb/client/result/UpdateResult;
-#updateMulti$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lorg/springframework/data/mongodb/core/query/Update;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/UpdateResult;
-#remove(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/mongodb/client/result/DeleteResult;
-#remove$default(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/core/query/Query;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/mongodb/client/result/DeleteResult;

+###org/springframework/data/mongodb/core/ReactiveFindOperation$FindDistinct
@2.1.0.RELEASE
+#distinct(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/ReactiveFindOperation$TerminatingDistinct;

+###org/springframework/data/mongodb/core/SessionCallback
@2.1.0.RELEASE
+#doInSession(Lorg/springframework/data/mongodb/core/MongoOperations;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/ReactiveUpdateOperation$TerminatingFindAndModify
@2.0.0.RELEASE
+#findAndModify()Lreactor/core/publisher/Mono;

+###org/springframework/data/mongodb/core/ReactiveMapReduceOperation$ReactiveMapReduce
@2.1.0.RELEASE

+###org/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithFilterAndProjection
@2.2.0.RELEASE
+#filter(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithFilterAndProjection;
+#filter(Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithFilterAndProjection;
+#as(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ReactiveChangeStreamOperation$ChangeStreamWithFilterAndProjection;

+###org/springframework/data/mongodb/core/ExecutableUpdateOperation$TerminatingFindAndReplace
@2.1.0.RELEASE
+#findAndReplace()Ljava/util/Optional;
+#findAndReplaceValue()Ljava/lang/Object;

+###org/springframework/data/mongodb/core/geo/GeoJsonPoint
@1.7.0.RELEASE
+#<init>(DD)V
+#<init>(Lorg/springframework/data/geo/Point;)V
+#getType()Ljava/lang/String;
+#getCoordinates()Ljava/util/List;
+#getCoordinates()Ljava/lang/Iterable;

+###org/springframework/data/mongodb/core/geo/GeoJsonMultiLineString
@1.7.0.RELEASE
+#<init>([Ljava/util/List;)V
+#<init>(Ljava/util/List;)V
+#getType()Ljava/lang/String;
+#getCoordinates()Ljava/lang/Iterable;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/mongodb/core/geo/GeoJsonGeometryCollection
@1.7.0.RELEASE
+#<init>(Ljava/util/List;)V
+#getType()Ljava/lang/String;
+#getCoordinates()Ljava/lang/Iterable;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/mongodb/core/geo/GeoJsonMultiPoint
@1.7.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;[Lorg/springframework/data/geo/Point;)V
+#getType()Ljava/lang/String;
+#getCoordinates()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getCoordinates()Ljava/lang/Iterable;
@3.2.5
+#<init>(Lorg/springframework/data/geo/Point;)V

+###org/springframework/data/mongodb/core/geo/GeoJsonMultiPolygon
@1.7.0.RELEASE
+#<init>(Ljava/util/List;)V
+#getType()Ljava/lang/String;
+#getCoordinates()Ljava/util/List;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getCoordinates()Ljava/lang/Iterable;

+###org/springframework/data/mongodb/core/geo/GeoJsonPolygon
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;[Lorg/springframework/data/geo/Point;)V
+#<init>(Ljava/util/List;)V
+#getType()Ljava/lang/String;
+#getCoordinates()Ljava/util/List;
+#getCoordinates()Ljava/lang/Iterable;
@1.10.0.RELEASE
+#withInnerRing(Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;[Lorg/springframework/data/geo/Point;)Lorg/springframework/data/mongodb/core/geo/GeoJsonPolygon;
+#withInnerRing(Ljava/util/List;)Lorg/springframework/data/mongodb/core/geo/GeoJsonPolygon;
+#withInnerRing(Lorg/springframework/data/mongodb/core/geo/GeoJsonLineString;)Lorg/springframework/data/mongodb/core/geo/GeoJsonPolygon;
@3.3.7
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.4.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@3.4.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/core/geo/GeoJsonModule
@1.7.0.RELEASE
+#<init>()V
@3.2.0
+#deserializers()Lcom/fasterxml/jackson/databind/Module;
+#serializers()Lcom/fasterxml/jackson/databind/Module;
+#geoJsonModule()Lcom/fasterxml/jackson/databind/Module;

+###org/springframework/data/mongodb/core/geo/GeoJsonLineString
@1.7.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Point;[Lorg/springframework/data/geo/Point;)V
+#getType()Ljava/lang/String;

+###org/springframework/data/mongodb/core/geo/GeoJson
@1.7.0.RELEASE
+#getType()Ljava/lang/String;
+#getCoordinates()Ljava/lang/Iterable;

+###org/springframework/data/mongodb/core/ExecutableRemoveOperation$TerminatingRemove
@2.0.0.RELEASE
+#all()Lcom/mongodb/client/result/DeleteResult;
+#findAndRemove()Ljava/util/List;
@2.1.0.RELEASE
+#one()Lcom/mongodb/client/result/DeleteResult;

+###org/springframework/data/mongodb/core/script/ExecutableMongoScript
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getCode()Ljava/lang/String;

+###org/springframework/data/mongodb/core/script/NamedMongoScript
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/script/ExecutableMongoScript;)V
+#getCode()Ljava/lang/String;
+#getScript()Lorg/springframework/data/mongodb/core/script/ExecutableMongoScript;
+#getName()Ljava/lang/String;

+###org/springframework/data/mongodb/core/ExecutableRemoveOperation
@2.0.0.RELEASE
+#remove(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/ExecutableRemoveOperation$ExecutableRemove;

+###org/springframework/data/mongodb/core/query/Term
@1.6.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Term$Type;)V
+#negate()Lorg/springframework/data/mongodb/core/query/Term;
+#isNegated()Z
+#getType()Lorg/springframework/data/mongodb/core/query/Term$Type;
+#getFormatted()Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.2.7.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/core/query/TypedCriteriaExtensionsKt
@2.2.0.RELEASE
+#isEqualTo(Lkotlin/reflect/KProperty;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#ne(Lkotlin/reflect/KProperty;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#lt(Lkotlin/reflect/KProperty;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#lte(Lkotlin/reflect/KProperty;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#gt(Lkotlin/reflect/KProperty;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#gte(Lkotlin/reflect/KProperty;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#inValues(Lkotlin/reflect/KProperty;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#inValues(Lkotlin/reflect/KProperty;Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#nin(Lkotlin/reflect/KProperty;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#nin(Lkotlin/reflect/KProperty;Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#mod(Lkotlin/reflect/KProperty;Ljava/lang/Number;Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#all(Lkotlin/reflect/KProperty;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#all(Lkotlin/reflect/KProperty;Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#size(Lkotlin/reflect/KProperty;I)Lorg/springframework/data/mongodb/core/query/Criteria;
+#exists(Lkotlin/reflect/KProperty;Z)Lorg/springframework/data/mongodb/core/query/Criteria;
+#type(Lkotlin/reflect/KProperty;I)Lorg/springframework/data/mongodb/core/query/Criteria;
+#type(Lkotlin/reflect/KProperty;Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#type(Lkotlin/reflect/KProperty;[Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#not(Lkotlin/reflect/KProperty;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#regex(Lkotlin/reflect/KProperty;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#regex(Lkotlin/reflect/KProperty;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#regex(Lkotlin/reflect/KProperty;Lkotlin/text/Regex;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#regex(Lkotlin/reflect/KProperty;Ljava/util/regex/Pattern;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#regex(Lkotlin/reflect/KProperty;Lorg/bson/BsonRegularExpression;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#withinSphere(Lkotlin/reflect/KProperty;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#within(Lkotlin/reflect/KProperty;Lorg/springframework/data/geo/Shape;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#near(Lkotlin/reflect/KProperty;Lorg/springframework/data/geo/Point;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#nearSphere(Lkotlin/reflect/KProperty;Lorg/springframework/data/geo/Point;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#intersects(Lkotlin/reflect/KProperty;Lorg/springframework/data/mongodb/core/geo/GeoJson;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#maxDistance(Lkotlin/reflect/KProperty;D)Lorg/springframework/data/mongodb/core/query/Criteria;
+#minDistance(Lkotlin/reflect/KProperty;D)Lorg/springframework/data/mongodb/core/query/Criteria;
+#elemMatch(Lkotlin/reflect/KProperty;Lorg/springframework/data/mongodb/core/query/Criteria;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#bits(Lkotlin/reflect/KProperty;Lkotlin/jvm/functions/Function1;)Lorg/springframework/data/mongodb/core/query/Criteria;
@3.2.5
+#maxDistance(Lorg/springframework/data/mongodb/core/query/Criteria;D)Lorg/springframework/data/mongodb/core/query/Criteria;
+#minDistance(Lorg/springframework/data/mongodb/core/query/Criteria;D)Lorg/springframework/data/mongodb/core/query/Criteria;

+###org/springframework/data/mongodb/core/query/TextQuery
@1.6.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Locale;)V
+#<init>(Lorg/springframework/data/mongodb/core/query/TextCriteria;)V
+#queryText(Lorg/springframework/data/mongodb/core/query/TextCriteria;)Lorg/springframework/data/mongodb/core/query/TextQuery;
+#sortByScore()Lorg/springframework/data/mongodb/core/query/TextQuery;
+#includeScore()Lorg/springframework/data/mongodb/core/query/TextQuery;
+#includeScore(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/TextQuery;
+#setScoreFieldName(Ljava/lang/String;)V
+#getScoreFieldName()Ljava/lang/String;
+#getFieldsObject()Lcom/mongodb/DBObject;
+#getSortObject()Lcom/mongodb/DBObject;
@2.0.0.RELEASE
+#getFieldsObject()Lorg/bson/Document;
+#getSortObject()Lorg/bson/Document;
-#getFieldsObject()Lcom/mongodb/DBObject;
-#getSortObject()Lcom/mongodb/DBObject;
@2.1.11.RELEASE
+#isSorted()Z

+###org/springframework/data/mongodb/core/query/Field$FieldProjectionExpression
@3.2.0
+#as(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Field;

+###org/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode
@2.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;

+###org/springframework/data/mongodb/core/query/Meta$CursorOption
@1.10.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;

+###org/springframework/data/mongodb/core/query/UpdateDefinition
@2.1.4.RELEASE
+#isIsolated()Ljava/lang/Boolean;
+#getUpdateObject()Lorg/bson/Document;
+#modifies(Ljava/lang/String;)Z
+#inc(Ljava/lang/String;)V
@2.2.0.RELEASE
+#getArrayFilters()Ljava/util/List;
+#hasArrayFilters()Z

+###org/springframework/data/mongodb/core/query/Collation$PrimaryICUComparisonLevel
@2.0.0.RELEASE
+#includeCase()Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;
+#excludeCase()Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;
+#getCaseLevel()Ljava/util/Optional;
+#getCaseFirst()Ljava/util/Optional;
+#getLevel()I

+###org/springframework/data/mongodb/core/query/Term$Type
@1.6.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/query/Term$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Term$Type;

+###org/springframework/data/mongodb/core/query/KPropertyPathExtensionsKt
@3.1.0
+#toPath(Lkotlin/reflect/KProperty;)Ljava/lang/String;
@4.0.0
-###org/springframework/data/mongodb/core/query/KPropertyPathExtensionsKt

+###org/springframework/data/mongodb/core/query/Collation$TertiaryICUComparisonLevel
@2.0.0.RELEASE
+#caseFirst(Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;
+#getCaseLevel()Ljava/util/Optional;
+#getCaseFirst()Ljava/util/Optional;
+#getLevel()I

+###org/springframework/data/mongodb/core/query/MongoRegexCreator
@1.9.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/query/MongoRegexCreator;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/MongoRegexCreator;
+#toRegularExpression(Ljava/lang/String;Lorg/springframework/data/repository/query/parser/Part$Type;)Ljava/lang/String;
@2.0.0.RELEASE
+#toRegularExpression(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/MongoRegexCreator$MatchMode;)Ljava/lang/String;
-#toRegularExpression(Ljava/lang/String;Lorg/springframework/data/repository/query/parser/Part$Type;)Ljava/lang/String;
@3.0.8.RELEASE
+#toCaseInsensitiveMatch(Ljava/lang/Object;)Ljava/lang/Object;
@3.1.0
-#toCaseInsensitiveMatch(Ljava/lang/Object;)Ljava/lang/Object;
@3.1.6
+#toCaseInsensitiveMatch(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/query/Collation$SecondaryICUComparisonLevel
@2.0.0.RELEASE
+#includeCase()Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;
+#excludeCase()Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;
+#getCaseLevel()Ljava/util/Optional;
+#getCaseFirst()Ljava/util/Optional;
+#getLevel()I

+###org/springframework/data/mongodb/core/query/Collation$CaseFirst
@2.0.0.RELEASE
+#upper()Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;
+#lower()Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;
+#off()Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;

+###org/springframework/data/mongodb/core/query/UntypedExampleMatcher
@2.0.0.RELEASE
+#matching()Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#matchingAny()Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#matchingAll()Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withIgnorePaths([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withStringMatcher(Lorg/springframework/data/domain/ExampleMatcher$StringMatcher;)Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withIgnoreCase()Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withIgnoreCase(Z)Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withMatcher(Ljava/lang/String;Lorg/springframework/data/domain/ExampleMatcher$MatcherConfigurer;)Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withMatcher(Ljava/lang/String;Lorg/springframework/data/domain/ExampleMatcher$GenericPropertyMatcher;)Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withTransformer(Ljava/lang/String;Lorg/springframework/data/domain/ExampleMatcher$PropertyValueTransformer;)Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withIgnoreCase([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withIncludeNullValues()Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withIgnoreNullValues()Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#withNullHandler(Lorg/springframework/data/domain/ExampleMatcher$NullHandler;)Lorg/springframework/data/mongodb/core/query/UntypedExampleMatcher;
+#getNullHandler()Lorg/springframework/data/domain/ExampleMatcher$NullHandler;
+#getDefaultStringMatcher()Lorg/springframework/data/domain/ExampleMatcher$StringMatcher;
+#isIgnoreCaseEnabled()Z
+#isIgnoredPath(Ljava/lang/String;)Z
+#getIgnoredPaths()Ljava/util/Set;
+#getPropertySpecifiers()Lorg/springframework/data/domain/ExampleMatcher$PropertySpecifiers;
+#isAllMatching()Z
+#isAnyMatching()Z
+#getMatchMode()Lorg/springframework/data/domain/ExampleMatcher$MatchMode;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#withNullHandler(Lorg/springframework/data/domain/ExampleMatcher$NullHandler;)Lorg/springframework/data/domain/ExampleMatcher;
+#withIgnoreNullValues()Lorg/springframework/data/domain/ExampleMatcher;
+#withIncludeNullValues()Lorg/springframework/data/domain/ExampleMatcher;
+#withIgnoreCase([Ljava/lang/String;)Lorg/springframework/data/domain/ExampleMatcher;
+#withTransformer(Ljava/lang/String;Lorg/springframework/data/domain/ExampleMatcher$PropertyValueTransformer;)Lorg/springframework/data/domain/ExampleMatcher;
+#withMatcher(Ljava/lang/String;Lorg/springframework/data/domain/ExampleMatcher$GenericPropertyMatcher;)Lorg/springframework/data/domain/ExampleMatcher;
+#withMatcher(Ljava/lang/String;Lorg/springframework/data/domain/ExampleMatcher$MatcherConfigurer;)Lorg/springframework/data/domain/ExampleMatcher;
+#withIgnoreCase(Z)Lorg/springframework/data/domain/ExampleMatcher;
+#withIgnoreCase()Lorg/springframework/data/domain/ExampleMatcher;
+#withStringMatcher(Lorg/springframework/data/domain/ExampleMatcher$StringMatcher;)Lorg/springframework/data/domain/ExampleMatcher;
+#withIgnorePaths([Ljava/lang/String;)Lorg/springframework/data/domain/ExampleMatcher;

+###org/springframework/data/mongodb/core/query/CriteriaExtensionsKt
@2.0.0.RELEASE
+#isEqualTo(Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#inValues(Lorg/springframework/data/mongodb/core/query/Criteria;Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#inValues(Lorg/springframework/data/mongodb/core/query/Criteria;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/query/Criteria;
@2.2.0.RELEASE
+#where(Lkotlin/reflect/KProperty;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#and(Lorg/springframework/data/mongodb/core/query/Criteria;Lkotlin/reflect/KProperty;)Lorg/springframework/data/mongodb/core/query/Criteria;

+###org/springframework/data/mongodb/core/query/Collation$Alternate
@2.0.0.RELEASE
+#nonIgnorable()Lorg/springframework/data/mongodb/core/query/Collation$Alternate;
+#shifted()Lorg/springframework/data/mongodb/core/query/Collation$AlternateWithMaxVariable;

+###org/springframework/data/mongodb/core/query/MetricConversion
@2.2.1.RELEASE
+#<init>()V
+#getMetersToMetricMultiplier(Lorg/springframework/data/geo/Metric;)D
+#getDistanceInMeters(Lorg/springframework/data/geo/Distance;)D
@3.4.4
+#toRadians(Lorg/springframework/data/geo/Distance;)D
+#metersToRadians(D)D

+###org/springframework/data/mongodb/core/query/Update$BitwiseOperatorBuilder
@1.7.0.RELEASE
+#and(J)Lorg/springframework/data/mongodb/core/query/Update;
+#or(J)Lorg/springframework/data/mongodb/core/query/Update;
+#xor(J)Lorg/springframework/data/mongodb/core/query/Update;

+###org/springframework/data/mongodb/core/query/Collation$AlternateWithMaxVariable
@2.0.0.RELEASE
+#punct()Lorg/springframework/data/mongodb/core/query/Collation$Alternate;
+#space()Lorg/springframework/data/mongodb/core/query/Collation$Alternate;

+###org/springframework/data/mongodb/core/query/KPropertyPath
@2.2.0.RELEASE
+#getParent$spring_data_mongodb()Lkotlin/reflect/KProperty;
+#getChild$spring_data_mongodb()Lkotlin/reflect/KProperty1;
+#<init>(Lkotlin/reflect/KProperty;Lkotlin/reflect/KProperty1;)V
+#getAnnotations()Ljava/util/List;
+#getGetter()Lkotlin/reflect/KProperty$Getter;
+#isAbstract()Z
+#isConst()Z
+#isFinal()Z
+#isLateinit()Z
+#isOpen()Z
+#isSuspend()Z
+#getName()Ljava/lang/String;
+#getParameters()Ljava/util/List;
+#getReturnType()Lkotlin/reflect/KType;
+#getTypeParameters()Ljava/util/List;
+#getVisibility()Lkotlin/reflect/KVisibility;
+#call([Ljava/lang/Object;)Ljava/lang/Object;
+#callBy(Ljava/util/Map;)Ljava/lang/Object;
@4.0.0
-###org/springframework/data/mongodb/core/query/KPropertyPath

+###org/springframework/data/mongodb/core/query/Collation$CollationLocale
@2.0.0.RELEASE
+#of(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Collation$CollationLocale;
+#variant(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Collation$CollationLocale;
+#asString()Ljava/lang/String;

+###org/springframework/data/mongodb/core/query/Meta
@1.6.0.RELEASE
+#<init>()V
+#getMaxTimeMsec()Ljava/lang/Long;
+#setMaxTimeMsec(J)V
+#setMaxTime(JLjava/util/concurrent/TimeUnit;)V
+#getMaxScan()Ljava/lang/Long;
+#setMaxScan(J)V
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setSnapshot(Z)V
+#getSnapshot()Z
+#hasValues()Z
+#values()Ljava/lang/Iterable;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.10.0.RELEASE
+#addFlag(Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;)Z
+#getFlags()Ljava/util/Set;
@2.1.0.RELEASE
*#setMaxTime(JLjava/util/concurrent/TimeUnit;)V[deprecated]
+#setMaxTime(Ljava/time/Duration;)V
*#setMaxScan(J)V[deprecated]
*#setSnapshot(Z)V[deprecated]
+#getCursorBatchSize()Ljava/lang/Integer;
+#setCursorBatchSize(I)V
@2.2.0.RELEASE
*#getMaxScan()Ljava/lang/Long;[deprecated]
@3.0.0.RELEASE
+#getAllowDiskUse()Ljava/lang/Boolean;
+#setAllowDiskUse(Ljava/lang/Boolean;)V
-#getMaxScan()Ljava/lang/Long;[deprecated]
-#setMaxScan(J)V[deprecated]
-#setSnapshot(Z)V[deprecated]
-#getSnapshot()Z
@4.0.0
-#setMaxTime(JLjava/util/concurrent/TimeUnit;)V[deprecated]

+###org/springframework/data/mongodb/core/query/KPropertyPathKt
@2.2.0.RELEASE
+#asString(Lkotlin/reflect/KProperty;)Ljava/lang/String;
+#div(Lkotlin/reflect/KProperty;Lkotlin/reflect/KProperty1;)Lorg/springframework/data/mongodb/core/query/KPropertyPath;
@4.0.0
-###org/springframework/data/mongodb/core/query/KPropertyPathKt

+###org/springframework/data/mongodb/core/query/UpdateDefinition$ArrayFilter
@2.2.0.RELEASE
+#asDocument()Lorg/bson/Document;

+###org/springframework/data/mongodb/core/query/Criteria$BitwiseCriteriaOperators
@2.1.0.RELEASE
+#allClear(I)Lorg/springframework/data/mongodb/core/query/Criteria;
+#allClear(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#allClear(Ljava/util/List;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#allSet(I)Lorg/springframework/data/mongodb/core/query/Criteria;
+#allSet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#allSet(Ljava/util/List;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#anyClear(I)Lorg/springframework/data/mongodb/core/query/Criteria;
+#anyClear(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#anyClear(Ljava/util/List;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#anySet(I)Lorg/springframework/data/mongodb/core/query/Criteria;
+#anySet(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Criteria;
+#anySet(Ljava/util/List;)Lorg/springframework/data/mongodb/core/query/Criteria;

+###org/springframework/data/mongodb/core/query/Collation
@2.0.0.RELEASE
+#simple()Lorg/springframework/data/mongodb/core/query/Collation;
+#of(Ljava/util/Locale;)Lorg/springframework/data/mongodb/core/query/Collation;
+#of(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Collation;
+#of(Lorg/springframework/data/mongodb/core/query/Collation$CollationLocale;)Lorg/springframework/data/mongodb/core/query/Collation;
+#from(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/query/Collation;
+#strength(I)Lorg/springframework/data/mongodb/core/query/Collation;
+#strength(Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;)Lorg/springframework/data/mongodb/core/query/Collation;
+#caseLevel(Z)Lorg/springframework/data/mongodb/core/query/Collation;
+#caseFirst(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Collation;
+#caseFirst(Lorg/springframework/data/mongodb/core/query/Collation$CaseFirst;)Lorg/springframework/data/mongodb/core/query/Collation;
+#numericOrderingEnabled()Lorg/springframework/data/mongodb/core/query/Collation;
+#numericOrderingDisabled()Lorg/springframework/data/mongodb/core/query/Collation;
+#numericOrdering(Z)Lorg/springframework/data/mongodb/core/query/Collation;
+#alternate(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Collation;
+#alternate(Lorg/springframework/data/mongodb/core/query/Collation$Alternate;)Lorg/springframework/data/mongodb/core/query/Collation;
+#backwardDiacriticSort()Lorg/springframework/data/mongodb/core/query/Collation;
+#forwardDiacriticSort()Lorg/springframework/data/mongodb/core/query/Collation;
+#backwards(Z)Lorg/springframework/data/mongodb/core/query/Collation;
+#normalizationEnabled()Lorg/springframework/data/mongodb/core/query/Collation;
+#normalizationDisabled()Lorg/springframework/data/mongodb/core/query/Collation;
+#normalization(Z)Lorg/springframework/data/mongodb/core/query/Collation;
+#maxVariable(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Collation;
+#toDocument()Lorg/bson/Document;
+#toMongoCollation()Lcom/mongodb/client/model/Collation;
+#map(Lorg/springframework/core/convert/converter/Converter;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@2.2.0.RELEASE
+#parse(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/Collation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/core/query/TextCriteria
@1.6.0.RELEASE
+#<init>()V
+#forDefaultLanguage()Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#forLanguage(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#matchingAny([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#matching(Lorg/springframework/data/mongodb/core/query/Term;)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#matching(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#notMatching(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#notMatchingAny([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#notMatchingPhrase(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#matchingPhrase(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#getKey()Ljava/lang/String;
+#getCriteriaObject()Lcom/mongodb/DBObject;
@1.10.0.RELEASE
+#caseSensitive(Z)Lorg/springframework/data/mongodb/core/query/TextCriteria;
+#diacriticSensitive(Z)Lorg/springframework/data/mongodb/core/query/TextCriteria;
@2.0.0.RELEASE
+#getCriteriaObject()Lorg/bson/Document;
-#getCriteriaObject()Lcom/mongodb/DBObject;
@2.2.7.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/core/query/Collation$ComparisonLevel
@2.0.0.RELEASE
+#primary()Lorg/springframework/data/mongodb/core/query/Collation$PrimaryICUComparisonLevel;
+#secondary()Lorg/springframework/data/mongodb/core/query/Collation$SecondaryICUComparisonLevel;
+#tertiary()Lorg/springframework/data/mongodb/core/query/Collation$TertiaryICUComparisonLevel;
+#quaternary()Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;
+#identical()Lorg/springframework/data/mongodb/core/query/Collation$ComparisonLevel;
+#getLevel()I
+#getCaseFirst()Ljava/util/Optional;
+#getCaseLevel()Ljava/util/Optional;

+###org/springframework/data/mongodb/BindableMongoExpression
@3.2.0
+#<init>(Ljava/lang/String;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/CodecRegistryProvider;[Ljava/lang/Object;)V
+#withCodecRegistry(Lorg/bson/codecs/configuration/CodecRegistry;)Lorg/springframework/data/mongodb/BindableMongoExpression;
+#bind([Ljava/lang/Object;)Lorg/springframework/data/mongodb/BindableMongoExpression;
+#toDocument()Lorg/bson/Document;
+#toString()Ljava/lang/String;

+###org/springframework/data/mongodb/MongoDatabaseFactory
@3.0.0.RELEASE
+#getMongoDatabase()Lcom/mongodb/client/MongoDatabase;
+#getMongoDatabase(Ljava/lang/String;)Lcom/mongodb/client/MongoDatabase;
+#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;
+#getSession(Lcom/mongodb/ClientSessionOptions;)Lcom/mongodb/client/ClientSession;
+#withSession(Lcom/mongodb/ClientSessionOptions;)Lorg/springframework/data/mongodb/MongoDatabaseFactory;
+#withSession(Lcom/mongodb/client/ClientSession;)Lorg/springframework/data/mongodb/MongoDatabaseFactory;
+#isTransactionActive()Z

+###org/springframework/data/mongodb/SpringDataMongoDB
@3.0.0.RELEASE
+#<init>()V
+#driverInformation()Lcom/mongodb/MongoDriverInformation;
+#version()Lorg/springframework/data/util/Version;

+###org/springframework/data/mongodb/ReactiveMongoDatabaseFactory
@2.0.0.RELEASE
+#getMongoDatabase()Lcom/mongodb/reactivestreams/client/MongoDatabase;
+#getMongoDatabase(Ljava/lang/String;)Lcom/mongodb/reactivestreams/client/MongoDatabase;
+#getExceptionTranslator()Lorg/springframework/dao/support/PersistenceExceptionTranslator;
@2.1.0.RELEASE
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;
+#getSession(Lcom/mongodb/ClientSessionOptions;)Lreactor/core/publisher/Mono;
+#withSession(Lcom/mongodb/reactivestreams/client/ClientSession;)Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
@2.2.0.RELEASE
+#isTransactionActive()Z
@3.0.0.RELEASE
+#getMongoDatabase()Lreactor/core/publisher/Mono;
+#getMongoDatabase(Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#getMongoDatabase()Lcom/mongodb/reactivestreams/client/MongoDatabase;
-#getMongoDatabase(Ljava/lang/String;)Lcom/mongodb/reactivestreams/client/MongoDatabase;

+###org/springframework/data/mongodb/ClientSessionException
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/mongodb/MongoTransactionManager$MongoTransactionObject
@2.1.0.RELEASE
+#commitTransaction()V
+#abortTransaction()V
+#getSession()Lcom/mongodb/client/ClientSession;
+#isRollbackOnly()Z
+#flush()V

+###org/springframework/data/mongodb/repository/config/EnableReactiveMongoRepositories
@2.0.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;
+#includeFilters()[Lorg/springframework/context/annotation/ComponentScan$Filter;
+#excludeFilters()[Lorg/springframework/context/annotation/ComponentScan$Filter;
+#repositoryImplementationPostfix()Ljava/lang/String;
+#namedQueriesLocation()Ljava/lang/String;
+#queryLookupStrategy()Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
+#repositoryFactoryBeanClass()Ljava/lang/Class;
+#repositoryBaseClass()Ljava/lang/Class;
+#reactiveMongoTemplateRef()Ljava/lang/String;
+#createIndexesForQueryMethods()Z
+#considerNestedRepositories()Z

+###org/springframework/data/mongodb/repository/config/ReactiveMongoRepositoryConfigurationExtension
@2.0.0.RELEASE
+#<init>()V
+#getModuleName()Ljava/lang/String;
+#getRepositoryFactoryClassName()Ljava/lang/String;
+#postProcess(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/data/repository/config/XmlRepositoryConfigurationSource;)V
+#postProcess(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/data/repository/config/AnnotationRepositoryConfigurationSource;)V

+###org/springframework/data/mongodb/repository/Aggregation
@2.2.0.RELEASE
+#value()[Ljava/lang/String;
+#pipeline()[Ljava/lang/String;
+#collation()Ljava/lang/String;

+###org/springframework/data/mongodb/repository/support/ReactiveQuerydslMongoPredicateExecutor
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)V
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/querydsl/EntityPathResolver;)V
+#findOne(Lcom/querydsl/core/types/Predicate;)Lreactor/core/publisher/Mono;
+#findAll(Lcom/querydsl/core/types/Predicate;)Lreactor/core/publisher/Flux;
+#findAll(Lcom/querydsl/core/types/Predicate;[Lcom/querydsl/core/types/OrderSpecifier;)Lreactor/core/publisher/Flux;
+#findAll(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Sort;)Lreactor/core/publisher/Flux;
+#findAll([Lcom/querydsl/core/types/OrderSpecifier;)Lreactor/core/publisher/Flux;
+#count(Lcom/querydsl/core/types/Predicate;)Lreactor/core/publisher/Mono;
+#exists(Lcom/querydsl/core/types/Predicate;)Lreactor/core/publisher/Mono;
@3.3.0
+#findBy(Lcom/querydsl/core/types/Predicate;Ljava/util/function/Function;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery
@1.9.5.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/Class;)V
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Ljava/lang/Class;Ljava/lang/String;)V
@2.1.0.RELEASE
+#anyEmbedded(Lcom/querydsl/core/types/Path;Lcom/querydsl/core/types/Path;)Lorg/springframework/data/mongodb/repository/support/QuerydslAnyEmbeddedBuilder;
+#join(Lcom/querydsl/core/types/dsl/CollectionPathBase;Lcom/querydsl/core/types/Path;)Lorg/springframework/data/mongodb/repository/support/QuerydslJoinBuilder;
+#join(Lcom/querydsl/core/types/Path;Lcom/querydsl/core/types/Path;)Lorg/springframework/data/mongodb/repository/support/QuerydslJoinBuilder;
+#fetchCount()J
+#fetchResults()Lcom/querydsl/core/QueryResults;
+#fetchOne()Ljava/lang/Object;
+#fetchFirst()Ljava/lang/Object;
+#fetch()Ljava/util/List;
+#iterate()Lcom/mysema/commons/lang/CloseableIterator;
@3.3.0
+#stream()Ljava/util/stream/Stream;
+#fetchPage(Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
+#toJson(Lorg/bson/json/JsonWriterSettings;)Ljava/lang/String;
+#toJson()Ljava/lang/String;
+#asDocument()Lorg/bson/Document;
+#toString()Ljava/lang/String;
-#anyEmbedded(Lcom/querydsl/core/types/Path;Lcom/querydsl/core/types/Path;)Lorg/springframework/data/mongodb/repository/support/QuerydslAnyEmbeddedBuilder;
-#join(Lcom/querydsl/core/types/dsl/CollectionPathBase;Lcom/querydsl/core/types/Path;)Lorg/springframework/data/mongodb/repository/support/QuerydslJoinBuilder;
-#join(Lcom/querydsl/core/types/Path;Lcom/querydsl/core/types/Path;)Lorg/springframework/data/mongodb/repository/support/QuerydslJoinBuilder;

+###org/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery
@2.1.0.RELEASE
+#distinct()Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
+#where([Lcom/querydsl/core/types/Predicate;)Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
+#limit(J)Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
+#offset(J)Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
+#restrict(Lcom/querydsl/core/QueryModifiers;)Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
+#orderBy([Lcom/querydsl/core/types/OrderSpecifier;)Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
+#set(Lcom/querydsl/core/types/ParamExpression;Ljava/lang/Object;)Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
+#toString()Ljava/lang/String;
+#distinct()Lcom/querydsl/core/SimpleQuery;
+#set(Lcom/querydsl/core/types/ParamExpression;Ljava/lang/Object;)Lcom/querydsl/core/SimpleQuery;
+#orderBy([Lcom/querydsl/core/types/OrderSpecifier;)Lcom/querydsl/core/SimpleQuery;
+#restrict(Lcom/querydsl/core/QueryModifiers;)Lcom/querydsl/core/SimpleQuery;
+#offset(J)Lcom/querydsl/core/SimpleQuery;
+#limit(J)Lcom/querydsl/core/SimpleQuery;
+#where([Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/core/FilteredClause;
@2.2.0.RELEASE
+#toJson()Ljava/lang/String;
+#toJson(Lorg/bson/json/JsonWriterSettings;)Ljava/lang/String;
@3.3.0
+#set(Lcom/querydsl/core/types/ParamExpression;Ljava/lang/Object;)Lcom/querydsl/mongodb/document/AbstractMongodbQuery;
+#orderBy([Lcom/querydsl/core/types/OrderSpecifier;)Lcom/querydsl/mongodb/document/AbstractMongodbQuery;
+#restrict(Lcom/querydsl/core/QueryModifiers;)Lcom/querydsl/mongodb/document/AbstractMongodbQuery;
+#offset(J)Lcom/querydsl/mongodb/document/AbstractMongodbQuery;
+#limit(J)Lcom/querydsl/mongodb/document/AbstractMongodbQuery;
+#where([Lcom/querydsl/core/types/Predicate;)Lcom/querydsl/mongodb/document/AbstractMongodbQuery;
+#distinct()Lcom/querydsl/mongodb/document/AbstractMongodbQuery;
@4.0.0
-###org/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery

+###org/springframework/data/mongodb/repository/support/QuerydslMongoPredicateExecutor
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/querydsl/EntityPathResolver;)V
+#findOne(Lcom/querydsl/core/types/Predicate;)Ljava/util/Optional;
+#findAll(Lcom/querydsl/core/types/Predicate;)Ljava/util/List;
+#findAll(Lcom/querydsl/core/types/Predicate;[Lcom/querydsl/core/types/OrderSpecifier;)Ljava/util/List;
+#findAll(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Sort;)Ljava/util/List;
+#findAll([Lcom/querydsl/core/types/OrderSpecifier;)Ljava/lang/Iterable;
+#findAll(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
+#count(Lcom/querydsl/core/types/Predicate;)J
+#exists(Lcom/querydsl/core/types/Predicate;)Z
+#findAll(Lcom/querydsl/core/types/Predicate;[Lcom/querydsl/core/types/OrderSpecifier;)Ljava/lang/Iterable;
+#findAll(Lcom/querydsl/core/types/Predicate;Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
+#findAll(Lcom/querydsl/core/types/Predicate;)Ljava/lang/Iterable;
@3.3.0
+#findBy(Lcom/querydsl/core/types/Predicate;Ljava/util/function/Function;)Ljava/lang/Object;

+###org/springframework/data/mongodb/repository/support/ReactiveMongoRepositoryFactory
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)V
+#getEntityInformation(Ljava/lang/Class;)Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;
+#getEntityInformation(Ljava/lang/Class;)Lorg/springframework/data/repository/core/EntityInformation;

+###org/springframework/data/mongodb/repository/support/QuerydslMongoRepository
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/MongoOperations;)V
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/querydsl/EntityPathResolver;)V
@4.0.0
-###org/springframework/data/mongodb/repository/support/QuerydslMongoRepository

+###org/springframework/data/mongodb/repository/support/ReactiveMongoRepositoryFactoryBean
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#setReactiveMongoOperations(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)V
+#setCreateIndexesForQueryMethods(Z)V
+#afterPropertiesSet()V
@3.2.5
+#setMappingContext(Lorg/springframework/data/mapping/context/MappingContext;)V

+###org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository
@2.0.0.RELEASE
+#findById(Ljava/io/Serializable;)Lreactor/core/publisher/Mono;
+#findById(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#findOne(Lorg/springframework/data/domain/Example;)Lreactor/core/publisher/Mono;
+#existsById(Ljava/io/Serializable;)Lreactor/core/publisher/Mono;
+#existsById(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#exists(Lorg/springframework/data/domain/Example;)Lreactor/core/publisher/Mono;
+#findAll()Lreactor/core/publisher/Flux;
+#findAllById(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#findAllById(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#findAll(Lorg/springframework/data/domain/Sort;)Lreactor/core/publisher/Flux;
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Sort;)Lreactor/core/publisher/Flux;
+#findAll(Lorg/springframework/data/domain/Example;)Lreactor/core/publisher/Flux;
+#count()Lreactor/core/publisher/Mono;
+#count(Lorg/springframework/data/domain/Example;)Lreactor/core/publisher/Mono;
+#insert(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#insert(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#insert(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#save(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#saveAll(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#saveAll(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#deleteById(Ljava/io/Serializable;)Lreactor/core/publisher/Mono;
+#deleteById(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#delete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#deleteAll(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#deleteAll(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#deleteAll()Lreactor/core/publisher/Mono;
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)V
+#deleteById(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#existsById(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#findById(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@3.2.0
+#deleteAllById(Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
@3.3.0
+#findBy(Lorg/springframework/data/domain/Example;Ljava/util/function/Function;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/repository/support/QuerydslAnyEmbeddedBuilder
@2.1.0.RELEASE
+#on([Lcom/querydsl/core/types/Predicate;)Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
@4.0.0
-###org/springframework/data/mongodb/repository/support/QuerydslAnyEmbeddedBuilder

+###org/springframework/data/mongodb/repository/Tailable
@2.0.0.RELEASE

+###org/springframework/data/mongodb/repository/CountQuery
@1.10.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/data/mongodb/repository/ExistsQuery
@1.10.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/data/mongodb/repository/DeleteQuery
@1.10.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/data/mongodb/repository/ReactiveMongoRepository
@2.0.0.RELEASE
+#insert(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#insert(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
+#insert(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#findAll(Lorg/springframework/data/domain/Example;)Lreactor/core/publisher/Flux;
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Sort;)Lreactor/core/publisher/Flux;

+###org/springframework/data/mongodb/repository/Meta
@1.6.0.RELEASE
+#maxExcecutionTime()J
+#maxScanDocuments()J
+#comment()Ljava/lang/String;
+#snapshot()Z
@1.10.0.RELEASE
*#maxExcecutionTime()J[deprecated]
+#maxExecutionTimeMs()J
+#flags()[Lorg/springframework/data/mongodb/core/query/Meta$CursorOption;
@2.0.0.RELEASE
-#maxExcecutionTime()J[deprecated]
@2.1.0.RELEASE
+#cursorBatchSize()I
@2.2.0.RELEASE
*#maxScanDocuments()J[deprecated]
@3.0.0.RELEASE
+#allowDiskUse()Z
-#maxScanDocuments()J[deprecated]
-#snapshot()Z

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$PagingGeoNearExecution
@1.9.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/util/TypeInformation;Lorg/springframework/data/mongodb/repository/query/AbstractMongoQuery;)V
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/lang/Object;
-#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/util/TypeInformation;Lorg/springframework/data/mongodb/repository/query/AbstractMongoQuery;)V
-#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$PagedExecution
@1.9.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/domain/Pageable;)V
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithQuery;Lorg/springframework/data/domain/Pageable;)V
-#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/domain/Pageable;)V

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$GeoNearExecution
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/util/TypeInformation;)V
@3.1.0
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lorg/reactivestreams/Publisher;
-#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod
@2.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/projection/ProjectionFactory;Lorg/springframework/data/mapping/context/MappingContext;)V
+#isCollectionQuery()Z
+#isGeoNearQuery()Z
+#isModifyingQuery()Z
+#isQueryForEntity()Z
+#isStreamQuery()Z
+#hasReactiveWrapperParameter()Z
@3.4.0
+#verify()V

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$ResultProcessingConverter
@2.0.0.RELEASE
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/repository/query/ResultProcessor;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/convert/EntityInstantiators;)V
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/repository/query/ResultProcessor;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mapping/model/EntityInstantiators;)V
-#<init>(Lorg/springframework/data/repository/query/ResultProcessor;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/convert/EntityInstantiators;)V

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$GeoNearExecution
@1.9.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/util/TypeInformation;)V
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithQuery;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;)V
-#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/repository/query/MongoParameterAccessor;Lorg/springframework/data/util/TypeInformation;)V

+###org/springframework/data/mongodb/repository/query/ReactivePartTreeMongoQuery
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)V
+#getTree()Lorg/springframework/data/repository/query/parser/PartTree;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/ReactiveQueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$DeleteExecution
@1.9.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;)V
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/lang/Object;
-#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/repository/query/AbstractReactiveMongoQuery
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)V
+#getQueryMethod()Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;
+#execute([Ljava/lang/Object;)Ljava/lang/Object;
+#getQueryMethod()Lorg/springframework/data/repository/query/QueryMethod;
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/ReactiveQueryMethodEvaluationContextProvider;)V
+#execute([Ljava/lang/Object;)Lorg/reactivestreams/Publisher;
-#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$ResultProcessingExecution
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution;Lorg/springframework/core/convert/converter/Converter;)V
@3.1.0
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lorg/reactivestreams/Publisher;
-#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$DeleteExecution
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;)V
@3.1.0
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lorg/reactivestreams/Publisher;
-#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/data/mongodb/repository/query/StringBasedAggregation
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V

+###org/springframework/data/mongodb/repository/query/ReactiveStringBasedAggregation
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/ReactiveQueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$SlicedExecution
@1.9.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/domain/Pageable;)V
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/ExecutableFindOperation$FindWithQuery;Lorg/springframework/data/domain/Pageable;)V
-#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/domain/Pageable;)V

+###org/springframework/data/mongodb/repository/query/ReactiveStringBasedMongoQuery
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
-#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/ReactiveQueryMethodEvaluationContextProvider;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/ExpressionParser;Lorg/springframework/data/repository/query/ReactiveQueryMethodEvaluationContextProvider;)V
-#<init>(Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
-#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/repository/query/ReactiveMongoQueryMethod;Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V

+###org/springframework/data/mongodb/SessionAwareMethodInterceptor
@2.1.0.RELEASE
+#<init>(Lcom/mongodb/session/ClientSession;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/data/mongodb/SessionAwareMethodInterceptor$ClientSessionOperator;Ljava/lang/Class;Lorg/springframework/data/mongodb/SessionAwareMethodInterceptor$ClientSessionOperator;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;

+###org/springframework/data/mongodb/CodecRegistryProvider
@2.1.0.RELEASE
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;
+#hasCodecFor(Ljava/lang/Class;)Z
+#getCodecFor(Ljava/lang/Class;)Ljava/util/Optional;

+###org/springframework/data/mongodb/MongoSessionProvider
@2.1.0.RELEASE
+#getSession(Lcom/mongodb/ClientSessionOptions;)Lcom/mongodb/client/ClientSession;

+###org/springframework/data/mongodb/SessionAwareMethodInterceptor$ClientSessionOperator
@2.1.0.RELEASE

+###org/springframework/data/mongodb/BulkOperationException
@1.9.0.RELEASE
+#<init>(Ljava/lang/String;Lcom/mongodb/BulkWriteException;)V
+#getErrors()Ljava/util/List;
+#getResult()Lcom/mongodb/BulkWriteResult;
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Lcom/mongodb/MongoBulkWriteException;)V
+#getResult()Lcom/mongodb/bulk/BulkWriteResult;
-#<init>(Ljava/lang/String;Lcom/mongodb/BulkWriteException;)V
-#getResult()Lcom/mongodb/BulkWriteResult;

+###org/springframework/data/mongodb/MongoExpression
@3.2.0
+#create(Ljava/lang/String;)Lorg/springframework/data/mongodb/MongoExpression;
+#create(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/data/mongodb/MongoExpression;
+#toDocument()Lorg/bson/Document;

+###org/springframework/data/mongodb/ReactiveMongoTransactionManager
@2.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;)V
+#<init>(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;Lcom/mongodb/TransactionOptions;)V
+#setDatabaseFactory(Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;)V
+#setOptions(Lcom/mongodb/TransactionOptions;)V
+#getDatabaseFactory()Lorg/springframework/data/mongodb/ReactiveMongoDatabaseFactory;
+#afterPropertiesSet()V

+###org/springframework/data/mongodb/MongoTransactionException
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/mongodb/ReactiveMongoTransactionManager$ReactiveMongoTransactionObject
@2.2.0.RELEASE
+#commitTransaction()Lreactor/core/publisher/Mono;
+#abortTransaction()Lreactor/core/publisher/Mono;
+#getSession()Lcom/mongodb/reactivestreams/client/ClientSession;
+#isRollbackOnly()Z
+#flush()V

+###org/springframework/data/mongodb/util/MongoDbErrorCodes
@1.9.0.RELEASE
+#<init>()V
+#isDataIntegrityViolationCode(Ljava/lang/Integer;)Z
+#isDataAccessResourceFailureCode(Ljava/lang/Integer;)Z
+#isDuplicateKeyCode(Ljava/lang/Integer;)Z
+#isPermissionDeniedCode(Ljava/lang/Integer;)Z
+#isInvalidDataAccessApiUsageCode(Ljava/lang/Integer;)Z
+#getErrorDescription(Ljava/lang/Integer;)Ljava/lang/String;
@2.1.0.RELEASE
+#isClientSessionFailureCode(Ljava/lang/Integer;)Z
+#isTransactionFailureCode(Ljava/lang/Integer;)Z

+###org/springframework/data/mongodb/util/encryption/EncryptionUtils
@3.3.0
+#<init>()V
+#resolveKeyId(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Object;

+###org/springframework/data/mongodb/util/json/ParameterBindingJsonReader$Context
@2.2.0.RELEASE

+###org/springframework/data/mongodb/util/json/ValueProvider
@2.2.0.RELEASE
+#getBindableValue(I)Ljava/lang/Object;

+###org/springframework/data/mongodb/util/json/ParameterBindingContext
@2.2.0.RELEASE
+#bindableValueForIndex(I)Ljava/lang/Object;
+#evaluateExpression(Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/expression/EvaluationContext;)V
+#getValueProvider()Lorg/springframework/data/mongodb/util/json/ValueProvider;
+#getExpressionParser()Lorg/springframework/expression/spel/standard/SpelExpressionParser;
+#getEvaluationContext()Lorg/springframework/expression/EvaluationContext;
@2.2.3.RELEASE
*#<init>(Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/expression/EvaluationContext;)V[deprecated]
+#<init>(Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Ljava/util/function/Supplier;)V
@3.1.0
+#<init>(Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/ExpressionParser;Ljava/util/function/Supplier;)V
+#<init>(Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/data/mapping/model/SpELExpressionEvaluator;)V
+#forExpressions(Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/ExpressionParser;Ljava/util/function/Function;)Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;
-#<init>(Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Ljava/util/function/Supplier;)V
-#getEvaluationContext()Lorg/springframework/expression/EvaluationContext;
-#getExpressionParser()Lorg/springframework/expression/spel/standard/SpelExpressionParser;
@3.3.5
+#evaluateExpression(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
@3.4.0
-#evaluateExpression(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
@3.4.1
+#evaluateExpression(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/data/mongodb/util/json/ParameterBindingJsonReader$Mark
@2.2.0.RELEASE
+#reset()V

+###org/springframework/data/mongodb/util/json/ParameterBindingJsonReader
@2.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Lorg/springframework/expression/EvaluationContext;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)V
+#readBsonType()Lorg/bson/BsonType;
+#setState(Lorg/bson/AbstractBsonReader$State;)V
+#doReadDecimal128()Lorg/bson/types/Decimal128;
+#mark()V[deprecated]
+#getMark()Lorg/bson/BsonReaderMark;
+#reset()V[deprecated]
@2.2.3.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Ljava/util/function/Supplier;)V
@3.0.0.RELEASE
-#mark()V[deprecated]
-#reset()V[deprecated]

+###org/springframework/data/mongodb/util/json/ParameterBindingDocumentCodec
@2.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/bson/codecs/configuration/CodecRegistry;)V
+#<init>(Lorg/bson/codecs/configuration/CodecRegistry;Lorg/bson/codecs/BsonTypeClassMap;)V
+#<init>(Lorg/bson/codecs/configuration/CodecRegistry;Lorg/bson/codecs/BsonTypeClassMap;Lorg/bson/Transformer;)V
+#documentHasId(Lorg/bson/Document;)Z
+#getDocumentId(Lorg/bson/Document;)Lorg/bson/BsonValue;
+#generateIdIfAbsentFromDocument(Lorg/bson/Document;)Lorg/bson/Document;
+#encode(Lorg/bson/BsonWriter;Lorg/bson/Document;Lorg/bson/codecs/EncoderContext;)V
+#decode(Ljava/lang/String;[Ljava/lang/Object;)Lorg/bson/Document;
+#decode(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ParameterBindingContext;)Lorg/bson/Document;
+#decode(Lorg/bson/BsonReader;Lorg/bson/codecs/DecoderContext;)Lorg/bson/Document;
+#getEncoderClass()Ljava/lang/Class;
+#getDocumentId(Ljava/lang/Object;)Lorg/bson/BsonValue;
+#documentHasId(Ljava/lang/Object;)Z
+#generateIdIfAbsentFromDocument(Ljava/lang/Object;)Ljava/lang/Object;
+#encode(Lorg/bson/BsonWriter;Ljava/lang/Object;Lorg/bson/codecs/EncoderContext;)V
+#decode(Lorg/bson/BsonReader;Lorg/bson/codecs/DecoderContext;)Ljava/lang/Object;
@3.1.0
+#captureExpressionDependencies(Ljava/lang/String;Lorg/springframework/data/mongodb/util/json/ValueProvider;Lorg/springframework/expression/ExpressionParser;)Lorg/springframework/data/spel/ExpressionDependencies;

+###org/springframework/data/mongodb/util/MongoClientVersion
@1.7.0.RELEASE
+#<init>()V
+#isMongo3Driver()Z
+#isAsyncClient()Z
@1.9.7.RELEASE
+#isMongo34Driver()Z
@1.10.15.RELEASE
+#isMongo38Driver()Z
@2.0.0.RELEASE
-#isMongo38Driver()Z
@2.0.10.RELEASE
+#isMongo38Driver()Z
@2.1.0.RELEASE
*#isMongo3Driver()Z[deprecated]
*#isMongo34Driver()Z[deprecated]
+#isSyncClientPresent()Z
+#isReactiveClientPresent()Z
@4.0.0
-#isMongo3Driver()Z[deprecated]
-#isMongo34Driver()Z[deprecated]
-#isMongo38Driver()Z

+###org/springframework/data/mongodb/util/DotPath
@3.2.0
+#from(Ljava/lang/String;)Lorg/springframework/data/mongodb/util/DotPath;
+#empty()Lorg/springframework/data/mongodb/util/DotPath;
+#append(Ljava/lang/String;)Lorg/springframework/data/mongodb/util/DotPath;
+#isEmpty()Z
+#toString()Ljava/lang/String;

+###org/springframework/data/mongodb/util/spel/ExpressionUtils
@3.3.0
+#<init>()V
+#detectExpression(Ljava/lang/String;)Lorg/springframework/expression/Expression;
@4.0.0
+#evaluate(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Object;

+###org/springframework/data/mongodb/util/aggregation/TestAggregationContext
@3.3.0
+#contextFor(Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;
+#contextFor(Ljava/lang/Class;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;
+#getMappedObject(Lorg/bson/Document;Ljava/lang/Class;)Lorg/bson/Document;
+#getReference(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
+#getReference(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
@4.0.0
+#getCodecRegistry()Lorg/bson/codecs/configuration/CodecRegistry;

+###org/springframework/data/mongodb/util/RegexFlags
@3.3.0
+#toRegexOptions(I)Ljava/lang/String;
+#toRegexFlags(Ljava/lang/String;)I
+#toRegexFlag(C)I

+###org/springframework/data/mongodb/util/BsonUtils
@2.0.0.RELEASE
+#<init>()V
+#get(Lorg/bson/conversions/Bson;Ljava/lang/String;)Ljava/lang/Object;
+#asMap(Lorg/bson/conversions/Bson;)Ljava/util/Map;
+#addToMap(Lorg/bson/conversions/Bson;Ljava/lang/String;Ljava/lang/Object;)V
@2.1.0.RELEASE
+#toJavaType(Lorg/bson/BsonValue;)Ljava/lang/Object;
@2.1.12.RELEASE
+#toJson(Lorg/bson/Document;)Ljava/lang/String;
@2.2.0.RELEASE
+#merge([Lorg/bson/Document;)Lorg/bson/Document;
+#toDocumentOrElse(Ljava/lang/String;Ljava/util/function/Function;)Lorg/bson/Document;
-#toJson(Lorg/bson/Document;)Ljava/lang/String;
@2.2.1.RELEASE
+#toJson(Lorg/bson/Document;)Ljava/lang/String;
@3.0.0.RELEASE
+#simpleToBsonValue(Ljava/lang/Object;)Lorg/bson/BsonValue;
+#isJsonDocument(Ljava/lang/String;)Z
+#isJsonArray(Ljava/lang/String;)Z
+#parse(Ljava/lang/String;Lorg/springframework/data/mongodb/CodecRegistryProvider;)Lorg/bson/Document;
@3.0.8.RELEASE
+#resolveValue(Lorg/bson/conversions/Bson;Ljava/lang/String;)Ljava/lang/Object;
+#hasValue(Lorg/bson/conversions/Bson;Ljava/lang/String;)Z
@3.1.0
-#resolveValue(Lorg/bson/conversions/Bson;Ljava/lang/String;)Ljava/lang/Object;
-#hasValue(Lorg/bson/conversions/Bson;Ljava/lang/String;)Z
@3.1.6
+#resolveValue(Lorg/bson/conversions/Bson;Ljava/lang/String;)Ljava/lang/Object;
+#hasValue(Lorg/bson/conversions/Bson;Ljava/lang/String;)Z
@3.2.0
+#addAllToMap(Lorg/bson/conversions/Bson;Ljava/util/Map;)V
+#contains(Lorg/bson/conversions/Bson;Ljava/lang/String;Ljava/lang/Object;)Z
+#removeNullId(Lorg/bson/conversions/Bson;)Z
+#asCollection(Ljava/lang/Object;)Ljava/util/Collection;
@3.2.3
+#asBson(Ljava/lang/Object;)Lorg/bson/conversions/Bson;
+#supportsBson(Ljava/lang/Object;)Z
@3.2.5
+#asDocument(Lorg/bson/conversions/Bson;)Lorg/bson/Document;
+#asMutableDocument(Lorg/bson/conversions/Bson;)Lorg/bson/Document;
@4.0.0
+#asMap(Lorg/bson/conversions/Bson;Lorg/bson/codecs/configuration/CodecRegistry;)Ljava/util/Map;
+#asDocument(Lorg/bson/conversions/Bson;Lorg/bson/codecs/configuration/CodecRegistry;)Lorg/bson/Document;

+###org/springframework/data/mongodb/MongoTransactionManager
@2.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;)V
+#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lcom/mongodb/TransactionOptions;)V
+#setDbFactory(Lorg/springframework/data/mongodb/MongoDbFactory;)V
+#setOptions(Lcom/mongodb/TransactionOptions;)V
+#getDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
+#getResourceFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
+#afterPropertiesSet()V
+#getResourceFactory()Ljava/lang/Object;
@3.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;)V
+#<init>(Lorg/springframework/data/mongodb/MongoDatabaseFactory;Lcom/mongodb/TransactionOptions;)V
+#setDbFactory(Lorg/springframework/data/mongodb/MongoDatabaseFactory;)V
+#getDbFactory()Lorg/springframework/data/mongodb/MongoDatabaseFactory;
+#getResourceFactory()Lorg/springframework/data/mongodb/MongoDatabaseFactory;
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;)V
-#<init>(Lorg/springframework/data/mongodb/MongoDbFactory;Lcom/mongodb/TransactionOptions;)V
-#setDbFactory(Lorg/springframework/data/mongodb/MongoDbFactory;)V
-#getDbFactory()Lorg/springframework/data/mongodb/MongoDbFactory;
-#getResourceFactory()Lorg/springframework/data/mongodb/MongoDbFactory;

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$TailExecution
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/domain/Pageable;)V
@2.1.0.RELEASE
-###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$TailExecution

+###org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean
@1.7.0.RELEASE
+#<init>()V
+#setDescription(Ljava/lang/String;)V
+#setMinConnectionsPerHost(I)V
+#setConnectionsPerHost(I)V
+#setThreadsAllowedToBlockForConnectionMultiplier(I)V
+#setMaxWaitTime(I)V
+#setMaxConnectionIdleTime(I)V
+#setMaxConnectionLifeTime(I)V
+#setConnectTimeout(I)V
+#setSocketTimeout(I)V
+#setSocketKeepAlive(Z)V
+#setReadPreference(Lcom/mongodb/ReadPreference;)V
+#setWriteConcern(Lcom/mongodb/WriteConcern;)V
+#setSocketFactory(Ljavax/net/SocketFactory;)V
+#setHeartbeatFrequency(I)V
+#setMinHeartbeatFrequency(I)V
+#setHeartbeatConnectTimeout(I)V
+#setHeartbeatSocketTimeout(I)V
+#setRequiredReplicaSetName(Ljava/lang/String;)V
+#setSsl(Z)V
+#setSslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)V
+#getObjectType()Ljava/lang/Class;
@1.10.2.RELEASE
+#setServerSelectionTimeout(I)V
@2.2.0.RELEASE
+#setAutoEncryptionSettings(Lcom/mongodb/AutoEncryptionSettings;)V
@3.0.0.RELEASE
-###org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$SingleEntityExecution
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Z)V
@2.0.4.RELEASE
-###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$SingleEntityExecution

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$CollectionExecution
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Lorg/springframework/data/domain/Pageable;)V
@2.0.4.RELEASE
-###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$CollectionExecution

+###org/springframework/data/mongodb/repository/support/QuerydslJoinBuilder
@2.1.0.RELEASE
+#on([Lcom/querydsl/core/types/Predicate;)Lorg/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery;
@3.3.0
-###org/springframework/data/mongodb/repository/support/QuerydslJoinBuilder

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$StreamExecution
@1.9.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/core/convert/converter/Converter;)V
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/query/MongoQueryExecution$StreamExecution

+###org/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter
@1.9.2.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter;
+#convert(Ljava/util/concurrent/atomic/AtomicLong;)Ljava/lang/Long;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$AtomicLongToLongConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter
@1.6.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter;
+#convert(Lorg/springframework/data/mongodb/core/query/Term;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$TermToStringConverter

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$ResultProcessingConverter
@1.9.0.RELEASE
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/repository/query/ResultProcessor;Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/convert/EntityInstantiators;)V
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/query/MongoQueryExecution$ResultProcessingConverter

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$CollectionExecution
@1.9.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Lorg/springframework/data/domain/Pageable;)V
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/query/MongoQueryExecution$CollectionExecution

+###org/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDBObjectConverter
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDBObjectConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDBObjectConverter;
+#convert(Lorg/springframework/data/mongodb/core/script/NamedMongoScript;)Lcom/mongodb/DBObject;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDBObjectConverter

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$CountExecution
@1.10.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;)V
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/query/MongoQueryExecution$CountExecution

+###org/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter
@1.9.2.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter;
+#convert(Ljava/util/concurrent/atomic/AtomicInteger;)Ljava/lang/Integer;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$AtomicIntegerToIntegerConverter

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$ExistsExecution
@1.10.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;)V
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/query/MongoQueryExecution$ExistsExecution

+###org/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter
@1.9.2.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter;
+#convert(Ljava/lang/Long;)Ljava/util/concurrent/atomic/AtomicLong;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$LongToAtomicLongConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter
@1.9.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter;
+#convert(Ljava/lang/String;)Ljava/util/Currency;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$StringToCurrencyConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory
@1.9.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory;
+#getConverter(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;
+#matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$NumberToNumberConverterFactory

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$SingleEntityExecution
@1.9.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Z)V
@1.10.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;)V
-#<init>(Lorg/springframework/data/mongodb/core/MongoOperations;Z)V
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/query/MongoQueryExecution$SingleEntityExecution

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$ResultProcessingExecution
@1.9.0.RELEASE
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Lorg/springframework/data/mongodb/repository/query/MongoQueryExecution;Lorg/springframework/core/convert/converter/Converter;)V
@2.0.0.RELEASE
-###org/springframework/data/mongodb/repository/query/MongoQueryExecution$ResultProcessingExecution

+###org/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter
@1.9.2.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter;
+#convert(Ljava/lang/Integer;)Ljava/util/concurrent/atomic/AtomicInteger;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$IntegerToAtomicIntegerConverter

+###org/springframework/data/mongodb/core/GeoJsonConfiguration
@1.7.0.RELEASE
+#<init>()V
+#geoJsonModule()Lorg/springframework/data/mongodb/core/geo/GeoJsonModule;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/GeoJsonConfiguration

+###org/springframework/data/mongodb/core/convert/MongoConverters$DBObjectToNamedMongoScriptCoverter
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$DBObjectToNamedMongoScriptCoverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$DBObjectToNamedMongoScriptCoverter;
+#convert(Lcom/mongodb/DBObject;)Lorg/springframework/data/mongodb/core/script/NamedMongoScript;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$DBObjectToNamedMongoScriptCoverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter
@1.9.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter;
+#convert(Ljava/util/Currency;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$CurrencyToStringConverter

+###org/springframework/data/mongodb/core/MongoDocumentWriter
@1.0.0.RELEASE
@1.4.0.RELEASE
-###org/springframework/data/mongodb/core/MongoDocumentWriter

+###org/springframework/data/mongodb/core/mapping/SimpleMongoMappingContext
@1.0.0.RELEASE
+#<init>()V
@1.3.0.RELEASE
-###org/springframework/data/mongodb/core/mapping/SimpleMongoMappingContext

+###org/springframework/data/mongodb/core/query/Sort
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)V
+#on(Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/Order;)Lorg/springframework/data/mongodb/core/query/Sort;
+#getSortObject()Lcom/mongodb/DBObject;
@1.3.0.RELEASE
-###org/springframework/data/mongodb/core/query/Sort

+###org/springframework/data/mongodb/repository/Update
@3.4.0
+#value()Ljava/lang/String;
+#update()Ljava/lang/String;
+#pipeline()[Ljava/lang/String;

+###org/springframework/data/mongodb/repository/query/MongoQueryExecution$UpdateExecution
@3.4.0
+#execute(Lorg/springframework/data/mongodb/core/query/Query;)Ljava/lang/Object;

+###org/springframework/data/mongodb/repository/query/ReactiveMongoQueryExecution$UpdateExecution
@3.4.0
+#execute(Lorg/springframework/data/mongodb/core/query/Query;Ljava/lang/Class;Ljava/lang/String;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll
@3.4.0
+#value(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#replacement(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#replacementValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#replacementValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#find(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#findValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#findValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceAll;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne
@3.4.0
+#value(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#replacement(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#replacementOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#replacementOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#find(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#findValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#findValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/StringOperators$ReplaceOne;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$Last
@3.4.0
+#last(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Last;
+#lastOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Last;
+#lastOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$Last;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACosh
@3.4.0
+#acoshOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACosh;
+#acoshOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACosh;
+#acoshOf(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACosh;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$First
@3.4.0
+#first(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$First;
+#firstOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$First;
+#firstOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$First;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACos
@3.4.0
+#acosOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACos;
+#acosOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACos;
+#acosOf(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/ArithmeticOperators$ACos;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/mapping/PersistentPropertyTranslator
@3.4.0
+#<init>()V
+#translate(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#create(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lorg/springframework/data/mongodb/core/mapping/PersistentPropertyTranslator;
+#create(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/util/function/Predicate;)Lorg/springframework/data/mongodb/core/mapping/PersistentPropertyTranslator;

+###org/springframework/data/mongodb/core/MongoJsonSchemaCreator$PropertySpecifier
@3.4.0
+#withTypes([Ljava/lang/Class;)Lorg/springframework/data/mongodb/core/MongoJsonSchemaCreator;

+###org/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction$Resolution
@3.4.0
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
+#skip()Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction$Resolution;
+#ofValue(Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction$Path;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction$Resolution;
+#ofValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction$Resolution;

+###org/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction
@3.4.0
+#resolveConflict(Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction$Path;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction$Resolution;

+###org/springframework/data/mongodb/core/schema/MongoJsonSchema$ConflictResolutionFunction$Path
@3.4.0
+#currentElement()Ljava/lang/String;
+#dotPath()Ljava/lang/String;

+###org/springframework/data/mongodb/core/convert/MongoConversionContext
@3.4.0
+#<init>(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#getProperty()Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;
+#write(Ljava/lang/Object;Lorg/springframework/data/util/TypeInformation;)Ljava/lang/Object;
+#read(Ljava/lang/Object;Lorg/springframework/data/util/TypeInformation;)Ljava/lang/Object;
+#getProperty()Lorg/springframework/data/mapping/PersistentProperty;

+###org/springframework/data/mongodb/core/convert/MappingMongoConverter$DefaultConversionContext
@3.4.3
+#convert(Ljava/lang/Object;Lorg/springframework/data/util/TypeInformation;Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$ConversionContext;)Ljava/lang/Object;
+#getCustomConversions()Lorg/springframework/data/convert/CustomConversions;
+#getSourceConverter()Lorg/springframework/data/mongodb/core/convert/MongoConverter;
+#withPath(Lorg/springframework/data/mongodb/core/convert/ObjectPath;)Lorg/springframework/data/mongodb/core/convert/MappingMongoConverter$ConversionContext;
+#getPath()Lorg/springframework/data/mongodb/core/convert/ObjectPath;

+###org/springframework/data/mongodb/core/convert/MongoValueConverter
@3.4.0

+###org/springframework/data/mongodb/core/annotation/Collation
@4.0.0
+#value()Ljava/lang/String;

+###org/springframework/data/mongodb/core/ViewOptions
@4.0.0
+#<init>()V
+#getCollation()Ljava/util/Optional;
+#collation(Lorg/springframework/data/mongodb/core/query/Collation;)Lorg/springframework/data/mongodb/core/ViewOptions;

+###org/springframework/data/mongodb/core/convert/LazyLoadingProxyFactory
@4.0.0
+#<init>(Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#resolveProxyType(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Class;
+#createLazyLoadingProxy(Lorg/springframework/data/mongodb/core/mapping/MongoPersistentProperty;Lorg/springframework/data/mongodb/core/convert/DbRefResolverCallback;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/mongodb/core/aggregation/ObjectOperators$GetField
@4.0.0
+#getField(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$GetField;
+#getField(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$GetField;
+#of(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$GetField;
+#of(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$GetField;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyRange
@4.0.0
+#<init>(Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnit;)V
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#incrementBy(Ljava/lang/Number;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyRange;
+#incrementBy(Ljava/lang/Number;Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnit;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyRange;
+#unit(Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnit;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyRange;

+###org/springframework/data/mongodb/core/aggregation/ArrayOperators$SortArray
@4.0.0
+#sortArray(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$SortArray;
+#sortArrayOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$SortArray;
+#sortArrayOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$SortArray;
+#by(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/aggregation/ArrayOperators$SortArray;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$TsIncrement
@4.0.0
+#tsIncrement(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TsIncrement;
+#tsIncrementValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TsIncrement;
+#tsIncrementValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TsIncrement;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField
@4.0.0
+#field(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField;
+#field(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField;
+#input(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField;
+#input(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField;
+#toValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField;
+#toValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField;
+#toValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/ObjectOperators$SetField;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnits
@4.0.0
+#values()[Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnits;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnits;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$TsSecond
@4.0.0
+#tsSecond(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TsSecond;
+#tsSecondValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TsSecond;
+#tsSecondValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TsSecond;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DensifyOperation$Range
@4.0.0
+#bounded(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyRange;
+#full()Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyRange;
+#partition()Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyRange;
+#toDocument()Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SelectionOperators$Top
@4.0.0
+#top()Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Top;
+#top(I)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Top;
+#limit(I)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Top;
+#limit(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Top;
+#sortBy(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Top;
+#output(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Top;
+#output([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Top;
+#output([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Top;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SelectionOperators
@4.0.0
+#<init>()V

+###org/springframework/data/mongodb/core/aggregation/EvaluationOperators$Expr
@4.0.0
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$Expr;
+#valueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$Expr;
+#toCriteriaDefinition(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/springframework/data/mongodb/core/query/CriteriaDefinition;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnit
@4.0.0
+#name()Ljava/lang/String;
+#from(Ljava/util/concurrent/TimeUnit;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnit;
+#from(Ljava/time/temporal/ChronoUnit;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyUnits;

+###org/springframework/data/mongodb/core/aggregation/EvaluationOperators$LastObservationCarriedForward
@4.0.0
+#locfValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$LastObservationCarriedForward;
+#locfValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/EvaluationOperators$LastObservationCarriedForward;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom
@4.0.0
+#bottom()Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom;
+#bottom(I)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom;
+#limit(I)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom;
+#limit(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom;
+#sortBy(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom;
+#output(Lorg/springframework/data/mongodb/core/aggregation/Fields;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom;
+#output([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom;
+#output([Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Bottom;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DensifyOperation$BoundedRange
@4.0.0

+###org/springframework/data/mongodb/core/aggregation/DensifyOperation
@4.0.0
+#builder()Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyOperationBuilder;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/SystemVariable
@4.0.0
+#values()[Lorg/springframework/data/mongodb/core/aggregation/SystemVariable;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SystemVariable;
+#isReferingToSystemVariable(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract
@4.0.0
+#subtractValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#subtractValueOf(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#subtractValue(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#fromDateOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#fromDateOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#fromDate(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateSubtract;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;

+###org/springframework/data/mongodb/core/aggregation/SelectionOperators$Last
@4.0.0
+#last()Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Last;
+#last(I)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Last;
+#limit(I)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Last;
+#limit(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Last;
+#of(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Last;
+#of(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Last;
+#input(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Last;
+#input(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$Last;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyOperationBuilder
@4.0.0
+#<init>()V
+#densify(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyOperationBuilder;
+#partitionBy([Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyOperationBuilder;
+#range(Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$Range;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyOperationBuilder;
+#fullRange(Ljava/util/function/Consumer;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyOperationBuilder;
+#partitionRange(Ljava/util/function/Consumer;)Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation$DensifyOperationBuilder;
+#build()Lorg/springframework/data/mongodb/core/aggregation/DensifyOperation;

+###org/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc
@4.0.0
+#truncateValueOf(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#truncateValueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#truncateValue(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#to(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#to(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#startOfWeek(Ljava/time/DayOfWeek;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#startOfWeek(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#binSize(I)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#binSize(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#binSize(Ljava/lang/Object;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$DateTrunc;
+#withTimezone(Lorg/springframework/data/mongodb/core/aggregation/DateOperators$Timezone;)Lorg/springframework/data/mongodb/core/aggregation/DateOperators$TimezonedDateAggregationExpression;

+###org/springframework/data/mongodb/core/aggregation/SelectionOperators$First
@4.0.0
+#first()Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$First;
+#first(I)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$First;
+#limit(I)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$First;
+#limit(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$First;
+#of(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$First;
+#of(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$First;
+#input(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$First;
+#input(Lorg/springframework/data/mongodb/core/aggregation/AggregationExpression;)Lorg/springframework/data/mongodb/core/aggregation/SelectionOperators$First;
+#toDocument(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;
+#toDocument(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;

+###org/springframework/data/mongodb/core/CollectionOptions$CollectionChangeStreamOptions
@4.0.0
+#preAndPostImages(Z)Lorg/springframework/data/mongodb/core/CollectionOptions$CollectionChangeStreamOptions;
+#getPreAndPostImages()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/mongodb/repository/aot/AotMongoRepositoryPostProcessor
@4.0.0
+#<init>()V

+###org/springframework/data/mongodb/aot/LazyLoadingProxyAotProcessor
@4.0.0
+#<init>()V
+#registerLazyLoadingProxyIfNeeded(Ljava/lang/Class;Lorg/springframework/aot/generate/GenerationContext;)V

+###org/springframework/data/mongodb/aot/MongoAotPredicates
@4.0.0
+#<init>()V
+#isReactorPresent()Z
+#isSyncClientPresent(Ljava/lang/ClassLoader;)Z

+###org/springframework/data/mongodb/observability/MongoObservationCommandListener
@4.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#<init>(Lio/micrometer/observation/ObservationRegistry;Lcom/mongodb/ConnectionString;)V
+#commandStarted(Lcom/mongodb/event/CommandStartedEvent;)V
+#commandSucceeded(Lcom/mongodb/event/CommandSucceededEvent;)V
+#commandFailed(Lcom/mongodb/event/CommandFailedEvent;)V

+###org/springframework/data/mongodb/observability/MongoHandlerObservationConvention
@4.0.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###org/springframework/data/mongodb/observability/ContextProviderFactory
@4.0.0
+#<init>()V
+#create(Lio/micrometer/observation/ObservationRegistry;)Lcom/mongodb/ContextProvider;

+###org/springframework/data/mongodb/MongoManagedTypes
@4.0.0
+#from(Lorg/springframework/data/domain/ManagedTypes;)Lorg/springframework/data/mongodb/MongoManagedTypes;
+#from([Ljava/lang/Class;)Lorg/springframework/data/mongodb/MongoManagedTypes;
+#fromIterable(Ljava/lang/Iterable;)Lorg/springframework/data/mongodb/MongoManagedTypes;
+#empty()Lorg/springframework/data/mongodb/MongoManagedTypes;
+#forEach(Ljava/util/function/Consumer;)V

+###org/springframework/data/mongodb/core/MongoExceptionTranslator$MongoDbErrorCodes
@1.8.0.RELEASE
+#<init>()V
+#isDataIntegrityViolationCode(Ljava/lang/Integer;)Z
+#isDataAccessResourceFailureCode(Ljava/lang/Integer;)Z
+#isDuplicateKeyCode(Ljava/lang/Integer;)Z
+#isPermissionDeniedCode(Ljava/lang/Integer;)Z
+#isInvalidDataAccessApiUsageCode(Ljava/lang/Integer;)Z
+#getErrorDescription(Ljava/lang/Integer;)Ljava/lang/String;
@1.9.0.RELEASE
-###org/springframework/data/mongodb/core/MongoExceptionTranslator$MongoDbErrorCodes

+###org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter
@2.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter;
+#convert(Lorg/bson/Document;)Ljava/lang/String;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToStringConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter
@2.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter;
+#convert(Lorg/springframework/data/mongodb/core/script/NamedMongoScript;)Lorg/bson/Document;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$NamedMongoScriptToDocumentConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter
@2.0.0.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter;
+#convert(Lorg/bson/Document;)Lorg/springframework/data/mongodb/core/script/NamedMongoScript;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.1.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$DocumentToNamedMongoScriptConverter

+###org/springframework/data/mongodb/core/query/OrQuery
@1.0.0.RELEASE
+#<init>([Lorg/springframework/data/mongodb/core/query/Query;)V
@1.1.0.RELEASE
-###org/springframework/data/mongodb/core/query/OrQuery

+###org/springframework/data/mongodb/core/QueryMapper
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mongodb/core/convert/MongoConverter;)V
+#getMappedObject(Lcom/mongodb/DBObject;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;)Lcom/mongodb/DBObject;
+#convertId(Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0.RELEASE
-###org/springframework/data/mongodb/core/QueryMapper

+###org/springframework/data/mongodb/repository/config/MongoRepositoryConfigParser
@1.0.0.RELEASE
+#<init>()V
@1.1.0.RELEASE
-###org/springframework/data/mongodb/repository/config/MongoRepositoryConfigParser

+###org/springframework/data/mongodb/repository/config/SimpleMongoRepositoryConfiguration$MongoRepositoryConfiguration
@1.0.0.RELEASE
+#getMongoTemplateRef()Ljava/lang/String;
+#getCreateQueryIndexes()Z
@1.1.0.RELEASE
-###org/springframework/data/mongodb/repository/config/SimpleMongoRepositoryConfiguration$MongoRepositoryConfiguration

+###org/springframework/data/mongodb/repository/config/SimpleMongoRepositoryConfiguration
@1.0.0.RELEASE
+#getMongoTemplateRef()Ljava/lang/String;
+#getCreateQueryIndexes()Z
+#getAutoconfigRepositoryInformation(Ljava/lang/String;)Lorg/springframework/data/mongodb/repository/config/SimpleMongoRepositoryConfiguration$MongoRepositoryConfiguration;
+#getNamedQueriesLocation()Ljava/lang/String;
+#getAutoconfigRepositoryInformation(Ljava/lang/String;)Lorg/springframework/data/repository/config/SingleRepositoryConfigInformation;
@1.1.0.RELEASE
-###org/springframework/data/mongodb/repository/config/SimpleMongoRepositoryConfiguration

+###org/springframework/data/mongodb/repository/query/EntityInformationCreator
@1.0.0.RELEASE
+#getEntityInformation(Ljava/lang/Class;)Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;
+#getEntityInformation(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;
@1.1.2.RELEASE
-###org/springframework/data/mongodb/repository/query/EntityInformationCreator

+###org/springframework/data/mongodb/repository/support/DefaultEntityInformationCreator
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/mapping/context/MappingContext;)V
+#getEntityInformation(Ljava/lang/Class;)Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;
+#getEntityInformation(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/data/mongodb/repository/query/MongoEntityInformation;
@1.1.2.RELEASE
-###org/springframework/data/mongodb/repository/support/DefaultEntityInformationCreator

+###org/springframework/data/mongodb/core/aggregation/ExposedFieldsAggregationOperationContext
@1.3.0.RELEASE
+#<init>()V
+#getMappedObject(Lcom/mongodb/DBObject;)Lcom/mongodb/DBObject;
+#getReference(Lorg/springframework/data/mongodb/core/aggregation/Field;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
+#getReference(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/aggregation/ExposedFields$FieldReference;
@1.3.2.RELEASE
-###org/springframework/data/mongodb/core/aggregation/ExposedFieldsAggregationOperationContext

+###org/springframework/data/mongodb/core/SerializationUtils
@1.0.2.RELEASE
+#serializeToJsonSafely(Ljava/lang/Object;)Ljava/lang/String;
@1.1.0.RELEASE
-###org/springframework/data/mongodb/core/SerializationUtils

+###org/springframework/data/mongodb/MongoDataIntegrityViolationException
@1.2.1.RELEASE
+#<init>(Ljava/lang/String;Lcom/mongodb/WriteResult;Lorg/springframework/data/mongodb/core/MongoActionOperation;)V
+#getWriteResult()Lcom/mongodb/WriteResult;
+#getActionOperation()Lorg/springframework/data/mongodb/core/MongoActionOperation;
@1.3.0.RELEASE
-###org/springframework/data/mongodb/MongoDataIntegrityViolationException

+###org/springframework/data/mongodb/core/convert/MongoConverters$UUIDToBinaryConverter
@1.0.1.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$UUIDToBinaryConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$UUIDToBinaryConverter;
+#convert(Ljava/util/UUID;)Lorg/bson/types/Binary;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.0.2.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$UUIDToBinaryConverter

+###org/springframework/data/mongodb/core/convert/MongoConverters$BinaryToUUIDConverter
@1.0.1.RELEASE
+#values()[Lorg/springframework/data/mongodb/core/convert/MongoConverters$BinaryToUUIDConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/convert/MongoConverters$BinaryToUUIDConverter;
+#convert(Lorg/bson/types/Binary;)Ljava/util/UUID;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@1.0.2.RELEASE
-###org/springframework/data/mongodb/core/convert/MongoConverters$BinaryToUUIDConverter
