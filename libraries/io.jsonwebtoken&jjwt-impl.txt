
+###io/jsonwebtoken/impl/AbstractTextCodec
@0.10.0
+#<init>()V
+#encode(Ljava/lang/String;)Ljava/lang/String;
+#decodeToString(Ljava/lang/String;)Ljava/lang/String;

+###io/jsonwebtoken/impl/crypto/RsaProvider
@0.10.0
+#generateKeyPair()Ljava/security/KeyPair;
+#generateKeyPair(I)Ljava/security/KeyPair;
+#generateKeyPair(Lio/jsonwebtoken/SignatureAlgorithm;)Ljava/security/KeyPair;
+#generateKeyPair(ILjava/security/SecureRandom;)Ljava/security/KeyPair;

+###io/jsonwebtoken/impl/crypto/RsaSigner
@0.10.0
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V
+#sign([B)[B

+###io/jsonwebtoken/impl/crypto/SignatureValidator
@0.10.0
+#isValid([B[B)Z

+###io/jsonwebtoken/impl/crypto/Signer
@0.10.0
+#sign([B)[B

+###io/jsonwebtoken/impl/AndroidBase64Codec
@0.10.0
+#<init>()V
+#encode([B)Ljava/lang/String;
+#decode(Ljava/lang/String;)[B

+###io/jsonwebtoken/impl/compression/DeflateCompressionCodec
@0.10.0
+#<init>()V
+#getAlgorithmName()Ljava/lang/String;
+#doCompress([B)[B
+#doDecompress([B)[B
@0.10.7
-#doCompress([B)[B
-#doDecompress([B)[B

+###io/jsonwebtoken/impl/compression/GzipCompressionCodec
@0.10.0
+#<init>()V
+#getAlgorithmName()Ljava/lang/String;

+###io/jsonwebtoken/impl/crypto/DefaultJwtSignatureValidator
@0.10.0
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V[deprecated]
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;Lio/jsonwebtoken/io/Decoder;)V
+#<init>(Lio/jsonwebtoken/impl/crypto/SignatureValidatorFactory;Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V[deprecated]
+#<init>(Lio/jsonwebtoken/impl/crypto/SignatureValidatorFactory;Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;Lio/jsonwebtoken/io/Decoder;)V
+#isValid(Ljava/lang/String;Ljava/lang/String;)Z

+###io/jsonwebtoken/impl/crypto/EllipticCurveSignatureValidator
@0.10.0
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V
+#isValid([B[B)Z

+###io/jsonwebtoken/impl/crypto/JwtSignatureValidator
@0.10.0
+#isValid(Ljava/lang/String;Ljava/lang/String;)Z

+###io/jsonwebtoken/impl/crypto/RsaSignatureValidator
@0.10.0
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V
+#isValid([B[B)Z

+###io/jsonwebtoken/impl/crypto/SignatureValidatorFactory
@0.10.0
+#createSignatureValidator(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)Lio/jsonwebtoken/impl/crypto/SignatureValidator;

+###io/jsonwebtoken/impl/crypto/SignerFactory
@0.10.0
+#createSigner(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)Lio/jsonwebtoken/impl/crypto/Signer;

+###io/jsonwebtoken/impl/io/RuntimeClasspathSerializerLocator
@0.10.0
+#<init>()V
+#getInstance()Lio/jsonwebtoken/io/Serializer;
+#getInstance()Ljava/lang/Object;
@0.11.0
-###io/jsonwebtoken/impl/io/RuntimeClasspathSerializerLocator

+###io/jsonwebtoken/impl/TextCodec
@0.10.0
+#encode(Ljava/lang/String;)Ljava/lang/String;
+#encode([B)Ljava/lang/String;
+#decode(Ljava/lang/String;)[B
+#decodeToString(Ljava/lang/String;)Ljava/lang/String;

+###io/jsonwebtoken/impl/TextCodecFactory
@0.10.0
+#getTextCodec()Lio/jsonwebtoken/impl/TextCodec;

+###io/jsonwebtoken/impl/Base64Codec
@0.10.0
+#<init>()V
+#encode([B)Ljava/lang/String;
+#decode(Ljava/lang/String;)[B

+###io/jsonwebtoken/impl/crypto/MacProvider
@0.10.0
+#generateKey()Ljavax/crypto/SecretKey;
+#generateKey(Lio/jsonwebtoken/SignatureAlgorithm;)Ljavax/crypto/SecretKey;
+#generateKey(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/SecureRandom;)Ljavax/crypto/SecretKey;[deprecated]

+###io/jsonwebtoken/impl/DefaultTextCodecFactory
@0.10.0
+#<init>()V
+#getTextCodec()Lio/jsonwebtoken/impl/TextCodec;

+###io/jsonwebtoken/impl/io/InstanceLocator
@0.10.0
+#getInstance()Ljava/lang/Object;
@0.11.0
-###io/jsonwebtoken/impl/io/InstanceLocator

+###io/jsonwebtoken/impl/io/RuntimeClasspathDeserializerLocator
@0.10.0
+#<init>()V
+#getInstance()Lio/jsonwebtoken/io/Deserializer;
+#getInstance()Ljava/lang/Object;
@0.11.0
-###io/jsonwebtoken/impl/io/RuntimeClasspathDeserializerLocator

+###io/jsonwebtoken/impl/Base64UrlCodec
@0.10.0
+#<init>()V
+#encode([B)Ljava/lang/String;
+#decode(Ljava/lang/String;)[B

+###io/jsonwebtoken/impl/crypto/EllipticCurveProvider
@0.10.0
+#generateKeyPair()Ljava/security/KeyPair;
+#generateKeyPair(Lio/jsonwebtoken/SignatureAlgorithm;)Ljava/security/KeyPair;
+#generateKeyPair(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/SecureRandom;)Ljava/security/KeyPair;
+#generateKeyPair(Ljava/lang/String;Ljava/lang/String;Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/SecureRandom;)Ljava/security/KeyPair;
+#getSignatureByteArrayLength(Lio/jsonwebtoken/SignatureAlgorithm;)I
+#transcodeSignatureToConcat([BI)[B
+#transcodeSignatureToDER([B)[B
@0.11.5
+#transcodeDERToConcat([BI)[B
+#transcodeConcatToDER([B)[B
-#transcodeSignatureToConcat([BI)[B
-#transcodeSignatureToDER([B)[B

+###io/jsonwebtoken/impl/crypto/DefaultSignatureValidatorFactory
@0.10.0
+#<init>()V
+#createSignatureValidator(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)Lio/jsonwebtoken/impl/crypto/SignatureValidator;

+###io/jsonwebtoken/impl/crypto/JwtSigner
@0.10.0
+#sign(Ljava/lang/String;)Ljava/lang/String;

+###io/jsonwebtoken/impl/DefaultClock
@0.10.0
+#<init>()V
+#now()Ljava/util/Date;

+###io/jsonwebtoken/impl/DefaultHeader
@0.10.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)Lio/jsonwebtoken/Header;
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)Lio/jsonwebtoken/Header;
+#getCompressionAlgorithm()Ljava/lang/String;
+#setCompressionAlgorithm(Ljava/lang/String;)Lio/jsonwebtoken/Header;

+###io/jsonwebtoken/impl/DefaultJwt
@0.10.0
+#<init>(Lio/jsonwebtoken/Header;Ljava/lang/Object;)V
+#getHeader()Lio/jsonwebtoken/Header;
+#getBody()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###io/jsonwebtoken/impl/DefaultJwtParser
@0.10.0
+#<init>()V
+#deserializeJsonWith(Lio/jsonwebtoken/io/Deserializer;)Lio/jsonwebtoken/JwtParser;
+#base64UrlDecodeWith(Lio/jsonwebtoken/io/Decoder;)Lio/jsonwebtoken/JwtParser;
+#requireIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;
+#requireIssuer(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#requireAudience(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#requireSubject(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#requireId(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#requireExpiration(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;
+#requireNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/JwtParser;
+#require(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtParser;
+#setClock(Lio/jsonwebtoken/Clock;)Lio/jsonwebtoken/JwtParser;
+#setAllowedClockSkewSeconds(J)Lio/jsonwebtoken/JwtParser;
+#setSigningKey([B)Lio/jsonwebtoken/JwtParser;
+#setSigningKey(Ljava/lang/String;)Lio/jsonwebtoken/JwtParser;
+#setSigningKey(Ljava/security/Key;)Lio/jsonwebtoken/JwtParser;
+#setSigningKeyResolver(Lio/jsonwebtoken/SigningKeyResolver;)Lio/jsonwebtoken/JwtParser;
+#setCompressionCodecResolver(Lio/jsonwebtoken/CompressionCodecResolver;)Lio/jsonwebtoken/JwtParser;
+#isSigned(Ljava/lang/String;)Z
+#parse(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;
+#parse(Ljava/lang/String;Lio/jsonwebtoken/JwtHandler;)Ljava/lang/Object;
+#parsePlaintextJwt(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;
+#parseClaimsJwt(Ljava/lang/String;)Lio/jsonwebtoken/Jwt;
+#parsePlaintextJws(Ljava/lang/String;)Lio/jsonwebtoken/Jws;
+#parseClaimsJws(Ljava/lang/String;)Lio/jsonwebtoken/Jws;
@0.11.0
*#<init>()V[deprecated]

+###io/jsonwebtoken/impl/compression/AbstractCompressionCodec
@0.10.0
+#<init>()V
+#compress([B)[B
+#decompress([B)[B

+###io/jsonwebtoken/impl/crypto/DefaultJwtSigner
@0.10.0
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V[deprecated]
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;Lio/jsonwebtoken/io/Encoder;)V
+#<init>(Lio/jsonwebtoken/impl/crypto/SignerFactory;Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V[deprecated]
+#<init>(Lio/jsonwebtoken/impl/crypto/SignerFactory;Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;Lio/jsonwebtoken/io/Encoder;)V
+#sign(Ljava/lang/String;)Ljava/lang/String;

+###io/jsonwebtoken/impl/crypto/EllipticCurveSigner
@0.10.0
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V
+#sign([B)[B

+###io/jsonwebtoken/impl/DefaultClaims
@0.10.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#getIssuer()Ljava/lang/String;
+#setIssuer(Ljava/lang/String;)Lio/jsonwebtoken/Claims;
+#getSubject()Ljava/lang/String;
+#setSubject(Ljava/lang/String;)Lio/jsonwebtoken/Claims;
+#getAudience()Ljava/lang/String;
+#setAudience(Ljava/lang/String;)Lio/jsonwebtoken/Claims;
+#getExpiration()Ljava/util/Date;
+#setExpiration(Ljava/util/Date;)Lio/jsonwebtoken/Claims;
+#getNotBefore()Ljava/util/Date;
+#setNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/Claims;
+#getIssuedAt()Ljava/util/Date;
+#setIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/Claims;
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)Lio/jsonwebtoken/Claims;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#setId(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setExpiration(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setAudience(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setSubject(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setIssuer(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;

+###io/jsonwebtoken/impl/DefaultJws
@0.10.0
+#<init>(Lio/jsonwebtoken/JwsHeader;Ljava/lang/Object;Ljava/lang/String;)V
+#getHeader()Lio/jsonwebtoken/JwsHeader;
+#getBody()Ljava/lang/Object;
+#getSignature()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getHeader()Lio/jsonwebtoken/Header;

+###io/jsonwebtoken/impl/DefaultJwsHeader
@0.10.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#getAlgorithm()Ljava/lang/String;
+#setAlgorithm(Ljava/lang/String;)Lio/jsonwebtoken/JwsHeader;
+#getKeyId()Ljava/lang/String;
+#setKeyId(Ljava/lang/String;)Lio/jsonwebtoken/JwsHeader;

+###io/jsonwebtoken/impl/DefaultJwtBuilder
@0.10.0
+#<init>()V
+#serializeToJsonWith(Lio/jsonwebtoken/io/Serializer;)Lio/jsonwebtoken/JwtBuilder;
+#base64UrlEncodeWith(Lio/jsonwebtoken/io/Encoder;)Lio/jsonwebtoken/JwtBuilder;
+#setHeader(Lio/jsonwebtoken/Header;)Lio/jsonwebtoken/JwtBuilder;
+#setHeader(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;
+#setHeaderParams(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;
+#setHeaderParam(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtBuilder;
+#signWith(Ljava/security/Key;)Lio/jsonwebtoken/JwtBuilder;
+#signWith(Ljava/security/Key;Lio/jsonwebtoken/SignatureAlgorithm;)Lio/jsonwebtoken/JwtBuilder;
+#signWith(Lio/jsonwebtoken/SignatureAlgorithm;[B)Lio/jsonwebtoken/JwtBuilder;
+#signWith(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#signWith(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)Lio/jsonwebtoken/JwtBuilder;
+#compressWith(Lio/jsonwebtoken/CompressionCodec;)Lio/jsonwebtoken/JwtBuilder;
+#setPayload(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#setClaims(Lio/jsonwebtoken/Claims;)Lio/jsonwebtoken/JwtBuilder;
+#setClaims(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;
+#addClaims(Ljava/util/Map;)Lio/jsonwebtoken/JwtBuilder;
+#setIssuer(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#setSubject(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#setAudience(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#setExpiration(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;
+#setNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;
+#setIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/JwtBuilder;
+#setId(Ljava/lang/String;)Lio/jsonwebtoken/JwtBuilder;
+#claim(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtBuilder;
+#compact()Ljava/lang/String;
+#setId(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setExpiration(Ljava/util/Date;)Lio/jsonwebtoken/ClaimsMutator;
+#setAudience(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setSubject(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;
+#setIssuer(Ljava/lang/String;)Lio/jsonwebtoken/ClaimsMutator;

+###io/jsonwebtoken/impl/FixedClock
@0.10.0
+#<init>()V
+#<init>(Ljava/util/Date;)V
+#now()Ljava/util/Date;

+###io/jsonwebtoken/impl/compression/DefaultCompressionCodecResolver
@0.10.0
+#<init>()V
+#resolveCompressionCodec(Lio/jsonwebtoken/Header;)Lio/jsonwebtoken/CompressionCodec;

+###io/jsonwebtoken/impl/crypto/MacValidator
@0.10.0
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V
+#isValid([B[B)Z

+###io/jsonwebtoken/impl/JwtMap
@0.10.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###io/jsonwebtoken/impl/compression/CompressionCodecs
@0.10.0

+###io/jsonwebtoken/impl/crypto/DefaultSignerFactory
@0.10.0
+#<init>()V
+#createSigner(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)Lio/jsonwebtoken/impl/crypto/Signer;

+###io/jsonwebtoken/impl/crypto/MacSigner
@0.10.0
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;[B)V
+#<init>(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;)V
+#sign([B)[B

+###io/jsonwebtoken/impl/DefaultJwtParserBuilder
@0.11.0
+#<init>()V
+#deserializeJsonWith(Lio/jsonwebtoken/io/Deserializer;)Lio/jsonwebtoken/JwtParserBuilder;
+#base64UrlDecodeWith(Lio/jsonwebtoken/io/Decoder;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireIssuedAt(Ljava/util/Date;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireIssuer(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireAudience(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireSubject(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireId(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireExpiration(Ljava/util/Date;)Lio/jsonwebtoken/JwtParserBuilder;
+#requireNotBefore(Ljava/util/Date;)Lio/jsonwebtoken/JwtParserBuilder;
+#require(Ljava/lang/String;Ljava/lang/Object;)Lio/jsonwebtoken/JwtParserBuilder;
+#setClock(Lio/jsonwebtoken/Clock;)Lio/jsonwebtoken/JwtParserBuilder;
+#setAllowedClockSkewSeconds(J)Lio/jsonwebtoken/JwtParserBuilder;
+#setSigningKey([B)Lio/jsonwebtoken/JwtParserBuilder;
+#setSigningKey(Ljava/lang/String;)Lio/jsonwebtoken/JwtParserBuilder;
+#setSigningKey(Ljava/security/Key;)Lio/jsonwebtoken/JwtParserBuilder;
+#setSigningKeyResolver(Lio/jsonwebtoken/SigningKeyResolver;)Lio/jsonwebtoken/JwtParserBuilder;
+#setCompressionCodecResolver(Lio/jsonwebtoken/CompressionCodecResolver;)Lio/jsonwebtoken/JwtParserBuilder;
+#build()Lio/jsonwebtoken/JwtParser;

+###io/jsonwebtoken/impl/lang/Services
@0.11.0
+#loadAll(Ljava/lang/Class;)Ljava/util/List;
+#loadFirst(Ljava/lang/Class;)Ljava/lang/Object;

+###io/jsonwebtoken/impl/lang/LegacyServices
@0.11.0
+#<init>()V
+#loadFirst(Ljava/lang/Class;)Ljava/lang/Object;

+###io/jsonwebtoken/impl/lang/UnavailableImplementationException
@0.11.0
