
+###org/springframework/test/annotation/DirtiesContext$MethodMode
@4.2.0.RELEASE
+#values()[Lorg/springframework/test/annotation/DirtiesContext$MethodMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/annotation/DirtiesContext$MethodMode;

+###org/springframework/test/annotation/ProfileValueSource
@2.5
+#get(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/test/annotation/Commit
@4.2.0.RELEASE

+###org/springframework/test/annotation/DirtiesContext$ClassMode
@3.0.0.RELEASE
+#values()[Lorg/springframework/test/annotation/DirtiesContext$ClassMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/annotation/DirtiesContext$ClassMode;

+###org/springframework/test/annotation/TestAnnotationUtils
@4.2.0.RELEASE
+#<init>()V
+#getTimeout(Ljava/lang/reflect/Method;)J
+#getRepeatCount(Ljava/lang/reflect/Method;)I

+###org/springframework/test/annotation/DirtiesContext
@2.5
@3.0.0.RELEASE
+#classMode()Lorg/springframework/test/annotation/DirtiesContext$ClassMode;
@3.2.2.RELEASE
+#hierarchyMode()Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;
@4.2.0.RELEASE
+#methodMode()Lorg/springframework/test/annotation/DirtiesContext$MethodMode;

+###org/springframework/test/annotation/Repeat
@2.5
+#value()I

+###org/springframework/test/annotation/SystemProfileValueSource
@2.5
+#getInstance()Lorg/springframework/test/annotation/SystemProfileValueSource;
+#get(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/test/annotation/ProfileValueUtils
@2.5
+#<init>()V
+#retrieveProfileValueSource(Ljava/lang/Class;)Lorg/springframework/test/annotation/ProfileValueSource;
+#isTestEnabledInThisEnvironment(Lorg/springframework/test/annotation/ProfileValueSource;Ljava/lang/reflect/Method;)Z
@2.5.3
+#isTestEnabledInThisEnvironment(Lorg/springframework/test/annotation/ProfileValueSource;Ljava/lang/reflect/Method;Ljava/lang/Class;)Z
-#isTestEnabledInThisEnvironment(Lorg/springframework/test/annotation/ProfileValueSource;Ljava/lang/reflect/Method;)Z
@2.5.6
+#isTestEnabledInThisEnvironment(Ljava/lang/Class;)Z
+#isTestEnabledInThisEnvironment(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z

+###org/springframework/test/annotation/Timed
@2.5
+#millis()J

+###org/springframework/test/annotation/ProfileValueSourceConfiguration
@2.5
+#value()Ljava/lang/Class;

+###org/springframework/test/annotation/Rollback
@2.5
+#value()Z

+###org/springframework/test/annotation/DirtiesContext$HierarchyMode
@3.2.2.RELEASE
+#values()[Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;

+###org/springframework/test/annotation/IfProfileValue
@2.5
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#values()[Ljava/lang/String;

+###org/springframework/test/jdbc/JdbcTestUtils
@2.5.4
+#<init>()V
+#readScript(Ljava/io/LineNumberReader;)Ljava/lang/String;
+#containsSqlScriptDelimiters(Ljava/lang/String;C)Z
+#splitSqlScript(Ljava/lang/String;CLjava/util/List;)V
@3.1.3.RELEASE
+#countRowsInTable(Lorg/springframework/jdbc/core/JdbcTemplate;Ljava/lang/String;)I
+#countRowsInTableWhere(Lorg/springframework/jdbc/core/JdbcTemplate;Ljava/lang/String;Ljava/lang/String;)I
+#deleteFromTables(Lorg/springframework/jdbc/core/JdbcTemplate;[Ljava/lang/String;)I
+#dropTables(Lorg/springframework/jdbc/core/JdbcTemplate;[Ljava/lang/String;)V
+#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/ResourceLoader;Ljava/lang/String;Z)V
+#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/Resource;Z)V
+#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/support/EncodedResource;Z)V
+#readScript(Ljava/io/LineNumberReader;Ljava/lang/String;)Ljava/lang/String;
@3.2.2.RELEASE
+#deleteFromTableWhere(Lorg/springframework/jdbc/core/JdbcTemplate;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I
@4.0.3.RELEASE
*#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/ResourceLoader;Ljava/lang/String;Z)V[deprecated]
*#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/Resource;Z)V[deprecated]
*#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/support/EncodedResource;Z)V[deprecated]
*#readScript(Ljava/io/LineNumberReader;)Ljava/lang/String;[deprecated]
*#readScript(Ljava/io/LineNumberReader;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#containsSqlScriptDelimiters(Ljava/lang/String;C)Z[deprecated]
*#splitSqlScript(Ljava/lang/String;CLjava/util/List;)V[deprecated]
@5.0.0.RELEASE
-#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/ResourceLoader;Ljava/lang/String;Z)V[deprecated]
-#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/Resource;Z)V[deprecated]
-#executeSqlScript(Lorg/springframework/jdbc/core/JdbcTemplate;Lorg/springframework/core/io/support/EncodedResource;Z)V[deprecated]
-#readScript(Ljava/io/LineNumberReader;)Ljava/lang/String;[deprecated]
-#readScript(Ljava/io/LineNumberReader;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#containsSqlScriptDelimiters(Ljava/lang/String;C)Z[deprecated]
-#splitSqlScript(Ljava/lang/String;CLjava/util/List;)V[deprecated]

+###org/springframework/test/context/testng/AbstractTestNGSpringContextTests
@2.5
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#run(Lorg/testng/IHookCallBack;Lorg/testng/ITestResult;)V

+###org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests
@2.5
+#<init>()V
+#setDataSource(Ljavax/sql/DataSource;)V
@2.5.2
+#setSqlScriptEncoding(Ljava/lang/String;)V

+###org/springframework/test/context/ContextLoader
@2.5
+#processLocations(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;
@6.0.0
*#processLocations(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;[deprecated]
*#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;[deprecated]

+###org/springframework/test/context/support/DirtiesContextBeforeModesTestExecutionListener
@4.2.0.RELEASE
+#<init>()V
+#getOrder()I
+#beforeTestClass(Lorg/springframework/test/context/TestContext;)V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/support/AnnotationConfigContextLoader
@3.1.0.RELEASE
+#<init>()V
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V

+###org/springframework/test/context/support/GenericXmlContextLoader
@2.5
+#<init>()V
+#getResourceSuffix()Ljava/lang/String;
@4.0.4.RELEASE
-#getResourceSuffix()Ljava/lang/String;

+###org/springframework/test/context/support/DependencyInjectionTestExecutionListener
@2.5
+#<init>()V
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
@4.1.0.RELEASE
+#getOrder()I

+###org/springframework/test/context/support/AnnotationConfigContextLoaderUtils
@3.2.0.RELEASE
+#detectDefaultConfigurationClasses(Ljava/lang/Class;)[Ljava/lang/Class;
@3.2.11.RELEASE
+#<init>()V
@4.0.0.RELEASE
-#<init>()V
@4.0.7.RELEASE
+#<init>()V

+###org/springframework/test/context/support/GenericGroovyXmlContextLoader
@4.1.0.RELEASE
+#<init>()V

+###org/springframework/test/context/support/AbstractDelegatingSmartContextLoader
@3.2.0.RELEASE
+#<init>()V
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#processLocations(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;
@6.0.0
+#loadContextForAotProcessing(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#loadContextForAotRuntime(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/context/ApplicationContext;
-#processLocations(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;
-#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;

+###org/springframework/test/context/support/DefaultTestContext
@4.2.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#markApplicationContextDirty(Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V
+#getTestClass()Ljava/lang/Class;
+#getTestInstance()Ljava/lang/Object;
+#getTestMethod()Ljava/lang/reflect/Method;
+#getTestException()Ljava/lang/Throwable;
+#updateState(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V
+#toString()Ljava/lang/String;
@5.0.0.RELEASE
+#<init>(Lorg/springframework/test/context/support/DefaultTestContext;)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#hasAttribute(Ljava/lang/String;)Z
+#attributeNames()[Ljava/lang/String;
@5.2.0.RELEASE
+#hasApplicationContext()Z
@5.3.3
+#computeAttribute(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;

+###org/springframework/test/context/support/DefaultTestContextBootstrapper
@4.1.0.RELEASE
+#<init>()V

+###org/springframework/test/context/support/GenericPropertiesContextLoader
@2.5
+#<init>()V
+#getResourceSuffix()Ljava/lang/String;
@4.0.4.RELEASE
-#getResourceSuffix()Ljava/lang/String;
@6.0.0
-###org/springframework/test/context/support/GenericPropertiesContextLoader

+###org/springframework/test/context/support/TestPropertySourceUtils
@4.1.5.RELEASE
+#addPropertiesFilesToEnvironment(Lorg/springframework/context/ConfigurableApplicationContext;[Ljava/lang/String;)V
+#addInlinedPropertiesToEnvironment(Lorg/springframework/context/ConfigurableApplicationContext;[Ljava/lang/String;)V
+#addInlinedPropertiesToEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V
+#convertInlinedPropertiesToMap([Ljava/lang/String;)Ljava/util/Map;
@4.2.8.RELEASE
+#<init>()V
@4.3.0.RELEASE
+#addPropertiesFilesToEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/String;)V

+###org/springframework/test/context/support/AbstractDirtiesContextTestExecutionListener
@4.2.0.RELEASE
+#<init>()V
+#getOrder()I

+###org/springframework/test/context/support/AbstractGenericContextLoader
@2.5
+#<init>()V
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;
@3.1.0.RELEASE
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ConfigurableApplicationContext;
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
@6.0.0
+#loadContextForAotProcessing(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/support/GenericApplicationContext;
+#loadContextForAotRuntime(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/context/support/GenericApplicationContext;
*#loadContext([Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;[deprecated]
*#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;[deprecated]
+#loadContextForAotRuntime(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/context/ApplicationContext;
+#loadContextForAotProcessing(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
-#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ConfigurableApplicationContext;

+###org/springframework/test/context/support/DefaultBootstrapContext
@4.2.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;)V
+#getTestClass()Ljava/lang/Class;
+#getCacheAwareContextLoaderDelegate()Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;
+#toString()Ljava/lang/String;

+###org/springframework/test/context/support/DirtiesContextTestExecutionListener
@2.5
+#<init>()V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
@3.0.0.RELEASE
+#afterTestClass(Lorg/springframework/test/context/TestContext;)V
@4.1.0.RELEASE
+#getOrder()I

+###org/springframework/test/context/support/DelegatingSmartContextLoader
@3.1.0.RELEASE
+#<init>()V
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#processLocations(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;
@3.2.0.RELEASE
-#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V
-#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
-#processLocations(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;
-#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;

+###org/springframework/test/context/support/AbstractTestExecutionListener
@2.5
+#<init>()V
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
@3.0.0.RELEASE
+#beforeTestClass(Lorg/springframework/test/context/TestContext;)V
+#afterTestClass(Lorg/springframework/test/context/TestContext;)V
@4.1.0.RELEASE
+#getOrder()I
@5.0.0.RELEASE
-#beforeTestClass(Lorg/springframework/test/context/TestContext;)V
-#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
-#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
-#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
-#afterTestClass(Lorg/springframework/test/context/TestContext;)V
@5.2.0.RELEASE
+#beforeTestClass(Lorg/springframework/test/context/TestContext;)V
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#beforeTestExecution(Lorg/springframework/test/context/TestContext;)V
+#afterTestExecution(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestClass(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/support/AbstractTestContextBootstrapper
@4.1.0.RELEASE
+#<init>()V
+#setBootstrapContext(Lorg/springframework/test/context/BootstrapContext;)V
+#getBootstrapContext()Lorg/springframework/test/context/BootstrapContext;
+#getTestExecutionListeners()Ljava/util/List;
+#buildMergedContextConfiguration()Lorg/springframework/test/context/MergedContextConfiguration;
@4.2.0.RELEASE
+#buildTestContext()Lorg/springframework/test/context/TestContext;

+###org/springframework/test/context/support/DefaultActiveProfilesResolver
@4.1.0.RELEASE
+#<init>()V
+#resolve(Ljava/lang/Class;)[Ljava/lang/String;

+###org/springframework/test/context/support/AbstractContextLoader
@2.5
+#<init>()V
+#processLocations(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;
@3.1.0.RELEASE
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V

+###org/springframework/test/context/ContextCustomizer
@4.3.0.RELEASE
+#customizeContext(Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/test/context/MergedContextConfiguration;)V

+###org/springframework/test/context/jdbc/SqlGroup
@4.1.0.RELEASE
+#value()[Lorg/springframework/test/context/jdbc/Sql;

+###org/springframework/test/context/jdbc/SqlConfig
@4.1.0.RELEASE
+#dataSource()Ljava/lang/String;
+#transactionManager()Ljava/lang/String;
+#transactionMode()Lorg/springframework/test/context/jdbc/SqlConfig$TransactionMode;
+#encoding()Ljava/lang/String;
+#separator()Ljava/lang/String;
+#commentPrefix()Ljava/lang/String;
+#blockCommentStartDelimiter()Ljava/lang/String;
+#blockCommentEndDelimiter()Ljava/lang/String;
+#errorMode()Lorg/springframework/test/context/jdbc/SqlConfig$ErrorMode;
@5.2.0.RELEASE
+#commentPrefixes()[Ljava/lang/String;

+###org/springframework/test/context/jdbc/SqlConfig$TransactionMode
@4.1.0.RELEASE
+#values()[Lorg/springframework/test/context/jdbc/SqlConfig$TransactionMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/context/jdbc/SqlConfig$TransactionMode;

+###org/springframework/test/context/jdbc/SqlConfig$ErrorMode
@4.1.0.RELEASE
+#values()[Lorg/springframework/test/context/jdbc/SqlConfig$ErrorMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/context/jdbc/SqlConfig$ErrorMode;

+###org/springframework/test/context/jdbc/Sql
@4.1.0.RELEASE
+#value()[Ljava/lang/String;
+#scripts()[Ljava/lang/String;
+#executionPhase()Lorg/springframework/test/context/jdbc/Sql$ExecutionPhase;
+#config()Lorg/springframework/test/context/jdbc/SqlConfig;
@4.2.0.RELEASE
+#statements()[Ljava/lang/String;

+###org/springframework/test/context/jdbc/Sql$ExecutionPhase
@4.1.0.RELEASE
+#values()[Lorg/springframework/test/context/jdbc/Sql$ExecutionPhase;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/context/jdbc/Sql$ExecutionPhase;

+###org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener
@4.1.0.RELEASE
+#<init>()V
+#getOrder()I
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
@6.0.0
+#processAheadOfTime(Lorg/springframework/aot/hint/RuntimeHints;Ljava/lang/Class;Ljava/lang/ClassLoader;)V

+###org/springframework/test/context/ContextCustomizerFactory
@4.3.0.RELEASE
+#createContextCustomizer(Ljava/lang/Class;Ljava/util/List;)Lorg/springframework/test/context/ContextCustomizer;

+###org/springframework/test/context/TestExecutionListeners
@2.5
+#value()[Ljava/lang/Class;
+#inheritListeners()Z
@3.0.0.RELEASE
+#listeners()[Ljava/lang/Class;
@4.1.0.RELEASE
+#mergeMode()Lorg/springframework/test/context/TestExecutionListeners$MergeMode;

+###org/springframework/test/context/BootstrapWith
@4.1.0.RELEASE
+#value()Ljava/lang/Class;

+###org/springframework/test/context/CacheAwareContextLoaderDelegate
@3.2.2.RELEASE
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
@4.1.0.RELEASE
+#closeContext(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V
@5.2.0.RELEASE
+#isContextLoaded(Lorg/springframework/test/context/MergedContextConfiguration;)Z

+###org/springframework/test/context/ActiveProfiles
@3.1.0.RELEASE
+#value()[Ljava/lang/String;
+#profiles()[Ljava/lang/String;
+#inheritProfiles()Z
@4.0.0.RELEASE
+#resolver()Ljava/lang/Class;

+###org/springframework/test/context/TestContextBootstrapper
@4.1.0.RELEASE
+#setBootstrapContext(Lorg/springframework/test/context/BootstrapContext;)V
+#getBootstrapContext()Lorg/springframework/test/context/BootstrapContext;
+#getTestExecutionListeners()Ljava/util/List;
+#buildMergedContextConfiguration()Lorg/springframework/test/context/MergedContextConfiguration;
@4.2.0.RELEASE
+#buildTestContext()Lorg/springframework/test/context/TestContext;

+###org/springframework/test/context/TestPropertySource
@4.1.0.RELEASE
+#value()[Ljava/lang/String;
+#locations()[Ljava/lang/String;
+#inheritLocations()Z
+#properties()[Ljava/lang/String;
+#inheritProperties()Z

+###org/springframework/test/context/BootstrapContext
@4.1.0.RELEASE
+#getTestClass()Ljava/lang/Class;
+#getCacheAwareContextLoaderDelegate()Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;

+###org/springframework/test/context/TestExecutionListeners$MergeMode
@4.1.0.RELEASE
+#values()[Lorg/springframework/test/context/TestExecutionListeners$MergeMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/context/TestExecutionListeners$MergeMode;

+###org/springframework/test/context/junit4/AbstractJUnit4SpringContextTests
@2.5
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V

+###org/springframework/test/context/junit4/SpringJUnit4ClassRunner
@2.5
+#<init>(Ljava/lang/Class;)V
@2.5.6
+#run(Lorg/junit/runner/notification/RunNotifier;)V
@3.0.0.RELEASE
+#getDescription()Lorg/junit/runner/Description;

+###org/springframework/test/context/junit4/SpringRunner
@4.3.0.RELEASE
+#<init>(Ljava/lang/Class;)V

+###org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests
@2.5
+#<init>()V
+#setDataSource(Ljavax/sql/DataSource;)V
@2.5.2
+#setSqlScriptEncoding(Ljava/lang/String;)V

+###org/springframework/test/context/junit4/rules/SpringMethodRule
@4.2.0.RELEASE
+#<init>()V
+#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;

+###org/springframework/test/context/junit4/rules/SpringClassRule
@4.2.0.RELEASE
+#<init>()V
+#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;

+###org/springframework/test/context/junit4/statements/RunPrepareTestInstanceCallbacks
@4.2.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Lorg/springframework/test/context/TestContextManager;)V
+#evaluate()V

+###org/springframework/test/context/junit4/statements/SpringRepeat
@3.0.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/reflect/Method;I)V
+#evaluate()V
@4.2.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/reflect/Method;)V

+###org/springframework/test/context/junit4/statements/RunAfterTestExecutionCallbacks
@5.0.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/test/context/TestContextManager;)V
+#evaluate()V

+###org/springframework/test/context/junit4/statements/RunBeforeTestMethodCallbacks
@3.0.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/test/context/TestContextManager;)V
+#evaluate()V

+###org/springframework/test/context/junit4/statements/ProfileValueChecker
@4.2.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/Class;Ljava/lang/reflect/Method;)V
+#evaluate()V

+###org/springframework/test/context/junit4/statements/SpringFailOnTimeout
@3.0.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;J)V
+#evaluate()V
@4.2.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/reflect/Method;)V

+###org/springframework/test/context/junit4/statements/RunBeforeTestClassCallbacks
@3.0.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Lorg/springframework/test/context/TestContextManager;)V
+#evaluate()V

+###org/springframework/test/context/junit4/statements/RunBeforeTestExecutionCallbacks
@5.0.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/test/context/TestContextManager;)V
+#evaluate()V

+###org/springframework/test/context/junit4/statements/RunAfterTestClassCallbacks
@3.0.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Lorg/springframework/test/context/TestContextManager;)V
+#evaluate()V

+###org/springframework/test/context/junit4/statements/RunAfterTestMethodCallbacks
@3.0.0.RELEASE
+#<init>(Lorg/junit/runners/model/Statement;Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/test/context/TestContextManager;)V
+#evaluate()V

+###org/springframework/test/context/MergedContextConfiguration
@3.1.0.RELEASE
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;)V
+#getTestClass()Ljava/lang/Class;
+#getLocations()[Ljava/lang/String;
+#getClasses()[Ljava/lang/Class;
+#getActiveProfiles()[Ljava/lang/String;
+#getContextLoader()Lorg/springframework/test/context/ContextLoader;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.2.0.RELEASE
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;)V
+#getContextInitializerClasses()Ljava/util/Set;
@3.2.2.RELEASE
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V
+#getParent()Lorg/springframework/test/context/MergedContextConfiguration;
+#getParentApplicationContext()Lorg/springframework/context/ApplicationContext;
@4.0.4.RELEASE
+#hasLocations()Z
+#hasClasses()Z
+#hasResources()Z
@4.1.0.RELEASE
+#<init>(Lorg/springframework/test/context/MergedContextConfiguration;)V
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V
+#getPropertySourceLocations()[Ljava/lang/String;
+#getPropertySourceProperties()[Ljava/lang/String;
@4.3.0.RELEASE
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V
+#getContextCustomizers()Ljava/util/Set;

+###org/springframework/test/context/ContextHierarchy
@3.2.2.RELEASE
+#value()[Lorg/springframework/test/context/ContextConfiguration;

+###org/springframework/test/context/SmartContextLoader
@3.1.0.RELEASE
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
@6.0.0
+#processLocations(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;

+###org/springframework/test/context/TestContext
@2.5
+#<init>(Ljava/lang/Class;Lorg/springframework/test/context/ContextCache;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#getTestClass()Ljava/lang/Class;
+#getTestInstance()Ljava/lang/Object;
+#getTestMethod()Ljava/lang/reflect/Method;
+#getTestException()Ljava/lang/Throwable;
+#markApplicationContextDirty()V
+#toString()Ljava/lang/String;
@2.5.3
-#<init>(Ljava/lang/Class;Lorg/springframework/test/context/ContextCache;)V
@3.2.2.RELEASE
*#markApplicationContextDirty()V[deprecated]
+#markApplicationContextDirty(Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V
@4.0.0.RELEASE
+#updateState(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V
-#markApplicationContextDirty()V[deprecated]
-#toString()Ljava/lang/String;
@5.2.0.RELEASE
+#hasApplicationContext()Z
+#publishEvent(Ljava/util/function/Function;)V

+###org/springframework/test/context/web/AnnotationConfigWebContextLoader
@3.2.0.RELEASE
+#<init>()V
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V

+###org/springframework/test/context/web/WebMergedContextConfiguration
@3.2.0.RELEASE
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;)V
+#getResourceBasePath()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.2.2.RELEASE
*#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;)V[deprecated]
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V
@4.1.0.RELEASE
*#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V[deprecated]
+#<init>(Lorg/springframework/test/context/MergedContextConfiguration;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V
@4.2.0.RELEASE
-#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;)V[deprecated]
@4.3.0.RELEASE
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V
@5.0.0.RELEASE
-#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/util/Set;[Ljava/lang/String;Ljava/lang/String;Lorg/springframework/test/context/ContextLoader;Lorg/springframework/test/context/CacheAwareContextLoaderDelegate;Lorg/springframework/test/context/MergedContextConfiguration;)V[deprecated]

+###org/springframework/test/context/web/WebTestContextBootstrapper
@4.1.0.RELEASE
+#<init>()V

+###org/springframework/test/context/web/ServletTestExecutionListener
@3.2.0.RELEASE
+#<init>()V
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
@4.1.0.RELEASE
+#getOrder()I

+###org/springframework/test/context/web/AbstractGenericWebContextLoader
@3.2.0.RELEASE
+#<init>()V
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ConfigurableApplicationContext;
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
@6.0.0
+#loadContextForAotProcessing(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/web/context/support/GenericWebApplicationContext;
+#loadContextForAotRuntime(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/web/context/support/GenericWebApplicationContext;
+#loadContextForAotRuntime(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/context/ApplicationContext;
+#loadContextForAotProcessing(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
-#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ConfigurableApplicationContext;

+###org/springframework/test/context/web/WebDelegatingSmartContextLoader
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/test/context/web/WebAppConfiguration
@3.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/test/context/web/GenericGroovyXmlWebContextLoader
@4.1.0.RELEASE
+#<init>()V

+###org/springframework/test/context/web/GenericXmlWebContextLoader
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/test/context/ContextConfigurationAttributes
@3.1.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/test/context/ContextConfiguration;)V
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;ZLjava/lang/Class;)V
+#getDeclaringClass()Ljava/lang/Class;
+#getLocations()[Ljava/lang/String;
+#setLocations([Ljava/lang/String;)V
+#getClasses()[Ljava/lang/Class;
+#setClasses([Ljava/lang/Class;)V
+#hasLocations()Z
+#hasClasses()Z
+#hasResources()Z
+#isInheritLocations()Z
+#getContextLoaderClass()Ljava/lang/Class;
+#toString()Ljava/lang/String;
@3.2.0.RELEASE
*#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;ZLjava/lang/Class;)V[deprecated]
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Z[Ljava/lang/Class;ZLjava/lang/Class;)V
+#getInitializers()[Ljava/lang/Class;
+#isInheritInitializers()Z
@3.2.2.RELEASE
+#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Z[Ljava/lang/Class;ZLjava/lang/String;Ljava/lang/Class;)V
+#getName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.2.11.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/core/annotation/AnnotationAttributes;)V
@4.2.0.RELEASE
-#<init>(Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;ZLjava/lang/Class;)V[deprecated]
@4.3.0.RELEASE
+#<init>(Ljava/lang/Class;)V

+###org/springframework/test/context/TestContextManager
@2.5
+#<init>(Ljava/lang/Class;)V
+#prepareTestInstance(Ljava/lang/Object;)V
+#beforeTestMethod(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#afterTestMethod(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V
+#getTestExecutionListeners()Ljava/util/List;
+#registerTestExecutionListeners([Lorg/springframework/test/context/TestExecutionListener;)V
@3.0.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#beforeTestClass()V
+#afterTestClass()V
@4.0.4.RELEASE
*#<init>(Ljava/lang/Class;Ljava/lang/String;)V[deprecated]
@4.1.0.RELEASE
+#registerTestExecutionListeners(Ljava/util/List;)V
-#<init>(Ljava/lang/Class;Ljava/lang/String;)V[deprecated]
@4.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContextBootstrapper;)V
@4.3.0.RELEASE
+#getTestContext()Lorg/springframework/test/context/TestContext;
@5.0.0.RELEASE
+#beforeTestExecution(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#afterTestExecution(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V

+###org/springframework/test/context/cache/ContextCacheUtils
@4.3.0.RELEASE
+#<init>()V
+#retrieveMaxCacheSize()I

+###org/springframework/test/context/cache/DefaultContextCache
@4.2.0.RELEASE
+#<init>()V
+#contains(Lorg/springframework/test/context/MergedContextConfiguration;)Z
+#get(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#put(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContext;)V
+#remove(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V
+#size()I
+#getParentContextCount()I
+#getHitCount()I
+#getMissCount()I
+#reset()V
+#clear()V
+#clearStatistics()V
+#logStatistics()V
+#toString()Ljava/lang/String;
@4.3.0.RELEASE
+#<init>(I)V
+#getMaxSize()I

+###org/springframework/test/context/cache/ContextCache
@4.2.0.RELEASE
+#contains(Lorg/springframework/test/context/MergedContextConfiguration;)Z
+#get(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#put(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContext;)V
+#remove(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V
+#size()I
+#getParentContextCount()I
+#getHitCount()I
+#getMissCount()I
+#reset()V
+#clear()V
+#clearStatistics()V
+#logStatistics()V

+###org/springframework/test/context/cache/DefaultCacheAwareContextLoaderDelegate
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/test/context/cache/ContextCache;)V
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#closeContext(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/test/annotation/DirtiesContext$HierarchyMode;)V
@5.2.0.RELEASE
+#isContextLoaded(Lorg/springframework/test/context/MergedContextConfiguration;)Z

+###org/springframework/test/context/ActiveProfilesResolver
@4.0.0.RELEASE
+#resolve(Ljava/lang/Class;)[Ljava/lang/String;

+###org/springframework/test/context/transaction/BeforeTransaction
@2.5

+###org/springframework/test/context/transaction/AfterTransaction
@2.5

+###org/springframework/test/context/transaction/TestContextTransactionUtils
@4.1.0.RELEASE
+#retrieveDataSource(Lorg/springframework/test/context/TestContext;Ljava/lang/String;)Ljavax/sql/DataSource;
+#retrieveTransactionManager(Lorg/springframework/test/context/TestContext;Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;
+#createDelegatingTransactionAttribute(Lorg/springframework/test/context/TestContext;Lorg/springframework/transaction/interceptor/TransactionAttribute;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@4.3.15.RELEASE
+#<init>()V
@5.0.0.RELEASE
-#<init>()V
@5.0.5.RELEASE
+#<init>()V

+###org/springframework/test/context/transaction/TestTransaction
@4.1.0.RELEASE
+#<init>()V
+#isActive()Z
+#isFlaggedForRollback()Z
+#flagForRollback()V
+#flagForCommit()V
+#start()V
+#end()V
@5.1.0.RELEASE
-#<init>()V

+###org/springframework/test/context/transaction/TransactionalTestExecutionListener
@2.5
+#<init>()V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
@4.1.0.RELEASE
+#getOrder()I

+###org/springframework/test/context/junit/jupiter/SpringExtension
@5.0.0.RELEASE
+#<init>()V
+#beforeAll(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#afterAll(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#postProcessTestInstance(Ljava/lang/Object;Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#beforeEach(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#beforeTestExecution(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#afterTestExecution(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#afterEach(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#supportsParameter(Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Z
+#resolveParameter(Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Ljava/lang/Object;
+#getApplicationContext(Lorg/junit/jupiter/api/extension/ExtensionContext;)Lorg/springframework/context/ApplicationContext;

+###org/springframework/test/context/junit/jupiter/web/SpringJUnitWebConfig
@5.0.0.RELEASE
+#value()[Ljava/lang/Class;
+#classes()[Ljava/lang/Class;
+#locations()[Ljava/lang/String;
+#initializers()[Ljava/lang/Class;
+#inheritLocations()Z
+#inheritInitializers()Z
+#name()Ljava/lang/String;
+#resourcePath()Ljava/lang/String;

+###org/springframework/test/context/junit/jupiter/DisabledIf
@5.0.0.RELEASE
+#value()Ljava/lang/String;
+#expression()Ljava/lang/String;
+#reason()Ljava/lang/String;
+#loadContext()Z

+###org/springframework/test/context/junit/jupiter/EnabledIfCondition
@5.0.0.RELEASE
+#<init>()V
+#evaluateExecutionCondition(Lorg/junit/jupiter/api/extension/ExtensionContext;)Lorg/junit/jupiter/api/extension/ConditionEvaluationResult;

+###org/springframework/test/context/junit/jupiter/DisabledIfCondition
@5.0.0.RELEASE
+#<init>()V
+#evaluateExecutionCondition(Lorg/junit/jupiter/api/extension/ExtensionContext;)Lorg/junit/jupiter/api/extension/ConditionEvaluationResult;

+###org/springframework/test/context/junit/jupiter/EnabledIf
@5.0.0.RELEASE
+#value()Ljava/lang/String;
+#expression()Ljava/lang/String;
+#reason()Ljava/lang/String;
+#loadContext()Z

+###org/springframework/test/context/junit/jupiter/SpringJUnitConfig
@5.0.0.RELEASE
+#value()[Ljava/lang/Class;
+#classes()[Ljava/lang/Class;
+#locations()[Ljava/lang/String;
+#initializers()[Ljava/lang/Class;
+#inheritLocations()Z
+#inheritInitializers()Z
+#name()Ljava/lang/String;

+###org/springframework/test/context/TestExecutionListener
@2.5
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
@3.0.0.RELEASE
+#beforeTestClass(Lorg/springframework/test/context/TestContext;)V
+#afterTestClass(Lorg/springframework/test/context/TestContext;)V
@5.0.0.RELEASE
+#beforeTestExecution(Lorg/springframework/test/context/TestContext;)V
+#afterTestExecution(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/util/TestContextResourceUtils
@4.1.0.RELEASE
+#convertToClasspathResourcePaths(Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/String;
+#convertToResources(Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/String;)[Lorg/springframework/core/io/Resource;
@4.2.0.RELEASE
+#convertToResourceList(Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/String;)Ljava/util/List;
@5.0.0.RELEASE
+#<init>()V
@5.2.0.RELEASE
+#convertToClasspathResourcePaths(Ljava/lang/Class;Z[Ljava/lang/String;)[Ljava/lang/String;

+###org/springframework/test/context/ContextConfiguration
@2.5
+#locations()[Ljava/lang/String;
+#inheritLocations()Z
+#loader()Ljava/lang/Class;
@3.0.0.RELEASE
+#value()[Ljava/lang/String;
@3.1.0.RELEASE
+#classes()[Ljava/lang/Class;
@3.2.0.RELEASE
+#initializers()[Ljava/lang/Class;
+#inheritInitializers()Z
@3.2.2.RELEASE
+#name()Ljava/lang/String;

+###org/springframework/test/web/client/ResponseCreator
@3.2.0.RELEASE
+#createResponse(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/test/web/client/UnorderedRequestExpectationManager
@4.3.0.RELEASE
+#<init>()V
+#validateRequestInternal(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;
+#reset()V
@5.0.3.RELEASE
+#matchRequest(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/test/web/client/RequestExpectation;
-#validateRequestInternal(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/test/web/client/ResponseActions
@3.2.0.RELEASE
+#andExpect(Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;
+#andRespond(Lorg/springframework/test/web/client/ResponseCreator;)V

+###org/springframework/test/web/client/RequestExpectationManager
@4.3.0.RELEASE
+#expectRequest(Lorg/springframework/test/web/client/ExpectedCount;Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;
+#validateRequest(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;
+#verify()V
+#reset()V
@5.3.4
+#verify(Ljava/time/Duration;)V

+###org/springframework/test/web/client/RequestMatcher
@3.2.0.RELEASE
+#match(Lorg/springframework/http/client/ClientHttpRequest;)V

+###org/springframework/test/web/client/RequestExpectation
@4.3.0.RELEASE
+#hasRemainingCount()Z
+#isSatisfied()Z
@5.0.3.RELEASE
+#incrementAndValidate()V

+###org/springframework/test/web/client/AbstractRequestExpectationManager
@4.3.0.RELEASE
+#<init>()V
+#expectRequest(Lorg/springframework/test/web/client/ExpectedCount;Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;
+#validateRequest(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;
+#verify()V
+#reset()V
@5.3.4
+#verify(Ljava/time/Duration;)V

+###org/springframework/test/web/client/match/XpathRequestMatchers
@3.2.0.RELEASE
+#node(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#exists()Lorg/springframework/test/web/client/RequestMatcher;
+#doesNotExist()Lorg/springframework/test/web/client/RequestMatcher;
+#nodeCount(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#nodeCount(I)Lorg/springframework/test/web/client/RequestMatcher;
+#string(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#string(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
+#number(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#number(Ljava/lang/Double;)Lorg/springframework/test/web/client/RequestMatcher;
+#booleanValue(Ljava/lang/Boolean;)Lorg/springframework/test/web/client/RequestMatcher;

+###org/springframework/test/web/client/match/MockRestRequestMatchers
@3.2.0.RELEASE
+#anything()Lorg/springframework/test/web/client/RequestMatcher;
+#requestTo(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#requestTo(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/test/web/client/RequestMatcher;
+#requestTo(Ljava/net/URI;)Lorg/springframework/test/web/client/RequestMatcher;
+#header(Ljava/lang/String;[Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
+#content()Lorg/springframework/test/web/client/match/ContentRequestMatchers;
+#jsonPath(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/client/match/JsonPathRequestMatchers;
+#jsonPath(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#xpath(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/client/match/XpathRequestMatchers;
+#xpath(Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)Lorg/springframework/test/web/client/match/XpathRequestMatchers;
@3.2.18.RELEASE
+#<init>()V
@4.0.0.RELEASE
-#<init>()V
@4.2.0.RELEASE
+#<init>()V
@4.3.5.RELEASE
+#queryParam(Ljava/lang/String;[Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#queryParam(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
@5.0.0.RELEASE
+#requestToUriTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/client/RequestMatcher;
@5.2.0.RELEASE
+#headerDoesNotExist(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
@6.0.5
+#queryParam(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#header(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;

+###org/springframework/test/web/client/match/JsonPathRequestMatchers
@3.2.0.RELEASE
+#value(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#value(Ljava/lang/Object;)Lorg/springframework/test/web/client/RequestMatcher;
+#exists()Lorg/springframework/test/web/client/RequestMatcher;
+#doesNotExist()Lorg/springframework/test/web/client/RequestMatcher;
+#isArray()Lorg/springframework/test/web/client/RequestMatcher;
@4.2.1.RELEASE
+#isEmpty()Lorg/springframework/test/web/client/RequestMatcher;
+#isNotEmpty()Lorg/springframework/test/web/client/RequestMatcher;
+#isString()Lorg/springframework/test/web/client/RequestMatcher;
+#isBoolean()Lorg/springframework/test/web/client/RequestMatcher;
+#isNumber()Lorg/springframework/test/web/client/RequestMatcher;
+#isMap()Lorg/springframework/test/web/client/RequestMatcher;
@4.3.3.RELEASE
+#value(Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/client/RequestMatcher;
@5.0.3.RELEASE
+#hasJsonPath()Lorg/springframework/test/web/client/RequestMatcher;
+#doesNotHaveJsonPath()Lorg/springframework/test/web/client/RequestMatcher;

+###org/springframework/test/web/client/match/ContentRequestMatchers
@3.2.0.RELEASE
+#contentType(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/RequestMatcher;
+#string(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#string(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
+#bytes([B)Lorg/springframework/test/web/client/RequestMatcher;
+#xml(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
+#node(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
+#source(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/client/RequestMatcher;
@3.2.1.RELEASE
+#contentTypeCompatibleWith(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
+#contentTypeCompatibleWith(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/RequestMatcher;
@4.3.0.RELEASE
+#formData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/test/web/client/RequestMatcher;
@5.0.5.RELEASE
+#json(Ljava/lang/String;)Lorg/springframework/test/web/client/RequestMatcher;
+#json(Ljava/lang/String;Z)Lorg/springframework/test/web/client/RequestMatcher;
@5.3.0
+#formDataContains(Ljava/util/Map;)Lorg/springframework/test/web/client/RequestMatcher;
+#multipartData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/test/web/client/RequestMatcher;
+#multipartDataContains(Ljava/util/Map;)Lorg/springframework/test/web/client/RequestMatcher;

+###org/springframework/test/web/client/AbstractRequestExpectationManager$RequestExpectationGroup
@4.3.0.RELEASE
+#getExpectations()Ljava/util/Set;
+#update(Lorg/springframework/test/web/client/RequestExpectation;)V
+#updateAll(Ljava/util/Collection;)V
+#findExpectation(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/test/web/client/RequestExpectation;
+#reset()V
@5.0.3.RELEASE
+#addAllExpectations(Ljava/util/Collection;)V
*#updateAll(Ljava/util/Collection;)V[deprecated]
@6.0.0
-#updateAll(Ljava/util/Collection;)V[deprecated]

+###org/springframework/test/web/client/MockRestServiceServer
@3.2.0.RELEASE
+#createServer(Lorg/springframework/web/client/RestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer;
+#createServer(Lorg/springframework/web/client/support/RestGatewaySupport;)Lorg/springframework/test/web/client/MockRestServiceServer;
+#expect(Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;
+#verify()V
@4.1.0.RELEASE
+#createServer(Lorg/springframework/web/client/AsyncRestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer;
@4.3.0.RELEASE
+#expect(Lorg/springframework/test/web/client/ExpectedCount;Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;
+#reset()V
+#bindTo(Lorg/springframework/web/client/RestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;
+#bindTo(Lorg/springframework/web/client/AsyncRestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;
+#bindTo(Lorg/springframework/web/client/support/RestGatewaySupport;)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;
@5.0.0.RELEASE
*#bindTo(Lorg/springframework/web/client/AsyncRestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;[deprecated]
*#createServer(Lorg/springframework/web/client/AsyncRestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer;[deprecated]
@5.3.4
+#verify(Ljava/time/Duration;)V
@6.0.0
-#bindTo(Lorg/springframework/web/client/AsyncRestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;[deprecated]
-#createServer(Lorg/springframework/web/client/AsyncRestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer;[deprecated]

+###org/springframework/test/web/client/DefaultRequestExpectation
@4.3.0.RELEASE
+#<init>(Lorg/springframework/test/web/client/ExpectedCount;Lorg/springframework/test/web/client/RequestMatcher;)V
+#andExpect(Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;
+#andRespond(Lorg/springframework/test/web/client/ResponseCreator;)V
+#match(Lorg/springframework/http/client/ClientHttpRequest;)V
+#createResponse(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;
+#hasRemainingCount()Z
+#isSatisfied()Z
@5.0.3.RELEASE
+#incrementAndValidate()V

+###org/springframework/test/web/client/ExpectedCount
@4.3.0.RELEASE
+#getMinCount()I
+#getMaxCount()I
+#once()Lorg/springframework/test/web/client/ExpectedCount;
+#manyTimes()Lorg/springframework/test/web/client/ExpectedCount;
+#times(I)Lorg/springframework/test/web/client/ExpectedCount;
+#min(I)Lorg/springframework/test/web/client/ExpectedCount;
+#max(I)Lorg/springframework/test/web/client/ExpectedCount;
+#between(II)Lorg/springframework/test/web/client/ExpectedCount;
@4.3.6.RELEASE
+#never()Lorg/springframework/test/web/client/ExpectedCount;
@5.0.0.RELEASE
+#twice()Lorg/springframework/test/web/client/ExpectedCount;

+###org/springframework/test/web/client/MockMvcClientHttpRequestFactory
@3.2.0.RELEASE
+#<init>(Lorg/springframework/test/web/servlet/MockMvc;)V
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;
@5.0.0.RELEASE
+#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;
@6.0.0
-#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;

+###org/springframework/test/web/client/DefaultRequestExpectation$RequestCount
@4.3.0.RELEASE
+#<init>(Lorg/springframework/test/web/client/ExpectedCount;)V
+#getExpectedCount()Lorg/springframework/test/web/client/ExpectedCount;
+#getMatchedRequestCount()I
+#incrementAndValidate()V
+#hasRemainingCount()Z
+#isSatisfied()Z

+###org/springframework/test/web/client/response/MockRestResponseCreators
@3.2.0.RELEASE
+#withSuccess()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withSuccess(Ljava/lang/String;Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withSuccess([BLorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withSuccess(Lorg/springframework/core/io/Resource;Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withCreatedEntity(Ljava/net/URI;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withNoContent()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withBadRequest()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withUnauthorizedRequest()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withServerError()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withStatus(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
@3.2.18.RELEASE
+#<init>()V
@4.0.0.RELEASE
-#<init>()V
@4.2.8.RELEASE
+#<init>()V
@4.3.0.RELEASE
-#<init>()V
@4.3.3.RELEASE
+#<init>()V
@5.2.2.RELEASE
+#withException(Ljava/io/IOException;)Lorg/springframework/test/web/client/ResponseCreator;
@5.3.17
+#withRawStatus(I)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
@6.0.0
+#withAccepted()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withForbiddenRequest()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withResourceNotFound()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withRequestConflict()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withTooManyRequests()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withTooManyRequests(I)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withBadGateway()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withServiceUnavailable()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withGatewayTimeout()Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#withStatus(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
-#withStatus(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;

+###org/springframework/test/web/client/response/DefaultResponseCreator
@3.2.0.RELEASE
+#createResponse(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;
+#body(Ljava/lang/String;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#body([B)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#body(Lorg/springframework/core/io/Resource;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#location(Ljava/net/URI;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#headers(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
@6.0.0
+#body(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#cookies([Lorg/springframework/http/ResponseCookie;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;
+#cookies(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/test/web/client/response/DefaultResponseCreator;

+###org/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder
@4.3.0.RELEASE
+#ignoreExpectOrder(Z)Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;
+#build()Lorg/springframework/test/web/client/MockRestServiceServer;
+#build(Lorg/springframework/test/web/client/RequestExpectationManager;)Lorg/springframework/test/web/client/MockRestServiceServer;
@5.0.5.RELEASE
+#bufferContent()Lorg/springframework/test/web/client/MockRestServiceServer$MockRestServiceServerBuilder;

+###org/springframework/test/web/client/SimpleRequestExpectationManager
@4.3.0.RELEASE
+#<init>()V
+#validateRequestInternal(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;
+#reset()V
@5.0.3.RELEASE
-#validateRequestInternal(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/test/web/ModelAndViewAssert
@2.5
+#<init>()V
+#assertAndReturnModelAttributeOfType(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#assertCompareListModelAttribute(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;Ljava/util/List;)V
+#assertModelAttributeAvailable(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;)V
+#assertModelAttributeValue(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;Ljava/lang/Object;)V
+#assertModelAttributeValues(Lorg/springframework/web/servlet/ModelAndView;Ljava/util/Map;)V
+#assertSortAndCompareListModelAttribute(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;Ljava/util/List;Ljava/util/Comparator;)V
+#assertViewName(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/String;)V
@3.0.0.RELEASE
+#assertAndReturnModelAttributeOfType(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#assertCompareListModelAttribute(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/String;Ljava/util/List;)V
+#assertModelAttributeAvailable(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/String;)V
+#assertModelAttributeValue(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/String;Ljava/lang/Object;)V
+#assertSortAndCompareListModelAttribute(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/String;Ljava/util/List;Ljava/util/Comparator;)V
-#assertAndReturnModelAttributeOfType(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
-#assertCompareListModelAttribute(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;Ljava/util/List;)V
-#assertModelAttributeAvailable(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;)V
-#assertModelAttributeValue(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;Ljava/lang/Object;)V
-#assertSortAndCompareListModelAttribute(Lorg/springframework/web/servlet/ModelAndView;Ljava/lang/Object;Ljava/util/List;Ljava/util/Comparator;)V

+###org/springframework/test/web/servlet/result/MockMvcResultHandlers
@3.2.0.RELEASE
+#print()Lorg/springframework/test/web/servlet/ResultHandler;
@4.1.9.RELEASE
+#<init>()V
@4.2.0.RELEASE
+#log()Lorg/springframework/test/web/servlet/ResultHandler;
+#print(Ljava/io/OutputStream;)Lorg/springframework/test/web/servlet/ResultHandler;
+#print(Ljava/io/Writer;)Lorg/springframework/test/web/servlet/ResultHandler;

+###org/springframework/test/web/servlet/result/ModelResultMatchers
@3.2.0.RELEASE
+#attribute(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attributeExists([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attributeErrorCount(Ljava/lang/String;I)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attributeHasErrors([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attributeHasNoErrors([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attributeHasFieldErrors(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#errorCount(I)Lorg/springframework/test/web/servlet/ResultMatcher;
+#hasErrors()Lorg/springframework/test/web/servlet/ResultMatcher;
+#hasNoErrors()Lorg/springframework/test/web/servlet/ResultMatcher;
+#size(I)Lorg/springframework/test/web/servlet/ResultMatcher;
@3.2.4.RELEASE
+#attributeDoesNotExist([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.1.0.RELEASE
+#attributeHasFieldErrorCode(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attributeHasFieldErrorCode(Ljava/lang/String;Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/XpathResultMatchers
@3.2.0.RELEASE
+#node(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#exists()Lorg/springframework/test/web/servlet/ResultMatcher;
+#doesNotExist()Lorg/springframework/test/web/servlet/ResultMatcher;
+#nodeCount(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#nodeCount(I)Lorg/springframework/test/web/servlet/ResultMatcher;
+#string(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#string(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#number(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#number(Ljava/lang/Double;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#booleanValue(Ljava/lang/Boolean;)Lorg/springframework/test/web/servlet/ResultMatcher;
@5.2.2.RELEASE
+#nodeList(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/PrintingResultHandler
@3.2.0.RELEASE
+#handle(Lorg/springframework/test/web/servlet/MvcResult;)V

+###org/springframework/test/web/servlet/result/MockMvcResultMatchers
@3.2.0.RELEASE
+#request()Lorg/springframework/test/web/servlet/result/RequestResultMatchers;
+#handler()Lorg/springframework/test/web/servlet/result/HandlerResultMatchers;
+#model()Lorg/springframework/test/web/servlet/result/ModelResultMatchers;
+#view()Lorg/springframework/test/web/servlet/result/ViewResultMatchers;
+#flash()Lorg/springframework/test/web/servlet/result/FlashAttributeResultMatchers;
+#forwardedUrl(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#redirectedUrl(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#status()Lorg/springframework/test/web/servlet/result/StatusResultMatchers;
+#header()Lorg/springframework/test/web/servlet/result/HeaderResultMatchers;
+#content()Lorg/springframework/test/web/servlet/result/ContentResultMatchers;
+#jsonPath(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/result/JsonPathResultMatchers;
+#jsonPath(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#xpath(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/result/XpathResultMatchers;
+#xpath(Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/result/XpathResultMatchers;
+#cookie()Lorg/springframework/test/web/servlet/result/CookieResultMatchers;
@4.0.0.RELEASE
+#forwardedUrlPattern(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#redirectedUrlPattern(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.1.9.RELEASE
+#<init>()V
@5.0.0.RELEASE
+#forwardedUrlTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#redirectedUrlTemplate(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
@5.2.0.RELEASE
+#jsonPath(Ljava/lang/String;Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/CookieResultMatchers
@3.2.0.RELEASE
+#value(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#value(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#exists(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#doesNotExist(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#maxAge(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#maxAge(Ljava/lang/String;I)Lorg/springframework/test/web/servlet/ResultMatcher;
+#path(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#path(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#domain(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#domain(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#comment(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#comment(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#version(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#version(Ljava/lang/String;I)Lorg/springframework/test/web/servlet/ResultMatcher;
+#secure(Ljava/lang/String;Z)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.3.9.RELEASE
+#httpOnly(Ljava/lang/String;Z)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/HeaderResultMatchers
@3.2.0.RELEASE
+#string(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#string(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#longValue(Ljava/lang/String;J)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.0.0.RELEASE
+#doesNotExist(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.2.0.RELEASE
+#dateValue(Ljava/lang/String;J)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.3.0.RELEASE
+#stringValues(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#stringValues(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
@5.0.4.RELEASE
+#exists(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/StatusResultMatchers
@3.2.0.RELEASE
+#is(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#is(I)Lorg/springframework/test/web/servlet/ResultMatcher;
+#reason(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#reason(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#isContinue()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isSwitchingProtocols()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isProcessing()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isCheckpoint()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isOk()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isCreated()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isAccepted()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNonAuthoritativeInformation()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNoContent()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isResetContent()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isPartialContent()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isMultiStatus()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isAlreadyReported()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isImUsed()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isMultipleChoices()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isMovedPermanently()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isFound()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isMovedTemporarily()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isSeeOther()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNotModified()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isUseProxy()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isTemporaryRedirect()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isResumeIncomplete()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isBadRequest()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isUnauthorized()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isPaymentRequired()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isForbidden()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNotFound()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isMethodNotAllowed()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNotAcceptable()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isProxyAuthenticationRequired()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isRequestTimeout()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isConflict()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isGone()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isLengthRequired()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isPreconditionFailed()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isRequestEntityTooLarge()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isRequestUriTooLong()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isUnsupportedMediaType()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isRequestedRangeNotSatisfiable()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isExpectationFailed()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isIAmATeapot()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isInsufficientSpaceOnResource()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isMethodFailure()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isDestinationLocked()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isUnprocessableEntity()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isLocked()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isFailedDependency()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isUpgradeRequired()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isPreconditionRequired()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isTooManyRequests()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isRequestHeaderFieldsTooLarge()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isInternalServerError()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNotImplemented()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isBadGateway()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isServiceUnavailable()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isGatewayTimeout()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isHttpVersionNotSupported()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isVariantAlsoNegotiates()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isInsufficientStorage()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isLoopDetected()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isBandwidthLimitExceeded()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNotExtended()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNetworkAuthenticationRequired()Lorg/springframework/test/web/servlet/ResultMatcher;
@3.2.1.RELEASE
*#isInsufficientSpaceOnResource()Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]
*#isMethodFailure()Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]
*#isDestinationLocked()Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]
@4.0.2.RELEASE
+#is1xxInformational()Lorg/springframework/test/web/servlet/ResultMatcher;
+#is2xxSuccessful()Lorg/springframework/test/web/servlet/ResultMatcher;
+#is3xxRedirection()Lorg/springframework/test/web/servlet/ResultMatcher;
+#is4xxClientError()Lorg/springframework/test/web/servlet/ResultMatcher;
+#is5xxServerError()Lorg/springframework/test/web/servlet/ResultMatcher;
@4.1.0.RELEASE
*#isMovedTemporarily()Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]
*#isUseProxy()Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]
+#isPermanentRedirect()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isPayloadTooLarge()Lorg/springframework/test/web/servlet/ResultMatcher;
*#isRequestEntityTooLarge()Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]
+#isUriTooLong()Lorg/springframework/test/web/servlet/ResultMatcher;
*#isRequestUriTooLong()Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]
-#isResumeIncomplete()Lorg/springframework/test/web/servlet/ResultMatcher;
@4.3.0.RELEASE
+#isUnavailableForLegalReasons()Lorg/springframework/test/web/servlet/ResultMatcher;
@5.2.0.RELEASE
+#isTooEarly()Lorg/springframework/test/web/servlet/ResultMatcher;
@6.0.5
*#isCheckpoint()Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]
+#isEarlyHints()Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/ViewResultMatchers
@3.2.0.RELEASE
+#name(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#name(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/PrintingResultHandler$ResultValuePrinter
@3.2.0.RELEASE
+#printHeading(Ljava/lang/String;)V
+#printValue(Ljava/lang/String;Ljava/lang/Object;)V

+###org/springframework/test/web/servlet/result/ContentResultMatchers
@3.2.0.RELEASE
+#contentType(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#encoding(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#string(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#string(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#bytes([B)Lorg/springframework/test/web/servlet/ResultMatcher;
+#xml(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#node(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#source(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
@3.2.1.RELEASE
+#contentTypeCompatibleWith(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#contentTypeCompatibleWith(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.1.0.RELEASE
+#json(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.2.3.RELEASE
+#json(Ljava/lang/String;Z)Lorg/springframework/test/web/servlet/ResultMatcher;
@5.3.10
+#encoding(Ljava/nio/charset/Charset;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/FlashAttributeResultMatchers
@3.2.0.RELEASE
+#attribute(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attributeExists([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attributeCount(I)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/RequestResultMatchers
@3.2.0.RELEASE
+#asyncStarted()Lorg/springframework/test/web/servlet/ResultMatcher;
+#asyncNotStarted()Lorg/springframework/test/web/servlet/ResultMatcher;
+#asyncResult(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#asyncResult(Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attribute(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#attribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#sessionAttribute(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#sessionAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
@5.2.1.RELEASE
+#sessionAttributeDoesNotExist([Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/HandlerResultMatchers
@3.2.0.RELEASE
+#handlerType(Ljava/lang/Class;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#methodName(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#methodName(Ljava/lang/String;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#method(Ljava/lang/reflect/Method;)Lorg/springframework/test/web/servlet/ResultMatcher;
@4.3.0.RELEASE
+#methodCall(Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/result/JsonPathResultMatchers
@3.2.0.RELEASE
+#value(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#value(Ljava/lang/Object;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#exists()Lorg/springframework/test/web/servlet/ResultMatcher;
+#doesNotExist()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isArray()Lorg/springframework/test/web/servlet/ResultMatcher;
@4.2.1.RELEASE
+#isEmpty()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNotEmpty()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isString()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isBoolean()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isNumber()Lorg/springframework/test/web/servlet/ResultMatcher;
+#isMap()Lorg/springframework/test/web/servlet/ResultMatcher;
@4.3.0.RELEASE
+#prefix(Ljava/lang/String;)Lorg/springframework/test/web/servlet/result/JsonPathResultMatchers;
@4.3.15.RELEASE
+#value(Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/servlet/ResultMatcher;
@5.0.0.RELEASE
-#value(Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/servlet/ResultMatcher;
@5.0.3.RELEASE
+#hasJsonPath()Lorg/springframework/test/web/servlet/ResultMatcher;
+#doesNotHaveJsonPath()Lorg/springframework/test/web/servlet/ResultMatcher;
@5.0.5.RELEASE
+#value(Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/servlet/RequestBuilder
@3.2.0.RELEASE
+#buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
@6.0.0
+#buildRequest(Ljakarta/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
-#buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;

+###org/springframework/test/web/servlet/request/ConfigurableSmartRequestBuilder
@4.1.0.RELEASE
+#with(Lorg/springframework/test/web/servlet/request/RequestPostProcessor;)Lorg/springframework/test/web/servlet/request/ConfigurableSmartRequestBuilder;

+###org/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder
@3.2.0.RELEASE
+#file(Ljava/lang/String;[B)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
+#file(Lorg/springframework/mock/web/MockMultipartFile;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
@5.0.0.RELEASE
+#part([Ljavax/servlet/http/Part;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
@6.0.0
+#part([Ljakarta/servlet/http/Part;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
-#part([Ljavax/servlet/http/Part;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;

+###org/springframework/test/web/servlet/request/MockHttpServletRequestBuilder
@3.2.0.RELEASE
+#param(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#header(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#headers(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#accept([Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#content([B)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#content(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#cookie([Ljavax/servlet/http/Cookie;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#locale(Ljava/util/Locale;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#characterEncoding(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#requestAttr(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#sessionAttr(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#sessionAttrs(Ljava/util/Map;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#flashAttr(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#flashAttrs(Ljava/util/Map;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#session(Lorg/springframework/mock/web/MockHttpSession;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#principal(Ljava/security/Principal;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#contextPath(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#servletPath(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#pathInfo(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#secure(Z)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#with(Lorg/springframework/test/web/servlet/request/RequestPostProcessor;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#isMergeEnabled()Z
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
+#buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
@4.0.0.RELEASE
+#accept([Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@4.1.0.RELEASE
+#postProcessRequest(Lorg/springframework/mock/web/MockHttpServletRequest;)Lorg/springframework/mock/web/MockHttpServletRequest;
+#with(Lorg/springframework/test/web/servlet/request/RequestPostProcessor;)Lorg/springframework/test/web/servlet/request/ConfigurableSmartRequestBuilder;
@4.1.2.RELEASE
+#contentType(Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@4.2.4.RELEASE
+#params(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@4.3.6.RELEASE
+#locale([Ljava/util/Locale;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@5.2.2.RELEASE
+#queryParam(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@5.3.10
+#characterEncoding(Ljava/nio/charset/Charset;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@6.0.0
+#cookie([Ljakarta/servlet/http/Cookie;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#buildRequest(Ljakarta/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;
-#cookie([Ljavax/servlet/http/Cookie;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
-#buildRequest(Ljavax/servlet/ServletContext;)Lorg/springframework/mock/web/MockHttpServletRequest;

+###org/springframework/test/web/servlet/request/MockMvcRequestBuilders
@3.2.0.RELEASE
+#get(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#post(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#put(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#delete(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#request(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#fileUpload(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
+#asyncDispatch(Lorg/springframework/test/web/servlet/MvcResult;)Lorg/springframework/test/web/servlet/RequestBuilder;
@3.2.1.RELEASE
+#options(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@3.2.7.RELEASE
+#<init>()V
+#patch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@4.0.0.RELEASE
-#<init>()V
-#patch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@4.0.1.RELEASE
+#<init>()V
+#patch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@4.0.3.RELEASE
+#get(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#post(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#put(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#patch(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#delete(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#options(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#request(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#fileUpload(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
@4.1.0.RELEASE
+#head(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
+#head(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@4.3.0.RELEASE
+#request(Ljava/lang/String;Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;
@5.0.0.RELEASE
+#multipart(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
+#multipart(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
*#fileUpload(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;[deprecated]
*#fileUpload(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;[deprecated]
@5.3.21
+#multipart(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
@5.3.22
+#multipart(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
@6.0.0
-#fileUpload(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;[deprecated]
-#fileUpload(Ljava/net/URI;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;[deprecated]

+###org/springframework/test/web/servlet/request/RequestPostProcessor
@3.2.0.RELEASE
+#postProcessRequest(Lorg/springframework/mock/web/MockHttpServletRequest;)Lorg/springframework/mock/web/MockHttpServletRequest;

+###org/springframework/test/web/servlet/MockMvcBuilderSupport
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/test/web/servlet/MvcResult
@3.2.0.RELEASE
+#getRequest()Lorg/springframework/mock/web/MockHttpServletRequest;
+#getResponse()Lorg/springframework/mock/web/MockHttpServletResponse;
+#getHandler()Ljava/lang/Object;
+#getInterceptors()[Lorg/springframework/web/servlet/HandlerInterceptor;
+#getModelAndView()Lorg/springframework/web/servlet/ModelAndView;
+#getResolvedException()Ljava/lang/Exception;
+#getFlashMap()Lorg/springframework/web/servlet/FlashMap;
+#getAsyncResult()Ljava/lang/Object;
+#getAsyncResult(J)Ljava/lang/Object;

+###org/springframework/test/web/servlet/DispatcherServletCustomizer
@4.3.4.RELEASE
+#customize(Lorg/springframework/web/servlet/DispatcherServlet;)V

+###org/springframework/test/web/servlet/ResultActions
@3.2.0.RELEASE
+#andExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/ResultActions;
+#andDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/ResultActions;
+#andReturn()Lorg/springframework/test/web/servlet/MvcResult;
@5.3.10
+#andExpectAll([Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/ResultActions;

+###org/springframework/test/web/servlet/MockMvcBuilder
@3.2.0.RELEASE
+#build()Lorg/springframework/test/web/servlet/MockMvc;

+###org/springframework/test/web/servlet/SmartRequestBuilder
@4.1.0.RELEASE
+#postProcessRequest(Lorg/springframework/mock/web/MockHttpServletRequest;)Lorg/springframework/mock/web/MockHttpServletRequest;

+###org/springframework/test/web/servlet/setup/SharedHttpSessionConfigurer
@5.0.0.RELEASE
+#<init>()V
+#afterConfigurerAdded(Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;)V
+#beforeMockMvcCreated(Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/request/RequestPostProcessor;
+#sharedHttpSession()Lorg/springframework/test/web/servlet/setup/SharedHttpSessionConfigurer;

+###org/springframework/test/web/servlet/setup/MockMvcBuilders
@3.2.0.RELEASE
+#<init>()V
+#webAppContextSetup(Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
+#standaloneSetup([Ljava/lang/Object;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
@5.1.0.RELEASE
-#<init>()V

+###org/springframework/test/web/servlet/setup/DefaultMockMvcBuilder
@3.2.0.RELEASE
+#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
+#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
+#defaultRequest(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
+#alwaysExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
+#alwaysDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
+#build()Lorg/springframework/test/web/servlet/MockMvc;
@3.2.1.RELEASE
+#dispatchOptions(Z)Lorg/springframework/test/web/servlet/MockMvcBuilder;
@3.2.2.RELEASE
+#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
+#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
+#defaultRequest(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
+#alwaysExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
+#alwaysDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
+#dispatchOptions(Z)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
-#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
-#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
-#defaultRequest(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
-#alwaysExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
-#alwaysDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/MockMvcBuilder;
-#dispatchOptions(Z)Lorg/springframework/test/web/servlet/MockMvcBuilder;
@4.0.1.RELEASE
-#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
-#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
-#defaultRequest(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
-#alwaysExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
-#alwaysDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
-#dispatchOptions(Z)Lorg/springframework/test/web/servlet/setup/DefaultMockMvcBuilder;
-#build()Lorg/springframework/test/web/servlet/MockMvc;

+###org/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder
@4.1.0.RELEASE
+#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#defaultRequest(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#alwaysExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#alwaysDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#dispatchOptions(Z)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#apply(Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
@5.3.0
+#addDispatcherServletCustomizer(Lorg/springframework/test/web/servlet/DispatcherServletCustomizer;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
@5.3.10
+#defaultResponseCharacterEncoding(Ljava/nio/charset/Charset;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
@6.0.0
+#addFilters([Ljakarta/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#addFilter(Ljakarta/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
-#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
-#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;

+###org/springframework/test/web/servlet/setup/MockMvcConfigurerAdapter
@4.1.0.RELEASE
+#<init>()V
+#afterConfigurerAdded(Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;)V
+#beforeMockMvcCreated(Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/request/RequestPostProcessor;

+###org/springframework/test/web/servlet/setup/AbstractMockMvcBuilder
@4.0.1.RELEASE
+#<init>()V
+#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#defaultRequest(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#alwaysExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#alwaysDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#dispatchOptions(Z)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#build()Lorg/springframework/test/web/servlet/MockMvc;
@4.1.0.RELEASE
+#apply(Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#apply(Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#dispatchOptions(Z)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#alwaysDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#alwaysExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#defaultRequest(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
@4.3.4.RELEASE
+#addDispatcherServletCustomizer(Lorg/springframework/test/web/servlet/DispatcherServletCustomizer;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
@5.3.0
+#addDispatcherServletCustomizer(Lorg/springframework/test/web/servlet/DispatcherServletCustomizer;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
@5.3.10
+#defaultResponseCharacterEncoding(Ljava/nio/charset/Charset;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#defaultResponseCharacterEncoding(Ljava/nio/charset/Charset;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
@6.0.0
+#addFilters([Ljakarta/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#addFilter(Ljakarta/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
+#addFilter(Ljakarta/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
+#addFilters([Ljakarta/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
-#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
-#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/AbstractMockMvcBuilder;
-#addFilter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;
-#addFilters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;

+###org/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder
@3.2.0.RELEASE
+#setMessageConverters([Lorg/springframework/http/converter/HttpMessageConverter;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setValidator(Lorg/springframework/validation/Validator;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setConversionService(Lorg/springframework/format/support/FormattingConversionService;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#addInterceptors([Lorg/springframework/web/servlet/HandlerInterceptor;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#addMappedInterceptors([Ljava/lang/String;[Lorg/springframework/web/servlet/HandlerInterceptor;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setAsyncRequestTimeout(J)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setCustomArgumentResolvers([Lorg/springframework/web/method/support/HandlerMethodArgumentResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setCustomReturnValueHandlers([Lorg/springframework/web/method/support/HandlerMethodReturnValueHandler;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setHandlerExceptionResolvers(Ljava/util/List;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setViewResolvers([Lorg/springframework/web/servlet/ViewResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setSingleView(Lorg/springframework/web/servlet/View;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setLocaleResolver(Lorg/springframework/web/servlet/LocaleResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setFlashMapManager(Lorg/springframework/web/servlet/FlashMapManager;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setUseSuffixPatternMatch(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#setUseTrailingSlashPatternMatch(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
@3.2.2.RELEASE
+#setHandlerExceptionResolvers([Lorg/springframework/web/servlet/HandlerExceptionResolver;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
@4.0.0.RELEASE
+#setRemoveSemicolonContent(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
+#addPlaceHolderValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
@4.2.0.RELEASE
+#setControllerAdvice([Ljava/lang/Object;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
@4.2.8.RELEASE
+#addPlaceholderValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
*#addPlaceHolderValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;[deprecated]
@4.3.0.RELEASE
-#addPlaceholderValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
@4.3.3.RELEASE
+#addPlaceholderValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
*#addPlaceHolderValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;[deprecated]
@4.3.7.RELEASE
+#setContentNegotiationManager(Lorg/springframework/web/accept/ContentNegotiationManager;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
@5.0.0.RELEASE
+#setCustomHandlerMapping(Ljava/util/function/Supplier;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
-#addPlaceHolderValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;[deprecated]
@5.2.4.RELEASE
*#setUseSuffixPatternMatch(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;[deprecated]
@5.3.0
+#setPatternParser(Lorg/springframework/web/util/pattern/PathPatternParser;)V
@6.0.0
+#setPatternParser(Lorg/springframework/web/util/pattern/PathPatternParser;)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;
*#setUseTrailingSlashPatternMatch(Z)Lorg/springframework/test/web/servlet/setup/StandaloneMockMvcBuilder;[deprecated]
-#setPatternParser(Lorg/springframework/web/util/pattern/PathPatternParser;)V

+###org/springframework/test/web/servlet/setup/MockMvcConfigurer
@4.1.0.RELEASE
+#afterConfigurerAdded(Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;)V
+#beforeMockMvcCreated(Lorg/springframework/test/web/servlet/setup/ConfigurableMockMvcBuilder;Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/request/RequestPostProcessor;

+###org/springframework/test/web/servlet/ResultMatcher
@3.2.0.RELEASE
+#match(Lorg/springframework/test/web/servlet/MvcResult;)V
@5.1.0.RELEASE
+#matchAll([Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
@5.3.10
*#matchAll([Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/ResultMatcher;[deprecated]

+###org/springframework/test/web/servlet/ResultHandler
@3.2.0.RELEASE
+#handle(Lorg/springframework/test/web/servlet/MvcResult;)V

+###org/springframework/test/web/servlet/MockMvc
@3.2.0.RELEASE
+#perform(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/ResultActions;
@5.1.0.RELEASE
+#getDispatcherServlet()Lorg/springframework/web/servlet/DispatcherServlet;

+###org/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder
@4.2.0.RELEASE
+#mockMvcSetup(Lorg/springframework/test/web/servlet/MockMvc;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;
+#webAppContextSetup(Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;
+#webAppContextSetup(Lorg/springframework/web/context/WebApplicationContext;Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;
+#javascriptEnabled(Z)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;
+#withDelegate(Lorg/springframework/test/web/servlet/htmlunit/webdriver/WebConnectionHtmlUnitDriver;)Lorg/springframework/test/web/servlet/htmlunit/webdriver/MockMvcHtmlUnitDriverBuilder;
+#build()Lorg/openqa/selenium/htmlunit/HtmlUnitDriver;

+###org/springframework/test/web/servlet/htmlunit/webdriver/WebConnectionHtmlUnitDriver
@4.2.0.RELEASE
+#<init>(Lcom/gargoylesoftware/htmlunit/BrowserVersion;)V
+#<init>()V
+#<init>(Z)V
+#<init>(Lorg/openqa/selenium/Capabilities;)V
+#getWebConnection()Lcom/gargoylesoftware/htmlunit/WebConnection;
+#setWebConnection(Lcom/gargoylesoftware/htmlunit/WebConnection;)V
@4.3.0.RELEASE
+#getWebClient()Lcom/gargoylesoftware/htmlunit/WebClient;

+###org/springframework/test/web/servlet/htmlunit/MockMvcWebConnection
@4.2.0.RELEASE
+#<init>(Lorg/springframework/test/web/servlet/MockMvc;)V
+#<init>(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;)V
+#getResponse(Lcom/gargoylesoftware/htmlunit/WebRequest;)Lcom/gargoylesoftware/htmlunit/WebResponse;
+#setWebClient(Lcom/gargoylesoftware/htmlunit/WebClient;)V
@4.2.3.RELEASE
+#close()V
@4.3.0.RELEASE
+#<init>(Lorg/springframework/test/web/servlet/MockMvc;Lcom/gargoylesoftware/htmlunit/WebClient;)V
+#<init>(Lorg/springframework/test/web/servlet/MockMvc;Lcom/gargoylesoftware/htmlunit/WebClient;Ljava/lang/String;)V
*#<init>(Lorg/springframework/test/web/servlet/MockMvc;)V[deprecated]
*#<init>(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;)V[deprecated]
@5.0.0.RELEASE
-#<init>(Lorg/springframework/test/web/servlet/MockMvc;)V[deprecated]
-#<init>(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;)V[deprecated]

+###org/springframework/test/web/servlet/htmlunit/HostRequestMatcher
@4.2.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#matches(Lcom/gargoylesoftware/htmlunit/WebRequest;)Z

+###org/springframework/test/web/servlet/htmlunit/WebRequestMatcher
@4.2.0.RELEASE
+#matches(Lcom/gargoylesoftware/htmlunit/WebRequest;)Z

+###org/springframework/test/web/servlet/htmlunit/MockMvcWebConnectionBuilderSupport
@4.2.0.RELEASE
+#contextPath(Ljava/lang/String;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebConnectionBuilderSupport;
+#alwaysUseMockMvc()Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebConnectionBuilderSupport;
+#useMockMvc([Lorg/springframework/test/web/servlet/htmlunit/WebRequestMatcher;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebConnectionBuilderSupport;
+#useMockMvcForHosts([Ljava/lang/String;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebConnectionBuilderSupport;

+###org/springframework/test/web/servlet/htmlunit/DelegatingWebConnection$DelegateWebConnection
@4.2.0.RELEASE
+#<init>(Lorg/springframework/test/web/servlet/htmlunit/WebRequestMatcher;Lcom/gargoylesoftware/htmlunit/WebConnection;)V

+###org/springframework/test/web/servlet/htmlunit/UrlRegexRequestMatcher
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/regex/Pattern;)V
+#matches(Lcom/gargoylesoftware/htmlunit/WebRequest;)Z

+###org/springframework/test/web/servlet/htmlunit/DelegatingWebConnection
@4.2.0.RELEASE
+#<init>(Lcom/gargoylesoftware/htmlunit/WebConnection;Ljava/util/List;)V
+#<init>(Lcom/gargoylesoftware/htmlunit/WebConnection;[Lorg/springframework/test/web/servlet/htmlunit/DelegatingWebConnection$DelegateWebConnection;)V
+#getResponse(Lcom/gargoylesoftware/htmlunit/WebRequest;)Lcom/gargoylesoftware/htmlunit/WebResponse;
@4.2.3.RELEASE
+#close()V

+###org/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder
@4.2.0.RELEASE
+#mockMvcSetup(Lorg/springframework/test/web/servlet/MockMvc;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;
+#webAppContextSetup(Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;
+#webAppContextSetup(Lorg/springframework/web/context/WebApplicationContext;Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;
+#withDelegate(Lcom/gargoylesoftware/htmlunit/WebClient;)Lorg/springframework/test/web/servlet/htmlunit/MockMvcWebClientBuilder;
+#build()Lcom/gargoylesoftware/htmlunit/WebClient;

+###org/springframework/test/web/reactive/server/WebTestClient$ControllerSpec
@5.0.0.RELEASE
+#controllerAdvice([Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#contentTypeResolver(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#corsMappings(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#pathMatching(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#argumentResolvers(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#httpMessageCodecs(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#formatters(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#validator(Lorg/springframework/validation/Validator;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#viewResolvers(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;

+###org/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec
@5.0.0.RELEASE

+###org/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec
@5.0.0.RELEASE
+#contentLength(J)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;
+#body(Lorg/springframework/web/reactive/function/BodyInserter;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#body(Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#syncBody(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
@5.2.0.RELEASE
+#bodyValue(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#body(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#body(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#body(Ljava/lang/Object;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
*#syncBody(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;[deprecated]

+###org/springframework/test/web/reactive/server/WebTestClient$UriSpec
@5.0.0.RELEASE
+#uri(Ljava/net/URI;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#uri(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#uri(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#uri(Ljava/util/function/Function;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;

+###org/springframework/test/web/reactive/server/WebTestClient$RouterFunctionSpec
@5.0.0.RELEASE
+#handlerStrategies(Lorg/springframework/web/reactive/function/server/HandlerStrategies;)Lorg/springframework/test/web/reactive/server/WebTestClient$RouterFunctionSpec;

+###org/springframework/test/web/reactive/server/HeaderAssertions
@5.0.0.RELEASE
+#valueEquals(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#valueMatches(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#cacheControl(Lorg/springframework/http/CacheControl;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#contentDisposition(Lorg/springframework/http/ContentDisposition;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#contentLength(J)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#expires(I)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#lastModified(I)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
@5.0.3.RELEASE
+#doesNotExist(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#contentType(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#contentTypeCompatibleWith(Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#contentTypeCompatibleWith(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
@5.0.4.RELEASE
+#exists(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
@5.0.9.RELEASE
+#expires(J)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#lastModified(J)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
-#expires(I)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
-#lastModified(I)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
@5.1.0.RELEASE
+#value(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#value(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
@5.3.0
+#valueEquals(Ljava/lang/String;J)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#valueEqualsDate(Ljava/lang/String;J)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#valuesMatch(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#values(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#values(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#location(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;

+###org/springframework/test/web/reactive/server/WebTestClient$BodySpec
@5.0.0.RELEASE
+#isEqualTo(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodySpec;
+#consumeWith(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodySpec;
+#returnResult()Lorg/springframework/test/web/reactive/server/EntityExchangeResult;
@5.1.0.RELEASE
+#value(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodySpec;
+#value(Ljava/util/function/Function;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodySpec;
+#value(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodySpec;

+###org/springframework/test/web/reactive/server/XpathAssertions
@5.1.0.RELEASE
+#isEqualTo(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#isEqualTo(Ljava/lang/Double;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#isEqualTo(Z)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#exists()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#doesNotExist()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#nodeCount(I)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#string(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#number(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#nodeCount(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#string(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#number(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#nodeCount(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/test/web/reactive/server/WebTestClientConfigurer
@5.0.0.RELEASE
+#afterConfigurerAdded(Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;Lorg/springframework/http/client/reactive/ClientHttpConnector;)V

+###org/springframework/test/web/reactive/server/WebTestClient$MockServerSpec
@5.0.0.RELEASE
+#webFilter([Lorg/springframework/web/server/WebFilter;)Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;
+#webSessionManager(Lorg/springframework/web/server/session/WebSessionManager;)Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;
+#apply(Lorg/springframework/test/web/reactive/server/MockServerConfigurer;)Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;
+#configureClient()Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#build()Lorg/springframework/test/web/reactive/server/WebTestClient;

+###org/springframework/test/web/reactive/server/WebTestClient
@5.0.0.RELEASE
+#get()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;
+#head()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;
+#post()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec;
+#put()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec;
+#patch()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec;
+#delete()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;
+#options()Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersUriSpec;
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec;
+#mutate()Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#mutateWith(Lorg/springframework/test/web/reactive/server/WebTestClientConfigurer;)Lorg/springframework/test/web/reactive/server/WebTestClient;
+#bindToController([Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$ControllerSpec;
+#bindToApplicationContext(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;
+#bindToRouterFunction(Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/test/web/reactive/server/WebTestClient$RouterFunctionSpec;
+#bindToWebHandler(Lorg/springframework/web/server/WebHandler;)Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;
+#bindToServer()Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
@5.0.2.RELEASE
+#bindToServer(Lorg/springframework/http/client/reactive/ClientHttpConnector;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;

+###org/springframework/test/web/reactive/server/EntityExchangeResult
@5.0.0.RELEASE
+#getResponseBody()Ljava/lang/Object;

+###org/springframework/test/web/reactive/server/WebTestClient$RequestBodyUriSpec
@5.0.0.RELEASE

+###org/springframework/test/web/reactive/server/WebTestClient$ListBodySpec
@5.0.0.RELEASE
+#hasSize(I)Lorg/springframework/test/web/reactive/server/WebTestClient$ListBodySpec;
+#contains([Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$ListBodySpec;
+#doesNotContain([Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$ListBodySpec;

+###org/springframework/test/web/reactive/server/JsonPathAssertions
@5.0.0.RELEASE
+#isEqualTo(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#exists()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#doesNotExist()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#isEmpty()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#isNotEmpty()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#isBoolean()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#isNumber()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#isArray()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#isMap()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
@5.0.3.RELEASE
+#hasJsonPath()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#doesNotHaveJsonPath()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
@5.1.0.RELEASE
+#value(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#value(Lorg/hamcrest/Matcher;Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#value(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#value(Ljava/util/function/Consumer;Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec
@5.0.0.RELEASE
+#isEmpty()Lorg/springframework/test/web/reactive/server/EntityExchangeResult;
+#json(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#jsonPath(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/JsonPathAssertions;
+#consumeWith(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#returnResult()Lorg/springframework/test/web/reactive/server/EntityExchangeResult;
@5.1.0.RELEASE
+#xml(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#xpath(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/XpathAssertions;
+#xpath(Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/XpathAssertions;
@5.3.16
+#json(Ljava/lang/String;Z)Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;

+###org/springframework/test/web/reactive/server/StatusAssertions
@5.0.0.RELEASE
+#isEqualTo(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isEqualTo(I)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isOk()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isCreated()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isAccepted()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isNoContent()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isFound()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isSeeOther()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isNotModified()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isTemporaryRedirect()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isPermanentRedirect()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isBadRequest()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isUnauthorized()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#isNotFound()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#reasonEquals(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#is1xxInformational()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#is2xxSuccessful()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#is3xxRedirection()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#is4xxClientError()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#is5xxServerError()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
@5.0.2.RELEASE
+#isForbidden()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
@5.1.0.RELEASE
+#value(Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#value(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
@6.0.0
+#isEqualTo(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
-#isEqualTo(Lorg/springframework/http/HttpStatus;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;

+###org/springframework/test/web/reactive/server/WebTestClient$ResponseSpec
@5.0.0.RELEASE
+#expectStatus()Lorg/springframework/test/web/reactive/server/StatusAssertions;
+#expectHeader()Lorg/springframework/test/web/reactive/server/HeaderAssertions;
+#expectBody(Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodySpec;
+#expectBody(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodySpec;
+#expectBodyList(Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/WebTestClient$ListBodySpec;
+#expectBodyList(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/test/web/reactive/server/WebTestClient$ListBodySpec;
+#expectBody()Lorg/springframework/test/web/reactive/server/WebTestClient$BodyContentSpec;
+#returnResult(Ljava/lang/Class;)Lorg/springframework/test/web/reactive/server/FluxExchangeResult;
+#returnResult(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/test/web/reactive/server/FluxExchangeResult;
+#returnResult()Lorg/springframework/test/web/reactive/server/FluxExchangeResult;
@5.0.1.RELEASE
-#returnResult()Lorg/springframework/test/web/reactive/server/FluxExchangeResult;
@5.3.0
+#expectCookie()Lorg/springframework/test/web/reactive/server/CookieAssertions;
@5.3.10
+#expectAll([Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec$ResponseSpecConsumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;

+###org/springframework/test/web/reactive/server/HttpHandlerConnector
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/HttpHandler;)V
+#connect(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;

+###org/springframework/test/web/reactive/server/MockServerConfigurer
@5.0.0.RELEASE
+#afterConfigureAdded(Lorg/springframework/test/web/reactive/server/WebTestClient$MockServerSpec;)V
+#beforeServerCreated(Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;)V

+###org/springframework/test/web/reactive/server/ExchangeResult
@5.0.0.RELEASE
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getUrl()Ljava/net/URI;
+#getUriTemplate()Ljava/lang/String;
+#getRequestHeaders()Lorg/springframework/http/HttpHeaders;
+#getRequestBodyContent()[B
+#getStatus()Lorg/springframework/http/HttpStatus;
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
+#getResponseCookies()Lorg/springframework/util/MultiValueMap;
+#getResponseBodyContent()[B
+#assertWithDiagnostics(Ljava/lang/Runnable;)V
+#toString()Ljava/lang/String;
@5.1.10.RELEASE
+#getRawStatusCode()I
@5.3.0
+#getMockServerResult()Ljava/lang/Object;
@6.0.0
+#getStatus()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()I[deprecated]
-#getStatus()Lorg/springframework/http/HttpStatus;

+###org/springframework/test/web/reactive/server/FluxExchangeResult
@5.0.0.RELEASE
+#getResponseBody()Lreactor/core/publisher/Flux;
+#getResponseBodyContent()[B
+#consumeWith(Ljava/util/function/Consumer;)V
@5.1.1.RELEASE
-#getResponseBodyContent()[B

+###org/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec
@5.0.0.RELEASE
+#accept([Lorg/springframework/http/MediaType;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#acceptCharset([Ljava/nio/charset/Charset;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#cookie(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#cookies(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#ifModifiedSince(Ljava/time/ZonedDateTime;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#ifNoneMatch([Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#attribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#attributes(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#exchange()Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;

+###org/springframework/test/web/reactive/server/WebTestClient$Builder
@5.0.0.RELEASE
+#baseUrl(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#uriBuilderFactory(Lorg/springframework/web/util/UriBuilderFactory;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#defaultHeader(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#defaultHeaders(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#defaultCookie(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#defaultCookies(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#filter(Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#filters(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#exchangeStrategies(Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#responseTimeout(Ljava/time/Duration;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#apply(Lorg/springframework/test/web/reactive/server/WebTestClientConfigurer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#build()Lorg/springframework/test/web/reactive/server/WebTestClient;
@5.1.12.RELEASE
+#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
@5.1.13.RELEASE
+#codecs(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
*#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;[deprecated]
@5.2.0.RELEASE
-#codecs(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
-#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;[deprecated]
@5.2.2.RELEASE
+#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
@5.2.3.RELEASE
+#codecs(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
*#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;[deprecated]
@5.3.5
+#entityExchangeResultConsumer(Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;

+###org/springframework/test/util/MetaAnnotationUtils
@4.1.0.RELEASE
+#findAnnotationDescriptor(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/test/util/MetaAnnotationUtils$AnnotationDescriptor;
+#findAnnotationDescriptorForTypes(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/test/util/MetaAnnotationUtils$UntypedAnnotationDescriptor;
@4.1.2.RELEASE
+#<init>()V
@6.0.0
-###org/springframework/test/util/MetaAnnotationUtils

+###org/springframework/test/util/MetaAnnotationUtils$UntypedAnnotationDescriptor
@4.1.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V
@4.2.0.RELEASE
+#synthesizeAnnotation()Ljava/lang/annotation/Annotation;
@6.0.0
-###org/springframework/test/util/MetaAnnotationUtils$UntypedAnnotationDescriptor

+###org/springframework/test/util/MetaAnnotationUtils$AnnotationDescriptor
@4.1.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V
+#getRootDeclaringClass()Ljava/lang/Class;
+#getDeclaringClass()Ljava/lang/Class;
+#getAnnotation()Ljava/lang/annotation/Annotation;
+#getAnnotationType()Ljava/lang/Class;
+#getAnnotationAttributes()Lorg/springframework/core/annotation/AnnotationAttributes;
+#getComposedAnnotation()Ljava/lang/annotation/Annotation;
+#getComposedAnnotationType()Ljava/lang/Class;
+#toString()Ljava/lang/String;
@4.2.0.RELEASE
+#synthesizeAnnotation()Ljava/lang/annotation/Annotation;
@6.0.0
-###org/springframework/test/util/MetaAnnotationUtils$AnnotationDescriptor

+###org/springframework/test/util/XmlExpectationsHelper
@3.2.0.RELEASE
+#<init>()V
+#assertNode(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertSource(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertXmlEqual(Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/test/util/AopTestUtils
@4.2.0.RELEASE
+#<init>()V
+#getTargetObject(Ljava/lang/Object;)Ljava/lang/Object;
+#getUltimateTargetObject(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/test/util/XpathExpectationsHelper
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)V
+#assertNode(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#exists(Ljava/lang/String;)V
+#doesNotExist(Ljava/lang/String;)V
+#assertNodeCount(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertNodeCount(Ljava/lang/String;I)V
+#assertString(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertString(Ljava/lang/String;Ljava/lang/String;)V
+#assertNumber(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertNumber(Ljava/lang/String;Ljava/lang/Double;)V
+#assertBoolean(Ljava/lang/String;Z)V
@4.2.0.RELEASE
+#assertNode([BLjava/lang/String;Lorg/hamcrest/Matcher;)V
+#exists([BLjava/lang/String;)V
+#doesNotExist([BLjava/lang/String;)V
+#assertNodeCount([BLjava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertNodeCount([BLjava/lang/String;I)V
+#assertString([BLjava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertString([BLjava/lang/String;Ljava/lang/String;)V
+#assertNumber([BLjava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertNumber([BLjava/lang/String;Ljava/lang/Double;)V
+#assertBoolean([BLjava/lang/String;Z)V
-#assertNode(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
-#exists(Ljava/lang/String;)V
-#doesNotExist(Ljava/lang/String;)V
-#assertNodeCount(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
-#assertNodeCount(Ljava/lang/String;I)V
-#assertString(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
-#assertString(Ljava/lang/String;Ljava/lang/String;)V
-#assertNumber(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
-#assertNumber(Ljava/lang/String;Ljava/lang/Double;)V
-#assertBoolean(Ljava/lang/String;Z)V
@5.1.0.RELEASE
+#evaluateXpath([BLjava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@5.2.2.RELEASE
+#assertNodeList([BLjava/lang/String;Lorg/hamcrest/Matcher;)V

+###org/springframework/test/util/ReflectionTestUtils
@2.5
+#<init>()V
+#setField(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)V
+#invokeSetterMethod(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)V
@2.5.5
+#setField(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
+#getField(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#invokeSetterMethod(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
+#invokeGetterMethod(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@3.1.0.RELEASE
+#invokeMethod(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@4.2.0.RELEASE
+#setField(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V
+#setField(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)V
+#setField(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)V
+#getField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#getField(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
@5.2.0.RELEASE
+#invokeMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeMethod(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/test/util/AssertionErrors
@3.2.0.RELEASE
+#fail(Ljava/lang/String;)V
+#fail(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#assertTrue(Ljava/lang/String;Z)V
+#assertEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
@4.3.0.RELEASE
+#<init>()V
@5.0.0.RELEASE
+#assertNotEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
@5.1.8.RELEASE
+#assertNotNull(Ljava/lang/String;Ljava/lang/Object;)V
@5.2.1.RELEASE
+#assertFalse(Ljava/lang/String;Z)V
+#assertNull(Ljava/lang/String;Ljava/lang/Object;)V

+###org/springframework/test/util/JsonPathExpectationsHelper
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;[Ljava/lang/Object;)V
+#assertValue(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#assertValue(Ljava/lang/String;Ljava/lang/Object;)V
+#assertValueIsArray(Ljava/lang/String;)V
+#exists(Ljava/lang/String;)V
+#doesNotExist(Ljava/lang/String;)V
@4.2.1.RELEASE
+#assertValueIsString(Ljava/lang/String;)V
+#assertValueIsBoolean(Ljava/lang/String;)V
+#assertValueIsNumber(Ljava/lang/String;)V
+#assertValueIsMap(Ljava/lang/String;)V
+#assertValueIsEmpty(Ljava/lang/String;)V
+#assertValueIsNotEmpty(Ljava/lang/String;)V
@4.3.3.RELEASE
+#assertValue(Ljava/lang/String;Lorg/hamcrest/Matcher;Ljava/lang/Class;)V
@5.0.3.RELEASE
+#hasJsonPath(Ljava/lang/String;)V
+#doesNotHaveJsonPath(Ljava/lang/String;)V
@5.1.0.RELEASE
+#evaluateJsonPath(Ljava/lang/String;)Ljava/lang/Object;
+#evaluateJsonPath(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/test/util/JsonExpectationsHelper
@4.1.0.RELEASE
+#<init>()V
+#assertJsonEqual(Ljava/lang/String;Ljava/lang/String;)V
+#assertJsonNotEqual(Ljava/lang/String;Ljava/lang/String;)V
@4.2.3.RELEASE
+#assertJsonEqual(Ljava/lang/String;Ljava/lang/String;Z)V
+#assertJsonNotEqual(Ljava/lang/String;Ljava/lang/String;Z)V

+###org/springframework/mock/http/client/MockClientHttpRequest
@3.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
+#getURI()Ljava/net/URI;
+#setURI(Ljava/net/URI;)V
+#getMethod()Lorg/springframework/http/HttpMethod;
+#setMethod(Lorg/springframework/http/HttpMethod;)V
+#setResponse(Lorg/springframework/http/client/ClientHttpResponse;)V
+#isExecuted()Z
+#execute()Lorg/springframework/http/client/ClientHttpResponse;
+#toString()Ljava/lang/String;
@5.0.0.RELEASE
+#getMethodValue()Ljava/lang/String;
@6.0.0
-#getMethodValue()Ljava/lang/String;
@6.0.3
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V

+###org/springframework/mock/http/client/reactive/MockClientHttpRequest
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)V
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getURI()Ljava/net/URI;
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#getBody()Lreactor/core/publisher/Flux;
+#setWriteHandler(Ljava/util/function/Function;)V
+#writeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#writeAndFlushWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#setComplete()Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#getBodyAsString()Lreactor/core/publisher/Mono;
@5.3.0
+#getNativeRequest()Ljava/lang/Object;

+###org/springframework/mock/http/client/reactive/MockClientHttpResponse
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#setBody(Lorg/reactivestreams/Publisher;)V
+#setBody(Ljava/lang/String;)V
+#setBody(Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#getBody()Lreactor/core/publisher/Flux;
+#getBodyAsString()Lreactor/core/publisher/Mono;
@5.0.6.RELEASE
+#getRawStatusCode()I
@5.1.9.RELEASE
+#<init>(I)V
@5.2.2.RELEASE
+#toString()Ljava/lang/String;
@6.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
-#<init>(Lorg/springframework/http/HttpStatus;)V
-#getStatusCode()Lorg/springframework/http/HttpStatus;
-#getRawStatusCode()I

+###org/springframework/mock/http/client/MockClientHttpResponse
@3.2.0.RELEASE
+#<init>([BLorg/springframework/http/HttpStatus;)V
+#<init>(Ljava/io/InputStream;Lorg/springframework/http/HttpStatus;)V
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getRawStatusCode()I
+#getStatusText()Ljava/lang/String;
+#close()V
@5.3.17
+#<init>([BI)V
+#<init>(Ljava/io/InputStream;I)V
@6.0.0
+#<init>([BLorg/springframework/http/HttpStatusCode;)V
+#<init>(Ljava/io/InputStream;Lorg/springframework/http/HttpStatusCode;)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()I[deprecated]
-#<init>([BLorg/springframework/http/HttpStatus;)V
-#<init>(Ljava/io/InputStream;Lorg/springframework/http/HttpStatus;)V
-#getStatusCode()Lorg/springframework/http/HttpStatus;
@6.0.3
+#<init>()V

+###org/springframework/mock/http/client/MockAsyncClientHttpRequest
@4.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
+#executeAsync()Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
-###org/springframework/mock/http/client/MockAsyncClientHttpRequest

+###org/springframework/mock/http/MockHttpInputMessage
@3.2.0.RELEASE
+#<init>([B)V
+#<init>(Ljava/io/InputStream;)V
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Ljava/io/InputStream;

+###org/springframework/mock/http/MockHttpOutputMessage
@3.2.0.RELEASE
+#<init>()V
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Ljava/io/OutputStream;
+#getBodyAsBytes()[B
+#getBodyAsString()Ljava/lang/String;
+#getBodyAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;

+###org/springframework/mock/http/server/reactive/MockServerHttpResponse
@5.0.0.RELEASE
+#<init>()V
+#setWriteHandler(Ljava/util/function/Function;)V
+#setComplete()Lreactor/core/publisher/Mono;
+#getBody()Lreactor/core/publisher/Flux;
+#getBodyAsString()Lreactor/core/publisher/Mono;
@5.0.1.RELEASE
+#getNativeResponse()Ljava/lang/Object;
@5.1.7.RELEASE
+#<init>(Lorg/springframework/core/io/buffer/DataBufferFactory;)V

+###org/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder
@5.0.0.RELEASE
+#contentLength(J)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
+#body(Lorg/reactivestreams/Publisher;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;
+#body(Ljava/lang/String;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;

+###org/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder
@5.0.0.RELEASE
+#contextPath(Ljava/lang/String;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#remoteAddress(Ljava/net/InetSocketAddress;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#cookie([Lorg/springframework/http/HttpCookie;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#cookies(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#headers(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#accept([Lorg/springframework/http/MediaType;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#acceptCharset([Ljava/nio/charset/Charset;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#ifModifiedSince(J)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#ifUnmodifiedSince(J)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#ifNoneMatch([Ljava/lang/String;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#range([Lorg/springframework/http/HttpRange;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#build()Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;
+#toExchange()Lorg/springframework/mock/http/server/reactive/MockServerWebExchange;
@5.0.1.RELEASE
+#acceptLanguageAsLocales([Ljava/util/Locale;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
-#toExchange()Lorg/springframework/mock/http/server/reactive/MockServerWebExchange;
@5.0.2.RELEASE
+#sslInfo(Lorg/springframework/http/server/reactive/SslInfo;)V
@5.0.3.RELEASE
+#queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
@5.2.3.RELEASE
+#localAddress(Ljava/net/InetSocketAddress;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;

+###org/springframework/mock/http/server/reactive/MockServerHttpRequest
@5.0.0.RELEASE
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getMethodValue()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getBody()Lreactor/core/publisher/Flux;
+#toExchange()Lorg/springframework/mock/http/server/reactive/MockServerWebExchange;
+#method(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
+#method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
+#get(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#head(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#post(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
+#put(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
+#patch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
+#delete(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
+#options(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;
@5.0.1.RELEASE
+#getNativeRequest()Ljava/lang/Object;
-#toExchange()Lorg/springframework/mock/http/server/reactive/MockServerWebExchange;
@5.2.3.RELEASE
+#getLocalAddress()Ljava/net/InetSocketAddress;
@5.2.7.RELEASE
+#method(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;
@6.0.0
*#method(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BodyBuilder;[deprecated]
-#getMethodValue()Ljava/lang/String;

+###org/springframework/mock/jndi/SimpleNamingContextBuilder
@2.5
+#<init>()V
+#getCurrentContextBuilder()Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;
+#emptyActivatedContextBuilder()Lorg/springframework/mock/jndi/SimpleNamingContextBuilder;
+#activate()V
+#clear()V
+#bind(Ljava/lang/String;Ljava/lang/Object;)V
+#createInitialContextFactory(Ljava/util/Hashtable;)Ljavax/naming/spi/InitialContextFactory;
@2.5.6
+#deactivate()V
@6.0.0
-###org/springframework/mock/jndi/SimpleNamingContextBuilder

+###org/springframework/mock/jndi/ExpectedLookupTemplate
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#addObject(Ljava/lang/String;Ljava/lang/Object;)V
+#lookup(Ljava/lang/String;)Ljava/lang/Object;
@6.0.0
-###org/springframework/mock/jndi/ExpectedLookupTemplate

+###org/springframework/mock/jndi/SimpleNamingContext
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Hashtable;Ljava/util/Hashtable;)V
+#list(Ljava/lang/String;)Ljavax/naming/NamingEnumeration;
+#listBindings(Ljava/lang/String;)Ljavax/naming/NamingEnumeration;
+#lookup(Ljava/lang/String;)Ljava/lang/Object;
+#lookupLink(Ljava/lang/String;)Ljava/lang/Object;
+#bind(Ljava/lang/String;Ljava/lang/Object;)V
+#unbind(Ljava/lang/String;)V
+#rebind(Ljava/lang/String;Ljava/lang/Object;)V
+#rename(Ljava/lang/String;Ljava/lang/String;)V
+#createSubcontext(Ljava/lang/String;)Ljavax/naming/Context;
+#destroySubcontext(Ljava/lang/String;)V
+#composeName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getEnvironment()Ljava/util/Hashtable;
+#addToEnvironment(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#removeFromEnvironment(Ljava/lang/String;)Ljava/lang/Object;
+#close()V
+#list(Ljavax/naming/Name;)Ljavax/naming/NamingEnumeration;
+#listBindings(Ljavax/naming/Name;)Ljavax/naming/NamingEnumeration;
+#lookup(Ljavax/naming/Name;)Ljava/lang/Object;
+#lookupLink(Ljavax/naming/Name;)Ljava/lang/Object;
+#bind(Ljavax/naming/Name;Ljava/lang/Object;)V
+#unbind(Ljavax/naming/Name;)V
+#rebind(Ljavax/naming/Name;Ljava/lang/Object;)V
+#rename(Ljavax/naming/Name;Ljavax/naming/Name;)V
+#createSubcontext(Ljavax/naming/Name;)Ljavax/naming/Context;
+#destroySubcontext(Ljavax/naming/Name;)V
+#getNameInNamespace()Ljava/lang/String;
+#getNameParser(Ljavax/naming/Name;)Ljavax/naming/NameParser;
+#getNameParser(Ljava/lang/String;)Ljavax/naming/NameParser;
+#composeName(Ljavax/naming/Name;Ljavax/naming/Name;)Ljavax/naming/Name;
@6.0.0
-###org/springframework/mock/jndi/SimpleNamingContext

+###org/springframework/mock/env/MockEnvironment
@3.2.0.RELEASE
+#<init>()V
+#setProperty(Ljava/lang/String;Ljava/lang/String;)V
+#withProperty(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/mock/env/MockEnvironment;

+###org/springframework/mock/env/MockPropertySource
@3.1.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/Properties;)V
+#<init>(Ljava/lang/String;Ljava/util/Properties;)V
+#setProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#withProperty(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/mock/env/MockPropertySource;

+###org/springframework/mock/web/MockCookie
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setSameSite(Ljava/lang/String;)V
+#getSameSite()Ljava/lang/String;
+#parse(Ljava/lang/String;)Lorg/springframework/mock/web/MockCookie;
@5.1.11.RELEASE
+#setExpires(Ljava/time/ZonedDateTime;)V
+#getExpires()Ljava/time/ZonedDateTime;
@5.2.0.RELEASE
-#setExpires(Ljava/time/ZonedDateTime;)V
-#getExpires()Ljava/time/ZonedDateTime;
@5.2.1.RELEASE
+#setExpires(Ljava/time/ZonedDateTime;)V
+#getExpires()Ljava/time/ZonedDateTime;
@5.2.14.RELEASE
+#toString()Ljava/lang/String;
@5.3.0
-#toString()Ljava/lang/String;
@5.3.5
+#toString()Ljava/lang/String;

+###org/springframework/mock/web/MockHttpSession
@2.5
+#<init>()V
+#<init>(Ljavax/servlet/ServletContext;)V
+#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
+#getCreationTime()J
+#getId()Ljava/lang/String;
+#access()V
+#getLastAccessedTime()J
+#getServletContext()Ljavax/servlet/ServletContext;
+#setMaxInactiveInterval(I)V
+#getMaxInactiveInterval()I
+#getSessionContext()Ljavax/servlet/http/HttpSessionContext;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getValue(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeNames()Ljava/util/Enumeration;
+#getValueNames()[Ljava/lang/String;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#putValue(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)V
+#removeValue(Ljava/lang/String;)V
+#clearAttributes()V
+#invalidate()V
+#isInvalid()Z
+#setNew(Z)V
+#isNew()Z
+#serializeState()Ljava/io/Serializable;
+#deserializeState(Ljava/io/Serializable;)V
@4.0.3.RELEASE
+#changeSessionId()Ljava/lang/String;
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljava/lang/String;)V
+#getServletContext()Ljakarta/servlet/ServletContext;
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
-#getServletContext()Ljavax/servlet/ServletContext;
-#getSessionContext()Ljavax/servlet/http/HttpSessionContext;
-#getValue(Ljava/lang/String;)Ljava/lang/Object;
-#getValueNames()[Ljava/lang/String;
-#putValue(Ljava/lang/String;Ljava/lang/Object;)V
-#removeValue(Ljava/lang/String;)V

+###org/springframework/mock/web/MockRequestDispatcher
@2.5
+#<init>(Ljava/lang/String;)V
+#forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
+#include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
@6.0.0
+#forward(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
+#include(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
-#forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
-#include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V

+###org/springframework/mock/web/MockPageContext
@2.5
+#<init>()V
+#<init>(Ljavax/servlet/ServletContext;)V
+#<init>(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;)V
+#<init>(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#<init>(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/ServletConfig;)V
+#initialize(Ljavax/servlet/Servlet;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljava/lang/String;ZIZ)V
+#release()V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;I)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttribute(Ljava/lang/String;I)Ljava/lang/Object;
+#findAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#removeAttribute(Ljava/lang/String;)V
+#removeAttribute(Ljava/lang/String;I)V
+#getAttributesScope(Ljava/lang/String;)I
+#getAttributeNames()Ljava/util/Enumeration;
+#getAttributeNamesInScope(I)Ljava/util/Enumeration;
+#getOut()Ljavax/servlet/jsp/JspWriter;
+#getExpressionEvaluator()Ljavax/servlet/jsp/el/ExpressionEvaluator;
+#getVariableResolver()Ljavax/servlet/jsp/el/VariableResolver;
+#getSession()Ljavax/servlet/http/HttpSession;
+#getPage()Ljava/lang/Object;
+#getRequest()Ljavax/servlet/ServletRequest;
+#getResponse()Ljavax/servlet/ServletResponse;
+#getException()Ljava/lang/Exception;
+#getServletConfig()Ljavax/servlet/ServletConfig;
+#getServletContext()Ljavax/servlet/ServletContext;
+#forward(Ljava/lang/String;)V
+#include(Ljava/lang/String;)V
+#include(Ljava/lang/String;Z)V
+#handlePageException(Ljava/lang/Exception;)V
+#handlePageException(Ljava/lang/Throwable;)V
@3.0.0.RELEASE
+#getELContext()Ljavax/el/ELContext;
@3.1.0.RELEASE
+#getContentAsByteArray()[B
+#getContentAsString()Ljava/lang/String;
@4.2.0.RELEASE
*#getExpressionEvaluator()Ljavax/servlet/jsp/el/ExpressionEvaluator;[deprecated]
*#getVariableResolver()Ljavax/servlet/jsp/el/VariableResolver;[deprecated]
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljakarta/servlet/http/HttpServletRequest;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljakarta/servlet/ServletConfig;)V
+#initialize(Ljakarta/servlet/Servlet;Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljava/lang/String;ZIZ)V
+#getOut()Ljakarta/servlet/jsp/JspWriter;
+#getExpressionEvaluator()Ljakarta/servlet/jsp/el/ExpressionEvaluator;[deprecated]
+#getELContext()Ljakarta/el/ELContext;
+#getVariableResolver()Ljakarta/servlet/jsp/el/VariableResolver;[deprecated]
+#getSession()Ljakarta/servlet/http/HttpSession;
+#getRequest()Ljakarta/servlet/ServletRequest;
+#getResponse()Ljakarta/servlet/ServletResponse;
+#getServletConfig()Ljakarta/servlet/ServletConfig;
+#getServletContext()Ljakarta/servlet/ServletContext;
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;)V
-#<init>(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#<init>(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/ServletConfig;)V
-#initialize(Ljavax/servlet/Servlet;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljava/lang/String;ZIZ)V
-#getOut()Ljavax/servlet/jsp/JspWriter;
-#getExpressionEvaluator()Ljavax/servlet/jsp/el/ExpressionEvaluator;[deprecated]
-#getELContext()Ljavax/el/ELContext;
-#getVariableResolver()Ljavax/servlet/jsp/el/VariableResolver;[deprecated]
-#getSession()Ljavax/servlet/http/HttpSession;
-#getRequest()Ljavax/servlet/ServletRequest;
-#getResponse()Ljavax/servlet/ServletResponse;
-#getServletConfig()Ljavax/servlet/ServletConfig;
-#getServletContext()Ljavax/servlet/ServletContext;

+###org/springframework/mock/web/MockMultipartHttpServletRequest
@2.5
+#<init>()V
+#addFile(Lorg/springframework/web/multipart/MultipartFile;)V
+#getFileNames()Ljava/util/Iterator;
+#getFile(Ljava/lang/String;)Lorg/springframework/web/multipart/MultipartFile;
+#getFileMap()Ljava/util/Map;
@3.0.0.RELEASE
+#getFiles(Ljava/lang/String;)Ljava/util/List;
+#getMultiFileMap()Lorg/springframework/util/MultiValueMap;
@3.1.0.RELEASE
+#getMultipartContentType(Ljava/lang/String;)Ljava/lang/String;
+#getRequestMethod()Lorg/springframework/http/HttpMethod;
+#getRequestHeaders()Lorg/springframework/http/HttpHeaders;
+#getMultipartHeaders(Ljava/lang/String;)Lorg/springframework/http/HttpHeaders;
@4.0.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;)V
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;)V

+###org/springframework/mock/web/MockHttpServletRequest
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljavax/servlet/ServletContext;)V
+#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;Ljava/lang/String;)V
+#isActive()Z
+#close()V
+#invalidate()V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeNames()Ljava/util/Enumeration;
+#getCharacterEncoding()Ljava/lang/String;
+#setCharacterEncoding(Ljava/lang/String;)V
+#setContent([B)V
+#getContentLength()I
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#getInputStream()Ljavax/servlet/ServletInputStream;
+#setParameter(Ljava/lang/String;Ljava/lang/String;)V
+#setParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#setParameters(Ljava/util/Map;)V
+#addParameter(Ljava/lang/String;Ljava/lang/String;)V
+#addParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#addParameters(Ljava/util/Map;)V
+#removeParameter(Ljava/lang/String;)V
+#removeAllParameters()V
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterNames()Ljava/util/Enumeration;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#setProtocol(Ljava/lang/String;)V
+#getProtocol()Ljava/lang/String;
+#setScheme(Ljava/lang/String;)V
+#getScheme()Ljava/lang/String;
+#setServerName(Ljava/lang/String;)V
+#getServerName()Ljava/lang/String;
+#setServerPort(I)V
+#getServerPort()I
+#getReader()Ljava/io/BufferedReader;
+#setRemoteAddr(Ljava/lang/String;)V
+#getRemoteAddr()Ljava/lang/String;
+#setRemoteHost(Ljava/lang/String;)V
+#getRemoteHost()Ljava/lang/String;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)V
+#clearAttributes()V
+#addPreferredLocale(Ljava/util/Locale;)V
+#getLocale()Ljava/util/Locale;
+#getLocales()Ljava/util/Enumeration;
+#setSecure(Z)V
+#isSecure()Z
+#getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
+#getRealPath(Ljava/lang/String;)Ljava/lang/String;
+#setRemotePort(I)V
+#getRemotePort()I
+#setLocalName(Ljava/lang/String;)V
+#getLocalName()Ljava/lang/String;
+#setLocalAddr(Ljava/lang/String;)V
+#getLocalAddr()Ljava/lang/String;
+#setLocalPort(I)V
+#getLocalPort()I
+#setAuthType(Ljava/lang/String;)V
+#getAuthType()Ljava/lang/String;
+#setCookies([Ljavax/servlet/http/Cookie;)V
+#getCookies()[Ljavax/servlet/http/Cookie;
+#addHeader(Ljava/lang/String;Ljava/lang/Object;)V
+#getDateHeader(Ljava/lang/String;)J
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaders(Ljava/lang/String;)Ljava/util/Enumeration;
+#getHeaderNames()Ljava/util/Enumeration;
+#getIntHeader(Ljava/lang/String;)I
+#setMethod(Ljava/lang/String;)V
+#getMethod()Ljava/lang/String;
+#setPathInfo(Ljava/lang/String;)V
+#getPathInfo()Ljava/lang/String;
+#getPathTranslated()Ljava/lang/String;
+#setContextPath(Ljava/lang/String;)V
+#getContextPath()Ljava/lang/String;
+#setQueryString(Ljava/lang/String;)V
+#getQueryString()Ljava/lang/String;
+#setRemoteUser(Ljava/lang/String;)V
+#getRemoteUser()Ljava/lang/String;
+#addRole(Ljava/lang/String;)V
+#addUserRole(Ljava/lang/String;)V
+#isUserInRole(Ljava/lang/String;)Z
+#setUserPrincipal(Ljava/security/Principal;)V
+#getUserPrincipal()Ljava/security/Principal;
+#getRequestedSessionId()Ljava/lang/String;
+#setRequestURI(Ljava/lang/String;)V
+#getRequestURI()Ljava/lang/String;
+#getRequestURL()Ljava/lang/StringBuffer;
+#setServletPath(Ljava/lang/String;)V
+#getServletPath()Ljava/lang/String;
+#setSession(Ljavax/servlet/http/HttpSession;)V
+#getSession(Z)Ljavax/servlet/http/HttpSession;
+#getSession()Ljavax/servlet/http/HttpSession;
+#setRequestedSessionIdValid(Z)V
+#isRequestedSessionIdValid()Z
+#setRequestedSessionIdFromCookie(Z)V
+#isRequestedSessionIdFromCookie()Z
+#setRequestedSessionIdFromURL(Z)V
+#isRequestedSessionIdFromURL()Z
+#isRequestedSessionIdFromUrl()Z
@2.5.2
+#getServletContext()Ljavax/servlet/ServletContext;
@3.0.0.RELEASE
+#setRequestedSessionId(Ljava/lang/String;)V
-#addRole(Ljava/lang/String;)V
@3.1.0.RELEASE
+#authenticate(Ljavax/servlet/http/HttpServletResponse;)Z
+#login(Ljava/lang/String;Ljava/lang/String;)V
+#logout()V
@3.2.0.RELEASE
+#setPreferredLocales(Ljava/util/List;)V
@4.0.0.RELEASE
*#getRealPath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#startAsync()Ljavax/servlet/AsyncContext;
+#startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
+#setAsyncStarted(Z)V
+#isAsyncStarted()Z
+#setAsyncSupported(Z)V
+#isAsyncSupported()Z
+#setAsyncContext(Lorg/springframework/mock/web/MockAsyncContext;)V
+#getAsyncContext()Ljavax/servlet/AsyncContext;
+#setDispatcherType(Ljavax/servlet/DispatcherType;)V
+#getDispatcherType()Ljavax/servlet/DispatcherType;
*#isRequestedSessionIdFromUrl()Z[deprecated]
+#addPart(Ljavax/servlet/http/Part;)V
+#getPart(Ljava/lang/String;)Ljavax/servlet/http/Part;
+#getParts()Ljava/util/Collection;
@4.0.3.RELEASE
+#getContentLengthLong()J
+#changeSessionId()Ljava/lang/String;
@4.3.20.RELEASE
+#removeHeader(Ljava/lang/String;)V
@5.0.0.RELEASE
+#getContentAsByteArray()[B
+#getContentAsString()Ljava/lang/String;
+#upgrade(Ljava/lang/Class;)Ljavax/servlet/http/HttpUpgradeHandler;
-#removeHeader(Ljava/lang/String;)V
@5.0.10.RELEASE
+#removeHeader(Ljava/lang/String;)V
@5.1.0.RELEASE
-#removeHeader(Ljava/lang/String;)V
@5.1.1.RELEASE
+#removeHeader(Ljava/lang/String;)V
@5.3.4
+#setHttpServletMapping(Ljavax/servlet/http/HttpServletMapping;)V
+#getHttpServletMapping()Ljavax/servlet/http/HttpServletMapping;
@5.3.5
-#setHttpServletMapping(Ljavax/servlet/http/HttpServletMapping;)V
-#getHttpServletMapping()Ljavax/servlet/http/HttpServletMapping;
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljava/lang/String;Ljava/lang/String;)V
+#getServletContext()Ljakarta/servlet/ServletContext;
+#getInputStream()Ljakarta/servlet/ServletInputStream;
+#getRequestDispatcher(Ljava/lang/String;)Ljakarta/servlet/RequestDispatcher;
+#startAsync()Ljakarta/servlet/AsyncContext;
+#startAsync(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)Ljakarta/servlet/AsyncContext;
+#getAsyncContext()Ljakarta/servlet/AsyncContext;
+#setDispatcherType(Ljakarta/servlet/DispatcherType;)V
+#getDispatcherType()Ljakarta/servlet/DispatcherType;
+#getRequestId()Ljava/lang/String;
+#getProtocolRequestId()Ljava/lang/String;
+#getServletConnection()Ljakarta/servlet/ServletConnection;
+#setCookies([Ljakarta/servlet/http/Cookie;)V
+#getCookies()[Ljakarta/servlet/http/Cookie;
+#setSession(Ljakarta/servlet/http/HttpSession;)V
+#getSession(Z)Ljakarta/servlet/http/HttpSession;
+#getSession()Ljakarta/servlet/http/HttpSession;
+#authenticate(Ljakarta/servlet/http/HttpServletResponse;)Z
+#addPart(Ljakarta/servlet/http/Part;)V
+#getPart(Ljava/lang/String;)Ljakarta/servlet/http/Part;
+#setHttpServletMapping(Ljakarta/servlet/http/HttpServletMapping;)V
+#getHttpServletMapping()Ljakarta/servlet/http/HttpServletMapping;
+#upgrade(Ljava/lang/Class;)Ljakarta/servlet/http/HttpUpgradeHandler;
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;Ljava/lang/String;)V
-#getServletContext()Ljavax/servlet/ServletContext;
-#getInputStream()Ljavax/servlet/ServletInputStream;
-#getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
-#getRealPath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#startAsync()Ljavax/servlet/AsyncContext;
-#startAsync(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)Ljavax/servlet/AsyncContext;
-#getAsyncContext()Ljavax/servlet/AsyncContext;
-#setDispatcherType(Ljavax/servlet/DispatcherType;)V
-#getDispatcherType()Ljavax/servlet/DispatcherType;
-#setCookies([Ljavax/servlet/http/Cookie;)V
-#getCookies()[Ljavax/servlet/http/Cookie;
-#setSession(Ljavax/servlet/http/HttpSession;)V
-#getSession(Z)Ljavax/servlet/http/HttpSession;
-#getSession()Ljavax/servlet/http/HttpSession;
-#isRequestedSessionIdFromUrl()Z[deprecated]
-#authenticate(Ljavax/servlet/http/HttpServletResponse;)Z
-#addPart(Ljavax/servlet/http/Part;)V
-#getPart(Ljava/lang/String;)Ljavax/servlet/http/Part;
-#upgrade(Ljava/lang/Class;)Ljavax/servlet/http/HttpUpgradeHandler;

+###org/springframework/mock/web/MockServletConfig
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljavax/servlet/ServletContext;)V
+#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
+#getServletName()Ljava/lang/String;
+#getServletContext()Ljavax/servlet/ServletContext;
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getInitParameter(Ljava/lang/String;)Ljava/lang/String;
+#getInitParameterNames()Ljava/util/Enumeration;
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljava/lang/String;)V
+#getServletContext()Ljakarta/servlet/ServletContext;
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
-#getServletContext()Ljavax/servlet/ServletContext;

+###org/springframework/mock/web/MockBodyContent
@2.5
+#<init>(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)V
+#<init>(Ljava/lang/String;Ljava/io/Writer;)V
+#<init>(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;Ljava/io/Writer;)V
+#getReader()Ljava/io/Reader;
+#getString()Ljava/lang/String;
+#writeOut(Ljava/io/Writer;)V
+#clear()V
+#clearBuffer()V
+#close()V
+#getRemaining()I
+#newLine()V
+#write([CII)V
+#print(Z)V
+#print(C)V
+#print([C)V
+#print(D)V
+#print(F)V
+#print(I)V
+#print(J)V
+#print(Ljava/lang/Object;)V
+#print(Ljava/lang/String;)V
+#println()V
+#println(Z)V
+#println(C)V
+#println([C)V
+#println(D)V
+#println(F)V
+#println(I)V
+#println(J)V
+#println(Ljava/lang/Object;)V
+#println(Ljava/lang/String;)V
@6.0.0
+#<init>(Ljava/lang/String;Ljakarta/servlet/http/HttpServletResponse;)V
+#<init>(Ljava/lang/String;Ljakarta/servlet/http/HttpServletResponse;Ljava/io/Writer;)V
-#<init>(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)V
-#<init>(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;Ljava/io/Writer;)V

+###org/springframework/mock/web/MockHttpServletResponse
@2.5
+#<init>()V
+#setOutputStreamAccessAllowed(Z)V
+#isOutputStreamAccessAllowed()Z
+#setWriterAccessAllowed(Z)V
+#isWriterAccessAllowed()Z
+#setCharacterEncoding(Ljava/lang/String;)V
+#getCharacterEncoding()Ljava/lang/String;
+#getOutputStream()Ljavax/servlet/ServletOutputStream;
+#getWriter()Ljava/io/PrintWriter;
+#getContentAsByteArray()[B
+#getContentAsString()Ljava/lang/String;
+#setContentLength(I)V
+#getContentLength()I
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#setBufferSize(I)V
+#getBufferSize()I
+#flushBuffer()V
+#resetBuffer()V
+#setCommitted(Z)V
+#isCommitted()Z
+#reset()V
+#setLocale(Ljava/util/Locale;)V
+#getLocale()Ljava/util/Locale;
+#addCookie(Ljavax/servlet/http/Cookie;)V
+#getCookies()[Ljavax/servlet/http/Cookie;
+#getCookie(Ljava/lang/String;)Ljavax/servlet/http/Cookie;
+#containsHeader(Ljava/lang/String;)Z
+#getHeaderNames()Ljava/util/Set;
+#getHeader(Ljava/lang/String;)Ljava/lang/Object;
+#getHeaders(Ljava/lang/String;)Ljava/util/List;
+#encodeURL(Ljava/lang/String;)Ljava/lang/String;
+#encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
+#encodeUrl(Ljava/lang/String;)Ljava/lang/String;
+#encodeRedirectUrl(Ljava/lang/String;)Ljava/lang/String;
+#sendError(ILjava/lang/String;)V
+#sendError(I)V
+#sendRedirect(Ljava/lang/String;)V
+#getRedirectedUrl()Ljava/lang/String;
+#setDateHeader(Ljava/lang/String;J)V
+#addDateHeader(Ljava/lang/String;J)V
+#setHeader(Ljava/lang/String;Ljava/lang/String;)V
+#addHeader(Ljava/lang/String;Ljava/lang/String;)V
+#setIntHeader(Ljava/lang/String;I)V
+#addIntHeader(Ljava/lang/String;I)V
+#setStatus(I)V
+#setStatus(ILjava/lang/String;)V
+#getStatus()I
+#getErrorMessage()Ljava/lang/String;
+#setForwardedUrl(Ljava/lang/String;)V
+#getForwardedUrl()Ljava/lang/String;
+#setIncludedUrl(Ljava/lang/String;)V
+#getIncludedUrl()Ljava/lang/String;
@3.0.3.RELEASE
+#addIncludedUrl(Ljava/lang/String;)V
+#getIncludedUrls()Ljava/util/List;
@3.1.0.RELEASE
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaderValue(Ljava/lang/String;)Ljava/lang/Object;
+#getHeaderValues(Ljava/lang/String;)Ljava/util/List;
-#getHeader(Ljava/lang/String;)Ljava/lang/Object;
@3.1.4.RELEASE
+#getHeaderNames()Ljava/util/Collection;
-#getHeaderNames()Ljava/util/Set;
@3.2.0.RELEASE
+#getHeaderNames()Ljava/util/Set;
-#getHeaderNames()Ljava/util/Collection;
@3.2.1.RELEASE
+#getHeaderNames()Ljava/util/Collection;
-#getHeaderNames()Ljava/util/Set;
@4.0.0.RELEASE
+#setContentLengthLong(J)V
+#getContentLengthLong()J
*#encodeUrl(Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#encodeRedirectUrl(Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#setStatus(ILjava/lang/String;)V[deprecated]
+#getHeaders(Ljava/lang/String;)Ljava/util/Collection;
@4.2.0.RELEASE
+#isCharset()Z
@4.2.2.RELEASE
+#getDateHeader(Ljava/lang/String;)J
@5.2.0.RELEASE
+#getContentAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;
@5.3.10
+#setDefaultCharacterEncoding(Ljava/lang/String;)V
@6.0.0
+#getOutputStream()Ljakarta/servlet/ServletOutputStream;
+#addCookie(Ljakarta/servlet/http/Cookie;)V
+#getCookies()[Ljakarta/servlet/http/Cookie;
+#getCookie(Ljava/lang/String;)Ljakarta/servlet/http/Cookie;
-#getOutputStream()Ljavax/servlet/ServletOutputStream;
-#addCookie(Ljavax/servlet/http/Cookie;)V
-#getCookies()[Ljavax/servlet/http/Cookie;
-#getCookie(Ljava/lang/String;)Ljavax/servlet/http/Cookie;
-#encodeUrl(Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#encodeRedirectUrl(Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#setStatus(ILjava/lang/String;)V[deprecated]

+###org/springframework/mock/web/MockPart
@4.3.12.RELEASE
+#<init>(Ljava/lang/String;[B)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[B)V
+#getName()Ljava/lang/String;
+#getSubmittedFileName()Ljava/lang/String;
+#getContentType()Ljava/lang/String;
+#getSize()J
+#getInputStream()Ljava/io/InputStream;
+#write(Ljava/lang/String;)V
+#delete()V
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaders(Ljava/lang/String;)Ljava/util/Collection;
+#getHeaderNames()Ljava/util/Collection;
+#getHeaders()Lorg/springframework/http/HttpHeaders;

+###org/springframework/mock/web/MockFilterChain
@2.5
+#<init>()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
+#getRequest()Ljavax/servlet/ServletRequest;
+#getResponse()Ljavax/servlet/ServletResponse;
@3.2.0.RELEASE
+#<init>(Ljavax/servlet/Servlet;)V
+#<init>(Ljavax/servlet/Servlet;[Ljavax/servlet/Filter;)V
+#reset()V
@6.0.0
+#<init>(Ljakarta/servlet/Servlet;)V
+#<init>(Ljakarta/servlet/Servlet;[Ljakarta/servlet/Filter;)V
+#getRequest()Ljakarta/servlet/ServletRequest;
+#getResponse()Ljakarta/servlet/ServletResponse;
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
-#<init>(Ljavax/servlet/Servlet;)V
-#<init>(Ljavax/servlet/Servlet;[Ljavax/servlet/Filter;)V
-#getRequest()Ljavax/servlet/ServletRequest;
-#getResponse()Ljavax/servlet/ServletResponse;
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V

+###org/springframework/mock/web/MockMultipartFile
@2.5
+#<init>(Ljava/lang/String;[B)V
+#<init>(Ljava/lang/String;Ljava/io/InputStream;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)V
+#getName()Ljava/lang/String;
+#getOriginalFilename()Ljava/lang/String;
+#getContentType()Ljava/lang/String;
+#isEmpty()Z
+#getSize()J
+#getBytes()[B
+#getInputStream()Ljava/io/InputStream;
+#transferTo(Ljava/io/File;)V

+###org/springframework/mock/web/MockAsyncContext
@4.0.0.RELEASE
+#<init>(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
+#addDispatchHandler(Ljava/lang/Runnable;)V
+#getRequest()Ljavax/servlet/ServletRequest;
+#getResponse()Ljavax/servlet/ServletResponse;
+#hasOriginalRequestAndResponse()Z
+#dispatch()V
+#dispatch(Ljava/lang/String;)V
+#dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
+#getDispatchedPath()Ljava/lang/String;
+#complete()V
+#start(Ljava/lang/Runnable;)V
+#addListener(Ljavax/servlet/AsyncListener;)V
+#addListener(Ljavax/servlet/AsyncListener;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
+#getListeners()Ljava/util/List;
+#createListener(Ljava/lang/Class;)Ljavax/servlet/AsyncListener;
+#setTimeout(J)V
+#getTimeout()J
@6.0.0
+#<init>(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
+#getRequest()Ljakarta/servlet/ServletRequest;
+#getResponse()Ljakarta/servlet/ServletResponse;
+#dispatch(Ljakarta/servlet/ServletContext;Ljava/lang/String;)V
+#addListener(Ljakarta/servlet/AsyncListener;)V
+#addListener(Ljakarta/servlet/AsyncListener;Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
+#createListener(Ljava/lang/Class;)Ljakarta/servlet/AsyncListener;
-#<init>(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
-#getRequest()Ljavax/servlet/ServletRequest;
-#getResponse()Ljavax/servlet/ServletResponse;
-#dispatch(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
-#addListener(Ljavax/servlet/AsyncListener;)V
-#addListener(Ljavax/servlet/AsyncListener;Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
-#createListener(Ljava/lang/Class;)Ljavax/servlet/AsyncListener;

+###org/springframework/mock/web/DelegatingServletInputStream
@2.5
+#<init>(Ljava/io/InputStream;)V
+#getSourceStream()Ljava/io/InputStream;
+#read()I
+#close()V
@5.0.0.RELEASE
+#isFinished()Z
+#isReady()Z
+#setReadListener(Ljavax/servlet/ReadListener;)V
@5.0.4.RELEASE
+#available()I
@6.0.0
+#setReadListener(Ljakarta/servlet/ReadListener;)V
-#setReadListener(Ljavax/servlet/ReadListener;)V

+###org/springframework/mock/web/MockFilterConfig
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljavax/servlet/ServletContext;)V
+#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
+#getFilterName()Ljava/lang/String;
+#getServletContext()Ljavax/servlet/ServletContext;
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getInitParameter(Ljava/lang/String;)Ljava/lang/String;
+#getInitParameterNames()Ljava/util/Enumeration;
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljava/lang/String;)V
+#getServletContext()Ljakarta/servlet/ServletContext;
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
-#getServletContext()Ljavax/servlet/ServletContext;

+###org/springframework/mock/web/MockSessionCookieConfig
@4.0.0.RELEASE
+#<init>()V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setDomain(Ljava/lang/String;)V
+#getDomain()Ljava/lang/String;
+#setPath(Ljava/lang/String;)V
+#getPath()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setHttpOnly(Z)V
+#isHttpOnly()Z
+#setSecure(Z)V
+#isSecure()Z
+#setMaxAge(I)V
+#getMaxAge()I
@6.0.0
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/String;
+#getAttributes()Ljava/util/Map;

+###org/springframework/mock/web/server/MockServerWebExchange$Builder
@5.1.0.RELEASE
+#<init>(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;)V
+#session(Lorg/springframework/web/server/WebSession;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;
+#sessionManager(Lorg/springframework/web/server/session/WebSessionManager;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;
+#build()Lorg/springframework/mock/web/server/MockServerWebExchange;

+###org/springframework/mock/web/server/MockServerWebExchange
@5.0.1.RELEASE
+#getResponse()Lorg/springframework/mock/http/server/reactive/MockServerHttpResponse;
+#from(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;)Lorg/springframework/mock/web/server/MockServerWebExchange;
+#from(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;)Lorg/springframework/mock/web/server/MockServerWebExchange;
+#getResponse()Lorg/springframework/http/server/reactive/ServerHttpResponse;
@5.1.0.RELEASE
+#builder(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;
+#builder(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest$BaseBuilder;)Lorg/springframework/mock/web/server/MockServerWebExchange$Builder;

+###org/springframework/mock/web/server/MockWebSession
@5.1.0.RELEASE
+#<init>()V
+#<init>(Ljava/time/Clock;)V
+#getId()Ljava/lang/String;
+#getAttributes()Ljava/util/Map;
+#start()V
+#isStarted()Z
+#changeSessionId()Lreactor/core/publisher/Mono;
+#invalidate()Lreactor/core/publisher/Mono;
+#save()Lreactor/core/publisher/Mono;
+#isExpired()Z
+#getCreationTime()Ljava/time/Instant;
+#getLastAccessTime()Ljava/time/Instant;
+#setMaxIdleTime(Ljava/time/Duration;)V
+#getMaxIdleTime()Ljava/time/Duration;

+###org/springframework/mock/web/reactive/function/server/MockServerRequest$Builder
@5.0.0.RELEASE
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#uri(Ljava/net/URI;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#contextPath(Ljava/lang/String;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#header(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#headers(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#cookie([Lorg/springframework/http/HttpCookie;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#cookies(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#attribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#attributes(Ljava/util/Map;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#queryParam(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#pathVariable(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#pathVariables(Ljava/util/Map;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#session(Lorg/springframework/web/server/WebSession;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#session(Ljava/security/Principal;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#body(Ljava/lang/Object;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest;
+#build()Lorg/springframework/mock/web/reactive/function/server/MockServerRequest;
@5.1.0.RELEASE
*#session(Ljava/security/Principal;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;[deprecated]
+#principal(Ljava/security/Principal;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#remoteAddress(Ljava/net/InetSocketAddress;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#messageReaders(Ljava/util/List;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
+#exchange(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
@5.2.3.RELEASE
+#localAddress(Ljava/net/InetSocketAddress;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
@6.0.0
-#session(Ljava/security/Principal;)Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;[deprecated]

+###org/springframework/mock/web/reactive/function/server/MockServerRequest
@5.0.0.RELEASE
+#method()Lorg/springframework/http/HttpMethod;
+#methodName()Ljava/lang/String;
+#uri()Ljava/net/URI;
+#uriBuilder()Lorg/springframework/web/util/UriBuilder;
+#pathContainer()Lorg/springframework/http/server/PathContainer;
+#headers()Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;
+#cookies()Lorg/springframework/util/MultiValueMap;
+#body(Lorg/springframework/web/reactive/function/BodyExtractor;)Ljava/lang/Object;
+#body(Lorg/springframework/web/reactive/function/BodyExtractor;Ljava/util/Map;)Ljava/lang/Object;
+#bodyToMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#bodyToMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#bodyToFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
+#attributes()Ljava/util/Map;
+#queryParams()Lorg/springframework/util/MultiValueMap;
+#pathVariables()Ljava/util/Map;
+#session()Lreactor/core/publisher/Mono;
+#principal()Lreactor/core/publisher/Mono;
+#builder()Lorg/springframework/mock/web/reactive/function/server/MockServerRequest$Builder;
@5.0.5.RELEASE
+#formData()Lreactor/core/publisher/Mono;
+#multipartData()Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#remoteAddress()Ljava/util/Optional;
+#messageReaders()Ljava/util/List;
+#exchange()Lorg/springframework/web/server/ServerWebExchange;
@5.2.3.RELEASE
+#localAddress()Ljava/util/Optional;
@5.3.0
+#requestPath()Lorg/springframework/http/server/RequestPath;
-#pathContainer()Lorg/springframework/http/server/PathContainer;
@6.0.0
*#methodName()Ljava/lang/String;[deprecated]

+###org/springframework/mock/web/MockExpressionEvaluator
@2.5
+#<init>(Ljavax/servlet/jsp/PageContext;)V
+#parseExpression(Ljava/lang/String;Ljava/lang/Class;Ljavax/servlet/jsp/el/FunctionMapper;)Ljavax/servlet/jsp/el/Expression;
+#evaluate(Ljava/lang/String;Ljava/lang/Class;Ljavax/servlet/jsp/el/VariableResolver;Ljavax/servlet/jsp/el/FunctionMapper;)Ljava/lang/Object;
@6.0.0
-###org/springframework/mock/web/MockExpressionEvaluator

+###org/springframework/mock/web/DelegatingServletOutputStream
@2.5
+#<init>(Ljava/io/OutputStream;)V
+#getTargetStream()Ljava/io/OutputStream;
+#write(I)V
+#flush()V
+#close()V
@5.0.0.RELEASE
+#isReady()Z
+#setWriteListener(Ljavax/servlet/WriteListener;)V
@6.0.0
+#setWriteListener(Ljakarta/servlet/WriteListener;)V
-#setWriteListener(Ljavax/servlet/WriteListener;)V

+###org/springframework/mock/web/MockServletContext
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
+#setContextPath(Ljava/lang/String;)V
+#getContextPath()Ljava/lang/String;
+#registerContext(Ljava/lang/String;Ljavax/servlet/ServletContext;)V
+#getContext(Ljava/lang/String;)Ljavax/servlet/ServletContext;
+#getMajorVersion()I
+#getMinorVersion()I
+#getMimeType(Ljava/lang/String;)Ljava/lang/String;
+#getResourcePaths(Ljava/lang/String;)Ljava/util/Set;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
+#getNamedDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
+#getServlet(Ljava/lang/String;)Ljavax/servlet/Servlet;
+#getServlets()Ljava/util/Enumeration;
+#getServletNames()Ljava/util/Enumeration;
+#log(Ljava/lang/String;)V
+#log(Ljava/lang/Exception;Ljava/lang/String;)V
+#log(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getRealPath(Ljava/lang/String;)Ljava/lang/String;
+#getServerInfo()Ljava/lang/String;
+#getInitParameter(Ljava/lang/String;)Ljava/lang/String;
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getInitParameterNames()Ljava/util/Enumeration;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeNames()Ljava/util/Enumeration;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)V
+#setServletContextName(Ljava/lang/String;)V
+#getServletContextName()Ljava/lang/String;
@3.0.0.RELEASE
+#setMinorVersion(I)V
@3.1.0.RELEASE
+#setMajorVersion(I)V
+#setEffectiveMajorVersion(I)V
+#getEffectiveMajorVersion()I
+#setEffectiveMinorVersion(I)V
+#getEffectiveMinorVersion()I
+#setInitParameter(Ljava/lang/String;Ljava/lang/String;)Z
+#getClassLoader()Ljava/lang/ClassLoader;
+#declareRoles([Ljava/lang/String;)V
+#getDeclaredRoles()Ljava/util/Set;
@3.2.0.RELEASE
+#registerNamedDispatcher(Ljava/lang/String;Ljavax/servlet/RequestDispatcher;)V
+#unregisterNamedDispatcher(Ljava/lang/String;)V
+#getDefaultServletName()Ljava/lang/String;
+#setDefaultServletName(Ljava/lang/String;)V
@4.0.0.RELEASE
*#getServlet(Ljava/lang/String;)Ljavax/servlet/Servlet;[deprecated]
*#getServlets()Ljava/util/Enumeration;[deprecated]
*#getServletNames()Ljava/util/Enumeration;[deprecated]
*#log(Ljava/lang/Exception;Ljava/lang/String;)V[deprecated]
+#setSessionTrackingModes(Ljava/util/Set;)V
+#getDefaultSessionTrackingModes()Ljava/util/Set;
+#getEffectiveSessionTrackingModes()Ljava/util/Set;
+#getSessionCookieConfig()Ljavax/servlet/SessionCookieConfig;
+#getJspConfigDescriptor()Ljavax/servlet/descriptor/JspConfigDescriptor;
+#addServlet(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/ServletRegistration$Dynamic;
+#addServlet(Ljava/lang/String;Ljavax/servlet/Servlet;)Ljavax/servlet/ServletRegistration$Dynamic;
+#addServlet(Ljava/lang/String;Ljava/lang/Class;)Ljavax/servlet/ServletRegistration$Dynamic;
+#createServlet(Ljava/lang/Class;)Ljavax/servlet/Servlet;
+#getServletRegistration(Ljava/lang/String;)Ljavax/servlet/ServletRegistration;
+#getServletRegistrations()Ljava/util/Map;
+#addFilter(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/FilterRegistration$Dynamic;
+#addFilter(Ljava/lang/String;Ljavax/servlet/Filter;)Ljavax/servlet/FilterRegistration$Dynamic;
+#addFilter(Ljava/lang/String;Ljava/lang/Class;)Ljavax/servlet/FilterRegistration$Dynamic;
+#createFilter(Ljava/lang/Class;)Ljavax/servlet/Filter;
+#getFilterRegistration(Ljava/lang/String;)Ljavax/servlet/FilterRegistration;
+#getFilterRegistrations()Ljava/util/Map;
+#addListener(Ljava/lang/Class;)V
+#addListener(Ljava/lang/String;)V
+#addListener(Ljava/util/EventListener;)V
+#createListener(Ljava/lang/Class;)Ljava/util/EventListener;
@5.0.0.RELEASE
+#addMimeType(Ljava/lang/String;Lorg/springframework/http/MediaType;)V
+#setSessionTimeout(I)V
+#getSessionTimeout()I
+#setRequestCharacterEncoding(Ljava/lang/String;)V
+#getRequestCharacterEncoding()Ljava/lang/String;
+#setResponseCharacterEncoding(Ljava/lang/String;)V
+#getResponseCharacterEncoding()Ljava/lang/String;
+#addJspFile(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/ServletRegistration$Dynamic;
+#getVirtualServerName()Ljava/lang/String;
@6.0.0
+#registerContext(Ljava/lang/String;Ljakarta/servlet/ServletContext;)V
+#getContext(Ljava/lang/String;)Ljakarta/servlet/ServletContext;
+#getRequestDispatcher(Ljava/lang/String;)Ljakarta/servlet/RequestDispatcher;
+#getNamedDispatcher(Ljava/lang/String;)Ljakarta/servlet/RequestDispatcher;
+#registerNamedDispatcher(Ljava/lang/String;Ljakarta/servlet/RequestDispatcher;)V
+#getSessionCookieConfig()Ljakarta/servlet/SessionCookieConfig;
+#getJspConfigDescriptor()Ljakarta/servlet/descriptor/JspConfigDescriptor;
+#addJspFile(Ljava/lang/String;Ljava/lang/String;)Ljakarta/servlet/ServletRegistration$Dynamic;
+#addServlet(Ljava/lang/String;Ljava/lang/String;)Ljakarta/servlet/ServletRegistration$Dynamic;
+#addServlet(Ljava/lang/String;Ljakarta/servlet/Servlet;)Ljakarta/servlet/ServletRegistration$Dynamic;
+#addServlet(Ljava/lang/String;Ljava/lang/Class;)Ljakarta/servlet/ServletRegistration$Dynamic;
+#createServlet(Ljava/lang/Class;)Ljakarta/servlet/Servlet;
+#getServletRegistration(Ljava/lang/String;)Ljakarta/servlet/ServletRegistration;
+#addFilter(Ljava/lang/String;Ljava/lang/String;)Ljakarta/servlet/FilterRegistration$Dynamic;
+#addFilter(Ljava/lang/String;Ljakarta/servlet/Filter;)Ljakarta/servlet/FilterRegistration$Dynamic;
+#addFilter(Ljava/lang/String;Ljava/lang/Class;)Ljakarta/servlet/FilterRegistration$Dynamic;
+#createFilter(Ljava/lang/Class;)Ljakarta/servlet/Filter;
+#getFilterRegistration(Ljava/lang/String;)Ljakarta/servlet/FilterRegistration;
-#registerContext(Ljava/lang/String;Ljavax/servlet/ServletContext;)V
-#getContext(Ljava/lang/String;)Ljavax/servlet/ServletContext;
-#getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
-#getNamedDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
-#registerNamedDispatcher(Ljava/lang/String;Ljavax/servlet/RequestDispatcher;)V
-#getServlet(Ljava/lang/String;)Ljavax/servlet/Servlet;[deprecated]
-#getServlets()Ljava/util/Enumeration;[deprecated]
-#getServletNames()Ljava/util/Enumeration;[deprecated]
-#log(Ljava/lang/Exception;Ljava/lang/String;)V[deprecated]
-#getSessionCookieConfig()Ljavax/servlet/SessionCookieConfig;
-#getJspConfigDescriptor()Ljavax/servlet/descriptor/JspConfigDescriptor;
-#addJspFile(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/ServletRegistration$Dynamic;
-#addServlet(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/ServletRegistration$Dynamic;
-#addServlet(Ljava/lang/String;Ljavax/servlet/Servlet;)Ljavax/servlet/ServletRegistration$Dynamic;
-#addServlet(Ljava/lang/String;Ljava/lang/Class;)Ljavax/servlet/ServletRegistration$Dynamic;
-#createServlet(Ljava/lang/Class;)Ljavax/servlet/Servlet;
-#getServletRegistration(Ljava/lang/String;)Ljavax/servlet/ServletRegistration;
-#addFilter(Ljava/lang/String;Ljava/lang/String;)Ljavax/servlet/FilterRegistration$Dynamic;
-#addFilter(Ljava/lang/String;Ljavax/servlet/Filter;)Ljavax/servlet/FilterRegistration$Dynamic;
-#addFilter(Ljava/lang/String;Ljava/lang/Class;)Ljavax/servlet/FilterRegistration$Dynamic;
-#createFilter(Ljava/lang/Class;)Ljavax/servlet/Filter;
-#getFilterRegistration(Ljava/lang/String;)Ljavax/servlet/FilterRegistration;

+###org/springframework/mock/web/PassThroughFilterChain
@2.5
+#<init>(Ljavax/servlet/Filter;Ljavax/servlet/FilterChain;)V
+#<init>(Ljavax/servlet/Servlet;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
@6.0.0
+#<init>(Ljakarta/servlet/Filter;Ljakarta/servlet/FilterChain;)V
+#<init>(Ljakarta/servlet/Servlet;)V
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
-#<init>(Ljavax/servlet/Filter;Ljavax/servlet/FilterChain;)V
-#<init>(Ljavax/servlet/Servlet;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V

+###org/springframework/mock/web/MockJspWriter
@2.5
+#<init>(Ljavax/servlet/http/HttpServletResponse;)V
+#<init>(Ljava/io/Writer;)V
+#<init>(Ljavax/servlet/http/HttpServletResponse;Ljava/io/Writer;)V
+#clear()V
+#clearBuffer()V
+#flush()V
+#close()V
+#getRemaining()I
+#newLine()V
+#write([CII)V
+#print(Z)V
+#print(C)V
+#print([C)V
+#print(D)V
+#print(F)V
+#print(I)V
+#print(J)V
+#print(Ljava/lang/Object;)V
+#print(Ljava/lang/String;)V
+#println()V
+#println(Z)V
+#println(C)V
+#println([C)V
+#println(D)V
+#println(F)V
+#println(I)V
+#println(J)V
+#println(Ljava/lang/Object;)V
+#println(Ljava/lang/String;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletResponse;)V
+#<init>(Ljakarta/servlet/http/HttpServletResponse;Ljava/io/Writer;)V
-#<init>(Ljavax/servlet/http/HttpServletResponse;)V
-#<init>(Ljavax/servlet/http/HttpServletResponse;Ljava/io/Writer;)V

+###org/springframework/test/web/servlet/result/StatusResultMatchersExtensionsKt
@5.0.7.RELEASE
+#isEqualTo(Lorg/springframework/test/web/servlet/result/StatusResultMatchers;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/servlet/ResultMatcher;
+#isEqualTo(Lorg/springframework/test/web/servlet/result/StatusResultMatchers;I)Lorg/springframework/test/web/servlet/ResultMatcher;

+###org/springframework/test/web/reactive/server/KotlinBodySpec
@5.0.6.RELEASE
+#isEqualTo(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/KotlinBodySpec;
+#consumeWith(Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/reactive/server/KotlinBodySpec;
+#returnResult()Lorg/springframework/test/web/reactive/server/EntityExchangeResult;
@6.0.0
-###org/springframework/test/web/reactive/server/KotlinBodySpec

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1
@5.0.6.RELEASE
+#<init>(Lorg/springframework/test/web/reactive/server/EntityExchangeResult;)V
+#isEqualTo(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/KotlinBodySpec;
+#consumeWith(Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/reactive/server/KotlinBodySpec;
+#returnResult()Lorg/springframework/test/web/reactive/server/EntityExchangeResult;
@5.3.0
-###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt
@5.0.0.RELEASE
@5.2.0.RELEASE
+#body(Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;Lorg/reactivestreams/Publisher;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#body(Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#body(Lorg/springframework/test/web/reactive/server/WebTestClient$RequestBodySpec;Lkotlinx/coroutines/flow/Flow;)Lorg/springframework/test/web/reactive/server/WebTestClient$RequestHeadersSpec;
+#expectBody(Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;)Lorg/springframework/test/web/reactive/server/KotlinBodySpec;
+#expectBodyList(Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;)Lorg/springframework/test/web/reactive/server/WebTestClient$ListBodySpec;
+#returnResult(Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;)Lorg/springframework/test/web/reactive/server/FluxExchangeResult;
@6.0.0
+#expectBody(Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;)Lorg/springframework/test/web/reactive/server/WebTestClient$BodySpec;
-#expectBody(Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;)Lorg/springframework/test/web/reactive/server/KotlinBodySpec;

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1$2
@5.0.6.RELEASE
+#<init>(Lorg/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1;Lkotlin/jvm/functions/Function1;)V
+#run()V
@5.3.0
-###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1$2

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1$1
@5.0.6.RELEASE
+#<init>(Lorg/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1;Ljava/lang/Object;)V
+#run()V
@5.3.0
-###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$$inlined$let$lambda$1$1

+###org/springframework/test/context/TestContextAnnotationUtils
@5.3.0
+#<init>()V
+#findMergedAnnotation(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getMergedRepeatableAnnotations(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;
+#findAnnotationDescriptor(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/test/context/TestContextAnnotationUtils$AnnotationDescriptor;
+#findAnnotationDescriptorForTypes(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/test/context/TestContextAnnotationUtils$UntypedAnnotationDescriptor;
+#searchEnclosingClass(Ljava/lang/Class;)Z
@5.3.3
+#hasAnnotation(Ljava/lang/Class;Ljava/lang/Class;)Z

+###org/springframework/test/context/DynamicPropertyRegistry
@5.2.5.RELEASE
+#add(Ljava/lang/String;Ljava/util/function/Supplier;)V

+###org/springframework/test/context/support/PropertyProvider
@5.3.0
+#get(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/test/context/support/TestConstructorUtils
@5.2.0.RELEASE
+#isAutowirableConstructor(Ljava/lang/reflect/Executable;Ljava/lang/Class;)Z
+#isAutowirableConstructor(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)Z
@5.3.0
+#isAutowirableConstructor(Ljava/lang/reflect/Executable;Ljava/lang/Class;Lorg/springframework/test/context/support/PropertyProvider;)Z
+#isAutowirableConstructor(Ljava/lang/reflect/Constructor;Ljava/lang/Class;Lorg/springframework/test/context/support/PropertyProvider;)Z

+###org/springframework/test/context/NestedTestConfiguration
@5.3.0
+#value()Lorg/springframework/test/context/NestedTestConfiguration$EnclosingConfiguration;

+###org/springframework/test/context/NestedTestConfiguration$EnclosingConfiguration
@5.3.0
+#values()[Lorg/springframework/test/context/NestedTestConfiguration$EnclosingConfiguration;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/context/NestedTestConfiguration$EnclosingConfiguration;
+#from(Ljava/lang/String;)Lorg/springframework/test/context/NestedTestConfiguration$EnclosingConfiguration;

+###org/springframework/test/context/TestPropertySources
@5.2.0.RELEASE
+#value()[Lorg/springframework/test/context/TestPropertySource;

+###org/springframework/test/context/TestContextAnnotationUtils$UntypedAnnotationDescriptor
@5.3.0
+#next()Lorg/springframework/test/context/TestContextAnnotationUtils$UntypedAnnotationDescriptor;
+#findAllLocalMergedAnnotations()Ljava/util/Set;
+#next()Lorg/springframework/test/context/TestContextAnnotationUtils$AnnotationDescriptor;

+###org/springframework/test/context/DynamicPropertySource
@5.2.5.RELEASE

+###org/springframework/test/context/event/EventPublishingTestExecutionListener
@5.2.0.RELEASE
+#<init>()V
+#getOrder()I
+#beforeTestClass(Lorg/springframework/test/context/TestContext;)V
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#beforeTestExecution(Lorg/springframework/test/context/TestContext;)V
+#afterTestExecution(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestClass(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/event/AfterTestMethodEvent
@5.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/event/PrepareTestInstanceEvent
@5.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/event/annotation/BeforeTestMethod
@5.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/test/context/event/annotation/PrepareTestInstance
@5.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/test/context/event/annotation/BeforeTestExecution
@5.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/test/context/event/annotation/AfterTestExecution
@5.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/test/context/event/annotation/AfterTestClass
@5.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/test/context/event/annotation/BeforeTestClass
@5.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/test/context/event/annotation/AfterTestMethod
@5.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/test/context/event/AfterTestExecutionEvent
@5.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/event/BeforeTestExecutionEvent
@5.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/event/BeforeTestMethodEvent
@5.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/event/AfterTestClassEvent
@5.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/event/TestContextEvent
@5.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContext;)V
+#getSource()Lorg/springframework/test/context/TestContext;
+#getTestContext()Lorg/springframework/test/context/TestContext;
+#getSource()Ljava/lang/Object;

+###org/springframework/test/context/event/BeforeTestClassEvent
@5.2.0.RELEASE
+#<init>(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/TestContextAnnotationUtils$AnnotationDescriptor
@5.3.0
+#getRootDeclaringClass()Ljava/lang/Class;
+#getDeclaringClass()Ljava/lang/Class;
+#getAnnotation()Ljava/lang/annotation/Annotation;
+#next()Lorg/springframework/test/context/TestContextAnnotationUtils$AnnotationDescriptor;
+#findAllLocalMergedAnnotations()Ljava/util/Set;
+#toString()Ljava/lang/String;

+###org/springframework/test/context/jdbc/SqlMergeMode$MergeMode
@5.2.0.RELEASE
+#values()[Lorg/springframework/test/context/jdbc/SqlMergeMode$MergeMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/context/jdbc/SqlMergeMode$MergeMode;

+###org/springframework/test/context/jdbc/SqlMergeMode
@5.2.0.RELEASE
+#value()Lorg/springframework/test/context/jdbc/SqlMergeMode$MergeMode;

+###org/springframework/test/context/TestConstructor
@5.2.0.RELEASE
+#autowireMode()Lorg/springframework/test/context/TestConstructor$AutowireMode;

+###org/springframework/test/context/TestConstructor$AutowireMode
@5.2.0.RELEASE
+#values()[Lorg/springframework/test/context/TestConstructor$AutowireMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/test/context/TestConstructor$AutowireMode;
@5.3.0
+#from(Ljava/lang/String;)Lorg/springframework/test/context/TestConstructor$AutowireMode;

+###org/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec
@5.3.0
+#controllerAdvice([Ljava/lang/Object;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#messageConverters([Lorg/springframework/http/converter/HttpMessageConverter;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#validator(Lorg/springframework/validation/Validator;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#conversionService(Lorg/springframework/format/support/FormattingConversionService;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#interceptors([Lorg/springframework/web/servlet/HandlerInterceptor;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#mappedInterceptors([Ljava/lang/String;[Lorg/springframework/web/servlet/HandlerInterceptor;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#contentNegotiationManager(Lorg/springframework/web/accept/ContentNegotiationManager;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#asyncRequestTimeout(J)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#customArgumentResolvers([Lorg/springframework/web/method/support/HandlerMethodArgumentResolver;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#customReturnValueHandlers([Lorg/springframework/web/method/support/HandlerMethodReturnValueHandler;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#handlerExceptionResolvers([Lorg/springframework/web/servlet/HandlerExceptionResolver;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#viewResolvers([Lorg/springframework/web/servlet/ViewResolver;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#singleView(Lorg/springframework/web/servlet/View;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#localeResolver(Lorg/springframework/web/servlet/LocaleResolver;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#flashMapManager(Lorg/springframework/web/servlet/FlashMapManager;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#patternParser(Lorg/springframework/web/util/pattern/PathPatternParser;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#useTrailingSlashPatternMatch(Z)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#placeholderValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#customHandlerMapping(Ljava/util/function/Supplier;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
@6.0.0
*#useTrailingSlashPatternMatch(Z)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;[deprecated]

+###org/springframework/test/web/servlet/client/MockMvcWebTestClient
@5.3.0
+#bindToController([Ljava/lang/Object;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$ControllerSpec;
+#bindToApplicationContext(Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#bindTo(Lorg/springframework/test/web/servlet/MockMvc;)Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#resultActionsFor(Lorg/springframework/test/web/reactive/server/ExchangeResult;)Lorg/springframework/test/web/servlet/ResultActions;

+###org/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec
@5.3.0
+#filters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#filter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#defaultRequest(Lorg/springframework/test/web/servlet/RequestBuilder;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#alwaysExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#dispatchOptions(Z)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#dispatcherServletCustomizer(Lorg/springframework/test/web/servlet/DispatcherServletCustomizer;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#apply(Lorg/springframework/test/web/servlet/setup/MockMvcConfigurer;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#configureClient()Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;
+#build()Lorg/springframework/test/web/reactive/server/WebTestClient;
@6.0.0
+#filters([Ljakarta/servlet/Filter;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
+#filter(Ljakarta/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
-#filters([Ljavax/servlet/Filter;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;
-#filter(Ljavax/servlet/Filter;[Ljava/lang/String;)Lorg/springframework/test/web/servlet/client/MockMvcWebTestClient$MockMvcServerSpec;

+###org/springframework/test/web/servlet/client/MockMvcHttpConnector
@5.3.0
+#<init>(Lorg/springframework/test/web/servlet/MockMvc;)V
+#connect(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;

+###org/springframework/test/web/reactive/server/CookieAssertions
@5.3.0
+#<init>(Lorg/springframework/test/web/reactive/server/ExchangeResult;Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;)V
+#valueEquals(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#value(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#value(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#exists(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#doesNotExist(Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#maxAge(Ljava/lang/String;Ljava/time/Duration;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#maxAge(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#path(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#path(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#domain(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#domain(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#secure(Ljava/lang/String;Z)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#httpOnly(Ljava/lang/String;Z)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;
+#sameSite(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/test/web/reactive/server/WebTestClient$ResponseSpec;

+###org/springframework/test/web/reactive/server/HttpHandlerConnector$FailureAfterResponseCompletedException
@5.2.2.RELEASE
+#getCompletedResponse()Lorg/springframework/http/client/reactive/ClientHttpResponse;

+###org/springframework/test/web/reactive/server/MockServerClientHttpResponse
@5.3.0
+#getServerResult()Ljava/lang/Object;

+###org/springframework/test/web/servlet/MockMvcResultHandlersDsl
@5.2.0.RELEASE
+#print()V
+#print(Ljava/io/OutputStream;)V
+#print(Ljava/io/Writer;)V
+#log()V
+#handle(Lorg/springframework/test/web/servlet/ResultHandler;)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V

+###org/springframework/test/web/servlet/MockMvcResultMatchersDsl
@5.2.0.RELEASE
+#request(Lkotlin/jvm/functions/Function1;)V
+#view(Lkotlin/jvm/functions/Function1;)V
+#model(Lkotlin/jvm/functions/Function1;)V
+#flash(Lkotlin/jvm/functions/Function1;)V
+#forwardedUrl(Ljava/lang/String;)V
+#forwardedUrlTemplate(Ljava/lang/String;[Ljava/lang/Object;)V
+#forwardedUrlPattern(Ljava/lang/String;)V
+#redirectedUrl(Ljava/lang/String;)V
+#redirectedUrlPattern(Ljava/lang/String;)V
+#status(Lkotlin/jvm/functions/Function1;)V
+#header(Lkotlin/jvm/functions/Function1;)V
+#content(Lkotlin/jvm/functions/Function1;)V
+#jsonPath(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#jsonPath(Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V
+#xpath(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V
+#xpath$default(Lorg/springframework/test/web/servlet/MockMvcResultMatchersDsl;Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#cookie(Lkotlin/jvm/functions/Function1;)V
+#match(Lorg/springframework/test/web/servlet/ResultMatcher;)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V
@6.0.4
+#matchAll([Lorg/springframework/test/web/servlet/ResultMatcher;)V

+###org/springframework/test/web/servlet/MockMultipartHttpServletRequestDsl
@5.2.0.RELEASE
+#file(Ljava/lang/String;[B)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
+#file(Lorg/springframework/mock/web/MockMultipartFile;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
+#part([Ljavax/servlet/http/Part;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
+#<init>(Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;)V
@6.0.0
+#part([Ljakarta/servlet/http/Part;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;
-#part([Ljavax/servlet/http/Part;)Lorg/springframework/test/web/servlet/request/MockMultipartHttpServletRequestBuilder;

+###org/springframework/test/web/servlet/MockMvcExtensionsKt
@5.2.0.RELEASE
+#get(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#get$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#get(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#get$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#post(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#post$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#post(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#post$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#put(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#put$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#put(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#put$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#patch(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#patch$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#patch(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#patch$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#delete(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#delete$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#delete(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#delete$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#options(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#options$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#options(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#options$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#head(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#head$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#head(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#head$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#request(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#request$default(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#request(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#request$default(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#multipart(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#multipart$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#multipart(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#multipart$default(Lorg/springframework/test/web/servlet/MockMvc;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
@6.0.5
+#multipart(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#multipart$default(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#multipart(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/net/URI;Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#multipart$default(Lorg/springframework/test/web/servlet/MockMvc;Lorg/springframework/http/HttpMethod;Ljava/net/URI;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/test/web/servlet/ResultActionsDsl;

+###org/springframework/test/web/servlet/MockHttpServletRequestDsl
@5.2.0.RELEASE
+#getContextPath()Ljava/lang/String;
+#setContextPath(Ljava/lang/String;)V
+#getServletPath()Ljava/lang/String;
+#setServletPath(Ljava/lang/String;)V
+#getPathInfo()Ljava/lang/String;
+#setPathInfo(Ljava/lang/String;)V
+#getSecure()Ljava/lang/Boolean;
+#setSecure(Ljava/lang/Boolean;)V
+#getCharacterEncoding()Ljava/lang/String;
+#setCharacterEncoding(Ljava/lang/String;)V
+#getContent()Ljava/lang/Object;
+#setContent(Ljava/lang/Object;)V
+#getAccept()Lorg/springframework/http/MediaType;
+#setAccept(Lorg/springframework/http/MediaType;)V
+#accept([Lorg/springframework/http/MediaType;)V
+#getContentType()Lorg/springframework/http/MediaType;
+#setContentType(Lorg/springframework/http/MediaType;)V
+#headers(Lkotlin/jvm/functions/Function1;)V
+#header(Ljava/lang/String;[Ljava/lang/Object;)V
+#param(Ljava/lang/String;[Ljava/lang/String;)V
+#getParams()Lorg/springframework/util/MultiValueMap;
+#setParams(Lorg/springframework/util/MultiValueMap;)V
+#cookie([Ljavax/servlet/http/Cookie;)V
+#locale([Ljava/util/Locale;)V
+#requestAttr(Ljava/lang/String;Ljava/lang/Object;)V
+#sessionAttr(Ljava/lang/String;Ljava/lang/Object;)V
+#getSessionAttrs()Ljava/util/Map;
+#setSessionAttrs(Ljava/util/Map;)V
+#flashAttr(Ljava/lang/String;Ljava/lang/Object;)V
+#getFlashAttrs()Ljava/util/Map;
+#setFlashAttrs(Ljava/util/Map;)V
+#getSession()Lorg/springframework/mock/web/MockHttpSession;
+#setSession(Lorg/springframework/mock/web/MockHttpSession;)V
+#getPrincipal()Ljava/security/Principal;
+#setPrincipal(Ljava/security/Principal;)V
+#with(Lorg/springframework/test/web/servlet/request/RequestPostProcessor;)V
+#merge(Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;)V
+#perform$spring_test(Lorg/springframework/test/web/servlet/MockMvc;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#<init>(Lorg/springframework/test/web/servlet/request/MockHttpServletRequestBuilder;)V
@6.0.0
+#cookie([Ljakarta/servlet/http/Cookie;)V
-#cookie([Ljavax/servlet/http/Cookie;)V

+###org/springframework/test/web/servlet/ResultActionsDsl
@5.2.0.RELEASE
+#andExpect(Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#andDo(Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#andReturn()Lorg/springframework/test/web/servlet/MvcResult;
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V
@5.2.2.RELEASE
+#asyncDispatch()Lorg/springframework/test/web/servlet/ResultActionsDsl;
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;Lorg/springframework/test/web/servlet/MockMvc;)V
-#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V
@6.0.4
+#andExpectAll(Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/servlet/ResultActionsDsl;

+###org/springframework/test/web/servlet/result/ViewResultMatchersDsl
@5.3.0
+#name(Lorg/hamcrest/Matcher;)V
+#name(Ljava/lang/String;)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V

+###org/springframework/test/web/servlet/result/FlashAttributeResultMatchersDsl
@5.3.0
+#attribute(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#attribute(Ljava/lang/String;Ljava/lang/Object;)V
+#attributeExists([Ljava/lang/String;)V
+#attributeCount(I)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V

+###org/springframework/test/web/servlet/result/ModelResultMatchersDsl
@5.3.0
+#attribute(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#attribute(Ljava/lang/String;Ljava/lang/Object;)V
+#attributeExists([Ljava/lang/String;)V
+#attributeDoesNotExist([Ljava/lang/String;)V
+#attributeErrorCount(Ljava/lang/String;I)V
+#attributeHasErrors([Ljava/lang/String;)V
+#attributeHasNoErrors([Ljava/lang/String;)V
+#attributeHasFieldErrors(Ljava/lang/String;[Ljava/lang/String;)V
+#attributeHasFieldErrorCode(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#attributeHasFieldErrorCode(Ljava/lang/String;Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#errorCount(I)V
+#hasErrors()V
+#hasNoErrors()V
+#size(I)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V

+###org/springframework/test/web/servlet/result/CookieResultMatchersDsl
@5.3.0
+#value(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#value(Ljava/lang/String;Ljava/lang/String;)V
+#exists(Ljava/lang/String;)V
+#doesNotExist(Ljava/lang/String;)V
+#maxAge(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#maxAge(Ljava/lang/String;I)V
+#path(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#path(Ljava/lang/String;Ljava/lang/String;)V
+#domain(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#domain(Ljava/lang/String;Ljava/lang/String;)V
+#comment(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#comment(Ljava/lang/String;Ljava/lang/String;)V
+#version(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#version(Ljava/lang/String;I)V
+#secure(Ljava/lang/String;Z)V
+#httpOnly(Ljava/lang/String;Z)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V

+###org/springframework/test/web/servlet/result/StatusResultMatchersDsl
@5.3.0
+#isEqualTo(Lorg/hamcrest/Matcher;)V
+#isEqualTo(I)V
+#is1xxInformational()V
+#is2xxSuccessful()V
+#is3xxRedirection()V
+#is4xxClientError()V
+#is5xxServerError()V
+#reason(Lorg/hamcrest/Matcher;)V
+#reason(Ljava/lang/String;)V
+#isContinue()V
+#isSwitchingProtocols()V
+#isProcessing()V
+#isCheckpoint()V
+#isOk()V
+#isCreated()V
+#isAccepted()V
+#isNonAuthoritativeInformation()V
+#isNoContent()V
+#isResetContent()V
+#isPartialContent()V
+#isMultiStatus()V
+#isAlreadyReported()V
+#isImUsed()V
+#isMultipleChoices()V
+#isFound()V
+#isSeeOther()V
+#isNotModified()V
+#isTemporaryRedirect()V
+#isPermanentRedirect()V
+#isBadRequest()V
+#isUnauthorized()V
+#isPaymentRequired()V
+#isForbidden()V
+#isNotFound()V
+#isMethodNotAllowed()V
+#isNotAcceptable()V
+#isProxyAuthenticationRequired()V
+#isRequestTimeout()V
+#isConflict()V
+#isGone()V
+#isLengthRequired()V
+#isPreconditionFailed()V
+#isPayloadTooLarge()V
+#isUriTooLong()V
+#isUnsupportedMediaType()V
+#isRequestedRangeNotSatisfiable()V
+#isExpectationFailed()V
+#isIAmATeapot()V
+#isUnprocessableEntity()V
+#isLocked()V
+#isFailedDependency()V
+#isTooEarly()V
+#isUpgradeRequired()V
+#isPreconditionRequired()V
+#isTooManyRequests()V
+#isRequestHeaderFieldsTooLarge()V
+#isUnavailableForLegalReasons()V
+#isInternalServerError()V
+#isNotImplemented()V
+#isBadGateway()V
+#isServiceUnavailable()V
+#isGatewayTimeout()V
+#isHttpVersionNotSupported()V
+#isVariantAlsoNegotiates()V
+#isInsufficientStorage()V
+#isLoopDetected()V
+#isBandwidthLimitExceeded()V
+#isNotExtended()V
+#isNetworkAuthenticationRequired()V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V
@6.0.5
+#isEarlyHints()V

+###org/springframework/test/web/servlet/result/HeaderResultMatchersDsl
@5.3.0
+#string(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#stringValues(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#string(Ljava/lang/String;Ljava/lang/String;)V
+#stringValues(Ljava/lang/String;[Ljava/lang/String;)V
+#exists(Ljava/lang/String;)V
+#doesNotExist(Ljava/lang/String;)V
+#longValue(Ljava/lang/String;J)V
+#dateValue(Ljava/lang/String;J)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V

+###org/springframework/test/web/servlet/result/XpathResultMatchersDsl
@5.3.0
+#node(Lorg/hamcrest/Matcher;)V
+#nodeList(Lorg/hamcrest/Matcher;)V
+#exists()V
+#doesNotExist()V
+#nodeCount(Lorg/hamcrest/Matcher;)V
+#nodeCount(I)V
+#string(Lorg/hamcrest/Matcher;)V
+#string(Ljava/lang/String;)V
+#number(Lorg/hamcrest/Matcher;)V
+#number(D)V
+#booleanValue(Z)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;Ljava/lang/String;Ljava/util/Map;[Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V

+###org/springframework/test/web/servlet/result/ContentResultMatchersDsl
@5.3.0
+#contentType(Ljava/lang/String;)V
+#contentType(Lorg/springframework/http/MediaType;)V
+#contentTypeCompatibleWith(Ljava/lang/String;)V
+#contentTypeCompatibleWith(Lorg/springframework/http/MediaType;)V
+#encoding(Ljava/lang/String;)V
+#string(Lorg/hamcrest/Matcher;)V
+#string(Ljava/lang/String;)V
+#bytes([B)V
+#xml(Ljava/lang/String;)V
+#node(Lorg/hamcrest/Matcher;)V
+#source(Lorg/hamcrest/Matcher;)V
+#json(Ljava/lang/String;Z)V
+#json$default(Lorg/springframework/test/web/servlet/result/ContentResultMatchersDsl;Ljava/lang/String;ZILjava/lang/Object;)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V

+###org/springframework/test/web/servlet/result/RequestResultMatchersDsl
@5.3.0
+#asyncStarted()V
+#asyncNotStarted()V
+#asyncResult(Lorg/hamcrest/Matcher;)V
+#asyncResult(Ljava/lang/Object;)V
+#attribute(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#attribute(Ljava/lang/String;Ljava/lang/Object;)V
+#sessionAttribute(Ljava/lang/String;Lorg/hamcrest/Matcher;)V
+#sessionAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#sessionAttributeDoesNotExist([Ljava/lang/String;)V
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;)V

+###org/springframework/test/web/servlet/result/JsonPathResultMatchersDsl
@5.3.0
+#matchers$annotations()V
+#getMatchers()Lorg/springframework/test/web/servlet/result/JsonPathResultMatchers;
+#prefix(Ljava/lang/String;)V
+#value(Lorg/hamcrest/Matcher;)V
+#value(Ljava/lang/Object;)V
+#exists()V
+#doesNotExist()V
+#isEmpty()V
+#isNotEmpty()V
+#hasJsonPath()V
+#doesNotHaveJsonPath()V
+#isString()V
+#isBoolean()V
+#isNumber()V
+#isArray()V
+#isMap()V
+#actions$annotations()V
+#getActions()Lorg/springframework/test/web/servlet/ResultActions;
+#<init>(Lorg/springframework/test/web/servlet/ResultActions;Ljava/lang/String;[Ljava/lang/Object;)V
@6.0.0
+#getActions$annotations()V
+#getMatchers$annotations()V
-#matchers$annotations()V
-#actions$annotations()V

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$body$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$2$1$isEqualTo$1
@5.3.0
+#run()V
+#<init>(Lorg/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$2$1;Ljava/lang/Object;)V
@6.0.0
-###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$2$1$isEqualTo$1

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$2$1
@5.3.0
+#isEqualTo(Ljava/lang/Object;)Lorg/springframework/test/web/reactive/server/KotlinBodySpec;
+#consumeWith(Lkotlin/jvm/functions/Function1;)Lorg/springframework/test/web/reactive/server/KotlinBodySpec;
+#returnResult()Lorg/springframework/test/web/reactive/server/EntityExchangeResult;
+#<init>(Lorg/springframework/test/web/reactive/server/EntityExchangeResult;)V
@6.0.0
-###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$2$1

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$returnResult$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$1
@5.2.3.RELEASE
+#<init>()V

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$body$3
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$body$2
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBodyList$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$2$1$consumeWith$1
@5.3.0
+#run()V
+#<init>(Lorg/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$2$1;Lkotlin/jvm/functions/Function1;)V
@6.0.0
-###org/springframework/test/web/reactive/server/WebTestClientExtensionsKt$expectBody$2$1$consumeWith$1

+###org/springframework/test/context/transaction/TransactionConfiguration
@2.5
+#transactionManager()Ljava/lang/String;
+#defaultRollback()Z
@5.0.0.RELEASE
-###org/springframework/test/context/transaction/TransactionConfiguration

+###org/springframework/test/context/transaction/TransactionConfigurationAttributes
@2.5
+#<init>(Ljava/lang/String;Z)V
+#getTransactionManagerName()Ljava/lang/String;
+#isDefaultRollback()Z
+#toString()Ljava/lang/String;
@4.2.0.RELEASE
+#<init>()V
@5.0.0.RELEASE
-###org/springframework/test/context/transaction/TransactionConfigurationAttributes

+###org/springframework/test/util/MatcherAssertionErrors
@3.2.0.RELEASE
+#assertThat(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
+#assertThat(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
@4.2.0.RELEASE
+#<init>()V
@5.0.0.RELEASE
-###org/springframework/test/util/MatcherAssertionErrors

+###org/springframework/mock/web/portlet/MockResourceRequest
@3.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/mock/web/portlet/MockResourceURL;)V
+#<init>(Ljavax/portlet/PortletContext;)V
+#<init>(Ljavax/portlet/PortalContext;Ljavax/portlet/PortletContext;)V
+#setResourceID(Ljava/lang/String;)V
+#getResourceID()Ljava/lang/String;
+#setCacheability(Ljava/lang/String;)V
+#getCacheability()Ljava/lang/String;
+#getETag()Ljava/lang/String;
+#addPrivateRenderParameter(Ljava/lang/String;Ljava/lang/String;)V
+#addPrivateRenderParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#getPrivateRenderParameterMap()Ljava/util/Map;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockResourceRequest

+###org/springframework/mock/web/portlet/MockBaseURL
@3.0.0.RELEASE
+#<init>()V
+#setParameter(Ljava/lang/String;Ljava/lang/String;)V
+#setParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#setParameters(Ljava/util/Map;)V
+#getParameterNames()Ljava/util/Set;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#setSecure(Z)V
+#isSecure()Z
+#write(Ljava/io/Writer;)V
+#write(Ljava/io/Writer;Z)V
+#addProperty(Ljava/lang/String;Ljava/lang/String;)V
+#setProperty(Ljava/lang/String;Ljava/lang/String;)V
+#getProperties()Ljava/util/Map;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockBaseURL

+###org/springframework/mock/web/portlet/ServletWrappingPortletContext
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;)V
+#getServletContext()Ljavax/servlet/ServletContext;
+#getServerInfo()Ljava/lang/String;
+#getRequestDispatcher(Ljava/lang/String;)Ljavax/portlet/PortletRequestDispatcher;
+#getNamedDispatcher(Ljava/lang/String;)Ljavax/portlet/PortletRequestDispatcher;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getMajorVersion()I
+#getMinorVersion()I
+#getMimeType(Ljava/lang/String;)Ljava/lang/String;
+#getRealPath(Ljava/lang/String;)Ljava/lang/String;
+#getResourcePaths(Ljava/lang/String;)Ljava/util/Set;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeNames()Ljava/util/Enumeration;
+#getInitParameter(Ljava/lang/String;)Ljava/lang/String;
+#getInitParameterNames()Ljava/util/Enumeration;
+#log(Ljava/lang/String;)V
+#log(Ljava/lang/String;Ljava/lang/Throwable;)V
+#removeAttribute(Ljava/lang/String;)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getPortletContextName()Ljava/lang/String;
+#getContainerRuntimeOptions()Ljava/util/Enumeration;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/ServletWrappingPortletContext

+###org/springframework/mock/web/portlet/MockPortletPreferences
@2.5
+#<init>()V
+#setReadOnly(Ljava/lang/String;Z)V
+#isReadOnly(Ljava/lang/String;)Z
+#getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getValues(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#setValue(Ljava/lang/String;Ljava/lang/String;)V
+#setValues(Ljava/lang/String;[Ljava/lang/String;)V
+#getNames()Ljava/util/Enumeration;
+#getMap()Ljava/util/Map;
+#reset(Ljava/lang/String;)V
+#setPreferencesValidator(Ljavax/portlet/PreferencesValidator;)V
+#store()V
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortletPreferences

+###org/springframework/mock/web/portlet/MockPortletConfig
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljavax/portlet/PortletContext;)V
+#<init>(Ljavax/portlet/PortletContext;Ljava/lang/String;)V
+#getPortletName()Ljava/lang/String;
+#getPortletContext()Ljavax/portlet/PortletContext;
+#setResourceBundle(Ljava/util/Locale;Ljava/util/ResourceBundle;)V
+#getResourceBundle(Ljava/util/Locale;)Ljava/util/ResourceBundle;
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getInitParameter(Ljava/lang/String;)Ljava/lang/String;
+#getInitParameterNames()Ljava/util/Enumeration;
@3.0.0.RELEASE
+#addPublicRenderParameterName(Ljava/lang/String;)V
+#getPublicRenderParameterNames()Ljava/util/Enumeration;
+#setDefaultNamespace(Ljava/lang/String;)V
+#getDefaultNamespace()Ljava/lang/String;
+#addPublishingEventQName(Ljavax/xml/namespace/QName;)V
+#getPublishingEventQNames()Ljava/util/Enumeration;
+#addProcessingEventQName(Ljavax/xml/namespace/QName;)V
+#getProcessingEventQNames()Ljava/util/Enumeration;
+#addSupportedLocale(Ljava/util/Locale;)V
+#getSupportedLocales()Ljava/util/Enumeration;
+#addContainerRuntimeOption(Ljava/lang/String;Ljava/lang/String;)V
+#addContainerRuntimeOption(Ljava/lang/String;[Ljava/lang/String;)V
+#getContainerRuntimeOptions()Ljava/util/Map;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortletConfig

+###org/springframework/mock/web/portlet/MockStateAwareResponse
@3.0.0.RELEASE
+#<init>()V
+#<init>(Ljavax/portlet/PortalContext;)V
+#setWindowState(Ljavax/portlet/WindowState;)V
+#getWindowState()Ljavax/portlet/WindowState;
+#setPortletMode(Ljavax/portlet/PortletMode;)V
+#getPortletMode()Ljavax/portlet/PortletMode;
+#setRenderParameters(Ljava/util/Map;)V
+#setRenderParameter(Ljava/lang/String;Ljava/lang/String;)V
+#setRenderParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#getRenderParameter(Ljava/lang/String;)Ljava/lang/String;
+#getRenderParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getRenderParameterNames()Ljava/util/Iterator;
+#getRenderParameterMap()Ljava/util/Map;
+#removePublicRenderParameter(Ljava/lang/String;)V
+#setEvent(Ljavax/xml/namespace/QName;Ljava/io/Serializable;)V
+#setEvent(Ljava/lang/String;Ljava/io/Serializable;)V
+#getEventNames()Ljava/util/Iterator;
+#getEvent(Ljavax/xml/namespace/QName;)Ljava/io/Serializable;
+#getEvent(Ljava/lang/String;)Ljava/io/Serializable;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockStateAwareResponse

+###org/springframework/mock/web/portlet/MockPortalContext
@2.5
+#<init>()V
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#getPortalInfo()Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getPropertyNames()Ljava/util/Enumeration;
+#getSupportedPortletModes()Ljava/util/Enumeration;
+#getSupportedWindowStates()Ljava/util/Enumeration;
@3.0.0.RELEASE
+#setProperty(Ljava/lang/String;Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortalContext

+###org/springframework/mock/web/portlet/MockResourceResponse
@3.0.0.RELEASE
+#<init>()V
+#setContentLength(I)V
+#getContentLength()I
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockResourceResponse

+###org/springframework/mock/web/portlet/MockPortletRequestDispatcher
@2.5
+#<init>(Ljava/lang/String;)V
+#include(Ljavax/portlet/RenderRequest;Ljavax/portlet/RenderResponse;)V
@3.0.0.RELEASE
+#include(Ljavax/portlet/PortletRequest;Ljavax/portlet/PortletResponse;)V
+#forward(Ljavax/portlet/PortletRequest;Ljavax/portlet/PortletResponse;)V
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortletRequestDispatcher

+###org/springframework/mock/web/portlet/MockPortletResponse
@2.5
+#<init>()V
+#<init>(Ljavax/portlet/PortalContext;)V
+#getPortalContext()Ljavax/portlet/PortalContext;
+#addProperty(Ljava/lang/String;Ljava/lang/String;)V
+#setProperty(Ljava/lang/String;Ljava/lang/String;)V
+#getPropertyNames()Ljava/util/Set;
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperties(Ljava/lang/String;)[Ljava/lang/String;
+#encodeURL(Ljava/lang/String;)Ljava/lang/String;
@3.0.0.RELEASE
+#setNamespace(Ljava/lang/String;)V
+#getNamespace()Ljava/lang/String;
+#addProperty(Ljavax/servlet/http/Cookie;)V
+#getCookies()[Ljavax/servlet/http/Cookie;
+#getCookie(Ljava/lang/String;)Ljavax/servlet/http/Cookie;
+#addProperty(Ljava/lang/String;Lorg/w3c/dom/Element;)V
+#getXmlPropertyNames()Ljava/util/Set;
+#getXmlProperty(Ljava/lang/String;)Lorg/w3c/dom/Element;
+#getXmlProperties(Ljava/lang/String;)[Lorg/w3c/dom/Element;
+#createElement(Ljava/lang/String;)Lorg/w3c/dom/Element;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortletResponse

+###org/springframework/mock/web/portlet/MockPortletContext
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
+#getServerInfo()Ljava/lang/String;
+#getRequestDispatcher(Ljava/lang/String;)Ljavax/portlet/PortletRequestDispatcher;
+#getNamedDispatcher(Ljava/lang/String;)Ljavax/portlet/PortletRequestDispatcher;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getMajorVersion()I
+#getMinorVersion()I
+#getMimeType(Ljava/lang/String;)Ljava/lang/String;
+#getRealPath(Ljava/lang/String;)Ljava/lang/String;
+#getResourcePaths(Ljava/lang/String;)Ljava/util/Set;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeNames()Ljava/util/Enumeration;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)V
+#addInitParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getInitParameter(Ljava/lang/String;)Ljava/lang/String;
+#getInitParameterNames()Ljava/util/Enumeration;
+#log(Ljava/lang/String;)V
+#log(Ljava/lang/String;Ljava/lang/Throwable;)V
+#setPortletContextName(Ljava/lang/String;)V
+#getPortletContextName()Ljava/lang/String;
@3.0.0.RELEASE
+#addContainerRuntimeOption(Ljava/lang/String;)V
+#getContainerRuntimeOptions()Ljava/util/Enumeration;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortletContext

+###org/springframework/mock/web/portlet/MockClientDataRequest
@3.0.0.RELEASE
+#<init>()V
+#<init>(Ljavax/portlet/PortletContext;)V
+#<init>(Ljavax/portlet/PortalContext;Ljavax/portlet/PortletContext;)V
+#setContent([B)V
+#getPortletInputStream()Ljava/io/InputStream;
+#setCharacterEncoding(Ljava/lang/String;)V
+#getReader()Ljava/io/BufferedReader;
+#getCharacterEncoding()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#getContentLength()I
+#setMethod(Ljava/lang/String;)V
+#getMethod()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockClientDataRequest

+###org/springframework/mock/web/portlet/MockRenderRequest
@2.5
+#<init>()V
+#<init>(Ljavax/portlet/PortletMode;)V
+#<init>(Ljavax/portlet/PortletContext;)V
+#<init>(Ljavax/portlet/PortalContext;Ljavax/portlet/PortletContext;)V
@3.0.0.RELEASE
+#<init>(Ljavax/portlet/PortletMode;Ljavax/portlet/WindowState;)V
+#getETag()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockRenderRequest

+###org/springframework/mock/web/portlet/MockPortletSession
@2.5
+#<init>()V
+#<init>(Ljavax/portlet/PortletContext;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttribute(Ljava/lang/String;I)Ljava/lang/Object;
+#getAttributeNames()Ljava/util/Enumeration;
+#getAttributeNames(I)Ljava/util/Enumeration;
+#getCreationTime()J
+#getId()Ljava/lang/String;
+#access()V
+#getLastAccessedTime()J
+#getMaxInactiveInterval()I
+#invalidate()V
+#isInvalid()Z
+#setNew(Z)V
+#isNew()Z
+#removeAttribute(Ljava/lang/String;)V
+#removeAttribute(Ljava/lang/String;I)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;I)V
+#setMaxInactiveInterval(I)V
+#getPortletContext()Ljavax/portlet/PortletContext;
@3.0.0.RELEASE
+#clearAttributes()V
+#getAttributeMap()Ljava/util/Map;
+#getAttributeMap(I)Ljava/util/Map;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortletSession

+###org/springframework/mock/web/portlet/MockEventResponse
@3.0.0.RELEASE
+#<init>()V
+#setRenderParameters(Ljavax/portlet/EventRequest;)V
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockEventResponse

+###org/springframework/mock/web/portlet/MockRenderResponse
@2.5
+#<init>()V
+#<init>(Ljavax/portlet/PortalContext;)V
+#getContentType()Ljava/lang/String;
+#createRenderURL()Ljavax/portlet/PortletURL;
+#createActionURL()Ljavax/portlet/PortletURL;
+#getNamespace()Ljava/lang/String;
+#setTitle(Ljava/lang/String;)V
+#getTitle()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#setCharacterEncoding(Ljava/lang/String;)V
+#getCharacterEncoding()Ljava/lang/String;
+#getWriter()Ljava/io/PrintWriter;
+#getContentAsByteArray()[B
+#getContentAsString()Ljava/lang/String;
+#setLocale(Ljava/util/Locale;)V
+#getLocale()Ljava/util/Locale;
+#setBufferSize(I)V
+#getBufferSize()I
+#flushBuffer()V
+#resetBuffer()V
+#setCommitted(Z)V
+#isCommitted()Z
+#reset()V
+#getPortletOutputStream()Ljava/io/OutputStream;
+#setIncludedUrl(Ljava/lang/String;)V
+#getIncludedUrl()Ljava/lang/String;
@3.0.0.RELEASE
+#<init>(Ljavax/portlet/PortalContext;Ljavax/portlet/RenderRequest;)V
+#setNextPossiblePortletModes(Ljava/util/Collection;)V
+#getNextPossiblePortletModes()Ljava/util/Collection;
-#getContentType()Ljava/lang/String;
-#createRenderURL()Ljavax/portlet/PortletURL;
-#createActionURL()Ljavax/portlet/PortletURL;
-#getNamespace()Ljava/lang/String;
-#setContentType(Ljava/lang/String;)V
-#setCharacterEncoding(Ljava/lang/String;)V
-#getCharacterEncoding()Ljava/lang/String;
-#getWriter()Ljava/io/PrintWriter;
-#getContentAsByteArray()[B
-#getContentAsString()Ljava/lang/String;
-#setLocale(Ljava/util/Locale;)V
-#getLocale()Ljava/util/Locale;
-#setBufferSize(I)V
-#getBufferSize()I
-#flushBuffer()V
-#resetBuffer()V
-#setCommitted(Z)V
-#isCommitted()Z
-#reset()V
-#getPortletOutputStream()Ljava/io/OutputStream;
-#setIncludedUrl(Ljava/lang/String;)V
-#getIncludedUrl()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockRenderResponse

+###org/springframework/mock/web/portlet/MockEventRequest
@3.0.0.RELEASE
+#<init>(Ljavax/portlet/Event;)V
+#<init>(Ljavax/portlet/Event;Ljavax/portlet/PortletContext;)V
+#<init>(Ljavax/portlet/Event;Ljavax/portlet/PortalContext;Ljavax/portlet/PortletContext;)V
+#getEvent()Ljavax/portlet/Event;
+#setMethod(Ljava/lang/String;)V
+#getMethod()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockEventRequest

+###org/springframework/mock/web/portlet/MockResourceURL
@3.0.0.RELEASE
+#<init>()V
+#setResourceID(Ljava/lang/String;)V
+#getResourceID()Ljava/lang/String;
+#setCacheability(Ljava/lang/String;)V
+#getCacheability()Ljava/lang/String;
+#toString()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockResourceURL

+###org/springframework/mock/web/portlet/MockPortletRequest
@2.5
+#<init>()V
+#<init>(Ljavax/portlet/PortletContext;)V
+#<init>(Ljavax/portlet/PortalContext;Ljavax/portlet/PortletContext;)V
+#isActive()Z
+#close()V
+#isWindowStateAllowed(Ljavax/portlet/WindowState;)Z
+#isPortletModeAllowed(Ljavax/portlet/PortletMode;)Z
+#setPortletMode(Ljavax/portlet/PortletMode;)V
+#getPortletMode()Ljavax/portlet/PortletMode;
+#setWindowState(Ljavax/portlet/WindowState;)V
+#getWindowState()Ljavax/portlet/WindowState;
+#setPreferences(Ljavax/portlet/PortletPreferences;)V
+#getPreferences()Ljavax/portlet/PortletPreferences;
+#setSession(Ljavax/portlet/PortletSession;)V
+#getPortletSession()Ljavax/portlet/PortletSession;
+#getPortletSession(Z)Ljavax/portlet/PortletSession;
+#setProperty(Ljava/lang/String;Ljava/lang/String;)V
+#addProperty(Ljava/lang/String;Ljava/lang/String;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperties(Ljava/lang/String;)Ljava/util/Enumeration;
+#getPropertyNames()Ljava/util/Enumeration;
+#getPortalContext()Ljavax/portlet/PortalContext;
+#setAuthType(Ljava/lang/String;)V
+#getAuthType()Ljava/lang/String;
+#setContextPath(Ljava/lang/String;)V
+#getContextPath()Ljava/lang/String;
+#setRemoteUser(Ljava/lang/String;)V
+#getRemoteUser()Ljava/lang/String;
+#setUserPrincipal(Ljava/security/Principal;)V
+#getUserPrincipal()Ljava/security/Principal;
+#addUserRole(Ljava/lang/String;)V
+#isUserInRole(Ljava/lang/String;)Z
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeNames()Ljava/util/Enumeration;
+#setParameters(Ljava/util/Map;)V
+#setParameter(Ljava/lang/String;Ljava/lang/String;)V
+#setParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#addParameter(Ljava/lang/String;Ljava/lang/String;)V
+#addParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterNames()Ljava/util/Enumeration;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#setSecure(Z)V
+#isSecure()Z
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)V
+#getRequestedSessionId()Ljava/lang/String;
+#setRequestedSessionIdValid(Z)V
+#isRequestedSessionIdValid()Z
+#addResponseContentType(Ljava/lang/String;)V
+#addPreferredResponseContentType(Ljava/lang/String;)V
+#getResponseContentType()Ljava/lang/String;
+#getResponseContentTypes()Ljava/util/Enumeration;
+#addLocale(Ljava/util/Locale;)V
+#addPreferredLocale(Ljava/util/Locale;)V
+#getLocale()Ljava/util/Locale;
+#getLocales()Ljava/util/Enumeration;
+#setScheme(Ljava/lang/String;)V
+#getScheme()Ljava/lang/String;
+#setServerName(Ljava/lang/String;)V
+#getServerName()Ljava/lang/String;
+#setServerPort(I)V
+#getServerPort()I
@3.0.0.RELEASE
+#setWindowID(Ljava/lang/String;)V
+#getWindowID()Ljava/lang/String;
+#setCookies([Ljavax/servlet/http/Cookie;)V
+#getCookies()[Ljavax/servlet/http/Cookie;
+#getPrivateParameterMap()Ljava/util/Map;
+#getPublicParameterMap()Ljava/util/Map;
+#registerPublicParameter(Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortletRequest

+###org/springframework/mock/web/portlet/MockActionResponse
@2.5
+#<init>()V
+#<init>(Ljavax/portlet/PortalContext;)V
+#setWindowState(Ljavax/portlet/WindowState;)V
+#getWindowState()Ljavax/portlet/WindowState;
+#setPortletMode(Ljavax/portlet/PortletMode;)V
+#getPortletMode()Ljavax/portlet/PortletMode;
+#sendRedirect(Ljava/lang/String;)V
+#getRedirectedUrl()Ljava/lang/String;
+#setRenderParameters(Ljava/util/Map;)V
+#setRenderParameter(Ljava/lang/String;Ljava/lang/String;)V
+#getRenderParameter(Ljava/lang/String;)Ljava/lang/String;
+#setRenderParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#getRenderParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getRenderParameterNames()Ljava/util/Iterator;
+#getRenderParameterMap()Ljava/util/Map;
@3.0.0.RELEASE
+#sendRedirect(Ljava/lang/String;Ljava/lang/String;)V
-#getWindowState()Ljavax/portlet/WindowState;
-#getPortletMode()Ljavax/portlet/PortletMode;
-#getRenderParameter(Ljava/lang/String;)Ljava/lang/String;
-#getRenderParameterValues(Ljava/lang/String;)[Ljava/lang/String;
-#getRenderParameterNames()Ljava/util/Iterator;
-#getRenderParameterMap()Ljava/util/Map;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockActionResponse

+###org/springframework/mock/web/portlet/MockMultipartActionRequest
@2.5
+#<init>()V
+#addFile(Lorg/springframework/web/multipart/MultipartFile;)V
+#getFileNames()Ljava/util/Iterator;
+#getFile(Ljava/lang/String;)Lorg/springframework/web/multipart/MultipartFile;
+#getFileMap()Ljava/util/Map;
@3.0.0.RELEASE
+#getFiles(Ljava/lang/String;)Ljava/util/List;
+#getMultiFileMap()Lorg/springframework/util/MultiValueMap;
@3.1.0.RELEASE
+#getMultipartContentType(Ljava/lang/String;)Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockMultipartActionRequest

+###org/springframework/mock/web/portlet/MockEvent
@3.0.0.RELEASE
+#<init>(Ljavax/xml/namespace/QName;)V
+#<init>(Ljavax/xml/namespace/QName;Ljava/io/Serializable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/io/Serializable;)V
+#getQName()Ljavax/xml/namespace/QName;
+#getName()Ljava/lang/String;
+#getValue()Ljava/io/Serializable;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockEvent

+###org/springframework/mock/web/portlet/MockPortletURL
@2.5
+#<init>(Ljavax/portlet/PortalContext;Ljava/lang/String;)V
+#setWindowState(Ljavax/portlet/WindowState;)V
+#setPortletMode(Ljavax/portlet/PortletMode;)V
+#setParameter(Ljava/lang/String;Ljava/lang/String;)V
+#setParameter(Ljava/lang/String;[Ljava/lang/String;)V
+#setParameters(Ljava/util/Map;)V
+#getParameterNames()Ljava/util/Set;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#setSecure(Z)V
+#isSecure()Z
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
+#getWindowState()Ljavax/portlet/WindowState;
+#getPortletMode()Ljavax/portlet/PortletMode;
+#removePublicRenderParameter(Ljava/lang/String;)V
-#setParameter(Ljava/lang/String;Ljava/lang/String;)V
-#setParameter(Ljava/lang/String;[Ljava/lang/String;)V
-#setParameters(Ljava/util/Map;)V
-#getParameterNames()Ljava/util/Set;
-#getParameter(Ljava/lang/String;)Ljava/lang/String;
-#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
-#getParameterMap()Ljava/util/Map;
-#setSecure(Z)V
-#isSecure()Z
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockPortletURL

+###org/springframework/mock/web/portlet/MockMimeResponse
@3.0.0.RELEASE
+#<init>()V
+#<init>(Ljavax/portlet/PortalContext;)V
+#<init>(Ljavax/portlet/PortalContext;Ljavax/portlet/PortletRequest;)V
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#setCharacterEncoding(Ljava/lang/String;)V
+#getCharacterEncoding()Ljava/lang/String;
+#getWriter()Ljava/io/PrintWriter;
+#getContentAsByteArray()[B
+#getContentAsString()Ljava/lang/String;
+#setLocale(Ljava/util/Locale;)V
+#getLocale()Ljava/util/Locale;
+#setBufferSize(I)V
+#getBufferSize()I
+#flushBuffer()V
+#resetBuffer()V
+#setCommitted(Z)V
+#isCommitted()Z
+#reset()V
+#getPortletOutputStream()Ljava/io/OutputStream;
+#createRenderURL()Ljavax/portlet/PortletURL;
+#createActionURL()Ljavax/portlet/PortletURL;
+#createResourceURL()Ljavax/portlet/ResourceURL;
+#getCacheControl()Ljavax/portlet/CacheControl;
+#setIncludedUrl(Ljava/lang/String;)V
+#getIncludedUrl()Ljava/lang/String;
+#setForwardedUrl(Ljava/lang/String;)V
+#getForwardedUrl()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockMimeResponse

+###org/springframework/mock/web/portlet/MockCacheControl
@3.0.0.RELEASE
+#<init>()V
+#getExpirationTime()I
+#setExpirationTime(I)V
+#isPublicScope()Z
+#setPublicScope(Z)V
+#getETag()Ljava/lang/String;
+#setETag(Ljava/lang/String;)V
+#useCachedContent()Z
+#setUseCachedContent(Z)V
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockCacheControl

+###org/springframework/mock/web/portlet/MockActionRequest
@2.5
+#<init>()V
+#<init>(Ljavax/portlet/PortletMode;)V
+#<init>(Ljavax/portlet/PortletContext;)V
+#<init>(Ljavax/portlet/PortalContext;Ljavax/portlet/PortletContext;)V
+#setContent([B)V
+#getPortletInputStream()Ljava/io/InputStream;
+#setCharacterEncoding(Ljava/lang/String;)V
+#getReader()Ljava/io/BufferedReader;
+#getCharacterEncoding()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#getContentLength()I
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
-#setContent([B)V
-#getPortletInputStream()Ljava/io/InputStream;
-#setCharacterEncoding(Ljava/lang/String;)V
-#getReader()Ljava/io/BufferedReader;
-#getCharacterEncoding()Ljava/lang/String;
-#setContentType(Ljava/lang/String;)V
-#getContentType()Ljava/lang/String;
-#getContentLength()I
@5.0.0.RELEASE
-###org/springframework/mock/web/portlet/MockActionRequest

+###org/springframework/mock/web/MockHttpServletMapping
@5.3.4
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/MappingMatch;)V
+#getMatchValue()Ljava/lang/String;
+#getPattern()Ljava/lang/String;
+#getServletName()Ljava/lang/String;
+#getMappingMatch()Ljavax/servlet/http/MappingMatch;
+#toString()Ljava/lang/String;
@6.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljakarta/servlet/http/MappingMatch;)V
+#getMappingMatch()Ljakarta/servlet/http/MappingMatch;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/MappingMatch;)V
-#getMappingMatch()Ljavax/servlet/http/MappingMatch;

+###org/springframework/test/context/event/ApplicationEventsTestExecutionListener
@5.3.3
+#<init>()V
+#getOrder()I
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/test/context/event/ApplicationEvents
@5.3.3
+#stream()Ljava/util/stream/Stream;
+#stream(Ljava/lang/Class;)Ljava/util/stream/Stream;
+#clear()V

+###org/springframework/test/context/event/ApplicationEventsHolder
@5.3.3
+#getApplicationEvents()Lorg/springframework/test/context/event/ApplicationEvents;
+#getRequiredApplicationEvents()Lorg/springframework/test/context/event/ApplicationEvents;

+###org/springframework/test/context/event/RecordApplicationEvents
@5.3.3

+###org/springframework/test/util/ExceptionCollector
@5.3.10
+#<init>()V
+#execute(Lorg/springframework/test/util/ExceptionCollector$Executable;)V
+#getExceptions()Ljava/util/List;
+#assertEmpty()V

+###org/springframework/test/util/ExceptionCollector$Executable
@5.3.10
+#execute()V

+###org/springframework/test/web/reactive/server/WebTestClient$ResponseSpec$ResponseSpecConsumer
@5.3.10

+###org/springframework/test/AbstractDependencyInjectionSpringContextTests
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setPopulateProtectedVariables(Z)V
+#isPopulateProtectedVariables()Z
+#setAutowireMode(I)V
+#getAutowireMode()I
+#setDependencyCheck(Z)V
+#isDependencyCheck()Z
@4.0.0.RELEASE
-###org/springframework/test/AbstractDependencyInjectionSpringContextTests

+###org/springframework/test/AbstractSingleSpringContextTests
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;
+#getLoadCount()I
@4.0.0.RELEASE
-###org/springframework/test/AbstractSingleSpringContextTests

+###org/springframework/test/AbstractSpringContextTests
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#addContext(Ljava/lang/Object;Lorg/springframework/context/ConfigurableApplicationContext;)V
@4.0.0.RELEASE
-###org/springframework/test/AbstractSpringContextTests

+###org/springframework/test/AbstractTransactionalDataSourceSpringContextTests
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setDataSource(Ljavax/sql/DataSource;)V
+#getJdbcTemplate()Lorg/springframework/jdbc/core/JdbcTemplate;
@2.5.2
+#setSqlScriptEncoding(Ljava/lang/String;)V
@4.0.0.RELEASE
-###org/springframework/test/AbstractTransactionalDataSourceSpringContextTests

+###org/springframework/test/AbstractTransactionalSpringContextTests
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#setDefaultRollback(Z)V
@4.0.0.RELEASE
-###org/springframework/test/AbstractTransactionalSpringContextTests

+###org/springframework/test/AssertThrows
@2.5
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#setFailureMessage(Ljava/lang/String;)V
+#test()V
+#runTest()V
+#getActualException()Ljava/lang/Exception;
@4.1.0.RELEASE
+#getActualException()Ljava/lang/Throwable;
-#getActualException()Ljava/lang/Exception;
@4.2.0.RELEASE
-###org/springframework/test/AssertThrows

+###org/springframework/test/ConditionalTestCase
@2.5
+#getDisabledTestCount()I
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#runBare()V
@4.0.0.RELEASE
-###org/springframework/test/ConditionalTestCase

+###org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setDataSource(Ljavax/sql/DataSource;)V
+#runBare()V
@4.0.0.RELEASE
-###org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests

+###org/springframework/test/annotation/ExpectedException
@2.5
+#value()Ljava/lang/Class;
@4.0.0.RELEASE
-###org/springframework/test/annotation/ExpectedException

+###org/springframework/test/annotation/NotTransactional
@2.5
@4.0.0.RELEASE
-###org/springframework/test/annotation/NotTransactional

+###org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests
@2.5
+#getDisabledTestCount()I
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#runBare()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@4.0.0.RELEASE
-###org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests

+###org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests
@2.5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setDataSource(Ljavax/sql/DataSource;)V
@2.5.2
+#setSqlScriptEncoding(Ljava/lang/String;)V
@4.0.0.RELEASE
-###org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests

+###org/springframework/test/jdbc/SimpleJdbcTestUtils
@2.5
+#<init>()V
+#countRowsInTable(Lorg/springframework/jdbc/core/simple/SimpleJdbcTemplate;Ljava/lang/String;)I
+#deleteFromTables(Lorg/springframework/jdbc/core/simple/SimpleJdbcTemplate;[Ljava/lang/String;)I
+#executeSqlScript(Lorg/springframework/jdbc/core/simple/SimpleJdbcTemplate;Lorg/springframework/core/io/ResourceLoader;Ljava/lang/String;Z)V
@2.5.2
+#executeSqlScript(Lorg/springframework/jdbc/core/simple/SimpleJdbcTemplate;Lorg/springframework/core/io/Resource;Z)V
+#executeSqlScript(Lorg/springframework/jdbc/core/simple/SimpleJdbcTemplate;Lorg/springframework/core/io/support/EncodedResource;Z)V
@4.0.0.RELEASE
-###org/springframework/test/jdbc/SimpleJdbcTestUtils

+###org/springframework/test/jpa/AbstractAspectjJpaTests
@2.5
+#<init>()V
@4.0.0.RELEASE
-###org/springframework/test/jpa/AbstractAspectjJpaTests

+###org/springframework/test/jpa/AbstractJpaTests
@2.5
+#<init>()V
+#setEntityManagerFactory(Ljavax/persistence/EntityManagerFactory;)V
+#setDirty()V
+#runBare()V
@4.0.0.RELEASE
-###org/springframework/test/jpa/AbstractJpaTests

+###org/springframework/test/web/AbstractModelAndViewTests
@2.5
+#<init>()V
@4.0.0.RELEASE
-###org/springframework/test/web/AbstractModelAndViewTests

+###org/springframework/test/context/MetaAnnotationUtils$AnnotationDescriptor
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V
+#<init>(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V
+#getRootDeclaringClass()Ljava/lang/Class;
+#getDeclaringClass()Ljava/lang/Class;
+#getAnnotation()Ljava/lang/annotation/Annotation;
+#getAnnotationType()Ljava/lang/Class;
+#getAnnotationAttributes()Lorg/springframework/core/annotation/AnnotationAttributes;
+#getComposedAnnotation()Ljava/lang/annotation/Annotation;
+#getComposedAnnotationType()Ljava/lang/Class;
+#toString()Ljava/lang/String;
@4.0.3.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V
-#<init>(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V
@4.1.0.RELEASE
-###org/springframework/test/context/MetaAnnotationUtils$AnnotationDescriptor

+###org/springframework/test/context/MetaAnnotationUtils$UntypedAnnotationDescriptor
@4.0.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V
+#<init>(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V
@4.0.3.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V
-#<init>(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)V
@4.1.0.RELEASE
-###org/springframework/test/context/MetaAnnotationUtils$UntypedAnnotationDescriptor

+###org/springframework/test/util/TestSocketUtils
@5.3.24
+#<init>()V
+#findAvailableTcpPort()I

+###org/springframework/test/context/ApplicationContextFailureProcessor
@6.0.0
+#processLoadFailure(Lorg/springframework/context/ApplicationContext;Ljava/lang/Throwable;)V

+###org/springframework/test/context/BootstrapUtils
@6.0.0
+#<init>()V
+#resolveTestContextBootstrapper(Ljava/lang/Class;)Lorg/springframework/test/context/TestContextBootstrapper;

+###org/springframework/test/context/util/TestContextSpringFactoriesUtils
@6.0.0
+#loadFactoryImplementations(Ljava/lang/Class;)Ljava/util/List;

+###org/springframework/test/context/aot/AotContextLoader
@6.0.0
+#loadContextForAotProcessing(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#loadContextForAotRuntime(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/context/ApplicationContext;

+###org/springframework/test/context/aot/TestRuntimeHintsRegistrar
@6.0.0
+#registerHints(Lorg/springframework/aot/hint/RuntimeHints;Ljava/lang/Class;Ljava/lang/ClassLoader;)V

+###org/springframework/test/context/aot/TestContextAotGenerator
@6.0.0
+#<init>(Lorg/springframework/aot/generate/GeneratedFiles;)V
+#<init>(Lorg/springframework/aot/generate/GeneratedFiles;Lorg/springframework/aot/hint/RuntimeHints;)V
+#getRuntimeHints()Lorg/springframework/aot/hint/RuntimeHints;
+#processAheadOfTime(Ljava/util/stream/Stream;)V

+###org/springframework/test/context/aot/AotTestExecutionListener
@6.0.0
+#processAheadOfTime(Lorg/springframework/aot/hint/RuntimeHints;Ljava/lang/Class;Ljava/lang/ClassLoader;)V

+###org/springframework/test/context/aot/TestContextAotException
@6.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/test/context/aot/AotTestContextInitializers
@6.0.0
+#<init>()V
+#isSupportedTestClass(Ljava/lang/Class;)Z
+#getContextInitializer(Ljava/lang/Class;)Lorg/springframework/context/ApplicationContextInitializer;
+#getContextInitializerClass(Ljava/lang/Class;)Ljava/lang/Class;

+###org/springframework/test/context/aot/TestAotProcessor
@6.0.0

+###org/springframework/test/context/aot/AotTestAttributes
@6.0.0
+#getInstance()Lorg/springframework/test/context/aot/AotTestAttributes;
+#setAttribute(Ljava/lang/String;Ljava/lang/String;)V
+#setAttribute(Ljava/lang/String;Z)V
+#removeAttribute(Ljava/lang/String;)V
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;)Z

+###org/springframework/test/context/ContextLoadException
@6.0.0
+#<init>(Lorg/springframework/context/ApplicationContext;Ljava/lang/Throwable;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;

+###org/springframework/mock/http/server/reactive/MockServerWebExchange
@5.0.0.RELEASE
+#<init>(Lorg/springframework/mock/http/server/reactive/MockServerHttpRequest;)V
+#getResponse()Lorg/springframework/mock/http/server/reactive/MockServerHttpResponse;
+#getResponse()Lorg/springframework/http/server/reactive/ServerHttpResponse;
@5.0.1.RELEASE
-###org/springframework/mock/http/server/reactive/MockServerWebExchange

+###org/springframework/test/web/client/response/ExecutingResponseCreator
@6.0.4
+#<init>(Lorg/springframework/http/client/ClientHttpRequestFactory;)V
+#createResponse(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/test/web/servlet/ResultActionsDsl$andExpectAll$softActions$1
@6.0.4
+#andExpect(Lorg/springframework/test/web/servlet/ResultMatcher;)Lorg/springframework/test/web/servlet/ResultActions;
+#andDo(Lorg/springframework/test/web/servlet/ResultHandler;)Lorg/springframework/test/web/servlet/ResultActions;
+#andReturn()Lorg/springframework/test/web/servlet/MvcResult;
